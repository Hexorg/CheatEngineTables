<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(geteax)
registersymbol(geteax)
aobscan(health,D9 40 30 5F D8 70 2C 5E 5B D9 5D 08 D9 45 08 5D C2 04 00 D9 EE 5F 5E 5B 5D C2 04 00)
registersymbol(health)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fld dword ptr [eax+2c]
fstp dword ptr [eax+30]
mov [geteax],eax
originalcode:
fld dword ptr [eax+30]
pop edi
fdiv dword ptr [eax+2C]

exit:
jmp returnhere
geteax:
dd 0
health://"BrutalLegend.exe"+38F135:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
health://
fld dword ptr [eax+30]
pop edi
fdiv dword ptr [eax+2C]
//Alt: db D9 40 30 5F D8 70 2C
unregistersymbol(health)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <Description>Inf.Health</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"guiter"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(quiter,D9 87 08 05 00 00 D8 64 24 10 D9 5C 24 10 D9 44 24 10)
registersymbol(quiter)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [edi+00000508],0
originalcode:
fld dword ptr [edi+00000508]

exit:
jmp returnhere

quiter://"BrutalLegend.exe"+4018B8:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
quiter://
fld dword ptr [edi+00000508]
//Alt: db D9 87 08 05 00 00
unregistersymbol(quiter)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>113</Key>
          </Keys>
          <Description>No Guitar Overheat </Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"1 hit"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(onehit,D8 5B 30 DF E0 F6 C4 01)
registersymbol(onehit)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [geteax],ebx
je originalcode
cmp [ebx+44],1
jne originalcode
cmp [ebx+30],(float)1
js originalcode
mov [ebx+30],(float)1
originalcode:
fcomp dword ptr [ebx+30]
fnstsw ax

exit:
jmp returnhere

onehit://"BrutalLegend.exe"+44BFA0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
onehit://
fcomp dword ptr [ebx+30]
fnstsw ax
//Alt: db D8 5B 30 DF E0
unregistersymbol(onehit)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>114</Key>
          </Keys>
          <Description>1 Hit Kill</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"timer"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(timer,D9 40 24 D9 5D FC D9 40 24 D8 70 20)
registersymbol(timer)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fld dword ptr [eax+20]
fstp dword ptr [eax+24]
originalcode:
fld dword ptr [eax+24]
fstp dword ptr [ebp-04]

exit:
jmp returnhere

timer://"BrutalLegend.exe"+3E0BD2:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
timer://
fld dword ptr [eax+24]
fstp dword ptr [ebp-04]
//Alt: db D9 40 24 D9 5D FC
unregistersymbol(timer)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>115</Key>
          </Keys>
          <Description>Freeze Mission Timer</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"recruits limit"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(limit,8B BC 32 54 02 00 00)
registersymbol(limit)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
MOV [edx+esi+00000254],0
originalcode:
mov edi,[edx+esi+00000254]

exit:
jmp returnhere

limit://"BrutalLegend.exe"+5001AB:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
limit://
mov edi,[edx+esi+00000254]
//Alt: db 8B BC 32 54 02 00 00
unregistersymbol(limit)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>116</Key>
          </Keys>
          <Description>No Recruiting Limit</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"fans"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(fans,8B 84 32 4C 02 00 00 89 44 24 2C 85 FF)
registersymbol(fans)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edx+esi+0000024C],#999999
jae originalcode
MOV [edx+esi+0000024C],#999999
originalcode:
mov eax,[edx+esi+0000024C]

exit:
jmp returnhere

fans://"BrutalLegend.exe"+500175:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
fans://
mov eax,[edx+esi+0000024C]
//Alt: db 8B 84 32 4C 02 00 00
unregistersymbol(fans)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>117</Key>
          </Keys>
          <Description>Inf.Fans</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"instant units recruiting"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(fansrecr,D9 40 08 D8 70 0C D9 5D FC D9 45 FC)
registersymbol(fansrecr)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push esi
mov esi,[eax+c]
cmp esi,[eax+8]
jbe originalcode
mov [eax+8],esi
originalcode:
pop esi
fld dword ptr [eax+08]
fdiv dword ptr [eax+0C]

exit:
jmp returnhere

fansrecr://"BrutalLegend.exe"+439720:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
fansrecr://
fld dword ptr [eax+08]
fdiv dword ptr [eax+0C]
//Alt: db D9 40 08 D8 70 0C
unregistersymbol(fansrecr)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>118</Key>
          </Keys>
          <Description>Instant Units Recruiting</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"money"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(cash,D9 84 B0 68 04 00 00 8B 4B 08 5F D9 19)
registersymbol(cash)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [eax+esi*4+00000468],(float)99999
jae originalcode
mov [eax+esi*4+00000468],(float)99999
originalcode:
fld dword ptr [eax+esi*4+00000468]

exit:
jmp returnhere

cash://"BrutalLegend.exe"+361922:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
cash://
fld dword ptr [eax+esi*4+00000468]
//Alt: db D9 84 B0 68 04 00 00
unregistersymbol(cash)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <Description>Inf.Money</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>

  <UserdefinedSymbols/>
  <Comments>Info about this table:
</Comments>
</CheatTable>
