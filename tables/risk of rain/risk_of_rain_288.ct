<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>66</ID>
      <Description>"Instant Cooldown"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(CoolAOB,55 33 DB 33 ED 38)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(CoolStart)
label(CoodData)
registersymbol(CoolStart)
registersymbol(CoodData)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push ebp
xor ebx,ebx
xor ebp,ebp
//mov [esi+98],#0 //Item
mov [esi+a0],#-1 //skill 1
mov [esi+a4],#-1 //skill 2
mov [esi+a8],#-1 //skill 3
mov [esi+ac],#-1 //skill 4

exit:
jmp returnhere

CoodData:

CoolAOB:
CoolStart:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
CoolStart:
db 55 33 DB 33 ED
unregistersymbol(CoolStart)
unregistersymbol(CoodData)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>109</ID>
      <Description>"Instant Cooldown V2"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(Skill2AOB,88 46 50 C6 46 04 00)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(Skill2Start)
registersymbol(Skill2Start)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [esi+50],al
mov byte ptr [esi+04],00
//mov [esi+98],#0 //Item
mov [esi+a0],#-1 //skill 1
mov [esi+a4],#-1 //skill 2
mov [esi+a8],#-1 //skill 3
mov [esi+ac],#-1 //skill 4

exit:
jmp returnhere

Skill2AOB:
Skill2Start:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Skill2Start:
db 88 46 50 C6 46 04 00
unregistersymbol(Skill2Start)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>83</ID>
      <Description>"Cheat Script 1"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(Cheat1AOB,DD 03 DD 1E 5E 5b c3)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(CheatData)
label(Timer)
label(Money)
label(ShrineCost)
label(ShrineCount)
label(SkillCount)
label(Cheat1Start)
registersymbol(Cheat1Start)
registersymbol(CheatData)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
SkillCount:
cmp [ebx+10],#100481
jne ShrineCost
cmp byte ptr [CheatData+2],1
jne originalcode
mov [ebx+4],#1075314688

ShrineCost:
cmp [ebx+10],#100148
jne ShrineCount
cmp byte ptr [CheatData],1
jne originalcode
mov [ebx+4],0

ShrineCount:
cmp [ebx+10],#100155
jne Timer
cmp byte ptr [CheatData+1],1
jne originalcode
mov [ebx+4],#1078525952

Timer:
cmp [ebx+10],#100146
jne Money
mov [CheatData+10],ebx

Money:
cmp [ebx+10],#100192
jne originalcode
mov [CheatData+14],ebx

originalcode:
fld qword ptr [ebx]
fstp qword ptr [esi]
pop esi

exit:
jmp returnhere

CheatData:

Cheat1AOB:
Cheat1Start:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Cheat1Start:
db DD 03 DD 1E 5E
unregistersymbol(CheatData)
unregistersymbol(Cheat1Start)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>102</ID>
          <Description>"Free Chests"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="09140093"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>CheatData</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"Unlimited Shrine Use"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="09140094"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>CheatData+1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>86</ID>
          <Description>"Minutes Passed (Difficulty)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>CheatData+10</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>93</ID>
          <Description>"Money"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>CheatData+14</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>97</ID>
      <Description>"Cheat Script 2"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(Cheat2AOB,8B 4C B1 04 5E 85 C9)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(KillAll)
label(exit)
label(GodData)
label(Cheat2Start)
registersymbol(Cheat2Start)
registersymbol(GodData)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[ecx+esi*4+04]
cmp [eax+18],#100066
jne originalcode
mov eax,[ecx+esi*4-8]
cmp [eax+18],#100191
jne KillAll
mov eax,[ecx+esi*4+04]
cmp [GodData],1
jne originalcode
mov [eax+c],#1083129856
jmp originalcode
KillAll:
mov eax,[ecx+esi*4+04]
cmp [GodData+4],1
jne originalcode
mov [eax+c],#0

originalcode:
pop eax
mov ecx,[ecx+esi*4+04]
pop esi

exit:
jmp returnhere

GodData:

Cheat2AOB:
Cheat2Start:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Cheat2Start:
db 8B 4C B1 04 5E
unregistersymbol(GodData)
unregistersymbol(Cheat2Start)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>107</ID>
          <Description>"God Mode"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="09150063"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>GodData</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>108</ID>
          <Description>"Kill Most Enemies"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="09150067"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>GodData+4</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
