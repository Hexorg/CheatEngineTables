<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>8</ID>
      <Description>"[X] &lt;== Total Annihilation v3.1.0.0 Steam Script v1.1 AOB"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Total Annihilation
 Game Version  : 3.1.0.0 (steam)
 Game Sponsor  : Myself
 Process Name  : TotalA.exe
 Relevant Info : GOG/32bits (not aligned)/RTS/[My 1st Script for CE6.5]
 Script Version: 1.0
 CE Version    : 6.5
 Release date  : 31-Dec-2015
 Author        : Recifense
 History:
 31-Dec-15: First Release
 Features:
 - Full Resources
 - God Mode
 - Some Pointers
===========================================
}

//=========================================
// Checking CE version
{$lua}
  if(getCEVersion() &lt; 6.5) then
    ShowMessage('Sorry. CE version should be 6.5 or above')
  end
{$asm}

//=========================================
// Checking Selected Process
{$lua}
  if(process == nil) then
    ShowMessage('No process was selected')
  elseif (process ~= "TotalA.exe") then
    ShowMessage('Error. Expected Process = TotalA.exe')
  end
{$asm}

//=========================================
// Definitions
define(LUDO,"TotalA.exe")
//define(MOHP,TotalA.exe+00068edb)
//define(GDMD,TotalA.exe+00089eb5)
//define(MOUU,TotalA.exe+0006af4a)

//=========================================
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.5)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

AOBScanModule(MOHP,TotalA.exe,d9 85 98 00 00 00 8b f0 e8 ?? ?? ?? ?? 2b c6 ?? ?? 99 83 e2 07)
AOBScanModule(GDMD,TotalA.exe,66 29 86 08 01 00 00 66 83 be 08 01 00 00 00 ?? ?? 8b 86 96 00)
AOBScanModule(MOUU,TotalA.exe,8b 8f 92 00 00 00 8b 15 ?? ?? ?? ?? 8b 81 45 02 00 00 8b 8a e9)

//=========================================
alloc(MyCode,4096,$process)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)
label(_MonUnitUndercursor)
label(_BackMUU)
label(_ExitMUU)

label(iEnableMPR)
label(iEnableGMD)

label(pPlayer)
label(pUnit)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMPR)
registersymbol(iEnableGMD)
registersymbol(pPlayer)
registersymbol(pUnit)

registersymbol(MOHP)
registersymbol(GDMD)
registersymbol(MOUU)

//=========================================
MyCode:
//=========================================
// At main game screen
_MonHumanPlayer:
 push eax

 movzx eax,word ptr [ebp+04]
 test eax,eax
 jnz _ExitMHP

 mov [pPlayer],ebp

 cmp dword ptr [iEnableMPR],0
 je _ExitMHP                       // Jump if feature is disabled

 mov eax,[ebp+000000a8]
 mov [ebp+00000098],eax
 mov eax,[ebp+000000a4]
 mov [ebp+0000008c],eax

_ExitMHP:
 pop eax

 fld dword ptr [ebp+00000098]      // Original code (get Metal)
 jmp _BackMHP                      // Back to main code

//=========================================
// During Combat
_GodMode:
 push ebx

 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 mov ebx,[pPlayer]
 cmp ebx,[esi+000000ec]
 jne _ExitGMD

 xor eax,eax

_ExitGMD:
 pop ebx

 sub [esi+00000108],ax             // Original code (dec HP)
 jmp _BackGMD                      // Back to main code

//=========================================
// Unit Under Cursor (just for debugging)
_MonUnitUndercursor:
 mov [pUnit],edi

_ExitMUU:
 mov ecx,[edi+00000092]            // Original code (set paName)
 jmp _BackMUU                      // Back to main code

//=========================================
 db '===========================================&gt;'
 db 'CE6.5 Script by Recifense 123115'
//=========================================
// Variables
iEnableMPR:
 dd 0
iEnableGMD:
 dd 0
pPlayer:
 dd MyCode
pUnit:
 dd 0

//=========================================
// Hacking Points
MOHP:
 jmp _MonHumanPlayer
 nop
_BackMHP:

GDMD:
 jmp _GodMode
 nop
 nop
_BackGMD:

MOUU:
 jmp _MonUnitUndercursor
 nop
_BackMUU:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MOHP:
// fld dword ptr [ebp+00000098]
 db d9 85 98 00 00 00

GDMD:
// sub [esi+00000108],ax
 db 66 29 86 08 01 00 00

MOUU:
// mov ecx,[edi+00000092]
 db 8b 8f 92 00 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMPR)
unregistersymbol(iEnableGMD)
unregistersymbol(pPlayer)
unregistersymbol(pUnit)

unregistersymbol(MOHP)
unregistersymbol(GDMD)
unregistersymbol(MOUU)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>142</ID>
          <Description>"[X] &lt;== Full Resources ---------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMPR",1)
getAddressList().getMemoryRecordByID(142).Color=0x00008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMPR",0)
getAddressList().getMemoryRecordByID(142).Color=0x00c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>96</ID>
          <Description>"[X] &lt;== God Mode ----------------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableGMD",1)
getAddressList().getMemoryRecordByID(96).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableGMD",0)
getAddressList().getMemoryRecordByID(96).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"[X] &lt;== Table/Script Information"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
getMainForm().CommentButton.doClick()
{$ASM}

[disable]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Recifense</Name>
      <Address>20151231</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Total Annihilation
 Game Version  : 3.1.0.0 (steam)
 Game Sponsor  : Myself
 Process Name  : TotalA.exe
 Relevant Info : GOG/32bits (not aligned)/RTS/[My 1st Script for CE6.5]
 Script Version: 1.0
 CE Version    : 6.5
 Release date  : 31-Dec-2015
 Author        : Recifense
 History:
 31-Dec-15: First Release
 Features:
 - Full Resources  [1]
 - God Mode        [2]
 - Some Pointers
===========================================
[1] For human player only;
[2] For human player's units only;
===========================================
[USAGE]
1) Run CE65;
2) Run Game;
3) Load the game process "TotalA.exe" in CE;
4) Load this table and activate the main script;
5) Now Activate the script of each cheat you want to use;
6) Game On;
===========================================
[HOTKEYS]
CTRL+Home      = Activate   ALL cheats;
CTRL+End       = Deactivate ALL cheats;
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat. So you can always come back in case you don't like the result.
===========================================
[INFO]
Tested on Win 10 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
