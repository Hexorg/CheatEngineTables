<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Health"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pHero)
registersymbol(pHero)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHero],eax

originalcode:
comiss xmm0,[eax+00000120]

exit:
jmp returnhere

///
pHero:
dd 0
///

"Dead Space.exe"+126FE9:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dead Space.exe"+126FE9:
db 0F 2F 80 20 01 00 00
//Alt: comiss xmm0,[eax+00000120]
unregistersymbol(pHero)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>18</Key>
            <Key>97</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Undead"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [edi+00000120],xmm0

pushfd
cmp [pHero],edi
jne originalcode
cmp [edi+00000120],(float)1.0
jge originalcode
mov [edi+00000120],(float)1.0
movss xmm0,[edi+00000120]

originalcode:
popfd
//movss [edi+00000120],xmm0

exit:
jmp returnhere

"Dead Space.exe"+5D67D:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dead Space.exe"+5D67D:
db F3 0F 11 87 20 01 00 00
//Alt: movss [edi+00000120],xmm0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>98</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Inf. Stasis"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
movss [esi+00000128],xmm0

cmp [pHero],esi
jne originalcode2
cmp dword ptr [esi+00000128],(float)20.0
jge originalcode2
mov dword ptr [esi+00000128],(float)20.0

originalcode2:
//movss [esi+00000128],xmm0

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [esi+00000128],xmm0

mov [pHero],esi
cmp dword ptr [esi+00000128],(float)20.0
jge originalcode
mov dword ptr [esi+00000128],(float)20.0

originalcode:
//movss [esi+00000128],xmm0

exit:
jmp returnhere

"Dead Space.exe"+1281DF:
jmp newmem2
nop
nop
nop
returnhere2:

"Dead Space.exe"+1259AD:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"Dead Space.exe"+1281DF:
db F3 0F 11 86 28 01 00 00
//Alt: movss [esi+00000128],xmm0
dealloc(newmem)
"Dead Space.exe"+1259AD:
db F3 0F 11 86 28 01 00 00
//Alt: movss [esi+00000128],xmm0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>98</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>120</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>11C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"Bar"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>124</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Stasis"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>128</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>42</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>12C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>57</ID>
      <Description>"Oxygen"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pOxygen)
registersymbol(pOxygen)

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pOxygen],esi

originalcode2:
movss xmm0,[esi+70]

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pOxygen],esi

originalcode:
comiss xmm0,[esi+70]
xorps xmm1,xmm1

exit:
jmp returnhere

///
pOxygen:
dd 0
///

"Dead Space.exe"+29AD3:
jmp newmem2
returnhere2:

"Dead Space.exe"+13571E:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"Dead Space.exe"+29AD3:
db F3 0F 10 46 70
//Alt: movss xmm0,[esi+70]
dealloc(newmem)
"Dead Space.exe"+13571E:
db 0F 2F 46 70 0F 57 C9
//Alt: comiss xmm0,[esi+70]
//Alt: xorps xmm1,xmm1
unregistersymbol(pOxygen)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>18</Key>
            <Key>97</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>59</ID>
          <Description>"Inf. Oxygen"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [esi+70],xmm0

cmp [pOxygen],esi
jne originalcode
cmp dword ptr [esi+70],(float)40.0
jge originalcode
mov dword ptr [esi+70],(float)40.0

originalcode:
//movss [esi+70],xmm0

exit:
jmp returnhere

"Dead Space.exe"+13569A:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dead Space.exe"+13569A:
db F3 0F 11 46 70
//Alt: movss [esi+70],xmm0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>98</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"Amount"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pOxygen</Address>
          <Offsets>
            <Offset>70</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Ammo"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pAmmoClip)
registersymbol(pAmmoClip)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAmmoClip],eax

originalcode:
mov ecx,[eax+00000684]

exit:
jmp returnhere

///
pAmmoClip:
dd 0
///

"Dead Space.exe"+F9101:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dead Space.exe"+F9101:
db 8B 88 84 06 00 00
//Alt: mov ecx,[eax+00000684]
unregistersymbol(pAmmoClip)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>18</Key>
            <Key>97</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Inf. Ammo"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem11,2048) //2kb should be enough
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pAmmoClip],ecx
jne originalcode11
cmp [ecx+00000684],eax
jge originalcode11
mov [ecx+00000684],eax

originalcode11:
cmp [ecx+00000684],eax

exit11:
jmp returnhere11

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp [pAmmoClip],esi
jne originalcode6
mov [esi+00000684],00000001
jmp exit6

originalcode6:
mov [esi+00000684],00000000

exit6:
popfd
jmp returnhere6

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+00000684],edi

pushfd
cmp [pAmmoClip],esi
jne originalcode2
cmp dword ptr [esi+00000684],01
jge originalcode2
mov dword ptr [esi+00000684],01

originalcode2:
popfd
//mov [esi+00000684],edi

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ecx+0000031C],edx

pushfd
push eax
mov eax,[pAmmoClip]
cmp [esp+20],eax
pop eax
jne originalcode
cmp [ecx+0000031C],#10
jge originalcode
mov [ecx+0000031C],#10

originalcode:
popfd
//mov [ecx+0000031C],edx

exit:
jmp returnhere

"Dead Space.exe"+F9177:
jmp newmem11
nop
returnhere11:

"Dead Space.exe"+F9316:
jmp newmem6
nop
nop
nop
nop
nop
returnhere6:

"Dead Space.exe"+F930E:
jmp newmem2
nop
returnhere2:

"Dead Space.exe"+114BA1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
"Dead Space.exe"+F9177:
db 39 81 84 06 00 00
//Alt: cmp [ecx+00000684],eax
dealloc(newmem6)
"Dead Space.exe"+F9316:
db C7 86 84 06 00 00 00 00 00 00
//Alt: mov [esi+00000684],00000000
dealloc(newmem2)
"Dead Space.exe"+F930E:
db 89 BE 84 06 00 00
//Alt: mov [esi+00000684],edi
dealloc(newmem)
"Dead Space.exe"+114BA1:
db 89 91 1C 03 00 00
//Alt: mov [ecx+0000031C],edx
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>98</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>32</ID>
              <Description>"Ammo Control"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp [edi+320],1
je originalcode
cmp [edi+320],3
je originalcode

//mov dword ptr [edi+320],#800
/*mov eax,[edi+320]
sub eax,[ebx+31c]
cmp [edi+0000031C],eax
jl originalcode
sub [edi+0000031C],eax*/
/*mov eax,[edi+320]
cmp [edi+31c],eax
jne originalcode
mov eax,[ebx+31c]
sub [edi+31c],eax*/
mov eax,[ebx+31c]
add eax,[edi+31c]
cmp [edi+320],eax
jge originalcode
mov eax,[edi+320]
sub eax,[ebx+31c]
mov [edi+31c],eax

originalcode:
popfd
mov esi,[edi+0000031C]

exit:
jmp returnhere

"Dead Space.exe"+10D498:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dead Space.exe"+10D498:
db 8B B7 1C 03 00 00
//Alt: mov esi,[edi+0000031C]
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>98</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Deactivate</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>98</Key>
                  </Keys>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Max Reload"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp [pAmmoClip],esi
jne originalcode
mov [esi+684],ecx
mov eax,[esi+684]
popfd

originalcode:
mov [esi+00000684],eax

exit:
jmp returnhere

"Dead Space.exe"+F9359:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dead Space.exe"+F9359:
db 89 86 84 06 00 00
//Alt: mov [esi+00000684],eax
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>98</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Clip"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pAmmoClip</Address>
          <Offsets>
            <Offset>684</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"t0"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pAmmoClip</Address>
          <Offsets>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"t1"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pAmmoClip</Address>
          <Offsets>
            <Offset>698</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"t2"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pAmmoClip</Address>
          <Offsets>
            <Offset>7C0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"Power Nodes"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pNodes)
registersymbol(pNodes)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pNodes],ecx

originalcode:
mov eax,[ecx+00000594]

exit:
jmp returnhere

///
pNodes:
dd 0
///

"Dead Space.exe"+121610:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dead Space.exe"+121610:
db 8B 81 94 05 00 00
//Alt: mov eax,[ecx+00000594]
unregistersymbol(pNodes)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>18</Key>
            <Key>97</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Inf. Power Nodes"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pNodes],ecx
jne originalcode
cmp [ecx+594],eax
jle originalcode
mov eax,[ecx+594]

originalcode:
mov [ecx+00000594],eax

exit:
jmp returnhere

"Dead Space.exe"+121624:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dead Space.exe"+121624:
db 89 81 94 05 00 00
//Alt: mov [ecx+00000594],eax
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>98</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Quantity"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pNodes</Address>
          <Offsets>
            <Offset>594</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>49</ID>
      <Description>"Credits"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pCredits)
registersymbol(pCredits)

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCredits],ecx

originalcode6:
mov eax,[ecx+00000CE4]

exit6:
jmp returnhere6

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCredits],ecx

originalcode2:
cmp eax,[ecx+00000CE4]

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCredits],edx

originalcode:
mov eax,[edx+00000CE4]

exit:
jmp returnhere

///
pCredits:
dd 0
///

"Dead Space.exe"+DDA1C5:
jmp newmem6
nop
returnhere6:

"Dead Space.exe"+DDA637:
jmp newmem2
nop
returnhere2:

"Dead Space.exe"+1808E7:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
"Dead Space.exe"+DDA1C5:
db 8B 81 E4 0C 00 00
//Alt: mov eax,[ecx+00000CE4]
dealloc(newmem2)
"Dead Space.exe"+DDA637:
db 3B 81 E4 0C 00 00
//Alt: cmp eax,[ecx+00000CE4]
dealloc(newmem)
"Dead Space.exe"+1808E7:
db 8B 82 E4 0C 00 00
//Alt: mov eax,[edx+00000CE4]
unregistersymbol(pCredits)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>18</Key>
            <Key>97</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Inf. Credits"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[pCredits]
add eax,ce4
sub eax,48
cmp ecx,eax
pop eax
jne originalcode2
cmp [ecx+48],eax
jle originalcode2
mov eax,[ecx+48]

originalcode2:
cmp ecx,000F423F

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[pCredits]
add eax,ce4
sub eax,48
cmp ecx,eax
pop eax
jne originalcode
cmp [ecx+48],eax
jle originalcode
mov eax,[ecx+48]

originalcode:
cmp eax,000F423F

exit:
jmp returnhere

"Dead Space.exe"+1A1007:
jmp newmem2
nop
returnhere2:

"Dead Space.exe"+3D9F8:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"Dead Space.exe"+1A1007:
db 81 F9 3F 42 0F 00
//Alt: cmp ecx,000F423F
dealloc(newmem)
"Dead Space.exe"+3D9F8:
db 3D 3F 42 0F 00
//Alt: cmp eax,000F423F
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>98</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Amount"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pCredits</Address>
          <Offsets>
            <Offset>CE4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Items"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(pItem,2048)
registersymbol(pItem)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pItem+edi*4],eax

originalcode:
mov eax,[eax+0000031C]

exit:
jmp returnhere

"Dead Space.exe"+1B5C23:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dead Space.exe"+1B5C23:
db 8B 80 1C 03 00 00
//Alt: mov eax,[eax+0000031C]
unregistersymbol(pItem)
dealloc(pItem)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>18</Key>
            <Key>97</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Slots"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>6</ID>
              <Description>"Slot 1-1"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Slot 1-2"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+4</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Slot 1-3"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+8</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Slot 1-4"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+c</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>10</ID>
              <Description>"Slot 1-5"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+10</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>"Slot 2-1"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+14</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>12</ID>
              <Description>"Slot 2-2"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+18</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>13</ID>
              <Description>"Slot 2-3"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+1c</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>14</ID>
              <Description>"Slot 2-4"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+20</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"Slot 2-5"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+24</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"Slot 3-1"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+28</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>17</ID>
              <Description>"Slot 3-2"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+2c</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"Slot 3-3"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+30</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19</ID>
              <Description>"Slot 3-4"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+34</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>20</ID>
              <Description>"Slot 3-5"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+38</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Slot 4-1"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+3c</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Slot 4-2"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+40</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Slot 4-3"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+44</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Slot 4-4"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+48</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>25</ID>
              <Description>"Slot 4-5"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+4c</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>26</ID>
              <Description>"Slot 5-1"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+50</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>27</ID>
              <Description>"Slot 5-2"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+54</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"Slot 5-3"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+58</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>29</ID>
              <Description>"Slot 5-4"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+5c</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>30</ID>
              <Description>"Slot 5-5"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+60</Address>
              <Offsets>
                <Offset>31C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>64</ID>
      <Description>"[old / testing]"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Inf. Hull Integrity"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pHullHealth)
registersymbol(pHullHealth)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [ebx+00000794],xmm0

mov [pHullHealth],ebx
cmp dword ptr [ebx+794],(float)50.0
jge originalcode
mov dword ptr [ebx+794],(float)50.0

originalcode:
movss [ebx+00000794],xmm0

exit:
jmp returnhere

///
pHullHealth:
dd 0
///

"Dead Space.exe"+1BE9AC:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dead Space.exe"+1BE9AC:
db F3 0F 11 83 94 07 00 00
//Alt: movss [ebx+00000794],xmm0
unregistersymbol(pHullHealth)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Hull Integrity"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHullHealth</Address>
          <Offsets>
            <Offset>794</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>17D01680</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>1D22DB00</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>07BF3DEC</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>ammo read 1 Code :mov ecx,[eax+00000684]</Description>
      <Address>004F9101</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>F9101</ModuleNameOffset>
      <Before>
        <Byte>5B</Byte>
        <Byte>59</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>51</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>88</Byte>
        <Byte>84</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>88</Byte>
        <Byte>8C</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo read 2 (ready) Code :mov eax,[esi+00000684]</Description>
      <Address>004F88A3</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>F88A3</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>C0</Byte>
        <Byte>BC</Byte>
        <Byte>74</Byte>
        <Byte>2B</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>84</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>B6</Byte>
        <Byte>C0</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo cmp 0 Code :cmp dword ptr [edi+00000684],00</Description>
      <Address>004F8EF9</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>F8EF9</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>EB</Byte>
        <Byte>2B</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>BF</Byte>
        <Byte>84</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>74</Byte>
        <Byte>11</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>item - Code :mov [ecx+0000031C],edx</Description>
      <Address>00514BA1</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>114BA1</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>0C</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>91</Byte>
        <Byte>1C</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>7D</Byte>
        <Byte>06</Byte>
        <Byte>D8</Byte>
        <Byte>05</Byte>
        <Byte>D0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo - Code :mov [esi+00000684],edi</Description>
      <Address>004F930E</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>F930E</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>32</Byte>
        <Byte>89</Byte>
        <Byte>F7</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>BE</Byte>
        <Byte>84</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>0A</Byte>
        <Byte>C7</Byte>
        <Byte>86</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo set zero Code :mov [esi+00000684],00000000</Description>
      <Address>004F9316</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>F9316</ModuleNameOffset>
      <Before>
        <Byte>E9</Byte>
        <Byte>09</Byte>
        <Byte>90</Byte>
        <Byte>EB</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
        <Byte>86</Byte>
        <Byte>84</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>56</Byte>
        <Byte>54</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>item load (item menu) Code :mov eax,[eax+0000031C]</Description>
      <Address>005B5C23</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>1B5C23</ModuleNameOffset>
      <Before>
        <Byte>BC</Byte>
        <Byte>85</Byte>
        <Byte>F6</Byte>
        <Byte>74</Byte>
        <Byte>32</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>1C</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>6A</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
        <Byte>E8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo + (reload) Code :mov [esi+00000684],eax</Description>
      <Address>004F9359</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>F9359</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>3B</Byte>
        <Byte>C1</Byte>
        <Byte>77</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>84</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>06</Byte>
        <Byte>89</Byte>
        <Byte>8E</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>dup item (in pack) read (pick up) Code :mov esi,[edi+0000031C]</Description>
      <Address>0050D498</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>10D498</ModuleNameOffset>
      <Before>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>75</Byte>
        <Byte>31</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>B7</Byte>
        <Byte>1C</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>C7</Byte>
        <Byte>E8</Byte>
        <Byte>2B</Byte>
        <Byte>C9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health read 1 Code :comiss xmm0,[eax+00000120]</Description>
      <Address>00526FE9</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>126FE9</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>80</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>72</Byte>
        <Byte>09</Byte>
        <Byte>83</Byte>
        <Byte>B8</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health - Code :movss [edi+00000120],xmm0</Description>
      <Address>0045D67D</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>5D67D</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>CA</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>87</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>76</Byte>
        <Byte>11</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>D8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health read 2 Code :comiss xmm0,[esi+00000120]</Description>
      <Address>00525971</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>125971</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>86</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>7C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health read 3 Code :fld dword ptr [eax+00000120]</Description>
      <Address>00527026</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>127026</ModuleNameOffset>
      <Before>
        <Byte>81</Byte>
        <Byte>28</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>80</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>stasis - Code :movss [esi+00000128],xmm0</Description>
      <Address>005281DF</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>1281DF</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>28</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>stasis write Code :movss [esi+00000128],xmm0</Description>
      <Address>005259AD</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>1259AD</ModuleNameOffset>
      <Before>
        <Byte>76</Byte>
        <Byte>03</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>28</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>5B</Byte>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>pnodes read (item menu / bench) Code :mov eax,[ecx+00000594]</Description>
      <Address>00521610</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>121610</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>81</Byte>
        <Byte>94</Byte>
        <Byte>05</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>pnodes - Code :mov [ecx+00000594],eax</Description>
      <Address>00521624</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>121624</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>81</Byte>
        <Byte>94</Byte>
        <Byte>05</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ read 1 Code :mov eax,[edx+00000CE4]</Description>
      <Address>005808E7</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>1808E7</ModuleNameOffset>
      <Before>
        <Byte>5D</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>53</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>82</Byte>
        <Byte>E4</Byte>
        <Byte>0C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>0D</Byte>
        <Byte>34</Byte>
        <Byte>FA</Byte>
        <Byte>18</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ read 2 Code :cmp eax,[ecx+00000CE4]</Description>
      <Address>011DA637</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>DDA637</ModuleNameOffset>
      <Before>
        <Byte>AF</Byte>
        <Byte>C5</Byte>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>3B</Byte>
        <Byte>81</Byte>
        <Byte>E4</Byte>
        <Byte>0C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>7F</Byte>
        <Byte>6F</Byte>
        <Byte>56</Byte>
        <Byte>8B</Byte>
        <Byte>C7</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ read 3 Code :mov eax,[ecx+00000CE4]</Description>
      <Address>011DA1C5</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>DDA1C5</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>81</Byte>
        <Byte>E4</Byte>
        <Byte>0C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8E</Byte>
        <Byte>C0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ read pre - Code :mov eax,[ecx+48]</Description>
      <Address>0043D9F3</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>3D9F3</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>48</Byte>
      </Actual>
      <After>
        <Byte>03</Byte>
        <Byte>C2</Byte>
        <Byte>3D</Byte>
        <Byte>3F</Byte>
        <Byte>42</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ - Code :mov [ecx+48],eax</Description>
      <Address>0043DA04</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>3DA04</ModuleNameOffset>
      <Before>
        <Byte>B8</Byte>
        <Byte>3F</Byte>
        <Byte>42</Byte>
        <Byte>0F</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>48</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>oxy read 1 Code :comiss xmm0,[esi+70]</Description>
      <Address>0053571E</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>13571E</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>46</Byte>
        <Byte>78</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>46</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C9</Byte>
        <Byte>72</Byte>
        <Byte>56</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>oxy read 2 Code :movss xmm0,[esi+70]</Description>
      <Address>0053578E</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>13578E</ModuleNameOffset>
      <Before>
        <Byte>BC</Byte>
        <Byte>EB</Byte>
        <Byte>02</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>46</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>08</Byte>
        <Byte>13</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>oxy read 3 Code :comiss xmm0,[esi+70]</Description>
      <Address>005357B4</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>1357B4</ModuleNameOffset>
      <Before>
        <Byte>33</Byte>
        <Byte>FF</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>46</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>72</Byte>
        <Byte>41</Byte>
        <Byte>8B</Byte>
        <Byte>17</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>oxy read 4 (vac only) Code :movss xmm0,[esi+70]</Description>
      <Address>00429AD3</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>29AD3</ModuleNameOffset>
      <Before>
        <Byte>04</Byte>
        <Byte>85</Byte>
        <Byte>F6</Byte>
        <Byte>74</Byte>
        <Byte>05</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>46</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>0C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>oxy read pre - Code :movss xmm0,[esi+70]</Description>
      <Address>00535690</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>135690</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>46</Byte>
        <Byte>68</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>46</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>46</Byte>
        <Byte>4C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>oxy - Code :movss [esi+70],xmm0</Description>
      <Address>0053569A</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>13569A</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>46</Byte>
        <Byte>4C</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>46</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>61</Byte>
        <Byte>A8</Byte>
        <Byte>02</Byte>
        <Byte>74</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hull health - Code :movss [ebx+00000794],xmm0</Description>
      <Address>005BE9AC</Address>
      <ModuleName>Dead Space.exe</ModuleName>
      <ModuleNameOffset>1BE9AC</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8D</Byte>
        <Byte>73</Byte>
        <Byte>C4</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>94</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>97</Byte>
        <Byte>20</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>0B080012</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pOxygen</Name>
      <Address>0B090812</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoClip</Name>
      <Address>0B0A0011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pNodes</Name>
      <Address>0B0B0011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCredits</Name>
      <Address>0B0C1011</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
