<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>4</ID>
      <Description>"iNFiNITE WEAPON DURABiLiTY"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteWeaponDurability,gamedll_x64_rwdi.dll,F3 0F 11 77 04 FF) // should be unique
registersymbol(_InfiniteWeaponDurability)
_InfiniteWeaponDurability:
  db F3 0F 11 47 04

[DISABLE]
unregistersymbol(_InfiniteWeaponDurability)
_InfiniteWeaponDurability:
  db F3 0F 11 77 04
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"iNFiNITE MELEE STAMiNA"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteMeleeStamina,gamedll_x64_rwdi.dll,13 00 0F 57 C9 0F 2F C1 76 18 80 7B 20 00 75 0A F3 0F 10 43 10) // should be unique
alloc(newmem,$1000,gamedll_x64_rwdi.dll)
label(code)
label(return)

newmem:
  mov [rbx+10],(float)1
code:
  movss xmm0,[rbx+10]
  jmp return

_InfiniteMeleeStamina+10:
  jmp newmem
return:
registersymbol(_InfiniteMeleeStamina)

[DISABLE]

_InfiniteMeleeStamina+10:
  db F3 0F 10 43 10

unregistersymbol(_InfiniteMeleeStamina)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+980DC3

"gamedll_x64_rwdi.dll"+980DA0: 40 53                    -  push rbx
"gamedll_x64_rwdi.dll"+980DA2: 48 83 EC 20              -  sub rsp,20
"gamedll_x64_rwdi.dll"+980DA6: 48 8B 99 98 11 00 00     -  mov rbx,[rcx+00001198]
"gamedll_x64_rwdi.dll"+980DAD: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+980DB0: E8 0B 01 13 00           -  call gamedll_x64_rwdi.dll+AB0EC0
"gamedll_x64_rwdi.dll"+980DB5: 0F 57 C9                 -  xorps xmm1,xmm1
"gamedll_x64_rwdi.dll"+980DB8: 0F 2F C1                 -  comiss xmm0,xmm1
"gamedll_x64_rwdi.dll"+980DBB: 76 18                    -  jna gamedll_x64_rwdi.dll+980DD5
"gamedll_x64_rwdi.dll"+980DBD: 80 7B 20 00              -  cmp byte ptr [rbx+20],00
"gamedll_x64_rwdi.dll"+980DC1: 75 0A                    -  jne gamedll_x64_rwdi.dll+980DCD
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+980DC3: F3 0F 10 73 10           -  movss xmm6,[rbx+10]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+980DC8: 0F 2F C1                 -  comiss xmm0,xmm1
"gamedll_x64_rwdi.dll"+980DCB: 77 08                    -  ja gamedll_x64_rwdi.dll+980DD5
"gamedll_x64_rwdi.dll"+980DCD: B0 01                    -  mov al,01
"gamedll_x64_rwdi.dll"+980DCF: 48 83 C4 20              -  add rsp,20
"gamedll_x64_rwdi.dll"+980DD3: 5B                       -  pop rbx
"gamedll_x64_rwdi.dll"+980DD4: C3                       -  ret 
"gamedll_x64_rwdi.dll"+980DD5: 32 C0                    -  xor al,al
"gamedll_x64_rwdi.dll"+980DD7: 48 83 C4 20              -  add rsp,20
"gamedll_x64_rwdi.dll"+980DDB: 5B                       -  pop rbx
"gamedll_x64_rwdi.dll"+980DDC: C3                       -  ret 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"iNFiNITE HEALTH"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2015-01-31
  Author : Schr4nzi

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(_InfiniteHealth,gamedll_x64_rwdi.dll,F3 0F 10 81 D4 10 00 00) // should be unique
alloc(newmem,$1000,gamedll_x64_rwdi.dll)

label(code)
label(return)

newmem:
  mov [rcx+000010D4],(float)100
code:
  movss xmm0,[rcx+000010D4]
  jmp return

_InfiniteHealth:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(_InfiniteHealth)

[DISABLE]

_InfiniteHealth:
  db F3 0F 10 81 D4 10 00 00

unregistersymbol(_InfiniteHealth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+808220

"gamedll_x64_rwdi.dll"+80820F: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+808210: F3 0F 10 81 D8 15 00 00  -  movss xmm0,[rcx+000015D8]
"gamedll_x64_rwdi.dll"+808218: C3                       -  ret 
"gamedll_x64_rwdi.dll"+808219: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80821A: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80821B: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80821C: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80821D: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80821E: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80821F: CC                       -  int 3 
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+808220: F3 0F 10 81 D4 10 00 00  -  movss xmm0,[rcx+000010D4]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+808228: C3                       -  ret 
"gamedll_x64_rwdi.dll"+808229: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80822A: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80822B: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80822C: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80822D: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80822E: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+80822F: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+808230: 48 63 C2                 -  movsxd  rax,edx
"gamedll_x64_rwdi.dll"+808233: 48 05 A4 00 00 00        -  add rax,000000A4
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>317</ID>
      <Description>"TELEPORT"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_TeleportCode,engine_x64_rwdi.dll,F3 0F 58 83 C4 00 00 00 48)
aobscanmodule(_GetWaypointCoord,gamedll_x64_rwdi.dll,F3 0F 10 83 38 08 00 00 F3)
alloc(teleportmem,2048,engine_x64_rwdi.dll)
alloc(newmem,$1000,gamedll_x64_rwdi.dll)
registersymbol(z_coord)
registersymbol(x_coord)
registersymbol(y_coord)
registersymbol(z_coord_undo)
registersymbol(x_coord_undo)
registersymbol(y_coord_undo)
registersymbol(s_enable)
registersymbol(l_enable)
registersymbol(u_enable)
Registersymbol(_TeleportCode)
Registersymbol(_GetWayPointCoord_X)
Registersymbol(_GetWayPointCoord_Y)
Registersymbol(_GetWayPointCoord_Z)
registersymbol(_GetWaypointCoord)
Registersymbol(_WriteWayPointCoordsToPlayerLocation)

alloc(s_enable,4)
alloc(l_enable,4)
alloc(u_enable,4)
alloc(z_coord,4)
alloc(x_coord,4)
alloc(y_coord,4)
alloc(z_coord_undo,4)
alloc(x_coord_undo,4)
alloc(y_coord_undo,4)
alloc(_GetWayPointCoord_X,4)
alloc(_GetWayPointCoord_Y,4)
alloc(_GetWayPointCoord_Z,4)
alloc(_WriteWayPointCoordsToPlayerLocation,4)

label(returnteleport)
label(originalcodeteleport)
label(exitteleport)
label(save_coord)
label(load_coord)
label(undo_coord)
label(returnhere)
label(originalcode)
label(exit)
label(WriteWayPointCoordsToPlayerLocation)

newmem: //this is allocated memory, you have read,write,execute access
movss xmm12,[rbx+00000838]
movss [_GetWayPointCoord_X],xmm12
movss xmm12,[rbx+0000083C]
movss [_GetWayPointCoord_Y],xmm12
movss xmm12,[rbx+00000840]
movss [_GetWayPointCoord_Z],xmm12

originalcode:
movss xmm0,[rbx+00000838]
exit:
jmp returnhere



teleportmem:
cmp [s_enable],1
je save_coord

cmp [l_enable],1
je load_coord

cmp [u_enable],1
je undo_coord

cmp [_WriteWayPointCoordsToPlayerLocation],1
je WriteWayPointCoordsToPlayerLocation

jmp originalcodeteleport

save_coord:
mov [s_enable],0
movss xmm12,[rbx+BC]
movss [x_coord],xmm12
movss xmm12,[rbx+C0]
movss [z_coord],xmm12
movss xmm12,[rbx+C4]
movss [y_coord],xmm12
jmp originalcodeteleport

load_coord:
mov [l_enable],0
cmp [z_coord],0
je originalcodeteleport
// Save actual Position (for UNDO TELEPORT) when press LOAD POSiTiON
movss xmm12,[rbx+BC]
movss [x_coord_undo],xmm12
movss xmm12,[rbx+C0]
movss [z_coord_undo],xmm12
movss xmm12,[rbx+C4]
movss [y_coord_undo],xmm12
// Save actual Position (for UNDO TELEPORT) when press LOAD POSiTiON
movss xmm12,[x_coord]
movss [rbx+BC],xmm12
movss xmm12,[z_coord]
movss [rbx+C0],xmm12
movss xmm12,[y_coord]
movss [rbx+C4],xmm12
jmp originalcodeteleport

undo_coord:
mov [l_enable],0
mov [s_enable],0
mov [u_enable],0
cmp [z_coord_undo],0
je originalcodeteleport
movss xmm12,[x_coord_undo]
movss [rbx+BC],xmm12
movss xmm12,[z_coord_undo]
movss [rbx+C0],xmm12
movss xmm12,[y_coord_undo]
movss [rbx+C4],xmm12
jmp originalcodeteleport

///////////////TELEPORT TO WAYPOiNT//////////////
WriteWayPointCoordsToPlayerLocation:
mov byte ptr [_WriteWayPointCoordsToPlayerLocation],0
movss xmm11,[_GetWayPointCoord_X]
movss [rbx+BC],xmm11
movss xmm11,[_GetWayPointCoord_Y]
movss [rbx+C0],xmm11
movss xmm11,[_GetWayPointCoord_Z]
movss [rbx+C4],xmm11
fld [rbx+000000C0]
fld1
faddp
fld1
faddp
fld1
faddp
fstp [rbx+000000C0]
jmp originalcodeteleport

originalcodeteleport:
addss xmm0,[rbx+000000C4]

exitteleport:
jmp returnteleport

//"FC64.dll"+1F352CE:
_TeleportCode:
jmp teleportmem
nop
nop
nop
returnteleport:

_GetWaypointCoord:
jmp newmem
nop
nop
nop
returnhere:


x_coord:
dd 0
z_coord:
dd 0
y_coord:
dd 0
s_enable:
dd 0
l_enable:
dd 0
x_coord_undo:
dd 0
z_coord_undo:
dd 0
y_coord_undo:
dd 0
u_enable:
dd 0

[DISABLE]

Unregistersymbol(z_coord)
Unregistersymbol(x_coord)
Unregistersymbol(y_coord)
Unregistersymbol(z_coord_undo)
Unregistersymbol(x_coord_undo)
Unregistersymbol(y_coord_undo)
Unregistersymbol(s_enable)
Unregistersymbol(l_enable)
Unregistersymbol(u_enable)
Unregistersymbol(_TeleportCode)
Unregistersymbol(_GetWayPointCoord_X)
Unregistersymbol(_GetWayPointCoord_Y)
Unregistersymbol(_GetWayPointCoord_Z)
Unregistersymbol(_GetWaypointCoord)
Unregistersymbol(_WriteWayPointCoordsToPlayerLocation)

dealloc(z_coord)
dealloc(x_coord)
dealloc(y_coord)
dealloc(z_coord_undo)
dealloc(x_coord_undo)
dealloc(y_coord_undo)
dealloc(s_enable)
dealloc(l_enable)
dealloc(u_enable)
dealloc(teleportmem)
dealloc(_GetWayPointCoord_X)
dealloc(_GetWayPointCoord_Y)
dealloc(_GetWayPointCoord_Z)
dealloc(newmem)
dealloc(_WriteWayPointCoordsToPlayerLocation)

//"FC64.dll"+1F352CE:
_TeleportCode:
addss xmm0,[rbx+000000C4]
//Alt: db F3 0F 58 83 C4 00 00 00

_GetWaypointCoord:
movss xmm0,[rbx+00000838]

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>336</ID>
          <Description>"DEBUG"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>329</ID>
              <Description>"Waypoint Coord X"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>808080</Color>
              <VariableType>Float</VariableType>
              <Address>_GetWayPointCoord_X</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>330</ID>
              <Description>"Waypoint Coord Y"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>808080</Color>
              <VariableType>Float</VariableType>
              <Address>_GetWayPointCoord_Y</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>331</ID>
              <Description>"Waypoint Coord Z"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>808080</Color>
              <VariableType>Float</VariableType>
              <Address>_GetWayPointCoord_Z</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>319</ID>
          <Description>"SAVE POSiTiON"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>s_enable</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>107</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>320</ID>
          <Description>"LOAD POSiTiON"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>l_enable</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>109</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>321</ID>
          <Description>"UNDO TELEPORT"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>u_enable</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>106</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>335</ID>
          <Description>"TELEPORT TO WAYPOiNT"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>_WriteWayPointCoordsToPlayerLocation</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>111</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>348</ID>
      <Description>"MONEY"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"gamedll_x64_rwdi.dll"+667B79)
alloc(_AddMoney,4)
Registersymbol(_AddMoney)
alloc(pMoney,4)
Registersymbol(pMoney)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [pMoney],rax
cmp [_AddMoney],1
jne originalcode
mov [_AddMoney],0
add dword ptr [rax+40],#1000
jmp originalcode

originalcode:
mov ecx,[rax+40]
lea rdx,[gamedll_x64_rwdi.dll+18DD890]

exit:
jmp returnhere

"gamedll_x64_rwdi.dll"+667B79:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


_AddMoney:
dd 0
pMoney:
dd 0
 
[DISABLE]
Unregistersymbol(_AddMoney)
Unregistersymbol(pMoney)
dealloc(newmem)
dealloc(_AddMoney)
dealloc(pMoney)
"gamedll_x64_rwdi.dll"+667B79:
mov ecx,[rax+40]
lea rdx,[gamedll_x64_rwdi.dll+18DD890]
//Alt: db 8B 48 40 48 8D 15 0D 5D 27 01
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>350</ID>
          <Description>"DEBUG"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>349</ID>
              <Description>"Current Money"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>808080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMoney</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>351</ID>
          <Description>"ADD 1000 MONEY"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>_AddMoney</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>103</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :movss [r15+7C],xmm1</Description>
      <Address>7FFEAED77B6E</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>1F7B6E</ModuleNameOffset>
      <Before>
        <Byte>CE</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>CE</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4F</Byte>
        <Byte>7C</Byte>
      </Actual>
      <After>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
        <Byte>FF</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_TeleportCode</Name>
      <Address>7FFEAFF3DF72</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_GetWaypointCoord</Name>
      <Address>7FFEBC6DB24C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteHealth</Name>
      <Address>7FFEBCB68220</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteMeleeStamina</Name>
      <Address>7FFEBCCE0DB3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteWeaponDurability</Name>
      <Address>7FFEBC91AE66</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
