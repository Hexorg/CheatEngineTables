<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>164</ID>
      <Description>"Full Health"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(health,mafia3.exe,F3 0F 10 47 10 F3 0F 5C 47)
alloc(newmem,$1000,health)

label(code)
label(return)

newmem:

code:
  movss xmm0,[rdi+20]
  movss [rdi+10],xmm0
  jmp return

health:
  jmp newmem
return:
registersymbol(health)

[DISABLE]

health:
  db F3 0F 10 47 10

unregistersymbol(health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+34BEB24

"mafia3.exe"+34BEB03: 7E 10                 -  jle mafia3.exe+34BEB15
"mafia3.exe"+34BEB05: 48 8B 83 A8 01 00 00  -  mov rax,[rbx+000001A8]
"mafia3.exe"+34BEB0C: 48 8B 10              -  mov rdx,[rax]
"mafia3.exe"+34BEB0F: 48 8B 3C CA           -  mov rdi,[rdx+rcx*8]
"mafia3.exe"+34BEB13: EB 02                 -  jmp mafia3.exe+34BEB17
"mafia3.exe"+34BEB15: 33 FF                 -  xor edi,edi
"mafia3.exe"+34BEB17: 48 8B CB              -  mov rcx,rbx
"mafia3.exe"+34BEB1A: E8 71 A8 FE FF        -  call mafia3.exe+34A9390
"mafia3.exe"+34BEB1F: 48 85 FF              -  test rdi,rdi
"mafia3.exe"+34BEB22: 74 2D                 -  je mafia3.exe+34BEB51
// ---------- INJECTING HERE ----------
"mafia3.exe"+34BEB24: F3 0F 10 47 10        -  movss xmm0,[rdi+10]
// ---------- DONE INJECTING  ----------
"mafia3.exe"+34BEB29: F3 0F 5C 47 04        -  subss xmm0,[rdi+04]
"mafia3.exe"+34BEB2E: 0F 54 05 EB 3F 48 01  -  andps xmm0,[mafia3.exe+4942B20]
"mafia3.exe"+34BEB35: 0F 2F 05 88 3D 48 01  -  comiss xmm0,[mafia3.exe+49428C4]
"mafia3.exe"+34BEB3C: 73 13                 -  jae mafia3.exe+34BEB51
"mafia3.exe"+34BEB3E: 80 BB B8 01 00 00 00  -  cmp byte ptr [rbx+000001B8],00
"mafia3.exe"+34BEB45: 74 12                 -  je mafia3.exe+34BEB59
"mafia3.exe"+34BEB47: 48 8B CB              -  mov rcx,rbx
"mafia3.exe"+34BEB4A: E8 D1 A6 FE FF        -  call mafia3.exe+34A9220
"mafia3.exe"+34BEB4F: EB 08                 -  jmp mafia3.exe+34BEB59
"mafia3.exe"+34BEB51: 48 8B CB              -  mov rcx,rbx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>149</ID>
      <Description>"Purchase Supplies for Free"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(no_cost,mafia3.exe,29 11 B0 01 C3)
no_cost:
  db 90 90
registersymbol(no_cost)

aobscanmodule(no_cost2,mafia3.exe,29 51 04 B0 01)
no_cost2:
  db 90 90 90
registersymbol(no_cost2)

//aobscanmodule(ignore_cost,mafia3.exe,74 50 45 85 C0)
//ignore_cost:
//  db 90 90
//registersymbol(ignore_cost)

[DISABLE]
no_cost:
  db 29 11
unregistersymbol(no_cost)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+21BED66

"mafia3.exe"+21BED54: 89 01           -  mov [rcx],eax
"mafia3.exe"+21BED56: B0 01           -  mov al,01
"mafia3.exe"+21BED58: C3              -  ret 
"mafia3.exe"+21BED59: 2B C2           -  sub eax,edx
"mafia3.exe"+21BED5B: 89 01           -  mov [rcx],eax
"mafia3.exe"+21BED5D: B0 01           -  mov al,01
"mafia3.exe"+21BED5F: C3              -  ret 
"mafia3.exe"+21BED60: 29 51 04        -  sub [rcx+04],edx
"mafia3.exe"+21BED63: B0 01           -  mov al,01
"mafia3.exe"+21BED65: C3              -  ret 
// ---------- INJECTING HERE ----------
"mafia3.exe"+21BED66: 29 11           -  sub [rcx],edx
"mafia3.exe"+21BED68: B0 01           -  mov al,01
"mafia3.exe"+21BED6A: C3              -  ret 
// ---------- DONE INJECTING  ----------
"mafia3.exe"+21BED6B: 32 C0           -  xor al,al
"mafia3.exe"+21BED6D: C3              -  ret 
"mafia3.exe"+21BED6E: CC              -  int 3 
"mafia3.exe"+21BED6F: EF              -  out dx,eax
"mafia3.exe"+21BED70: 48 89 5C 24 08  -  mov [rsp+08],rbx
"mafia3.exe"+21BED75: 48 89 74 24 10  -  mov [rsp+10],rsi
"mafia3.exe"+21BED7A: 57              -  push rdi
"mafia3.exe"+21BED7B: 48 83 EC 20     -  sub rsp,20
"mafia3.exe"+21BED7F: 48 8B F1        -  mov rsi,rcx
"mafia3.exe"+21BED82: 41 8B D8        -  mov ebx,r8d
}

no_cost2:
  db 29 51 04 B0 01
unregistersymbol(no_cost2)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+21BED60

"mafia3.exe"+21BED4D: 45 84 C9        -  test r9l,r9l
"mafia3.exe"+21BED50: 74 07           -  je mafia3.exe+21BED59
"mafia3.exe"+21BED52: 33 C0           -  xor eax,eax
"mafia3.exe"+21BED54: 89 01           -  mov [rcx],eax
"mafia3.exe"+21BED56: B0 01           -  mov al,01
"mafia3.exe"+21BED58: C3              -  ret 
"mafia3.exe"+21BED59: 2B C2           -  sub eax,edx
"mafia3.exe"+21BED5B: 89 01           -  mov [rcx],eax
"mafia3.exe"+21BED5D: B0 01           -  mov al,01
"mafia3.exe"+21BED5F: C3              -  ret 
// ---------- INJECTING HERE ----------
"mafia3.exe"+21BED60: 29 51 04        -  sub [rcx+04],edx
"mafia3.exe"+21BED63: B0 01           -  mov al,01
// ---------- DONE INJECTING  ----------
"mafia3.exe"+21BED65: C3              -  ret 
"mafia3.exe"+21BED66: 29 11           -  sub [rcx],edx
"mafia3.exe"+21BED68: B0 01           -  mov al,01
"mafia3.exe"+21BED6A: C3              -  ret 
"mafia3.exe"+21BED6B: 32 C0           -  xor al,al
"mafia3.exe"+21BED6D: C3              -  ret 
"mafia3.exe"+21BED6E: CC              -  int 3 
"mafia3.exe"+21BED6F: EF              -  out dx,eax
"mafia3.exe"+21BED70: 48 89 5C 24 08  -  mov [rsp+08],rbx
"mafia3.exe"+21BED75: 48 89 74 24 10  -  mov [rsp+10],rsi
}

//ignore_cost:
//  db 74 50
//unregistersymbol(ignore_cost)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+21BED19

"mafia3.exe"+21BED02: 75 67                    -  jne mafia3.exe+21BED6B
"mafia3.exe"+21BED04: 8B 41 04                 -  mov eax,[rcx+04]
"mafia3.exe"+21BED07: 03 01                    -  add eax,[rcx]
"mafia3.exe"+21BED09: 3B D0                    -  cmp edx,eax
"mafia3.exe"+21BED0B: EB 07                    -  jmp mafia3.exe+21BED14
"mafia3.exe"+21BED0D: 3B 51 04                 -  cmp edx,[rcx+04]
"mafia3.exe"+21BED10: EB 02                    -  jmp mafia3.exe+21BED14
"mafia3.exe"+21BED12: 3B 11                    -  cmp edx,[rcx]
"mafia3.exe"+21BED14: 0F 96 C0                 -  setbe al
"mafia3.exe"+21BED17: 84 C0                    -  test al,al
// ---------- INJECTING HERE ----------
"mafia3.exe"+21BED19: 74 50                    -  je mafia3.exe+21BED6B
"mafia3.exe"+21BED1B: 45 85 C0                 -  test r8d,r8d
// ---------- DONE INJECTING  ----------
"mafia3.exe"+21BED1E: 74 46                    -  je no_cost
"mafia3.exe"+21BED20: 41 83 E8 01              -  sub r8d,01
"mafia3.exe"+21BED24: 74 3A                    -  je mafia3.exe+21BED60
"mafia3.exe"+21BED26: 41 83 F8 01              -  cmp r8d,01
"mafia3.exe"+21BED2A: 75 3F                    -  jne mafia3.exe+21BED6B
"mafia3.exe"+21BED2C: 8B 01                    -  mov eax,[rcx]
"mafia3.exe"+21BED2E: 3B D0                    -  cmp edx,eax
"mafia3.exe"+21BED30: 41 0F 97 C1              -  seta r9l
"mafia3.exe"+21BED34: 45 84 C9                 -  test r9l,r9l
"mafia3.exe"+21BED37: 74 0C                    -  je mafia3.exe+21BED45
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>157</ID>
      <Description>"Unlimited Adrenaline Shots"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(shots,mafia3.exe,FF C9 89 4A 18)
shots:
  db 90 90
registersymbol(shots)

[DISABLE]
shots:
  db FF C9
unregistersymbol(shots)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+2F0F227

"mafia3.exe"+2F0F20D: C5 CE                    -  lds ecx,esi
"mafia3.exe"+2F0F20F: 47 48                    -  dec r8d
"mafia3.exe"+2F0F211: 83 EC 28                 -  sub esp,28
"mafia3.exe"+2F0F214: 48 8B C2                 -  mov rax,rdx
"mafia3.exe"+2F0F217: 48 8B D1                 -  mov rdx,rcx
"mafia3.exe"+2F0F21A: 80 78 18 09              -  cmp byte ptr [rax+18],09
"mafia3.exe"+2F0F21E: 75 1F                    -  jne mafia3.exe+2F0F23F
"mafia3.exe"+2F0F220: 8B 49 18                 -  mov ecx,[rcx+18]
"mafia3.exe"+2F0F223: 85 C9                    -  test ecx,ecx
"mafia3.exe"+2F0F225: 7E 18                    -  jle mafia3.exe+2F0F23F
// ---------- INJECTING HERE ----------
"mafia3.exe"+2F0F227: FF C9                    -  dec ecx
"mafia3.exe"+2F0F229: 89 4A 18                 -  mov [rdx+18],ecx
// ---------- DONE INJECTING  ----------
"mafia3.exe"+2F0F22C: 48 8B C8                 -  mov rcx,rax
"mafia3.exe"+2F0F22F: 48 8B 10                 -  mov rdx,[rax]
"mafia3.exe"+2F0F232: FF 92 40 03 00 00        -  call qword ptr [rdx+00000340]
"mafia3.exe"+2F0F238: B0 01                    -  mov al,01
"mafia3.exe"+2F0F23A: 48 83 C4 28              -  add rsp,28
"mafia3.exe"+2F0F23E: C3                       -  ret 
"mafia3.exe"+2F0F23F: 32 C0                    -  xor al,al
"mafia3.exe"+2F0F241: 48 83 C4 28              -  add rsp,28
"mafia3.exe"+2F0F245: C3                       -  ret 
"mafia3.exe"+2F0F246: 90                       -  nop 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Unlimited Ammo (Clip)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(ammo,mafia3.exe,FF CA E8 ?? ?? ?? ?? 48 8B CB)
ammo:
  db 90 90
registersymbol(ammo)

[DISABLE]
ammo:
  db FF CA
unregistersymbol(ammo)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+33F1322

"mafia3.exe"+33F1304: 84 C0                    -  test al,al
"mafia3.exe"+33F1306: 8B DD                    -  mov ebx,ebp
"mafia3.exe"+33F1308: 48 8B CE                 -  mov rcx,rsi
"mafia3.exe"+33F130B: 49 0F 45 DF              -  cmovne rbx,r15
"mafia3.exe"+33F130F: E8 CC 07 B0 FF           -  call mafia3.exe+2EF1AE0
"mafia3.exe"+33F1314: 84 C0                    -  test al,al
"mafia3.exe"+33F1316: 74 11                    -  je mafia3.exe+33F1329
"mafia3.exe"+33F1318: 48 8B 46 08              -  mov rax,[rsi+08]
"mafia3.exe"+33F131C: 48 8B CE                 -  mov rcx,rsi
"mafia3.exe"+33F131F: 8B 50 18                 -  mov edx,[rax+18]
// ---------- INJECTING HERE ----------
"mafia3.exe"+33F1322: FF CA                    -  dec edx
"mafia3.exe"+33F1324: E8 97 16 B2 FF           -  call mafia3.exe+2F129C0
// ---------- DONE INJECTING  ----------
"mafia3.exe"+33F1329: 48 8B CB                 -  mov rcx,rbx
"mafia3.exe"+33F132C: E8 AF 07 B0 FF           -  call mafia3.exe+2EF1AE0
"mafia3.exe"+33F1331: 84 C0                    -  test al,al
"mafia3.exe"+33F1333: 74 11                    -  je mafia3.exe+33F1346
"mafia3.exe"+33F1335: 48 8B 43 08              -  mov rax,[rbx+08]
"mafia3.exe"+33F1339: 48 8B CB                 -  mov rcx,rbx
"mafia3.exe"+33F133C: 8B 50 18                 -  mov edx,[rax+18]
"mafia3.exe"+33F133F: FF CA                    -  dec edx
"mafia3.exe"+33F1341: E8 7A 16 B2 FF           -  call mafia3.exe+2F129C0
"mafia3.exe"+33F1346: 48 8B 46 08              -  mov rax,[rsi+08]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>38</ID>
      <Description>"Unlimited Ammo (Remaining)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(max_ammo,mafia3.exe,76 0B 41 2B C2)
max_ammo:
  db 90 90 90 90 90
registersymbol(max_ammo)

[DISABLE]
max_ammo:
  db 76 0B 41 2B C2
unregistersymbol(max_ammo)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+2F11FBA

"mafia3.exe"+2F11F9E: 74 23                    -  je mafia3.exe+2F11FC3
"mafia3.exe"+2F11FA0: 41 39 10                 -  cmp [r8],edx
"mafia3.exe"+2F11FA3: 74 09                    -  je mafia3.exe+2F11FAE
"mafia3.exe"+2F11FA5: 49 83 C0 08              -  add r8,08
"mafia3.exe"+2F11FA9: 4D 3B C1                 -  cmp r8,r9
"mafia3.exe"+2F11FAC: 75 F2                    -  jne mafia3.exe+2F11FA0
"mafia3.exe"+2F11FAE: 4D 3B C1                 -  cmp r8,r9
"mafia3.exe"+2F11FB1: 74 10                    -  je mafia3.exe+2F11FC3
"mafia3.exe"+2F11FB3: 41 8B 40 04              -  mov eax,[r8+04]
"mafia3.exe"+2F11FB7: 41 3B C2                 -  cmp eax,r10d
// ---------- INJECTING HERE ----------
"mafia3.exe"+2F11FBA: 76 0B                    -  jna mafia3.exe+2F11FC7
"mafia3.exe"+2F11FBC: 41 2B C2                 -  sub eax,r10d
// ---------- DONE INJECTING  ----------
"mafia3.exe"+2F11FBF: 41 89 40 04              -  mov [r8+04],eax
"mafia3.exe"+2F11FC3: 41 8B C2                 -  mov eax,r10d
"mafia3.exe"+2F11FC6: C3                       -  ret 
"mafia3.exe"+2F11FC7: 41 C7 40 04 00 00 00 00  -  mov [r8+04],00000000
"mafia3.exe"+2F11FCF: C3                       -  ret 
"mafia3.exe"+2F11FD0: 40 53                    -  push rbx
"mafia3.exe"+2F11FD2: 48 83 EC 20              -  sub rsp,20
"mafia3.exe"+2F11FD6: 48 8B D9                 -  mov rbx,rcx
"mafia3.exe"+2F11FD9: 48 8B 49 28              -  mov rcx,[rcx+28]
"mafia3.exe"+2F11FDD: 4C 8B 43 30              -  mov r8,[rbx+30]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>118</ID>
      <Description>"Unlimited Grenades"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(grenades,mafia3.exe,2B FB 8B D6 44 8B C7)
grenades:
  db 90 90
registersymbol(grenades)

[DISABLE]
grenades:
  db 2B FB
unregistersymbol(grenades)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+33F4682

"mafia3.exe"+33F4663: E8 D8 59 B0 FF              -  call mafia3.exe+2EFA040
"mafia3.exe"+33F4668: 8B D6                       -  mov edx,esi
"mafia3.exe"+33F466A: 48 8B CD                    -  mov rcx,rbp
"mafia3.exe"+33F466D: E8 BE 04 B1 FF              -  call mafia3.exe+2F04B30
"mafia3.exe"+33F4672: 8B F8                       -  mov edi,eax
"mafia3.exe"+33F4674: 8B D6                       -  mov edx,esi
"mafia3.exe"+33F4676: 48 8B CD                    -  mov rcx,rbp
"mafia3.exe"+33F4679: 3B C3                       -  cmp eax,ebx
"mafia3.exe"+33F467B: 76 16                       -  jna mafia3.exe+33F4693
"mafia3.exe"+33F467D: E8 DE ED AF FF              -  call mafia3.exe+2EF3460
// ---------- INJECTING HERE ----------
"mafia3.exe"+33F4682: 2B FB                       -  sub edi,ebx
"mafia3.exe"+33F4684: 8B D6                       -  mov edx,esi
"mafia3.exe"+33F4686: 44 8B C7                    -  mov r8d,edi
// ---------- DONE INJECTING  ----------
"mafia3.exe"+33F4689: 48 8B CD                    -  mov rcx,rbp
"mafia3.exe"+33F468C: E8 0F AC AF FF              -  call mafia3.exe+2EEF2A0
"mafia3.exe"+33F4691: EB 07                       -  jmp mafia3.exe+33F469A
"mafia3.exe"+33F4693: E8 C8 ED AF FF              -  call mafia3.exe+2EF3460
"mafia3.exe"+33F4698: 8B DF                       -  mov ebx,edi
"mafia3.exe"+33F469A: 48 8B 54 24 20              -  mov rdx,[rsp+20]
"mafia3.exe"+33F469F: 48 85 D2                    -  test rdx,rdx
"mafia3.exe"+33F46A2: 74 16                       -  je mafia3.exe+33F46BA
"mafia3.exe"+33F46A4: 4C 8B 44 24 30              -  mov r8,[rsp+30]
"mafia3.exe"+33F46A9: 48 8D 4C 24 20              -  lea rcx,[rsp+20]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>177</ID>
      <Description>"Read Floats (Debug and Find Your Own Addresses)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(read_floats,mafia3.exe,F3 0F 10 41 18 C3 CC)
registersymbol(read_floats)

[DISABLE]
unregistersymbol(read_floats)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+1118420

"mafia3.exe"+111840C: FF 50 10                    -  call qword ptr [rax+10]
"mafia3.exe"+111840F: 48 8B C3                    -  mov rax,rbx
"mafia3.exe"+1118412: 48 83 C4 20                 -  add rsp,20
"mafia3.exe"+1118416: 5B                          -  pop rbx
"mafia3.exe"+1118417: C3                          -  ret 
"mafia3.exe"+1118418: 90                          -  nop 
"mafia3.exe"+1118419: C1                          -   
"mafia3.exe"+111841A: 75 4C                       -  jne mafia3.exe+1118468
"mafia3.exe"+111841C: B1 E7                       -  mov cl,-19
"mafia3.exe"+111841E: 7C AC                       -  jl mafia3.exe+11183CC
// ---------- INJECTING HERE ----------
"mafia3.exe"+1118420: F3 0F 10 41 18              -  movss xmm0,[rcx+18]
// ---------- DONE INJECTING  ----------
"mafia3.exe"+1118425: C3                          -  ret 
"mafia3.exe"+1118426: CC                          -  int 3 
"mafia3.exe"+1118427: C1 A2 64 31 4B A3 BF        -  shl [rdx-5CB4CE9C],-41
"mafia3.exe"+111842E: 11 EC                       -  adc esp,ebp
"mafia3.exe"+1118430: 48 83 EC 28                 -  sub rsp,28
"mafia3.exe"+1118434: 48 8B 49 50                 -  mov rcx,[rcx+50]
"mafia3.exe"+1118438: 48 85 C9                    -  test rcx,rcx
"mafia3.exe"+111843B: 75 07                       -  jne mafia3.exe+1118444
"mafia3.exe"+111843D: FF 15 3D E3 77 03           -  call qword ptr [mafia3.exe+4896780]
"mafia3.exe"+1118443: 90                          -  nop 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>190</ID>
          <Description>"Open Memory View and right-click the instructions up top"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>191</ID>
          <Description>"Select Go to address and enter: read_floats"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>193</ID>
          <Description>"Right-click the instruction: movss xmm0,[rcx+18]"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>192</ID>
          <Description>"Select Find out what addresses this instruction accesses"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>194</ID>
          <Description>"Set the display to Float, go back in game, and open the Map"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>195</ID>
          <Description>"Identify the addresses that appear and change whatever you like"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>165</ID>
      <Description>"Cash Pointer (Open Map)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(cash,mafia3.exe,41 8B 40 04 C3 41)
alloc(newmem,$1000,cash)

label(code)
label(return)
label(cash_ptr)

newmem:
  mov rax,cash_ptr
  mov [rax],r8
  xor rax,rax
code:
  mov eax,[r8+04]
  ret 
  jmp return

cash_ptr:
  dq 0

cash:
  jmp newmem
return:
registersymbol(cash)
registersymbol(cash_ptr)

[DISABLE]
cash:
  db 41 8B 40 04 C3
unregistersymbol(cash)
unregistersymbol(cash_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+21A0B5C

"mafia3.exe"+21A0B3E: CC                             -  int 3 
"mafia3.exe"+21A0B3F: E8 4C 8B 01 85                 -  call 7FF752829690
"mafia3.exe"+21A0B44: D2 74 1A 83                    -  shl byte ptr [rdx+rbx-7D],cl
"mafia3.exe"+21A0B48: EA 01 74 10 83 FA 01           -  jmp 01FA:83107401
"mafia3.exe"+21A0B4F: 74 03                          -  je mafia3.exe+21A0B54
"mafia3.exe"+21A0B51: 33 C0                          -  xor eax,eax
"mafia3.exe"+21A0B53: C3                             -  ret 
"mafia3.exe"+21A0B54: 41 8B 40 04                    -  mov eax,[r8+04]
"mafia3.exe"+21A0B58: 41 03 00                       -  add eax,[r8]
"mafia3.exe"+21A0B5B: C3                             -  ret 
// ---------- INJECTING HERE ----------
"mafia3.exe"+21A0B5C: 41 8B 40 04                    -  mov eax,[r8+04]
"mafia3.exe"+21A0B60: C3                             -  ret 
// ---------- DONE INJECTING  ----------
"mafia3.exe"+21A0B61: 41 8B 00                       -  mov eax,[r8]
"mafia3.exe"+21A0B64: C3                             -  ret 
"mafia3.exe"+21A0B65: 90                             -  nop 
"mafia3.exe"+21A0B66: E4 B5                          -  in al,-4B
"mafia3.exe"+21A0B68: EA BA 82 E9 85 B2 E6           -  jmp E6B2:85E982BA
"mafia3.exe"+21A0B6F: 73 80                          -  jae mafia3.exe+21A0AF1
"mafia3.exe"+21A0B71: 79 20                          -  jns mafia3.exe+21A0B93
"mafia3.exe"+21A0B73: 00 48 8D                       -  add [rax-73],cl
"mafia3.exe"+21A0B76: 15 E5 2D A1 02                 -  adc eax,02A12DE5
"mafia3.exe"+21A0B7B: 48 8D 05 F6 2D A1 02           -  lea rax,[mafia3.exe+4BB3978]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>180</ID>
          <Description>"Cash in Wallet"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>cash_ptr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"Cash in Vault"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>cash_ptr</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>124</ID>
      <Description>"Ignore This"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>137</ID>
          <Description>"Read Variables"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(read_vars,mafia3.exe,44 8B 38 45 3B 3E 0F 84 A5 00 00 00 48 8B 7B 28 C7 44 24 50 09)
registersymbol(read_vars)

[DISABLE]
unregistersymbol(read_vars)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+296179A

"mafia3.exe"+296175B: 48 3B 5E 58                    -  cmp rbx,[rsi+58]
"mafia3.exe"+296175F: 0F 85 AB FE FF FF              -  jne mafia3.exe+2961610
"mafia3.exe"+2961765: 0F 28 B4 24 80 02 00 00        -  movaps xmm6,[rsp+00000280]
"mafia3.exe"+296176D: 44 89 A6 98 02 00 00           -  mov [rsi+00000298],r12d
"mafia3.exe"+2961774: C7 86 9C 02 00 00 09 00 00 00  -  mov [rsi+0000029C],00000009
"mafia3.exe"+296177E: 48 8B 9E E0 00 00 00           -  mov rbx,[rsi+000000E0]
"mafia3.exe"+2961785: 48 3B 9E E8 00 00 00           -  cmp rbx,[rsi+000000E8]
"mafia3.exe"+296178C: 0F 84 57 01 00 00              -  je mafia3.exe+29618E9
"mafia3.exe"+2961792: 48 8B 43 20                    -  mov rax,[rbx+20]
"mafia3.exe"+2961796: 4C 8D 73 60                    -  lea r14,[rbx+60]
// ---------- INJECTING HERE ----------
"mafia3.exe"+296179A: 44 8B 38                       -  mov r15d,[rax]
"mafia3.exe"+296179D: 45 3B 3E                       -  cmp r15d,[r14]
// ---------- DONE INJECTING  ----------
"mafia3.exe"+29617A0: 0F 84 A5 00 00 00              -  je mafia3.exe+296184B
"mafia3.exe"+29617A6: 48 8B 7B 28                    -  mov rdi,[rbx+28]
"mafia3.exe"+29617AA: C7 44 24 50 09 00 00 00        -  mov [rsp+50],00000009
"mafia3.exe"+29617B2: 48 89 44 24 58                 -  mov [rsp+58],rax
"mafia3.exe"+29617B7: C7 44 24 40 09 00 00 00        -  mov [rsp+40],00000009
"mafia3.exe"+29617BF: 4C 89 74 24 48                 -  mov [rsp+48],r14
"mafia3.exe"+29617C4: 48 3B 7B 30                    -  cmp rdi,[rbx+30]
"mafia3.exe"+29617C8: 74 3D                          -  je mafia3.exe+2961807
"mafia3.exe"+29617CA: 66 0F 1F 44 00 00              -  nop [rax+rax+00]
"mafia3.exe"+29617D0: 48 8B 4F 28                    -  mov rcx,[rdi+28]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"Read Variables 2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(read_vars2,mafia3.exe,41 8B 00 C3 90)
registersymbol(read_vars2)

[DISABLE]
unregistersymbol(read_vars2)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+21A0B61

"mafia3.exe"+21A0B44: D2 74 1A 83                    -  shl byte ptr [rdx+rbx-7D],cl
"mafia3.exe"+21A0B48: EA 01 74 10 83 FA 01           -  jmp 01FA:83107401
"mafia3.exe"+21A0B4F: 74 03                          -  je mafia3.exe+21A0B54
"mafia3.exe"+21A0B51: 33 C0                          -  xor eax,eax
"mafia3.exe"+21A0B53: C3                             -  ret 
"mafia3.exe"+21A0B54: 41 8B 40 04                    -  mov eax,[r8+04]
"mafia3.exe"+21A0B58: 41 03 00                       -  add eax,[r8]
"mafia3.exe"+21A0B5B: C3                             -  ret 
"mafia3.exe"+21A0B5C: 41 8B 40 04                    -  mov eax,[r8+04]
"mafia3.exe"+21A0B60: C3                             -  ret 
// ---------- INJECTING HERE ----------
"mafia3.exe"+21A0B61: 41 8B 00                       -  mov eax,[r8]
"mafia3.exe"+21A0B64: C3                             -  ret 
"mafia3.exe"+21A0B65: 90                             -  nop 
// ---------- DONE INJECTING  ----------
"mafia3.exe"+21A0B66: E4 B5                          -  in al,-4B
"mafia3.exe"+21A0B68: EA BA 82 E9 85 B2 E6           -  jmp E6B2:85E982BA
"mafia3.exe"+21A0B6F: 73 80                          -  jae mafia3.exe+21A0AF1
"mafia3.exe"+21A0B71: 79 20                          -  jns mafia3.exe+21A0B93
"mafia3.exe"+21A0B73: 00 48 8D                       -  add [rax-73],cl
"mafia3.exe"+21A0B76: 15 E5 2D A1 02                 -  adc eax,02A12DE5
"mafia3.exe"+21A0B7B: 48 8D 05 F6 2D A1 02           -  lea rax,[mafia3.exe+4BB3978]
"mafia3.exe"+21A0B82: 48 0F 45 C2                    -  cmovne rax,rdx
"mafia3.exe"+21A0B86: C3                             -  ret 
"mafia3.exe"+21A0B87: 90                             -  nop 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>178</ID>
          <Description>"Read Floats 2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(read_floats2,mafia3.exe,8B 40 18 89 43 18 B0 01 48 83 C4 20 5B C3 48 83 C4 20 5B C3 90 32)
registersymbol(read_floats2)

[DISABLE]
unregistersymbol(read_floats2)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+109DC7B

"mafia3.exe"+109DC4B: 48 8D 0D DE 8E 99 03     -  lea rcx,[mafia3.exe+4A36B30]
"mafia3.exe"+109DC52: 48 89 0B                 -  mov [rbx],rcx
"mafia3.exe"+109DC55: 48 8D 0D 0C 8F 99 03     -  lea rcx,[mafia3.exe+4A36B68]
"mafia3.exe"+109DC5C: 48 89 4B 08              -  mov [rbx+08],rcx
"mafia3.exe"+109DC60: 8B 48 10                 -  mov ecx,[rax+10]
"mafia3.exe"+109DC63: 89 4B 10                 -  mov [rbx+10],ecx
"mafia3.exe"+109DC66: 48 8D 0D 1B 8F 99 03     -  lea rcx,[mafia3.exe+4A36B88]
"mafia3.exe"+109DC6D: 48 89 0B                 -  mov [rbx],rcx
"mafia3.exe"+109DC70: 48 8D 0D 59 8F 99 03     -  lea rcx,[mafia3.exe+4A36BD0]
"mafia3.exe"+109DC77: 48 89 4B 08              -  mov [rbx+08],rcx
// ---------- INJECTING HERE ----------
"mafia3.exe"+109DC7B: 8B 40 18                 -  mov eax,[rax+18]
"mafia3.exe"+109DC7E: 89 43 18                 -  mov [rbx+18],eax
// ---------- DONE INJECTING  ----------
"mafia3.exe"+109DC81: B0 01                    -  mov al,01
"mafia3.exe"+109DC83: 48 83 C4 20              -  add rsp,20
"mafia3.exe"+109DC87: 5B                       -  pop rbx
"mafia3.exe"+109DC88: C3                       -  ret 
"mafia3.exe"+109DC89: 48 83 C4 20              -  add rsp,20
"mafia3.exe"+109DC8D: 5B                       -  pop rbx
"mafia3.exe"+109DC8E: C3                       -  ret 
"mafia3.exe"+109DC8F: 90                       -  nop 
"mafia3.exe"+109DC90: 32 C0                    -  xor al,al
"mafia3.exe"+109DC92: C3                       -  ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>139</ID>
          <Description>"Change Variables"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(change_vars,mafia3.exe,45 8B 02 83 C9 FF)
registersymbol(change_vars)

[DISABLE]
unregistersymbol(change_vars)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+2178C7F

"mafia3.exe"+2178C62: 4C 8B 11                    -  mov r10,[rcx]
"mafia3.exe"+2178C65: 45 8B D8                    -  mov r11d,r8d
"mafia3.exe"+2178C68: 48 8B D9                    -  mov rbx,rcx
"mafia3.exe"+2178C6B: 45 8B C8                    -  mov r9d,r8d
"mafia3.exe"+2178C6E: 45 85 C0                    -  test r8d,r8d
"mafia3.exe"+2178C71: 74 0C                       -  je mafia3.exe+2178C7F
"mafia3.exe"+2178C73: 41 83 E9 01                 -  sub r9d,01
"mafia3.exe"+2178C77: 74 28                       -  je mafia3.exe+2178CA1
"mafia3.exe"+2178C79: 41 83 F9 01                 -  cmp r9d,01
"mafia3.exe"+2178C7D: 75 16                       -  jne mafia3.exe+2178C95
// ---------- INJECTING HERE ----------
"mafia3.exe"+2178C7F: 45 8B 02                    -  mov r8d,[r10]
"mafia3.exe"+2178C82: 83 C9 FF                    -  or ecx,-01
// ---------- DONE INJECTING  ----------
"mafia3.exe"+2178C85: 8B C1                       -  mov eax,ecx
"mafia3.exe"+2178C87: 41 2B C0                    -  sub eax,r8d
"mafia3.exe"+2178C8A: 3B C2                       -  cmp eax,edx
"mafia3.exe"+2178C8C: 72 04                       -  jb mafia3.exe+2178C92
"mafia3.exe"+2178C8E: 41 8D 0C 10                 -  lea ecx,[r8+rdx]
"mafia3.exe"+2178C92: 41 89 0A                    -  mov [r10],ecx
"mafia3.exe"+2178C95: 41 8B D3                    -  mov edx,r11d
"mafia3.exe"+2178C98: 48 8B CB                    -  mov rcx,rbx
"mafia3.exe"+2178C9B: 5B                          -  pop rbx
"mafia3.exe"+2178C9C: E9 4F FA 04 00              -  jmp mafia3.exe+21C86F0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>128</ID>
          <Description>"Read Ammo (Clip)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(read_ammo,mafia3.exe,8B 48 18 89 4B 04)
registersymbol(read_ammo)

[DISABLE]
unregistersymbol(read_ammo)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+33F3E5C

"mafia3.exe"+33F3E3D: 48 85 C0                    -  test rax,rax
"mafia3.exe"+33F3E40: 75 16                       -  jne mafia3.exe+33F3E58
"mafia3.exe"+33F3E42: 48 89 03                    -  mov [rbx],rax
"mafia3.exe"+33F3E45: 89 43 08                    -  mov [rbx+08],eax
"mafia3.exe"+33F3E48: 48 8B 5C 24 30              -  mov rbx,[rsp+30]
"mafia3.exe"+33F3E4D: 48 8B 74 24 38              -  mov rsi,[rsp+38]
"mafia3.exe"+33F3E52: 48 83 C4 20                 -  add rsp,20
"mafia3.exe"+33F3E56: 5F                          -  pop rdi
"mafia3.exe"+33F3E57: C3                          -  ret 
"mafia3.exe"+33F3E58: 48 8B 40 08                 -  mov rax,[rax+08]
// ---------- INJECTING HERE ----------
"mafia3.exe"+33F3E5C: 8B 48 18                    -  mov ecx,[rax+18]
"mafia3.exe"+33F3E5F: 89 4B 04                    -  mov [rbx+04],ecx
// ---------- DONE INJECTING  ----------
"mafia3.exe"+33F3E62: 48 8B 4F 18                 -  mov rcx,[rdi+18]
"mafia3.exe"+33F3E66: 48 63 41 04                 -  movsxd  rax,dword ptr [rcx+04]
"mafia3.exe"+33F3E6A: 8B 94 08 18 02 00 00        -  mov edx,[rax+rcx+00000218]
"mafia3.exe"+33F3E71: 48 8B CE                    -  mov rcx,rsi
"mafia3.exe"+33F3E74: E8 E7 0D B1 FF              -  call mafia3.exe+2F04C60
"mafia3.exe"+33F3E79: 48 8D 54 24 48              -  lea rdx,[rsp+48]
"mafia3.exe"+33F3E7E: 89 03                       -  mov [rbx],eax
"mafia3.exe"+33F3E80: 48 8B CF                    -  mov rcx,rdi
"mafia3.exe"+33F3E83: E8 08 0E B1 FF              -  call mafia3.exe+2F04C90
"mafia3.exe"+33F3E88: 48 8B 4C 24 48              -  mov rcx,[rsp+48]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>125</ID>
          <Description>"Read Ammo (Remaining) 1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(read_max_ammo1,mafia3.exe,41 8B 40 04 C3 90)
registersymbol(read_max_ammo1)

[DISABLE]
unregistersymbol(read_max_ammo1)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+2F04C81

"mafia3.exe"+2F04C68: 4D 3B C1                       -  cmp r8,r9
"mafia3.exe"+2F04C6B: 74 11                          -  je mafia3.exe+2F04C7E
"mafia3.exe"+2F04C6D: 0F 1F 00                       -  nop [rax]
"mafia3.exe"+2F04C70: 41 39 10                       -  cmp [r8],edx
"mafia3.exe"+2F04C73: 74 0C                          -  je mafia3.exe+2F04C81
"mafia3.exe"+2F04C75: 49 83 C0 08                    -  add r8,08
"mafia3.exe"+2F04C79: 4D 3B C1                       -  cmp r8,r9
"mafia3.exe"+2F04C7C: 75 F2                          -  jne mafia3.exe+2F04C70
"mafia3.exe"+2F04C7E: 33 C0                          -  xor eax,eax
"mafia3.exe"+2F04C80: C3                             -  ret 
// ---------- INJECTING HERE ----------
"mafia3.exe"+2F04C81: 41 8B 40 04                    -  mov eax,[r8+04]
"mafia3.exe"+2F04C85: C3                             -  ret 
// ---------- DONE INJECTING  ----------
"mafia3.exe"+2F04C86: 90                             -  nop 
"mafia3.exe"+2F04C87: 3E 06                          -  push es
"mafia3.exe"+2F04C89: 67 ED                          -  in eax,dx
"mafia3.exe"+2F04C8B: 32 1C 30                       -  xor bl,[rax+rsi]
"mafia3.exe"+2F04C8E: 6E                             -  outsb 
"mafia3.exe"+2F04C8F: 82 48 8B 41                    -  or byte ptr [rax-75],41
"mafia3.exe"+2F04C93: 18 48 85                       -  sbb [rax-7B],cl
"mafia3.exe"+2F04C96: C0 74 07 48 89                 -  rol byte ptr [rdi+rax+48],-77
"mafia3.exe"+2F04C9B: 02 48 8B                       -  add cl,[rax-75]
"mafia3.exe"+2F04C9E: C2 C3 48                       -  ret 48C3
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>126</ID>
          <Description>"Read Ammo (Remaining) 2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(read_max_ammo2,mafia3.exe,8B 78 04 42 8D 0C 07)
registersymbol(read_max_ammo2)

[DISABLE]
unregistersymbol(read_max_ammo2)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+2F0940F

"mafia3.exe"+2F093F2: 48 8B 4D 18              -  mov rcx,[rbp+18]
"mafia3.exe"+2F093F6: 48 3B C1                 -  cmp rax,rcx
"mafia3.exe"+2F093F9: 74 17                    -  je mafia3.exe+2F09412
"mafia3.exe"+2F093FB: 0F 1F 44 00 00           -  nop [rax+rax+00]
"mafia3.exe"+2F09400: 39 10                    -  cmp [rax],edx
"mafia3.exe"+2F09402: 74 0B                    -  je mafia3.exe+2F0940F
"mafia3.exe"+2F09404: 48 83 C0 08              -  add rax,08
"mafia3.exe"+2F09408: 48 3B C1                 -  cmp rax,rcx
"mafia3.exe"+2F0940B: 75 F3                    -  jne mafia3.exe+2F09400
"mafia3.exe"+2F0940D: EB 03                    -  jmp mafia3.exe+2F09412
// ---------- INJECTING HERE ----------
"mafia3.exe"+2F0940F: 8B 78 04                 -  mov edi,[rax+04]
"mafia3.exe"+2F09412: 42 8D 0C 07              -  lea ecx,[rdi+r8]
// ---------- DONE INJECTING  ----------
"mafia3.exe"+2F09416: 85 C9                    -  test ecx,ecx
"mafia3.exe"+2F09418: 74 04                    -  je mafia3.exe+2F0941E
"mafia3.exe"+2F0941A: B0 01                    -  mov al,01
"mafia3.exe"+2F0941C: EB 02                    -  jmp mafia3.exe+2F09420
"mafia3.exe"+2F0941E: 32 C0                    -  xor al,al
"mafia3.exe"+2F09420: 48 8B 5C 24 60           -  mov rbx,[rsp+60]
"mafia3.exe"+2F09425: 48 8B 6C 24 70           -  mov rbp,[rsp+70]
"mafia3.exe"+2F0942A: 48 83 C4 40              -  add rsp,40
"mafia3.exe"+2F0942E: 41 5E                    -  pop r14
"mafia3.exe"+2F09430: 5F                       -  pop rdi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"Last Item Walked Over"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(last_item,mafia3.exe,41 8B 9C 24 34 01 00 00)
alloc(newmem,$1000,last_item)

label(code)
label(return)
label(last_item_ptr)

newmem:

code:
  mov rdx,last_item_ptr
  mov [rdx],r12
  mov ebx,[r12+00000134]
  jmp return

last_item_ptr:
  dq 0

last_item:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(last_item)
registersymbol(last_item_ptr)

[DISABLE]
last_item:
  db 41 8B 9C 24 34 01 00 00
unregistersymbol(last_item)
unregistersymbol(last_item_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+3888A3A

"mafia3.exe"+3888A0D: 49 8B 94 24 08 01 00 00  -  mov rdx,[r12+00000108]
"mafia3.exe"+3888A15: 89 44 24 48              -  mov [rsp+48],eax
"mafia3.exe"+3888A19: 48 85 D2                 -  test rdx,rdx
"mafia3.exe"+3888A1C: 74 0D                    -  je mafia3.exe+3888A2B
"mafia3.exe"+3888A1E: 48 63 4A 04              -  movsxd  rcx,dword ptr [rdx+04]
"mafia3.exe"+3888A22: 8B 94 11 18 02 00 00     -  mov edx,[rcx+rdx+00000218]
"mafia3.exe"+3888A29: EB 03                    -  jmp mafia3.exe+3888A2E
"mafia3.exe"+3888A2B: 41 8B D6                 -  mov edx,r14d
"mafia3.exe"+3888A2E: 48 8B 8F 28 01 00 00     -  mov rcx,[rdi+00000128]
"mafia3.exe"+3888A35: E8 F6 C0 67 FF           -  call mafia3.exe+2F04B30
// ---------- INJECTING HERE ----------
"mafia3.exe"+3888A3A: 41 8B 9C 24 34 01 00 00  -  mov ebx,[r12+00000134]
// ---------- DONE INJECTING  ----------
"mafia3.exe"+3888A42: 48 8D 54 24 30           -  lea rdx,[rsp+30]
"mafia3.exe"+3888A47: 4C 8B 64 24 60           -  mov r12,[rsp+60]
"mafia3.exe"+3888A4C: 8B F8                    -  mov edi,eax
"mafia3.exe"+3888A4E: 49 8B 8C 24 28 01 00 00  -  mov rcx,[r12+00000128]
"mafia3.exe"+3888A56: E8 15 B1 B6 FF           -  call mafia3.exe+33F3B70
"mafia3.exe"+3888A5B: 8B 8D 38 02 00 00        -  mov ecx,[rbp+00000238]
"mafia3.exe"+3888A61: 03 C3                    -  add eax,ebx
"mafia3.exe"+3888A63: 03 4C 24 48              -  add ecx,[rsp+48]
"mafia3.exe"+3888A67: 03 C7                    -  add eax,edi
"mafia3.exe"+3888A69: 03 85 28 02 00 00        -  add eax,[rbp+00000228]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>106</ID>
              <Description>"Base Address"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>last_item_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>109</ID>
                  <Description>"Ammo (Clip)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+130</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>110</ID>
                  <Description>"Ammo (Remaining)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+134</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>107</ID>
                  <Description>"Item Class"</Description>
                  <LastState RealAddress="00000000"/>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+a8</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>108</ID>
                      <Description>"Item Name"</Description>
                      <VariableType>String</VariableType>
                      <Length>32</Length>
                      <Unicode>0</Unicode>
                      <ZeroTerminate>1</ZeroTerminate>
                      <Address>+50</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>119</ID>
                  <Description>"HUD Icon"</Description>
                  <LastState RealAddress="00000000"/>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+108</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>120</ID>
                      <Description>"Item Name"</Description>
                      <VariableType>String</VariableType>
                      <Length>32</Length>
                      <Unicode>0</Unicode>
                      <ZeroTerminate>1</ZeroTerminate>
                      <Address>+8</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>121</ID>
                      <Description>"Item Name"</Description>
                      <VariableType>String</VariableType>
                      <Length>32</Length>
                      <Unicode>0</Unicode>
                      <ZeroTerminate>1</ZeroTerminate>
                      <Address>+28</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>140</ID>
          <Description>"Cash Multiplier"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(cash_mult,mafia3.exe,45 8B 02 83 C9 FF)
alloc(newmem,$1000,cash_mult)

label(code)
label(return)

newmem:

code:
  mov r8d,[r10]
  or ecx,-01
  jmp return

cash_mult:
  jmp newmem
  nop
return:
registersymbol(cash_mult)

[DISABLE]
cash_mult:
  db 45 8B 02 83 C9 FF
unregistersymbol(cash_mult)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+2178C7F

"mafia3.exe"+2178C62: 4C 8B 11                    -  mov r10,[rcx]
"mafia3.exe"+2178C65: 45 8B D8                    -  mov r11d,r8d
"mafia3.exe"+2178C68: 48 8B D9                    -  mov rbx,rcx
"mafia3.exe"+2178C6B: 45 8B C8                    -  mov r9d,r8d
"mafia3.exe"+2178C6E: 45 85 C0                    -  test r8d,r8d
"mafia3.exe"+2178C71: 74 0C                       -  je mafia3.exe+2178C7F
"mafia3.exe"+2178C73: 41 83 E9 01                 -  sub r9d,01
"mafia3.exe"+2178C77: 74 28                       -  je mafia3.exe+2178CA1
"mafia3.exe"+2178C79: 41 83 F9 01                 -  cmp r9d,01
"mafia3.exe"+2178C7D: 75 16                       -  jne mafia3.exe+2178C95
// ---------- INJECTING HERE ----------
"mafia3.exe"+2178C7F: 45 8B 02                    -  mov r8d,[r10]
"mafia3.exe"+2178C82: 83 C9 FF                    -  or ecx,-01
// ---------- DONE INJECTING  ----------
"mafia3.exe"+2178C85: 8B C1                       -  mov eax,ecx
"mafia3.exe"+2178C87: 41 2B C0                    -  sub eax,r8d
"mafia3.exe"+2178C8A: 3B C2                       -  cmp eax,edx
"mafia3.exe"+2178C8C: 72 04                       -  jb mafia3.exe+2178C92
"mafia3.exe"+2178C8E: 41 8D 0C 10                 -  lea ecx,[r8+rdx]
"mafia3.exe"+2178C92: 41 89 0A                    -  mov [r10],ecx
"mafia3.exe"+2178C95: 41 8B D3                    -  mov edx,r11d
"mafia3.exe"+2178C98: 48 8B CB                    -  mov rcx,rbx
"mafia3.exe"+2178C9B: 5B                          -  pop rbx
"mafia3.exe"+2178C9C: E9 4F FA 04 00              -  jmp mafia3.exe+21C86F0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>144</ID>
          <Description>"Adrenaline Shots"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(health_kits,mafia3.exe,8B 41 18 C3 90 2C)
alloc(newmem,$1000,health_kits)

label(code)
label(return)
label(health_kits_ptr)

newmem:
  mov rax,health_kits_ptr
  mov [rax],rcx
  xor rax,rax
code:
  mov eax,[rcx+18]
  ret 
  nop 
  jmp return

health_kits_ptr:
  dq 0

health_kits:
  jmp newmem
return:
registersymbol(health_kits)
registersymbol(health_kits_ptr)

[DISABLE]
health_kits:
  db 8B 41 18 C3 90
unregistersymbol(health_kits)
unregistersymbol(health_kits_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+2EFEA10

"mafia3.exe"+2EFE9ED: 48 8B 5C 24 40              -  mov rbx,[rsp+40]
"mafia3.exe"+2EFE9F2: 48 8B 44 C6 58              -  mov rax,[rsi+rax*8+58]
"mafia3.exe"+2EFE9F7: 48 8B 74 24 48              -  mov rsi,[rsp+48]
"mafia3.exe"+2EFE9FC: 48 83 C4 20                 -  add rsp,20
"mafia3.exe"+2EFEA00: 41 5E                       -  pop r14
"mafia3.exe"+2EFEA02: C3                          -  ret 
"mafia3.exe"+2EFEA03: CC                          -  int 3 
"mafia3.exe"+2EFEA04: 48 8B 97 40 01 00 00        -  mov rdx,[rdi+00000140]
"mafia3.exe"+2EFEA0B: 0F 28 D4                    -  movaps xmm2,xmm4
"mafia3.exe"+2EFEA0E: 0F 28 8B 41 18              - db 0F 28 8B 41 18  // SHORTENED TO HIT INJECTION FROM:  movaps xmm1,[rbx-6F3CE7BF]
// ---------- INJECTING HERE ----------
"mafia3.exe"+2EFEA13: C3                          -  ret 
"mafia3.exe"+2EFEA14: 90                          -  nop 
// ---------- DONE INJECTING  ----------
"mafia3.exe"+2EFEA15: 2C 6E                       -  sub al,6E
"mafia3.exe"+2EFEA17: E4 42                       -  in al,42
"mafia3.exe"+2EFEA19: 30 EF                       -  xor bh,ch
"mafia3.exe"+2EFEA1B: 19 1C E5 B6 01 40 53        -  sbb [534001B6],ebx
"mafia3.exe"+2EFEA22: 48 83 EC 20                 -  sub rsp,20
"mafia3.exe"+2EFEA26: 48 83 B9 40 01 00 00 00     -  cmp qword ptr [rcx+00000140],00
"mafia3.exe"+2EFEA2E: 48 8B D9                    -  mov rbx,rcx
"mafia3.exe"+2EFEA31: 75 37                       -  jne mafia3.exe+2EFEA6A
"mafia3.exe"+2EFEA33: B9 10 00 00 00              -  mov ecx,00000010
"mafia3.exe"+2EFEA38: E8 D3 ED A3 FF              -  call mafia3.exe+293D810
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>143</ID>
              <Description>"Adrenaline Shots"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>health_kits_ptr</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>187</ID>
          <Description>"Zero Out Floats"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(instant_damage,mafia3.exe,F3 41 0F 5C 40 08 4C 8B 6C)
instant_damage:
  db 0F 57 C0 90 90 90
registersymbol(instant_damage)

[DISABLE]
instant_damage:
  db F3 41 0F 5C 40 08
unregistersymbol(instant_damage)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+4892AF0

"mafia3.exe"+4892AD4: 41 8B 01              -  mov eax,[r9]
"mafia3.exe"+4892AD7: 0F 94 C2              -  sete dl
"mafia3.exe"+4892ADA: 33 C9                 -  xor ecx,ecx
"mafia3.exe"+4892ADC: 83 E0 0F              -  and eax,0F
"mafia3.exe"+4892ADF: 3C 03                 -  cmp al,03
"mafia3.exe"+4892AE1: 0F 94 C1              -  sete cl
"mafia3.exe"+4892AE4: 85 D1                 -  test ecx,edx
"mafia3.exe"+4892AE6: 74 2A                 -  je mafia3.exe+4892B12
"mafia3.exe"+4892AE8: F3 41 0F 10 41 08     -  movss xmm0,[r9+08]
"mafia3.exe"+4892AEE: 33 D2                 -  xor edx,edx
// ---------- INJECTING HERE ----------
"mafia3.exe"+4892AF0: F3 41 0F 5C 40 08     -  subss xmm0,[r8+08]
// ---------- DONE INJECTING  ----------
"mafia3.exe"+4892AF6: 4C 8B 6C 24 48        -  mov r13,[rsp+48]
"mafia3.exe"+4892AFB: 44 8B 85 B8 04 00 00  -  mov r8d,[rbp+000004B8]
"mafia3.exe"+4892B02: C7 07 03 00 00 00     -  mov [rdi],00000003
"mafia3.exe"+4892B08: F3 0F 11 47 08        -  movss [rdi+08],xmm0
"mafia3.exe"+4892B0D: E9 0E EF FF FF        -  jmp mafia3.exe+4891A20
"mafia3.exe"+4892B12: 41 0F 10 00           -  movups xmm0,[r8]
"mafia3.exe"+4892B16: 4C 8D 45 80           -  lea r8,[rbp-80]
"mafia3.exe"+4892B1A: 4C 89 7C 24 20        -  mov [rsp+20],r15
"mafia3.exe"+4892B1F: 49 8B D4              -  mov rdx,r12
"mafia3.exe"+4892B22: 48 8D 8D D0 02 00 00  -  lea rcx,[rbp+000002D0]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>186</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(test_float,mafia3.exe,F3 0F 10 41 18 C3 CC C1)
alloc(newmem,$1000,test_float)

label(code)
label(return)

newmem:
  push rax
  mov rax,20A94ABE9C0
  cmp rax,rcx
  jne code
  nop
code:
  pop rax
  movss xmm0,[rcx+18]
  jmp return

test_float:
  jmp newmem
return:
registersymbol(test_float)

[DISABLE]

test_float:
  db F3 0F 10 41 18

unregistersymbol(test_float)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+1118420

"mafia3.exe"+111840C: FF 50 10                    -  call qword ptr [rax+10]
"mafia3.exe"+111840F: 48 8B C3                    -  mov rax,rbx
"mafia3.exe"+1118412: 48 83 C4 20                 -  add rsp,20
"mafia3.exe"+1118416: 5B                          -  pop rbx
"mafia3.exe"+1118417: C3                          -  ret 
"mafia3.exe"+1118418: 90                          -  nop 
"mafia3.exe"+1118419: C1                          -   
"mafia3.exe"+111841A: 75 4C                       -  jne mafia3.exe+1118468
"mafia3.exe"+111841C: B1 E7                       -  mov cl,-19
"mafia3.exe"+111841E: 7C AC                       -  jl mafia3.exe+11183CC
// ---------- INJECTING HERE ----------
"mafia3.exe"+1118420: F3 0F 10 41 18              -  movss xmm0,[rcx+18]
// ---------- DONE INJECTING  ----------
"mafia3.exe"+1118425: C3                          -  ret 
"mafia3.exe"+1118426: CC                          -  int 3 
"mafia3.exe"+1118427: C1 A2 64 31 4B A3 BF        -  shl [rdx-5CB4CE9C],-41
"mafia3.exe"+111842E: 11 EC                       -  adc esp,ebp
"mafia3.exe"+1118430: 48 83 EC 28                 -  sub rsp,28
"mafia3.exe"+1118434: 48 8B 49 50                 -  mov rcx,[rcx+50]
"mafia3.exe"+1118438: 48 85 C9                    -  test rcx,rcx
"mafia3.exe"+111843B: 75 07                       -  jne mafia3.exe+1118444
"mafia3.exe"+111843D: FF 15 3D E3 77 03           -  call qword ptr [mafia3.exe+4896780]
"mafia3.exe"+1118443: 90                          -  nop 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>188</ID>
          <Description>"Last Float Changed (Racket Damage)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(last_float,mafia3.exe,0F 11 49 18 C3 CC 7E)
alloc(newmem,$1000,last_float)

label(code)
label(return)
label(last_float_ptr)

newmem:
  push rax
  mov rax,last_float_ptr
  mov [rax],rcx
  pop rax
code:
  movups [rcx+18],xmm1
  ret 
  jmp return

last_float_ptr:
  dq 0

last_float:
  jmp newmem
return:
registersymbol(last_float)
registersymbol(last_float_ptr)

[DISABLE]
last_float:
  db 0F 11 49 18 C3
unregistersymbol(last_float)
unregistersymbol(last_float_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+1141811

"mafia3.exe"+11417F1: 48 8B 01                    -  mov rax,[rcx]
"mafia3.exe"+11417F4: 48 83 C4 28                 -  add rsp,28
"mafia3.exe"+11417F8: 48 FF 60 10                 -  jmp qword ptr [rax+10]
"mafia3.exe"+11417FC: 48 83 C4 28                 -  add rsp,28
"mafia3.exe"+1141800: C3                          -  ret 
"mafia3.exe"+1141801: CC                          -  int 3 
"mafia3.exe"+1141802: 0F 15 8C 5C 52 EA ED B2     -  unpckhps xmm1,[rsp+rbx*2-4D1215AE]
"mafia3.exe"+114180A: 51                          -  push rcx
"mafia3.exe"+114180B: 32 5C 75 65                 -  xor bl,[rbp+rsi*2+65]
"mafia3.exe"+114180F: 0C F3                       -  or al,-0D
// ---------- INJECTING HERE ----------
"mafia3.exe"+1141811: 0F 11 49 18                 -  movups [rcx+18],xmm1
"mafia3.exe"+1141815: C3                          -  ret 
// ---------- DONE INJECTING  ----------
"mafia3.exe"+1141816: CC                          -  int 3 
"mafia3.exe"+1141817: 7E 77                       -  jle mafia3.exe+1141890
"mafia3.exe"+1141819: E0 90                       -  loopne mafia3.exe+11417AB
"mafia3.exe"+114181B: 77 03                       -  ja mafia3.exe+1141820
"mafia3.exe"+114181D: 49 10 B2 48 83 EC 28        -  adc [r10+28EC8348],sil
"mafia3.exe"+1141824: 48 83 B9 90 00 00 00 00     -  cmp qword ptr [rcx+00000090],00
"mafia3.exe"+114182C: 74 24                       -  je mafia3.exe+1141852
"mafia3.exe"+114182E: 48 8B 89 90 00 00 00        -  mov rcx,[rcx+00000090]
"mafia3.exe"+1141835: F3 0F 11 4C 24 30           -  movss [rsp+30],xmm1
"mafia3.exe"+114183B: 48 85 C9                    -  test rcx,rcx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>189</ID>
              <Description>"Last Float"</Description>
              <VariableType>Float</VariableType>
              <Address>last_float_ptr</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>179</ID>
          <Description>"Wiretap Fuse Pointer (Open Map)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(electronics,mafia3.exe,38 48 8B 43 48 F3 0F 11 40 08)
alloc(newmem,$1000,electronics)

label(code)
label(return)
label(electronics_ptr)

newmem:
  mov rax,electronics_ptr
  mov [rax],rcx
code:
  mov rax,[rbx+48]
  movss [rax+08],xmm0
  jmp return

electronics_ptr:
dq 0

electronics+01:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(electronics)
registersymbol(electronics_ptr)

[DISABLE]
electronics+01:
  db 48 8B 43 48 F3 0F 11 40 08
unregistersymbol(electronics)
unregistersymbol(electronics_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "mafia3.exe"+1134A3F

"mafia3.exe"+1134A22: 5B                          -  pop rbx
"mafia3.exe"+1134A23: C3                          -  ret 
"mafia3.exe"+1134A24: 90                          -  nop 
"mafia3.exe"+1134A25: C5 83 7E E9 56 BA           -  lds eax,[rbx-45A91682]
"mafia3.exe"+1134A2B: A1 15 03 2F B3 40 53 48 83  -  mov eax,[83485340B32F0315]
"mafia3.exe"+1134A34: EC                          -  in al,dx
"mafia3.exe"+1134A35: 20 48 8B                    -  and [rax-75],cl
"mafia3.exe"+1134A38: 01 48 8B                    -  add [rax-75],ecx
"mafia3.exe"+1134A3B: DA                          -   
"mafia3.exe"+1134A3C: FF 50 38                    -  call qword ptr [rax+38]
// ---------- INJECTING HERE ----------
"mafia3.exe"+1134A3F: 48 8B 43 48                 -  mov rax,[rbx+48]
"mafia3.exe"+1134A43: F3 0F 11 40 08              -  movss [rax+08],xmm0
// ---------- DONE INJECTING  ----------
"mafia3.exe"+1134A48: C7 00 03 00 00 00           -  mov [rax],00000003
"mafia3.exe"+1134A4E: 48 83 C0 10                 -  add rax,10
"mafia3.exe"+1134A52: 48 89 43 48                 -  mov [rbx+48],rax
"mafia3.exe"+1134A56: B8 01 00 00 00              -  mov eax,00000001
"mafia3.exe"+1134A5B: 48 83 C4 20                 -  add rsp,20
"mafia3.exe"+1134A5F: 5B                          -  pop rbx
"mafia3.exe"+1134A60: C3                          -  ret 
"mafia3.exe"+1134A61: 90                          -  nop 
"mafia3.exe"+1134A62: 51                          -  push rcx
"mafia3.exe"+1134A63: 4B 6C                       -  insb 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>166</ID>
              <Description>"Electronics"</Description>
              <VariableType>Float</VariableType>
              <Address>electronics_ptr</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>last_item</Name>
      <Address>7FF671C78A3A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>last_item_ptr</Name>
      <Address>7FF66E3E0023</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health_kits</Name>
      <Address>7FF7CE56EA10</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health_kits_ptr</Name>
      <Address>7FF7CB660023</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>read_vars2</Name>
      <Address>7FF7CD810B61</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>change_vars</Name>
      <Address>7FF7CD7E8C7F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>read_floats</Name>
      <Address> 7FF6C6F58420</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
