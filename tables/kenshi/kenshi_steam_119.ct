<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Lot's of Money"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(StepOver)

aobscan(LoMaob,8B 40 30 8B E5 5D C3 CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 83 EC 10)

newmem:
cmp [eax+D4],(float)1     //Player's money?
jne StepOver              //If no, do normal
mov [eax+30],#999999999   //If Yes, give 999,999,999 Catz to player
StepOver:
mov eax,[eax+30]
mov esp,ebp
jmp returnhere

//"kenshi_STEAM.exe"+169B5A:
LoMaob:
label(LoM_Inject)
LoM_Inject:
registersymbol(LoM_Inject)
jmp newmem
returnhere:

[DISABLE]
//"kenshi_STEAM.exe"+169B5A:
LoM_Inject:
db 8B 40 30 8B E5

dealloc(newmem)
unregistersymbol(LoM_Inject)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Instant Fill Building Condition"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(StepOver)

aobscan(MBCaob,D9 9A B8 00 00 00 8B 45 F4)

newmem:
fstp dword ptr [edx+000000B8]  //Keep fstp for code flow
push eax                       //Temprly use EAX
mov eax,[edx+C0]               //mov Current building Materials into EAX
mov [edx+B8],eax               //MOV current materials into current condition
pop eax                        //Done with EAX

StepOver:
jmp returnhere

//"kenshi_STEAM.exe"+234460:
MBCaob:
label(MBC_Inject)
MBC_Inject:
registersymbol(MBC_Inject)
jmp newmem
nop
returnhere:

[DISABLE]
//"kenshi_STEAM.exe"+234460:
MBC_Inject:
db D9 9A B8 00 00 00

dealloc(newmem)
unregistersymbol(MBC_Inject)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Instant Fill Building Materials"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
alloc(CurrentM,4)
alloc(MaxM,4)
registersymbol(CurrentM)
registersymbol(MaxM)
label(returnhere)
label(originalcode)

aobscan(IFBMaob,D9 59 0C 8B E5 5D C3 CC CC CC 55)

newmem:
fstp dword ptr [ecx+0C]   //Keep fstp for code flow
push eax                  //Temporarly work with EAX
mov eax,[ecx+08]          //MOV Needed building materials in EAX
mov [ecx+0C],eax          //MOV Needed building materials into current building materials
pop eax                   //Done with EAX
originalcode:
mov esp,ebp
jmp returnhere

//"kenshi_STEAM.exe"+184326:
IFBMaob:
label(IFBM_Inject)
IFBM_Inject:
registersymbol(IFBM_Inject)
jmp newmem
returnhere:

[DISABLE]
//"kenshi_STEAM.exe"+184326:
IFBM_Inject:
db D9 59 0C 8B E5

dealloc(newmem)
dealloc(CurrentM)
dealloc(MaxM)
unregistersymbol(CurrentM)
unregistersymbol(MaxM)
unregistersymbol(IFBM_Inject)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Instant Material Production"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(StepOver)

aobscan(IMPaob,D9 1A * * 8B 45 AC)

newmem:
fstp dword ptr [edx]            //Leave fstp for proper code flow
cmp [edx],(float)0.90           //Check if production Que is 90%
jnl StepOver                    //If Production Que is less than 90%, if more goto StepOver
mov [edx],(float)0.99           //Move 99% into production que
StepOver:
jmp kenshi_STEAM.exe+119E89
mov eax,[ebp-54]
jmp returnhere

//"kenshi_STEAM.exe"+119E78:
IMPaob:
label(IMP_Inject)
IMP_Inject:
registersymbol(IMP_Inject)
jmp newmem
nop
nop
returnhere:

[DISABLE]
//"kenshi_STEAM.exe"+119E78:
IMP_Inject:
db D9 1A EB 0D 8B 45 AC

dealloc(newmem)
unregistersymbol(IMP_Inject)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Instant Item Production"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(StepOver)

aobscan(IIPaob,D9 58 0C 8B 4D B4 8B 11 8B 45 B4)

newmem:
fstp dword ptr [eax+0C]    //Keep fstp for proper code flow
push edx                   //Use EDX tempry
mov edx,[eax+08]           //MOV finished item state into EDX
cmp [eax+04],edx           //Is the current state equal to the finished state?
jae StepOver               //If Current is above or equal to finished, then skip
mov [eax+04],edx           //Finish the item
pop edx                    //Done with EDX

StepOver:
mov ecx,[ebp-4C]
jmp returnhere

//"kenshi_STEAM.exe"+13DD9D:
IIPaob:
label(IIP_Inject)
IIP_Inject:
registersymbol(IIP_Inject)
jmp newmem
nop
returnhere:

[DISABLE]
//"kenshi_STEAM.exe"+13DD9D:
IIP_Inject:
db D9 58 0C 8B 4D B4

dealloc(newmem)
unregistersymbol(IIP_Inject)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Instant Research"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(StepOver)

aobscan(IRaob,D8 45 08 8B 55 FC D9 5A 04)

newmem:
mov [ebp+08],(float)1000.00        //MOV 1,000 into EBP (Research speed)

StepOver:
fadd dword ptr [ebp+08]
mov edx,[ebp-04]
jmp returnhere

//"kenshi_STEAM.exe"+39859D:
IRaob:
label(IR_Inject)
IR_Inject:
registersymbol(IR_Inject)
jmp newmem
nop
returnhere:

[DISABLE]
//"kenshi_STEAM.exe"+39859D:
IR_Inject:
db D9 5A 04 8B 45 F0

dealloc(newmem)
unregistersymbol(IR_Inject)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Chage Stats"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
alloc(SkillPoints,4)
alloc(RunTimes,4)
registersymbol(SkillPoints)
registersymbol(RunTimes)
label(returnhere)
label(StepOver)
label(Reset)

aobscan(SCaob,D8 81 A0 00 00 00 D9 5D F8 D9 45 F8)

SkillPoints:
 dd 0

RunTimes:
 dd 0

newmem:
cmp [RunTimes],#300
je Reset
cmp [SkillPoints],0  //If user hasn't set a value, jump over code
je StepOver
push edx
mov edx,[ecx+4]      //Closer to Pointer of Ownership
mov edx,[edx+C8]     //Closer to Pointer of Ownership
cmp [edx+84],0       //Closer to Pointer of Ownership, make sure no garbage is loaded
je StepOver
mov edx,[edx+84]     //Closer to Pointer of Ownership
cmp [edx+4],0        //Pointer of Ownership, make sure I own the unit
pop edx
jne StepOver
push edx
mov edx,[SkillPoints]
mov [ecx+1C],edx     //Strength
mov [ecx+24],edx     //Dexterity
mov [ecx+2C],edx     //Toughness
mov [ecx+30],edx     //Athletics
mov [ecx+34],edx     //Medic
mov [ecx+44],edx     //Thievery
mov [ecx+60],edx     //Field Engineer
mov [ecx+64],edx     //Weapon Smith
mov [ecx+68],edx     //Armour Smith
mov [ecx+70],edx     //Science
mov [ecx+74],edx     //Labouring
mov [ecx+78],edx     //Katanas
mov [ecx+7C],edx     //Sabers
mov [ecx+80],edx     //Hackers
mov [ecx+88],edx     //Heavy Weapons
mov [ecx+A0],edx     //Melee Attack
mov [ecx+A4],edx     //Melee Defense
pop edx
inc [RunTimes]     //Only Run Defined # of Times
jmp StepOver
Reset:
mov [SkillPoints],0
mov [RunTimes],0
StepOver:
fadd dword ptr [ecx+000000A0]
jmp returnhere

//"kenshi_STEAM.exe"+3C1E12:
SCaob:
label(SC_Inject)
SC_Inject:
registersymbol(SC_Inject)
jmp newmem
nop
returnhere:

[DISABLE]
//"kenshi_STEAM.exe"+3C1E12:
SC_Inject:
db D8 81 A0 00 00 00

dealloc(newmem)
dealloc(SkillPoints)
dealloc(RunTimes)
unregistersymbol(SkillPoints)
unregistersymbol(RunTimes)
unregistersymbol(SC_Inject)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Zero disables code, change to activate!"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Changes Stats To:"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>SkillPoints</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>49</Key>
                  </Keys>
                  <Value>100</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>SC_Inject</Name>
      <Address>017367F2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IIP_Inject</Name>
      <Address>014ADD9D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IMP_Inject</Name>
      <Address>01489E78</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IFBM_Inject</Name>
      <Address>014F4326</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MBC_Inject</Name>
      <Address>015A4460</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>LoM_Inject</Name>
      <Address>014DA36A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IR_Inject</Name>
      <Address>01708597</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
