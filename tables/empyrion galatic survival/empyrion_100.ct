<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>1040</ID>
      <Description>"Open"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(player,F3 0F 10 86 1C 01 00 00 F3 0F 5A C0 66 0F 57 C9 F2 0F 5A C9)
alloc(newmem,$1000,player)

label(code)
label(return1)
label(player_ptr)

newmem:

code:
  mov qword ptr [player_ptr],rsi
  movss xmm0,[rsi+0000011C]
  jmp return1

player_ptr:
  dq 0

player:
  jmp code
  nop
  nop
  nop
return1:
registersymbol(player)
registersymbol(player_ptr)

[DISABLE]

player:
  movss xmm0,[rsi+0000011C]
unregistersymbol(player_ptr)
unregistersymbol(player)
dealloc(newmem)


{
aobscan(GetBase,48 8B 46 40 48 8B 80 * 04 00 00 48 8B 40 30 48 8B C8) // should be unique
alloc(newmem2,$1000,GetBase)
alloc(BasePTR,8)

label(code2)
label(return2)
label(GetBaseBkp)

newmem2:

code2:
GetBaseBkp:
  readmem(GetBase+4,8)
  mov [BasePTR],rax
  jmp return2

GetBase+4:
  jmp newmem2
  nop
  nop
return2:
registersymbol(GetBase)
registersymbol(GetBaseBkp)
registersymbol(BasePTR)

GetBase+4:
  readmem(GetBaseBkp,7)
unregistersymbol(GetBase)
unregistersymbol(GetBaseBkp)
unregistersymbol(BasePTR)
dealloc(newmem)
dealloc(BasePTR)




{
// ORIGINAL CODE - INJECTION POINT: 12B07BE8

12B07BB5: 66 0F 57 C9                    -  xorpd xmm1,xmm1
12B07BB9: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
12B07BBD: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
12B07BC1: 48 83 EC 20                    -  sub rsp,20
12B07BC5: 49 BB 50 8B B0 AC 00 00 00 00  -  mov r11,00000000ACB08B50
12B07BCF: 41 FF D3                       -  call r11d
12B07BD2: 48 83 C4 20                    -  add rsp,20
12B07BD6: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
12B07BDA: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
12B07BDF: F3 44 0F 11 BD 70 FF FF FF     -  movss [rbp-00000090],xmm15
// ---------- INJECTING HERE ----------
12B07BE8: F3 0F 10 86 18 01 00 00        -  movss xmm0,[rsi+00000118]
// ---------- DONE INJECTING  ----------
12B07BF0: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
12B07BF4: F2 0F 11 85 50 FF FF FF        -  movsd [rbp-000000B0],xmm0
12B07BFC: 48 8B 46 40                    -  mov rax,[rsi+40]
12B07C00: 48 8B C8                       -  mov rcx,rax
12B07C03: 48 83 EC 20                    -  sub rsp,20
12B07C07: 48 8B 00                       -  mov rax,[rax]
12B07C0A: 90                             -  nop
12B07C0B: 90                             -  nop
12B07C0C: 90                             -  nop
12B07C0D: FF 90 08 06 00 00              -  call qword ptr [rax+00000608]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1050</ID>
          <Description>"Stats"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1464</ID>
              <Description>"PlayerPTR"</Description>
              <LastState RealAddress="11A939478"/>
              <Color>000000</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>1</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>478</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1452</ID>
              <Description>"Health"</Description>
              <LastState Value="500" RealAddress="14AB1AD4C"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>2C</Offset>
                <Offset>28</Offset>
                <Offset>470</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1041</ID>
              <Description>"Health Max"</Description>
              <LastState Value="500" RealAddress="14AB1AD48"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>28</Offset>
                <Offset>28</Offset>
                <Offset>470</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1453</ID>
              <Description>"Oxygen"</Description>
              <LastState Value="266.0655823" RealAddress="14AB1AC5C"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>2C</Offset>
                <Offset>30</Offset>
                <Offset>470</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1048</ID>
              <Description>"Oxygen Max"</Description>
              <LastState Value="500" RealAddress="14AB1AC58"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>28</Offset>
                <Offset>30</Offset>
                <Offset>470</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1454</ID>
              <Description>"Food"</Description>
              <LastState Value="468.5418091" RealAddress="14AB1ACAC"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>2C</Offset>
                <Offset>18</Offset>
                <Offset>470</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1047</ID>
              <Description>"Food Max"</Description>
              <LastState Value="500" RealAddress="14AB1ACA8"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>28</Offset>
                <Offset>18</Offset>
                <Offset>470</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1455</ID>
              <Description>"Stamina"</Description>
              <LastState Value="500" RealAddress="14AB1ACFC"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>2C</Offset>
                <Offset>20</Offset>
                <Offset>470</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1473</ID>
              <Description>"Stamina Max"</Description>
              <LastState Value="500" RealAddress="14AB1ACF8"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>28</Offset>
                <Offset>20</Offset>
                <Offset>470</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1051</ID>
          <Description>"Scripts"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1476</ID>
              <Description>"Unlimited HP"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscan(maxhpaob,F3 0F 10 86 18 01 00 00 F3 0F 5A C0 66 0F 57 C9 F2) // should be unique
alloc(newmem,$1000,maxhpaob)

label(code)
label(return)

newmem:

code:
  push rsi
  mov rsi,[rsi+40]
  mov rsi,[rsi+470]
  mov rsi,[rsi+28]
  mov r11d,dword ptr [rsi+28]
  mov dword ptr [rsi+2c],r11d
  pop rsi
  movss xmm0,[rsi+00000118]
  jmp return

maxhpaob:
  jmp code
  nop
  nop
  nop
return:
registersymbol(maxhpaob)

[DISABLE]

maxhpaob:
  db F3 0F 10 86 18 01 00 00

unregistersymbol(maxhpaob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 12DBEB04

12DBEAD1: F2 0F 5A D2                    -  cvtsd2ss xmm2,xmm2
12DBEAD5: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
12DBEAD9: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
12DBEADD: 48 83 EC 20                    -  sub rsp,20
12DBEAE1: 49 BB 40 00 50 07 00 00 00 00  -  mov r11,0000000007500040
12DBEAEB: 41 FF D3                       -  call r11d
12DBEAEE: 48 83 C4 20                    -  add rsp,20
12DBEAF2: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
12DBEAF6: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
12DBEAFB: F3 44 0F 11 BE 1C 01 00 00     -  movss [rsi+0000011C],xmm15
// ---------- INJECTING HERE ----------
12DBEB04: F3 0F 10 86 18 01 00 00        -  movss xmm0,[rsi+00000118]
// ---------- DONE INJECTING  ----------
12DBEB0C: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
12DBEB10: 66 0F 57 C9                    -  xorpd xmm1,xmm1
12DBEB14: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
12DBEB18: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
12DBEB1C: 48 83 EC 20                    -  sub rsp,20
12DBEB20: 49 BB 90 C8 B4 61 00 00 00 00  -  mov r11,0000000061B4C890
12DBEB2A: 41 FF D3                       -  call r11d
12DBEB2D: 48 83 C4 20                    -  add rsp,20
12DBEB31: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
12DBEB35: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1474</ID>
              <Description>"Unlimited Oxygen"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(UnlimitedOxygen,FF F3 0F 10 86 14 01 00 00)
alloc(newmem,$1000,UnlimitedOxygen)

label(code)
label(return)

newmem:

code:
  push rsi
  mov rsi,[rsi+40]
  mov rsi,[rsi+470]
  mov rsi,[rsi+30]
  mov r11d,dword ptr [rsi+28]
  mov dword ptr [rsi+2c],r11d
  pop rsi
  movss xmm0,[rsi+00000114]
  jmp return

UnlimitedOxygen+01:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(UnlimitedOxygen)

[DISABLE]

UnlimitedOxygen+01:
  db F3 0F 10 86 14 01 00 00

unregistersymbol(UnlimitedOxygen)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1BFF0DB9

""+1BFF0D8B: 66 0F 57 C9                    -  xorpd xmm1,xmm1
""+1BFF0D8F: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
""+1BFF0D93: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
""+1BFF0D97: 48 83 EC 20                    -  sub rsp,20
""+1BFF0D9B: 49 BB 50 7F 54 39 00 00 00 00  -  mov r11,0000000039547F50
""+1BFF0DA5: 41 FF D3                       -  call r11
""+1BFF0DA8: 48 83 C4 20                    -  add rsp,20
""+1BFF0DAC: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+1BFF0DB0: F2 0F 5A E8                    -  cvtsd2ss xmm5,xmm0
""+1BFF0DB4: F3 0F 11 6D 80                 -  movss [rbp-80],xmm5
// ---------- INJECTING HERE ----------
""+1BFF0DB9: F3 0F 10 86 14 01 00 00        -  movss xmm0,[rsi+00000114]
// ---------- DONE INJECTING  ----------
""+1BFF0DC1: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+1BFF0DC5: F2 0F 11 85 38 FF FF FF        -  movsd [rbp-000000C8],xmm0
""+1BFF0DCD: 48 8B 46 40                    -  mov rax,[rsi+40]
""+1BFF0DD1: 48 8B 80 70 04 00 00           -  mov rax,[rax+00000470]
""+1BFF0DD8: 48 8B 40 30                    -  mov rax,[rax+30]
""+1BFF0DDC: 48 8B C8                       -  mov rcx,rax
""+1BFF0DDF: 48 83 EC 20                    -  sub rsp,20
""+1BFF0DE3: 83 38 00                       -  cmp dword ptr [rax],00
""+1BFF0DE6: 49 BB D0 7E 54 39 00 00 00 00  -  mov r11,0000000039547ED0
""+1BFF0DF0: 41 FF D3                       -  call r11
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1447</ID>
              <Description>"Unlimited Stamina"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscan(StaminaInstruction,FF F3 0F 10 86 1C 01 00 00)
alloc(newmem,$1000,StaminaInstruction)

label(code)
label(return)

newmem:

code:
  push rsi
  mov rsi,[rsi+40]
  mov rsi,[rsi+470]
  mov rsi,[rsi+20]
  mov r11d,dword ptr [rsi+28]
  mov dword ptr [rsi+2c],r11d
  pop rsi
  movss xmm0,[rsi+0000011C]
  jmp return

StaminaInstruction+01:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(StaminaInstruction)

[DISABLE]

StaminaInstruction+01:
  db F3 0F 10 86 1C 01 00 00

unregistersymbol(StaminaInstruction)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1BFF0E7A

""+1BFF0E49: 66 0F 57 C9                    -  xorpd xmm1,xmm1
""+1BFF0E4D: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
""+1BFF0E51: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
""+1BFF0E55: 48 83 EC 20                    -  sub rsp,20
""+1BFF0E59: 49 BB 50 7F 54 39 00 00 00 00  -  mov r11,0000000039547F50
""+1BFF0E63: 41 FF D3                       -  call r11
""+1BFF0E66: 48 83 C4 20                    -  add rsp,20
""+1BFF0E6A: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+1BFF0E6E: F2 0F 5A E8                    -  cvtsd2ss xmm5,xmm0
""+1BFF0E72: F3 0F 11 AD 7C FF FF FF        -  movss [rbp-00000084],xmm5
// ---------- INJECTING HERE ----------
""+1BFF0E7A: F3 0F 10 86 1C 01 00 00        -  movss xmm0,[rsi+0000011C]
// ---------- DONE INJECTING  ----------
""+1BFF0E82: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+1BFF0E86: F2 0F 11 85 48 FF FF FF        -  movsd [rbp-000000B8],xmm0
""+1BFF0E8E: 48 8B 46 40                    -  mov rax,[rsi+40]
""+1BFF0E92: 48 8B C8                       -  mov rcx,rax
""+1BFF0E95: 48 83 EC 20                    -  sub rsp,20
""+1BFF0E99: 48 8B 00                       -  mov rax,[rax]
""+1BFF0E9C: 90                             -  nop
""+1BFF0E9D: 90                             -  nop
""+1BFF0E9E: 90                             -  nop
""+1BFF0E9F: FF 90 10 06 00 00              -  call qword ptr [rax+00000610]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1530</ID>
              <Description>"Unlimited Food"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(FinFoodNow,F3 0F 11 AE 10 01 00 00 F3 0F 10 86)
alloc(newmem,$1000,FinFoodNow)

label(code)
label(return)

newmem:

code:
  push rsi
  mov rsi,[rsi+40]
  mov rsi,[rsi+470]
  mov rsi,[rsi+18]
  mov r11d,dword ptr [rsi+28]
  mov dword ptr [rsi+2c],r11d
  pop rsi
  movss [rsi+00000110],xmm5
  jmp return

FinFoodNow:
  jmp code
  nop
  nop
  nop
return:
registersymbol(FinFoodNow)

[DISABLE]

FinFoodNow:
  db F3 0F 11 AE 10 01 00 00

unregistersymbol(FinFoodNow)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1680FD47

""+1680FD1A: F3 0F 5A D2                    -  cvtss2sd xmm2,xmm2
""+1680FD1E: F2 0F 5A D2                    -  cvtsd2ss xmm2,xmm2
""+1680FD22: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
""+1680FD26: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
""+1680FD2A: 48 83 EC 20                    -  sub rsp,20
""+1680FD2E: 49 BB 50 63 B6 07 00 00 00 00  -  mov r11,0000000007B66350
""+1680FD38: 41 FF D3                       -  call r11d
""+1680FD3B: 48 83 C4 20                    -  add rsp,20
""+1680FD3F: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+1680FD43: F2 0F 5A E8                    -  cvtsd2ss xmm5,xmm0
// ---------- INJECTING HERE ----------
""+1680FD47: F3 0F 11 AE 10 01 00 00        -  movss [rsi+00000110],xmm5
// ---------- DONE INJECTING  ----------
""+1680FD4F: F3 0F 10 86 14 01 00 00        -  movss xmm0,[rsi+00000114]
""+1680FD57: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+1680FD5B: 66 0F 57 C9                    -  xorpd xmm1,xmm1
""+1680FD5F: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
""+1680FD63: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
""+1680FD67: 48 83 EC 20                    -  sub rsp,20
""+1680FD6B: 49 BB 50 48 F6 20 00 00 00 00  -  mov r11,0000000020F64850
""+1680FD75: 41 FF D3                       -  call r11d
""+1680FD78: 48 83 C4 20                    -  add rsp,20
""+1680FD7C: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1081</ID>
              <Description>"Unlimited Jetpack"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(JetPackAOB,89 86 * 08 00 00 EB 0F)
registersymbol(JetPackAOB)
JetPackAOB:
  db 90 90 90 90 90 90
[DISABLE]
JetPackAOB:
  db 89 86 6C 08 00 00
unregistersymbol(JetPackAOB)


{
// ORIGINAL CODE - INJECTION POINT: 9992E08A

9992E06C: 48 8B 06                       -  mov rax,[rsi]
9992E06F: 90                             -  nop
9992E070: 90                             -  nop
9992E071: 90                             -  nop
9992E072: FF 90 40 07 00 00              -  call qword ptr [rax+00000740]
9992E078: 48 83 C4 20                    -  add rsp,20
9992E07C: 85 C0                          -  test eax,eax
9992E07E: 74 12                          -  je 9992E092
9992E080: 48 63 86 4C 08 00 00           -  movsxd  rax,dword ptr [rsi+0000084C]
9992E087: 83 E8 05                       -  sub eax,05
// ---------- INJECTING HERE ----------
9992E08A: 89 86 4C 08 00 00              -  mov [rsi+0000084C],eax
// ---------- DONE INJECTING  ----------
9992E090: EB 0F                          -  jmp 9992E0A1
9992E092: 48 63 86 4C 08 00 00           -  movsxd  rax,dword ptr [rsi+0000084C]
9992E099: FF C0                          -  inc eax
9992E09B: 89 86 4C 08 00 00              -  mov [rsi+0000084C],eax
9992E0A1: 48 63 86 4C 08 00 00           -  movsxd  rax,dword ptr [rsi+0000084C]
9992E0A8: 85 C0                          -  test eax,eax
9992E0AA: 7F 11                          -  jg 9992E0BD
9992E0AC: B8 05 00 00 00                 -  mov eax,00000005
9992E0B1: 83 F8 01                       -  cmp eax,01
9992E0B4: C6 86 50 08 00 00 01           -  mov byte ptr [rsi+00000850],01
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1079</ID>
              <Description>"Unlimited Ammo"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(UnlimitedAmmoAOB,89 48 2C 49 8B 46 10 48 8B)
registersymbol(UnlimitedAmmoAOB)

UnlimitedAmmoAOB:

db 90 90 90

[DISABLE]

UnlimitedAmmoAOB:
  db 89 48 2C

unregistersymbol(UnlimitedAmmoAOB)


</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1080</ID>
              <Description>"Unlimited Items"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(AmmoAOB,89 48 18 48 8B 47 10 48 63)
registersymbol(AmmoAOB)

AmmoAOB:
nop
nop
nop

[DISABLE]

AmmoAOB:
  db 89 48 18

unregistersymbol(AmmoAOB)


{
// ORIGINAL CODE - INJECTION POINT: C8DECC8C

C8DECC62: 48 8B 47 10                    -  mov rax,[rdi+10]
C8DECC66: 48 63 8F 94 00 00 00           -  movsxd  rcx,dword ptr [rdi+00000094]
C8DECC6D: 48 63 C9                       -  movsxd  rcx,ecx
C8DECC70: 39 48 18                       -  cmp [rax+18],ecx
C8DECC73: 0F 86 14 01 00 00              -  jbe C8DECD8D
C8DECC79: 48 8D 44 C8 20                 -  lea rax,[rax+rcx*8+20]
C8DECC7E: 48 8B 00                       -  mov rax,[rax]
C8DECC81: 48 8B 40 18                    -  mov rax,[rax+18]
C8DECC85: 48 63 48 18                    -  movsxd  rcx,dword ptr [rax+18]
C8DECC89: 2B 4D E0                       -  sub ecx,[rbp-20]
// ---------- INJECTING HERE ----------
C8DECC8C: 89 48 18                       -  mov [rax+18],ecx
C8DECC8F: 48 8B 47 10                    -  mov rax,[rdi+10]
// ---------- DONE INJECTING  ----------
C8DECC93: 48 63 8F 94 00 00 00           -  movsxd  rcx,dword ptr [rdi+00000094]
C8DECC9A: 48 63 C9                       -  movsxd  rcx,ecx
C8DECC9D: 39 48 18                       -  cmp [rax+18],ecx
C8DECCA0: 0F 86 D0 00 00 00              -  jbe C8DECD76
C8DECCA6: 48 8D 44 C8 20                 -  lea rax,[rax+rcx*8+20]
C8DECCAB: 48 8B 00                       -  mov rax,[rax]
C8DECCAE: 48 8B 40 18                    -  mov rax,[rax+18]
C8DECCB2: 48 63 40 18                    -  movsxd  rax,dword ptr [rax+18]
C8DECCB6: 85 C0                          -  test eax,eax
C8DECCB8: 40 0F 9F C0                    -  setg al
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1440</ID>
              <Description>"XP / Unlock Points / Money / Name / Time"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
[ENABLE]
aobscan(GetShit,48 8B 00 90 90 90 FF 90 B0 03 00 00 48 83 C4 20 48 8B 47)
alloc(newmem,$1000,GetShit)
alloc(xp_ptr,8)
label(code)
label(return)

newmem:

code:
  mov [xp_ptr],rax
  mov rax,[rax]
  nop
  nop
  jmp return

GetShit:
  jmp code
return:
registersymbol(GetShit)
registersymbol(xp_ptr)
[DISABLE]

GetShit:
  db 48 8B 00 90 90
unregistersymbol(xp_ptr)
unregistersymbol(GetShit)
dealloc(newmem)
dealloc(xp_ptr)
}

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1442</ID>
                  <Description>"XP"</Description>
                  <LastState Value="2850" RealAddress="11A9396B4"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>player_ptr</Address>
                  <Offsets>
                    <Offset>6B4</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1441</ID>
                  <Description>"Unlock Points"</Description>
                  <LastState Value="25" RealAddress="11A93990C"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>player_ptr</Address>
                  <Offsets>
                    <Offset>90C</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1490</ID>
                  <Description>"Money (CR)"</Description>
                  <LastState Value="0" RealAddress="11A9395A0"/>
                  <VariableType>Double</VariableType>
                  <Address>player_ptr</Address>
                  <Offsets>
                    <Offset>5A0</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1480</ID>
                  <Description>"Name"</Description>
                  <LastState RealAddress="240D2D34"/>
                  <VariableType>String</VariableType>
                  <Length>32</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>player_ptr</Address>
                  <Offsets>
                    <Offset>14</Offset>
                    <Offset>468</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1479</ID>
                  <Description>"Name Length"</Description>
                  <LastState Value="5" RealAddress="240D2D30"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>player_ptr</Address>
                  <Offsets>
                    <Offset>10</Offset>
                    <Offset>468</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1504</ID>
                  <Description>"Time"</Description>
                  <LastState Value="45306332" RealAddress="239D2A68"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>player_ptr</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>c0</Offset>
                    <Offset>40</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1507</ID>
                  <Description>"Don't Sync Time with the Server"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscan(DontSync,48 89 70 28 48 8B 47 20)
registersymbol(DontSync)

DontSync:
 nop
 nop
 nop
 nop

[DISABLE]

DontSync:
  db 48 89 70 28

unregistersymbol(DontSync)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 25E4BC19

""+25E4BBF4: 83 F8 02                       -  cmp eax,02
""+25E4BBF7: 40 0F 94 C0                    -  sete al
""+25E4BBFB: 48 0F B6 C0                    -  movzx rax,al
""+25E4BBFF: 85 C0                          -  test eax,eax
""+25E4BC01: 75 1A                          -  jne 25E4BC1D
""+25E4BC03: B8 01 00 00 00                 -  mov eax,00000001
""+25E4BC08: 83 F8 01                       -  cmp eax,01
""+25E4BC0B: 48 8B 47 10                    -  mov rax,[rdi+10]
""+25E4BC0F: 83 38 00                       -  cmp dword ptr [rax],00
""+25E4BC12: 48 8B 80 A0 00 00 00           -  mov rax,[rax+000000A0]
// ---------- INJECTING HERE ----------
""+25E4BC19: 48 89 70 28                    -  mov [rax+28],rsi
""+25E4BC1D: 48 8B 47 10                    -  mov rax,[rdi+10]
// ---------- DONE INJECTING  ----------
""+25E4BC21: 48 8B 80 B0 00 00 00           -  mov rax,[rax+000000B0]
""+25E4BC28: 48 85 C0                       -  test rax,rax
""+25E4BC2B: 74 2E                          -  je 25E4BC5B
""+25E4BC2D: B8 07 00 00 00                 -  mov eax,00000007
""+25E4BC32: 83 F8 01                       -  cmp eax,01
""+25E4BC35: 48 8B 47 10                    -  mov rax,[rdi+10]
""+25E4BC39: 48 8B 80 B0 00 00 00           -  mov rax,[rax+000000B0]
""+25E4BC40: 48 8B C8                       -  mov rcx,rax
""+25E4BC43: 48 83 EC 20                    -  sub rsp,20
""+25E4BC47: 83 38 00                       -  cmp dword ptr [rax],00
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1532</ID>
                  <Description>"Faction"</Description>
                  <LastState Value="400" RealAddress="11A9393D4"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>player_ptr</Address>
                  <Offsets>
                    <Offset>3D4</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1260</ID>
              <Description>"Current Weapon"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(CurrentWeapon,48 8B 87 B8 00 00 00 48 8B 40 20 48 85)
alloc(newmem,$1000,CurrentWeapon)
alloc(current_weapon,8)
label(code)
label(return)

newmem:

code:
  mov [current_weapon],rdi
  mov rax,[rdi+000000B8]
  jmp return

CurrentWeapon:
  jmp newmem
  nop
  nop
return:
registersymbol(CurrentWeapon)
registersymbol(current_weapon)
unregistersymbol(Weapon)
dealloc(current_weapon)
[DISABLE]

CurrentWeapon:
  db 48 8B 87 B8 00 00 00
unregistersymbol(current_weapon)
unregistersymbol(CurrentWeapon)
dealloc(newmem)
dealloc(alloc)
{
// ORIGINAL CODE - INJECTION POINT: 72E17757

""+72E17736: 48 8B 97 C0 00 00 00           -  mov rdx,[rdi+000000C0]
""+72E1773D: 48 8B C8                       -  mov rcx,rax
""+72E17740: 48 83 EC 20                    -  sub rsp,20
""+72E17744: 48 8B 00                       -  mov rax,[rax]
""+72E17747: 90                             -  nop
""+72E17748: 90                             -  nop
""+72E17749: 90                             -  nop
""+72E1774A: FF 90 58 01 00 00              -  call qword ptr [rax+00000158]
""+72E17750: 48 83 C4 20                    -  add rsp,20
""+72E17754: 4C 8B F8                       -  mov r15,rax
// ---------- INJECTING HERE ----------
""+72E17757: 48 8B 87 B8 00 00 00           -  mov rax,[rdi+000000B8]
// ---------- DONE INJECTING  ----------
""+72E1775E: 48 8B 40 20                    -  mov rax,[rax+20]
""+72E17762: 48 85 C0                       -  test rax,rax
""+72E17765: 0F 84 01 01 00 00              -  je 72E1786C
""+72E1776B: B8 03 00 00 00                 -  mov eax,00000003
""+72E17770: 83 F8 01                       -  cmp eax,01
""+72E17773: 48 8B 87 B8 00 00 00           -  mov rax,[rdi+000000B8]
""+72E1777A: 48 8B 40 20                    -  mov rax,[rax+20]
""+72E1777E: 48 8B C8                       -  mov rcx,rax
""+72E17781: 83 39 00                       -  cmp dword ptr [rcx],00
""+72E17784: F3 0F 10 40 20                 -  movss xmm0,[rax+20]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1261</ID>
                  <Description>"Structure_start"</Description>
                  <LastState RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1491</ID>
                  <Description>"Fire Mode (0=Single, 1=Auto)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>E8</Offset>
                    <Offset>B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1271</ID>
                  <Description>"Clipsize"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>AC</Offset>
                    <Offset>B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1263</ID>
                  <Description>"Weapon Type?"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>a4</Offset>
                    <Offset>B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1264</ID>
                  <Description>"Reload Speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>C0</Offset>
                    <Offset>B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1266</ID>
                  <Description>"Damage"</Description>
                  <VariableType>Float</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>C4</Offset>
                    <Offset>B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1265</ID>
                  <Description>"Damage too?"</Description>
                  <VariableType>Float</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>C8</Offset>
                    <Offset>B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1268</ID>
                  <Description>"Weapon Range"</Description>
                  <VariableType>Float</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>D0</Offset>
                    <Offset>B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1267</ID>
                  <Description>"Amount of Bullet Fired"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>D4</Offset>
                    <Offset>B8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1537</ID>
              <Description>"Speed Modifiers"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(SpeedShit,48 8B 86 60 07 00 00 48 8B C8 83 39 00 0F)
alloc(newmem,$1000,SpeedShit)
alloc(speed_ptr,8)
label(code)
label(return)

newmem:

code:
  mov [speed_ptr],rsi
  mov rax,[rsi+00000760]
  jmp return

SpeedShit:
  jmp newmem
  nop
  nop
return:
registersymbol(SpeedShit)
registersymbol(speed_ptr)
[DISABLE]

SpeedShit:
  db 48 8B 86 60 07 00 00
unregistersymbol(speed_ptr)
unregistersymbol(SpeedShit)
dealloc(newmem)
dealloc(speed_ptr)
{
// ORIGINAL CODE - INJECTION POINT: 470B79F5

""+470B79CF: 48 83 EC 20                    -  sub rsp,20
""+470B79D3: 48 8B 06                       -  mov rax,[rsi]
""+470B79D6: 90                             -  nop 
""+470B79D7: 90                             -  nop 
""+470B79D8: 90                             -  nop 
""+470B79D9: FF 90 68 01 00 00              -  call qword ptr [rax+00000168]
""+470B79DF: 48 83 C4 30                    -  add rsp,30
""+470B79E3: 48 89 85 08 FF FF FF           -  mov [rbp-000000F8],rax
""+470B79EA: 48 8B 40 18                    -  mov rax,[rax+18]
""+470B79EE: 48 89 86 D0 06 00 00           -  mov [rsi+000006D0],rax
// ---------- INJECTING HERE ----------
""+470B79F5: 48 8B 86 60 07 00 00           -  mov rax,[rsi+00000760]
// ---------- DONE INJECTING  ----------
""+470B79FC: 48 8B C8                       -  mov rcx,rax
""+470B79FF: 83 39 00                       -  cmp dword ptr [rcx],00
""+470B7A02: 0F B6 80 D0 01 00 00           -  movzx eax,byte ptr [rax+000001D0]
""+470B7A09: 40 88 86 94 01 00 00           -  mov [rsi+00000194],al
""+470B7A10: 48 8B 75 F8                    -  mov rsi,[rbp-08]
""+470B7A14: C9                             -  leave 
""+470B7A15: C3                             -  ret 
""+470B7A16: 00 00                          -  add [rax],al
""+470B7A18: FF                             -  db -01
""+470B7A19: FF                             -  db -01
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1538</ID>
                  <Description>"No description"</Description>
                  <LastState RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>speed_ptr</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>760</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1540</ID>
                  <Description>"Walk Speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>speed_ptr</Address>
                  <Offsets>
                    <Offset>AC</Offset>
                    <Offset>760</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1539</ID>
                  <Description>"Run Speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>speed_ptr</Address>
                  <Offsets>
                    <Offset>B0</Offset>
                    <Offset>760</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1541</ID>
                  <Description>"Jump Height"</Description>
                  <VariableType>Float</VariableType>
                  <Address>speed_ptr</Address>
                  <Offsets>
                    <Offset>DC</Offset>
                    <Offset>760</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1542</ID>
                  <Description>"Jump Distance"</Description>
                  <VariableType>Float</VariableType>
                  <Address>speed_ptr</Address>
                  <Offsets>
                    <Offset>E0</Offset>
                    <Offset>760</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1543</ID>
                  <Description>"Jetpack Fly Speed Modifier"</Description>
                  <VariableType>Float</VariableType>
                  <Address>speed_ptr</Address>
                  <Offsets>
                    <Offset>130</Offset>
                    <Offset>760</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1486</ID>
              <Description>"Highlighted Item Editor"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(InventoryItemPointer,89 45 xx 48 8B 0C 25 xx xx xx xx 48 8B 14 25)
alloc(InventoryItemPTR,8)
InventoryItemPTR:
readmem(InventoryItemPointer+07,4)
registersymbol(InventoryItemPTR)
[DISABLE]
dealloc(InventoryItemPTR)
unregistersymbol(InventoryItemPTR)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1487</ID>
                  <Description>"Quanity"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>InventoryItemPTR</Address>
                  <Offsets>
                    <Offset>18</Offset>
                    <Offset>50</Offset>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1488</ID>
                  <Description>"Item ID"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>InventoryItemPTR</Address>
                  <Offsets>
                    <Offset>20</Offset>
                    <Offset>10</Offset>
                    <Offset>50</Offset>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1274</ID>
              <Description>"Instant Blueprint Craft"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscan(FastCraftforBluePrints,EC F3 0F 10 46 58) // should be unique
alloc(newmem,$1000,FastCraftforBluePrints)

label(code)
label(return)

newmem:
  mov dword ptr [rsi+58],(float)0
code:
  movss xmm0,[rsi+58]
  jmp return

FastCraftforBluePrints+01:
  jmp newmem
return:
registersymbol(FastCraftforBluePrints)

[DISABLE]

FastCraftforBluePrints+01:
  db F3 0F 10 46 58

unregistersymbol(FastCraftforBluePrints)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1F81E456

1F81E426: F3 0F 10 0D B2 00 00 00        -  movss xmm1,[1F81E4E0]
1F81E42E: F3 0F 5A C9                    -  cvtss2sd xmm1,xmm1
1F81E432: F2 0F 5E C1                    -  divsd xmm0,xmm1
1F81E436: F2 0F 11 45 E0                 -  movsd [rbp-20],xmm0
1F81E43B: EB 09                          -  jmp 1F81E446
1F81E43D: 66 0F 57 C0                    -  xorpd xmm0,xmm0
1F81E441: F2 0F 11 45 E0                 -  movsd [rbp-20],xmm0
1F81E446: F2 0F 10 45 E0                 -  movsd xmm0,[rbp-20]
1F81E44B: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
1F81E450: F3 44 0F 11 7D EC              -  movss [rbp-14],xmm15
// ---------- INJECTING HERE ----------
1F81E456: F3 0F 10 46 58                 -  movss xmm0,[rsi+58]
// ---------- DONE INJECTING  ----------
1F81E45B: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
1F81E45F: F3 0F 10 4D EC                 -  movss xmm1,[rbp-14]
1F81E464: F3 0F 5A C9                    -  cvtss2sd xmm1,xmm1
1F81E468: F2 0F 5C C1                    -  subsd xmm0,xmm1
1F81E46C: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
1F81E471: F3 44 0F 11 7E 58              -  movss [rsi+58],xmm15
1F81E477: 48 8B 04 25 30 B6 83 03        -  mov rax,[0383B630]
1F81E47F: 48 8B 40 10                    -  mov rax,[rax+10]
1F81E483: 48 89 46 50                    -  mov [rsi+50],rax
1F81E487: F3 0F 10 46 58                 -  movss xmm0,[rsi+58]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1167</ID>
              <Description>"No collision (Set Hotkey)"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(CollisionAOB,Empyrion.exe,F3 44 0F 58 79 14 F3 44 0F)
registersymbol(CollisionAOB)

CollisionAOB:
 db 90 90 90 90 90 90

[DISABLE]

CollisionAOB:
  db F3 44 0F 58 79 14

unregistersymbol(CollisionAOB)
{
// ORIGINAL CODE - INJECTION POINT: "Empyrion.exe"+90E53D

"Empyrion.exe"+90E507: F3 44 0F 11 94 24 20 01 00 00  -  movss [rsp+00000120],xmm10
"Empyrion.exe"+90E511: F3 44 0F 59 E4                 -  mulss xmm12,xmm4
"Empyrion.exe"+90E516: F3 0F 59 EB                    -  mulss xmm5,xmm3
"Empyrion.exe"+90E51A: F3 41 0F 59 C5                 -  mulss xmm0,xmm13
"Empyrion.exe"+90E51F: F3 44 0F 58 F8                 -  addss xmm15,xmm0
"Empyrion.exe"+90E524: F3 44 0F 58 E6                 -  addss xmm12,xmm6
"Empyrion.exe"+90E529: F3 44 0F 58 E5                 -  addss xmm12,xmm5
"Empyrion.exe"+90E52E: F3 0F 59 CB                    -  mulss xmm1,xmm3
"Empyrion.exe"+90E532: F3 44 0F 58 61 18              -  addss xmm12,[rcx+18]
"Empyrion.exe"+90E538: F3 44 0F 58 F9                 -  addss xmm15,xmm1
// ---------- INJECTING HERE ----------
"Empyrion.exe"+90E53D: F3 44 0F 58 79 14              -  addss xmm15,[rcx+14]
// ---------- DONE INJECTING  ----------
"Empyrion.exe"+90E543: F3 44 0F 11 A4 24 30 01 00 00  -  movss [rsp+00000130],xmm12
"Empyrion.exe"+90E54D: E8 5E 24 AC FF                 -  call Empyrion.exe+3D09B0
"Empyrion.exe"+90E552: F3 0F 10 05 E6 32 4C 00        -  movss xmm0,[Empyrion.exe+DD1840]
"Empyrion.exe"+90E55A: F3 44 0F 10 40 0C              -  movss xmm8,[rax+0C]
"Empyrion.exe"+90E560: F3 0F 10 67 30                 -  movss xmm4,[rdi+30]
"Empyrion.exe"+90E565: F3 0F 59 E0                    -  mulss xmm4,xmm0
"Empyrion.exe"+90E569: 41 0F 28 D8                    -  movaps xmm3,xmm8
"Empyrion.exe"+90E56D: F3 41 0F 59 D8                 -  mulss xmm3,xmm8
"Empyrion.exe"+90E572: F3 44 0F 10 48 04              -  movss xmm9,[rax+04]
"Empyrion.exe"+90E578: F3 0F 10 38                    -  movss xmm7,[rax]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>927</ID>
              <Description>"Teleport"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(NewTeleport,Empyrion.exe,48 8B 01 80 B8 A8 10 00 00 00 75 ?? 8B 02 89 81 80)
alloc(newmem,$1000,NewTeleport)
alloc(teleptr,8)
label(code)
label(return)

newmem:

code:
  mov rax,[rcx]
  mov [teleptr],rcx
  cmp byte ptr [rax+000010A8],00
  jmp return

NewTeleport:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(NewTeleport)
registersymbol(teleptr)
[DISABLE]

NewTeleport:
  db 48 8B 01 80 B8 A8 10 00 00 00
unregistersymbol(teleptr)
unregistersymbol(NewTeleport)
dealloc(newmem)
dealloc(teleptr)
{
// ORIGINAL CODE - INJECTION POINT: "Empyrion.exe"+B49933

"Empyrion.exe"+B49911: 8B 42 04                       -  mov eax,[rdx+04]
"Empyrion.exe"+B49914: 89 81 00 01 00 00              -  mov [rcx+00000100],eax
"Empyrion.exe"+B4991A: 8B 42 08                       -  mov eax,[rdx+08]
"Empyrion.exe"+B4991D: 89 81 04 01 00 00              -  mov [rcx+00000104],eax
"Empyrion.exe"+B49923: 8B 41 08                       -  mov eax,[rcx+08]
"Empyrion.exe"+B49926: C1 E8 1E                       -  shr eax,1E
"Empyrion.exe"+B49929: 83 F8 03                       -  cmp eax,03
"Empyrion.exe"+B4992C: 74 31                          -  je Empyrion.exe+B4995F
"Empyrion.exe"+B4992E: 83 F8 02                       -  cmp eax,02
"Empyrion.exe"+B49931: 75 0C                          -  jne Empyrion.exe+B4993F
// ---------- INJECTING HERE ----------
"Empyrion.exe"+B49933: 48 8B 01                       -  mov rax,[rcx]
"Empyrion.exe"+B49936: 80 B8 A8 10 00 00 00           -  cmp byte ptr [rax+000010A8],00
// ---------- DONE INJECTING  ----------
"Empyrion.exe"+B4993D: 75 20                          -  jne Empyrion.exe+B4995F
"Empyrion.exe"+B4993F: 8B 02                          -  mov eax,[rdx]
"Empyrion.exe"+B49941: 89 81 80 00 00 00              -  mov [rcx+00000080],eax
"Empyrion.exe"+B49947: 8B 42 04                       -  mov eax,[rdx+04]
"Empyrion.exe"+B4994A: 89 81 84 00 00 00              -  mov [rcx+00000084],eax
"Empyrion.exe"+B49950: 8B 42 08                       -  mov eax,[rdx+08]
"Empyrion.exe"+B49953: 89 81 88 00 00 00              -  mov [rcx+00000088],eax
"Empyrion.exe"+B49959: 48 83 C4 20                    -  add rsp,20
"Empyrion.exe"+B4995D: 5B                             -  pop rbx
"Empyrion.exe"+B4995E: C3                             -  ret
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>932</ID>
                  <Description>""</Description>
                  <LastState RealAddress="00000000"/>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>teleptr</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>928</ID>
                      <Description>"AOB Teleport"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Array of byte</VariableType>
                      <ByteLength>12</ByteLength>
                      <Address>teleptr</Address>
                      <Offsets>
                        <Offset>F0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>930</ID>
                      <Description>"X"</Description>
                      <VariableType>Float</VariableType>
                      <Address>teleptr</Address>
                      <Offsets>
                        <Offset>F0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>929</ID>
                      <Description>"Z"</Description>
                      <VariableType>Float</VariableType>
                      <Address>teleptr</Address>
                      <Offsets>
                        <Offset>F4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>931</ID>
                      <Description>"Y"</Description>
                      <VariableType>Float</VariableType>
                      <Address>teleptr</Address>
                      <Offsets>
                        <Offset>F8</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1</ID>
              <Description>"Debug Data"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(DebugJunkAOB,48 8B 40 18 48 63 4D B8 48 63 C9 39 48 18)
alloc(newmem,$1000,DebugJunkAOB)
label(code)
label(return)
label(DebugData)
registersymbol(DebugData)

newmem:

code:
  mov rax,[rax+18]
  mov [DebugData],rax
  movsxd  rcx,dword ptr [rbp-48]
  jmp return
  DebugData:

DebugJunkAOB:
  jmp code
  nop
  nop
  nop
return:
registersymbol(DebugJunkAOB)

[DISABLE]
DebugJunkAOB:
  db 48 8B 40 18 48 63 4D B8

unregistersymbol(DebugJunkAOB)
unregistersymbol(DebugData)
dealloc(newmem)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>2</ID>
                  <Description>"Base"</Description>
                  <LastState RealAddress="00000000"/>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>DebugData</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>5</ID>
                  <Description>"Debug Menu Toggle"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>DebugData</Address>
                  <Offsets>
                    <Offset>10</Offset>
                    <Offset>68</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>3</ID>
                  <Description>"Teleport Toggle"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>DebugData</Address>
                  <Offsets>
                    <Offset>10</Offset>
                    <Offset>58</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1508</ID>
                  <Description>"ItemMenu ("H" key)"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>DebugData</Address>
                  <Offsets>
                    <Offset>10</Offset>
                    <Offset>50</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1511</ID>
                  <Description>""</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>DebugData</Address>
                  <Offsets>
                    <Offset>10</Offset>
                    <Offset>60</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1533</ID>
              <Description>"Fly Mode"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

[[[Player_PTR]+40]+70]+20:
dd (int)2
[[[Player_PTR]+40]+70]+48:
dd (int)1

[DISABLE]

[[[Player_PTR]+40]+70]+20:
dd (int)0
[[[Player_PTR]+40]+70]+48:
dd (int)0
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1521</ID>
                  <Description>"&gt;"</Description>
                  <Options moRecursiveSetValue="1"/>
                  <DropDownList DisplayValueAsItem="1">0:Default
2:"Fly"
</DropDownList>
                  <LastState Value="0" RealAddress="14B0418B8"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Player_PTR</Address>
                  <Offsets>
                    <Offset>20</Offset>
                    <Offset>70</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1522</ID>
                  <Description>"&gt;"</Description>
                  <DropDownList DisplayValueAsItem="1">0:Default
1:"Fly"
</DropDownList>
                  <LastState Value="4090218400" RealAddress="14B0418E0"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>Player_PTR</Address>
                  <Offsets>
                    <Offset>48</Offset>
                    <Offset>70</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1506</ID>
          <Description>"WIP"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1495</ID>
              <Description>"Aob For Base Item ID Table Thingy"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Empyrion.exe
  Version: 
  Date   : 2016-07-31
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscan(BaseIDTableAOB,CE 39 48 18 0F 86 1D 00 00 00 48 8D 44 C8 20) // should be unique
alloc(newmem,$1000,2C374113)

label(code)
label(return)

newmem:

code:
  lea rax,[rax+rcx*8+20]
  jmp return

BaseIDTableAOB+0A:
  jmp code
return:
registersymbol(BaseIDTableAOB)

[DISABLE]

BaseIDTableAOB+0A:
  db 48 8D 44 C8 20

unregistersymbol(BaseIDTableAOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2C374113

""+2C3740E7: 48 8B 04 25 F8 2C FF 03        -  mov rax,[03FF2CF8]
""+2C3740EF: 48 63 40 18                    -  movsxd  rax,dword ptr [rax+18]
""+2C3740F3: 3B F0                          -  cmp esi,eax
""+2C3740F5: 7D 26                          -  jnl 2C37411D
""+2C3740F7: B8 01 00 00 00                 -  mov eax,00000001
""+2C3740FC: 83 F8 01                       -  cmp eax,01
""+2C3740FF: 48 8B 04 25 F8 2C FF 03        -  mov rax,[03FF2CF8]
""+2C374107: 48 63 CE                       -  movsxd  rcx,esi
""+2C37410A: 39 48 18                       -  cmp [rax+18],ecx
""+2C37410D: 0F 86 1D 00 00 00              -  jbe 2C374130
// ---------- INJECTING HERE ----------
""+2C374113: 48 8D 44 C8 20                 -  lea rax,[rax+rcx*8+20]
// ---------- DONE INJECTING  ----------
""+2C374118: 48 8B 38                       -  mov rdi,[rax]
""+2C37411B: EB 02                          -  jmp 2C37411F
""+2C37411D: 33 FF                          -  xor edi,edi
""+2C37411F: 48 8B C7                       -  mov rax,rdi
""+2C374122: 48 8B 34 24                    -  mov rsi,[rsp]
""+2C374126: 48 8B 7C 24 08                 -  mov rdi,[rsp+08]
""+2C37412B: 48 83 C4 18                    -  add rsp,18
""+2C37412F: C3                             -  ret 
""+2C374130: BA 3A 00 00 00                 -  mov edx,0000003A
""+2C374135: B9 43 01 00 02                 -  mov ecx,02000143
}


{ Crappy lua script writeen to pull ids
TableStart = getAddress("70F87028") -- needs updated
StringTest = 71872576 --Needs updated

for i=0,4096-1 do
  local StringID = ""
  local Addr = readQword(TableStart+8*i)
  if Addr ~= 0 then
    local ID = readInteger(Addr+0x128) or "Error"
    local StringAddr1 = readQword(Addr+0x20)
    local StringAddr2 = ReadQword(Addr+0x18)
    --local StringAddr3 = ReadQword(Addr+0x11c)
    if StringAddr1 ~= 0 and readInteger(StringAddr1) == StringTest then
      StringID = readString(StringAddr1+0x14,200,true) or "Error1"
    elseif StringAddr2 ~= 0 and readInteger(StringAddr2) == StringTest then
      StringID = readString(StringAddr2+0x14,200,true) or "Error2"

    end
    print(ID .. ":" .. StringID)
  end
end
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1493</ID>
              <Description>"Server Global Time"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(GetTime,48 8B 40 28 48 8B 4E 50)
alloc(newmem,$1000,GetTime)
label(code)
label(return)
alloc(time_ptr,8)
newmem:

code:
  mov [time_ptr],rax
  mov rax,[rax+28]
  mov rcx,[rsi+50]
  jmp return

GetTime:
  jmp code
  nop
  nop
  nop
return:
registersymbol(GetTime)
registersymbol(time_ptr)
[DISABLE]

GetTime:
  db 48 8B 40 28 48 8B 4E 50

unregistersymbol(time_ptr)
unregistersymbol(GetTime)
dealloc(newmem)
dealloc(time_ptr)
{
// ORIGINAL CODE - INJECTION POINT: 3CA12ED4

""+3CA12EA7: 83 38 00                       -  cmp dword ptr [rax],00
""+3CA12EAA: 49 BB C6 3A A1 3C 00 00 00 00  -  mov r11,000000003CA13AC6
""+3CA12EB4: 41 FF D3                       -  call r11d
""+3CA12EB7: 48 83 C4 30                    -  add rsp,30
""+3CA12EBB: C6 46 78 00                    -  mov byte ptr [rsi+78],00
""+3CA12EBF: C6 46 79 00                    -  mov byte ptr [rsi+79],00
""+3CA12EC3: 48 8B 46 18                    -  mov rax,[rsi+18]
""+3CA12EC7: 48 8B C8                       -  mov rcx,rax
""+3CA12ECA: 83 39 00                       -  cmp dword ptr [rcx],00
""+3CA12ECD: 48 8B 80 A0 00 00 00           -  mov rax,[rax+000000A0]
// ---------- INJECTING HERE ----------
""+3CA12ED4: 48 8B 40 28                    -  mov rax,[rax+28]
""+3CA12ED8: 48 8B 4E 50                    -  mov rcx,[rsi+50]
// ---------- DONE INJECTING  ----------
""+3CA12EDC: 48 2B C1                       -  sub rax,rcx
""+3CA12EDF: 48 8B 4E 58                    -  mov rcx,[rsi+58]
""+3CA12EE3: 48 3B C1                       -  cmp rax,rcx
""+3CA12EE6: 0F 82 11 0B 00 00              -  jb Assembly-CSharp:RegistryCollection:NavigateDrive+c5d
""+3CA12EEC: B8 05 00 00 00                 -  mov eax,00000005
""+3CA12EF1: 83 F8 01                       -  cmp eax,01
""+3CA12EF4: 48 8B 46 18                    -  mov rax,[rsi+18]
""+3CA12EF8: 48 8B C8                       -  mov rcx,rax
""+3CA12EFB: 83 39 00                       -  cmp dword ptr [rcx],00
""+3CA12EFE: 48 8B 80 A0 00 00 00           -  mov rax,[rax+000000A0]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1494</ID>
                  <Description>"&gt;"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>time_ptr</Address>
                  <Offsets>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1010</ID>
              <Description>"Misc"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1194</ID>
                  <Description>""</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1092</ID>
                      <Description>"Don't touch"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>0000FF</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1094</ID>
                          <Description>"Outdated XZY"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>0000FF</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//Current Planet: 48 89 08 48 63 8D B8 FE FF FF 89 48 08 48 8B 46 30 48 8B 40 40
aobscanmodule(SuperSuperScript,Empyrion.exe,F3 41 0F 11 55 10)
alloc(newmem,$1000,SuperSuperScript)

label(code)
label(return)
label(top)
label(allplayers)

newmem:
  push rax
  push rbx
  mov rax,teleptr
  mov rax,[rax]
  add rax,40
  cmp rax,r13
  je code
  or rax,-1
  mov rbx,allplayers
top:
  inc rax
  cmp rax,A
  jge code
  cmp qword ptr [rbx+rax*8],r13
  je code
  cmp qword ptr [rbx+rax*8],0
  jne top
  mov qword ptr [rbx+rax*8],r13
code:
  pop rbx
  pop rax
  movss [r13+10],xmm2
  jmp return

allplayers:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0

SuperSuperScript:
  jmp newmem
  nop
return:
registersymbol(SuperSuperScript)
registersymbol(allplayers)

[DISABLE]
SuperSuperScript:
  db F3 41 0F 11 55 10
unregistersymbol(SuperSuperScript)
unregistersymbol(allplayers)
dealloc(newmem)

</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1105</ID>
                              <Description>"Enable Control+Numpad Hotkeys"</Description>
                              <LastState/>
                              <Color>FF0000</Color>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+0]+10", 12))
end, VK_CONTROL, VK_NUMPAD1)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+8]+10", 12))
end, VK_CONTROL, VK_NUMPAD2)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+10]+10", 12))
end, VK_CONTROL, VK_NUMPAD3)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+18]+10", 12))
end, VK_CONTROL, VK_NUMPAD4)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+20]+10", 12))
end, VK_CONTROL, VK_NUMPAD5)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+28]+10", 12))
end, VK_CONTROL, VK_NUMPAD6)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+30]+10", 12))
end, VK_CONTROL, VK_NUMPAD7)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+38]+10", 12))
end, VK_CONTROL, VK_NUMPAD8)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+40]+10", 12))
end, VK_CONTROL, VK_NUMPAD9)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+48]+10", 12))
end, VK_CONTROL, VK_NUMPAD0)

[DISABLE]

</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1095</ID>
                              <Description>"Slot 01"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+0]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1096</ID>
                              <Description>"Slot 02"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+8]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1097</ID>
                              <Description>"Slot 03"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+10]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1098</ID>
                              <Description>"Slot 04"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+18]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1099</ID>
                              <Description>"Slot 05"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+20]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1100</ID>
                              <Description>"Slot 06"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+28]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1101</ID>
                              <Description>"Slot 07"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+30]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1102</ID>
                              <Description>"Slot 08"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+38]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1103</ID>
                              <Description>"Slot 09"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+40]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1104</ID>
                              <Description>"Slot 10"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+48]+10</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1465</ID>
                          <Description>"Player_PTR"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
aobscan(GetBase,48 8B 46 40 48 8B 80 30 04 00 00 48 8B 40 30 48 8B C8) // should be unique
alloc(newmem,$1000,GetBase)
alloc(BasePTR,8)

label(code)
label(return)
label(GetBaseBkp)

newmem:

code:
GetBaseBkp:
  readmem(GetBase+4,8)
  mov [BasePTR],rax
  jmp return

GetBase+4:
  jmp newmem
  nop
  nop
return:
registersymbol(GetBase)
registersymbol(GetBaseBkp)
registersymbol(BasePTR)

[DISABLE]
GetBase+4:
  readmem(GetBaseBkp,7)
unregistersymbol(GetBase)
unregistersymbol(GetBaseBkp)
unregistersymbol(BasePTR)
dealloc(newmem)
dealloc(BasePTR)
{
// ORIGINAL CODE - INJECTION POINT: 12546B35

12546B0D: 48 81 EC E8 00 00 00           -  sub rsp,000000E8
12546B14: 48 8B F1                       -  mov rsi,rcx
12546B17: C6 45 88 00                    -  mov byte ptr [rbp-78],00
12546B1B: C6 45 89 00                    -  mov byte ptr [rbp-77],00
12546B1F: C6 45 90 00                    -  mov byte ptr [rbp-70],00
12546B23: C6 45 91 00                    -  mov byte ptr [rbp-6F],00
12546B27: 48 8B 46 40                    -  mov rax,[rsi+40]
12546B2B: 48 85 C0                       -  test rax,rax
12546B2E: 75 05                          -  jne 12546B35
12546B30: E9 4F 12 00 00                 -  jmp 12547D84
// ---------- INJECTING HERE ----------
12546B35: 48 8B 46 40                    -  mov rax,[rsi+40]
12546B39: 48 8B 80 30 04 00 00           -  mov rax,[rax+00000430]
// ---------- DONE INJECTING  ----------
12546B40: 48 8B 40 30                    -  mov rax,[rax+30]
12546B44: 48 8B C8                       -  mov rcx,rax
12546B47: 48 83 EC 20                    -  sub rsp,20
12546B4B: 83 38 00                       -  cmp dword ptr [rax],00
12546B4E: 49 BB 60 0A 1E 32 00 00 00 00  -  mov r11,00000000321E0A60
12546B58: 41 FF D3                       -  call r11d
12546B5B: 48 83 C4 20                    -  add rsp,20
12546B5F: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
12546B63: F3 0F 10 0D 15 13 00 00        -  movss xmm1,[12547E80]
12546B6B: F3 0F 5A C9                    -  cvtss2sd xmm1,xmm1
}
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1165</ID>
                          <Description>"Get Last Death Position"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Empyrion.exe
  Version: 
  Date   : 2016-02-11
  Author : Admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(lastdeathlocation,Empyrion.exe,48 8B 1A 48 3B DA 0F 84 C2) // should be unique
alloc(newmem,$1000,"Empyrion.exe"+A56F5)
alloc(death_ptr,8)
label(code)
label(return)

newmem:

code:
  mov rbx,[rdx]
  mov [death_ptr],rdx
  cmp rbx,rdx
  jmp return

lastdeathlocation:
  jmp code
  nop
return:
registersymbol(lastdeathlocation)
registersymbol(death_ptr)
[DISABLE]

lastdeathlocation:
  db 48 8B 1A 48 3B DA
unregistersymbol(death_ptr)
unregistersymbol(lastdeathlocation)
dealloc(newmem)
dealloc(death_ptr)
{
// ORIGINAL CODE - INJECTION POINT: "Empyrion.exe"+A56F5

"Empyrion.exe"+A56CF: CC                       -  int 3 
"Empyrion.exe"+A56D0: 48 89 5C 24 10           -  mov [rsp+10],rbx
"Empyrion.exe"+A56D5: 48 89 6C 24 18           -  mov [rsp+18],rbp
"Empyrion.exe"+A56DA: 56                       -  push rsi
"Empyrion.exe"+A56DB: 48 81 EC D0 07 00 00     -  sub rsp,000007D0
"Empyrion.exe"+A56E2: 48 8B F1                 -  mov rsi,rcx
"Empyrion.exe"+A56E5: C6 41 68 01              -  mov byte ptr [rcx+68],01
"Empyrion.exe"+A56E9: E8 02 DF FF FF           -  call Empyrion.exe+A35F0
"Empyrion.exe"+A56EE: 48 8B 56 08              -  mov rdx,[rsi+08]
"Empyrion.exe"+A56F2: 48 8B E8                 -  mov rbp,rax
// ---------- INJECTING HERE ----------
"Empyrion.exe"+A56F5: 48 8B 1A                 -  mov rbx,[rdx]
"Empyrion.exe"+A56F8: 48 3B DA                 -  cmp rbx,rdx
// ---------- DONE INJECTING  ----------
"Empyrion.exe"+A56FB: 0F 84 C2 00 00 00        -  je Empyrion.exe+A57C3
"Empyrion.exe"+A5701: 48 89 BC 24 E0 07 00 00  -  mov [rsp+000007E0],rdi
"Empyrion.exe"+A5709: 0F 1F 80 00 00 00 00     -  nop [rax+00000000]
"Empyrion.exe"+A5710: 48 8D 4B 10              -  lea rcx,[rbx+10]
"Empyrion.exe"+A5714: E8 57 0B 3D 00           -  call Empyrion.exe+476270
"Empyrion.exe"+A5719: 48 8B F8                 -  mov rdi,rax
"Empyrion.exe"+A571C: 8B 88 F8 01 00 00        -  mov ecx,[rax+000001F8]
"Empyrion.exe"+A5722: 85 C9                    -  test ecx,ecx
"Empyrion.exe"+A5724: 74 09                    -  je Empyrion.exe+A572F
"Empyrion.exe"+A5726: E8 95 C5 23 00           -  call Empyrion.exe+2E1CC0
}
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1039</ID>
                          <Description>"Trace it"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

12A0CE53 - F3 0F5A C0            - cvtss2sd xmm0,xmm0
12A0CE57 - 66 0F57 C9            - xorpd xmm1,xmm1
12A0CE5B - F2 0F5A C9            - cvtsd2ss xmm1,xmm1
12A0CE5F - F2 0F5A C0            - cvtsd2ss xmm0,xmm0
12A0CE63 - 48 83 EC 20           - sub rsp,20 { 32 }
12A0CE67 - 49 BB B0EF2A3300000000 - mov r11,00000000332AEFB0 { [28EC8348] }
12A0CE71 - 41 FF D3              - call r11d
12A0CE74 - 48 83 C4 20           - add rsp,20 { 32 }
12A0CE78 - F3 0F5A C0            - cvtss2sd xmm0,xmm0
12A0CE7C - F2 44 0F5A F8         - cvtsd2ss xmm15,xmm0
12A0CE81 - F3 44 0F11 BD 7CFFFFFF  - movss [rbp-00000084],xmm15
12A0CE8A - F3 0F10 86 1C010000   - movss xmm0,[rsi+0000011C] //&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;
12A0CE92 - F3 0F5A C0            - cvtss2sd xmm0,xmm0
12A0CE96 - F2 0F11 85 48FFFFFF   - movsd [rbp-000000B8],xmm0
12A0CE9E - 48 8B 46 40           - mov rax,[rsi+40]
12A0CEA2 - 48 8B C8              - mov rcx,rax
12A0CEA5 - 48 83 EC 20           - sub rsp,20 { 32 }
12A0CEA9 - 48 8B 00              - mov rax,[rax]
12A0CEAC - 90                    - nop
12A0CEAD - 90                    - nop
12A0CEAE - 90                    - nop
12A0CEAF - FF 90 C8050000        - call qword ptr [rax+000005C8]
12A0CEB5 - 48 83 C4 20           - add rsp,20 { 32 }
12A0CEB9 - F2 0F2A C0            - cvtsi2sd xmm0,eax
12A0CEBD - F2 0F11 85 40FFFFFF   - movsd [rbp-000000C0],xmm0
12A0CEC5 - 48 8B 46 40           - mov rax,[rsi+40]
12A0CEC9 - 48 8B C8              - mov rcx,rax
12A0CECC - 48 83 EC 20           - sub rsp,20 { 32 }
12A0CED0 - 48 8B 00              - mov rax,[rax]
12A0CED3 - 90                    - nop
12A0CED4 - 90                    - nop

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1027</ID>
                          <Description>"Max Health"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]

aobscan(MaxHealth,F3 0F 10 4E 40 F3 0F 5A C9 F3) // should be unique
alloc(newmem,$1000,200BC5FA)

label(code)
label(return)

newmem:

code:
  movss xmm1,[rsi+40]
  jmp return

MaxHealth:
  jmp code
return:
registersymbol(MaxHealth)

[DISABLE]

MaxHealth:
  db F3 0F 10 4E 40

unregistersymbol(MaxHealth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 200BC5FA

200BC5D3: 74 21                          -  je 200BC5F6
200BC5D5: B8 04 00 00 00                 -  mov eax,00000004
200BC5DA: 83 F8 01                       -  cmp eax,01
200BC5DD: B8 01 00 00 00                 -  mov eax,00000001
200BC5E2: 85 C0                          -  test eax,eax
200BC5E4: F3 0F 10 46 4C                 -  movss xmm0,[rsi+4C]
200BC5E9: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
200BC5ED: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
200BC5F1: E9 3F 00 00 00                 -  jmp 200BC635
200BC5F6: 66 0F 57 C0                    -  xorpd xmm0,xmm0
// ---------- INJECTING HERE ----------
200BC5FA: F3 0F 10 4E 40                 -  movss xmm1,[rsi+40]
// ---------- DONE INJECTING  ----------
200BC5FF: F3 0F 5A C9                    -  cvtss2sd xmm1,xmm1
200BC603: F3 0F 10 56 44                 -  movss xmm2,[rsi+44]
200BC608: F3 0F 5A D2                    -  cvtss2sd xmm2,xmm2
200BC60C: F2 0F 58 CA                    -  addsd xmm1,xmm2
200BC610: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
200BC614: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
200BC618: 48 83 EC 20                    -  sub rsp,20
200BC61C: 49 BB B0 4E 98 07 00 00 00 00  -  mov r11,0000000007984EB0
200BC626: 41 FF D3                       -  call r11d
200BC629: 48 83 C4 20                    -  add rsp,20
}
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1093</ID>
                          <Description>"Positions"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Empyrion.exe
  Version: 
  Date   : 2016-01-01
  Author : Admin

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(GetPositions,Empyrion.exe,F3 41 0F 11 55 10) // should be unique
alloc(newmem,$1000,"Empyrion.exe"+930447)

label(code)
label(return)

newmem:

code:
  movss [r13+10],xmm2
  jmp return

GetPositions:
  jmp code
  nop
return:
registersymbol(GetPositions)

[DISABLE]

GetPositions:
  db F3 41 0F 11 55 10

unregistersymbol(GetPositions)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Empyrion.exe"+930447

"Empyrion.exe"+930413: F3 0F 59 5C 3B 04           -  mulss xmm3,[rbx+rdi+04]
"Empyrion.exe"+930419: F3 0F 59 C0                 -  mulss xmm0,xmm0
"Empyrion.exe"+93041D: 41 0F 28 E0                 -  movaps xmm4,xmm8
"Empyrion.exe"+930421: F3 0F 10 4C 3B 18           -  movss xmm1,[rbx+rdi+18]
"Empyrion.exe"+930427: F3 41 0F 58 55 10           -  addss xmm2,[r13+10]
"Empyrion.exe"+93042D: F3 41 0F 58 5D 14           -  addss xmm3,[r13+14]
"Empyrion.exe"+930433: F3 0F 58 E8                 -  addss xmm5,xmm0
"Empyrion.exe"+930437: F3 0F 59 64 3B 08           -  mulss xmm4,[rbx+rdi+08]
"Empyrion.exe"+93043D: F3 0F 59 C9                 -  mulss xmm1,xmm1
"Empyrion.exe"+930441: F3 41 0F 58 65 18           -  addss xmm4,[r13+18]
// ---------- INJECTING HERE ----------
"Empyrion.exe"+930447: F3 41 0F 11 55 10           -  movss [r13+10],xmm2
// ---------- DONE INJECTING  ----------
"Empyrion.exe"+93044D: F3 41 0F 11 5D 14           -  movss [r13+14],xmm3
"Empyrion.exe"+930453: F3 41 0F 11 65 18           -  movss [r13+18],xmm4
"Empyrion.exe"+930459: F3 0F 58 E9                 -  addss xmm5,xmm1
"Empyrion.exe"+93045D: 8B 04 3B                    -  mov eax,[rbx+rdi]
"Empyrion.exe"+930460: 89 02                       -  mov [rdx],eax
"Empyrion.exe"+930462: 8B 44 3B 04                 -  mov eax,[rbx+rdi+04]
"Empyrion.exe"+930466: 89 42 04                    -  mov [rdx+04],eax
"Empyrion.exe"+930469: 8B 44 3B 08                 -  mov eax,[rbx+rdi+08]
"Empyrion.exe"+93046D: 44 89 52 0C                 -  mov [rdx+0C],r10d
"Empyrion.exe"+930471: F3 0F 51 FD                 -  sqrtss xmm7,xmm5
}
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1193</ID>
                          <Description>"Other people"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Empyrion.exe
  Version: 
  Date   : 2016-02-15
  Author : Admin

  This script does blah blah blah
}

[ENABLE]

aobscan(peopleonyourplanet,48 89 08 48 63 8D B8 FE FF FF 89 48 08 48 8B 46 30 48 8B 40 40 48 89 85 F0 FC FF FF 48 8D 46 70 48 8B 08 48 89 8D C0 FE FF FF 48 63 40 08) // should be unique
alloc(newmem,$1000,493E370C)

label(code)
label(return)

newmem:

code:
  mov [rax],rcx
  movsxd  rcx,dword ptr [rbp-00000148]
  jmp return

peopleonyourplanet:
  jmp code
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(peopleonyourplanet)

[DISABLE]

peopleonyourplanet:
  db 48 89 08 48 63 8D B8 FE FF FF

unregistersymbol(peopleonyourplanet)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 493E370C

493E36DA: 48 89 88 80 00 00 00           -  mov [rax+00000080],rcx
493E36E1: 48 8B 46 28                    -  mov rax,[rsi+28]
493E36E5: 48 8B 40 40                    -  mov rax,[rax+40]
493E36E9: 48 8D 4E 70                    -  lea rcx,[rsi+70]
493E36ED: 48 8B 11                       -  mov rdx,[rcx]
493E36F0: 48 89 95 B0 FE FF FF           -  mov [rbp-00000150],rdx
493E36F7: 48 63 49 08                    -  movsxd  rcx,dword ptr [rcx+08]
493E36FB: 89 8D B8 FE FF FF              -  mov [rbp-00000148],ecx
493E3701: 48 83 C0 38                    -  add rax,38
493E3705: 48 8B 8D B0 FE FF FF           -  mov rcx,[rbp-00000150]
// ---------- INJECTING HERE ----------
493E370C: 48 89 08                       -  mov [rax],rcx
493E370F: 48 63 8D B8 FE FF FF           -  movsxd  rcx,dword ptr [rbp-00000148]
// ---------- DONE INJECTING  ----------
493E3716: 89 48 08                       -  mov [rax+08],ecx
493E3719: 48 8B 46 30                    -  mov rax,[rsi+30]
493E371D: 48 8B 40 40                    -  mov rax,[rax+40]
493E3721: 48 89 85 F0 FC FF FF           -  mov [rbp-00000310],rax
493E3728: 48 8D 46 70                    -  lea rax,[rsi+70]
493E372C: 48 8B 08                       -  mov rcx,[rax]
493E372F: 48 89 8D C0 FE FF FF           -  mov [rbp-00000140],rcx
493E3736: 48 63 40 08                    -  movsxd  rax,dword ptr [rax+08]
493E373A: 89 85 C8 FE FF FF              -  mov [rbp-00000138],eax
493E3740: F3 0F 10 05 78 01 00 00        -  movss xmm0,[493E38C0]
}
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1443</ID>
                          <Description>"Unlimited Oxygen"</Description>
                          <LastState/>
                          <Color>000000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
aobscan(oxygen,F3 0F 10 86 14 01 00 00 F3 0F 5A C0 F2)
alloc(newmem,$1000,oxygen)
label(code)
label(return)

newmem:

code:
  push rsi
  mov rsi,[rsi+40]
  mov rsi,[rsi+430]
  mov rsi,[rsi+30]
  mov r11d,dword ptr [rsi+40]
  xor r11d,069C5B7D
  mov rsi,[rsi+18]
  mov dword ptr [rsi+20],r11d
  pop rsi
  movss xmm0,[rsi+00000114]
  jmp return

oxygen:
  jmp code
  nop
  nop
  nop
return:
registersymbol(oxygen)

[DISABLE]
oxygen:
  db F3 0F 10 86 14 01 00 00
unregistersymbol(oxygen)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 998F9B04

998F9AD1: F2 0F 5A D2                    -  cvtsd2ss xmm2,xmm2
998F9AD5: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
998F9AD9: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
998F9ADD: 48 83 EC 20                    -  sub rsp,20
998F9AE1: 49 BB 60 49 B7 07 00 00 00 00  -  mov r11,0000000007B74960
998F9AEB: 41 FF D3                       -  call r11d
998F9AEE: 48 83 C4 20                    -  add rsp,20
998F9AF2: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9AF6: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
998F9AFB: F3 44 0F 11 BE FC 00 00 00     -  movss [rsi+000000FC],xmm15
// ---------- INJECTING HERE ----------
998F9B04: F3 0F 10 86 F8 00 00 00        -  movss xmm0,[rsi+000000F8]
// ---------- DONE INJECTING  ----------
998F9B0C: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9B10: 66 0F 57 C9                    -  xorpd xmm1,xmm1
998F9B14: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
998F9B18: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
998F9B1C: 48 83 EC 20                    -  sub rsp,20
998F9B20: 49 BB 30 E7 B7 12 00 00 00 00  -  mov r11,0000000012B7E730
998F9B2A: 41 FF D3                       -  call r11d
998F9B2D: 48 83 C4 20                    -  add rsp,20
998F9B31: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9B35: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
}

</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1049</ID>
                          <Description>"Unlimited Health"</Description>
                          <LastState/>
                          <Color>000000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
aobscan(health,F3 0F 10 86 18 01 00 00 F3 0F 5A C0 66)
alloc(newmem,$1000,health)
label(code)
label(return)

newmem:

code:
  push rsi
  mov rsi,[rsi+40]
  mov rsi,[rsi+430]
  mov rsi,[rsi+28]
  mov r11d,dword ptr [rsi+40]
  mov rsi,[rsi+18]
  mov dword ptr [rsi+2C],r11d
  pop rsi
  movss xmm0,[rsi+00000118]
  jmp return

health:
  jmp code
  nop
  nop
  nop
return:
registersymbol(health)

[DISABLE]
health:
  db F3 0F 10 86 18 01 00 00
unregistersymbol(health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 998F9B04

998F9AD1: F2 0F 5A D2                    -  cvtsd2ss xmm2,xmm2
998F9AD5: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
998F9AD9: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
998F9ADD: 48 83 EC 20                    -  sub rsp,20
998F9AE1: 49 BB 60 49 B7 07 00 00 00 00  -  mov r11,0000000007B74960
998F9AEB: 41 FF D3                       -  call r11d
998F9AEE: 48 83 C4 20                    -  add rsp,20
998F9AF2: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9AF6: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
998F9AFB: F3 44 0F 11 BE FC 00 00 00     -  movss [rsi+000000FC],xmm15
// ---------- INJECTING HERE ----------
998F9B04: F3 0F 10 86 F8 00 00 00        -  movss xmm0,[rsi+000000F8]
// ---------- DONE INJECTING  ----------
998F9B0C: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9B10: 66 0F 57 C9                    -  xorpd xmm1,xmm1
998F9B14: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
998F9B18: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
998F9B1C: 48 83 EC 20                    -  sub rsp,20
998F9B20: 49 BB 30 E7 B7 12 00 00 00 00  -  mov r11,0000000012B7E730
998F9B2A: 41 FF D3                       -  call r11d
998F9B2D: 48 83 C4 20                    -  add rsp,20
998F9B31: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9B35: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
}

</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1275</ID>
                          <Description>"Custom Type"</Description>
                          <Options moHideChildren="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1008</ID>
                              <Description>"Enable "Custom Type" 4byte"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
local XORAlgoritm=[[
alloc(TypeName,256)
alloc(ByteSize,4)
alloc(ConvertRoutine,1024)
alloc(ConvertBackRoutine,1024)
define(XOR_KEY,0e59d3a5)

TypeName:
db 'XOR Algoritm',0

ByteSize:
dd 4  //4 byte real value and 4 byte encryption key right after it

//stdcall int ConvertRoutine(unsigned char *input);
ConvertRoutine:
[64-bit]
//rcx=address of input
mov eax,dword [rcx] //eax now contains the bytes 'input' pointed to
xor eax,XOR_KEY
ret
[/64-bit]

[32-bit]
mov eax,dword [esp+4]
mov eax,dword [eax]
xor eax,XOR_KEY
ret 4
[/32-bit]

//stdcall void ConvertBackRoutine(int i, unsigned char *output);
ConvertBackRoutine:
[64-bit]
//ecx=input
//rdx=address of output

xor ecx,XOR_KEY
mov [rdx],ecx
ret
[/64-bit]

[32-bit]
//[ebp+8]=input
//[ebp+c]=address of output
push eax
push edi
mov eax,dword [esp+C]
mov edi,dword [esp+10]
xor eax,XOR_KEY
mov dword [edi],eax
pop edi
pop eax
ret 8
[/32-bit]
]]
registerCustomTypeAutoAssembler(XORAlgoritm)
[DISABLE]

</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1024</ID>
                              <Description>"Enable "Custom Type" Float"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
local custom=[[
alloc(TypeName,256)
alloc(ByteSize,4)
alloc(UsesFloat,1)
alloc(ConvertRoutine,1024)
alloc(ConvertBackRoutine,1024)
define(XOR_FLOAT,069C5B7D)

TypeName:
db 'Z Float',0

ByteSize:
dd 4  //4 byte real value and 4 byte encryption key right after it

UsesFloat:
db 1

//stdcall int ConvertRoutine(unsigned char *input);
ConvertRoutine:
[64-bit]
//rcx=address of input
mov eax,dword [rcx] //eax now contains the bytes 'input' pointed to
xor eax,XOR_FLOAT
ret
[/64-bit]

[32-bit]
mov eax,dword [esp+4]
mov eax,dword [eax]
xor eax,XOR_FLOAT
ret 4
[/32-bit]

//stdcall void ConvertBackRoutine(int i, unsigned char *output);
ConvertBackRoutine:
[64-bit]
//ecx=input
//rdx=address of output

xor ecx,XOR_FLOAT
mov [rdx],ecx
ret
[/64-bit]

[32-bit]
//[ebp+8]=input
//[ebp+c]=address of output
push eax
push edi
mov eax,dword [esp+C]
mov edi,dword [esp+10]
xor eax,XOR_FLOAT
mov dword [edi],eax
pop edi
pop eax
ret 8
[/32-bit]
]]
registerCustomTypeAutoAssembler(custom)
[DISABLE]

</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1421</ID>
                          <Description>"name / 5"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>"Empyrion.exe"+010700D0</Address>
                          <Offsets>
                            <Offset>400</Offset>
                            <Offset>350</Offset>
                            <Offset>550</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1534</ID>
              <Description>"48 8B 09 48 89 4D D8 48 8B C8 FF 75 30 FF 75 D8 48 83 EC 20 48 8B 00"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>codeRewrite4AOB</Name>
      <Address>145491434</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>attributes</Name>
      <Address>140BC3E63</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>attributes_ptr</Name>
      <Address>13FFE0026</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>attributes_bkp</Name>
      <Address>13FFE0011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>anticheat3</Name>
      <Address>145FFB62D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>anticheat1</Name>
      <Address>1465419DB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>anticheat2</Name>
      <Address>14522D5B4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>anticheat</Name>
      <Address>1463B27B4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>loot</Name>
      <Address>14522A463</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>freezeposition</Name>
      <Address>1409B63AF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>focus</Name>
      <Address>14196B7F5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address>1406C703E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AlwaysDropAOB</Name>
      <Address>140DD54D9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>LastRingH</Name>
      <Address>140DC7D23</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedEstus</Name>
      <Address>140A0CC80</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hostility</Name>
      <Address>14059B80B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>messageRepoP</Name>
      <Address>140DC7D9C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hack_aob2</Name>
      <Address>1404BC5FA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hack_aob3</Name>
      <Address>14061A580</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player_bkp</Name>
      <Address>13FFF0011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GameFlagAOB</Name>
      <Address>1404C1CC0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iframe</Name>
      <Address>1405D4B57</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iframe_ptr</Name>
      <Address>13FFD0025</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iframe_write</Name>
      <Address>14096AD9C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BonFireAOB</Name>
      <Address>140BB685B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bonefirst</Name>
      <Address>7FFEB3BBD94</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>name1</Name>
      <Address>7FFEAE7B4F3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bullet_param</Name>
      <Address>7FFEAE4F5D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MoveOpcode1</Name>
      <Address>13F397119</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MoveOpcode2</Name>
      <Address>13F397121</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>independ</Name>
      <Address>CC5DA4C218</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nokickaddress</Name>
      <Address>CC5DA40410</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wintherclothes</Name>
      <Address>E19F3CE060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>imbored</Name>
      <Address>7FF7A4C71E0D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GettingPointer</Name>
      <Address>7FF7A4C71E26</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SkipLegal</Name>
      <Address>13FEB8B83</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetPTR</Name>
      <Address>140561E29</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>get_ptr</Name>
      <Address>13F39BC9F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem2</Name>
      <Address>06770020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem1</Name>
      <Address>07510000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem5</Name>
      <Address>05EF0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem4</Name>
      <Address>05FE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stone</Name>
      <Address>7FFEDBCBD48</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bongregion</Name>
      <Address>7FFEDC5A03C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>chrph</Name>
      <Address>7FFED6B7004</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healingdaggeraob</Name>
      <Address>7FFEDDDD374</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Imported3</Name>
      <Address>7FFEDBBFEF4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetOnlineBase</Name>
      <Address>13FF41817</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>LockOnParamMemoryRegion</Name>
      <Address>7FFEDBDA24C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>REWR</Name>
      <Address>7FFEDC6E220</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CarPrayerAOB</Name>
      <Address>7FFECC045B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DisableGravityDeathAOB</Name>
      <Address>13F5CC01E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>banditaob</Name>
      <Address>7FFEDDDD4BC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>morningstaraob</Name>
      <Address>7FFEDDE1C28</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem6</Name>
      <Address>05EF0040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CCRE</Name>
      <Address>7FFEDBBC3E4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addressB</Name>
      <Address>062A0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NoHollow</Name>
      <Address>13FE25196</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addressR</Name>
      <Address>05C20000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PreventSoulLost</Name>
      <Address>1400462D6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>soulswriteaob</Name>
      <Address>13FC562D6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ArenaItemsAOB</Name>
      <Address>13FA078C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>myaob</Name>
      <Address>140CEB8D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>myaob2</Name>
      <Address>140CEDCD8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>statuseffect01</Name>
      <Address>13FAB3D88</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>warmthp</Name>
      <Address>7FFEB5E8E8C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>look</Name>
      <Address>13F359703</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bulletregion01</Name>
      <Address>7FFEAE53ADC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>effectregion01</Name>
      <Address>7FFEB46BDC0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NameCrashProtectionAOB</Name>
      <Address>140F8A63B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>facestabmytha01</Name>
      <Address>7FFEB5A0E66</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>snipermytha01</Name>
      <Address>7FFEB5DD514</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NoclipAOB</Name>
      <Address>1402C8D04</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>target_inj</Name>
      <Address>140405FA2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTarget</Name>
      <Address>05FA0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>soundSpecialEquipmentParam</Name>
      <Address>7FFEB50822C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ChugChug</Name>
      <Address>13F71A952</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>yearnlights</Name>
      <Address>7FFEAE6DB78</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addressip</Name>
      <Address>05EF0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NoInventoryStandingStateAOB</Name>
      <Address>13FD36846</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lockregion</Name>
      <Address>7FFEB3DA24C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>attunement_inj</Name>
      <Address>13F250998</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAttune1</Name>
      <Address>060D0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAttune2</Name>
      <Address>060D0008</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addressE</Name>
      <Address>06770020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>effect0</Name>
      <Address>7FFEB4BDB10</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>RingDurabilityAOB</Name>
      <Address>1401754CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>backstablock01</Name>
      <Address>7FFEB55D170</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addresshp</Name>
      <Address>05EF0040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hdp</Name>
      <Address>7FFEB494694</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CopyOpponentsData</Name>
      <Address>141B84665</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mosseffect01</Name>
      <Address>7FFEB509144</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mosseffect02</Name>
      <Address>7FFEB3CE258</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FreezeEffectsAOB</Name>
      <Address>13F9BD92F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DisableCheckForAntiBackGearAOB</Name>
      <Address>13FBC608A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addressw</Name>
      <Address>05FE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>atk</Name>
      <Address>7FFEB5AB8C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemswap</Name>
      <Address>13F6D0642</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>address</Name>
      <Address>07510000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bullet0</Name>
      <Address>7FFEB095393</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetStatus</Name>
      <Address>1400B6E46</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BscPTR</Name>
      <Address>13FDC008C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetCoop</Name>
      <Address>140061B16</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DisableFallDamageAOB</Name>
      <Address>14015C078</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteItemsAOB</Name>
      <Address>13FF9BB5D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>LockCameraStateAOB</Name>
      <Address>14027E9D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NoDeathFromGravity</Name>
      <Address>14015C0DE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NoItemsRestriction</Name>
      <Address>13FF978C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>StatusEffectImmunity</Name>
      <Address>13FF33777</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>advdmgfilter</Name>
      <Address>13FF5727A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>customscript32</Name>
      <Address>140A17643</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>equipload2</Name>
      <Address>1401315E3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>equipload1</Name>
      <Address>14013435E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteStaminaAOB</Name>
      <Address>14011D2EE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteSpellsAOB</Name>
      <Address>13FF9B790</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>WeaponDurabilityAOB</Name>
      <Address>14013516D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GearDurability</Name>
      <Address>1401322EA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteDurabilityAOB</Name>
      <Address>13FF9A6BE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>new</Name>
      <Address>13FD71169</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fuckeleonunlimitedammo</Name>
      <Address>119E2B06</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>QuickSlotItems</Name>
      <Address>81127B5B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedJetPack</Name>
      <Address>70537F1A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Consumables5</Name>
      <Address>0F14710B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>314545</Name>
      <Address>2009C007</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Clip5</Name>
      <Address>E9207C0E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hack_aob</Name>
      <Address>13FB8E5F4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetHightlightedItem</Name>
      <Address>3F8C0130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GameFlagData</Name>
      <Address>3EC40021</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GameData</Name>
      <Address>3EB800D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>testaob</Name>
      <Address>3F4B0130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedOxy</Name>
      <Address>454230DF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FinFoodNow</Name>
      <Address>1D5950D3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>JetPackAOB</Name>
      <Address>C7B53E87</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AmmoAOB</Name>
      <Address>C7BC3BFA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player</Name>
      <Address> 1CA231F5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player_ptr</Name>
      <Address>1CBC001E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>maxhpaob</Name>
      <Address> 1CA232DA</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
