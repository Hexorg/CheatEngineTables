<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <Forms>
    <VermLua Class="TCEForm" Encoding="Ascii85">l}c:),AtI}3B*ikGwK(Kv,6==;a@2k7d$m1fj_:kyN+n918y8UvK^D+y6mnW)O;9yblV?Q4I!u!s=::adwtG5$M?RLs_d{e!=$=W8w]a@?f;72%1Lzuv37sC-YwA8TDw0ScP29TC#o%Iq{T2?7xze{so;s*f%]qdwG?njZ1orgt[$9Gr?4/0wCWgmjvHe[xm^h=r$SL%2VZ8Q4:T_j;lr+qJg15-88lGCnCs=R8[?EOe{,*,=R{}g[ME{a-HlVY].Bmihif5Kvrdw)Fw[+4hP^0aJmJP#nBZ1XbQjfUWI2%$NCzQgyE2AURLhn*wL=d*b^%nQh2*c4O4dkXc07[.0w(45#UFi}k0:M#4z#3vr7GTwSV%v4v,+hSGeV[$+^5,#!/@}I0JOHKSAHZs-,Y@PEKNHj[V@G{2?feS0RN+O6Q.nsI*RXcuOKQRuGvCoL1;57B}sxtr8;D5#?zaN[DX#rWVDbZt0U9=!=ccLvq_(6)}vd{i_ew)*gfhY3i9p/nPkAr5n$6[n=R;X=}kN[Y}U{FO]Ig%lq761en+wOM#1YSbdvhvsCNr2D_z*]Ew)meXy?i.Si@lvm^;JLWCK(zGbcB9+RvX5U$/FK?MKp?H7]XxC3-#1l@%SdN=)Y0z:@rw0evzvekS6,c_?Hknu(V_%?b(ecury42Tdp_G[CJKQ$.rTx27pN+=]/is$nWcn+F}j]U3</VermLua>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>86</ID>
      <Description>"Lua Override"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
alloc(LuaMemory,10048)
label(returnhere)
label(originalcode)
label(exit)
label(CompCheck)
registersymbol(LuaMemory)
registersymbol(CompCheck)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [CompCheck],1
jne originalcode

mov edx,LuaMemory
mov [CompCheck],0
jmp exit

originalcode:
mov edx,[esp+08]


exit:
mov eax,edx
jmp returnhere

CompCheck:

lual_loadstring:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(LuaMemory)
lual_loadstring:
db 8B 54 24 08 8B C2
unregistersymbol(LuaMemory)
unregistersymbol(CompCheck)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>88</ID>
          <Description>"Show Editor"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

LuaCall(VermLua.show())
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat

LuaCall(VermLua.hide())
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>87</ID>
          <Description>"Debug"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>84</ID>
              <Description>"Lua String"</Description>
              <LastState Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>String</VariableType>
              <Length>900</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>LuaMemory</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>83</ID>
              <Description>"Override Flag"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>CompCheck</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>89</ID>
      <Description>"Active Me FIRST"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(memjump)
registersymbol(memjump)
label(returnhere)

aobscan(lua_checkstring, 53 56 6A 06 68 00 D1 B7 00)

newmem: //this is allocated memory, you have read,write,execute access
mov eax, 0
retn

lua_checkstring:
memjump:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
memjump:
db 53 56 6A 06 68 00 D1 B7 00
unregistersymbol(memjump)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>function ShowHelp(sender)
  showMessage("This form is best used when you are still at the inn.\n\nAfter writing your lua, hit the inject button, and then open your inventory.This will cause the next loadString call to be replaced with your custom lua.\n\nWarning: Any lua error will cause the game to crash!")
end

function LuaOpen(sender)
  local oBool = VermLua_odOpenLua.Execute()
  if oBool then
    VermLua_mLua.Lines.loadFromFile(VermLua_odOpenLua.FileName)
  end
end

function LuaSave(sender)
  if VermLua_odOpenLua.FileName == "" then
    LuaSaveAs()
  else
    VermLua_mLua.Lines.saveToFile(VermLua_odOpenLua.FileName)
  end
end


function LuaSaveAs(sender)
  local sBool = VermLua_sdSaveLua.Execute()
  if sBool then
    VermLua_mLua.Lines.saveToFile(VermLua_sdSaveLua.FileName)
    VermLua_odOpenLua.FileName = VermLua_sdSaveLua.FileName
  end
end


function bInjectClick(sender)
  writeString("LuaMemory",VermLua_mLua.Lines.Text)
  writeBytes("LuaMemory+" .. string.len(VermLua_mLua.Lines.Text),0)
  writeInteger("CompCheck",1)
end
VermLua.visible = false
</LuaScript>
</CheatTable>
