<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Bulletproof"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(Health,Conviction_game.exe,8B 39 8B 88 68 06 00 00 E8) // should be unique
alloc(newmem,128)
label(return)
registersymbol(Health)


newmem:
  mov ecx,[eax+00000668]
//lea eax,[ecx+00000668]
//mov eax,[eax]
mov [ecx+50],(float)1750
  jmp return

Health +02:
  jmp newmem
  nop
return:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Health +02:
  db 8B 88 68 06 00 00

unregistersymbol(Health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Conviction_game.exe"+1104A5

"Conviction_game.exe"+110487: 51                          -  push ecx
"Conviction_game.exe"+110488: 56                          -  push esi
"Conviction_game.exe"+110489: 8B F1                       -  mov esi,ecx
"Conviction_game.exe"+11048B: 8B 86 1C 04 00 00           -  mov eax,[esi+0000041C]
"Conviction_game.exe"+110491: 85 C0                       -  test eax,eax
"Conviction_game.exe"+110493: 0F 84 89 00 00 00           -  je Conviction_game.exe+110522
"Conviction_game.exe"+110499: 8B 8E 34 01 00 00           -  mov ecx,[esi+00000134]
"Conviction_game.exe"+11049F: 8B 49 28                    -  mov ecx,[ecx+28]
"Conviction_game.exe"+1104A2: 57                          -  push edi
"Conviction_game.exe"+1104A3: 8B 39                       -  mov edi,[ecx]
// ---------- INJECTING HERE ----------
"Conviction_game.exe"+1104A5: 8B 88 68 06 00 00           -  mov ecx,[eax+00000668]
// ---------- DONE INJECTING  ----------
"Conviction_game.exe"+1104AB: E8 FA F9 FB FF              -  call Conviction_game.exe+CFEAA
"Conviction_game.exe"+1104B0: D9 5D FC                    -  fstp dword ptr [ebp-04]
"Conviction_game.exe"+1104B3: 8B 86 1C 04 00 00           -  mov eax,[esi+0000041C]
"Conviction_game.exe"+1104B9: 8B 88 68 06 00 00           -  mov ecx,[eax+00000668]
"Conviction_game.exe"+1104BF: E8 36 FD FB FF              -  call Conviction_game.exe+D01FA
"Conviction_game.exe"+1104C4: D8 7D FC                    -  fdivr dword ptr [ebp-04]
"Conviction_game.exe"+1104C7: D9 5D FC                    -  fstp dword ptr [ebp-04]
"Conviction_game.exe"+1104CA: D9 EE                       -  fldz 
"Conviction_game.exe"+1104CC: D9 45 FC                    -  fld dword ptr [ebp-04]
"Conviction_game.exe"+1104CF: DF F1                       -  fcomip st(0),st(1)
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Lock Ammo"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(Ammo,Conviction_game.exe,75 06 FF 8B 2C 08 00 00) // should be unique
registersymbol(Ammo)

Ammo:
  jmp +6


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Ammo:
  db 75 06

unregistersymbol(Ammo)

{
// ORIGINAL CODE - INJECTION POINT: "Conviction_game.exe"+13F94D

"Conviction_game.exe"+13F91B: 74 06                          -  je Conviction_game.exe+13F923
"Conviction_game.exe"+13F91D: FF 86 0C 07 00 00              -  inc [esi+0000070C]
"Conviction_game.exe"+13F923: 83 64 24 60 00                 -  and dword ptr [esp+60],00
"Conviction_game.exe"+13F928: 8D 44 24 5C                    -  lea eax,[esp+5C]
"Conviction_game.exe"+13F92C: 8D 8B 74 08 00 00              -  lea ecx,[ebx+00000874]
"Conviction_game.exe"+13F932: 50                             -  push eax
"Conviction_game.exe"+13F933: C7 44 24 60 04 00 00 00        -  mov [esp+60],00000004
"Conviction_game.exe"+13F93B: 89 4C 24 74                    -  mov [esp+74],ecx
"Conviction_game.exe"+13F93F: E8 01 42 05 00                 -  call Conviction_game.exe+193B45
"Conviction_game.exe"+13F944: 66 F7 83 5C 08 00 00 00 02     -  test word ptr [ebx+0000085C],0200
// ---------- INJECTING HERE ----------
"Conviction_game.exe"+13F94D: 75 06                          -  jne Conviction_game.exe+13F955
"Conviction_game.exe"+13F94F: FF 8B 2C 08 00 00              -  dec [ebx+0000082C]
// ---------- DONE INJECTING  ----------
"Conviction_game.exe"+13F955: 85 7E 68                       -  test [esi+68],edi
"Conviction_game.exe"+13F958: 74 17                          -  je Conviction_game.exe+13F971
"Conviction_game.exe"+13F95A: 8B 83 54 08 00 00              -  mov eax,[ebx+00000854]
"Conviction_game.exe"+13F960: B9 00 20 00 00                 -  mov ecx,00002000
"Conviction_game.exe"+13F965: 85 C1                          -  test ecx,eax
"Conviction_game.exe"+13F967: 75 08                          -  jne Conviction_game.exe+13F971
"Conviction_game.exe"+13F969: 0B C1                          -  or eax,ecx
"Conviction_game.exe"+13F96B: 89 83 54 08 00 00              -  mov [ebx+00000854],eax
"Conviction_game.exe"+13F971: 8B 03                          -  mov eax,[ebx]
"Conviction_game.exe"+13F973: 8B CB                          -  mov ecx,ebx
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>113</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"No Recoil"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(Recoil,Conviction_game.exe,F3 0F 11 86 A0 0C 00 00) // should be unique
registersymbol(Recoil)

alloc(newmem,128)
label(return)

newmem:
  mov [esi+00000CA0],(float)0
  jmp return

Recoil:
  jmp newmem
  nop
  nop
  nop
return:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Recoil:
  db F3 0F 11 86 A0 0C 00 00

unregistersymbol(Recoil)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Conviction_game.exe"+13E28B

"Conviction_game.exe"+13E25E: E8 80 F8 FF FF              -  call Conviction_game.exe+13DAE3
"Conviction_game.exe"+13E263: 66 F7 86 5C 08 00 00 00 04  -  test word ptr [esi+0000085C],0400
"Conviction_game.exe"+13E26C: 74 05                       -  je Conviction_game.exe+13E273
"Conviction_game.exe"+13E26E: 0F 57 C0                    -  xorps xmm0,xmm0
"Conviction_game.exe"+13E271: EB 18                       -  jmp Conviction_game.exe+13E28B
"Conviction_game.exe"+13E273: F3 0F 10 86 A0 0C 00 00     -  movss xmm0,[esi+00000CA0]
"Conviction_game.exe"+13E27B: F3 0F 58 45 FC              -  addss xmm0,[ebp-04]
"Conviction_game.exe"+13E280: 0F 2F 45 E4                 -  comiss xmm0,[ebp-1C]
"Conviction_game.exe"+13E284: 72 05                       -  jb Conviction_game.exe+13E28B
"Conviction_game.exe"+13E286: F3 0F 10 45 E4              -  movss xmm0,[ebp-1C]
// ---------- INJECTING HERE ----------
"Conviction_game.exe"+13E28B: F3 0F 11 86 A0 0C 00 00     -  movss [esi+00000CA0],xmm0
// ---------- DONE INJECTING  ----------
"Conviction_game.exe"+13E293: 5E                          -  pop esi
"Conviction_game.exe"+13E294: C9                          -  leave 
"Conviction_game.exe"+13E295: C3                          -  ret 
"Conviction_game.exe"+13E296: 56                          -  push esi
"Conviction_game.exe"+13E297: 57                          -  push edi
"Conviction_game.exe"+13E298: 8B F1                       -  mov esi,ecx
"Conviction_game.exe"+13E29A: E8 EB ED FD FF              -  call Conviction_game.exe+11D08A
"Conviction_game.exe"+13E29F: 33 FF                       -  xor edi,edi
"Conviction_game.exe"+13E2A1: 39 BE A4 0D 00 00           -  cmp [esi+00000DA4],edi
"Conviction_game.exe"+13E2A7: 7E 1E                       -  jle Conviction_game.exe+13E2C7
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>114</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Execute On"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(ExecuteOn,Conviction_game.exe,7E 03 33 C0 40 C3) // should be unique
registersymbol(ExecuteOn)


ExecuteOn:
  nop
  nop


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
ExecuteOn:
  db 7E 03

unregistersymbol(ExecuteOn)

{
// ORIGINAL CODE - INJECTION POINT: "Conviction_game.exe"+374238

"Conviction_game.exe"+374221: 75 03                    -  jne Conviction_game.exe+374226
"Conviction_game.exe"+374223: 33 C0                    -  xor eax,eax
"Conviction_game.exe"+374225: C3                       -  ret 
"Conviction_game.exe"+374226: 33 C0                    -  xor eax,eax
"Conviction_game.exe"+374228: 40                       -  inc eax
"Conviction_game.exe"+374229: C3                       -  ret 
"Conviction_game.exe"+37422A: F6 81 C0 00 00 00 20     -  test byte ptr [ecx+000000C0],20
"Conviction_game.exe"+374231: 75 07                    -  jne Conviction_game.exe+37423A
"Conviction_game.exe"+374233: 33 C0                    -  xor eax,eax
"Conviction_game.exe"+374235: 39 41 5C                 -  cmp [ecx+5C],eax
// ---------- INJECTING HERE ----------
"Conviction_game.exe"+374238: 7E 03                    -  jle Conviction_game.exe+37423D
"Conviction_game.exe"+37423A: 33 C0                    -  xor eax,eax
"Conviction_game.exe"+37423C: 40                       -  inc eax
// ---------- DONE INJECTING  ----------
"Conviction_game.exe"+37423D: C3                       -  ret 
"Conviction_game.exe"+37423E: 56                       -  push esi
"Conviction_game.exe"+37423F: 8B F1                    -  mov esi,ecx
"Conviction_game.exe"+374241: 57                       -  push edi
"Conviction_game.exe"+374242: 8D BE B8 00 00 00        -  lea edi,[esi+000000B8]
"Conviction_game.exe"+374248: 8B 0F                    -  mov ecx,[edi]
"Conviction_game.exe"+37424A: E8 A0 06 DE FF           -  call Conviction_game.exe+1548EF
"Conviction_game.exe"+37424F: 85 C0                    -  test eax,eax
"Conviction_game.exe"+374251: 74 05                    -  je Conviction_game.exe+374258
"Conviction_game.exe"+374253: 33 C0                    -  xor eax,eax
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>115</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Lock Points"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(Punti,Conviction_game.exe,75 06 8B 46 74) // should be unique
registersymbol(Punti)

Punti:
  jmp +6



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Punti:
  db 75 06

unregistersymbol(Punti)

{
// ORIGINAL CODE - INJECTION POINT: "Conviction_game.exe"+37B95D

"Conviction_game.exe"+37B93C: 8B 46 68              -  mov eax,[esi+68]
"Conviction_game.exe"+37B93F: 0F B6 80 6D 05 00 00  -  movzx eax,byte ptr [eax+0000056D]
"Conviction_game.exe"+37B946: 57                    -  push edi
"Conviction_game.exe"+37B947: 50                    -  push eax
"Conviction_game.exe"+37B948: E8 C1 59 D4 FF        -  call Conviction_game.exe+C130E
"Conviction_game.exe"+37B94D: 8B C8                 -  mov ecx,eax
"Conviction_game.exe"+37B94F: E8 27 F6 09 00        -  call Conviction_game.exe+41AF7B
"Conviction_game.exe"+37B954: F6 86 88 00 00 00 01  -  test byte ptr [esi+00000088],01
"Conviction_game.exe"+37B95B: 5F                    -  pop edi
"Conviction_game.exe"+37B95C: 5B                    -  pop ebx
// ---------- INJECTING HERE ----------
"Conviction_game.exe"+37B95D: 75 06                 -  jne Conviction_game.exe+37B965
"Conviction_game.exe"+37B95F: 8B 46 74              -  mov eax,[esi+74]
// ---------- DONE INJECTING  ----------
"Conviction_game.exe"+37B962: 29 45 5C              -  sub [ebp+5C],eax
"Conviction_game.exe"+37B965: 83 4E 74 FF           -  or dword ptr [esi+74],-01
"Conviction_game.exe"+37B969: 8B 46 30              -  mov eax,[esi+30]
"Conviction_game.exe"+37B96C: 8B 80 F0 05 00 00     -  mov eax,[eax+000005F0]
"Conviction_game.exe"+37B972: 8B 40 64              -  mov eax,[eax+64]
"Conviction_game.exe"+37B975: C1 E8 1C              -  shr eax,1C
"Conviction_game.exe"+37B978: F7 D0                 -  not eax
"Conviction_game.exe"+37B97A: A8 01                 -  test al,01
"Conviction_game.exe"+37B97C: 74 1F                 -  je Conviction_game.exe+37B99D
"Conviction_game.exe"+37B97E: 8B 4E 68              -  mov ecx,[esi+68]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>116</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Undetectable"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(AIDetectPrim,Conviction_game.exe,0F 8E C6 08 00 00 8B) // should be unique
aobscanmodule(AIDetectSec,Conviction_game.exe,75 65 8B 46 74) // should be unique
registersymbol(AIDetectPrim)
registersymbol(AIDetectSec)

AIDetectPrim:
  db E9 C7 08 00 00 90

AIDetectSec:
  db EB 65

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
AIDetectPrim:
  db 0F 8E C6 08 00 00
AIDetectSec:
  db 75 65 8B 46 74


unregistersymbol(AIDetectPrim)
unregistersymbol(AIDetectSec)

{
// ORIGINAL CODE - INJECTION POINT: "Conviction_game.exe"+297433

"Conviction_game.exe"+29740E: 8B 01                          -  mov eax,[ecx]
"Conviction_game.exe"+297410: 8D 96 30 02 00 00              -  lea edx,[esi+00000230]
"Conviction_game.exe"+297416: 52                             -  push edx
"Conviction_game.exe"+297417: 8D 96 24 02 00 00              -  lea edx,[esi+00000224]
"Conviction_game.exe"+29741D: 52                             -  push edx
"Conviction_game.exe"+29741E: FF 90 78 06 00 00              -  call dword ptr [eax+00000678]
"Conviction_game.exe"+297424: 8B 87 EC 00 00 00              -  mov eax,[edi+000000EC]
"Conviction_game.exe"+29742A: 83 65 60 00                    -  and dword ptr [ebp+60],00
"Conviction_game.exe"+29742E: 85 C0                          -  test eax,eax
"Conviction_game.exe"+297430: 89 45 50                       -  mov [ebp+50],eax
// ---------- INJECTING HERE ----------
"Conviction_game.exe"+297433: 0F 8E C6 08 00 00              -  jng Conviction_game.exe+297CFF
// ---------- DONE INJECTING  ----------
"Conviction_game.exe"+297439: 8B 5D 60                       -  mov ebx,[ebp+60]
"Conviction_game.exe"+29743C: 8B 45 58                       -  mov eax,[ebp+58]
"Conviction_game.exe"+29743F: 69 DB 0C 03 00 00              -  imul ebx,ebx,0000030C
"Conviction_game.exe"+297445: 8B 4E 44                       -  mov ecx,[esi+44]
"Conviction_game.exe"+297448: 03 98 E8 00 00 00              -  add ebx,[eax+000000E8]
"Conviction_game.exe"+29744E: F7 81 7C 06 00 00 00 00 00 04  -  test [ecx+0000067C],4000000
"Conviction_game.exe"+297458: 0F 85 70 08 00 00              -  jne Conviction_game.exe+297CCE
"Conviction_game.exe"+29745E: 8B 01                          -  mov eax,[ecx]
"Conviction_game.exe"+297460: FF 90 D0 02 00 00              -  call dword ptr [eax+000002D0]
"Conviction_game.exe"+297466: 85 C0                          -  test eax,eax
}

{
// ORIGINAL CODE - INJECTION POINT: "Conviction_game.exe"+2BA9EE

"Conviction_game.exe"+2BA9CA: 8B 46 74                       -  mov eax,[esi+74]
"Conviction_game.exe"+2BA9CD: 8B 80 E0 05 00 00              -  mov eax,[eax+000005E0]
"Conviction_game.exe"+2BA9D3: 8B 88 5C 04 00 00              -  mov ecx,[eax+0000045C]
"Conviction_game.exe"+2BA9D9: 53                             -  push ebx
"Conviction_game.exe"+2BA9DA: 6A 01                          -  push 01
"Conviction_game.exe"+2BA9DC: E8 21 E0 EE FF                 -  call Conviction_game.exe+1A8A02
"Conviction_game.exe"+2BA9E1: 85 C0                          -  test eax,eax
"Conviction_game.exe"+2BA9E3: 75 72                          -  jne Conviction_game.exe+2BAA57
"Conviction_game.exe"+2BA9E5: 8D BB 98 0A 00 00              -  lea edi,[ebx+00000A98]
"Conviction_game.exe"+2BA9EB: F6 07 06                       -  test byte ptr [edi],06
// ---------- INJECTING HERE ----------
"Conviction_game.exe"+2BA9EE: 75 65                          -  jne Conviction_game.exe+2BAA55
"Conviction_game.exe"+2BA9F0: 8B 46 74                       -  mov eax,[esi+74]
// ---------- DONE INJECTING  ----------
"Conviction_game.exe"+2BA9F3: 8B 88 E0 05 00 00              -  mov ecx,[eax+000005E0]
"Conviction_game.exe"+2BA9F9: 6A 00                          -  push 00
"Conviction_game.exe"+2BA9FB: 53                             -  push ebx
"Conviction_game.exe"+2BA9FC: FF B0 D0 05 00 00              -  push [eax+000005D0]
"Conviction_game.exe"+2BAA02: E8 A9 2D ED FF                 -  call Conviction_game.exe+18D7B0
"Conviction_game.exe"+2BAA07: 83 0F 02                       -  or dword ptr [edi],02
"Conviction_game.exe"+2BAA0A: 8B 46 74                       -  mov eax,[esi+74]
"Conviction_game.exe"+2BAA0D: 8B 88 E0 05 00 00              -  mov ecx,[eax+000005E0]
"Conviction_game.exe"+2BAA13: 68 68 BE 00 01                 -  push Conviction_game.exe+C0BE68
"Conviction_game.exe"+2BAA18: E8 6E 53 12 00                 -  call Conviction_game.exe+3DFD8B
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Portable EMP"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(PortEMP,Conviction_game.exe,FF 8B 00 08 00 00) // should be unique
registersymbol(PortEMP)

PortEMP:
  db EB 04


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
PortEMP:
  db FF 8B 00 08 00 00

unregistersymbol(PortEMP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Conviction_game.exe"+1450B0

"Conviction_game.exe"+145087: D9 EE                    -  fldz 
"Conviction_game.exe"+145089: D9 1C 24                 -  fstp dword ptr [esp]
"Conviction_game.exe"+14508C: 68 60 94 00 01           -  push Conviction_game.exe+C09460
"Conviction_game.exe"+145091: 6A 0F                    -  push 0F
"Conviction_game.exe"+145093: E8 BF E2 2E 00           -  call Conviction_game.exe+433357
"Conviction_game.exe"+145098: D9 83 30 08 00 00        -  fld dword ptr [ebx+00000830]
"Conviction_game.exe"+14509E: 0F 57 C0                 -  xorps xmm0,xmm0
"Conviction_game.exe"+1450A1: D9 9B 2C 08 00 00        -  fstp dword ptr [ebx+0000082C]
"Conviction_game.exe"+1450A7: D9 83 7C 08 00 00        -  fld dword ptr [ebx+0000087C]
"Conviction_game.exe"+1450AD: 83 C4 14                 -  add esp,14
// ---------- INJECTING HERE ----------
"Conviction_game.exe"+1450B0: FF 8B 00 08 00 00        -  dec [ebx+00000800]
// ---------- DONE INJECTING  ----------
"Conviction_game.exe"+1450B6: D9 9B 80 08 00 00        -  fstp dword ptr [ebx+00000880]
"Conviction_game.exe"+1450BC: D9 E8                    -  fld1 
"Conviction_game.exe"+1450BE: 6A 00                    -  push 00
"Conviction_game.exe"+1450C0: 51                       -  push ecx
"Conviction_game.exe"+1450C1: D9 1C 24                 -  fstp dword ptr [esp]
"Conviction_game.exe"+1450C4: FF B3 50 08 00 00        -  push [ebx+00000850]
"Conviction_game.exe"+1450CA: 8B CB                    -  mov ecx,ebx
"Conviction_game.exe"+1450CC: F3 0F 11 83 F4 07 00 00  -  movss [ebx+000007F4],xmm0
"Conviction_game.exe"+1450D4: E8 3D 70 28 00           -  call Conviction_game.exe+3CC116
"Conviction_game.exe"+1450D9: 8B 5B 7C                 -  mov ebx,[ebx+7C]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>120</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Online Challenges"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(Challenge,Conviction_game.exe,80 79 30 03 5F) // should be unique
alloc(newmem,256)

label(code)
label(level_sng)
label(level_1)
label(level_2)
label(modstatus)
label(common)
label(return)
registersymbol(Challenge)

newmem:
  cmp byte ptr [ecx+30],03
pushfd
je code

movzx eax, byte ptr [ecx+35]
cmp eax, 13
je modstatus
cmp eax, 14
je modstatus
cmp eax, 27
jne code

modstatus:
  cmp byte ptr [ecx+34],00
  je level_sng
  mov eax,[ecx+48]
  mov [ecx+58],eax
  cmp byte ptr [ecx+30],02
  je level_2
  cmp byte ptr [ecx+30],01
  je level_1

//level_0
mov eax,(int)1400
  jmp common

level_1:
mov eax,(int)1000
  jmp common

level_2:
mov eax,[ecx+54]
  jmp common

level_sng:
mov [ecx+58],01
mov eax,[ecx+4C]


common:
add [esi+5C],eax
add [esi+60],eax
mov [ecx+3C],-1
mov byte ptr [ecx+30],03
mov byte ptr [ecx+33],04


code:
popfd
  pop edi
  jmp return

Challenge:
  jmp newmem
return:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Challenge:
  db 80 79 30 03 5F

unregistersymbol(Challenge)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Conviction_game.exe"+CD517

"Conviction_game.exe"+CD503: 33 C0              -  xor eax,eax
"Conviction_game.exe"+CD505: 8B FA              -  mov edi,edx
"Conviction_game.exe"+CD507: AB                 -  stosd 
"Conviction_game.exe"+CD508: AB                 -  stosd 
"Conviction_game.exe"+CD509: AB                 -  stosd 
"Conviction_game.exe"+CD50A: AB                 -  stosd 
"Conviction_game.exe"+CD50B: 8A 41 35           -  mov al,[ecx+35]
"Conviction_game.exe"+CD50E: 88 42 01           -  mov [edx+01],al
"Conviction_game.exe"+CD511: 8A 41 36           -  mov al,[ecx+36]
"Conviction_game.exe"+CD514: 88 42 02           -  mov [edx+02],al
// ---------- INJECTING HERE ----------
"Conviction_game.exe"+CD517: 80 79 30 03        -  cmp byte ptr [ecx+30],03
"Conviction_game.exe"+CD51B: 5F                 -  pop edi
// ---------- DONE INJECTING  ----------
"Conviction_game.exe"+CD51C: 75 0A              -  jne Conviction_game.exe+CD528
"Conviction_game.exe"+CD51E: 0F B6 41 34        -  movzx eax,byte ptr [ecx+34]
"Conviction_game.exe"+CD522: 8B 44 81 40        -  mov eax,[ecx+eax*4+40]
"Conviction_game.exe"+CD526: EB 03              -  jmp Conviction_game.exe+CD52B
"Conviction_game.exe"+CD528: 8B 41 58           -  mov eax,[ecx+58]
"Conviction_game.exe"+CD52B: 89 42 0C           -  mov [edx+0C],eax
"Conviction_game.exe"+CD52E: 8A 41 30           -  mov al,[ecx+30]
"Conviction_game.exe"+CD531: 3C 03              -  cmp al,03
"Conviction_game.exe"+CD533: 75 06              -  jne Conviction_game.exe+CD53B
"Conviction_game.exe"+CD535: 0F B6 41 34        -  movzx eax,byte ptr [ecx+34]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"All Challenges"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(Challenge,Conviction_game.exe,80 79 30 03 5F) // should be unique
alloc(newmem,256)

label(code)
label(level_sng)
label(level_1)
label(level_2)
label(modstatus)
label(common)
label(return)
registersymbol(Challenge)

newmem:
  cmp byte ptr [ecx+30],03
pushfd
je code

//movzx eax, byte ptr [ecx+35]
//cmp eax, 13
//je modstatus
//cmp eax, 14
//je modstatus
//cmp eax, 27
//jne code

modstatus:
  cmp byte ptr [ecx+34],00
  je level_sng
  mov eax,[ecx+48]
  mov [ecx+58],eax
  cmp byte ptr [ecx+30],02
  je level_2
  cmp byte ptr [ecx+30],01
  je level_1

//level_0
mov eax,(int)1400
  jmp common

level_1:
mov eax,(int)1000
  jmp common

level_2:
mov eax,[ecx+54]
  jmp common

level_sng:
mov [ecx+58],01
mov eax,[ecx+4C]


common:
add [esi+5C],eax
add [esi+60],eax
mov [ecx+3C],-1
mov byte ptr [ecx+30],03
mov byte ptr [ecx+33],04


code:
popfd
  pop edi
  jmp return

Challenge:
  jmp newmem
return:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Challenge:
  db 80 79 30 03 5F

unregistersymbol(Challenge)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Conviction_game.exe"+CD517

"Conviction_game.exe"+CD503: 33 C0              -  xor eax,eax
"Conviction_game.exe"+CD505: 8B FA              -  mov edi,edx
"Conviction_game.exe"+CD507: AB                 -  stosd 
"Conviction_game.exe"+CD508: AB                 -  stosd 
"Conviction_game.exe"+CD509: AB                 -  stosd 
"Conviction_game.exe"+CD50A: AB                 -  stosd 
"Conviction_game.exe"+CD50B: 8A 41 35           -  mov al,[ecx+35]
"Conviction_game.exe"+CD50E: 88 42 01           -  mov [edx+01],al
"Conviction_game.exe"+CD511: 8A 41 36           -  mov al,[ecx+36]
"Conviction_game.exe"+CD514: 88 42 02           -  mov [edx+02],al
// ---------- INJECTING HERE ----------
"Conviction_game.exe"+CD517: 80 79 30 03        -  cmp byte ptr [ecx+30],03
"Conviction_game.exe"+CD51B: 5F                 -  pop edi
// ---------- DONE INJECTING  ----------
"Conviction_game.exe"+CD51C: 75 0A              -  jne Conviction_game.exe+CD528
"Conviction_game.exe"+CD51E: 0F B6 41 34        -  movzx eax,byte ptr [ecx+34]
"Conviction_game.exe"+CD522: 8B 44 81 40        -  mov eax,[ecx+eax*4+40]
"Conviction_game.exe"+CD526: EB 03              -  jmp Conviction_game.exe+CD52B
"Conviction_game.exe"+CD528: 8B 41 58           -  mov eax,[ecx+58]
"Conviction_game.exe"+CD52B: 89 42 0C           -  mov [edx+0C],eax
"Conviction_game.exe"+CD52E: 8A 41 30           -  mov al,[ecx+30]
"Conviction_game.exe"+CD531: 3C 03              -  cmp al,03
"Conviction_game.exe"+CD533: 75 06              -  jne Conviction_game.exe+CD53B
"Conviction_game.exe"+CD535: 0F B6 41 34        -  movzx eax,byte ptr [ecx+34]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>AIDetect</Name>
      <Address>00697433</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PortEMP</Name>
      <Address>00544DDA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AIDetectPrim</Name>
      <Address>00697182</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AIDetectSec</Name>
      <Address>006BA743</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Health</Name>
      <Address>0050FE20</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Ammo</Name>
      <Address>0053F6C2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Recoil</Name>
      <Address>0053E020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ExecuteOn</Name>
      <Address>00774238</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Challenges goes from 01h to 28h, value 1Eh excluded.
Each of both Challenges cheats can be customized to gain just the chosen one or more of them.
Values are as follows:
01h = Death From Above        
02h = Grab From Ledge           
03h = 5x Predator
04h = Stealth Headshot
05h = Mark Proficiency   
06h = 3x Frag Grenade..........Prep &amp; Exec list
07h = Remote Explosion
08h = Stunned
09h = Behind Closed Doors
0Ah = Sonar Mark
0Bh = Shadow Takedown
0Ch = Sticky Camera Whistle
-----
0Dh = Vanish Silently
0Eh = Cat and Mouse
0Fh = Last Known Position
10h = Portable EMP Escape
11h = Flashbang Escape.........Vanish list
12h = EMP Grenade Stun
13h = Choke Hold Freedom
14h = Reviving Team-mates
-----
15h = Mark Mastery
16h = Advenced Stealth
17h = Advanced Close Combat
18h = 10x Predator
19h = AR Marksman
1Ah = Pistol Marksman
1Bh = Collateral Damage
1Ch = Human Collision
1Dh = Deadly Fall............Splinter Cell list
1Fh = Environmental Hazard
20h = Sec. Device Diversion
21h = Car Alarm Investigation
22h = Human Kevlar
23h = Group Neutralization
24h = Alternate Door Entry
25h = Breaking Glass
26h = Effective Interrrogation
27h = Full Recovery
28h = Remain Undetected
</Comments>
</CheatTable>
