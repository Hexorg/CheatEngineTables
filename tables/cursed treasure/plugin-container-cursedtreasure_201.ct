<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Firefox script; v1.10.0109 and 1.09.0020.ARMG"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,4096)
aobscan(aobGold,89 41 38 8B 81 EC 00 00 00 85 C0)
aobscan(aobMana,89 42 3C 8B 82 EC 00 00 00 89 45 B0 85 C0)
aobscan(aobTick1,66 0F D6 8F 98 00 00 00)
aobscan(aobTick2,66 0F D6 83 98 00 00 00)

label(aobGold_r)
label(lblGold)
label(lblGoldReturn)

label(aobMana_r)
label(lblMana)
label(lblManaReturn)

label(lblTester)          // Requires base address in EAX!!!
label(lblTesterSkipGold)
label(lblTesterSkipMana)
label(lblTesterSkipMaxMana)
label(lblTesterReturn)

label(aobTick1_r)
label(lblTick1)
label(lblTick1Skip)
label(lblTick1Return)

label(aobTick2_r)
label(lblTick2)
label(lblTick2Skip)
label(lblTick2Return)

label(bEnableGoldHack)
label(iDesiredGold)
label(bEnableManaHack)
label(iDesiredMana)
label(bEnableMaxManaHack)
label(iDesiredMaxMana)
label(dZero)
label(bEnableInstantFire)

registersymbol(aobGold_r)
registersymbol(aobMana_r)
registersymbol(bEnableGoldHack)
registersymbol(iDesiredGold)
registersymbol(bEnableManaHack)
registersymbol(iDesiredMana)
registersymbol(bEnableMaxManaHack)
registersymbol(iDesiredMaxMana)
registersymbol(aobTick1_r)
registersymbol(aobTick2_r)
registersymbol(dZero)
registersymbol(bEnableInstantFire)

newmem:
lblGold:
mov [ecx+38],eax        // Original code
mov eax,ecx
call lblTester
mov eax,[ecx+000000EC]  // Original code
jmp lblGoldReturn
lblMana:
mov [edx+3C],eax       // Original code
mov eax,edx
call lblTester
mov eax,[edx+000000EC] // Original code
jmp lblManaReturn
lblTester:
push ebx
test eax,eax
jz short lblTesterReturn
cmp dword ptr [bEnableGoldHack],1
jne short lblTesterSkipGold
mov ebx,[eax+38]
cmp dword ptr [iDesiredGold],ebx
jl short lblTesterSkipGold
mov ebx,[iDesiredGold]
mov [eax+38],ebx
lblTesterSkipGold:
cmp dword ptr [bEnableManaHack],1
jne short lblTesterSkipMana
mov ebx,[ecx+3C]
cmp dword ptr [iDesiredMana],ebx
jl short lblTesterSkipMana
mov ebx,[iDesiredMana]
mov [eax+3C],ebx
lblTesterSkipMana:
cmp dword ptr [bEnableMaxManaHack],1
jne short lblTesterSkipMaxMana
mov ebx,[ecx+40]
cmp dword ptr [iDesiredMaxMana],ebx
jl short lblTesterSkipMaxMana
mov ebx,[iDesiredMaxMana]
mov [eax+40],ebx
lblTesterSkipMaxMana:
lblTesterReturn:
pop ebx
ret
lblTick1:
cmp dword ptr [bEnableInstantFire],1
jne short lblTick1Skip
movq xmm1,[dZero]
lblTick1Skip:
movq [edi+00000098],xmm1  // Original code
jmp lblTick1Return
lblTick2:
cmp dword ptr [bEnableInstantFire],1
jne short lblTick2Skip
movq xmm0,[dZero]
lblTick2Skip:
movq [ebx+00000098],xmm0  // Original code
jmp lblTick2Return

bEnableGoldHack:
dd 1
iDesiredGold:
dd (int)5000
bEnableManaHack:
dd 1
iDesiredMana:
dd (int)500
bEnableMaxManaHack:
dd 1
iDesiredMaxMana:
dd (int)1000
dZero:
dq (double)0.0
bEnableInstantFire:
dd 1

aobGold:
aobGold_r:
jmp lblGold
nop
nop
nop
nop
lblGoldReturn:

aobMana:
aobMana_r:
jmp lblMana
nop
nop
nop
nop
lblManaReturn:

aobTick1:
aobTick1_r:
jmp lblTick1
nop
nop
nop
lblTick1Return:

aobTick2:
aobTick2_r:
jmp lblTick2
nop
nop
nop
lblTick2Return:

[DISABLE]
aobGold_r:
//Alt: mov [ecx+38],eax
//Alt: mov eax,[ecx+000000EC]
db 89 41 38 8B 81 EC 00 00 00

aobMana_r:
//Alt: mov [edx+3C],eax
//Alt: mov eax,[edx+000000EC]
db 89 42 3C 8B 82 EC 00 00 00

aobTick1_r:
//Alt: movq [edi+00000098],xmm1
db 66 0F D6 8F 98 00 00 00

aobTick2_r:
//Alt: movq [ebx+00000098],xmm0
db 66 0F D6 83 98 00 00 00

unregistersymbol(aobGold_r)
unregistersymbol(aobMana_r)
unregistersymbol(bEnableGoldHack)
unregistersymbol(iDesiredGold)
unregistersymbol(bEnableManaHack)
unregistersymbol(iDesiredMana)
unregistersymbol(bEnableMaxManaHack)
unregistersymbol(iDesiredMaxMana)
unregistersymbol(aobTick1_r)
unregistersymbol(aobTick2_r)
unregistersymbol(dZero)
unregistersymbol(bEnableInstantFire)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"bEnableGoldHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableGoldHack</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>15</ID>
              <Description>"iDesiredGold"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iDesiredGold</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"bEnableManaHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableManaHack</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>17</ID>
              <Description>"iDesiredMana"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iDesiredMana</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"bEnableMaxManaHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMaxManaHack</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>19</ID>
              <Description>"iDesiredMaxMana"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iDesiredMaxMana</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"bEnableInstantFire"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInstantFire</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Projector script; v1.10.0109 and 1.09.0020.ARMG"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,4096)
aobscan(aobGold,89 41 38 8B 91 EC 00 00 00 85 D2)
aobscan(aobMana,89 51 3C 8B 91 EC 00 00 00 85 D2)
aobscan(aobTick1,66 0F D6 89 98 00 00 00)
aobscan(aobTick2,66 0F D6 81 98 00 00 00)

label(aobGold_r)
label(lblGold)
label(lblGoldReturn)

label(aobMana_r)
label(lblMana)
label(lblManaReturn)

label(lblTester)          // Requires base address in EAX!!!
label(lblTesterSkipGold)
label(lblTesterSkipMana)
label(lblTesterSkipMaxMana)
label(lblTesterReturn)

label(aobTick1_r)
label(lblTick1)
label(lblTick1Skip)
label(lblTick1Return)

label(aobTick2_r)
label(lblTick2)
label(lblTick2Skip)
label(lblTick2Return)

label(bEnableGoldHack)
label(iDesiredGold)
label(bEnableManaHack)
label(iDesiredMana)
label(bEnableMaxManaHack)
label(iDesiredMaxMana)
label(dZero)
label(bEnableInstantFire)

registersymbol(aobGold_r)
registersymbol(aobMana_r)
registersymbol(bEnableGoldHack)
registersymbol(iDesiredGold)
registersymbol(bEnableManaHack)
registersymbol(iDesiredMana)
registersymbol(bEnableMaxManaHack)
registersymbol(iDesiredMaxMana)
registersymbol(aobTick1_r)
registersymbol(aobTick2_r)
registersymbol(dZero)
registersymbol(bEnableInstantFire)

newmem:
lblGold:
mov [ecx+38],eax        // Original code
push eax
mov eax,ecx
call lblTester
pop eax
mov edx,[ecx+000000EC]  // Original code
jmp lblGoldReturn
lblMana:
mov [ecx+3C],edx       // Original code
push eax
mov eax,ecx
call lblTester
pop eax
mov edx,[ecx+000000EC]  // Original code
jmp lblManaReturn
lblTester:
push ebx
test eax,eax
jz short lblTesterReturn
cmp dword ptr [bEnableGoldHack],1
jne short lblTesterSkipGold
mov ebx,[eax+38]
cmp dword ptr [iDesiredGold],ebx
jl short lblTesterSkipGold
mov ebx,[iDesiredGold]
mov [eax+38],ebx
lblTesterSkipGold:
cmp dword ptr [bEnableManaHack],1
jne short lblTesterSkipMana
mov ebx,[ecx+3C]
cmp dword ptr [iDesiredMana],ebx
jl short lblTesterSkipMana
mov ebx,[iDesiredMana]
mov [eax+3C],ebx
lblTesterSkipMana:
cmp dword ptr [bEnableMaxManaHack],1
jne short lblTesterSkipMaxMana
mov ebx,[ecx+40]
cmp dword ptr [iDesiredMaxMana],ebx
jl short lblTesterSkipMaxMana
mov ebx,[iDesiredMaxMana]
mov [eax+40],ebx
lblTesterSkipMaxMana:
lblTesterReturn:
pop ebx
ret
lblTick1:
cmp dword ptr [bEnableInstantFire],1
jne short lblTick1Skip
movq xmm1,[dZero]
lblTick1Skip:
movq [ecx+00000098],xmm1  // Original code
jmp lblTick1Return
lblTick2:
cmp dword ptr [bEnableInstantFire],1
jne short lblTick2Skip
movq xmm0,[dZero]
lblTick2Skip:
movq [ecx+00000098],xmm0  // Original code
jmp lblTick2Return

bEnableGoldHack:
dd 1
iDesiredGold:
dd (int)5000
bEnableManaHack:
dd 1
iDesiredMana:
dd (int)500
bEnableMaxManaHack:
dd 1
iDesiredMaxMana:
dd (int)1000
dZero:
dq (double)0.0
bEnableInstantFire:
dd 1

aobGold:
aobGold_r:
jmp lblGold
nop
nop
nop
nop
lblGoldReturn:

aobMana:
aobMana_r:
jmp lblMana
nop
nop
nop
nop
lblManaReturn:

aobTick1:
aobTick1_r:
jmp lblTick1
nop
nop
nop
lblTick1Return:

aobTick2:
aobTick2_r:
jmp lblTick2
nop
nop
nop
lblTick2Return:

[DISABLE]
aobGold_r:
//Alt: mov [ecx+38],eax
//Alt: mov edx,[ecx+000000EC]
db 89 41 38 8B 91 EC 00 00 00

aobMana_r:
//Alt: mov [ecx+3C],edx
//Alt: mov edx,[ecx+000000EC]
db 89 51 3C 8B 91 EC 00 00 00

aobTick1_r:
//Alt: movq [ecx+00000098],xmm1
db 66 0F D6 89 98 00 00 00

aobTick2_r:
//Alt: movq [ecx+00000098],xmm0
db 66 0F D6 81 98 00 00 00

unregistersymbol(aobGold_r)
unregistersymbol(aobMana_r)
unregistersymbol(bEnableGoldHack)
unregistersymbol(iDesiredGold)
unregistersymbol(bEnableManaHack)
unregistersymbol(iDesiredMana)
unregistersymbol(bEnableMaxManaHack)
unregistersymbol(iDesiredMaxMana)
unregistersymbol(aobTick1_r)
unregistersymbol(aobTick2_r)
unregistersymbol(dZero)
unregistersymbol(bEnableInstantFire)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"bEnableGoldHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableGoldHack</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"iDesiredGold"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iDesiredGold</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"bEnableManaHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableManaHack</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>6</ID>
              <Description>"iDesiredMana"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iDesiredMana</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"bEnableMaxManaHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMaxManaHack</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>8</ID>
              <Description>"iDesiredMaxMana"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iDesiredMaxMana</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"bEnableInstantFire"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInstantFire</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
