<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"UFO Aftermath AOB script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobTrainingTimeUpdater,8B 46 08 85 C0 7E ?? 8B 4D 08)
aobscan(aobResearchChecker,8B 14 B9 39 5A 48 7C)
aobscan(aobDevelopmentChecker,8B 14 B9 39 5A 48 0F 8C)
aobscan(aobXPGain,8B 91 E8 00 00 00 03 D0)
aobscan(aobHealthDamager,D9 85 E0 00 00 00 D8 64 24 4C D9 95)
aobscan(aobRecuperationDamager,D9 9D 18 01 00 00 D9 44 24 4C)
aobscan(aobRecuperationUpdater,89 4E 1C D8 2E D9 16)
aobscan(aobAmmoPeeker,8B 4E 18 89 4C 24 60 DB 44 24 60)
aobscan(aobStoredItemGrabber,8B 48 08 81 F9 E7 03 00 00 0F 84 ?? ?? ?? ?? 49 89 48 08)

alloc(newmem,4096)

label(aobTrainingTimeUpdater_r)
registersymbol(aobTrainingTimeUpdater_r)

label(lblTrainingTimeUpdater)
label(lblTrainingTimeUpdaterSkip)
label(lblTrainingTimeUpdaterRet)

label(bEnableQuickTraining)
registersymbol(bEnableQuickTraining)

label(aobResearchChecker_r)
registersymbol(aobResearchChecker_r)

label(lblResearchChecker)
label(lblResearchCheckerSkip)
label(lblResearchCheckerRet)

label(bEnableQuickResearch)
registersymbol(bEnableQuickResearch)

label(aobDevelopmentChecker_r)
registersymbol(aobDevelopmentChecker_r)

label(lblDevelopmentChecker)
label(lblDevelopmentCheckerSkip)
label(lblDevelopmentCheckerRet)

label(bEnableQuickDevelopment)
registersymbol(bEnableQuickDevelopment)

label(aobXPGain_r)
registersymbol(aobXPGain_r)

label(lblXPGain)
label(lblXPGainSkip)
label(lblXPGainRet)

label(bEnableXPGainMultiplier)
label(fXPGainMultiplier)
registersymbol(bEnableXPGainMultiplier)
registersymbol(fXPGainMultiplier)

label(aobHealthDamager_r)
registersymbol(aobHealthDamager_r)

label(lblHealthDamager)
label(lblHealthDamagerSkipFriendly)
label(lblHealthDamagerSkipEnemy)
label(lblHealthDamagerSkipEnemyOneHitKill)
label(lblHealthDamagerRet)

label(aobRecuperationDamager_r)
registersymbol(aobRecuperationDamager_r)

label(lblRecuperationDamager)
label(lblRecuperationDamagerSkip)
label(lblRecuperationDamagerRet)

label(bEnableGodMode)
label(bEnableOneHitKnockout)
label(bEnableOneHitKill)
registersymbol(bEnableGodMode)
registersymbol(bEnableOneHitKnockout)
registersymbol(bEnableOneHitKill)

label(aobRecuperationUpdater_r)
registersymbol(aobRecuperationUpdater_r)

label(lblRecuperationUpdater)
label(lblRecuperationUpdaterSkip)
label(lblRecuperationUpdaterRet)

label(bEnableQuickRecuperation)
registersymbol(bEnableQuickRecuperation)

label(aobAmmoPeeker_r)
registersymbol(aobAmmoPeeker_r)

label(lblAmmoPeeker)
label(lblAmmoPeekerSkip)
label(lblAmmoPeekerRet)

label(bEnableInfiniteAmmoInClip)
registersymbol(bEnableInfiniteAmmoInClip)

label(aobStoredItemGrabber_r)
registersymbol(aobStoredItemGrabber_r)

label(lblStoredItemGrabber)
label(lblStoredItemGrabberSkip)
label(lblStoredItemGrabberRet)

label(bEnableInfiniteItemMaker)
registersymbol(bEnableInfiniteItemMaker)

newmem:
bEnableQuickTraining:
dd 1
bEnableQuickResearch:
dd 1
bEnableQuickDevelopment:
dd 1
bEnableXPGainMultiplier:
dd 1
fXPGainMultiplier:
dd (float)2.5
bEnableGodMode:
dd 1
bEnableOneHitKnockout:
dd 0
bEnableOneHitKill:
dd 0
bEnableQuickRecuperation:
dd 1
bEnableInfiniteAmmoInClip:
dd 1
bEnableInfiniteItemMaker:
dd 1

lblTrainingTimeUpdater:
cmp dword ptr [bEnableQuickTraining],1
jne short lblTrainingTimeUpdaterSkip
cmp dword ptr [esi+08],1
jle short lblTrainingTimeUpdaterSkip
mov dword ptr [esi+08],1
lblTrainingTimeUpdaterSkip:
mov eax,[esi+08] // Original code
test eax,eax     // Original code
jmp lblTrainingTimeUpdaterRet

lblResearchChecker:
mov edx,[ecx+edi*4] // Original code
cmp dword ptr [bEnableQuickResearch],1
jne short lblResearchCheckerSkip
mov dword ptr [edx+48],ebx
lblResearchCheckerSkip:
cmp [edx+48],ebx    // Original code
jmp lblResearchCheckerRet

lblDevelopmentChecker:
mov edx,[ecx+edi*4] // Original code
cmp dword ptr [bEnableQuickDevelopment],1
jne short lblDevelopmentCheckerSkip
mov dword ptr [edx+48],ebx
lblDevelopmentCheckerSkip:
cmp [edx+48],ebx    // Original code
jmp lblDevelopmentCheckerRet

lblXPGain:
cmp dword ptr [bEnableXPGainMultiplier],1
jne short lblXPGainSkip
cmp dword ptr [ecx+0C],0
jne short lblXPGainSkip
fild dword ptr [esp+04]
fmul dword ptr [fXPGainMultiplier]
fistp dword ptr [esp+04]
mov eax,[esp+04]
lblXPGainSkip:
mov edx,[ecx+000000E8] // Original code
jmp lblXPGainRet

lblHealthDamager:
mov eax,[ebp+8]
cmp dword ptr [eax+18],0
je short lblHealthDamagerSkipFriendly
cmp dword ptr [bEnableGodMode],1
jne short lblHealthDamagerSkipFriendly
fstp st(0)
fld dword ptr [ebp+E4]
jmp lblHealthDamagerRet
lblHealthDamagerSkipFriendly:
cmp dword ptr [bEnableOneHitKill],1
jne short lblHealthDamagerSkipEnemyOneHitKill
fstp st(0)
fldz
jmp lblHealthDamagerRet
lblHealthDamagerSkipEnemyOneHitKill:
cmp dword ptr [bEnableOneHitKnockout],1
jne short lblHealthDamagerSkipEnemy
fstp st(0)
fld1
jmp lblHealthDamagerRet
lblHealthDamagerSkipEnemy:
fld dword ptr [ebp+000000E0] // Original code
fsub dword ptr [esp+4C]      // Original code
jmp lblHealthDamagerRet

lblRecuperationDamager:
cmp dword ptr [bEnableGodMode],1
jne short lblRecuperationDamagerSkip
fstp st(0)
fldz
lblRecuperationDamagerSkip:
fstp dword ptr [ebp+00000118] // Original code
jmp lblRecuperationDamagerRet

lblRecuperationUpdater:
mov [esi+1C],ecx      // Original code
cmp dword ptr [bEnableQuickRecuperation],1
jne short lblRecuperationUpdaterSkip
fstp st(0)
fldz
fst dword ptr [esi]
jmp lblRecuperationUpdaterRet
lblRecuperationUpdaterSkip:
fsubr dword ptr [esi] // Original code
fst dword ptr [esi]   // Original code
jmp lblRecuperationUpdaterRet

lblAmmoPeeker:
cmp dword ptr [bEnableInfiniteAmmoInClip],1
mov ecx,[esi+0c]
test ecx,ecx
jz short lblAmmoPeekerSkip
mov ecx,[ecx+58]
mov dword ptr [esi+18],ecx
jne short lblAmmoPeekerSkip
lblAmmoPeekerSkip:
mov ecx,[esi+18] // Original code
mov [esp+60],ecx // Original code
jmp lblAmmoPeekerRet

lblStoredItemGrabber:
cmp dword ptr [bEnableInfiniteItemMaker],1
jne short lblStoredItemGrabberSkip
mov dword ptr [eax+08],3E7
lblStoredItemGrabberSkip:
mov ecx,[eax+08] // Original code
cmp ecx,000003E7 // Original code
jmp lblStoredItemGrabberRet

//"UFO.exe"+19DA31:
aobStoredItemGrabber:
aobStoredItemGrabber_r:
jmp lblStoredItemGrabber
nop
nop
nop
nop
lblStoredItemGrabberRet:

//"UFO.exe"+F281C:
aobAmmoPeeker:
aobAmmoPeeker_r:
jmp lblAmmoPeeker
nop
nop
lblAmmoPeekerRet:

//"UFO.exe"+207BE3:
aobRecuperationUpdater:
aobRecuperationUpdater_r:
jmp lblRecuperationUpdater
nop
nop
lblRecuperationUpdaterRet:

//"UFO.exe"+2B7D09:
aobHealthDamager:
aobHealthDamager_r:
jmp lblHealthDamager
nop
nop
nop
nop
nop
lblHealthDamagerRet:

//"UFO.exe"+2B7BE4:
aobRecuperationDamager:
aobRecuperationDamager_r:
jmp lblRecuperationDamager
nop
lblRecuperationDamagerRet:

//"UFO.exe"+25CE74:
aobXPGain:
aobXPGain_r:
jmp lblXPGain
nop
lblXPGainRet:

//"UFO.exe"+1F20CC:
aobDevelopmentChecker:
aobDevelopmentChecker_r:
jmp lblDevelopmentChecker
nop
lblDevelopmentCheckerRet:

//"UFO.exe"+1F1FC7:
aobResearchChecker:
aobResearchChecker_r:
jmp lblResearchChecker
nop
lblResearchCheckerRet:

//"UFO.exe"+207C47:
aobTrainingTimeUpdater:
aobTrainingTimeUpdater_r:
jmp lblTrainingTimeUpdater
lblTrainingTimeUpdaterRet:

[DISABLE]
//"UFO.exe"+207C47:
aobTrainingTimeUpdater_r:
//Alt: mov eax,[esi+08]
//Alt: test eax,eax
db 8B 46 08 85 C0

unregistersymbol(aobTrainingTimeUpdater_r)

unregistersymbol(bEnableQuickTraining)

//"UFO.exe"+1F1FC7:
aobResearchChecker_r:
//Alt: mov edx,[ecx+edi*4]
//Alt: cmp [edx+48],ebx
db 8B 14 B9 39 5A 48

unregistersymbol(aobResearchChecker_r)

unregistersymbol(bEnableQuickResearch)

//"UFO.exe"+1F20CC:
aobDevelopmentChecker_r:
//Alt: mov edx,[ecx+edi*4]
//Alt: cmp [edx+48],ebx
db 8B 14 B9 39 5A 48

unregistersymbol(aobDevelopmentChecker_r)

unregistersymbol(bEnableQuickDevelopment)

//"UFO.exe"+25CE74:
aobXPGain_r:
//Alt: mov edx,[ecx+000000E8]
db 8B 91 E8 00 00 00

unregistersymbol(aobXPGain_r)

unregistersymbol(bEnableXPGainMultiplier)
unregistersymbol(fXPGainMultiplier)

//"UFO.exe"+2B7D09:
aobHealthDamager_r:
//Alt: fld dword ptr [ebp+000000E0]
//Alt: fsub dword ptr [esp+4C]
db D9 85 E0 00 00 00 D8 64 24 4C

//"UFO.exe"+2B7BE4:
aobRecuperationDamager_r:
//Alt: fstp dword ptr [ebp+00000118]
db D9 9D 18 01 00 00

unregistersymbol(aobHealthDamager_r)
unregistersymbol(aobRecuperationDamager_r)

unregistersymbol(bEnableGodMode)
unregistersymbol(bEnableOneHitKnockout)
unregistersymbol(bEnableOneHitKill)

//"UFO.exe"+207BE3:
aobRecuperationUpdater_r:
//Alt: mov [esi+1C],ecx
//Alt: fsubr dword ptr [esi]
//Alt: fst dword ptr [esi]
db 89 4E 1C D8 2E D9 16

unregistersymbol(aobRecuperationUpdater_r)

//"UFO.exe"+F281C:
aobAmmoPeeker_r:
//Alt: mov ecx,[esi+18]
//Alt: mov [esp+60],ecx
db 8B 4E 18 89 4C 24 60

unregistersymbol(aobAmmoPeeker_r)

unregistersymbol(bEnableInfiniteAmmoInClip)

//"UFO.exe"+19DA31:
aobStoredItemGrabber_r:
//Alt: mov ecx,[eax+08]
//Alt: cmp ecx,000003E7
db 8B 48 08 81 F9 E7 03 00 00

unregistersymbol(aobStoredItemGrabber_r)

unregistersymbol(bEnableInfiniteItemMaker)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>43</ID>
          <Description>"bEnableInfiniteItemMaker"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteItemMaker</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"bEnableQuickRecuperation"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableQuickRecuperation</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"bEnableQuickTraining"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableQuickTraining</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"bEnableQuickResearch"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableQuickResearch</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"bEnableQuickDevelopment"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableQuickDevelopment</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"bEnableXPGainMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableXPGainMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>21</ID>
              <Description>"fXPGainMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fXPGainMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"bEnableOneHitKill"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableOneHitKill</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"bEnableOneHitKnockout"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableOneHitKnockout</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"bEnableGodMode"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableGodMode</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"bEnableInfiniteAmmoInClip"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteAmmoInClip</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
