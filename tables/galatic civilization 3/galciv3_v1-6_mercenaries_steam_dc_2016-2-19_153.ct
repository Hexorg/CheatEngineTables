<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>109</ID>
      <Description>"[X] &lt;== Galactic Civilization III v1.6 Mercenaries Steam Script"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Galactic Civilization III
 Game Version  : 1.5.0.8
 Game Sponsor  : Fennix102
 Process Name  : GalCiv3.exe
 Script Version: 3.5
 CE Version    : 6.4
 Release date  : 10-Dec-2015
 Author        : Recifense
 History:
 14-May-15: First Release
 16-May-15: Added 1 Turn Production and improved Research (1 turn) (s2.0)
 17-May-15: Added Racial Traits and Ability points (on Customization) (s3.0)
 23-May-15: For version 1.01 + Fixed Startbase Upgrade and improved God Mode (s3.2)
 24-May-15: Stop protection of non-combatant ships (due to crashes) (s3.3)
 24-May-15: Fixed Credits cheat (s3.4)
 28-May-15: Fixed Player Identification (for v1.01) (s3.5)
 29-May-15: Release for version 1.02 Beta
 04-Jun-15: Release for version 1.03 Beta
 18-Jun-15: Release for version 1.03-660610 (steam)
 10-Jul-15: Release for version 1.1 (steam)
 10-Jul-15: Release for version 1.1-690887 (steam)
 01-Aug-15: Release for version 1.1.12.0
 12-Aug-15: Release for version 1.2.0.11
 05-Sep-15: Release for version 1.2.1.6
 10-Sep-15: Release for version 1.3.0.14
 18-Sep-15: Release for version 1.3.1.4
 29-Sep-15: Release for version 1.3.1.5
 01-Oct-15: Release for version 1.3.2.9
 31-Oct-15: Release for version 1.4.0.18
 05-Nov-15: Release for version 1.4.1.2
 09-Dec-15: Release for version 1.5.0.7
 10-Dec-15: Release for version 1.5.0.8
 Features:
 - Minimum Credits
 - Minimum units in Colony/Transport Ships
 - Move Multiple times (included Shipyard)
 - Research in 1 Turn
 - Construction in 1 Turn
 - God Mode
 - Production in 1 Turn
 - Customization points
 - Starbase Upgrade
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"GalCiv3.exe")
define(MOHP,GalCiv3.exe+0015cc8c) //#===##=#=#===#=#=
define(MOSU,GalCiv3.exe+00157ae5) //==#====#=====#===
define(MOSP,GalCiv3.exe+000fecb3) //=================
define(MORP,GalCiv3.exe+0000eee3) //=================
define(MOCP,GalCiv3.exe+000ddd6d) //=================
define(MOUB,GalCiv3.exe+0046f7d2) //=================
define(MOUP,GalCiv3.exe+0013d237) //##=======#=======
define(MORC,GalCiv3.exe+00315f27) //==#====#==#====#=
define(MOSS,GalCiv3.exe+0013e880) //=#=======#===#=#=
define(MOSB,GalCiv3.exe+002f8695) //=##==========#=#=
define(MOBB,GalCiv3.exe+001beadf) //=================

//=========================================
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.4)
define(ctMCRE,#64000000)  // Minimum Credits
define(ctMMSS,#10000)     // Minimum Settlers/Soldiers

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_MonSelUnit)
label(_MonSU00)
label(_MonSU01)
label(_BackMSU)
label(_ExitMSU)
label(_MonSelPlanet)
label(_BackMSP)
label(_ExitMSP)
label(_MonResearchProg)
label(_BackMRP)
label(_ExitMRP)
label(_MonConstProg)
label(_BackMCP)
label(_ExitMCP)
label(_MonUnitBattle)
label(_BackMUB)
label(_ExitMUB)
label(_MonUnitProd)
label(_BackMUP)
label(_ExitMUP)
label(_MonRaceCustomization)
label(_BackMRC)
label(_ExitMRC)
label(_MonSelShipyard)
label(_BackMSS)
label(_ExitMSS)
label(_MonSelStarbase)
label(_BackMSB)
label(_ExitMSB)
label(_MonBeforeBattle)
label(_BackMBB)
label(_ExitMBB)

label(iEnableMPR)
label(iEnableMSS)
label(iEnableMMP)
label(iEnableMRP)
label(iEnableMCP)
label(iEnableMUP)
label(iEnableMRC)
label(iEnableMSB)

label(iID)
label(iID2)
label(iIDBat)

label(pPlayer)
label(pUnit)
label(pSY)
label(pSB)
label(pPlanet)
label(pUnitB)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMPR)
registersymbol(iEnableMSS)
registersymbol(iEnableMMP)
registersymbol(iEnableMRP)
registersymbol(iEnableMCP)
registersymbol(iEnableMUP)
registersymbol(iEnableMRC)
registersymbol(iEnableMSB)
registersymbol(iID)
registersymbol(iID2)
registersymbol(iIDBat)
registersymbol(pPlayer)
registersymbol(pUnit)
registersymbol(pSY)
registersymbol(pSB)
registersymbol(pUnitB)
registersymbol(pPlanet)

//=========================================
MyCode:
//========================================= 1.5.0.7
// On the main screen
_MonHumanPlayer:
 push rax
 push rbx
 push rcx

 mov rcx,rcx

 mov rbx,[rcx+08]

 mov eax,[rbx+2c]
 test eax,eax
 jnz _ExitMHP

 mov [pPlayer],rbx

 mov eax,[rbx+08]
 mov [iID],eax

 mov eax,[rbx+3c]
 mov [iID2],eax

 cmp dword ptr [iEnableMPR],0
 je _ExitMHP                       // Jump if feature is disabled

 mov eax,ctMCRE
 cmp eax,[rcx+000229ec]
 js _ExitMHP

 mov [rcx+000229ec],eax

_ExitMHP:
 pop rcx
 pop rbx
 pop rax

 mov eax,[rax+rcx+000229EC]        // Original code (get Credits)
 jmp _BackMHP                      // Back to main code

//========================================= 1.4.0.18
// Unit Under Cursor/Selected
_MonSelUnit:
 push rbx

 lea rbx,[rcx-20]
 mov [pUnit],rbx

 mov ebx,[rbx+000000e0]
 cmp ebx,[iID]
 jne _ExitMSU

_MonSU00:
 cmp dword ptr [iEnableMSS],0
 je _MonSU01                       // Jump if feature is disabled

 mov ebx,[rcx+0000044c]
 test ebx,ebx
 jz _MonSU01

 mov ebx,ctMMSS
 cmp ebx,[rcx+0000044c]
 js _MonSU01

 mov [rcx+0000044c],ebx

_MonSU01:
 cmp dword ptr [iEnableMMP],0
 je _ExitMSU                       // Jump if feature is disabled

 mov ebx,[rcx+00000390]
 mov [rcx+00000448],ebx

_ExitMSU:
 pop rbx

 mov eax,[rax+rcx+0000043c]        // Original code (get cur HP)
 jmp _BackMSU                      // Back to main code

//========================================= 1.1
// On Selected Planet Detail screen
_MonSelPlanet:
 mov rcx,[r12+08]                  // Original code (get pPlanetBase)

 mov [pPlanet],rcx

_ExitMSP:
 mov rax,[rcx]                     // Original code
 jmp _BackMSP                      // Back to main code

//========================================= 1.1
// During Turn
_MonResearchProg:
 cmp dword ptr [iEnableMRP],0
 je _ExitMRP                       // Jump if feature is disabled

 lea r8,[r15-70]
 cmp r8,[pPlayer]
 jne _ExitMRP

 mov edx,[rax]
 mov r8d,[rbx+08]
 cmp r8d,edx
 jns _ExitMRP

 sub edx,r8d
 inc edx
 mov [rsi],edx

_ExitMRP:
 mov r8d,[rdi+08]                  // Original code (get res prog)
 mov edx,[rsi]                     // Original code
 jmp _BackMRP                      // Back to main code

//========================================= 1.1
// At main screen (planet)
_MonConstProg:
 push rcx
 push rdx

 cmp eax,[rbx+10]
 jle _ExitMCP

 cmp dword ptr [iEnableMCP],0
 je _ExitMCP                       // Jump if feature is disabled

 test rsi,rsi
 jz _ExitMCP

 mov rcx,[rsi]
 test rcx,rcx
 jz _ExitMCP

 mov edx,[rcx+30]
 cmp edx,[iID]
 jne _ExitMCP

 lea rdx,[rax-64]
 mov [rbx+10],edx

_ExitMCP:
 pop rdx
 pop rcx

 sub eax,[rbx+10]                  // Original code (cur prog)
 cmp [rdx+28],edi                  // Original code
 jmp _BackMCP                      // Back to main code

//========================================= 1.1
// On Unit Icon Under Cursor
_MonUnitBattle:
 mov [pUnitB],r15

_ExitMUB:
 mov eax,[r15+34]                  // Original code (get cHP)
 lea rcx,[rsp+30]                  // Original code
 jmp _BackMUB                      // Back to main code

//========================================= v1.3.0.14
// During turn
_MonUnitProd:
 cmp dword ptr [iEnableMUP],0
 je _ExitMUP                       // Jump if feature is disabled

 mov rax,[r12]
 test rax,rax
 jz _ExitMUP

 mov eax,[rax+00000248]
 cmp eax,[iID]
 jne _ExitMUP

 mov [r14+10],ecx

_ExitMUP:
 mov eax,[r14+10]                  // Original code (Get Prog)
 add eax,ebx                       // Original code (Inc Prog)
 jmp _BackMUP                      // Back to main code

//========================================= 1.5.0.7
// During Race Customization (On changing points)
_MonRaceCustomization:
 push rbx

 cmp dword ptr [iEnableMRC],0
 je _ExitMRC                       // Jump if feature is disabled

 mov dword ptr [rax+00000400],#48
 mov dword ptr [rax+00000404],#17

_ExitMRC:
 pop rbx

 mov eax,[rax+00000400]            // Original code (Get max traits' points)
 jmp _BackMRC                      // Back to main code

//========================================= 1.5.0.7
// Shipyard under cursor or Last Selected
_MonSelShipyard:
 mov rcx,[r13+00]                  // Original code (get pSY)
 mov [pSY],rcx

 cmp dword ptr [iEnableMMP],0
 je _ExitMSS                       // Jump if feature is disabled

 mov edx,[rcx+00000248]
 cmp edx,[iID]
 jne _ExitMSS

 mov rdx,#1000
 cmp edx,[rcx+00008f84]
 js _ExitMSS

 mov [rcx+00008f84],edx

_ExitMSS:
 mov edx,00000001                  // Original code
 jmp _BackMSS                      // Back to main code

//========================================= 1.5.0.7
// Starship at the detailed screen
_MonSelStarbase:
 mov rdx,[r15+08]
 mov [pSB],rdx

 cmp dword ptr [iEnableMSB],0
 je _ExitMSB                       // Jump if feature is disabled

 mov edx,[rdx+00000248]
 cmp edx,[iID]
 jne _ExitMSB

 mov edx,[r15+00002b50]
 mov [r15+00002b4c],edx

_ExitMSB:
 mov r10,[r15]                     // Original code
 lea rdx,[rsp+30]                  // Original code
 jmp _BackMSB                      // Back to main code

//========================================= 1.1
// Units before battle (At Before-Battle Window)
_MonBeforeBattle:
 mov edx,[rcx+000000e0]
 cmp edx,[iID]
 jne _ExitMBB

 mov [pUnitB],rbx
 mov [iIDBat],esi

_ExitMBB:
 mov edx,[rcx+08]                  // Original code (Get Index)
 mov eax,ebp                       // Original code
 jmp _BackMBB                      // Back to main code

//=========================================
 db '===========================================&gt;'
 db 'CE6.4 Script by Recifense 121015'
//=========================================
// Variables
iEnableMPR:
 dd 0
iEnableMSS:
 dd 0
iEnableMMP:
 dd 0
iEnableMRP:
 dd 0
iEnableMCP:
 dd 0
iEnableMUP:
 dd 0
iEnableMRC:
 dd 0
iEnableMSB:
 dd 0
iID:
 dd 0
iID2:
 dd 0
iIDBat:
 dd 0
pPlayer:
 dq 0
pUnit:
 dq 0
pSY:
 dq 0
pSB:
 dq 0
pPlanet:
 dq 0
pUnitB:
 dq 0

//=========================================
// Hacking Points
MOHP:
 jmp _MonHumanPlayer
 nop
 nop
_BackMHP:

MOSU:
 jmp _MonSelUnit
 nop
 nop
_BackMSU:

MOSP:
 jmp _MonSelPlanet
 nop
 nop
 nop
_BackMSP:

MORP:
 jmp _MonResearchProg
 nop
_BackMRP:

MOCP:
 jmp _MonConstProg
 nop
_BackMCP:

MOUB:
 jmp _MonUnitBattle
 nop
 nop
 nop
 nop
_BackMUB:

MOUP:
 jmp _MonUnitProd
 nop
_BackMUP:

MORC:
 jmp _MonRaceCustomization
 nop
_BackMRC:

MOSS:
 jmp _MonSelShipyard
 nop
 nop
 nop
 nop
_BackMSS:

MOSB:
 jmp _MonSelStarbase
 nop
 nop
 nop
_BackMSB:

MOBB:
 jmp _MonBeforeBattle
_BackMBB:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MOHP:
// mov eax,[rax+rcx+00022A18]
 db 8b 84 08 18 2a 02 00

MOSU:
// mov eax,[rax+rcx+0000043c]
 db 8b 84 08 3c 04 00 00

MOSP:
// mov rcx,[r12+08]
// mov rax,[rcx]
 db 49 8b 4c 24 08 48 8b 01

MORP:
// mov r8d,[rdi+08]
// mov edx,[rsi]
 db 44 8b 47 08 8b 16

MOCP:
// sub eax,[rbx+10]
// cmp [rdx+28],edi
 db 2b 43 10 39 7a 28

GDMD:
// sub [r12+34],edi
 db 41 29 7c 24 34

MOUB:
// mov eax,[r15+34]
// lea rcx,[rsp+30]
 db 41 8b 47 34 48 8d 4c 24 30

MOUP:
// mov eax,[r14+10]
// add eax,ebx
 db 41 8b 46 10 03 c3

MORC:
// mov eax,[rax+0000040C]
 db 8b 80 0c 04 00 00

MOSS:
// mov rcx,[r13+00]
// mov edx,00000001
 db 49 8b 4d 00 ba 01 00 00 00

MOSB:
// mov r10,[r15]
// lea rdx,[rsp+30]
 db 4d 8b 17 48 8d 54 24 30

MOBB:
// mov edx,[rcx+08]
// mov eax,ebp
 db 8b 51 08 8b c5

//=========================================
// Unloading Scripts
{$asm}

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMPR)
unregistersymbol(iEnableMSS)
unregistersymbol(iEnableMMP)
unregistersymbol(iEnableMRP)
unregistersymbol(iEnableMCP)
unregistersymbol(iEnableMUP)
unregistersymbol(iEnableMRC)
unregistersymbol(iEnableMSB)
unregistersymbol(iID)
unregistersymbol(iID2)
unregistersymbol(iIDBat)
unregistersymbol(pPlayer)
unregistersymbol(pUnit)
unregistersymbol(pSY)
unregistersymbol(pSB)
unregistersymbol(pPlanet)
unregistersymbol(pUnitB)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>113</ID>
          <Description>"[X] &lt;== Quick Research ---------------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMRP",1)
getAddressList().getMemoryRecordByID(113).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMRP",0)
getAddressList().getMemoryRecordByID(113).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"[X] &lt;== Construction/Improvement in 1 Turn --------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMCP",1)
getAddressList().getMemoryRecordByID(114).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMCP",0)
getAddressList().getMemoryRecordByID(114).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>229</ID>
          <Description>"[X] &lt;== Ship Production in 1 Turn -------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMUP",1)
getAddressList().getMemoryRecordByID(229).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMUP",0)
getAddressList().getMemoryRecordByID(229).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>234</ID>
          <Description>"[X] &lt;== Race Customization Points -----------------------------&gt; (HK: CTRL+Insert / CTRL+Delete)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMRC",1)
getAddressList().getMemoryRecordByID(234).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMRC",0)
getAddressList().getMemoryRecordByID(234).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>244</ID>
          <Description>"[X] &lt;================= Player Info ================"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>000080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>250</ID>
              <Description>"Approval? (x10) ===&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>22A50</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>245</ID>
              <Description>"Benevolent Ideology Points (x10000) ===&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>22B30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>246</ID>
              <Description>"Pragmatic Ideology Points (x10000) ===&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>22B34</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>247</ID>
              <Description>"Malevolent Ideology Points (x10000) ===&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>22B38</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>248</ID>
              <Description>"Current Money (x10000) ===&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>22B3C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"[X] &lt;== Table/Script Information"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
getMainForm().CommentButton.doClick()
{$ASM}

[disable]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Recifense</Name>
      <Address>20151210</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMPR</Name>
      <Address>7FF6A2A00365</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMSS</Name>
      <Address>7FF6A2A00369</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMMP</Name>
      <Address>7FF6A2A0036D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMRP</Name>
      <Address>7FF6A2A00371</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMCP</Name>
      <Address>7FF6A2A00375</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMUP</Name>
      <Address>7FF6A2A00379</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMRC</Name>
      <Address>7FF6A2A0037D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMSB</Name>
      <Address>7FF6A2A00381</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iID</Name>
      <Address>7FF6A2A00385</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iID2</Name>
      <Address>7FF6A2A00389</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iIDBat</Name>
      <Address>7FF6A2A0038D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>7FF6A2A00391</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUnit</Name>
      <Address>7FF6A2A00399</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSY</Name>
      <Address>7FF6A2A003A1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSB</Name>
      <Address>7FF6A2A003A9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUnitB</Name>
      <Address>7FF6A2A003B9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlanet</Name>
      <Address>7FF6A2A003B1</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Galactic Civilization III
 Game Version  : 1.5.0.8
 Game Sponsor  : Fennix102
 Process Name  : GalCiv3.exe
 Script Version: 3.5
 CE Version    : 6.4
 Release date  : 10-Dec-2015
 Author        : Recifense
 History:
 14-May-15: First Release
 16-May-15: Added 1 Turn Production and improved Research (1 turn) (s2.0)
 17-May-15: Added Racial Traits and Ability points (on Customization) (s3.0)
 23-May-15: For version 1.01 + Fixed Startbase Upgrade and improved God Mode (s3.2)
 24-May-15: Stop protection of non-combatant ships (due to crashes) (s3.3)
 24-May-15: Fixed Credits cheat (s3.4)
 28-May-15: Fixed Player Identification (for v1.01) (s3.5)
 29-May-15: Release for version 1.02 Beta
 04-Jun-15: Release for version 1.03 Beta
 18-Jun-15: Release for version 1.03-660610 (steam)
 10-Jul-15: Release for version 1.1 (steam)
 10-Jul-15: Release for version 1.1-690887 (steam)
 01-Aug-15: Release for version 1.1.12.0
 12-Aug-15: Release for version 1.2.0.11
 05-Sep-15: Release for version 1.2.1.6
 10-Sep-15: Release for version 1.3.0.14
 18-Sep-15: Release for version 1.3.1.4
 29-Sep-15: Release for version 1.3.1.5
 01-Oct-15: Release for version 1.3.2.9
 31-Oct-15: Release for version 1.4.0.18
 05-Nov-15: Release for version 1.4.1.2
 09-Dec-15: Release for version 1.5.0.7
 10-Dec-15: Release for version 1.5.0.8
 Features:
 - Minimum Money             [1]
 - Move Multiple times       [2] (*)
 - Research in 1 Turn        [3]
 - Construction in 1 Turn    [4] (**)
 - God Mode                  [5]
 - Minimum Settlers/Soldiers [6] (*)
 - Ship Production in 1 Turn [7]
 - Customization points      [8]
 - Starbase Upgrade          [9]
 - Some Pointers
===========================================
[1] For Human player only (not AI);
[2] For Human player's ships/fleet only (*);
[3] For Human player only (not AI);
[4] For human player colonies only (**)
[5] For Human player's ships/fleet only;
[6] For Human player's colony and transport ships only (*);
[7] For Human player only (not AI);
[8] On the Civ Custumization, available points will be set to minimum needed;
[9] For Human player's starbase only;
-----------
(* ) Ship or Fleet should be selected;
(**) Click on each colony listed in a column at the right side;
===========================================
[USAGE]
1) Run CE64;
2) Run Game;
3) Load the game process "GalCiv3.exe" in CE;
4) Load this table and activate the main script;
5) Now Activate the script of each cheat you want to use;
6) Game On;
===========================================
[HOTKEYS]
CTRL+Home      = Enable  ALL cheats;
CTRL+End       = Disable ALL cheats;
---------------
CTRL+Insert    = Enable  RCP cheat;
CTRL+Delete    = Disable RCP cheat;
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat. So you can always come back in case you don't like the result.
===========================================
[INFO]
Tested on Win 10 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
