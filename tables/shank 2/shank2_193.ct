<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"points"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048) //2kb should be enough
alloc(val,12)
label(returnhere)
label(originalcode)
label(exit)

newmem:
imul edi,edi,05
originalcode:
mov ecx,[esi+08]
add [esi+50],edi
mov eax,[esi+50]
mov [val],eax
exit:
jmp returnhere

"Shank2.exe"+D645E:
jmp newmem
nop
returnhere:


alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)

newmem1:
mov ecx,[val]
originalcode1:
mov eax,[ebp-30]

exit1:
jmp returnhere1

"Shank2.exe"+36759E:
jmp newmem1
nop
returnhere1:


 



[DISABLE]
dealloc(newmem)
"Shank2.exe"+D645E:
mov ecx,[esi+08]
add [esi+50],edi
dealloc(newmem1)
"Shank2.exe"+36759E:
add ecx,[edx+14]
mov eax,[ebp-30]
//Alt: db 03 4A 14 8B 45 D0

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"item"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
004D6032:
db 90 90 90
alloc(newmem,2048) //2kb should be enough
alloc(val,12)
label(returnhere)
label(originalcode)
label(exit)
val:
dd (float)0.5
newmem:
fmul dword ptr [val]
originalcode:
fsub dword ptr [ebp+08]
fstp dword ptr [ecx+10]

exit:
jmp returnhere

"Shank2.exe"+D5970:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Shank2.exe"+D5970:
fsub dword ptr [ebp+08]
fstp dword ptr [ecx+10]

004D6032:
sub [ebx+50],eax
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"granade"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:

originalcode:
mov [esi+4C],03
mov ecx,[esp+18]

exit:
jmp returnhere

"Shank2.exe"+13FECA:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
"Shank2.exe"+13FECA:
dec eax
mov [esi+4C],eax
mov ecx,[esp+18]
//Alt: db 48 89 46 4C 8B 4C 24 18

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"bullets"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
004D6A5B:
db 90
[DISABLE]
004D6A5B:
dec ecx

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"multisurvigod"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem1,2048)
alloc(val,128)
alloc(count,12)
label(returnhere1)
label(originalcode1)
label(exit1)
label(next)
label(next2)
label(next3)
count:
dd (int)2

newmem1:

originalcode1:
fld dword ptr [esi+000000A0]
cmp [count],2
jne next
cmp [esi+a0],(float)1
jle exit1
cmp [esi+a0],(float)125
jg exit1
mov [val],esi
sub [count],1
jmp exit1
next:
cmp [count],1
jne next2
mov [val+4],esi
sub [count],1
jmp exit1
next2:

exit1:
cmp [val+8],esi
je returnhere1
cmp [val],esi
je returnhere1
cmp [val+4],esi
je returnhere1
cmp [esi+a0],(float)110
jle next3
mov [val+8],esi
jmp returnhere1
next3:
mov [count],2
jmp returnhere1

"Shank2.exe"+F0249:
jmp newmem1
nop
returnhere1:


alloc(newmem2,2048)
alloc(pas,12)
label(returnhere2)
label(originalcode2)
label(exit2)
pas:
dd (float)0.0
newmem2:
cmp [val],ebp
je originalcode2
cmp [val+4],ebp
je originalcode2
fld dword ptr [esp+1C]
mov ecx,[ebp+08]
jmp exit2

originalcode2:
fld dword ptr [esp+1C]
fmul dword ptr [pas]
mov ecx,[ebp+08]

exit2:
jmp returnhere2

"Shank2.exe"+EDCE4:
jmp newmem2
nop
nop
returnhere2:





[DISABLE]
dealloc(newmem2)
dealloc(val)
dealloc(count)
"Shank2.exe"+EDCE4:
fld dword ptr [esp+1C]
mov ecx,[ebp+08]


dealloc(newmem1)
"Shank2.exe"+F0249:
fld dword ptr [esi+000000A0]
//Alt: db D9 86 A0 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"multisurviohk"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem1,2048)
alloc(val,128)
alloc(count,12)
label(returnhere1)
label(originalcode1)
label(exit1)
label(next)
label(next2)
label(next3)
count:
dd (int)2

newmem1:

originalcode1:
fld dword ptr [esi+000000A0]
cmp [count],2
jne next
cmp [esi+a0],(float)1
jle exit1
cmp [esi+a0],125
jg exit1
mov [val],esi
sub [count],1
jmp exit1
next:
cmp [count],1
jne next2
mov [val+4],esi
sub [count],1
jmp exit1
next2:

exit1:
cmp [val+8],esi
je returnhere1
cmp [val],esi
je returnhere1
cmp [val+4],esi
je returnhere1
cmp [esi+a0],(float)110
jle next3
mov [val+8],esi
jmp returnhere1
next3:
mov [count],2
jmp returnhere1

"Shank2.exe"+F0249:
jmp newmem1
nop
returnhere1:


alloc(newmem2,2048)
alloc(pas,12)
label(returnhere2)
label(originalcode2)
label(exit2)
pas:
dd (float)0.0
newmem2:
cmp [val],ebp
je originalcode2
cmp [val+4],ebp
je originalcode2
fld dword ptr [esp+1C]
mov ecx,[ebp+08]
jmp exit2

originalcode2:
fld dword ptr [esp+1C]
fmul dword ptr [pas]
mov ecx,[ebp+08]

exit2:
jmp returnhere2

"Shank2.exe"+EDCE4:
jmp newmem2
nop
nop
returnhere2:



alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
cmp [val],ebp
je originalcode
cmp [val+4],ebp
je originalcode
mov [ebp+a0],(float)0.0
jmp exit
originalcode:
fstp dword ptr [ebp+000000A0]

exit:
jmp returnhere

"Shank2.exe"+EDD01:
jmp newmem
nop
returnhere:




[DISABLE]
dealloc(newmem)
dealloc(val)
dealloc(count)
"Shank2.exe"+EDD01:
fstp dword ptr [ebp+000000A0]

dealloc(newmem2)
"Shank2.exe"+EDCE4:
fld dword ptr [esp+1C]
mov ecx,[ebp+08]


dealloc(newmem1)
"Shank2.exe"+F0249:
fld dword ptr [esi+000000A0]
//Alt: db D9 86 A0 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"easy hits"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048) //2kb should be enough
alloc(val,12)
label(returnhere)
label(next)
label(originalcode)
label(exit)

newmem:

originalcode:
mov ecx,[eax+24]
cmp ecx,04
jle next
add ecx,27
next:
inc ecx
mov edi,eax
mov [val],ecx
exit:
jmp returnhere

"Shank2.exe"+13DD2B:
jmp newmem
nop
returnhere:






alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)

newmem1:

originalcode1:
mov edx,[val]
mov [ecx+58],edx
mov eax,[ebp+0C]

exit1:
jmp returnhere1

"Shank2.exe"+3307FA:
jmp newmem1
nop
returnhere1:



 
 
[DISABLE]
dealloc(newmem1)
"Shank2.exe"+3307FA:
mov [ecx+58],edx
mov eax,[ebp+0C]
//Alt: db 89 51 58 8B 45 0C
dealloc(newmem)
"Shank2.exe"+13DD2B:
mov ecx,[eax+24]
inc ecx
mov edi,eax

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"storygod"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem1,2048)
alloc(val,128)
alloc(count,12)
label(returnhere1)
label(exit1)
label(next3)
count:
dd (int)1

newmem1:
fld dword ptr [esi+000000A0]
cmp [count],1
jne exit1
cmp [esi+a0],(float)1
jle exit1
cmp [esi+a0],(float)80
jg exit1
mov [val],esi
sub [count],1

exit1:
cmp [val+4],esi
je returnhere1
cmp [val],esi
je returnhere1
cmp [esi+a0],(float)125
jle next3
mov [val+4],esi
jmp returnhere1
next3:
mov [count],1
jmp returnhere1

"Shank2.exe"+F0249:
jmp newmem1
nop
returnhere1:


alloc(newmem2,2048)
alloc(pas,12)
label(returnhere2)
label(originalcode2)
label(exit2)
pas:
dd (float)0.0
newmem2:
cmp [val],ebp
je originalcode2
fld dword ptr [esp+1C]
mov ecx,[ebp+08]
jmp exit2

originalcode2:
fld dword ptr [esp+1C]
fmul dword ptr [pas]
mov ecx,[ebp+08]
mov eax,[ebp+200]
mov [ebp+a0],eax
exit2:
jmp returnhere2

"Shank2.exe"+EDCE4:
jmp newmem2
nop
nop
returnhere2:





[DISABLE]
dealloc(newmem2)
dealloc(val)
dealloc(count)
"Shank2.exe"+EDCE4:
fld dword ptr [esp+1C]
mov ecx,[ebp+08]


dealloc(newmem1)
"Shank2.exe"+F0249:
fld dword ptr [esi+000000A0]
//Alt: db D9 86 A0 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"storyohk"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem1,2048)
alloc(val,128)
alloc(count,12)
label(returnhere1)
label(exit1)
label(next3)
count:
dd (int)1

newmem1:
fld dword ptr [esi+000000A0]
cmp [count],1
jne exit1
cmp [esi+a0],(float)1
jle exit1
cmp [esi+a0],(float)90
jg exit1
mov [val],esi
sub [count],1

exit1:
cmp [val+4],esi
je returnhere1
cmp [val],esi
je returnhere1
cmp [esi+a0],(float)125
jle next3
mov [val+4],esi
jmp returnhere1
next3:
mov [count],1
jmp returnhere1

"Shank2.exe"+F0249:
jmp newmem1
nop
returnhere1:


alloc(newmem2,2048)
alloc(pas,12)
label(returnhere2)
label(originalcode2)
label(exit2)
pas:
dd (float)0.0
newmem2:
cmp [val],ebp
je originalcode2
fld dword ptr [esp+1C]
mov ecx,[ebp+08]
jmp exit2

originalcode2:
fld dword ptr [esp+1C]
fmul dword ptr [pas]
mov ecx,[ebp+08]
mov eax,[ebp+200]
mov [ebp+a0],eax
exit2:
jmp returnhere2

"Shank2.exe"+EDCE4:
jmp newmem2
nop
nop
returnhere2:

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
cmp [val],ebp
je originalcode
cmp [val+4],ebp
je originalcode
mov [ebp+a0],(float)0.0
jmp exit
originalcode:
fstp dword ptr [ebp+000000A0]

exit:
jmp returnhere

"Shank2.exe"+EDD01:
jmp newmem
nop
returnhere:




[DISABLE]
dealloc(newmem)
dealloc(val)
dealloc(count)
"Shank2.exe"+EDD01:
fstp dword ptr [ebp+000000A0]

dealloc(newmem2)
dealloc(val)
dealloc(count)
"Shank2.exe"+EDCE4:
fld dword ptr [esp+1C]
mov ecx,[ebp+08]


dealloc(newmem1)
"Shank2.exe"+F0249:
fld dword ptr [esi+000000A0]
//Alt: db D9 86 A0 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"singlesurvigod"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem1,2048)
alloc(val,128)
alloc(count,12)
label(returnhere1)
label(exit1)
label(next3)
count:
dd (int)1

newmem1:
fld dword ptr [esi+000000A0]
cmp [count],1
jne exit1
cmp [esi+a0],(float)1
jle exit1
cmp [esi+a0],(float)125
jg exit1
mov [val],esi
sub [count],1

exit1:
cmp [val+4],esi
je returnhere1
cmp [val],esi
je returnhere1
cmp [esi+a0],(float)125
jle next3
mov [val+4],esi
jmp returnhere1
next3:
mov [count],1
jmp returnhere1

"Shank2.exe"+F0249:
jmp newmem1
nop
returnhere1:


alloc(newmem2,2048)
alloc(pas,12)
label(returnhere2)
label(originalcode2)
label(exit2)
pas:
dd (float)0.0
newmem2:
cmp [val],ebp
je originalcode2
fld dword ptr [esp+1C]
mov ecx,[ebp+08]
jmp exit2

originalcode2:
fld dword ptr [esp+1C]
fmul dword ptr [pas]
mov ecx,[ebp+08]
mov eax,[ebp+200]
mov [ebp+a0],eax
exit2:
jmp returnhere2

"Shank2.exe"+EDCE4:
jmp newmem2
nop
nop
returnhere2:





[DISABLE]
dealloc(newmem2)
dealloc(val)
dealloc(count)
"Shank2.exe"+EDCE4:
fld dword ptr [esp+1C]
mov ecx,[ebp+08]


dealloc(newmem1)
"Shank2.exe"+F0249:
fld dword ptr [esi+000000A0]
//Alt: db D9 86 A0 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"singlesurviohk"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem1,2048)
alloc(val,128)
alloc(count,12)
label(returnhere1)
label(exit1)
label(next3)
count:
dd (int)1

newmem1:
fld dword ptr [esi+000000A0]
cmp [count],1
jne exit1
cmp [esi+a0],(float)1
jle exit1
cmp [esi+a0],(float)125
jg exit1
mov [val],esi
sub [count],1

exit1:
cmp [val+4],esi
je returnhere1
cmp [val],esi
je returnhere1
cmp [esi+a0],(float)125
jle next3
mov [val+4],esi
jmp returnhere1
next3:
mov [count],1
jmp returnhere1

"Shank2.exe"+F0249:
jmp newmem1
nop
returnhere1:


alloc(newmem2,2048)
alloc(pas,12)
label(returnhere2)
label(originalcode2)
label(exit2)
pas:
dd (float)0.0
newmem2:
cmp [val],ebp
je originalcode2
fld dword ptr [esp+1C]
mov ecx,[ebp+08]
jmp exit2

originalcode2:
fld dword ptr [esp+1C]
fmul dword ptr [pas]
mov ecx,[ebp+08]
mov eax,[ebp+200]
mov [ebp+a0],eax
exit2:
jmp returnhere2

"Shank2.exe"+EDCE4:
jmp newmem2
nop
nop
returnhere2:

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
cmp [val],ebp
je originalcode
cmp [val+4],ebp
je originalcode
mov [ebp+a0],(float)0.0
jmp exit
originalcode:
fstp dword ptr [ebp+000000A0]

exit:
jmp returnhere

"Shank2.exe"+EDD01:
jmp newmem
nop
returnhere:




[DISABLE]
dealloc(newmem)
dealloc(val)
dealloc(count)
"Shank2.exe"+EDD01:
fstp dword ptr [ebp+000000A0]

dealloc(newmem2)
dealloc(val)
dealloc(count)
"Shank2.exe"+EDCE4:
fld dword ptr [esp+1C]
mov ecx,[ebp+08]


dealloc(newmem1)
"Shank2.exe"+F0249:
fld dword ptr [esi+000000A0]
//Alt: db D9 86 A0 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"9999 hits"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048) //2kb should be enough
alloc(val,12)
label(returnhere)
label(next)
label(originalcode)
label(exit)

newmem:

originalcode:
mov ecx,[eax+24]
cmp ecx,04
jl next
mov ecx,(int)9999999999
next:
inc ecx
mov edi,eax
mov [val],ecx
exit:
jmp returnhere

"Shank2.exe"+13DD2B:
jmp newmem
nop
returnhere:






alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)

newmem1:

originalcode1:
mov edx,[val]
mov [ecx+58],edx
mov eax,[ebp+0C]

exit1:
jmp returnhere1

"Shank2.exe"+3307FA:
jmp newmem1
nop
returnhere1:



 
 
[DISABLE]
dealloc(newmem1)
"Shank2.exe"+3307FA:
mov [ecx+58],edx
mov eax,[ebp+0C]
//Alt: db 89 51 58 8B 45 0C
dealloc(newmem)
"Shank2.exe"+13DD2B:
mov ecx,[eax+24]
inc ecx
mov edi,eax

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :fstp dword ptr [ebp+000000A0]</Description>
      <Address>004EDD01</Address>
      <ModuleName>Shank2.exe</ModuleName>
      <ModuleNameOffset>EDD01</ModuleNameOffset>
      <Before>
        <Byte>AD</Byte>
        <Byte>A0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9D</Byte>
        <Byte>A0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>B4</Byte>
        <Byte>9F</Byte>
        <Byte>F2</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [esi+000000A0]</Description>
      <Address>004F0249</Address>
      <ModuleName>Shank2.exe</ModuleName>
      <ModuleNameOffset>F0249</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>67</Byte>
        <Byte>A2</Byte>
        <Byte>F1</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>86</Byte>
        <Byte>A0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>B0</Byte>
        <Byte>00</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :overload</Description>
      <Address>00482876</Address>
      <ModuleName>Shank2.exe</ModuleName>
      <ModuleNameOffset>82876</ModuleNameOffset>
      <Before>
        <Byte>04</Byte>
        <Byte>D9</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>51</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>74</Byte>
        <Byte>4C</Byte>
        <Byte>D9</Byte>
        <Byte>EE</Byte>
        <Byte>D8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :jump</Description>
      <Address>0042EFDF</Address>
      <ModuleName>Shank2.exe</ModuleName>
      <ModuleNameOffset>2EFDF</ModuleNameOffset>
      <Before>
        <Byte>5A</Byte>
        <Byte>C0</Byte>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>42</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>FC</Byte>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="unnamed structure" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="28" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="36" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="40" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="44" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="52" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="60" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="64" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="68" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="72" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="76" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="80" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="84" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="88" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="92" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="96" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="100" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="104" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="108" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="112" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="116" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="120" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="124" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="128" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="132" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="136" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="140" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="144" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="148" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="152" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="156" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="160" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="164" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="168" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="172" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="176" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="180" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="184" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="188" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="192" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="196" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="200" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="204" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="208" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="212" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="216" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="220" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="224" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="228" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="232" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="236" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="240" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="244" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="248" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="252" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="256" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="260" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="264" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="268" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="272" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="276" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="280" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="284" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="288" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="292" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="296" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="300" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="304" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="308" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="312" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="316" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="320" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="324" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="328" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="332" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="336" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="340" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="344" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="348" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="352" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="356" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="360" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="364" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="368" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="372" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="376" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="380" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="384" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="388" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="392" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="396" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="400" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="404" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="408" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="412" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="416" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="420" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="424" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="428" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="432" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="436" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="440" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="444" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="448" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="452" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="456" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="460" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="464" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="468" Vartype="String" Bytesize="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="479" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="480" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="484" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="488" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="492" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="496" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="500" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="504" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="508" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
</CheatTable>
