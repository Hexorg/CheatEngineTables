<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Generade"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
AOBSCANMODULE(aobgenerades,LostPlanetGame.exe,8B 0F 8B 54 24 14 89 0A FF 0F)
registersymbol(aobgenerades)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//cmp [edi+4],2
//jne originalcode
cmp [edi+24],1
jne originalcode
cmp [edi+28],1
jne originalcode
cmp [edi+2C],3
jne originalcode
//cmp [edi+40],3
//cmp [edi],0
//jl originalcode
mov [edi],2

originalcode:
mov ecx,[edi]
mov edx,[esp+14]

exit:
jmp returnhere

aobgenerades://"LostPlanetGame.exe"+1C908A:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"LostPlanetGame.exe"+1C908A:
mov ecx,[edi]
mov edx,[esp+14]
//Alt: db 8B 0F 8B 54 24 14
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"Inf Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscanmodule(aobammo,LostPlanetGame.exe,7C 0A 8B 4C 24 0C)
registersymbol(aobammo)
label(ammo)
registersymbol(ammo)
label(l1)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ammo],edx
push eax
push edx
sub edx,4
cmp [edx+1C],1
jne l1
cmp [edx+30],1
jne l1
cmp [edx+34],1
jne l1
cmp [edx+20],4
mov eax,[edx+24]
cmp [eax+0c],000C0003
jne l1
mov ecx,99
mov [edx+0c0],(float)1
mov [edx+0c4],(float)0.1 // cross hair mul value, also accuracy :)
mov [edx+0c8],(float)1
mov [edx+0cc],(float)1
mov [edx+0d0],(float)1
mov [edx+0d4],(float)1
mov [edx+0d8],(float)1
mov [edx+0dc],(float)1
mov [edx+0e0],(float)1
//push edx
//call logvar
l1:
pop edx
pop eax
//mov [edx],99
originalcode:
mov [edx],ecx
pop ecx
ret 0008

exit:
jmp returnhere
ammo:
dd 0
aobammo+10://"LostPlanetGame.exe"+1CD0D4:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(ammo)
dealloc(newmem)
"LostPlanetGame.exe"+1CD0D4:
mov [edx],ecx
pop ecx
ret 0008
//Alt: db 89 0A 59 C2 08 00
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>36</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[ammo]-4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[ammo]</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"crosshair"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[ammo]+d4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"crosshair1"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[ammo]+d8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[ammo]+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>3A243F90</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>3A243F94</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"Money"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(aobmoney,LostPlanetGame.exe,F3 0F 10 07  F3 0F 5C 44 24 10)
registersymbol(aobmoney)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp edi,0
je originalcode
cmp [edi-4],(float)-1
jne originalcode
cmp [edi+4],15
jne originalcode
mov [edi],(float)500000 // max money is 1M, after this you cannot pick money any more
//push edi
//call logData1
originalcode:
movss xmm0,[edi]
subss xmm0,[esp+10]

exit:
jmp returnhere

aobmoney://"LostPlanetGame.exe"+1C9920:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"LostPlanetGame.exe"+1C9920:
movss xmm0,[edi]
subss xmm0,[esp+10]
//Alt: db F3 0F 10 07 F3 0F 5C 44 24 10
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>49</ID>
      <Description>"tip to reveal"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
//aobscanmodule(aobmain,somegame.exe,83 3C 28  00 75 29)
// registersymbol(aobmain)
label(exit)
label(isPlayer)
label(isPlayer_l1)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
// 0147621D - 83 3C 28  00          - cmp dword ptr [eax+ebp],00
// when player shoot, [eax+ebp] equal 0
// after while reload, [eax+ebp] equal 1
// is these any way to make instant shoot ? :)

push eax
push esi
call isPlayer
test eax,eax
jz originalcode
originalcode:
pop eax
cmp dword ptr [eax+ebp],00
jne 0147624C

exit:
jmp returnhere
// this function use to determine player gun through it name
//, but when enemy get killed, they call to this function too,
// so, can we found player base by player name ?
// the ammo can modify from here, too
isPlayer:
push ebp
mov ebp,esp
push ecx
push edx
push esi
xor eax,eax

mov esi,[ebp+8]
test esi,esi
jz isPlayer_l1
mov edx,[esi+01e4]
cmp byte ptr [edx+14],0
je isPlayer_l1
cmp byte ptr [edx+15],0
jne isPlayer_l1
inc eax
//lea ecx,[eax+ebp]
//cmp ecx,2EEEC548
//jne originalcode
// push esi
// call logData1 //multi thread func to avoid miss data
isPlayer_l1:
pop esi
pop edx
pop ecx

// the ammo: [esi+24]+384, max: [esi+24]+388

mov esp,ebp
pop ebp
ret 4

"LostPlanetGame.exe"+7A621D: // aobscan: 83 3C 28  00 75 29
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"LostPlanetGame.exe"+7A621D:
cmp dword ptr [eax+ebp],00
jne 0147624C
//Alt: db 83 3C 28 00 75 29
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esp+04],(float)0.001
originalcode:
movss xmm0,[esp+04]

exit:
jmp returnhere

"LostPlanetGame.exe"+4F53A8:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"LostPlanetGame.exe"+4F53A8:
movss xmm0,[esp+04]
//Alt: db F3 0F 10 44 24 04
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>p1</Name>
      <Address>093B0017</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobgenerades</Name>
      <Address> 00E9908A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobammo</Name>
      <Address> 00E9D0C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobmoney</Name>
      <Address> 00E99920</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>m=require("aob")
m.findAOB("F3 0F 11 * * * * * 5E 59")
</LuaScript>
</CheatTable>
