<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Custom character skill points (CTRL)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(lblReturn)
label(lblSkipHack)
label(pPointsLeft)
label(pPointIncrement)
registersymbol(pPointsLeft)
registersymbol(pPointIncrement)

newmem:
pushfd
pushad
push 11 // VK_CONTROL: CTRL key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblSkipHack
cmp edi,20
jne short lblSkipHack
add eax, [pPointIncrement]
mov [pPointsLeft], edx
lblSkipHack:
popfd
mov [edi+edx],eax        // Original code
mov byte ptr [esi],01    // Original code
jmp lblReturn

// Vars
pPointIncrement:
dd (int)10
pPointsLeft:
dd 0

"GameUI.dll"+250437:
jmp newmem
nop
lblReturn:

[DISABLE]
"GameUI.dll"+250437:
mov [edi+edx],eax
mov byte ptr [esi],01
//Alt: db 89 04 17 C6 06 01
unregistersymbol(pPointsLeft)
unregistersymbol(pPointIncrement)
dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Points to add on CTRL+click"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPointIncrement</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Points left to assign"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPointsLeft</Address>
          <Offsets>
            <Offset>20</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Unit hacks (M/H/X/L)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(lblSkipInfiniteMove)
label(lblSkipHealOnMove)
label(lblSkipXPGain)
label(lblSkipLevelGain)
label(pPointsToHeal)
label(pXPToGain)
label(pLevelToGain)
registersymbol(pPointsToHeal)
registersymbol(pXPToGain)
registersymbol(pLevelToGain)

newmem:
pushfd
push eax
pushad
push 4D // 'M'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je short lblSkipInfiniteMove
fstp dword ptr [esi+64]                       // Original code
lblSkipInfiniteMove:
pushad
push 48 // 'H'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblSkipHealOnMove
mov eax,[esi+60]
add eax,[pPointsToHeal]
mov [esi+60],eax
lblSkipHealOnMove:
pushad
push 58 // 'X'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblSkipXPGain
mov eax,[esi+6c]
add eax,[pXPToGain]
mov [esi+6c],eax
lblSkipXPGain:
pushad
push 4C // 'L'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblSkipLevelGain
mov eax,[esi+68]
add eax,[pLevelToGain]
mov [esi+68],eax
lblSkipLevelGain:
pop eax
popfd
jmp GameLogic.Logic::DeleteLogicServer+8489F  // Original code

//Vars
pPointsToHeal:
dd (int)10
pXPToGain:
dd (int)20
pLevelToGain:
dd 1

"GameLogic.dll"+85B45:
jmp newmem

[DISABLE]
"GameLogic.dll"+85B45:
db D9 5E 64 EB 05
//Alt: fstp dword ptr [esi+64]
//Alt: jmp GameLogic.Logic::DeleteLogicServer+8489F
unregistersymbol(pPointsToHeal)
unregistersymbol(pXPToGain)
unregistersymbol(pLevelToGain)
dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"iPointsToHeal"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPointsToHeal</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"iXPToGain"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pXPToGain</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"iLevelToGain"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pLevelToGain</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Resource pointers (CTRL)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(lblReturn)
label(lblSkipGoldHack)
label(pGold)
label(pMana)
registersymbol(pGold)
registersymbol(pMana)

newmem:
fld dword ptr [eax+esi+00009C90] // Original code
pushad
push 11 // 'VK_CONTROL'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblSkipGoldHack
push ebx
lea ebx,[eax+esi+00009C90]
mov [pGold], ebx
add ebx,1c
mov [pMana], ebx
pop ebx
lblSkipGoldHack:
jmp lblReturn

// Vars
pGold:
dd 0
pMana:
dd 0

"GameLogic.dll"+6CA59:
jmp newmem
nop
nop
lblReturn:

[DISABLE]
"GameLogic.dll"+6CA59:
fld dword ptr [eax+esi+00009C90]
//Alt: db D9 84 30 90 9C 00 00
unregistersymbol(pGold)
unregistersymbol(pMana)
dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>24</ID>
          <Description>"pGold"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pGold</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"pMana"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pMana</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
