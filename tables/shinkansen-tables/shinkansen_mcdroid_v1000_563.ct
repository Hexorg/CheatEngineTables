<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>63302</ID>
      <Description>"Souls, Strawberries Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(soulsstrawberries_basepointer)
registersymbol(soulsstrawberriesupdate_enable)
registersymbol(soulsset_enable)
registersymbol(strawberriesset_enable)

alloc(soulsstrawberries_basepointer,4)
alloc(soulsstrawberriesupdate_enable,4)
alloc(soulsset_enable,4)
alloc(strawberriesset_enable,4)


[DISABLE]

unregistersymbol(soulsstrawberries_basepointer)
unregistersymbol(soulsstrawberriesupdate_enable)
unregistersymbol(soulsset_enable)
unregistersymbol(strawberriesset_enable)

dealloc(soulsstrawberries_basepointer)
dealloc(soulsstrawberriesupdate_enable)
dealloc(soulsset_enable)
dealloc(strawberriesset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>63303</ID>
          <Description>"Souls, Strawberries Base Address Scan (To Activate: Battle, To Update: Battle)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(soulsstrawberries_savedAOB)
label(soulsstrawberries_returnhere)
label(soulsstrawberries_originalcode)
label(soulsstrawberries_exit)

label(soulsstrawberriesupdate_exit)
label(soulsset_exit)
label(strawberriesset_exit)

registersymbol(soulsstrawberries_savedAOB)

aobscan(searchedAOB,39 12 8B 49 50 83 EC 08 51 50 39 00)

alloc(soulsstrawberries_newmem,2048) //2kb should be enough


soulsstrawberries_newmem:
cmp dword ptr [soulsstrawberriesupdate_enable], #0
je soulsstrawberriesupdate_exit
mov [soulsstrawberries_basepointer], ecx
soulsstrawberriesupdate_exit:

cmp dword ptr [soulsset_enable], #0
je soulsset_exit
mov [ecx+50], #999999
soulsset_exit:

cmp dword ptr [strawberriesset_enable], #0
je strawberriesset_exit
mov [ecx+64], #19999980
strawberriesset_exit:


soulsstrawberries_originalcode:
db 8B 49 50 83 EC 08
//mov ecx,[ecx+50]
//sub esp,08


soulsstrawberries_exit:
jmp soulsstrawberries_returnhere


searchedAOB + 2:
soulsstrawberries_savedAOB:
jmp soulsstrawberries_newmem
nop
soulsstrawberries_returnhere:


[DISABLE]
soulsstrawberries_savedAOB:
db 8B 49 50 83 EC 08
//mov ecx,[ecx+50]
//sub esp,08

unregistersymbol(soulsstrawberries_savedAOB)

dealloc(soulsstrawberries_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63304</ID>
          <Description>"Souls Set to 999999? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>soulsset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63462</ID>
          <Description>"Strawberries Set to 999999? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>strawberriesset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63305</ID>
          <Description>"Souls, Strawberries Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>soulsstrawberriesupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63306</ID>
          <Description>"Souls"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>soulsstrawberries_basepointer</Address>
          <Offsets>
            <Offset>50</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>63307</ID>
          <Description>"Strawberries (* 20)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>soulsstrawberries_basepointer</Address>
          <Offsets>
            <Offset>64</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>63297</ID>
      <Description>"Diamonds Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(diamonds_basepointer)
registersymbol(diamondsupdate_enable)
registersymbol(diamondsset_enable)

alloc(diamonds_basepointer,4)
alloc(diamondsupdate_enable,4)
alloc(diamondsset_enable,4)


[DISABLE]

unregistersymbol(diamonds_basepointer)
unregistersymbol(diamondsupdate_enable)
unregistersymbol(diamondsset_enable)

dealloc(diamonds_basepointer)
dealloc(diamondsupdate_enable)
dealloc(diamondsset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>63298</ID>
          <Description>"Diamonds Base Address Scan (To Activate: Battle, To Update: Battle)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(diamonds_savedAOB)
label(diamonds_returnhere)
label(diamonds_originalcode)
label(diamonds_exit)

label(diamondsupdate_exit)
label(diamondsset_exit)

registersymbol(diamonds_savedAOB)

aobscan(searchedAOB,8B C8 8B 45 F0 8B D1 39 12 8B 49 58 3B C1)

alloc(diamonds_newmem,2048) //2kb should be enough


diamonds_newmem:
cmp dword ptr [diamondsupdate_enable], #0
je diamondsupdate_exit
mov [diamonds_basepointer], ecx
diamondsupdate_exit:

cmp dword ptr [diamondsset_enable], #0
je diamondsset_exit
mov [ecx+58], #999999
diamondsset_exit:


diamonds_originalcode:
db 8B 49 58 3B C1
//mov ecx,[ecx+58]
//cmp eax,ecx


diamonds_exit:
jmp diamonds_returnhere


searchedAOB + 9:
diamonds_savedAOB:
jmp diamonds_newmem
diamonds_returnhere:


[DISABLE]
diamonds_savedAOB:
db 8B 49 58 3B C1
//mov ecx,[ecx+58]
//cmp eax,ecx

unregistersymbol(diamonds_savedAOB)

dealloc(diamonds_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63299</ID>
          <Description>"Diamonds Set to 999999? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>diamondsset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63300</ID>
          <Description>"Diamonds Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>diamondsupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63301</ID>
          <Description>"Diamonds"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>diamonds_basepointer</Address>
          <Offsets>
            <Offset>58</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>63452</ID>
      <Description>"McDroid Health Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(mcdroidhealth_basepointer)
registersymbol(mcdroidhealthupdate_enable)
registersymbol(mcdroidhealthset_enable)

alloc(mcdroidhealth_basepointer,4)
alloc(mcdroidhealthupdate_enable,4)
alloc(mcdroidhealthset_enable,4)


[DISABLE]

unregistersymbol(mcdroidhealth_basepointer)
unregistersymbol(mcdroidhealthupdate_enable)
unregistersymbol(mcdroidhealthset_enable)

dealloc(mcdroidhealth_basepointer)
dealloc(mcdroidhealthupdate_enable)
dealloc(mcdroidhealthset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>63453</ID>
          <Description>"McDroid Health Base Address Scan (To Activate: Battle, To Update: Battle)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(mcdroidhealth_savedAOB)
label(mcdroidhealth_returnhere)
label(mcdroidhealth_originalcode)
label(mcdroidhealth_exit)

label(mcdroidhealthupdate_exit)
label(mcdroidhealthset_exit)

registersymbol(mcdroidhealth_savedAOB)

aobscan(searchedAOB,D9 87 E4 00 00 00 D9 5D 9C D9 45 9C D9 87 AC 00 00 00 D9 05)

alloc(mcdroidhealth_newmem,2048) //2kb should be enough


mcdroidhealth_newmem:
cmp dword ptr [mcdroidhealthupdate_enable], #0
je mcdroidhealthupdate_exit
mov [mcdroidhealth_basepointer], edi
mcdroidhealthupdate_exit:

cmp dword ptr [mcdroidhealthset_enable], #0
je mcdroidhealthset_exit
mov [edi+e4], (float)9999
mcdroidhealthset_exit:


mcdroidhealth_originalcode:
db D9 87 E4 00 00 00
//fld dword ptr [edi+000000E4]


mcdroidhealth_exit:
jmp mcdroidhealth_returnhere


searchedAOB:
mcdroidhealth_savedAOB:
jmp mcdroidhealth_newmem
nop
mcdroidhealth_returnhere:


[DISABLE]
mcdroidhealth_savedAOB:
db D9 87 E4 00 00 00
//fld dword ptr [edi+000000E4]

unregistersymbol(mcdroidhealth_savedAOB)

dealloc(mcdroidhealth_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63454</ID>
          <Description>"McDroid Health Set to 9999? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mcdroidhealthset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63455</ID>
          <Description>"McDroid Health Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mcdroidhealthupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63456</ID>
          <Description>"McDroid Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mcdroidhealth_basepointer</Address>
          <Offsets>
            <Offset>E4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>63457</ID>
      <Description>"Shuttle Health Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(shuttlehealth_basepointer)
registersymbol(shuttlehealthupdate_enable)
registersymbol(shuttlehealthset_enable)

alloc(shuttlehealth_basepointer,4)
alloc(shuttlehealthupdate_enable,4)
alloc(shuttlehealthset_enable,4)


[DISABLE]

unregistersymbol(shuttlehealth_basepointer)
unregistersymbol(shuttlehealthupdate_enable)
unregistersymbol(shuttlehealthset_enable)

dealloc(shuttlehealth_basepointer)
dealloc(shuttlehealthupdate_enable)
dealloc(shuttlehealthset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>63458</ID>
          <Description>"Shuttle Health Base Address Scan (To Activate: Battle, To Update: Battle)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(shuttlehealth_savedAOB)
label(shuttlehealth_returnhere)
label(shuttlehealth_originalcode)
label(shuttlehealth_exit)

label(shuttlehealthupdate_exit)
label(shuttlehealthset_exit)

registersymbol(shuttlehealth_savedAOB)

aobscan(searchedAOB,D9 87 E4 00 00 00 D9 5D EC D9 45 EC D9 87 AC 00 00 00 D9 05)

alloc(shuttlehealth_newmem,2048) //2kb should be enough


shuttlehealth_newmem:
cmp dword ptr [shuttlehealthupdate_enable], #0
je shuttlehealthupdate_exit
mov [shuttlehealth_basepointer], edi
shuttlehealthupdate_exit:

cmp dword ptr [shuttlehealthset_enable], #0
je shuttlehealthset_exit
mov [edi+e4], (float)9999
shuttlehealthset_exit:


shuttlehealth_originalcode:
db D9 87 E4 00 00 00
//fld dword ptr [edi+000000E4]


shuttlehealth_exit:
jmp shuttlehealth_returnhere


searchedAOB:
shuttlehealth_savedAOB:
jmp shuttlehealth_newmem
nop
shuttlehealth_returnhere:


[DISABLE]
shuttlehealth_savedAOB:
db D9 87 E4 00 00 00
//fld dword ptr [edi+000000E4]

unregistersymbol(shuttlehealth_savedAOB)

dealloc(shuttlehealth_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63459</ID>
          <Description>"Shuttle Health Set to 9999? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>shuttlehealthset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63460</ID>
          <Description>"Shuttle Health Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>shuttlehealthupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63461</ID>
          <Description>"Shuttle Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>shuttlehealth_basepointer</Address>
          <Offsets>
            <Offset>E4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>63468</ID>
      <Description>"Turrets Health Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(turretshealth_basepointer)
registersymbol(turretshealthupdate_enable)
registersymbol(turretshealthset_enable)

alloc(turretshealth_basepointer,4)
alloc(turretshealthupdate_enable,4)
alloc(turretshealthset_enable,4)


[DISABLE]

unregistersymbol(turretshealth_basepointer)
unregistersymbol(turretshealthupdate_enable)
unregistersymbol(turretshealthset_enable)

dealloc(turretshealth_basepointer)
dealloc(turretshealthupdate_enable)
dealloc(turretshealthset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>63469</ID>
          <Description>"Turrets Health Base Address Scan (To Activate: Battle, To Update: Battle)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(turretshealth_savedAOB)
label(turretshealth_returnhere)
label(turretshealth_originalcode)
label(turretshealth_exit)

label(turretshealthupdate_exit)
label(turretshealthset_exit)

registersymbol(turretshealth_savedAOB)

aobscan(searchedAOB,D9 87 E4 00 00 00 D9 5D CC D9 45 CC D9 87 AC 00 00 00)

alloc(turretshealth_newmem,2048) //2kb should be enough


turretshealth_newmem:
cmp dword ptr [turretshealthupdate_enable], #0
je turretshealthupdate_exit
mov [turretshealth_basepointer], edi
turretshealthupdate_exit:

cmp dword ptr [turretshealthset_enable], #0
je turretshealthset_exit
mov [edi+e4], (float)9999
turretshealthset_exit:


turretshealth_originalcode:
db D9 87 E4 00 00 00
//fld dword ptr [edi+000000E4]


turretshealth_exit:
jmp turretshealth_returnhere


searchedAOB:
turretshealth_savedAOB:
jmp turretshealth_newmem
nop
turretshealth_returnhere:


[DISABLE]
turretshealth_savedAOB:
db D9 87 E4 00 00 00
//fld dword ptr [edi+000000E4]

unregistersymbol(turretshealth_savedAOB)

dealloc(turretshealth_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63470</ID>
          <Description>"Turrets Health Set to 9999? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>turretshealthset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63471</ID>
          <Description>"Turrets Health Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>turretshealthupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63472</ID>
          <Description>"Turrets Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>turretshealth_basepointer</Address>
          <Offsets>
            <Offset>E4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>57146</ID>
      <Description>"Ideas / Fixes - Thanks!"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>57151</ID>
          <Description>"Strawberries, Diamonds info - waduk"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>shuttlehealth_savedAOB</Name>
      <Address>0EBD1D8D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mcdroidhealth_savedAOB</Name>
      <Address>0469F9E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>diamonds_savedAOB</Name>
      <Address>0EBE8060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>soulsstrawberries_savedAOB</Name>
      <Address>046A0ECD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>turretshealth_savedAOB</Name>
      <Address>046559DB</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
