<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Infinite Health"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(ih_1,16,DDDA.exe) //Infinite Health
aobscanmodule(ih_aob1,DDDA.exe,F3 0F 10 40 08 0F 2F 05 * * * * 76 * 8B 81 60 23 00 00)
registersymbol(ih_aob1)
label(returnhere_ih_1)

//--------------------------------------------------//
ih_1:
movss xmm0,[eax+08]
fld [eax+C]
fstp [eax+8]
jmp returnhere_ih_1
//--------------------------------------------------//

ih_aob1:
jmp ih_1
returnhere_ih_1:

[Disable]

ih_aob1:
db F3 0F 10 40 08
unregistersymbol(ih_aob1)
dealloc(ih_1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Infinite Stamina"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(is_1,16,DDDA.exe) //Infinite Stamina
aobscanmodule(is_aob1,DDDA.exe,F3 0F 10 8F A8 02 00 00)
registersymbol(is_aob1)
label(returnhere_is_1)

label(addStamina)
registersymbol(addStamina)

//--------------------------------------------------//
is_1:
movss xmm1,[edi+000002A8]
fld [addStamina]
fld [edi+2A8]
faddp
fstp [edi+2A8]
jmp returnhere_is_1

addStamina:
dd (float)100
//--------------------------------------------------//

is_aob1:
jmp is_1
nop
nop
nop
returnhere_is_1:

[Disable]

is_aob1:
db F3 0F 10 8F A8 02 00 00
unregistersymbol(is_aob1)
dealloc(is_1)

unregistersymbol(addStamina)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>97</ID>
      <Description>"Instant Level Up"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(ilu_1,16,DDDA.exe) //Instant Level Up
aobscanmodule(ilu_aob1,DDDA.exe,01 8F C4 02 00 00)
registersymbol(ilu_aob1)
label(returnhere_ilu_1)

//--------------------------------------------------//
ilu_1:
push [edi+2C8]
pop [edi+2C4]
jmp returnhere_ilu_1
//--------------------------------------------------//

ilu_aob1:
jmp ilu_1
nop
returnhere_ilu_1:

[Disable]

ilu_aob1:
db 01 8F C4 02 00 00
unregistersymbol(ilu_aob1)
dealloc(ilu_1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"----&gt; Item Editor"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(ie_1,16,DDDA.exe) //Item Editor
aobscanmodule(ie_aob1,DDDA.exe,0F BF 43 10 8B 8F AC 09 00 00)
registersymbol(ie_aob1)
label(returnhere_ie_1)

globalalloc(p_isItem,4) //Item Pointer

//--------------------------------------------------//
ie_1:
mov [p_isItem],ebx
movsx eax,word ptr [ebx+10]
mov ecx,[edi+000009AC]
jmp returnhere_ie_1
//--------------------------------------------------//

ie_aob1:
jmp ie_1
nop
nop
nop
nop
nop
returnhere_ie_1:

[Disable]

ie_aob1:
db 0F BF 43 10 8B 8F AC 09 00 00
unregistersymbol(ie_aob1)
dealloc(ie_1)

unregistersymbol(p_isItem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Highlighted Item ID"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>[p_isItem]+10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Highlighted Item Quantity"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>[p_isItem]+12</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Item IDs"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/* Dragon's Dogma: Dark Arisen - Item ID List ----&gt; ID = (Line Number - 2)
Airtight Flask
Scrag of Beast
Beast-Steak
Ambrosial Meat
Sour Scrag of Beast
Sour Beast-Steak
Sour Ambrosial Meat
Rotten Scrag of Beast
Rotten Beast-Steak
Rotten Ambrosial Meat
Small Fish
Large Fish
Giant Fish
Small Rank Fish
Large Rank Fish
Giant Rank Fish
Small Rotten Fish
Large Rotten Fish
Giant Rotten Fish
Berry
Apple
Grandgrapes
Moldy Berry
Moldy Apple
Moldy Grandgrapes
Rotten Berry
Rotten Apple
Rotten Grandgrapes
Twigbean
Carrot
Pumpkin
Moldy Twigbean
Moldy Carrot
Moldy Pumpkin
Rotten Twigbean
Rotten Carrot
Rotten Pumpkin
Egg
Golden Egg
Rotten Egg
Sunbright
Moonglow
Wilted Blossom
Greenwarish
Potent Greenwarish
Mushroom
Large Mushroom
Avernal Mushroom
Mithridate
Bringbout
Small Nut
Large Nut
Copper Ore
Silver Ore
Gold Ore
Fuligin Ore
Hemp
Wool-Cloth
Silk
Argence
Pine Branch
Cedar Branch
Chestnut Branch
Beech Branch
Lantern
Lantern (Half-Full)
Ferrystone
Empty Flask
Flask of Water
Flask of Oil
Kindling
Unknown Item
Ceramic Jug
Rock
Skull
Pickaxe
Lantern (No Fuel)
Unknown Item
Unknown Item
Throwblast
Dragon's Spit
Unknown Item
Smother Sap
Harspud Milk
Harspud Juice
Harspud Sauce
Interventive
Spicy Mushroom Tea
Light-Cure
Unknown Item
Panacea
White Wine
Red Wine
Poison Flask
Absorbent Rag
Clean Cloth
Unknown Item
Secret Softener
Liquid Vim
Salubrious Brew
Bottled Haste
Eyedropper
Throat Drops
Unknown Item
Placative Brew
Liberating Brew
Purifying Brew
Unknown Item
Dose of Strength
Dose of Courage
Warlock's Draught
Cleric's Draught
Conqueror's Periapt
Angel's Periapt
Demon's Periapt
Mage's Periapt
Monk's Periapt
Veteran's Periapt
Banker's Periapt
Isometricine
Foreign Knife
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Wooden Arrow
Poison Arrow
Blinder Arrow
Silencer Arrow
Sleeper Arrow
Oil Arrow
z
Petrifying Arrow
Unknown Item
Blast Arrow
Maker's Finger
Unknown Item
First Key To Salvation
Second Key To Salvation
First Gem of Salvation
Second Gem of Salvation
Third Gem of Salvation
Fourth Gem of Salvation
Watergod's Altar Key
Quarry Key
Portcrystal
Wakestone
Wyrm Hunt License
Gardener's Permit
Ancient Slate
Wakestone Shard
Unknown Item
Unknown Item
Incriminating Contract
Unknown Item
Unknown Item
Unknown Item
Salomet's Grimoire
Confidential Letter
Parcel
Unknown Item
Altar Slate
Maul's Badge Of Amity
Ophis's Badge Of Amity
Unknown Item
Gold Idol
Blessed Flower
Dead Flower
Ancient Tablet
Fifth Gem of Salvation
Godsbane
Windbluff Tower Key
Arisen's Bond
Unknown Item
Watergod's Altar Lever
Shadow Fort Lever
Wyrmward Perfume
Unknown Item
Unknown Item
Seeker's Token
Badge of Vows
Unknown Item
Engraved Lever
Unknown Item
Unknown Item
First Journal Entry
Second Journal Entry
Third Journal Entry
Fourth Journal Entry
Fifth Journal Entry
Final Journal Entry
Unsigned Letter
Tightly Folded Letter
Silver Idol
Bronze Idol
Unknown Item
Unknown Item
Godsbane
Coin Purse of Charity
Scriptures
Promissory Note
Antique Panoply
Matured Greenwarish
Pretty Stone
Champion's Writ
Warden's Writ
Archmage's Writ
Quina's Note
Pilgrim's Charm
Unbowed Tree
Eager Fang
Gran Soren Uniform
Strongwarish
Badge of Merit
Rift Crystal
Unknown Item
Salvation's Badge
Manse Key
Skeleton Key
Love-In-The-Rough
Ne'er-Do-Part
Unknown Item
Unknown Item
Unknown Item
Wyrmking's Ring
Kept Scrag of Beast
Kept Beast-Steak
Kept Ambrosial Meat
Kept Sour Scrag of Beast
Kept Sour Beast-Steak
Kept Sour Ambrosial Meat
Kept Rotten Scrag of Beast
Kept Rotten Beast-Steak
Kept Rotten Ambrosial Meat
Kept Small Fish
Kept Large Fish
Kept Giant Fish
Kept Small Rank Fish
Kept Large Rank Fish
Kept Giant Rank Fish
Kept Small Rotten Fish
Kept Large Rotten Fish
Kept Giant Rotten Fish
Kept Berry
Kept Apple
Kept Grandgrapes
Kept Moldy Berry
Kept Moldy Apple
Kept Moldy Grandgrapes
Kept Rotten Berry
Kept Rotten Apple
Kept Rotten Grandgrapes
Kept Twigbean
Kept Carrot
Kept Pumpkin
Kept Moldy Twigbean
Kept Moldy Carrot
Kept Moldy Pumpkin
Kept Rotten Twigbean
Kept Rotten Carrot
Kept Rotten Pumpkin
Kept Egg
Kept Golden Egg
Kept Rotten Egg
Kept Sunbright
Kept Moonglow
Kept Wilted Blossom
Ferrystone
Maker's Finger
Portcrystal
Wakestone
Wakestone Shard
Wyrmward Perfume
Salomet's Grimoire Forgery
Gold Idol Forgery
Silver Idol Forgery
Bronze Idol Forgery
Wyrmking's Ring Forgery
Rift Fragment
Rift Cluster
Dragon's Gaze
Confidential Letter Forgery
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Iron Sword
Cutlass
Silver Rapier
Golden Rapier
Aneled Rapier
Broadsword
Trusty Sword
Undulant Sword
Undulant Gold
Undulant Black
Crossed Cinquedea
Dragon's Dogma
Bastard Sword
Golden Bastard
Aneled Bastard
Carnation
Tight Cinquedea
Ascalon
Wounded Fury
Force Hatchet
Rusted Sword
Mace
Thousand Troops
Obliteratrix
Golden Obliteratrix
Aneled Obliteratrix
Steel Beak
Beak of Gold
Aneled Beak
Threaded Cudgel
Dragon's Toll
Morgenstern
Bloodthirsty Beak
Thousand Stings
Golden Stings
Aneled Stings
Ingot Club
Totem Mace
Dragon's Presence
Sickening Skull
Royal Alms
Rusted Mace
Two-Hander
Steel Greatsword
Lifetaker
Soultaker
Soulbreaker
War Blade
Flamberge
Cassardi Flamberge
Saving Grace
Dwells-In-Light
Dragon's Bite
Lancer's Sword
Golden Lance
Aneled Lance
Gryphic Victory
Gryphic Gold
Gryphic Black
Wounded Heart
Dragon's Flight
Iraklis
Rusted Greatsword
Judgment
Mounted Pale
Golden Pale
Aneled Pale
Cyclops Sigil
Golden Cyclops Sigil
Aneled Cyclops Sigil
Triple Tooth
Teeth of Gold
Aneled Tooth
Ferric Talon
Bloody Thistle
Steel Urchin
Angel's Fist
Dragon's Repast
Black Matter
Chestcaver
Unknown Item
Cyclop's Bane
Stamina Hammer
Rusted Warhammer
Throatcutters
Signs of Valor
Crimson Teeth
Bardiche Daggers
Golden Bardiches
Aneled Bardiches
Vouge Daggers
Divine Razors
Stilettos
Golden Stilettos
Aneled Stilettos
Criteria
Dragon's Vein
Dragon's Pain
Snagdaggers
Snags of Gold
Aneled Snags
Unknown Item
Saurian Bane
Dowsing Spikes
Rusted Daggers
Wooden Staff
Favored Flower
Volant White
Unfettered Claw
Golden Claw
Aneled Claw
Cast Stone
Dragon's Nous
Ironclad Staff
Unspoken Grace
Golden Grace
Aneled Grace
Anchor To Heaven
Path To Heaven
Gleam Of Heaven
Favored Canopy
Frigid Finger
Unknown Item
Goblin Bane
Legion's Might
Rusted Staff
Common Archistaff
Favored Branches
Talarian White
Plucked Heart
Solar Providence
Eclipsed Providence
Dragon's Wit
Keen Dragon's Wit
Grievous Horns
Grievous Gold
Grevious Black
Meniscus
Golden Meniscus
Aneled Meniscus
Helical Archistaff
Solar Numen
Dragons Risen
Unknown Item
Evil Eyesight
Caged Fury
Rusted Archistaff
Eden's Warden
Caladbolg
Almace
Crescending Roar
Font of Fire
Malignance
Ardent Will
Fiery Talon
Rooted Gloom
Crimson Glare
Thunderclap
Divine Axis
Algid Bloom
Iron Shield
Pelta
Round Shield
Gran Soren Shield
Mark of the Chimera
Orilux Shield
Lustrous Targe
Sable Sentinel
Dragon's Aegis
Feather-Light Pelta
Scarred Sentinel
Dragon's Den
Hellfang
Brutish Wall
Rusted Shield
Wooden Wall
Magick Buckler
Fine Magick Buckler
Lustrous Greatshield
Blue Kite Shield
Wizard's Vizard
Knight's Honor
Angel's Sanctum
Dark Buckler
Dragon's Faith
Unknown Item
Unknown Item
Zombiebane
Brilliance
Rusted Magick Shield
Shortbow
Direwolf Bow
Sylvan Bow
Fluted Bow
Dragon's Rancor
Hunter's Bow
Pleached Limbs
Fey Whisper
Stalwart Bow
Unknown Item
Unknown Item
Griffinbane
Repeller Bow
Rusted Bow
Plain Longbow
Reinforced Longbow
Bespoke Longbow
Noble Limbs
Veteran's Arc
Dragon's Blink
Savage Fang
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Hydra Husk
Bezel Crown
Rusted Longbow
Gimble Gyre
Terminal Gyre
Herald's Helix
Master's Merle
Dragon's Breath
Dragon's Quickening
Magian Crutch
Metered Catharsis
Militant Dove
Rusted Spellbow
Cursed Bite
Cursed Light
Devilsbane
Shooting Star
Magebreaker
Virge of Madness
Unknown Item
Unknown Item
Scorched Pelta
Lambent Shield
Thunder Kite Shield
Scalding Razors
Kunai
Galvanic Razors
Chilling Razors
Heaven's Key
Frozen Tomorrow
Stagnant Surge
Thousandlimbs
White Hawk's Talon
Unknown Item
Plebian Shirt
Cloth Greaves
Faded Vest
Traveler's Shirt
Tunic
Bandages
Cassardi Shift
Fine Cassardi Shirt
Hemp Shirt
Leather Chestguard
Unknown Item
Linen Shirt
Riveted Coat
Assembled Vest
Quilted Jerkin
Cotton Tunic
Lady's Corset
Chain Mail
Braided Shirt
Chainmail Bracers
Bliaut
Light Outfit
Iron Vest
Blessed Vest
Brigandine Jerkin
Hard Leather Plate
Trooper Outfit
Unknown Item
Maiden's Camisole
Unknown Item
Silver Vest
Silver Chestplate
Forest Tunic
Alchemick Vest
Plated Coat
Hunter's Shirt
Gambeson
Doublet
Noblewoman's Corset
Dragonleather Vest
Unknown Item
Abyssinal Outfit
Crimson Jerkin
Silver Cuirass
Marshal's Bracers
Swordsman's Shirt
White Hawk Tunic
Unknown Item
Unknown Item
Unknown Item
Illusory Broadsword
Illusory Mark of the Chimera
Illusory Brigandine Jerkin
Illusory Laborer's Breeches
Illusory Divine Surcoat
Illusory Shadow Gauntlets
Illusory Shadow Greaves
Illusory Tattered Mantle
Illusory Crossed Cinquedea
Illusory Scarred Sentinel
Illusory Plated Coat
Illusory Laborer's Breeches
Illusory Clerical Cap
Illusory Grand Surcoat
Illusory Steel Gauntlets
Illusory Steel Sabatons
Illusory Vouge Daggers
Illusory Shortbow
Illusory Quiver
Illusory Chainmail Bracers
Illusory Translucent Hosen
Illusory Chestguard
Illusory Bandit's Glove
Illusory Chainmail Skirt
Illusory Ironclad Staff
Illusory Forest Tunic
Illusory Fine Cassardi Hosen
Illusory Wizard's Helm
Illusory Missionary's Robe
Illusory Runic Bangles
Illusory Leather Shoes
Short Pants
Traveler's Tights
Cotton Hosen
Leather Bandings
Cassardi Trousers
Fine Cassardi Hosen
Unknown Item
Hemp Hosen
Worker's Pants
Yellow Gaiters
Half Chain Hosen
Laced Leggings
Brown Leathers
Evening Tights
Bandit Stalkers
Urban Hosen
Twisted Leathers
Seeker Tights
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Laborer's Breeches
White Stockings
Full Chain Hosen
Black Gaiters
Huntsman's Trousers
Braided Hosen
Brown Laced Leggings
Iron Bandings
Silver Hosen
Alchemickal Hosen
Denim Hosen
Silk Lingerie
Swordsman's Pants
White Hawk Leggings
Gransys Flamberge
Boltbringer
Bitter End
Twinpaler
Twinterfang
Devil's Nail
Helmbarte Daggers
Sapfire Daggers
Framae Blades
Chilling Focus
Melting Focus
Dominion Claw
Unknown Item
Unknown Item
Leather Cap
Circlet
Leather Hood
Chain Coif
Faerie Hood
Bronze Sallet
Feather Hood
Verdant Hood
White Cap
Skulker's Mask
Horned Helm
Cyclops Veil
Red Leather Cap
Red Leather Hood
Dragon Band
Wizard's Helm
Lupine Veil
Incognito Mask
Bandit's Mask
Barreled Helm
Leather Circlet
Iron Helm
Gryphic Helm
Assassin's Mask
Iron Headgear
Twilight Hood
Guardian's Hood
Gossip's Mask
Summery Cowl
Chimeric Armet
Lion-Lord's Helm
Crowned Hood
Clerical Cap
Meloirean Helm
Steel Sallet
Coupled Headgear
Archwizard's Helm
Autumn Hood
Laurel Circlet
Meloirean Cyclops Veil
Direwolf Veil
Sultry Cowl
Crimson Armet
Grisly Skull
Golden Lion Helm
Dragon Knight's Helm
Sage's Hood
Barbarian Chief's Helm
Twilight Mask
Diadem
Dragonroar
Hero's Hood
Chaos Helm
Emissary Hood
Monomi Mask
Ancient Circlet
Heresy Hood
Beowulf Mask
Apollo Mask
Siegfried Mask
Saint George Mask
Silver Eyeglasses
Gold Eyeglasses
Black Eyeglasses
Red Eyeglasses
Farewell Hood
Wyrmfyre Vizard
Dragonseye Band
Dragonspulse Circlet
White Hawk Sallet
Bane Archistaff
Hallowed Dragon
Sanguine Stalk
Dragon's Roost
Dread Aspis
Purged Buckler
Diabolic Shield
Dragon's Ire
Darkening Storm
Dragon's Glaze
Revenant Wail
Dragon's Tempest
Blackwing Bow
Unknown Item
Unknown Item
Unknown Item
Skull Belts
Leather Jacket
Shabby Robe
Bone Armor
Bone Plate Armor
Leather Belts
Sectional Armor
Chestguard
Scholar's Coat
Healer's Robe
Bronze Cuirass
Leather Waistwrap
Mummer's Wear
Bronze Lorica
Hide Armor
Surcoat
Hunter's Jacket
Red Leather Armor
Unknown Item
Missionary's Robe
Frame Plate
Padded Armor
Sectional Iron Plate
Gryphic Armor
Iron Lorica
Weak Guard
Magician's Surcoat
Dalmatica
Grand Surcoat
Summery Pareo
Recluse's Robe
Maiden's Petticoat
Flutter Padding
Chimeric Half Plate
Scale Coat
Rex Lion Padding
Sage's Robe
Animistic Robe
Meloirean Plate
Steel Cuirass
Lamellar Jacket
Cardinal Surcoat
Royal Surcoat
Divine Surcoat
Golden Belt
Sultry Pareo
Crimson Robe
Archer's Culottes
Crimson Plate
Grisly Bone Armor
Golden Lion Padding
Matte Robe
Philosopher's Robe
Red Dragon Scale
Dark Lorica
Berserkin
Hero's Surcoat
Chaos Armor
Emissary Armor
Monomi Coat
Ancient Robe
Heresy Armor
Abyssinal Coat
Solar Armor
Asura Armor
Leather Protector
Swordsman's Plate
White Hawk Half-Plate
Patterned Gambeson
Unknown Item
Delta Guard
Silk Tights
Traveler's Hood
Minstrel's Band
Mistletoe Circlet
Immortal's Helm
Persecutor's Mask
Farseer's Cap
Adept's Hat
Ruminator's Monocle
Nether Helm
Hellfire Helm
Hood of Shadow
Hood of Oblivion
Grave Veil
Carrion Veil
Traveler's Vest
Novice's Coat
Unknown Item
Immortal's Coat
Cursed King's Belt
Trophy Jacket
Adept's Robe
Celestial Armor
Votary's Robe
Traitor's Armor
Hellfire Armor
Coat of Shadow
Coat of Oblivion
Grave Mantle
Carrion Mantle
Wizarding Gloves
Force Bangles
Immortal's Bracers
Trophy Bracers
Dragonwing Gloves
Blessed Sleeves
Wooden Bands
Talismanic Beads
Novice's Bracers
Funnybone Guards
Bandit's Glove
Scholar's Bangle
Navy Leather Gloves
Bronze Gauntlets
Hand Covers
Bronze Bangles
Scale Armguard
Assailant's Bracers
Iron Bracers
Red Leather Glove
Tiger Bangle
Silver Bands
Iron Armguard
Gryphic Gauntlets
Iron Manicae
Assembled Sleeves
Unknown Item
Runic Bangles
Leather Gloves
Master's Bracers
Chimeric Gauntlets
Arm Crest
Scarlet Hand Covers
Jade Bangles
Meloirean Armguard
Steel Gauntlets
Dragon Hide Bracers
Assassin's Armguards
Alchemickal Bangles
Champion's Bangles
Black Leather Gloves
Darkened Gloves
Crimson Gauntlets
Grisly Bracers
Twilight Manicae
Burnished Bracers
Gleaming Bangles
Golden Wristbands
Dragonscale Arm
Shadow Gauntlets
Hero's Gauntlets
Chaos Gauntlets
Emissary Bracers
Monomi Bracers
Ancient Bangles
Heresy Armguards
Abyssinal Bracers
Farewell Gloves
Gloves of Might
Swordsman's Bracers
White Hawk Gauntlets
Crested Armguards
Bonds of the Dragon
Sinner's Gauntlets
Hellfire Gauntlets
Grave Claws
Carrion Claws
Worker's Gloves
Unknown Item
Budget Greaves
Leather Cuisses
Leather Shoes
Novice Breeches
Cassardi Greaves
Metal Greaves
Fur Greaves
Scholar's Boots
Iron Leg Guards
Steel-Toed Boots
Bronze Sabatons
Fur &amp; Cuisses
Riveted Boots
Blue Longkilt
Dusk Shoes
Steel Sabatons
Battle Greaves
Downcuffs &amp; Cuisses
Red Leather Cuisses
Mage's Shoes
Over-Knee Boots
Scale Greaves
Iron Boots
Iron Cuisses
Gryphic Greaves
Chainmail Skirt
Assembled Breeches
Wizard's Boots
Red Longkilt
Fine Over-Knee Boots
Raptor Cuisses
Gloaming Shoes
Chimeric Sabatons
Thick Fur Greaves
Assassin's Breeches
Nimble Cuisses
Red Over-Knee Boots
Meloirean Greaves
Leather Ocreae
Striker's Greaves
Royal Cuisses
Purple Longkilt
Molten Boots
Dark Over-Knee Boots
Flame Skirt
Superior Cuisses
Crimson Sabatons
Grisly Greaves
Carmine Breeches
Exotic High Boots
Shadow Greaves
Dragonbeards
Twilight Greaves
Holy Cuisses
Hero's Cuisses
Chaos Greaves
Emissary Greaves
Monomi Greaves
Ancient Greaves
Heresy Greaves
Abyssinal Greaves
Swordsman's Greaves
White Hawk Cuisses
Foreign Waistguard
Hinterland Waistguard
Extrinsic Waistguard
Immortal's Sabatons
Trophy Boots
Mercenary Slogs
Dragonwing Boots
Assault Boots
Apostate's Anklet
Betrayer's Greaves
Hellfire Greaves
Grave Greaves
Carrion Greaves
Tormenter's Mask
Dragonwing Circlet
Gauntlets of Shadow
Gauntlets of Oblivion
Boots of Shadow
Boots of Oblivion
Adept's Mantle
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Leather Cape
Shed Cape
Shoulder Cape
Ebon Neck Wrap
Scholar's Cape
Mahogany Cape
Direwolf Cape
Adventurer's Cloak
Feather Cape
Knight's Mantle
Harpy Cloak
Alchemickal Cloak
Violet Neck Wrap
Paladin's Mantle
Gryphic Cloak
Scarlet Cape
Pauldron
Feral Cape
Royal Mantle
Dignified Cape
Dragon Knight's Cloak
Ancient Cape
Lordly Cloak
Hero's Cape
Monomi Neck Wrap
Heresy Cloak
Nebula Cape
Magnanimous Cloak
Farewell Cloak
Baleful Nails
Ogre Bone
Reinforced Nails
Barbed Nails
Ring of Gules
Ring of Azure
Ring of Purpure
Ring of Sable
Ring of Argent
Ring of Ruby
Ring of Sapphire
Ring of Amethyst
Ring of Pearl
Ring of Onyx
Rose Ring
Iris Ring
Violet Ring
Lily Ring
Aeonium Ring
Cleansing Earring
Restless Earring
Nimble Earring
Free-Spoken Earring
Benevolent Earring
Sight Earring
Faithful Earring
Exuberant Earring
Stalwart Earring
Noble Earring
Harmonious Earring
Dignified Earring
Indomitable Earring
Dragonblood
Silver Ring
Golden Ring
Platinum Ring
Red Star Ring
Red Star Earring
Green Star Ring
Green Star Earring
Blue Star Ring
Blue Star Earring
Premium Ring
Premium Earring
Wyrm Hunt Mantle
Beastly Mantle
Conqueror's Mantle
Tattered Mantle
Swordsman's Mantle
White Hawk Cape
Divine Embrace
Unknown Item
Nomad's Cloak
Sovereign's Mantle
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Blasphemer's Cloak
Hellfire Cloak
Vandal's Ring
Bloody Knuckle
Stonewall Earring
Ring of Desiccation
Ring of Perseverance
Wanderlust Ring
Virtuoso Ring
Preceptor Ring
Master Ring
Savior Ring
Unknown Item
Unknown Item
Unknown Item
Robe of Enlightenment
Tiara of Enlightenment
Jester's Cap
Wavering Cloth
The Lion's Spine
Vagabond Armor
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Set of Servant's Garb
Set of Duke's Clothing
Set of Salvation Robes
Set of Fisherman's Garb
Set of Fisherman's Tatters
Set of Royal Guard Armor
Set of Lady's Garb
Set of Caretaker's Garb
Forest Tunic Set
Unknown Item
Set of Prisoner's Rags
Set of Jester's Motley
Nameless Armor Set
Captain's Armor Set
Set of Fop's Trek Wear
Set of Voldoan Armor
Set of Priest Vestments
Set of Lady's Trek Wear
Set of Queen's Clothing
Set of Nun Vestments
Unknown Item
Unknown Item
Unknown Item
Royal Banner
Enlistment Corps Banner
War Bugle
Fishing Bob
Bucket
Hoe
Spade
Scythe
Hammer
Trowel
Work Table
Quill
Wooden Board
Tray
Sconce
Blank Scroll
Broom
Ancient Scroll
Shackle
Large Coin Pouch
Coin Pouch
Small Coin Pouch
Giant Coin Pouch
Hunk of Ore
Goblin Horn
Wormwood Sap
Iron Blade Piece
Slate-Colored Horn
Curious Wine
Ebon Blade Piece
Night Terror's Horn
Blood Decanter
Small Fang
Wolf Pelt
Large Fang
Direwolf Pelt
Hellhound Fang
Hellhound Pelt
Ember Crystal
Saurian Scale
Poison Sac
Fisheye Stone
Saurian Tail
Striped Saurian Skin
Yellow Poison Sac
Incarnadine Scale
Inky Saurian Skin
Acid Sac
Snowy Saurian Skin
Argentine Sac
Purpure Crystal
Harpy Pinion
Harpy Rectrix
Elongated Claw
Glacial Pinion
Glacial Rectrix
Spurious Wing
Sinistone
Petrifactor
Bastard Wing
Shroud
Putrid Gold Tooth
Necrophagous Loin
Rusted Plate
Aged Insignia
Hex Runes
Brawn Runes
Miasmite Shard
Miasmite
Eldricite Shard
Eldricite
Astracite Shard
Astracite
Black Crystal
Immortelle
Vengeful Mirror
Wailing Crystal
Craft Bone
Scrap Iron
Hard Bone
Dark Peridot
Fell-Lord's Bone
Lordly Emblem
Mandrake
Torn Grimoire Preface
Torn Grimoire Appendix
Agate
Forgotten Arcanum
Pigeon's Blood
Rugged Bone
Rugged Tusk
Misshapen Eye
Ogre Spur
Ogre Tooth
Unspeakable Meat
Dappled Ore
Magick Medal
Hunk of Gold Ore
Electrum
Griffin Pinion
Great Griffin Claw
Slick Black Pinion
Cockatrice Beak
Hydra's Lifeblood
Poison Hydra Fang
Black Hydra Scale
White Hydra Scale
Hydra Gallstone
Freakish Claw
Freakish Mane
Freakish Scale
Black Freakish Claw
Black Freakish Mane
Black Freakish Horn
Black Freakish Scale
Malecryst
Evil Eyeball
Malecryst Shard
Dragon Scale
Crimson Dragon Scale
Putrid Dragon Scale
Great Dragon Horn
Great Dragon Alula
Great Dragon Claw
Great Dragon Fang
Indurated Dragonsblood
Dragon Horn
Dragon Claw
Azure Dragon Scale
Amber Dragon Scale
Virid Dragon Scale
Rabbit Pelt
Snakeskin
Spider Venom
Unknown Item
Desiccated Herbs
Stone-Moss Poultice
Foreign Medicament
Pickled Mushrooms
Backfat Oil
Staminal Drench
Crimson Concoction
Cerulean Concoction
Verdigris Concoction
Violet Concoction
Balmy Perfume
Balmy Incense
Rousing Perfume
Rousing Incense
Herb Ale
Select Herb Ale
Distilled Herb Ale
Secret Herb Ale
Finest Herb Ale
Fragrant Herb Ale
Perfect Herb Ale
Detoxicating Powder
Oak Leaf Oil
Vigilite
Throat Remedy
Peppermint Seed
Nostalgia Dust
Drop of Deliverance
Frozen Holy Water
Cockatrice Liquor
Font of Vigor
Font of Constitution
Tagilus's Miracle
Steel Nut Salve
Salomet's Secret
Decoction of Bandlily
Mushroom Potage
Sobering Wine
Martyr's Talisman
Golden Talisman
Mage's Talisman
Iridescent Talisman
Vigor Extract
Serenity Extract
Silverwheat Paste
Goldbean Grind
Leaden Globe
Headless Icon
Warlock's Incense
Cleric's Incense
Goddess Cameo
Wroth Mask
Decaying Grimoire
"The Sundering Spear" Tome
Fulgurous Lord Tome
"Winter's Path" Tome
Jewel of Silence
Jewel of Darkness
Jewel of Time
Jewel of Health
Jewel of Endurance
Jewel of Petrifaction
Jewel of Toxicity
Jewel of Sleep
Jewel of Vicissitude
Unknown Item
Sweet Pollen
Cloudwine
Shadowcap
Unremarkable Ore
White Sage
Sand-Layer Ore
Stagnant Shroom
Purple Anise
Firefly Stone
Capeflower
King Bay Leaf
Cassardite
Lava Flower
Catacomb Gold
Flammica
Unknown Item
Imperial Acid
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Copperstone
Godsthrone Blossom
Lodestone
Reminishroom
Destiny Grass
Devilwort
Fiend's Perch
Grandblossom
Unknown Item
Unknown Item
Unknown Item
Gloamcap
Cragwort
Burst-Rock
Windmill Flower
Scarlet Angelica
Nightcry
Waterfell Gentian Root
Waterfell Gentian Leaf
z
Polar Mushroom
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Alluvial Yore-Ore
Bladeleaf
Shiverberry
Southron Iron
Southron Oregano
Thornflower
Chaffstem
Nurse Log Sap
Unknown Item
Gransys Herb
Toadstool Sitter
Spiny Nut
Loneflower
Anathema Grass
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Wintry Herb
White Orchid
Sorrowstone
Jasper Blossom
Unknown Item
Unknown Item
Ancient Ore
Droughtshroom
Cursed Carving
Snakeskin Purse
Priceless Artifact
Brick
Festival Pie
Gran Soren Rubble
Noonflower
Unknown Item
Tuft of Hair
Spring Water
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Symone's Petition
Fedel's Petition
Geffrey's Petition
Jasper's Condemnation
Sara's Condemnation
Pip's Condemnation
Soiled Affidavit
Tattered Affidavit
Sweat-Stained Affidavit
Blurred Affidavit
Chamberlain's Affidavit
Dirty Affidavit
Moldy Affidavit
Worn Affidavit
Ripped Affidavit
Gift Ledger
Drake's Tear
Wyrm's Tear
Wyvern's Tear
Scather's Elixir
Medicant's Elixir
Mitigator's Elixir
Challenger's Elixir
Utilitarian's Elixir
Guardian's Elixir
Nexus's Elixir
Pioneer's Elixir
Acquisitor's Elixir
Neutralizing Elixir
Hobgoblin Tactics
Goblin Strategies
Wolf Strategy Vol 1
Wolf Strategy Vol 2
Wolf Strategy Vol 3
Skeleton Knight Tactics
Skeleton Strategies
Saurian Tactics Vol 1
Saurian Tactics Vol 2
Saurian Strategy Vol 1
Saurian Strategy Vol 2
Saurian Strategy Vol 2
Undead Tactics Vol 1
Undead Tactics Vol 2
Undead Strategy Vol 1
Undead Strategy Vol 2
Harpy Strategies
Ghost Tactics Vol 1
Ghost Tactics Vol 2
Ghost Strategies
Ogre Strategy Vol 1
Ogre Strategy Vol 2
Cyclops Tactics
Cyclops Strategy Vol 1
Cyclops Strategy Vol 2
Golem Tactics
Golem Strategy Vol 1
Golem Strategy Vol 2
Chimera Tactics
Chimera Strategy Vol 1
Chimera Strategy Vol 2
Hydra Tactics
Hydra Strategy Vol 1
Hydra Strategy Vol 2
Griffin Strategy Vol 1
Griffin Strategy Vol 2
Griffin Strategy Vol 3
Cockatrice Strategy Vol 1
Cockatrice Strategy Vol 2
Evil Eye Strategy Vol 1
Evil Eye Strategy Vol 2
Vile Eye Strategy Vol 1
Vile Eye Strategy Vol 2
Wight Tactics
Lich Tactics
Draconian Strategy Vol 1
Draconian Strategy Vol 2
&lt;ITNO 185&gt; 34
&lt;ITNO 185&gt; 51
&lt;ITNO 185&gt; 77
&lt;ITNO 185&gt; 33
&lt;ITNO 185&gt; 69
&lt;ITNO 185&gt; 81
&lt;ITNO 185&gt; 82
&lt;ITNO 185&gt; 83
&lt;ITNO 185&gt; 84
&lt;ITNO 185&gt; 85
&lt;ITNO 185&gt; 86
&lt;ITNO 185&gt; 1
&lt;ITNO 185&gt; 2
&lt;ITNO 185&gt; 3
&lt;ITNO 185&gt; 70
&lt;ITNO 185&gt; 4
&lt;ITNO 185&gt; 11
&lt;ITNO 185&gt; 22
&lt;ITNO 185&gt; 31
&lt;ITNO 185&gt; 12
&lt;ITNO 185&gt; 32
&lt;ITNO 185&gt; 5
&lt;ITNO 185&gt; 62
&lt;ITNO 185&gt; 14
&lt;ITNO 185&gt; 92
&lt;ITNO 185&gt; 15
&lt;ITNO 185&gt; 6
&lt;ITNO 185&gt; 9
&lt;ITNO 185&gt; 38
&lt;ITNO 185&gt; 37
&lt;ITNO 185&gt; 63
&lt;ITNO 185&gt; 66
&lt;ITNO 185&gt; 61
&lt;ITNO 185&gt; 67
&lt;ITNO 185&gt; 94
&lt;ITNO 185&gt; 8
Vermillion Face Pigment
Gold Face Pigment
Bright Green Face Pigment
Turquoise Face Pigment
Blue Face Pigment
Lavender Face Pigment
White Face Pigment
Red Hair Dye
Pink Hair Dye
Sky Blue Hair Dye
Cornflower Blue Hair Dye
Pine Green Hair Dye
Bright Green Hair Dye
Yellow Hair Dye
Red Skin Pigment
Yellow Skin Pigment
Green Skin Pigment
Blue Skin Pigment
Plum Skin Pigment
Ash Gray Skin Pigment
Ivory Skin Pigment
Art of Metamorphosis
Secret of Metamorphosis
&lt;ITNO 185&gt; 95
&lt;ITNO 185&gt; 96
&lt;ITNO 185&gt; 68
&lt;ITNO 185&gt; 65
&lt;ITNO 185&gt; 72
&lt;ITNO 185&gt; 93
&lt;ITNO 185&gt; 73
&lt;ITNO 185&gt; 100
&lt;ITNO 185&gt; 98
&lt;ITNO 185&gt; 79
&lt;ITNO 185&gt; 74
&lt;ITNO 185&gt; 27
&lt;ITNO 185&gt; 71
&lt;ITNO 185&gt; 7
&lt;ITNO 185&gt; 21
&lt;ITNO 185&gt; 44
&lt;ITNO 185&gt; 43
&lt;ITNO 185&gt; 47
&lt;ITNO 185&gt; 45
&lt;ITNO 185&gt; 46
&lt;ITNO 185&gt; 42
&lt;ITNO 185&gt; 49
&lt;ITNO 185&gt; 41
&lt;ITNO 185&gt; 48
&lt;ITNO 185&gt; 50
&lt;ITNO 185&gt; 75
&lt;ITNO 185&gt; 23
&lt;ITNO 185&gt; 54
&lt;ITNO 185&gt; 19
&lt;ITNO 185&gt; 88
&lt;ITNO 185&gt; 89
&lt;ITNO 185&gt; 16
&lt;ITNO 185&gt; 52
&lt;ITNO 185&gt; 28
&lt;ITNO 185&gt; 29
&lt;ITNO 185&gt; 80
&lt;ITNO 185&gt; 58
&lt;ITNO 185&gt; 35
&lt;ITNO 185&gt; 40
&lt;ITNO 185&gt; 39
&lt;ITNO 185&gt; 87
&lt;ITNO 185&gt; 56
&lt;ITNO 185&gt; 55
&lt;ITNO 185&gt; 17
&lt;ITNO 185&gt; 30
&lt;ITNO 185&gt; 64
&lt;ITNO 185&gt; 60
&lt;ITNO 185&gt; 97
&lt;ITNO 185&gt; 20
&lt;ITNO 185&gt; 13
&lt;ITNO 185&gt; 36
&lt;ITNO 185&gt; 59
&lt;ITNO 185&gt; 57
&lt;ITNO 185&gt; 24
&lt;ITNO 185&gt; 18
&lt;ITNO 185&gt; 25
&lt;ITNO 185&gt; 26
&lt;ITNO 185&gt; 53
&lt;ITNO 185&gt; 99
&lt;ITNO 185&gt; 90
&lt;ITNO 185&gt; 10
&lt;ITNO 185&gt; 76
&lt;ITNO 185&gt; 78
&lt;ITNO 185&gt; 91
Unknown Item
Bitterblack Novelty Lv1
Bitterblack Novelty Lv2
Bitterblack Novelty Lv3
Bitterblack Gear Lv1
Bitterblack Gear Lv2
Bitterblack Gear Lv3
Bitterblack Weapon Lv1
Bitterblack Weapon Lv2
Bitterblack Weapon Lv3
Bitterblack Armor Lv1
Bitterblack Armor Lv2
Bitterblack Armor Lv3
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Moonbeam Gem
Macabre Sculpture
Void Key
Fiend-luring Incense
Eternal Ferrystone
Invalid Message
Unknown Item
Unknown Item
Unknown Item
Unknown Item
Lava Rock
Hunk of Platinum
Moonstone
Diamond
Rubicite
Kingwarish
Lunanise
Corpse Nettle
Nightfall Cresset
Cragshadow Morel
Crimplecap
Pyrepipe
Unknown Item
Rift Crystal Speck
Rift Crystal Flake
Rift Crystal Fragment
Rift Crystal Chunk
Rift Bicrystal
Rift Polycrystal
Perfect Rift Crystal
Daimon's Claw
Daimon's Horn
Vile Wakestone
Sorcerer's Quartz
Violet Carapace
Abyssal Eye
Cursed Dragon Scale
Cursed Dragon Horn
Netherstone
Corrupt Remains
Ruinous Relic
Sinister Hide
Sinister Fang
Beastial Eye
Scythe Shard
Bone Lantern
Ox Horn
Bloodied Chain
Blue Iron Buckles
Macabre Eye
Cyclops Fang
Rugged Femur
Fae-Silver Plate
Phantom Orb
Elder Ogre Claw
Elder Ogre Fang
Poxy Flesh
Bright Amber Scale
Firedrake Fang
Bright Azure Scale
Frostwyrm Scute
Bright Virid Scale
Thunderwyvern Horn
Supple Dragon Pelt
Greatwyrm Stone
Warmonger's Horn
Shamanic Reagents
Skull Pendant
Gnarled Fingernails
Befouled Gold Veneer
Tainted Silver Veneer
Bone Crest
Great Bone Shard
Gargantuan Skull
Rotten Baneflesh
Fetid Gallstone
Banshee Locks
Banshee Larynx
Siren Patagium
Siren Tailfin
Strigoi Barb
Bloodred Crystal
Infernal Hide
Crimson Stone
Lizardscale Pelt
Lizard Horn
Venomous Cuspid
Mottled Leather
Septiscopic Crystal
Leapworm Jelly
Maleficent Heart Shard
Maleficent Heart
Sullied Rift Fragment
Bloodstained Periapt
Idol of the All-Mother
Striped Pelt
Ironblack Pelt
Moonshimmer Pelt
Large Fisheye Stone
Unknown Item
Scroll of Predation
Scroll of Fortune
Scroll of Tenacity
Scroll of Conveyance
Scroll of Acquisition
Scroll of Prolongation
Unknown Item
Scroll of Mettle
Scroll of Athleticism
Scroll of Recuperation
Scroll of Adhesion
Scroll of Opportunism
Scroll of Flow
Scroll of Grace
Scroll of Facility
Elite Lantern
Unknown Item
Ring of Thrift
Elite Lantern (Half-Full)
Elite Lantern (No Fuel)
Unknown Item
Expediting Papers
Unknown Item
Unknown Item
Light Pickaxe
Staff-Bearer's Ring (DL)
Liftstone (DL)
Swordsman's Ring (DL)
Daggerist's Ring (DL)
Liftstone (DL)
Rancid Bait Meat
Fiendish Essence
Fiendish Extract
Month-Dried Harspud
Decade-Dried Harspud
Liquid Effluvium
Liftstone (DL)
Dreamwing Nostrum
Jewel of Antilight
Jewel of Summoning
"Shattered Earth" Tome
"Surging Light" Tome
Lordly Tonic
Godly Analeptic
Auspicious Incense
Vivifying Incense
Liftstone
Swordsman's Ring
Swordsman's Band
Shieldsman's Ring
Daggerist's Ring
Daggerist's Band
Bowman's Ring
Staff-Bearer's Ring
Staff-Bearer's Band
Magick Shieldsman's Ring
Magick Shieldsman's Band
Magick Bowman's Ring
Magick Bowman's Band
Fighter's Ring
Fighter's Band
Strider's Ring
Strider's Band
Mage's Ring
Mage's Band
Warrior's Ring
Warrior's Band
Ranger's Ring
Ranger's Band
Sorcerer's Ring
Sorcerer's Band
Mystic Knight's Ring
Mystic Knight's Band
Magick Archer's Ring
Magick Archer's Band
Assassin's Ring
Assassin's Band
Staff Enchanter's Ring
Staff Enchanter's Band
Shield Enchanter's Ring
Shield Enchanter's Band
Used
*/
[Enable]
[Disable]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>78</ID>
      <Description>"----&gt; Teleport"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(teleport,32,DDDA.exe)

label(t_1) //Teleport
aobscanmodule(t_aob1,DDDA.exe,F3 0F 11 76 48 F3 0F 58 6E 44)
registersymbol(t_aob1)
label(returnhere_t_1)

label(t_orig) //Original Code

label(saveLocation)
label(saveLocation_status)
registersymbol(saveLocation_status)
label(saved_X)
registersymbol(saved_X)
label(saved_Z)
registersymbol(saved_Z)
label(saved_Y)
registersymbol(saved_Y)

label(goToSaved)
label(goToSaved_status)
registersymbol(goToSaved_status)

label(goToWaypoint)
label(goToWaypoint_status)
registersymbol(goToWaypoint_status)

label(gw_1) //Get Waypoint
aobscanmodule(gw_aob1,DDDA.exe,F3 0F 10 48 04 F3 0F 10 50 08 EB * F3 0F 10 05)
registersymbol(gw_aob1)
label(returnhere_gw_1)

label(waypoint_X)
registersymbol(waypoint_X)
label(waypoint_Y)
registersymbol(waypoint_Y)

teleport:
//--------------------------------------------------//
t_1:
cmp [esi+100],#16448
jne t_orig
cmp [saveLocation_status],1
je saveLocation
cmp [goToSaved_status],1
je goToSaved
cmp [goToWaypoint_status],1
je goToWaypoint
movss [esi+48],xmm6
jmp returnhere_t_1
//--------------------------------------------------//
saveLocation:
movss [esi+48],xmm6
fld [esi+40]
fstp [saved_X]
fld [esi+44]
fstp [saved_Z]
fld [esi+48]
fstp [saved_Y]
mov [saveLocation_status],0
jmp returnhere_t_1

saveLocation_status:
dd 1

saved_X:
dd 0

saved_Z:
dd 0

saved_Y:
dd 0
//--------------------------------------------------//
goToSaved:
movss [esi+48],xmm6
fld [saved_X]
fstp [esi+40]
fld [saved_Z]
fstp [esi+44]
fld [saved_Y]
fstp [esi+48]
mov [goToSaved_status],0
jmp returnhere_t_1

goToSaved_status:
dd 0
//--------------------------------------------------//
goToWaypoint:
movss [esi+48],xmm6
fld [waypoint_X]
fstp [esi+40]
fld [waypoint_Y]
fstp [esi+48]
mov [goToWaypoint_status],0
jmp returnhere_t_1

goToWaypoint_status:
dd 0
//--------------------------------------------------//
t_orig:
movss [esi+48],xmm6
jmp returnhere_t_1
//--------------------------------------------------//
gw_1:
movss xmm1,[eax+04]
fld [eax]
fstp [waypoint_X]
fld [eax+08]
fstp [waypoint_Y]
jmp returnhere_gw_1

waypoint_X:
dd 0

waypoint_Y:
dd 0
//--------------------------------------------------//

t_aob1:
jmp t_1
returnhere_t_1:

gw_aob1:
jmp gw_1
returnhere_gw_1:


[Disable]

t_aob1:
db F3 0F 11 76 48
unregistersymbol(t_aob1)

unregistersymbol(saveLocation_status)
unregistersymbol(saved_X)
unregistersymbol(saved_Z)
unregistersymbol(saved_Y)

unregistersymbol(goToSaved_status)

unregistersymbol(goToWaypoint_status)

gw_aob1:
db F3 0F 10 48 04
unregistersymbol(gw_aob1)

unregistersymbol(waypoint_X)
unregistersymbol(waypoint_Y)

dealloc(teleport)

/*
37C 4 #69
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>87</ID>
          <Description>"Save Location"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>saveLocation_status</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>110</Key>
                <Key>103</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>88</ID>
          <Description>"Go To Saved"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>goToSaved_status</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>110</Key>
                <Key>104</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"Go To Waypoint"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>goToWaypoint_status</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>110</Key>
                <Key>105</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>86</ID>
          <Description>"See Coordinates"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>83</ID>
              <Description>"Saved X"</Description>
              <VariableType>Float</VariableType>
              <Address>saved_X</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>84</ID>
              <Description>"Saved Z"</Description>
              <VariableType>Float</VariableType>
              <Address>saved_Z</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>85</ID>
              <Description>"Saved Y"</Description>
              <VariableType>Float</VariableType>
              <Address>saved_Y</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>92</ID>
              <Description>"Waypoint X"</Description>
              <VariableType>Float</VariableType>
              <Address>waypoint_X</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>93</ID>
              <Description>"Waypoint Y"</Description>
              <VariableType>Float</VariableType>
              <Address>waypoint_Y</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>183</ID>
      <Description>"Modify Character Stats"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>194</ID>
          <Description>"Player Stats"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>199</ID>
              <Description>"Weight (Check to Freeze)"</Description>
              <Color>00FF00</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>DDDA.exe+14F641C</Address>
              <Offsets>
                <Offset>794CE4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>193</ID>
              <Description>"Level"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>DDDA.exe+14F641C </Address>
              <Offsets>
                <Offset>A7DD0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>198</ID>
              <Description>"RC"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>DDDA.exe+14F641C </Address>
              <Offsets>
                <Offset>A7A1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>195</ID>
              <Description>"Gold"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>DDDA.exe+14F641C </Address>
              <Offsets>
                <Offset>A7A18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>197</ID>
              <Description>"DCP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>DDDA.exe+14F641C </Address>
              <Offsets>
                <Offset>A7A14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>196</ID>
              <Description>"XP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>DDDA.exe+14F641C </Address>
              <Offsets>
                <Offset>A7994</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>254</ID>
              <Description>"Stats"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF8000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>250</ID>
                  <Description>"Current HP"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A796C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>246</ID>
                  <Description>"HP"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A7970</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>252</ID>
                  <Description>"HP"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A7974</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>251</ID>
                  <Description>"Current Stamina"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A7978</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>249</ID>
                  <Description>"+Stamina"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A797C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>253</ID>
                  <Description>"Stamina"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A7980</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>244</ID>
                  <Description>"Strength"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A7984</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>245</ID>
                  <Description>"Defenses"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A7988</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>248</ID>
                  <Description>"Magick"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A798C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>247</ID>
                  <Description>"Magick Defenses"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A7990</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>200</ID>
              <Description>"Vocation Ranks (1-9)"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>188</ID>
                  <Description>"Sorcerer Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A79C0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>189</ID>
                  <Description>"Ranger Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A79BC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>203</ID>
                  <Description>"Warrior Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A79B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>184</ID>
                  <Description>"Magic Archer Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A79B4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>185</ID>
                  <Description>"Assassin Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A79B0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>186</ID>
                  <Description>"Mystic Knight Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A79AC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>187</ID>
                  <Description>"Mage Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A79A8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>202</ID>
                  <Description>"Strider Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A79A4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>201</ID>
                  <Description>"Fighter Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A79A0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>190</ID>
          <Description>"Pawn Stats"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>204</ID>
              <Description>"Level"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>DDDA.exe+14F641C </Address>
              <Offsets>
                <Offset>A85C0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>191</ID>
              <Description>"DCP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>DDDA.exe+14F641C </Address>
              <Offsets>
                <Offset>A8204</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>205</ID>
              <Description>"XP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>DDDA.exe+14F641C </Address>
              <Offsets>
                <Offset>A8184</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>265</ID>
              <Description>"Stats"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>264</ID>
                  <Description>"Current HP"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A815C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>263</ID>
                  <Description>"HP"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A8160</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>262</ID>
                  <Description>"HP"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A8164</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>261</ID>
                  <Description>"Current Stamina"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A8168</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>260</ID>
                  <Description>"+Stamina"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A816C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>259</ID>
                  <Description>"Stamina"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A8170</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>258</ID>
                  <Description>"Strength"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A8174</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>257</ID>
                  <Description>"Defenses"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A8178</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>256</ID>
                  <Description>"Magick"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A817C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>255</ID>
                  <Description>"Magick Defenses"</Description>
                  <VariableType>Float</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A8180</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>206</ID>
              <Description>"Vocation Ranks (1-9)"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>212</ID>
                  <Description>"Sorcerer Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A81B0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>211</ID>
                  <Description>"Ranger Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A81AC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>210</ID>
                  <Description>"Warrior Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A81A8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>209</ID>
                  <Description>"Mage Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A8198</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>208</ID>
                  <Description>"Strider Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A8194</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>207</ID>
                  <Description>"Fighter Rank"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>DDDA.exe+14F641C </Address>
                  <Offsets>
                    <Offset>A8190</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Undead (party)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(hpWrite1AOB,DDDA.exe,F3 0F 11 89 9C 02 00 00 89 B7 F4 3D 00 00)
registersymbol(hpWrite1AOB)
aobscanmodule(rhpReadOnHitAOB,DDDA.exe,F3 0F 10 47 08 8B 8F B4 01 00 00)
registersymbol(rhpReadOnHitAOB)
aobscanmodule(rhpFallDamageCalAOB,DDDA.exe,8B 54 24 24 52 8B C7)
registersymbol(rhpFallDamageCalAOB)

///

label(pPartyHP)
registersymbol(pPartyHP)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx+8],ffffffff
jne @f
pushad
push 00000004
push ecx
call isbadreadptr
test eax,eax
popad
jnz originalcode
mov edx,[ecx]
cmp [edx+74],0
je originalcode

@@:
test eax,eax
jz originalcode

mov edx,[ecx+8]
cmp edx,4
jae originalcode
mov [pPartyHP+edx*4],eax

originalcode:
movss [ecx+0000029C],xmm1

exit:
jmp returnhere

///
pPartyHP:
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
xor ecx,ecx
@@:
cmp [pPartyHP+ecx*4],edi
je @f
inc ecx
cmp ecx,4
jl @b
jmp originalcode2

@@:
movss xmm0,[edi+8]
comiss xmm0,[esp+c]
ja originalcode2
mov [edi+8],(float)1
movss xmm0,[esp+c]
addss xmm0,[edi+8]
movss [edi+8],xmm0

originalcode2:
movss xmm0,[edi+08]

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
xor edx,edx
@@:
cmp [pPartyHP+edx*4],ebp
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode3

@@:
xorps xmm1,xmm1
comiss xmm0,xmm1
jae originalcode3

addss xmm0,[ebp+8]
mov edx,(float)1
movd xmm1,edx
comiss xmm0,xmm1
jae @f
mov edx,(float)-1
movd xmm1,edx
movss xmm0,[ebp+8]
addss xmm0,xmm1
mulss xmm0,xmm1
movss [esp+20],xmm0

@@:
movss xmm0,[esp+20]

originalcode3:
mov edx,[esp+24]
push edx

exit3:
jmp returnhere3

///

hpWrite1AOB: //"DDDA.exe"+761311:
jmp newmem
nop
nop
nop
returnhere:

rhpReadOnHitAOB: //"DDDA.exe"+3743C1:
jmp newmem2
returnhere2:

rhpFallDamageCalAOB: //"DDDA.exe"+485F86:
jmp newmem3
returnhere3:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hpWrite1AOB: //"DDDA.exe"+761311:
db F3 0F 11 89 9C 02 00 00
//Alt: movss [ecx+0000029C],xmm1
unregistersymbol(hpWrite1AOB)
dealloc(newmem2)
rhpReadOnHitAOB: //"DDDA.exe"+3743C1:
db F3 0F 10 47 08
//Alt: movss xmm0,[edi+08]
unregistersymbol(rhpReadOnHitAOB)
dealloc(newmem3)
rhpFallDamageCalAOB: //"DDDA.exe"+485F86:
db 8B 54 24 24 52
//Alt: mov edx,[esp+24]
//Alt: push edx
unregistersymbol(rhpFallDamageCalAOB)

unregistersymbol(pPartyHP)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>192</ID>
          <Description>"HP 1"</Description>
          <VariableType>Float</VariableType>
          <Address>pPartyHP+0*4</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>71</Key>
              </Keys>
              <Value>(Max 1)</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>266</ID>
              <Description>"Max 1"</Description>
              <VariableType>Float</VariableType>
              <Address>pPartyHP+0*4</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>267</ID>
          <Description>"HP 2"</Description>
          <VariableType>Float</VariableType>
          <Address>pPartyHP+1*4</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>71</Key>
              </Keys>
              <Value>(Max 2)</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>268</ID>
              <Description>"Max 2"</Description>
              <VariableType>Float</VariableType>
              <Address>pPartyHP+1*4</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>269</ID>
          <Description>"HP 3"</Description>
          <VariableType>Float</VariableType>
          <Address>pPartyHP+2*4</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>71</Key>
              </Keys>
              <Value>(Max 3)</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>270</ID>
              <Description>"Max 3"</Description>
              <VariableType>Float</VariableType>
              <Address>pPartyHP+2*4</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>271</ID>
          <Description>"HP 4"</Description>
          <VariableType>Float</VariableType>
          <Address>pPartyHP+3*4</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>71</Key>
              </Keys>
              <Value>(Max 4)</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>272</ID>
              <Description>"Max 4"</Description>
              <VariableType>Float</VariableType>
              <Address>pPartyHP+3*4</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Full Stamina (party)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(staminaWrite1AOB,DDDA.exe,F3 0F 11 85 A8 02 00 00 8B BE EC 3D 00 00)
registersymbol(staminaWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebp+8],ffffffff
jne @f
pushad
push 00000004
push ebp
call isbadreadptr
test eax,eax
popad
jnz originalcode
mov edi,[ebp]
cmp [edi+74],0
je originalcode

@@:
comiss xmm0,[ebp+2a8]
jbe exit

originalcode:
movss [ebp+000002A8],xmm0

exit:
jmp returnhere

///

staminaWrite1AOB: //"DDDA.exe"+77ED22:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminaWrite1AOB: //"DDDA.exe"+77ED22:
db F3 0F 11 85 A8 02 00 00
//Alt: movss [ebp+000002A8],xmm0
unregistersymbol(staminaWrite1AOB)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>294</ID>
      <Description>"Share Weapons' Skills"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfSkillsClassNotMatchInEquipMenuAOB,DDDA.exe,0F 84 97 00 00 00 8B ** ** ** 8B ** 8B)
registersymbol(cJmpIfSkillsClassNotMatchInEquipMenuAOB)
aobscanmodule(cJmpIfSkillsClassMatchAOB,DDDA.exe,75 06 C7 02 FF FF FF FF 8N ** ** 83)
registersymbol(cJmpIfSkillsClassMatchAOB)

aobscanmodule(cJmpIfPSkill1ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 70 02)
registersymbol(cJmpIfPSkill1ClassMatchAOB)
aobscanmodule(cJmpIfPSkill2ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** 33 ** ** ** ** ** ** ** 74 02)
registersymbol(cJmpIfPSkill2ClassMatchAOB)
aobscanmodule(cJmpIfPSkill3ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** 33 ** ** ** ** ** ** ** 78 02)
registersymbol(cJmpIfPSkill3ClassMatchAOB)

aobscanmodule(cJmpIfSSkill1ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** 33 ** ** ** ** ** ** ** 7C 02)
registersymbol(cJmpIfSSkill1ClassMatchAOB)
aobscanmodule(cJmpIfSSkill2ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** 33 ** ** ** ** ** ** ** 80 02)
registersymbol(cJmpIfSSkill2ClassMatchAOB)
aobscanmodule(cJmpIfSSkill3ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** 33 ** ** ** ** ** ** ** 84 02)
registersymbol(cJmpIfSSkill3ClassMatchAOB)

///

cJmpIfSkillsClassNotMatchInEquipMenuAOB: //"DDDA.exe"+2F7CC4:
db 90 90 90 90 90 90
//Alt: nop
//Alt: nop
//Alt: nop
//Alt: nop
//Alt: nop
//Alt: nop

cJmpIfSkillsClassMatchAOB: //"DDDA.exe"+37DE76:
db EB
//Alt: jmp

cJmpIfPSkill1ClassMatchAOB: //"DDDA.exe"+37DCC7:
db EB
//Alt: jmp

cJmpIfPSkill2ClassMatchAOB: //"DDDA.exe"+37DD41:
db EB
//Alt: jmp

cJmpIfPSkill3ClassMatchAOB: //"DDDA.exe"+37DDBB:
db EB
//Alt: jmp

cJmpIfSSkill1ClassMatchAOB: //"DDDA.exe"+37DD1E:
db EB
//Alt: jmp

cJmpIfSSkill2ClassMatchAOB: //"DDDA.exe"+37DD98:
db EB
//Alt: jmp

cJmpIfSSkill3ClassMatchAOB: //"DDDA.exe"+37DE12:
db EB
//Alt: jmp


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfSkillsClassNotMatchInEquipMenuAOB: //"DDDA.exe"+2F7CC4:
db 0F 84 97 00 00 00
//Alt: je cJmpIfSkillsClassMatchInEquipMenuAOB+9d //DDDA.exe+2F7D61
unregistersymbol(cJmpIfSkillsClassNotMatchInEquipMenuAOB)
cJmpIfSkillsClassMatchAOB: //"DDDA.exe"+37DE76:
db 75
//Alt: jne cJmpIfSkillsClassNotMatchAOB+8 //DDDA.exe+37DE7E
unregistersymbol(cJmpIfSkillsClassNotMatchAOB)
cJmpIfPSkill1ClassMatchAOB: //"DDDA.exe"+37DCC7:
db 75
//Alt: jne
unregistersymbol(cJmpIfPSkill1ClassMatchAOB)
cJmpIfPSkill2ClassMatchAOB: //"DDDA.exe"+37DD41:
db 75
//Alt: jne
unregistersymbol(cJmpIfPSkill2ClassMatchAOB)
cJmpIfPSkill3ClassMatchAOB: //"DDDA.exe"+37DDBB:
db 75
//Alt: jne
unregistersymbol(cJmpIfPSkill3ClassMatchAOB)
cJmpIfSSkill1ClassMatchAOB: //"DDDA.exe"+37DD1E:
db 75
//Alt: jne
unregistersymbol(cJmpIfSSkill1ClassMatchAOB)
cJmpIfSSkill2ClassMatchAOB: //"DDDA.exe"+37DD98:
db 75
//Alt: jne
unregistersymbol(cJmpIfSSkill2ClassMatchAOB)
cJmpIfSSkill3ClassMatchAOB: //"DDDA.exe"+37DE12:
db 75
//Alt: jne
unregistersymbol(cJmpIfSSkill3ClassMatchAOB)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Highlighted Item"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemNameReadCall,DDDA.exe,8B 44 24 04 39 81 80 00 00 00)
registersymbol(highlightedItemNameReadCall)
aobscanmodule(highlightedItemIDReadAOB,DDDA.exe,8B F0 0F BF 47 10 85 C0 78)
registersymbol(highlightedItemIDReadAOB)
aobscanmodule(highlightedItemStringReadAOB,DDDA.exe,85 C9 74 07 52 57 E8 ** ** ** ** 8B C3)
registersymbol(highlightedItemStringReadAOB)
aobscanmodule(highlightedEquipmentStringReadAOB,DDDA.exe,8B ** ** ** ** ** ** 85 C9 74 07 56 52 E8)
registersymbol(highlightedEquipmentStringReadAOB)
aobscanmodule(highlightedItemWeightAOB,DDDA.exe,F3 0F 10 40 44 83 FE 06)
registersymbol(highlightedItemWeightAOB)

///

label(pHighlightedItem)
registersymbol(pHighlightedItem)
label(pSomeBase2)
registersymbol(pSomeBase2)

label(pHighlightedItemName)
registersymbol(pHighlightedItemName)

label(pHighlightedItemWeight)
registersymbol(pHighlightedItemWeight)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHighlightedItem],edi
mov eax,[esp+1c]
mov [pSomeBase2],eax

originalcode:
movsx eax,word ptr [edi+10]
test eax,eax

exit:
jmp returnhere

///
pHighlightedItem:
dd 0
pSomeBase2:
dd 0
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedItemStringReadAOB+b //DDDA.exe+26908C
pushad
push eax
call highlightedItemNameReadCall
mov [pHighlightedItemName],eax

originalcode2:
popad
//test ecx,ecx
//je highlightedItemStringReadAOB+b //DDDA.exe+26908C
push edx

exit2:
jmp returnhere2

///
pHighlightedItemName:
dd 0
///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
pushad
push eax
call highlightedItemNameReadCall
mov [pHighlightedItemName],eax

originalcode3:
popad
//test ecx,ecx
//je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
push esi

exit3:
jmp returnhere3

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHighlightedItemWeight],eax

originalcode4:
movss xmm0,[eax+44]

exit4:
jmp returnhere4

///
pHighlightedItemWeight:
dd 0
///

highlightedItemIDReadAOB+2: //"DDDA.exe"+5937F:
jmp newmem
nop
returnhere:

highlightedItemStringReadAOB: //"DDDA.exe"+269081:
jmp newmem2
returnhere2:

highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
jmp newmem3
returnhere3:

highlightedItemWeightAOB: //"DDDA.exe"+593AA:
jmp newmem4
returnhere4:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(highlightedItemNameReadCall)
dealloc(newmem)
highlightedItemIDReadAOB+2: //"DDDA.exe"+5937F:
db 0F BF 47 10 85 C0
//Alt: movsx eax,word ptr [edi+10]
//Alt: test eax,eax
unregistersymbol(highlightedItemIDReadAOB)
dealloc(newmem2)
highlightedItemStringReadAOB: //"DDDA.exe"+269081:
db 85 C9 74 07 52
//Alt: test ecx,ecx
//Alt: je highlightedItemStringReadAOB+b //DDDA.exe+26908C
//Alt: push edx
unregistersymbol(highlightedItemStringReadAOB)
dealloc(newmem3)
highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
db 85 C9 74 07 56
//Alt: test ecx,ecx
//Alt: je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
//Alt: push esi
unregistersymbol(highlightedEquipmentStringReadAOB)
dealloc(newmem4)
highlightedItemWeightAOB: //"DDDA.exe"+593AA:
db F3 0F 10 40 44
//Alt: movss xmm0,[eax+44]
unregistersymbol(highlightedItemWeightAOB)

///

unregistersymbol(pHighlightedItem)
unregistersymbol(pSomeBase2)

unregistersymbol(pHighlightedItemName)

unregistersymbol(pHighlightedItemWeight)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>16</ID>
          <Description>"ID"</Description>
          <DropDownList DisplayValueAsItem="1">== Curatives ===============
0001:Scrag of Beast
0013:Berry
002B:Greenwarish
0030:Mithridate
0056:Interventive
== Tools ===============
0040:Lantern
0045:Flask of Oil
05CD:Festival Pie
== Other ===============
04BE:Work Table
04C3:Blank Scroll
== Weapons ===============
0195:Rusted Daggers
01F8:Rusted Bow
== Torso ===============
0227:Plebian Shirt
04A1:Set of Fisherman's Tatters
== Legs ===============
0228:Cloth Greaves
</DropDownList>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>pHighlightedItem</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>295</ID>
              <Description>"Name (reference)"</Description>
              <VariableType>String</VariableType>
              <Length>58</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pHighlightedItemName</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Quantity"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>pHighlightedItem</Address>
          <Offsets>
            <Offset>12</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>284</ID>
          <Description>"Weight"</Description>
          <VariableType>Float</VariableType>
          <Address>pHighlightedItemWeight</Address>
          <Offsets>
            <Offset>44</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>218</ID>
          <Description>"Enhacement?"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Rank 0 (No stars)
10:Rank 1 (1 star)
18:Rank 2 (2 stars)
42:Rank 3 (3 stars)
98:Rank 4 (Dragon forged)
1002:Rank 5 (Silver rarified)
1027:Rank 6 (Gold rarified) 
</DropDownList>
          <VariableType>2 Bytes</VariableType>
          <Address>pHighlightedItem</Address>
          <Offsets>
            <Offset>20</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>296</ID>
          <Description>"Vocation Flags?"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>pHighlightedItemWeight</Address>
          <Offsets>
            <Offset>36</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>286</ID>
          <Description>"Type?"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>pHighlightedItemWeight</Address>
          <Offsets>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>297</ID>
      <Description>"Secret of Metamorphosis (Ctrl+Shift)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(menuItemChkOnSelectAOB,DDDA.exe,83 BB 84 02 00 00 0B)
registersymbol(menuItemChkOnSelectAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 11 //CTRL key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
pushad
push 10 //SHIFT key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov dword ptr [ebx+284],2

originalcode:
cmp dword ptr [ebx+00000284],0B

exit:
jmp returnhere

///

menuItemChkOnSelectAOB: //"DDDA.exe"+328F34:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
menuItemChkOnSelectAOB: //"DDDA.exe"+328F34:
db 83 BB 84 02 00 00 0B
//Alt: cmp dword ptr [ebx+00000284],0B
unregistersymbol(menuItemChkOnSelectAOB)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>90</ID>
      <Description>"Game Speed Mod"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(gameSpeedReadAOB,DDDA.exe,F3 0F 10 4A 24 F3 0F 59 49 70)
registersymbol(gameSpeedReadAOB)

label(bSlowMo)
registersymbol(bSlowMo)
label(bFirstExitSlowMo)
registersymbol(bFirstExitSlowMo)
label(pGameSpeed)
registersymbol(pGameSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pGameSpeed],edx
cmp byte ptr [bSlowMo],0
je @f
mov byte ptr [bFirstExitSlowMo],1
mov dword ptr [edx+24],(float)0.3
jmp originalcode
@@:
cmp byte ptr [bFirstExitSlowMo],1
jne originalcode
mov byte ptr [bFirstExitSlowMo],0
mov dword ptr [edx+24],(float)1

originalcode:
movss xmm1,[edx+24]

exit:
jmp returnhere

///
bSlowMo:
db 0
bFirstExitSlowMo:
db 0
pGameSpeed:
dd 0
///

gameSpeedReadAOB: //"DDDA.exe"+A34B6:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
gameSpeedReadAOB: //"DDDA.exe"+A34B6:
db F3 0F 10 4A 24
//Alt: movss xmm1,[edx+24]
unregistersymbol(gameSpeedReadAOB)

unregistersymbol(bSlowMo)
unregistersymbol(bFirstExitSlowMo)
unregistersymbol(pGameSpeed)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>298</ID>
          <Description>"Slow Motion? (Caps == on, Tab == off)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:Enable
</DropDownList>
          <VariableType>Byte</VariableType>
          <Address>bSlowMo</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>20</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>9</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>91</ID>
          <Description>"Game Speed"</Description>
          <VariableType>Float</VariableType>
          <Address>pGameSpeed</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>299</ID>
              <Description>"Game Speed"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Float</VariableType>
              <Address>pGameSpeed</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>100</ID>
      <Description>"Extend Vertical Cam Limit"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(vCamLimitsCmpAOB,DDDA.exe,F3 0F 10 80 8C 00 00 00 ** ** ** ** ** ** ** ** F3 0F 10 11 ** ** ** ** ** ** ** ** ** ** ** ** ** F3 0F 10 80 88 00 00 00)
registersymbol(vCamLimitsCmpAOB)
aobscanmodule(vCamLimitsCmpOnBowAimAOB,DDDA.exe,F3 0F 10 81 8C 00 00 00 F3 ** ** ** ** ** ** ** F3)
registersymbol(vCamLimitsCmpOnBowAimAOB)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2) //,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

///

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ebx,(float)89.9
movd xmm0,ebx
jmp exit

originalcode:
movss xmm0,[eax+0000008C]

exit:
jmp returnhere

///

newmem2:
mov ebx,(float)-89.9
movd xmm0,ebx
jmp exit2

originalcode2:
movss xmm0,[eax+00000088]

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

label(newmem4) //,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

///

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
mov ebx,(float)89.9
movd xmm0,ebx
pop ebx
jmp exit3

originalcode3:
movss xmm0,[ecx+0000008C]

exit3:
jmp returnhere3

///

newmem4:
push ebx
mov ebx,(float)-89.9
movd xmm0,ebx
pop ebx
jmp exit4

originalcode4:
movss xmm0,[edx+00000088]

exit4:
jmp returnhere4

///

vCamLimitsCmpAOB: //"DDDA.exe"+3C5B64:
jmp newmem
nop
nop
nop
returnhere:

vCamLimitsCmpAOB+21: //"DDDA.exe"+3C5B85:
jmp newmem2
nop
nop
nop
returnhere2:

///

vCamLimitsCmpOnBowAimAOB: //"DDDA.exe"+3CAF47:
jmp newmem3
nop
nop
nop
returnhere3:

vCamLimitsCmpOnBowAimAOB+27: //"DDDA.exe"+3CAF6E:
jmp newmem4
nop
nop
nop
returnhere4:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
vCamLimitsCmpAOB: //"DDDA.exe"+3C5B64:
db F3 0F 10 80 8C 00 00 00
//Alt: movss xmm0,[eax+0000008C]
vCamLimitsCmpAOB+21: //"DDDA.exe"+3C5B85:
db F3 0F 10 80 88 00 00 00
//Alt: movss xmm0,[eax+00000088]
unregistersymbol(vCamLimitsCmpAOB)
dealloc(newmem3)
vCamLimitsCmpOnBowAimAOB: //"DDDA.exe"+3CAF47:
db F3 0F 10 81 8C 00 00 00
//Alt: movss xmm0,[ecx+0000008C]
vCamLimitsCmpOnBowAimAOB+27: //"DDDA.exe"+3CAF6E:
db F3 0F 10 82 88 00 00 00
//Alt: movss xmm0,[edx+00000088]
unregistersymbol(vCamLimitsCmpOnBowAimAOB)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>134</ID>
      <Description>"Fly .3"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(nvXReadAOB,DDDA.exe,D9 84 C1 C0 F1 03 00)
registersymbol(nvXReadAOB)
aobscanmodule(axisXYWriteAOB,DDDA.exe,F3 0F 11 7F 14 F3 0F 11 77 18)
registersymbol(axisXYWriteAOB)
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 10 74 24 30 C6)
registersymbol(coordWrite1AOB)

///

alloc(vNV,16)
registersymbol(vNV)
label(pNVector)
registersymbol(pNVector)

label(pMovementInfo)
registersymbol(pMovementInfo)

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)
label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+eax*8+3f1c0]

movss xmm1,[ecx+eax*8+3f1c8]
shufps xmm1,xmm1,c6
addps xmm0,xmm1

movss xmm1,[ecx+eax*8+3f1d8]
shufps xmm1,xmm1,e1
addps xmm0,xmm1

movaps [vNV],xmm0
//mov byte ptr [bVNVSet],1

push ecx
lea ecx,[ecx+eax*8+3f1e0]
mov [pNVector],ecx
pop ecx

originalcode:
fld dword ptr [ecx+eax*8+0003F1C0]

exit:
jmp returnhere

///
pNVector:
dd 0
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMovementInfo],edi

originalcode2:
movss [edi+14],xmm7

exit2:
jmp returnhere2

///
pMovementInfo:
dd 0
///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+100],00004040
je @f
//cmp [esi+120],fffffdff
//je @f
jmp originalcode3

@@:
mov [pPlayerCoord],esi

cmp byte ptr [bFlyMode],1
je @f
jmp originalcode3

@@:
push eax
sub esp,4
movss [esp],xmm7

xorps xmm6,xmm6
movss [esp+38],xmm6
movss [esp+3c],xmm6
movss [esp+40],xmm6

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f

xorps xmm6,xmm6
movss xmm7,[eax+18]
shufps xmm7,xmm7,c0 //set stick x axis to all but most significant element
subps xmm6,xmm7

mov eax,(float)20
movd xmm7,eax
shufps xmm7,xmm7,00
mulps xmm6,xmm7     //apply "speed"

mov eax,[pNVector]
test eax,eax
jz @f
mulps xmm6,[eax] //apply vector

movss [esp+38],xmm6
shufps xmm6,xmm6,39
movss [esp+3c],xmm6
shufps xmm6,xmm6,39
movss [esp+40],xmm6

//do y
mov eax,[pMovementInfo]
movss xmm6,[eax+14]
mov eax,(float)-1
movd xmm7,eax
mulss xmm6,xmm7     //neg least significant element
shufps xmm6,xmm6,c4 //copy stick y axis to 3rd element

mov eax,(float)20
movd xmm7,eax
shufps xmm7,xmm7,00
mulps xmm6,xmm7     //apply "speed"

movaps xmm7,[vNV]
mulps xmm6,xmm7     //apply vector

movups xmm7,[esp+38]
addps xmm7,xmm6
movss [esp+38],xmm7
shufps xmm7,xmm7,39
movss [esp+3c],xmm7
shufps xmm7,xmm7,39
movss [esp+40],xmm7

@@:
movss xmm7,[esp]
add esp,4
pop eax

originalcode3:
movss xmm6,[esp+30]

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

nvXReadAOB: //"DDDA.exe"+9C2BF9:
jmp newmem
nop
nop
returnhere:

axisXYWriteAOB: //"DDDA.exe"+74F342:
jmp newmem2
returnhere2:

coordWrite1AOB: //"DDDA.exe"+44A020:
jmp newmem3
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
nvXReadAOB: //"DDDA.exe"+9C2BF9:
db D9 84 C1 C0 F1 03 00
//Alt: fld dword ptr [ecx+eax*8+0003F1C0]
unregistersymbol(nvXReadAOB)
dealloc(newmem2)
axisXYWriteAOB: //"DDDA.exe"+74F342:
db F3 0F 11 7F 14
//Alt: movss [edi+14],xmm7
unregistersymbol(axisXYWriteAOB)
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+44A020:
db F3 0F 10 74 24 30
//Alt: movss xmm6,[esp+30]
unregistersymbol(coordWrite1AOB)

///

dealloc(vNV)
unregistersymbol(vNV)
unregistersymbol(pNVector)

unregistersymbol(pMovementInfo)

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)
unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>135</ID>
          <Description>"status (numpad0/ turn on, numpad0* turn off)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:Fly
</DropDownList>
          <VariableType>Byte</VariableType>
          <Address>bFlyMode</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>96</Key>
                <Key>111</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>96</Key>
                <Key>106</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>136</ID>
          <Description>"x"</Description>
          <VariableType>Float</VariableType>
          <Address>pPlayerCoord</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"y"</Description>
          <VariableType>Float</VariableType>
          <Address>pPlayerCoord</Address>
          <Offsets>
            <Offset>48</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>137</ID>
          <Description>"z"</Description>
          <VariableType>Float</VariableType>
          <Address>pPlayerCoord</Address>
          <Offsets>
            <Offset>44</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>174</ID>
          <Description>""</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>168</ID>
              <Description>"nv x"</Description>
              <VariableType>Float</VariableType>
              <Address>pNVector</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>169</ID>
                  <Description>"No description"</Description>
                  <VariableType>Float</VariableType>
                  <Address>vNV</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>170</ID>
              <Description>"nv z"</Description>
              <VariableType>Float</VariableType>
              <Address>pNVector</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>171</ID>
                  <Description>"No description"</Description>
                  <VariableType>Float</VariableType>
                  <Address>vNV+4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>172</ID>
              <Description>"nv y"</Description>
              <VariableType>Float</VariableType>
              <Address>pNVector</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>173</ID>
                  <Description>"No description"</Description>
                  <VariableType>Float</VariableType>
                  <Address>vNV+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>300</ID>
              <Description>"?"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>3</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>2366</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>301</ID>
              <Description>"?"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Byte</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>1F98</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>302</ID>
              <Description>"?"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>2DD4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>161</ID>
      <Description>"Time Interval Mod"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(timeOfDayCalAOB,DDDA.exe,8B 44 24 08 01 86 68 87 0B 00)
registersymbol(timeOfDayCalAOB)

///

label(iTimeSpeed)
registersymbol(iTimeSpeed)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+08],0
je originalcode
cmp [iTimeSpeed+4],497423f0
jne @f
mov eax,[iTimeSpeed]
mov [esp+8],eax
jmp originalcode

@@:
fild dword ptr [esp+8]
fmul dword ptr [iTimeSpeed+4]
fistp dword ptr [iTimeSpeed+8]
mov eax,[iTimeSpeed+8]
mov [esp+8],eax

originalcode:
mov eax,[esp+08]
add [esi+000B8768],eax

exit:
jmp returnhere

///
iTimeSpeed:
dd #16
dd (float)1.0
dd 0
///

timeOfDayCalAOB: //"DDDA.exe"+3EA83:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
timeOfDayCalAOB: //"DDDA.exe"+3EA83:
db 8B 44 24 08 01 86 68 87 0B 00
//Alt: mov eax,[esp+08]
//Alt: add [esi+000B8768],eax
unregistersymbol(timeOfDayCalAOB)

unregistersymbol(iTimeSpeed)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>303</ID>
          <Description>"Multiplier"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">1:Game Default
0.5:Half Game Default
999999:Real Time (almost)
</DropDownList>
          <VariableType>Float</VariableType>
          <Address>iTimeSpeed+4</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <Value>0.5</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <Value>999999</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>304</ID>
      <Description>"Total Weight Mod"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightReadAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 8B C6)
registersymbol(totalWeightReadAOB)
aobscanmodule(totalWeightReadInventoryAOB,DDDA.exe,F3 0F 10 84 0A C4 03 00 00 EB 03)
registersymbol(totalWeightReadInventoryAOB)
aobscanmodule(totalWeightWriteAOB,DDDA.exe,F3 0F 11 AB 4C 02 00 00 3B 6B 08)
registersymbol(totalWeightWriteAOB)

///

label(bIgnoreWeight)
registersymbol(bIgnoreWeight)
label(pTotalWeight)
registersymbol(pTotalWeight)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test eax,eax
jnz @f
//lea edx,[eax+ecx+3c4]
//mov [pTotalWeight],edx
mov [pTotalWeight],ecx
cmp byte ptr [bIgnoreWeight],0
je originalcode
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight],2
jne exit
movss [eax+ecx+3c4],xmm0
jmp exit

@@:
mov edx,[esi+5854]
cmp edx,4
jg originalcode
inc edx
push eax
lea eax,[eax+ecx]
mov [pTotalWeight+edx*4],eax
pop eax
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
jmp exit

originalcode:
movss xmm0,[eax+ecx+000003C4]

exit:
jmp returnhere

///
bIgnoreWeight:
dd 0
pTotalWeight:
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
push ebx
xor eax,eax
lea ebx,[edx+ecx]
@@:
cmp [pTotalWeight+eax*4],ebx
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode2

@@:
cmp byte ptr [bIgnoreWeight+eax],0
je originalcode2
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+eax],2
jne @f
movss [edx+ecx+3c4],xmm0
@@:
pop ebx
pop eax
jmp exit2

originalcode2:
pop ebx
pop eax
movss xmm0,[edx+ecx+000003C4]

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
xor edx,edx
lea ecx,[ebx-178]
@@:
cmp [pTotalWeight+edx*4],ecx
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode3

@@:
cmp byte ptr [bIgnoreWeight+edx],2
jne originalcode3
xorps xmm5,xmm5

originalcode3:
movss [ebx+0000024C],xmm5

exit3:
jmp returnhere3

///

totalWeightReadAOB: //"DDDA.exe"+77B350:
jmp newmem
nop
nop
nop
nop
returnhere:

totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
jmp newmem2
nop
nop
nop
nop
returnhere2:

totalWeightWriteAOB: //"DDDA.exe"+580C7:
jmp newmem3
nop
nop
nop
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
totalWeightReadAOB: //"DDDA.exe"+77B350:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadAOB)
dealloc(newmem2)
totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
db F3 0F 10 84 0A C4 03 00 00
//Alt: movss xmm0,[edx+ecx+000003C4]
unregistersymbol(totalWeightReadInventoryAOB)
dealloc(newmem3)
totalWeightWriteAOB: //"DDDA.exe"+580C7:
db F3 0F 11 AB 4C 02 00 00
//Alt: movss [ebx+0000024C],xmm5
unregistersymbol(totalWeightWriteAOB)

///

unregistersymbol(bIgnoreWeight)
unregistersymbol(pTotalWeight)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>273</ID>
          <Description>"1"</Description>
          <VariableType>Float</VariableType>
          <Address>pTotalWeight+0*4</Address>
          <Offsets>
            <Offset>3C4</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>274</ID>
              <Description>"Status"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>bIgnoreWeight+0</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>305</ID>
          <Description>"2"</Description>
          <VariableType>Float</VariableType>
          <Address>pTotalWeight+1*4</Address>
          <Offsets>
            <Offset>3C4</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>213</ID>
              <Description>"Status"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>bIgnoreWeight+1</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>306</ID>
          <Description>"3"</Description>
          <VariableType>Float</VariableType>
          <Address>pTotalWeight+2*4</Address>
          <Offsets>
            <Offset>3C4</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>214</ID>
              <Description>"Status"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>bIgnoreWeight+2</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>307</ID>
          <Description>"4"</Description>
          <VariableType>Float</VariableType>
          <Address>pTotalWeight+3*4</Address>
          <Offsets>
            <Offset>3C4</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>215</ID>
              <Description>"Status"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>bIgnoreWeight+3</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>142</ID>
      <Description>"Some Pointers"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(goldChkUpperLimitAOB,DDDA.exe,8B 82 18 7A 0A 00 3D)
registersymbol(goldChkUpperLimitAOB)

label(pSomeBase1)
registersymbol(pSomeBase1)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pSomeBase1],edx

originalcode:
mov eax,[edx+000A7A18]

exit:
jmp returnhere

///
pSomeBase1:
dd 0
///

goldChkUpperLimitAOB: //"DDDA.exe"+2684A7:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
goldChkUpperLimitAOB: //"DDDA.exe"+2684A7:
db 8B 82 18 7A 0A 00
//Alt: mov eax,[edx+000A7A18]
unregistersymbol(goldChkUpperLimitAOB)

unregistersymbol(pSomeBase1)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>308</ID>
          <Description>"[Misc.]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>143</ID>
              <Description>"G"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>A7A18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>144</ID>
              <Description>"RC"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>A7A1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>162</ID>
              <Description>"Current Day"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>B8760</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>156</ID>
              <Description>"Time of Day"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:00:00
3600000:01:00
7200000:02:00
10800000:03:00
14400000:04:00
18000000:05:00
21600000:06:00
25200000:07:00
28800000:08:00
32400000:09:00
36000000:10:00
39600000:11:00
43200000:12:00
46800000:13:00
50400000:14:00
54000000:15:00
57600000:16:00
61200000:17:00
64800000:18:00
68400000:19:00
72000000:20:00
75600000:21:00
79200000:22:00
82800000:23:00
86400000:24:00
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>B8768</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>158</ID>
                  <Description>"hrs (reference)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>B876C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>159</ID>
                  <Description>"mins (reference)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>B8770</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>160</ID>
                  <Description>"secs (reference)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>B8774</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>309</ID>
                  <Description>"interval (reference)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>B877C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>310</ID>
          <Description>"[Protagonist]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>221</ID>
              <Description>"Level"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>A7DD0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>145</ID>
              <Description>"Exp"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>A7994</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>217</ID>
                  <Description>"next"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7998</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>216</ID>
              <Description>"Dcp"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>A7A14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>279</ID>
              <Description>"Current Vocation"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>A76E0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>377</ID>
              <Description>"[Equiped Skills]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>378</ID>
                  <Description>"Sword 1"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7808</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>379</ID>
                  <Description>"Sword 2"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A780C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>380</ID>
                  <Description>"Sword 3"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7810</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>381</ID>
                  <Description>"? 1"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7814</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>382</ID>
                  <Description>"? 2"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7818</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>383</ID>
                  <Description>"? 3"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A781C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>384</ID>
                  <Description>"Dagger 1"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7850</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>385</ID>
                  <Description>"Dagger 2"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7854</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>386</ID>
                  <Description>"Dagger 3"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7858</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>387</ID>
                  <Description>"? 1"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A785C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>388</ID>
                  <Description>"? 2"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7860</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>389</ID>
                  <Description>"? 3"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7864</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>390</ID>
                  <Description>"Shield 1"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A78B0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>391</ID>
                  <Description>"Shield 2"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A78B4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>392</ID>
                  <Description>"Shield 3"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A78B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>393</ID>
                  <Description>"? 1"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A78BC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>394</ID>
                  <Description>"? 2"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A78C0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>395</ID>
                  <Description>"? 3"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A78C4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>396</ID>
                  <Description>"Bow 1"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A78E0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>397</ID>
                  <Description>"Bow 2"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A78E4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>398</ID>
                  <Description>"Bow 3"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A78E8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>399</ID>
              <Description>"[Vocation Ranks]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>227</ID>
                  <Description>"Fighter"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A79A0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>228</ID>
                  <Description>"Strider"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A79A4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>229</ID>
                  <Description>"Mage"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A79A8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>230</ID>
                  <Description>"Mystic Knight"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A79AC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>231</ID>
                  <Description>"Assassin"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A79B0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>232</ID>
                  <Description>"Magic Archer"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A79B4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>233</ID>
                  <Description>"Warrior"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A79B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>234</ID>
                  <Description>"Ranger"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A79BC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>235</ID>
                  <Description>"Sorcerer"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A79C0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>400</ID>
          <Description>"[Main Pawn]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>237</ID>
              <Description>"Level"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>A85C0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>238</ID>
              <Description>"Exp"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>A8184</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>401</ID>
                  <Description>"next"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A8188</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>146</ID>
              <Description>"Dcp"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>A8204</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>280</ID>
              <Description>"Current Vocation"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pSomeBase1</Address>
              <Offsets>
                <Offset>A7ED0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>402</ID>
              <Description>"[Vocation Ranks]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>241</ID>
                  <Description>"Fighter"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A8190</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>242</ID>
                  <Description>"Strider"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A8194</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>243</ID>
                  <Description>"Mage"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A8198</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>403</ID>
                  <Description>"Mystic Knight"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A819C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>404</ID>
                  <Description>"Assassin"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A81A0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>405</ID>
                  <Description>"Magic Archer"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A81A4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>406</ID>
                  <Description>"Warrior"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A81A8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>407</ID>
                  <Description>"Ranger"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A81AC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>408</ID>
                  <Description>"Sorcerer"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A81B0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemStringReadAOB,DDDA.exe,85 C9 74 07 52 57 E8 ** ** ** ** 8B C3)
registersymbol(highlightedItemStringReadAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedItemStringReadAOB+b //DDDA.exe+26908C


originalcode2:
//test ecx,ecx
//je highlightedItemStringReadAOB+b //DDDA.exe+26908C
push edx

exit2:
jmp returnhere2

///

highlightedItemStringReadAOB: //"DDDA.exe"+269081:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
highlightedItemStringReadAOB: //"DDDA.exe"+269081:
db 85 C9 74 07 52
//Alt: test ecx,ecx
//Alt: je highlightedItemStringReadAOB+b //DDDA.exe+26908C
//Alt: push edx
unregistersymbol(highlightedItemStringReadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemNameReadCall,DDDA.exe,8B 44 24 04 39 81 80 00 00 00)
registersymbol(highlightedItemNameReadCall)
aobscanmodule(highlightedItemStringReadAOB,DDDA.exe,85 C9 74 07 52 57 E8 ** ** ** ** 8B C3)
registersymbol(highlightedItemStringReadAOB)

label(pHighlightedItemName)
registersymbol(pHighlightedItemName)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedItemStringReadAOB+b //DDDA.exe+26908C
pushad
push eax
call highlightedItemNameReadCall
mov [pHighlightedItemName],eax

originalcode2:
popad
//test ecx,ecx
//je highlightedItemStringReadAOB+b //DDDA.exe+26908C
push edx

exit2:
jmp returnhere2

///
pHighlightedItemName:
dd 0
///

highlightedItemStringReadAOB: //"DDDA.exe"+269081:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(highlightedItemNameReadCall)
dealloc(newmem2)
highlightedItemStringReadAOB: //"DDDA.exe"+269081:
db 85 C9 74 07 52
//Alt: test ecx,ecx
//Alt: je highlightedItemStringReadAOB+b //DDDA.exe+26908C
//Alt: push edx
unregistersymbol(highlightedItemStringReadAOB)

unregistersymbol(pHighlightedItemName)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>409</ID>
              <Description>"Name"</Description>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pHighlightedItemName</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedEquipmentStringReadAOB,DDDA.exe,8B ** ** ** ** ** ** 85 C9 74 07 56 52 E8)
registersymbol(highlightedEquipmentStringReadAOB)

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464

originalcode3:
//test ecx,ecx
//je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
push esi

exit3:
jmp returnhere3

highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
jmp newmem3
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
db 85 C9 74 07 56
//Alt: test ecx,ecx
//Alt: je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
//Alt: push esi
unregistersymbol(highlightedEquipmentStringReadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>410</ID>
          <Description>"Menu Options"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(menuItemsCheckAOB,DDDA.exe,8B 83 84 02 00 00 83 F8 0C)
registersymbol(menuItemsCheckAOB)

label(pMenuItems)
registersymbol(pMenuItems)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMenuItems],ebx

originalcode:
mov eax,[ebx+00000284]

exit:
jmp returnhere

///
pMenuItems:
dd 0
///

menuItemsCheckAOB: //"DDDA.exe"+329088:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
menuItemsCheckAOB: //"DDDA.exe"+329088:
db 8B 83 84 02 00 00
//Alt: mov eax,[ebx+00000284]
unregistersymbol(menuItemsCheckAOB)

unregistersymbol(pMenuItems)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>29</ID>
              <Description>"pMenuItems"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">6:Main Menu
10:Manual
12:Exit Game
0:New Game
1:Load Game
11:Hard Mode
3:Options
2:Secret of Metamorphosis
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenuItems</Address>
              <Offsets>
                <Offset>284</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"nv get"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(nvXReadAOB,DDDA.exe,D9 84 C1 C0 F1 03 00)
registersymbol(nvXReadAOB)

alloc(vNV,16)
registersymbol(vNV)

label(pNVector)
registersymbol(pNVector)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+eax*8+3f1c0]

movss xmm1,[ecx+eax*8+3f1c8]
shufps xmm1,xmm1,c6
addps xmm0,xmm1

movss xmm1,[ecx+eax*8+3f1d8]
shufps xmm1,xmm1,e1
addps xmm0,xmm1

movaps [vNV],xmm0
//mov byte ptr [bVNVSet],1

push ecx
lea ecx,[ecx+eax*8+3f1e0]
mov [pNVector],ecx
pop ecx

originalcode:
fld dword ptr [ecx+eax*8+0003F1C0]

exit:
jmp returnhere

///
pNVector:
dd 0
///

nvXReadAOB: //"DDDA.exe"+9C2BF9:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
nvXReadAOB: //"DDDA.exe"+9C2BF9:
db D9 84 C1 C0 F1 03 00
//Alt: fld dword ptr [ecx+eax*8+0003F1C0]
unregistersymbol(nvXReadAOB)

///

dealloc(vNV)
unregistersymbol(vNV)

unregistersymbol(pNVector)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>106</ID>
              <Description>"nv x"</Description>
              <VariableType>Float</VariableType>
              <Address>pNVector</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>131</ID>
                  <Description>"No description"</Description>
                  <VariableType>Float</VariableType>
                  <Address>vNV</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>107</ID>
              <Description>"nv z"</Description>
              <VariableType>Float</VariableType>
              <Address>pNVector</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>132</ID>
                  <Description>"No description"</Description>
                  <VariableType>Float</VariableType>
                  <Address>vNV+4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>108</ID>
              <Description>"nv y"</Description>
              <VariableType>Float</VariableType>
              <Address>pNVector</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>133</ID>
                  <Description>"No description"</Description>
                  <VariableType>Float</VariableType>
                  <Address>vNV+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description>"axis get"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(axisXYWriteAOB,DDDA.exe,F3 0F 11 7F 14 F3 0F 11 77 18)
registersymbol(axisXYWriteAOB)

label(pMovementInfo)
registersymbol(pMovementInfo)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMovementInfo],edi

originalcode2:
movss [edi+14],xmm7

exit2:
jmp returnhere2

///
pMovementInfo:
dd 0
///

axisXYWriteAOB: //"DDDA.exe"+74F342:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
axisXYWriteAOB: //"DDDA.exe"+74F342:
db F3 0F 11 7F 14
//Alt: movss [edi+14],xmm7
unregistersymbol(axisXYWriteAOB)

unregistersymbol(pMovementInfo)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>111</ID>
              <Description>"axis x (+18)"</Description>
              <VariableType>Float</VariableType>
              <Address>pMovementInfo</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>112</ID>
              <Description>"axis y (+14)"</Description>
              <VariableType>Float</VariableType>
              <Address>pMovementInfo</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"coord write1 .2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)

label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
cmp [ebx+e0],fffffdff
je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
push eax

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f
movss xmm1,[eax+18]
shufps xmm1,xmm1,c0 //set stick x axis to all but most significant element

/*movss xmm1,[eax+18]
shufps xmm1,xmm1,e1 //swap least to 2nd
movss xmm3,[eax+18]
shufps xmm3,xmm3,c4 //copy least to 3rd
subps xmm1,xmm3*/

xorps xmm1,xmm1
movss xmm3,[eax+18]
shufps xmm3,xmm3,c0 //set stick x axis to all but most significant element
subps xmm1,xmm3

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

mov eax,[pNVector]
test eax,eax
jz @f
mulps xmm1,[eax] //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1

//do y
mov eax,[pMovementInfo]
movss xmm1,[eax+14]
mov eax,(float)-1
movd xmm3,eax
mulss xmm1,xmm3     //neg least significant element
shufps xmm1,xmm1,c4 //copy stick y axis to 3rd element

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

//mov eax,[pNVector]
movaps xmm3,[vNV]
//shufps xmm3,xmm3,c6 //swap least and 3rd element
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1


@@:
pop eax
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]
/*movss [esp+10],xmm3
movss [esp+14],xmm1
movss [esp+18],xmm4
movss [esp+20],xmm3
movss [esp+24],xmm1
movss [esp+28],xmm4
movss [esp+30],xmm3
movss [esp+34],xmm1
movss [esp+38],xmm4*/

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)

unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>114</ID>
              <Description>"x"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115</ID>
              <Description>"z"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>116</ID>
              <Description>"y"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>117</ID>
              <Description>"bFlyMode"</Description>
              <VariableType>Byte</VariableType>
              <Address>bFlyMode</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>126</ID>
          <Description>"coord write1 .1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)

label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
cmp [ebx+e0],fffffdff
je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
push eax

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f
movss xmm1,[eax+18]
movss xmm3,[eax+18]
shufps xmm3,xmm3,c1 //2 1 1 4
subps xmm1,xmm3

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

mov al,[bVNVSet]
test al,al
jz @f
movaps xmm3,[vNV]
shufps xmm3,xmm3,c6 //swap least and 3rd element
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1

//do y
mov eax,[pMovementInfo]
movss xmm1,[eax+14]
mov eax,(float)-1
movd xmm3,eax
mulss xmm1,xmm3     //neg least significant element
shufps xmm1,xmm1,c4 //copy stick y axis to 3rd element

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

//mov eax,[pNVector]
movaps xmm3,[vNV]
//shufps xmm3,xmm3,c6 //swap least and 3rd element
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1


@@:
pop eax
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]
/*movss [esp+10],xmm3
movss [esp+14],xmm1
movss [esp+18],xmm4
movss [esp+20],xmm3
movss [esp+24],xmm1
movss [esp+28],xmm4
movss [esp+30],xmm3
movss [esp+34],xmm1
movss [esp+38],xmm4*/

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)

unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>128</ID>
              <Description>"x"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>129</ID>
              <Description>"z"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>130</ID>
              <Description>"y"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>127</ID>
              <Description>"bFlyMode"</Description>
              <VariableType>Byte</VariableType>
              <Address>bFlyMode</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"coord write1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)

label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
cmp [ebx+e0],fffffdff
je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)

unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>121</ID>
              <Description>"x"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>122</ID>
              <Description>"z"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>123</ID>
              <Description>"y"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>120</ID>
              <Description>"bFlyMode"</Description>
              <VariableType>Byte</VariableType>
              <Address>bFlyMode</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>124</ID>
          <Description>"coord write2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite2AOB,DDDA.exe,F3 0F 10 74 24 30 C6)
registersymbol(coordWrite2AOB)

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bFirstActivate],1
je originalcode4
cmp [esi+100],00004040
je @f
cmp [esi+120],fffffdff
je @f
jmp originalcode4

@@:
xorps xmm6,xmm6
movss [esp+30],xmm6
movss [esp+34],xmm6
movss [esp+38],xmm6
movss xmm6,[fFlyModeCoord]
movss [esi+40],xmm6
movss xmm6,[fFlyModeCoord+4]
movss [esi+44],xmm6
movss xmm6,[fFlyModeCoord+8]
movss [esi+48],xmm6

originalcode4:
movss xmm6,[esp+30]

exit4:
jmp returnhere4

///

coordWrite2AOB: //"DDDA.exe"+44A020:
jmp newmem4
nop
returnhere4:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem4)
coordWrite2AOB: //"DDDA.exe"+44A020:
db F3 0F 10 74 24 30
//Alt: movss xmm6,[esp+30]
unregistersymbol(coordWrite2AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>125</ID>
          <Description>"coord write3"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite3AOB,DDDA.exe,F3 0F 11 56 44 F3 0F 11 5E 48 F3 0F 58 CF)
registersymbol(coordWrite3AOB)

///

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bFirstActivate],1
je originalcode5
cmp [esi+100],00004040
je @f
cmp [esi+120],fffffdff
je @f
jmp originalcode5

@@:
xorps xmm7,xmm7
movss xmm1,[fFlyModeCoord]
movss xmm2,[fFlyModeCoord+4]
movss xmm3,[fFlyModeCoord+8]

originalcode5:
movss [esi+44],xmm2

exit5:
jmp returnhere5

///

coordWrite3AOB: //"DDDA.exe"+44A07A:
jmp newmem5
returnhere5:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem5)
coordWrite3AOB: //"DDDA.exe"+44A07A:
db F3 0F 11 56 44
//Alt: movss [esi+44],xmm2
unregistersymbol(coordWrite3AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>147</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+18],"DDDA.exe"+9DE47F
jne originalcode
cmp [esp+2c],"DDDA.exe"+BFDD59
mov eax,[eax+a7a18]
jmp exit

originalcode:
mov eax,[eax+000A7A18]

exit:
jmp returnhere

///

"DDDA.exe"+2A3005:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+2A3005:
db 8B 80 18 7A 0A 00
//Alt: mov eax,[eax+000A7A18]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>163</ID>
          <Description>"No Clip .2"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(nvXReadAOB,DDDA.exe,D9 84 C1 C0 F1 03 00)
registersymbol(nvXReadAOB)
aobscanmodule(axisXYWriteAOB,DDDA.exe,F3 0F 11 7F 14 F3 0F 11 77 18)
registersymbol(axisXYWriteAOB)
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(vNV,16)
registersymbol(vNV)
label(pNVector)
registersymbol(pNVector)

label(pMovementInfo)
registersymbol(pMovementInfo)

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)
label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+eax*8+3f1c0]

movss xmm1,[ecx+eax*8+3f1c8]
shufps xmm1,xmm1,c6
addps xmm0,xmm1

movss xmm1,[ecx+eax*8+3f1d8]
shufps xmm1,xmm1,e1
addps xmm0,xmm1

movaps [vNV],xmm0
//mov byte ptr [bVNVSet],1

push ecx
lea ecx,[ecx+eax*8+3f1e0]
mov [pNVector],ecx
pop ecx

originalcode:
fld dword ptr [ecx+eax*8+0003F1C0]

exit:
jmp returnhere

///
pNVector:
dd 0
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMovementInfo],edi

originalcode2:
movss [edi+14],xmm7

exit2:
jmp returnhere2

///
pMovementInfo:
dd 0
///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
//cmp [ebx+e0],fffffdff
//je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
push eax

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f

xorps xmm1,xmm1
movss xmm3,[eax+18]
shufps xmm3,xmm3,c0 //set stick x axis to all but most significant element
subps xmm1,xmm3

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

mov eax,[pNVector]
test eax,eax
jz @f
mulps xmm1,[eax] //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1

//do y
mov eax,[pMovementInfo]
movss xmm1,[eax+14]
mov eax,(float)-1
movd xmm3,eax
mulss xmm1,xmm3     //neg least significant element
shufps xmm1,xmm1,c4 //copy stick y axis to 3rd element

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

movaps xmm3,[vNV]
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1


@@:
pop eax
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

nvXReadAOB: //"DDDA.exe"+9C2BF9:
jmp newmem
nop
nop
returnhere:

axisXYWriteAOB: //"DDDA.exe"+74F342:
jmp newmem2
returnhere2:

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
nvXReadAOB: //"DDDA.exe"+9C2BF9:
db D9 84 C1 C0 F1 03 00
//Alt: fld dword ptr [ecx+eax*8+0003F1C0]
unregistersymbol(nvXReadAOB)
dealloc(newmem2)
axisXYWriteAOB: //"DDDA.exe"+74F342:
db F3 0F 11 7F 14
//Alt: movss [edi+14],xmm7
unregistersymbol(axisXYWriteAOB)
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(vNV)
unregistersymbol(vNV)
unregistersymbol(pNVector)

unregistersymbol(pMovementInfo)

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)
unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>165</ID>
              <Description>"x"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>166</ID>
              <Description>"z"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>167</ID>
              <Description>"y"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>164</ID>
              <Description>"status (numpad0/ turn on, numpad0* turn off)"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:No-Clip
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>bFlyMode</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>96</Key>
                    <Key>111</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>96</Key>
                    <Key>106</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"No description"</Description>
          <VariableType>String</VariableType>
          <Length>12</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>1EA3BA54</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>411</ID>
          <Description>"No description"</Description>
          <VariableType>String</VariableType>
          <Length>13</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>1EA37A95</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A388188</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A388978</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CE45B78</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CC79BB8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A38817C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A388184</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A388180</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CE889A8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A388188</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>412</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CDC00A0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>96</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CDC00A4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CDC00A8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0D50E510</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>99</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0D50F084</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"nv x"</Description>
          <VariableType>Float</VariableType>
          <Address>0A70C8C0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>104</ID>
          <Description>"nv z"</Description>
          <VariableType>Float</VariableType>
          <Address>0A70C8D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"nv y"</Description>
          <VariableType>Float</VariableType>
          <Address>0A70C8C8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>109</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CDC332C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>148</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A43EC54</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>149</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A4AC968</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>150</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A4AC994</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>151</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A4AC9B0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>152</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0A4AC9C4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>153</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0D0188D0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>139</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>0A165910</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>140</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>0A26AD00</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>141</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>0A428228</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>154</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>0A438F78</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>155</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>0A438F80</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"No description"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>0AA755E6</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"No description"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>0AA7B6CE</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"No description"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>38F8CC7C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"2 Bytes"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>AA7B6CC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>0AA7B6F4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>413</ID>
          <Description>"No description"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>111B20E4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>157</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>0A438F7C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>177</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(chkIfCoordZRaisedInAirAOB,DDDA.exe,0F 2F 86 98 20 00 00 76 08)
registersymbol(chkIfCoordZRaisedInAirAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+100],00004040
je chkIfCoordZRaisedInAirAOB+9

originalcode:
comiss xmm0,[esi+00002098]

exit:
jmp returnhere

///

chkIfCoordZRaisedInAirAOB: //"DDDA.exe"+7756DF:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chkIfCoordZRaisedInAirAOB: //"DDDA.exe"+7756DF:
db 0F 2F 86 98 20 00 00
//Alt: comiss xmm0,[esi+00002098]
unregistersymbol(chkIfCoordZRaisedInAirAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>414</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"DDDA.exe"+7757C0:
db 31 C0 C3
//Alt: xor eax,eax
//Alt: ret


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
"DDDA.exe"+7757C0:
db 56 8B F0
//Alt: push esi
//Alt: mov esi,eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>415</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(chkFallingStartAOB,DDDA.exe,84 C0 ** ** ** ** ** ** 81 8F 38 2E 00 00 00 10 00 00)
registersymbol(chkFallingStartAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edi+100],00004040
jne originalcode
xor al,al
jmp chkFallingStartAOB

originalcode:
or [edi+00002E38],00001000

exit:
jmp returnhere

///

chkFallingStartAOB+8: //"DDDA.exe"+771177:
jmp newmem
nop
nop
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chkFallingStartAOB+8: //"DDDA.exe"+771177:
db 81 8F 38 2E 00 00 00 10 00 00
//Alt: or [edi+00002E38],00001000
unregistersymbol(chkFallingStartAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>176</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CC120F8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>178</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CC120E4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>179</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CC13144</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>180</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CC14A54</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>181</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CC14A64</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>182</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CC14A74</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>416</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0CC14A84</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>417</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0D39C9F4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>418</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>0D39CA74</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>419</ID>
          <Description>"No Description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>0CC12E34</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>420</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(rhpReadOnHitAOB,DDDA.exe,F3 0F 10 47 08 8B 8F B4 01 00 00)
registersymbol(rhpReadOnHitAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
xor ecx,ecx
@@:
cmp [pPartyHP+ecx*4],edi
je @f
inc ecx
cmp ecx,4
jl @f
jmp originalcode2

@@:
movss xmm0,[edi+8]
comiss xmm0,[esp+c]
ja originalcode2
mov [edi+8],(float)1
movss xmm0,[esp+c]
addss xmm0,[edi+8]
movss [edi+8],xmm0

originalcode2:
movss xmm0,[edi+08]

exit2:
jmp returnhere2

///

rhpReadOnHitAOB: //"DDDA.exe"+3743C1:
jmp newmem2
returnhere2:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
rhpReadOnHitAOB: //"DDDA.exe"+3743C1:
db F3 0F 10 47 08
//Alt: movss xmm0,[edi+08]
unregistersymbol(rhpReadOnHitAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>421</ID>
          <Description>"Full HP (all human) (may still be killed if damge &gt;current HP)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(hpWrite1AOB,DDDA.exe,F3 0F 11 89 9C 02 00 00 89 B7 F4 3D 00 00)
registersymbol(hpWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
/*cmp [ecx+24],0
jne originalcode
cmp [ecx+24],ffffffff
je originalcode
cmp [ecx+2c],ffffffff
je originalcode
cmp [ecx+34],ffffffff
je originalcode
cmp [ecx+38],ffffffff
je originalcode
cmp [ecx+3c],ffffffff
je originalcode*/
test eax,eax
jz originalcode
movss xmm1,[eax+c]
movss [eax+8],xmm1
movss [ecx+2a4],xmm1

originalcode:
movss [ecx+0000029C],xmm1

exit:
jmp returnhere

///

hpWrite1AOB: //"DDDA.exe"+761311:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hpWrite1AOB: //"DDDA.exe"+761311:
db F3 0F 11 89 9C 02 00 00
//Alt: movss [ecx+0000029C],xmm1
unregistersymbol(hpWrite1AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>422</ID>
          <Description>"Full Stamina (all human)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(staminaWrite1AOB,DDDA.exe,F3 0F 11 85 A8 02 00 00 8B BE EC 3D 00 00)
registersymbol(staminaWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
/*cmp [ebp+24],0
jne originalcode
cmp [ebp+24],ffffffff
je originalcode
cmp [ebp+2c],ffffffff
je originalcode
cmp [ebp+34],ffffffff
je originalcode
cmp [ebp+38],ffffffff
je originalcode
cmp [ebp+3c],ffffffff
je originalcode*/
comiss xmm0,[ebp+2a8]
jbe exit

originalcode:
movss [ebp+000002A8],xmm0

exit:
jmp returnhere

///

staminaWrite1AOB: //"DDDA.exe"+77ED22:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminaWrite1AOB: //"DDDA.exe"+77ED22:
db F3 0F 11 85 A8 02 00 00
//Alt: movss [ebp+000002A8],xmm0
unregistersymbol(staminaWrite1AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>423</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(rhpFallDamageWrite1AOB,DDDA.exe,0F 2F D9 F3 0F 11 4D 08)
registersymbol(rhpFallDamageWrite1AOB)

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
xor eax,eax
@@:
cmp [pPartyHP+eax*4],ebp
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode3

@@:
mov eax,(float)1
movd xmm3,eax
comiss xmm3,xmm1
jbe originalcode3
movss xmm1,xmm3
movss xmm0,xmm2
subss xmm0,xmm3
movss [esp+20],xmm0
movss [esp+c],xmm1

originalcode3:
xorps xmm3,xmm3
pop eax
comiss xmm3,xmm1
movss [ebp+08],xmm1

exit3:
jmp returnhere3

///

rhpFallDamageWrite1AOB: //"DDDA.exe"+486012:
jmp newmem3
nop
nop
nop
returnhere3:





[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
rhpFallDamageWrite1AOB: //"DDDA.exe"+486012:
db 0F 2F D9 F3 0F 11 4D 08
//Alt: comiss xmm3,xmm1
//Alt: movss [ebp+08],xmm1
unregistersymbol(rhpFallDamageWrite1AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>424</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(rhpFallDamageWrite2AOB,DDDA.exe,F3 0F 10 44 24 10 F3 0F 11 46 08 8B)
registersymbol(rhpFallDamageWrite2AOB)

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
xor eax,eax
@@:
cmp [pPartyHP+eax*4],esi
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode4

@@:
mov eax,(float)1
movd xmm0,eax
comiss xmm0,[esp+14]
jbe originalcode4
movss [esp+14],xmm0

originalcode4:
pop eax
movss xmm0,[esp+10]

exit4:
jmp returnhere4

///

rhpFallDamageWrite2AOB: //"DDDA.exe"+779285:
jmp newmem4
nop
returnhere4:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem4)
rhpFallDamageWrite2AOB: //"DDDA.exe"+779285:
db F3 0F 10 44 24 10
//Alt: movss xmm0,[esp+10]
unregistersymbol(rhpFallDamageWrite2AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>425</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
//xor edx,edx
//@@:
//cmp [pPartyHP+edx*4],ebp
//je @f
//inc edx
//cmp edx,4
//jl @b
//jmp originalcode3
cmp [pPartyHP],ebp
jne originalcode3

@@:
addss xmm0,[ebp+8]
mov edx,(float)1
movd xmm1,edx
comiss xmm0,xmm1
jae @f
mov edx,(float)-1
movd xmm1,edx
movss xmm0,[ebp+8]
addss xmm0,xmm1
mulss xmm0,xmm1
movss [esp+20],xmm0

@@:
movss xmm0,[esp+20]

originalcode3:
mov edx,[esp+24]
push edx

exit3:
jmp returnhere3

///

"DDDA.exe"+485F86:
jmp newmem3
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
"DDDA.exe"+485F86:
db 8B 54 24 24 52
//Alt: mov edx,[esp+24]
//Alt: push edx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>426</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>0CF427A0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>427</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>0CF42E37</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>428</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>0CF44B0C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>429</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>0CF44B48</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>430</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>0CF43D50</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>431</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>0CE19554</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>432</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>0CE19555</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>433</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightReadInventoryAOB,DDDA.exe,F3 0F 10 84 0A C4 03 00 00 EB 03)
registersymbol(totalWeightReadInventoryAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
push ebx
xor eax,eax
lea ebx,[edx+ecx]
@@:
cmp [pTotalWeight+eax*4],ebx
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode2

@@:
cmp byte ptr [bIgnoreWeight+eax],1
jne originalcode2
pop ebx
pop eax
xorps xmm0,xmm0
jmp exit2

originalcode2:
pop ebx
pop eax
movss xmm0,[edx+ecx+000003C4]

exit2:
jmp returnhere2

///

totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
jmp newmem2
nop
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
db F3 0F 10 84 0A C4 03 00 00
//Alt: movss xmm0,[edx+ecx+000003C4]
unregistersymbol(totalWeightReadInventoryAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>434</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>0D3024A0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>435</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightWriteAOB,DDDA.exe,F3 0F 11 AB 4C 02 00 00 3B 6B 08)
registersymbol(totalWeightWriteAOB)

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
xor edx,edx
lea ecx,[ebx-178]
@@:
cmp [pTotalWeight+edx*4],ecx
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode3

@@:
cmp byte ptr [bIgnoreWeight+edx],2
jne originalcode3
xorps xmm5,xmm5

originalcode3:
movss [ebx+0000024C],xmm5

exit3:
jmp returnhere3

///

totalWeightWriteAOB: //"DDDA.exe"+580C7:
jmp newmem3
nop
nop
nop
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
totalWeightWriteAOB: //"DDDA.exe"+580C7:
db F3 0F 11 AB 4C 02 00 00
//Alt: movss [ebx+0000024C],xmm5
unregistersymbol(totalWeightWriteAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>436</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>2185D0C4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>437</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemWeightAOB,DDDA.exe,F3 0F 10 40 44 83 FE 06)
registersymbol(highlightedItemWeightAOB)

label(pHighlightedItemWeight)
registersymbol(pHighlightedItemWeight)

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHighlightedItemWeight],eax

originalcode4:
movss xmm0,[eax+44]

exit4:
jmp returnhere4

///
pHighlightedItemWeight:
dd 0
///

highlightedItemWeightAOB: //"DDDA.exe"+593AA:
jmp newmem4
returnhere4:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem4)
highlightedItemWeightAOB: //"DDDA.exe"+593AA:
db F3 0F 10 40 44
//Alt: movss xmm0,[eax+44]
unregistersymbol(highlightedItemWeightAOB)

unregistersymbol(pHighlightedItemWeight)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>275</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>11297AFC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>276</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>1E4D8E00</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>277</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>35BC9820</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>278</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>3C08B460</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>281</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>0CF685CC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>283</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>215dd036</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>285</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>215DF7B6</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>287</ID>
          <Description>"No Description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>0A2C8068</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>288</ID>
          <Description>"No Description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>014EFBB0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>289</ID>
          <Description>"No Description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>014F0A10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>290</ID>
          <Description>"No Description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>014F0990</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>291</ID>
          <Description>"skull spliter"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>014F0A10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>292</ID>
          <Description>"Fracture Dart"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>014F22F0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>293</ID>
          <Description>"No Description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>014F2270</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>282</ID>
          <Description>"Ignore Equipment Vocation Restriction"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(setFlagIfClassMatchedAOB,DDDA.exe,0F 94 C0 C2 0C 00)
registersymbol(setFlagIfClassMatchedAOB)

setFlagIfClassMatchedAOB: //"DDDA.exe"+63DB2:
db 90 B0 01
//Alt: nop
//Alt: mov al,1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
setFlagIfClassMatchedAOB: //"DDDA.exe"+63DB2:
db 0F 94 C0
//Alt: sete al
unregistersymbol(setFlagIfClassMatchedAOB)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
