<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"[X] &lt;== Wargame European Escalation Script"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Wargame European Escalation
 Game Version  : Unknown (DX9)
 Proces Name   : WarGame.exe
 Script Version: 1.0
 CE Version    : 6.2
 Release date  : 25-May-2012
 Author        : Recifense
 History:
 25-May-12: First Release
 Features:
 - Minimum Money  (4000)
 - Maximum Money for the enemy (10)
 - Unlimited Fuel
===========================================
}

//=========================================
// Definitions
define(BASEPL,WarGame.exe+012d22dc)

//=========================================
[ENABLE]
//=========================================
LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(WarGame.exe+0094dc10,8b 51 04 8b c2)
assert(WarGame.exe+00899e73,d9 40 18 d9 5e 3c)
assert(WarGame.exe+008a967d,f3 0f 11 40 18)

//=========================================
alloc(MyCode,1024,WarGame.exe)
//=========================================
// Declaration section
label(_MonPlayer)
label(_MonP00)
label(_MonP01)
label(_MonP02)
label(_BackMP)
label(_ExitMP)
label(_MonFuelMark)
label(_BackMFM)
label(_ExitMFM)
label(_MonFullFuel)
label(_BackMFF)
label(_ExitMFF)
label(_RD_Enc_T2)
label(_WR_Enc_T2)
label(_RD_Enc_T1)
label(_WR_Enc_T1)
label(pUnit)
label(pPlayer)
label(pEnemy)
label(iEnableMM)
label(iEnableME)
label(iEnableMFM)
label(iEnableMFF)
label(iMinMoney)
label(iMaxMoney)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pUnit)
registersymbol(pPlayer)
registersymbol(pEnemy)
registersymbol(iEnableMM)
registersymbol(iEnableME)
registersymbol(iEnableMFM)
registersymbol(iEnableMFF)
registersymbol(iMinMoney)
registersymbol(iMaxMoney)

//=========================================
MyCode:
//=========================================
// During deployment phase
_MonPlayer:
 push ebx

 mov edx,[ecx]                     // get base
 test edx,edx
 jz _ExitMP

 mov eax,[edx]
 cmp eax,BASEPL
 jne _ExitMP

 cmp dword ptr [edx+3c],0
 jne _MonP01

 mov [pPlayer],edx

 cmp dword ptr [iEnableMM],0
 je _ExitMP                        // Jump if feature is disabled

 mov eax,[edx+00000234]
 cmp eax,2
 jne _MonP00

 call _RD_Enc_T2
 cmp ebx,[iMinMoney]
 jge _ExitMP

 mov ebx,[iMinMoney]
 call _WR_Enc_T2
 jmp _ExitMP

_MonP00:
 cmp eax,1
 jne _ExitMP

 call _RD_Enc_T1
 cmp ebx,[iMinMoney]
 jge _ExitMP

 mov ebx,[iMinMoney]
 call _WR_Enc_T1
 jmp _ExitMP

_MonP01:
 mov [pEnemy],edx

 cmp dword ptr [iEnableME],0
 je _ExitMP                        // Jump if feature is disabled

 mov eax,[edx+00000234]
 cmp eax,2
 jne _MonP02

 call _RD_Enc_T2
 cmp ebx,[iMaxMoney]
 jge _ExitMP

 mov ebx,[iMaxMoney]
 call _WR_Enc_T2
 jmp _ExitMP

_MonP02:
 cmp eax,1
 jne _ExitMP

 call _RD_Enc_T1
 cmp ebx,[iMaxMoney]
 jle _ExitMP

 mov ebx,[iMaxMoney]
 call _WR_Enc_T1

_ExitMP:
 pop ebx

 mov edx,[ecx+04]                  // Original code
 mov eax,edx                       // Original code
 jmp _BackMP                       // Back to main code

//=========================================
// Input : ECX
// Output: EBX
_RD_Enc_T2:
 push eax

 mov eax,[ecx+04]
 and eax,07
 mov ebx,[ecx+eax*4+0c]
 xor ebx,DEADBABE

 pop eax
 ret

//=========================================
// Input : ECX
// Output: EBX
_RD_Enc_T1:
 push eax

 mov eax,[ecx+04]
 and eax,07
 mov ebx,[ecx+eax*4+10]
 xor ebx,DEADBABE

 pop eax
 ret

//=========================================
// Input : ECX, EBX
_WR_Enc_T2:
 push eax
 push edx

 mov eax,[ecx+04]
 and eax,07

 mov edx,DEADBABE
 xor edx,ebx
 mov [ecx+eax*4+0c],edx

 mov edx,[ecx+04]
 xor edx,ebx
 mov [ecx+eax*4+10],edx

 pop edx
 pop eax
 ret

//=========================================
// Input : ECX, EBX
_WR_Enc_T1:
 push eax
 push edx

 mov eax,[ecx+04]
 and eax,07

 mov edx,DEADBABE
 xor edx,ebx
 mov [ecx+eax*4+10],edx

 mov edx,[ecx+04]
 add edx,ebx
 mov [ecx+eax*4+0c],edx

 pop edx
 pop eax
 ret

//=========================================
// Slected Unit or unit under cursor
_MonFuelMark:
 push ebx

 cmp dword ptr [iEnableMFM],0
 je _ExitMFM                       // Jump if feature is disabled

 mov ebx,[eax+14]
 mov [eax+18],ebx

 mov dword ptr [eax+0c],1          // Mark it

_ExitMFM:
 pop ebx

 fld dword ptr [eax+18]            // Original code
 fstp dword ptr [esi+3C]           // Original code
 jmp _BackMFM                      // Back to main code

//=========================================
// Slected Unit or unit under cursor
_MonFullFuel:
 cmp dword ptr [iEnableMFF],0
 je _ExitMFF                       // Jump if feature is disabled

 cmp dword ptr [eax+0c],1
 jne _ExitMFF

 movss xmm0,[eax+14]

_ExitMFF:
 movss [eax+18],xmm0               // Original code
 jmp _BackMFF                      // Back to main code

//=========================================
 db '============================&gt;'
 db 'CE6.2 Script by Recifense 052512'
//=========================================
// Variables
iEnableMM:
 dd 0
iEnableME:
 dd 0
iEnableMFM:
 dd 0
iEnableMFF:
 dd 0
pUnit:
 dd 0
pPlayer:
 dd 0
pEnemy:
 dd 0
iMinMoney:
 dd #3360000
iMaxMoney:
 dd #8400

//=========================================
// Hacking Points
WarGame.exe+0094dc10:
 jmp _MonPlayer
_BackMP:

WarGame.exe+00899e73:
 jmp _MonFuelMark
 nop
_BackMFM:

WarGame.exe+008a967d:
 jmp _MonFullFuel
_BackMFF:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
WarGame.exe+0094dc10:
// mov edx,[ecx+04]
// mov eax,edx
 db 8b 51 04 8b c2

WarGame.exe+00899e73:
// fld dword ptr [eax+18]
// fstp dword ptr [esi+3C]
 db d9 40 18 d9 5e 3c

WarGame.exe+008a967d:
// movss [eax+18],xmm0
 db f3 0f 11 40 18

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pUnit)
unregistersymbol(pPlayer)
unregistersymbol(pEnemy)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableME)
unregistersymbol(iMinMoney)
unregistersymbol(iMaxMoney)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Enable/Disable Minimum Money =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Enable/Disable Maximum Money for Enemy =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableME</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Enable/Disable Mark Unit for Unlimited Fuel =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMFM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Enable/Disable Mark Unlimited Fuel =&gt; (1/0) **"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMFF</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>iEnableMFM</Name>
      <Address>043E01F8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMFF</Name>
      <Address>043E01FC</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Wargame European Escalation
 Game Version  : Unknown (DX9)
 Proces Name   : WarGame.exe
 Script Version: 1.0
 CE Version    : 6.2
 Release date  : 25-May-2012
 Author        : Recifense
 History:
 25-May-12: First Release
 Features:
 - Minimum Money  (4000)
 - Maximum Money for the enemy (10)
 - Unlimited Fuel
===========================================
[MINIMUM MONEY] Player's money will not go under 4000. The displayed value is not the real one.
[MAXIMUM MONEY] Enemy's money will not go above 10.
[MARK UNIT] When you click on your unit, it will be marked. So the Fuel Cheat will not let it decrease.
[UNLIMITED FUEL] If the MARK UNIT is disabled, for filling up the unit's tank, you have to click once in a while on it. If the MARK UNIT is enabled, you only have to click on a unit once.
===========================================
[Note] You can set hotkeys.
[Note] There is a lua script to check the compatibility of the game with script. So let it run. If you bypassed this phase, just go to TABLE-&gt;Show Cheat Table Luas Script. Then press the button EXECUTE SCRIPT.
===========================================
[NOTE] This game is tough one to cheat. Maybe, in the future, I will come back to it and try to cheat "Number of units" and God Mode.
===========================================

</Comments>
  <LuaScript>--[[
===========================================
 Game Title    : Wargame European Escalation
 Game Version  : Unknown (DX9)
 LUA Script checking the compatility of the AA script with current game version;
 By Recifense
===========================================
]]--

function CheckVersion()
  if (AssertVersion() == false) then
    showMessage("Sorry! Script not compliant with this Game's version/build")
	return false
  else
    return true
  end
end

function AssertVersion()
	local sa1 = "WarGame.exe+0094dc10"
    local ta1 = {0x8b,0x51,0x04,0x8b,0xc2}
	local sa2 = "WarGame.exe+00899e73"
    local ta2 = {0xd9,0x40,0x18,0xd9,0x5e,0x3c}
	local sa3 = "WarGame.exe+008a967d"
    local ta3 = {0xf3,0x0f,0x11,0x40,0x18}

	if (CheckArray(ta1,sa1) == false) then
	    return false
	end
	if (CheckArray(ta2,sa2) == false) then
	    return false
	end
	if (CheckArray(ta3,sa3) == false) then
	    return false
	end

    return true
end

function CheckArray(tb, gm)
    local sz,i,rm = 0,0,0
    local address = " "

    if(type(tb) ~= "table") then
        return false
    end

    sz = table.maxn(tb)

    if(sz == 0) then
        return false
    end

    for i = 1, sz do
        address = gm.."+"..tostring(i-1)
        rm	= readBytes(address)
        if (tb[i] ~= rm ) then
            return false
        end
    end

    return true
end

</LuaScript>
</CheatTable>
