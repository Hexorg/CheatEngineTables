<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Unlimited_Ammo [AoB]"</Description>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(Ammo,ghost.exe,18 D9 9E B4 00 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fild dword ptr [esi+000000B0]
  fstp dword ptr [esi+000000B4]
  jmp return

Ammo+01:
  jmp code
  nop
return:
registersymbol(Ammo)

[DISABLE]
Ammo+01:
  db D9 9E B4 00 00 00

unregistersymbol(Ammo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ghost.exe"+96C91

"ghost.exe"+96C66: 85 C0                          -  test eax,eax
"ghost.exe"+96C68: 74 11                          -  je ghost.exe+96C7B
"ghost.exe"+96C6A: F7 80 B0 00 00 00 00 00 40 00  -  test [eax+000000B0],400000
"ghost.exe"+96C74: 74 05                          -  je ghost.exe+96C7B
"ghost.exe"+96C76: BF 0A 00 00 00                 -  mov edi,0000000A
"ghost.exe"+96C7B: D9 86 B4 00 00 00              -  fld dword ptr [esi+000000B4]
"ghost.exe"+96C81: 6A 04                          -  push 04
"ghost.exe"+96C83: D9 5C 24 10                    -  fstp dword ptr [esp+10]
"ghost.exe"+96C87: D9 86 B4 00 00 00              -  fld dword ptr [esi+000000B4]
"ghost.exe"+96C8D: D8 44 24 18                    -  fadd dword ptr [esp+18]
// ---------- INJECTING HERE ----------
"ghost.exe"+96C91: D9 9E B4 00 00 00              -  fstp dword ptr [esi+000000B4]
// ---------- DONE INJECTING  ----------
"ghost.exe"+96C97: 8B 0D 6C 17 20 01              -  mov ecx,[ghost.exe+E0176C]
"ghost.exe"+96C9D: 8B 89 00 31 00 00              -  mov ecx,[ecx+00003100]
"ghost.exe"+96CA3: E8 08 39 00 00                 -  call ghost.exe+9A5B0
"ghost.exe"+96CA8: 85 C0                          -  test eax,eax
"ghost.exe"+96CAA: 74 2B                          -  je ghost.exe+96CD7
"ghost.exe"+96CAC: 8B 15 6C 17 20 01              -  mov edx,[ghost.exe+E0176C]
"ghost.exe"+96CB2: 8B 82 00 31 00 00              -  mov eax,[edx+00003100]
"ghost.exe"+96CB8: 83 B8 64 06 00 00 65           -  cmp dword ptr [eax+00000664],65
"ghost.exe"+96CBF: 75 16                          -  jne ghost.exe+96CD7
"ghost.exe"+96CC1: D9 44 24 14                    -  fld dword ptr [esp+14]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Unlimited_Health [AoB]"</Description>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(Health,ghost.exe,D9 96 54 05 00 00 D8 D9) // should be unique
alloc(newmem,$1000)

label(code)
label(originalcode)
label(return)

newmem:

code:
  cmp [esi+000006A0],1
  jne originalcode
  fild dword ptr [esi+00000550]
  fst dword ptr [esi+00000554]
  jmp return

originalcode:
  fst dword ptr [esi+00000554]
  jmp return

Health:
  jmp code
  nop
return:
registersymbol(Health)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Health:
  db D9 96 54 05 00 00

unregistersymbol(Health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ghost.exe"+D4FE9

"ghost.exe"+D4FBC: D9 81 88 01 00 00     -  fld dword ptr [ecx+00000188]
"ghost.exe"+D4FC2: DC 05 20 4C 54 00     -  fadd qword ptr [ghost.exe+144C20]
"ghost.exe"+D4FC8: DA 4C 24 0C           -  fimul [esp+0C]
"ghost.exe"+D4FCC: E8 8F 73 05 00        -  call ghost.exe+12C360
"ghost.exe"+D4FD1: 8B E8                 -  mov ebp,eax
"ghost.exe"+D4FD3: 89 6C 24 0C           -  mov [esp+0C],ebp
"ghost.exe"+D4FD7: D9 86 54 05 00 00     -  fld dword ptr [esi+00000554]
"ghost.exe"+D4FDD: DA 64 24 0C           -  fisub [esp+0C]
"ghost.exe"+D4FE1: D9 5C 24 0C           -  fstp dword ptr [esp+0C]
"ghost.exe"+D4FE5: D9 44 24 0C           -  fld dword ptr [esp+0C]
// ---------- INJECTING HERE ----------
"ghost.exe"+D4FE9: D9 96 54 05 00 00     -  fst dword ptr [esi+00000554]
// ---------- DONE INJECTING  ----------
"ghost.exe"+D4FEF: D8 D9                 -  fcomp st(0),st(1)
"ghost.exe"+D4FF1: DF E0                 -  fnstsw ax
"ghost.exe"+D4FF3: F6 C4 05              -  test ah,05
"ghost.exe"+D4FF6: 7A 06                 -  jp ghost.exe+D4FFE
"ghost.exe"+D4FF8: D9 96 54 05 00 00     -  fst dword ptr [esi+00000554]
"ghost.exe"+D4FFE: D8 96 40 02 00 00     -  fcom dword ptr [esi+00000240]
"ghost.exe"+D5004: 53                    -  push ebx
"ghost.exe"+D5005: 57                    -  push edi
"ghost.exe"+D5006: 8B 7C 24 18           -  mov edi,[esp+18]
"ghost.exe"+D500A: BB 01 00 00 00        -  mov ebx,00000001
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Unlimited_CubeEnergy [AoB]"</Description>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ghost.exe
  Version: 
  Date   : 2016-08-28
  Author : Nemesis

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(Cube,ghost.exe,8B 88 60 06 00 00 6A) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+00000660],(int)99999
  mov ecx,[eax+00000660]
  jmp return

Cube:
  jmp code
  nop
return:
registersymbol(Cube)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Cube:
  db 8B 88 60 06 00 00

unregistersymbol(Cube)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ghost.exe"+F8B49

"ghost.exe"+F8B1A: 51                    -  push ecx
"ghost.exe"+F8B1B: B9 08 4D 5A 00        -  mov ecx,ghost.exe+1A4D08
"ghost.exe"+F8B20: D9 1C 24              -  fstp dword ptr [esp]
"ghost.exe"+F8B23: E8 C8 CB 00 00        -  call ghost.exe+1056F0
"ghost.exe"+F8B28: 68 00 FF FF 00        -  push ghost.exe+BFFF00
"ghost.exe"+F8B2D: B9 08 4D 5A 00        -  mov ecx,ghost.exe+1A4D08
"ghost.exe"+F8B32: E8 39 CC 00 00        -  call ghost.exe+105770
"ghost.exe"+F8B37: D9 05 9C 81 54 00     -  fld dword ptr [ghost.exe+14819C]
"ghost.exe"+F8B3D: 8B 15 6C 17 20 01     -  mov edx,[ghost.exe+E0176C]
"ghost.exe"+F8B43: 8B 82 00 31 00 00     -  mov eax,[edx+00003100]
// ---------- INJECTING HERE ----------
"ghost.exe"+F8B49: 8B 88 60 06 00 00     -  mov ecx,[eax+00000660]
// ---------- DONE INJECTING  ----------
"ghost.exe"+F8B4F: 6A 00                 -  push 00
"ghost.exe"+F8B51: 83 EC 08              -  sub esp,08
"ghost.exe"+F8B54: D9 5C 24 04           -  fstp dword ptr [esp+04]
"ghost.exe"+F8B58: D9 05 50 DE 54 00     -  fld dword ptr [ghost.exe+14DE50]
"ghost.exe"+F8B5E: D9 1C 24              -  fstp dword ptr [esp]
"ghost.exe"+F8B61: 51                    -  push ecx
"ghost.exe"+F8B62: B9 08 4D 5A 00        -  mov ecx,ghost.exe+1A4D08
"ghost.exe"+F8B67: E8 74 D4 00 00        -  call ghost.exe+105FE0
"ghost.exe"+F8B6C: A1 68 17 20 01        -  mov eax,[ghost.exe+E01768]
"ghost.exe"+F8B71: 39 78 30              -  cmp [eax+30],edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Unlimited_SkillPoints [AoB]"</Description>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(Talent,ghost.exe,8B 99 7C 9A 01 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+00019A7C],(int)60
  mov ebx,[ecx+00019A7C]
  jmp return

Talent:
  jmp code
  nop
return:
registersymbol(Talent)

[DISABLE]

Talent:
  db 8B 99 7C 9A 01 00

unregistersymbol(Talent)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ghost.exe"+6E731

"ghost.exe"+6E705: 6A 00                          -  push 00
"ghost.exe"+6E707: 6A 00                          -  push 00
"ghost.exe"+6E709: B9 60 9F E3 00                 -  mov ecx,ghost.exe+A39F60
"ghost.exe"+6E70E: C7 05 60 6D 20 01 02 00 00 00  -  mov [ghost.exe+E06D60],00000002
"ghost.exe"+6E718: E8 E3 3B FB FF                 -  call ghost.exe+22300
"ghost.exe"+6E71D: 6A 00                          -  push 00
"ghost.exe"+6E71F: 6A 0C                          -  push 0C
"ghost.exe"+6E721: B9 60 9F E3 00                 -  mov ecx,ghost.exe+A39F60
"ghost.exe"+6E726: E8 D5 66 FB FF                 -  call ghost.exe+24E00
"ghost.exe"+6E72B: 8B 0D 84 25 20 01              -  mov ecx,[ghost.exe+E02584]
// ---------- INJECTING HERE ----------
"ghost.exe"+6E731: 8B 99 7C 9A 01 00              -  mov ebx,[ecx+00019A7C]
// ---------- DONE INJECTING  ----------
"ghost.exe"+6E737: 89 5C 24 1C                    -  mov [esp+1C],ebx
"ghost.exe"+6E73B: 8D 84 24 B0 00 00 00           -  lea eax,[esp+000000B0]
"ghost.exe"+6E742: 8D B9 81 9A 01 00              -  lea edi,[ecx+00019A81]
"ghost.exe"+6E748: BD 04 00 00 00                 -  mov ebp,00000004
"ghost.exe"+6E74D: 8D 49 00                       -  lea ecx,[ecx+00]
"ghost.exe"+6E750: C7 00 00 00 00 00              -  mov [eax],00000000
"ghost.exe"+6E756: 8B CF                          -  mov ecx,edi
"ghost.exe"+6E758: BA 05 00 00 00                 -  mov edx,00000005
"ghost.exe"+6E75D: 8D 49 00                       -  lea ecx,[ecx+00]
"ghost.exe"+6E760: 80 79 FF 00                    -  cmp byte ptr [ecx-01],00
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Unlimited_Ammo [AA_Script]"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ghost.exe
  Version: 
  Date   : 2016-08-28
  Author : Nemesis

  This script does blah blah blah
}

define(address,"ghost.exe"+96C91)
define(bytes,D9 9E B4 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fild dword ptr [esi+000000B0]
  fstp dword ptr [esi+000000B4]
  jmp return

address:
  jmp code
  nop
return:

[DISABLE]

address:
  db bytes
  // fstp dword ptr [esi+000000B4]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ghost.exe"+96C91

"ghost.exe"+96C66: 85 C0                          -  test eax,eax
"ghost.exe"+96C68: 74 11                          -  je ghost.exe+96C7B
"ghost.exe"+96C6A: F7 80 B0 00 00 00 00 00 40 00  -  test [eax+000000B0],400000
"ghost.exe"+96C74: 74 05                          -  je ghost.exe+96C7B
"ghost.exe"+96C76: BF 0A 00 00 00                 -  mov edi,0000000A
"ghost.exe"+96C7B: D9 86 B4 00 00 00              -  fld dword ptr [esi+000000B4]
"ghost.exe"+96C81: 6A 04                          -  push 04
"ghost.exe"+96C83: D9 5C 24 10                    -  fstp dword ptr [esp+10]
"ghost.exe"+96C87: D9 86 B4 00 00 00              -  fld dword ptr [esi+000000B4]
"ghost.exe"+96C8D: D8 44 24 18                    -  fadd dword ptr [esp+18]
// ---------- INJECTING HERE ----------
"ghost.exe"+96C91: D9 9E B4 00 00 00              -  fstp dword ptr [esi+000000B4]
// ---------- DONE INJECTING  ----------
"ghost.exe"+96C97: 8B 0D 6C 17 20 01              -  mov ecx,[ghost.exe+E0176C]
"ghost.exe"+96C9D: 8B 89 00 31 00 00              -  mov ecx,[ecx+00003100]
"ghost.exe"+96CA3: E8 08 39 00 00                 -  call ghost.exe+9A5B0
"ghost.exe"+96CA8: 85 C0                          -  test eax,eax
"ghost.exe"+96CAA: 74 2B                          -  je ghost.exe+96CD7
"ghost.exe"+96CAC: 8B 15 6C 17 20 01              -  mov edx,[ghost.exe+E0176C]
"ghost.exe"+96CB2: 8B 82 00 31 00 00              -  mov eax,[edx+00003100]
"ghost.exe"+96CB8: 83 B8 64 06 00 00 65           -  cmp dword ptr [eax+00000664],65
"ghost.exe"+96CBF: 75 16                          -  jne ghost.exe+96CD7
"ghost.exe"+96CC1: D9 44 24 14                    -  fld dword ptr [esp+14]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Unlimited_Health [AA_Script]"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ghost.exe
  Version: 
  Date   : 2016-08-28
  Author : Nemesis

  This script does blah blah blah
}

define(address,"ghost.exe"+D4FE9)
define(bytes,D9 96 54 05 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(originalcode)
label(return)

newmem:

code:
  cmp [esi+000006A0],1
  jne originalcode
  fild dword ptr [esi+00000550]
  fst dword ptr [esi+00000554]
  jmp return

originalcode:
  fst dword ptr [esi+00000554]
  jmp return

address:
  jmp code
  nop
return:

[DISABLE]

address:
  db bytes
  // fst dword ptr [esi+00000554]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ghost.exe"+D4FE9

"ghost.exe"+D4FBC: D9 81 88 01 00 00     -  fld dword ptr [ecx+00000188]
"ghost.exe"+D4FC2: DC 05 20 4C 54 00     -  fadd qword ptr [ghost.exe+144C20]
"ghost.exe"+D4FC8: DA 4C 24 0C           -  fimul [esp+0C]
"ghost.exe"+D4FCC: E8 8F 73 05 00        -  call ghost.exe+12C360
"ghost.exe"+D4FD1: 8B E8                 -  mov ebp,eax
"ghost.exe"+D4FD3: 89 6C 24 0C           -  mov [esp+0C],ebp
"ghost.exe"+D4FD7: D9 86 54 05 00 00     -  fld dword ptr [esi+00000554]
"ghost.exe"+D4FDD: DA 64 24 0C           -  fisub [esp+0C]
"ghost.exe"+D4FE1: D9 5C 24 0C           -  fstp dword ptr [esp+0C]
"ghost.exe"+D4FE5: D9 44 24 0C           -  fld dword ptr [esp+0C]
// ---------- INJECTING HERE ----------
"ghost.exe"+D4FE9: D9 96 54 05 00 00     -  fst dword ptr [esi+00000554]
// ---------- DONE INJECTING  ----------
"ghost.exe"+D4FEF: D8 D9                 -  fcomp st(0),st(1)
"ghost.exe"+D4FF1: DF E0                 -  fnstsw ax
"ghost.exe"+D4FF3: F6 C4 05              -  test ah,05
"ghost.exe"+D4FF6: 7A 06                 -  jp ghost.exe+D4FFE
"ghost.exe"+D4FF8: D9 96 54 05 00 00     -  fst dword ptr [esi+00000554]
"ghost.exe"+D4FFE: D8 96 40 02 00 00     -  fcom dword ptr [esi+00000240]
"ghost.exe"+D5004: 53                    -  push ebx
"ghost.exe"+D5005: 57                    -  push edi
"ghost.exe"+D5006: 8B 7C 24 18           -  mov edi,[esp+18]
"ghost.exe"+D500A: BB 01 00 00 00        -  mov ebx,00000001
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Unlimited_CubeEnergy [AA_Script]"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,"ghost.exe"+F8B49)
define(bytes,8B 88 60 06 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+00000660],(int)99999
  mov ecx,[eax+00000660]
  jmp return

address:
  jmp code
  nop
return:

[DISABLE]

address:
db bytes
// mov ecx,[eax+00000660]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ghost.exe"+F8B49

"ghost.exe"+F8B1A: 51                    -  push ecx
"ghost.exe"+F8B1B: B9 08 4D 5A 00        -  mov ecx,ghost.exe+1A4D08
"ghost.exe"+F8B20: D9 1C 24              -  fstp dword ptr [esp]
"ghost.exe"+F8B23: E8 C8 CB 00 00        -  call ghost.exe+1056F0
"ghost.exe"+F8B28: 68 00 FF FF 00        -  push ghost.exe+BFFF00
"ghost.exe"+F8B2D: B9 08 4D 5A 00        -  mov ecx,ghost.exe+1A4D08
"ghost.exe"+F8B32: E8 39 CC 00 00        -  call ghost.exe+105770
"ghost.exe"+F8B37: D9 05 9C 81 54 00     -  fld dword ptr [ghost.exe+14819C]
"ghost.exe"+F8B3D: 8B 15 6C 17 20 01     -  mov edx,[ghost.exe+E0176C]
"ghost.exe"+F8B43: 8B 82 00 31 00 00     -  mov eax,[edx+00003100]
// ---------- INJECTING HERE ----------
"ghost.exe"+F8B49: 8B 88 60 06 00 00     -  mov ecx,[eax+00000660]
// ---------- DONE INJECTING  ----------
"ghost.exe"+F8B4F: 6A 00                 -  push 00
"ghost.exe"+F8B51: 83 EC 08              -  sub esp,08
"ghost.exe"+F8B54: D9 5C 24 04           -  fstp dword ptr [esp+04]
"ghost.exe"+F8B58: D9 05 50 DE 54 00     -  fld dword ptr [ghost.exe+14DE50]
"ghost.exe"+F8B5E: D9 1C 24              -  fstp dword ptr [esp]
"ghost.exe"+F8B61: 51                    -  push ecx
"ghost.exe"+F8B62: B9 08 4D 5A 00        -  mov ecx,ghost.exe+1A4D08
"ghost.exe"+F8B67: E8 74 D4 00 00        -  call ghost.exe+105FE0
"ghost.exe"+F8B6C: A1 68 17 20 01        -  mov eax,[ghost.exe+E01768]
"ghost.exe"+F8B71: 39 78 30              -  cmp [eax+30],edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Unlimited_SkillPoints [AA_Script]"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,"ghost.exe"+6E731)
define(bytes,8B 99 7C 9A 01 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+00019A7C],(int)60
  mov ebx,[ecx+00019A7C]
  jmp return

address:
  jmp code
  nop
return:

[DISABLE]
address:
  db bytes
  // mov ebx,[ecx+00019A7C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ghost.exe"+6E731

"ghost.exe"+6E705: 6A 00                          -  push 00
"ghost.exe"+6E707: 6A 00                          -  push 00
"ghost.exe"+6E709: B9 60 9F E3 00                 -  mov ecx,ghost.exe+A39F60
"ghost.exe"+6E70E: C7 05 60 6D 20 01 02 00 00 00  -  mov [ghost.exe+E06D60],00000002
"ghost.exe"+6E718: E8 E3 3B FB FF                 -  call ghost.exe+22300
"ghost.exe"+6E71D: 6A 00                          -  push 00
"ghost.exe"+6E71F: 6A 0C                          -  push 0C
"ghost.exe"+6E721: B9 60 9F E3 00                 -  mov ecx,ghost.exe+A39F60
"ghost.exe"+6E726: E8 D5 66 FB FF                 -  call ghost.exe+24E00
"ghost.exe"+6E72B: 8B 0D 84 25 20 01              -  mov ecx,[ghost.exe+E02584]
// ---------- INJECTING HERE ----------
"ghost.exe"+6E731: 8B 99 7C 9A 01 00              -  mov ebx,[ecx+00019A7C]
// ---------- DONE INJECTING  ----------
"ghost.exe"+6E737: 89 5C 24 1C                    -  mov [esp+1C],ebx
"ghost.exe"+6E73B: 8D 84 24 B0 00 00 00           -  lea eax,[esp+000000B0]
"ghost.exe"+6E742: 8D B9 81 9A 01 00              -  lea edi,[ecx+00019A81]
"ghost.exe"+6E748: BD 04 00 00 00                 -  mov ebp,00000004
"ghost.exe"+6E74D: 8D 49 00                       -  lea ecx,[ecx+00]
"ghost.exe"+6E750: C7 00 00 00 00 00              -  mov [eax],00000000
"ghost.exe"+6E756: 8B CF                          -  mov ecx,edi
"ghost.exe"+6E758: BA 05 00 00 00                 -  mov edx,00000005
"ghost.exe"+6E75D: 8D 49 00                       -  lea ecx,[ecx+00]
"ghost.exe"+6E760: 80 79 FF 00                    -  cmp byte ptr [ecx-01],00
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_playerbase</Name>
      <Address>02350010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address>00496BB4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_playerhealth</Name>
      <Address>02350000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_pHealth</Name>
      <Address>02350020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_pEnergy</Name>
      <Address>02350030</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
