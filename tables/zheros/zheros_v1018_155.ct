<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Character [Click To Activate]"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

{$lua}
LaunchMonoDataCollector()
{$asm}

registersymbol(pCharacter)

alloc(newmem,2048)
alloc(pCharacter,4)
label(returnhere)
label(originalcode)
label(exit)

Character:Update:
jmp newmem
nop
nop
returnhere:

newmem:
push ecx
mov ecx,[esp+08]
test ecx,ecx
je originalcode   //check if the given address is zero

cmp dword ptr [ecx+248],00   //check if playerId=0 (zero)
jne originalcode

//cmp byte ptr [eax+24c],00   //check if IsEnemy=0 (zero)
//jne originalcode

mov [pCharacter],ecx

originalcode:
pop ecx
push ebp
mov ebp,esp
push edi
sub esp,04

exit:
jmp returnhere

[DISABLE]

unregistersymbol(pCharacter)
dealloc(newmem)
dealloc(pCharacter)

Character:Update:
//db 55 8B EC 57 83 EC 04
push ebp
mov ebp,esp
push edi
sub esp,04
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Base_Address"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>008000</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>0</ByteLength>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"IgnoreCollision_BackingField"</Description>
          <VariableType>Byte</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>21C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"IgnoreCollision"</Description>
          <VariableType>Byte</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>21A</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"IsFainted"</Description>
          <VariableType>Byte</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>169</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"IsAlive"</Description>
          <VariableType>Byte</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>168</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Max_Energy"</Description>
          <VariableType>Float</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>164</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Current_Energy"</Description>
          <VariableType>Float</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>160</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Max_HP"</Description>
          <VariableType>Float</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>15C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Current_HP"</Description>
          <VariableType>Float</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>158</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"JumpForce"</Description>
          <VariableType>Float</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>27C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"MaxSpeedFast"</Description>
          <VariableType>Float</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>270</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"MaxSpeed"</Description>
          <VariableType>Float</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>26C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"BossId"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>250</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"IsEnemy"</Description>
          <VariableType>Byte</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>24C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"PlayerId"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>248</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"_collectibles"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>1C</Offset>
            <Offset>224</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"_points"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>18</Offset>
            <Offset>224</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"_tokens"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>pCharacter</Address>
          <Offsets>
            <Offset>14</Offset>
            <Offset>224</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Scripts"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>19</ID>
              <Description>"Unlimited_HP"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
LaunchMonoDataCollector()
return monoAA_FINDMONOMETHOD("PlayerHP,:Character:get_HP_Current")
{$asm}

define(Immortal,"PlayerHP"+9)
define(bytes,D9 80 58 01 00 00)

[ENABLE]
assert(Immortal,bytes)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
  cmp [eax+00000248],0
  jne originalcode
  fld dword ptr [eax+0000015C]
  jmp exit

originalcode:
  fld dword ptr [eax+00000158]

exit:
jmp returnhere

Immortal:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
Immortal:

db bytes
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>20</ID>
              <Description>"Unlimited_Energy [Weapon]"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
LaunchMonoDataCollector()
return monoAA_FINDMONOMETHOD("PlayerEnergy,:Character:get_Energy_Current")
{$asm}

define(MaxEnergy,"PlayerEnergy"+9)
define(bytes,D9 80 60 01 00 00)

[ENABLE]
assert(MaxEnergy,bytes)
alloc(newmem,2048)
label(returnhere)
label(exit)

newmem:
  fld dword ptr [eax+00000164]

exit:
jmp returnhere

MaxEnergy:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
MaxEnergy:

db bytes
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Unlimited_Tokens [Aob Scan]"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(Tokens,89 7E 14 85 C0)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+14],(int)999999
//  mov [esi+14],edi
  test eax,eax
  jmp return

Tokens:
  jmp code
return:
registersymbol(Tokens)

[DISABLE]
Tokens:
  db 89 7E 14 85 C0

unregistersymbol(Tokens)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 30110FF5

30110FDB: 8B 46 14              -  mov eax,[esi+14]
30110FDE: 3B F8                 -  cmp edi,eax
30110FE0: 0F 94 C0              -  sete al
30110FE3: 0F B6 C0              -  movzx eax,al
30110FE6: 85 C0                 -  test eax,eax
30110FE8: 0F 94 C0              -  sete al
30110FEB: 0F B6 C0              -  movzx eax,al
30110FEE: 33 C9                 -  xor ecx,ecx
30110FF0: 85 FF                 -  test edi,edi
30110FF2: 0F 4C F9              -  cmovl edi,ecx
// ---------- INJECTING HERE ----------
30110FF5: 89 7E 14              -  mov [esi+14],edi
30110FF8: 85 C0                 -  test eax,eax
// ---------- DONE INJECTING  ----------
30110FFA: 74 2E                 -  je CharStatistics:set_Tokens+5a
30110FFC: 8B 46 0C              -  mov eax,[esi+0C]
30110FFF: 83 EC 08              -  sub esp,08
30111002: 6A 00                 -  push 00
30111004: 50                    -  push eax
30111005: E8 06 23 48 D5        -  call UnityEngine:Object:op_Inequality
3011100A: 83 C4 10              -  add esp,10
3011100D: 85 C0                 -  test eax,eax
3011100F: 74 19                 -  je CharStatistics:set_Tokens+5a
30111011: 8B 46 0C              -  mov eax,[esi+0C]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Unlimited_Points [Aob Scan]"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(Points,89 7E 18 85 C0 74 2E)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+18],(int)999999
//  mov [esi+18],edi
  test eax,eax
  jmp return

Points:
  jmp code
return:
registersymbol(Points)

[DISABLE]
Points:
  db 89 7E 18 85 C0

unregistersymbol(Points)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 301111A5

3011118B: 8B 46 18           -  mov eax,[esi+18]
3011118E: 3B F8              -  cmp edi,eax
30111190: 0F 94 C0           -  sete al
30111193: 0F B6 C0           -  movzx eax,al
30111196: 85 C0              -  test eax,eax
30111198: 0F 94 C0           -  sete al
3011119B: 0F B6 C0           -  movzx eax,al
3011119E: 33 C9              -  xor ecx,ecx
301111A0: 85 FF              -  test edi,edi
301111A2: 0F 4C F9           -  cmovl edi,ecx
// ---------- INJECTING HERE ----------
301111A5: 89 7E 18           -  mov [esi+18],edi
301111A8: 85 C0              -  test eax,eax
// ---------- DONE INJECTING  ----------
301111AA: 74 2E              -  je CharStatistics:set_Points+5a
301111AC: 8B 46 0C           -  mov eax,[esi+0C]
301111AF: 83 EC 08           -  sub esp,08
301111B2: 6A 00              -  push 00
301111B4: 50                 -  push eax
301111B5: E8 32 1F 48 D5     -  call 055930EC
301111BA: 83 C4 10           -  add esp,10
301111BD: 85 C0              -  test eax,eax
301111BF: 74 19              -  je CharStatistics:set_Points+5a
301111C1: 8B 46 0C           -  mov eax,[esi+0C]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>26</ID>
              <Description>"Unlimited_RP [Aob Scan]"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(RP,89 87 88 00 00 00 83 EC)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,(int)99
  mov [edi+00000088],eax
  jmp return

RP:
  jmp code
  nop
return:
registersymbol(RP)

[DISABLE]
RP:
  db 89 87 88 00 00 00

unregistersymbol(RP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 30163F9F

30163F7C: 8B 8F 90 00 00 00              -  mov ecx,[edi+00000090]
30163F82: 39 48 0C                       -  cmp [eax+0C],ecx
30163F85: 0F 86 2C 00 00 00              -  jbe GuiPanelUpgrade:sbGetupgradePointsValue+87
30163F8B: 8D 44 88 10                    -  lea eax,[eax+ecx*4+10]
30163F8F: 8B 00                          -  mov eax,[eax]
30163F91: 83 EC 0C                       -  sub esp,0C
30163F94: 50                             -  push eax
30163F95: 39 00                          -  cmp [eax],eax
30163F97: E8 44 00 00 00                 -  call PlayerConfig:GetUpgradeTotalAvailablePoints
30163F9C: 83 C4 10                       -  add esp,10
// ---------- INJECTING HERE ----------
30163F9F: 89 87 88 00 00 00              -  mov [edi+00000088],eax
// ---------- DONE INJECTING  ----------
30163FA5: 83 EC 0C                       -  sub esp,0C
30163FA8: 57                             -  push edi
30163FA9: E8 5A 00 00 00                 -  call GuiPanelUpgrade:sbSetUPLabel
30163FAE: 83 C4 10                       -  add esp,10
30163FB1: 8D 65 FC                       -  lea esp,[ebp-04]
30163FB4: 5F                             -  pop edi
30163FB5: C9                             -  leave 
30163FB6: C3                             -  ret 
30163FB7: 6A 3E                          -  push 3E
30163FB9: 68 78 06 00 00                 -  push 00000678
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>RP</Name>
      <Address>30163F9F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Tokens</Name>
      <Address>3051F4E5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Points</Name>
      <Address>3051F695</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Table Cheat For Zheros v1.018
Tested on Windows 10 64bit
Enable the trainer to start level
For cheat AoB, the trainer is activated after a few seconds
Note: "Unlimited_RP" be activated in the upgrades section at the beginning of the level.
Once enabled , enter and exit the upgrade section to display the 99 RP.

Standalone version can be downloaded from:
https://mega.nz/#F!CFZQDRxK!qwodjYybYpmS8MAZnwDJAA

*** Comments ***
In this table I have used both the Mono Features that AoB Scan.
In this way you will notice the difference in the activation cheat speed.
Please, report any bug or issue.
Feel free to comment and make suggestions.

*** Thansk to ***
- Cielos
- Mgr.inz.Player
- hhhuut
- DaSpamer
... and my mother
</Comments>
</CheatTable>
