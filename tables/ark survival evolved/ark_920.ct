<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>118</ID>
      <Description>"Activate Player Scripts"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//ShooterGame.AShooterCharacter::AllowFirstPerson+9
aobscanmodule(player,ShooterGame.exe,20 48 8B D9 48 81 C1 * * * * 48 8B 01)
alloc(newmem,$1000,player)
alloc(player_ptr,8)
alloc(player_save,7)

label(code)
label(return)

player_save:
  readmem(player+04,7)

newmem:

code:
  readmem(player+04,7)
  //db 48 8B 81
  //readmem(player+07,4)
  mov rax,[rcx+4C0]
  mov [player_ptr],rax
  jmp return

player+04:
  jmp code
  nop
  nop
return:
registersymbol(player)
registersymbol(player_ptr)
registersymbol(player_save)

[DISABLE]
player+04:
  readmem(player_save,7)
unregistersymbol(player)
unregistersymbol(player_ptr)
unregistersymbol(player_save)
dealloc(newmem)
dealloc(player_ptr)
dealloc(player_save)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+200D59

"ShooterGame.exe"+200D49: CC                       -  int 3 
"ShooterGame.exe"+200D4A: CC                       -  int 3 
"ShooterGame.exe"+200D4B: CC                       -  int 3 
"ShooterGame.exe"+200D4C: CC                       -  int 3 
"ShooterGame.exe"+200D4D: CC                       -  int 3 
"ShooterGame.exe"+200D4E: CC                       -  int 3 
"ShooterGame.exe"+200D4F: CC                       -  int 3 
"ShooterGame.exe"+200D50: 40 53                    -  push rbx
"ShooterGame.exe"+200D52: 48 83 EC 20              -  sub rsp,20
"ShooterGame.exe"+200D56: 48 8B D9                 -  mov rbx,rcx
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+200D59: 48 81 C1 D0 05 00 00     -  add rcx,000005D0
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+200D60: 48 8B 01                 -  mov rax,[rcx]
"ShooterGame.exe"+200D63: FF 50 20                 -  call qword ptr [rax+20]
"ShooterGame.exe"+200D66: 84 C0                    -  test al,al
"ShooterGame.exe"+200D68: 74 11                    -  je ShooterGame.exe+200D7B
"ShooterGame.exe"+200D6A: 80 BB D8 09 00 00 00     -  cmp byte ptr [rbx+000009D8],00
"ShooterGame.exe"+200D71: 75 08                    -  jne ShooterGame.exe+200D7B
"ShooterGame.exe"+200D73: B0 01                    -  mov al,01
"ShooterGame.exe"+200D75: 48 83 C4 20              -  add rsp,20
"ShooterGame.exe"+200D79: 5B                       -  pop rbx
"ShooterGame.exe"+200D7A: C3                       -  ret 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>81</ID>
          <Description>"Full Player Status"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(status,ShooterGame.exe,F3 0F 58 04 BE)
alloc(newmem,$1000,status)
alloc(float1,4)

label(code)
label(return)

float1:
  dd (float)1

newmem:
  cmp rbx,[player_ptr]
  jne code
  movss xmm0,[float1]

code:
  addss xmm0,[rsi+rdi*4]
  jmp return

status:
  jmp newmem
return:
registersymbol(status)

[DISABLE]
status:
  db F3 0F 58 04 BE
unregistersymbol(status)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+13D4E0

"ShooterGame.exe"+13D4A3: F3 0F 59 84 BB 08 01 00 00  -  mulss xmm0,[rbx+rdi*4+00000108]
"ShooterGame.exe"+13D4AC: EB 16                       -  jmp ShooterGame.exe+13D4C4
"ShooterGame.exe"+13D4AE: 80 7C 24 70 00              -  cmp byte ptr [rsp+70],00
"ShooterGame.exe"+13D4B3: 74 15                       -  je ShooterGame.exe+13D4CA
"ShooterGame.exe"+13D4B5: F3 0F 10 44 24 60           -  movss xmm0,[rsp+60]
"ShooterGame.exe"+13D4BB: F3 0F 59 84 BB F0 07 00 00  -  mulss xmm0,[rbx+rdi*4+000007F0]
"ShooterGame.exe"+13D4C4: F3 0F 11 44 24 60           -  movss [rsp+60],xmm0
"ShooterGame.exe"+13D4CA: F3 0F 10 44 24 60           -  movss xmm0,[rsp+60]
"ShooterGame.exe"+13D4D0: F3 0F 10 8C BB 08 01 00 00  -  movss xmm1,[rbx+rdi*4+00000108]
"ShooterGame.exe"+13D4D9: 48 8D B3 F0 07 00 00        -  lea rsi,[rbx+000007F0]
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+13D4E0: F3 0F 58 04 BE              -  addss xmm0,[rsi+rdi*4]
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+13D4E5: 48 8D 34 BE                 -  lea rsi,[rsi+rdi*4]
"ShooterGame.exe"+13D4E9: 0F 2F C6                    -  comiss xmm0,xmm6
"ShooterGame.exe"+13D4EC: 73 05                       -  jae ShooterGame.exe+13D4F3
"ShooterGame.exe"+13D4EE: 0F 28 C6                    -  movaps xmm0,xmm6
"ShooterGame.exe"+13D4F1: EB 08                       -  jmp ShooterGame.exe+13D4FB
"ShooterGame.exe"+13D4F3: 0F 2F C1                    -  comiss xmm0,xmm1
"ShooterGame.exe"+13D4F6: 72 03                       -  jb ShooterGame.exe+13D4FB
"ShooterGame.exe"+13D4F8: 0F 28 C1                    -  movaps xmm0,xmm1
"ShooterGame.exe"+13D4FB: 0F 2E C6                    -  ucomiss xmm0,xmm6
"ShooterGame.exe"+13D4FE: F3 0F 11 06                 -  movss [rsi],xmm0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Player Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Base Address"</Description>
              <LastState Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>23</ID>
                  <Description>"Current Health"</Description>
                  <LastState Value="??" Activated="0" RealAddress="000007F8"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+7f8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"Current Stamina"</Description>
                  <LastState Value="??" Activated="0" RealAddress="000007FC"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+7fc</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"Current Oxygen"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000804"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+804</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>28</ID>
                  <Description>"Current Food"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000808"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+808</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>29</ID>
                  <Description>"Current Water"</Description>
                  <LastState Value="??" Activated="0" RealAddress="0000080C"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+80c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>25</ID>
                  <Description>"Experience"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000700"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+700</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>127</ID>
                  <Description>"Current Torpor"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000800"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+800</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>64</ID>
                  <Description>"Maximum Weight"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000124"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+124</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>63</ID>
                  <Description>"Melee Damage"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000128"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+128</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>34</ID>
                  <Description>"Movement Speed"</Description>
                  <LastState Value="??" Activated="0" RealAddress="0000012C"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+12c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>65</ID>
                  <Description>"Fortitude"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000130"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+130</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>66</ID>
                  <Description>"Crafting Speed"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000134"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+134</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>58</ID>
                  <Description>"Maximum Health"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000108"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+108</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>59</ID>
                  <Description>"Maximum Stamina"</Description>
                  <LastState Value="??" Activated="0" RealAddress="0000010C"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+10c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>60</ID>
                  <Description>"Maximum Oxygen"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000114"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+114</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>61</ID>
                  <Description>"Maximum Food"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000118"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+118</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>62</ID>
                  <Description>"Maximum Water"</Description>
                  <LastState Value="??" Activated="0" RealAddress="0000011C"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+11c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>57</ID>
                  <Description>"Maximum Torpor"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000110"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>+110</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>67</ID>
                  <Description>"God Mode"</Description>
                  <LastState Value="??" Activated="0" RealAddress="000007D4"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>+7D4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>92</ID>
      <Description>"Unlimited Ammo"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(ammo,ShooterGame.exe,E8 * * * * 84 C0 0F 85 * * * * F6 83 * * * * * 74 * 80)
alloc(ammo_save,5)

ammo_save:
  readmem(ammo,5)

ammo:
  db B0 01 90 90 90
registersymbol(ammo)
registersymbol(ammo_save)

[DISABLE]
ammo:
  readmem(ammo_save,5)
  //db E8 C2 AB FF FF
unregistersymbol(ammo)
unregistersymbol(ammo_save)
dealloc(ammo_save)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+284FA9

"ShooterGame.exe"+284F91: 48 8B 6C 24 50                 -  mov rbp,[rsp+50]
"ShooterGame.exe"+284F96: 48 83 C4 38                    -  add rsp,38
"ShooterGame.exe"+284F9A: 41 5F                          -  pop r15
"ShooterGame.exe"+284F9C: 5B                             -  pop rbx
"ShooterGame.exe"+284F9D: C3                             -  ret 
"ShooterGame.exe"+284F9E: CC                             -  int 3 
"ShooterGame.exe"+284F9F: CC                             -  int 3 
"ShooterGame.exe"+284FA0: 40 53                          -  push rbx
"ShooterGame.exe"+284FA2: 48 83 EC 20                    -  sub rsp,20
"ShooterGame.exe"+284FA6: 48 8B D9                       -  mov rbx,rcx
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+284FA9: E8 C2 AB FF FF                 -  call ShooterGame.exe+27FB70
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+284FAE: 84 C0                          -  test al,al
"ShooterGame.exe"+284FB0: 0F 85 8D 00 00 00              -  jne ShooterGame.exe+285043
"ShooterGame.exe"+284FB6: F6 83 1C 08 00 00 02           -  test byte ptr [rbx+0000081C],02
"ShooterGame.exe"+284FBD: 74 09                          -  je ShooterGame.exe+284FC8
"ShooterGame.exe"+284FBF: 80 BB 18 01 00 00 03           -  cmp byte ptr [rbx+00000118],03
"ShooterGame.exe"+284FC6: 75 7B                          -  jne ShooterGame.exe+285043
"ShooterGame.exe"+284FC8: FF 8B 4C 08 00 00              -  dec [rbx+0000084C]
"ShooterGame.exe"+284FCE: 48 83 BB 28 05 00 00 00        -  cmp qword ptr [rbx+00000528],00
"ShooterGame.exe"+284FD6: 74 35                          -  je ShooterGame.exe+28500D
"ShooterGame.exe"+284FD8: F6 83 98 08 00 00 01           -  test byte ptr [rbx+00000898],01
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>83</ID>
      <Description>"Unlimited Inventory"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//ShooterGame.UPrimalItem::SetQuantity+C0F
aobscanmodule(inventory,ShooterGame.exe,41 89 * * * * * E8 * * * * 84 C0)
alloc(newmem,$1000,inventory)
alloc(inventory_save,7)

label(code)
label(return)

inventory_save:
  readmem(inventory,7)

newmem:
  db 41 39
  readmem(inventory+2,5)
  //cmp [r15+00000420],eax
  jg return

code:
  readmem(inventory,7)
  jmp return

inventory:
  jmp newmem
  nop
  nop
return:
registersymbol(inventory)
registersymbol(inventory_save)

[DISABLE]
inventory:
  readmem(inventory_save,7)
unregistersymbol(inventory)
unregistersymbol(inventory_save)
dealloc(newmem)
dealloc(inventory_save)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+1A391F

"ShooterGame.exe"+1A38F1: 48 8B 4D D0              -  mov rcx,[rbp-30]
"ShooterGame.exe"+1A38F5: 48 85 C9                 -  test rcx,rcx
"ShooterGame.exe"+1A38F8: 74 05                    -  je ShooterGame.exe+1A38FF
"ShooterGame.exe"+1A38FA: E8 F1 C5 27 00           -  call ShooterGame.exe+41FEF0
"ShooterGame.exe"+1A38FF: 4C 8B AC 24 00 01 00 00  -  mov r13,[rsp+00000100]
"ShooterGame.exe"+1A3907: 48 8B BC 24 10 01 00 00  -  mov rdi,[rsp+00000110]
"ShooterGame.exe"+1A390F: 48 8B B4 24 18 01 00 00  -  mov rsi,[rsp+00000118]
"ShooterGame.exe"+1A3917: 8B 45 48                 -  mov eax,[rbp+48]
"ShooterGame.exe"+1A391A: 33 D2                    -  xor edx,edx
"ShooterGame.exe"+1A391C: 49 8B CC                 -  mov rcx,rsp
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+1A391F: 41 89 87 00 04 00 00     -  mov [r15+00000400],eax
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+1A3926: E8 A5 50 B1 00           -  call ShooterGame.exe+CB89D0
"ShooterGame.exe"+1A392B: 84 C0                    -  test al,al
"ShooterGame.exe"+1A392D: 0F 84 54 01 00 00        -  je ShooterGame.exe+1A3A87
"ShooterGame.exe"+1A3933: 45 33 C0                 -  xor r8d,r8d
"ShooterGame.exe"+1A3936: B2 01                    -  mov dl,01
"ShooterGame.exe"+1A3938: 49 8B CC                 -  mov rcx,rsp
"ShooterGame.exe"+1A393B: 49 8B DE                 -  mov rbx,r14
"ShooterGame.exe"+1A393E: E8 6D A3 39 00           -  call ShooterGame.exe+53DCB0
"ShooterGame.exe"+1A3943: 84 C0                    -  test al,al
"ShooterGame.exe"+1A3945: 0F 84 84 00 00 00        -  je ShooterGame.exe+1A39CF
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>113</ID>
      <Description>"Unlimited Durability"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(durability,ShooterGame.exe,BA * * * * 48 8B D9 FF * * * * * F3 0F 10 8B * * * * F3 0F 5E C8)
alloc(newmem,$1000,durability)
alloc(durability_save,8)

label(code)
label(return)

durability_save:
  readmem(durability+E,8)

newmem:

code:
  db F3 0F 11 83
  readmem(durability+12,4)
  //movss [rbx+000003C4],xmm0
  movss xmm1,xmm0
  jmp return

durability+E:
  jmp code
  nop
  nop
  nop
return:
registersymbol(durability)
registersymbol(durability_save)

[DISABLE]
durability+E:
  readmem(durability_save,8)
unregistersymbol(durability)
unregistersymbol(durability_save)
dealloc(newmem)
dealloc(durability_save)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+1949D7

"ShooterGame.exe"+1949BC: CC                       -  int 3 
"ShooterGame.exe"+1949BD: CC                       -  int 3 
"ShooterGame.exe"+1949BE: CC                       -  int 3 
"ShooterGame.exe"+1949BF: CC                       -  int 3 
"ShooterGame.exe"+1949C0: 40 53                    -  push rbx
"ShooterGame.exe"+1949C2: 48 83 EC 20              -  sub rsp,20
"ShooterGame.exe"+1949C6: 48 8B 01                 -  mov rax,[rcx]
"ShooterGame.exe"+1949C9: BA 02 00 00 00           -  mov edx,00000002
"ShooterGame.exe"+1949CE: 48 8B D9                 -  mov rbx,rcx
"ShooterGame.exe"+1949D1: FF 90 78 02 00 00        -  call qword ptr [rax+00000278]
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+1949D7: F3 0F 10 8B A4 03 00 00  -  movss xmm1,[rbx+000003A4]
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+1949DF: F3 0F 5E C8              -  divss xmm1,xmm0
"ShooterGame.exe"+1949E3: 0F 28 C1                 -  movaps xmm0,xmm1
"ShooterGame.exe"+1949E6: 48 83 C4 20              -  add rsp,20
"ShooterGame.exe"+1949EA: 5B                       -  pop rbx
"ShooterGame.exe"+1949EB: C3                       -  ret 
"ShooterGame.exe"+1949EC: CC                       -  int 3 
"ShooterGame.exe"+1949ED: CC                       -  int 3 
"ShooterGame.exe"+1949EE: CC                       -  int 3 
"ShooterGame.exe"+1949EF: CC                       -  int 3 
"ShooterGame.exe"+1949F0: 48 89 5C 24 08           -  mov [rsp+08],rbx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>129</ID>
      <Description>"Unlimited Carry Weight (drop an item to update)"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(weight,ShooterGame.exe,66 0F 6E B1 * * * * 0F 5B F6)
alloc(weight_save,8)

weight_save:
  readmem(weight,8)

weight:
  db 0F 57 F6 90 90 90 90 90
registersymbol(weight)
registersymbol(weight_save)

[DISABLE]
weight:
  readmem(weight_save,8)
unregistersymbol(weight)
unregistersymbol(weight_save)
dealloc(newmem)
dealloc(weight_save)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+1A13D7

"ShooterGame.exe"+1A13B4: 73 0E                    -  jae ShooterGame.exe+1A13C4
"ShooterGame.exe"+1A13B6: F3 0F 10 81 8C 02 00 00  -  movss xmm0,[rcx+0000028C]
"ShooterGame.exe"+1A13BE: 48 83 C4 30              -  add rsp,30
"ShooterGame.exe"+1A13C2: 5B                       -  pop rbx
"ShooterGame.exe"+1A13C3: C3                       -  ret 
"ShooterGame.exe"+1A13C4: 0F 29 74 24 20           -  movaps [rsp+20],xmm6
"ShooterGame.exe"+1A13C9: 84 D2                    -  test dl,dl
"ShooterGame.exe"+1A13CB: 74 0A                    -  je ShooterGame.exe+1A13D7
"ShooterGame.exe"+1A13CD: F3 0F 10 35 0F BC 92 01  -  movss xmm6,[ShooterGame.exe+1ACCFE4]
"ShooterGame.exe"+1A13D5: EB 0B                    -  jmp ShooterGame.exe+1A13E2
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+1A13D7: 66 0F 6E B1 20 04 00 00  -  movd xmm6,[rcx+00000420]
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+1A13DF: 0F 5B F6                 -  cvtdq2ps xmm6,xmm6
"ShooterGame.exe"+1A13E2: 48 8B 01                 -  mov rax,[rcx]
"ShooterGame.exe"+1A13E5: BA 06 00 00 00           -  mov edx,00000006
"ShooterGame.exe"+1A13EA: FF 90 78 02 00 00        -  call qword ptr [rax+00000278]
"ShooterGame.exe"+1A13F0: F3 0F 59 83 5C 02 00 00  -  mulss xmm0,[rbx+0000025C]
"ShooterGame.exe"+1A13F8: F3 0F 59 C6              -  mulss xmm0,xmm6
"ShooterGame.exe"+1A13FC: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"ShooterGame.exe"+1A1401: 48 83 C4 30              -  add rsp,30
"ShooterGame.exe"+1A1405: 5B                       -  pop rbx
"ShooterGame.exe"+1A1406: C3                       -  ret 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>132</ID>
      <Description>"Unlimited Fuel"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//ShooterGame.APrimalStructureItemContainer::ConsumeFuel+12C
aobscanmodule(fuel,ShooterGame.exe,41 B0 01 83 CA FF 48 8B C8)
fuel+3:
  db 31 D2 90
registersymbol(fuel)

[DISABLE]
fuel+3:
  db 83 CA FF
unregistersymbol(fuel)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+1DD956

"ShooterGame.exe"+1DD92A: 0F 8C 60 FF FF FF        -  jl ShooterGame.exe+1DD890
"ShooterGame.exe"+1DD930: F6 83 80 07 00 00 10     -  test byte ptr [rbx+00000780],10
"ShooterGame.exe"+1DD937: 0F 84 2E 01 00 00        -  je ShooterGame.exe+1DDA6B
"ShooterGame.exe"+1DD93D: 48 8B 03                 -  mov rax,[rbx]
"ShooterGame.exe"+1DD940: 33 D2                    -  xor edx,edx
"ShooterGame.exe"+1DD942: 48 8B CB                 -  mov rcx,rbx
"ShooterGame.exe"+1DD945: FF 90 D8 07 00 00        -  call qword ptr [rax+000007D8]
"ShooterGame.exe"+1DD94B: E9 1B 01 00 00           -  jmp ShooterGame.exe+1DDA6B
"ShooterGame.exe"+1DD950: 45 33 C9                 -  xor r9d,r9d
"ShooterGame.exe"+1DD953: 41 B0 01                 -  mov al,01
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+1DD956: 83 CA FF                 -  or edx,-01
"ShooterGame.exe"+1DD959: 48 8B C8                 -  mov rcx,rax
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+1DD95C: 48 89 AC 24 98 00 00 00  -  mov [rsp+00000098],rbp
"ShooterGame.exe"+1DD964: 40 88 74 24 28           -  mov [rsp+28],sil
"ShooterGame.exe"+1DD969: 4C 89 7C 24 70           -  mov [rsp+70],r15
"ShooterGame.exe"+1DD96E: 40 88 74 24 20           -  mov [rsp+20],sil
"ShooterGame.exe"+1DD973: E8 58 60 FC FF           -  call ShooterGame.exe+1A39D0
"ShooterGame.exe"+1DD978: 8B 8B 28 08 00 00        -  mov ecx,[rbx+00000828]
"ShooterGame.exe"+1DD97E: 85 FF                    -  test edi,edi
"ShooterGame.exe"+1DD980: 44 8B FE                 -  mov r15d,esi
"ShooterGame.exe"+1DD983: 41 0F 99 C7              -  setns r15l
"ShooterGame.exe"+1DD987: 3B F9                    -  cmp edi,ecx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Ignore Engram Requirements"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(engram_req,ShooterGame.exe,32 DB 0F B6 C3 48 8B 5C 24)
engram_req:
  db B3 01
registersymbol(engram_req)

[DISABLE]
engram_req:
  db 32 DB
unregistersymbol(engram_req)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+170B39

"ShooterGame.exe"+170B1A: 4C 8B A4 24 80 00 00 00  -  mov r12,[rsp+00000080]
"ShooterGame.exe"+170B22: 4C 8B 7C 24 40           -  mov r15,[rsp+40]
"ShooterGame.exe"+170B27: 48 8B 6C 24 70           -  mov rbp,[rsp+70]
"ShooterGame.exe"+170B2C: 0F B6 C1                 -  movzx eax,cl
"ShooterGame.exe"+170B2F: 48 83 C4 48              -  add rsp,48
"ShooterGame.exe"+170B33: 41 5E                    -  pop r14
"ShooterGame.exe"+170B35: 5F                       -  pop rdi
"ShooterGame.exe"+170B36: 5E                       -  pop rsi
"ShooterGame.exe"+170B37: 5B                       -  pop rbx
"ShooterGame.exe"+170B38: C3                       -  ret 
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+170B39: 32 C9                    -  xor cl,cl
"ShooterGame.exe"+170B3B: 0F B6 C1                 -  movzx eax,cl
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+170B3E: 48 83 C4 48              -  add rsp,48
"ShooterGame.exe"+170B42: 41 5E                    -  pop r14
"ShooterGame.exe"+170B44: 5F                       -  pop rdi
"ShooterGame.exe"+170B45: 5E                       -  pop rsi
"ShooterGame.exe"+170B46: 5B                       -  pop rbx
"ShooterGame.exe"+170B47: C3                       -  ret 
"ShooterGame.exe"+170B48: CC                       -  int 3 
"ShooterGame.exe"+170B49: CC                       -  int 3 
"ShooterGame.exe"+170B4A: CC                       -  int 3 
"ShooterGame.exe"+170B4B: CC                       -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>82</ID>
      <Description>"Ignore Crafting Requirements"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//ShooterGame.UPrimalItem::MeetBlueprintCraftingRequirements+294
aobscanmodule(craft_req,ShooterGame.exe,7C * FF C7 49)
alloc(craft_req_save,2)
craft_req_save:
  readmem(craft_req,2)
craft_req:
  db 90 90
registersymbol(craft_req)
registersymbol(craft_req_save)

[DISABLE]
craft_req:
  readmem(craft_req_save,2)
unregistersymbol(craft_req)
unregistersymbol(craft_req_save)
dealloc(craft_req_save)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+19EF88

"ShooterGame.exe"+19EF60: 4C 8B C6              -  mov r8,rsi
"ShooterGame.exe"+19EF63: 48 8B CD              -  mov rcx,rbp
"ShooterGame.exe"+19EF66: 49 8B 54 D4 08        -  mov rdx,[r12+rdx*8+08]
"ShooterGame.exe"+19EF6B: C6 44 24 28 00        -  mov byte ptr [rsp+28],00
"ShooterGame.exe"+19EF70: C6 44 24 20 01        -  mov byte ptr [rsp+20],01
"ShooterGame.exe"+19EF75: E8 D6 1A FE FF        -  call ShooterGame.exe+180A50
"ShooterGame.exe"+19EF7A: 41 0F B7 0C 1F        -  movzx ecx,word ptr [r15+rbx]
"ShooterGame.exe"+19EF7F: 41 2B C6              -  sub eax,r14d
"ShooterGame.exe"+19EF82: 41 0F AF CD           -  imul ecx,r13d
"ShooterGame.exe"+19EF86: 3B C1                 -  cmp eax,ecx
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+19EF88: 7C 35                 -  jnge ShooterGame.exe+19EFBF
"ShooterGame.exe"+19EF8A: FF C7                 -  inc edi
"ShooterGame.exe"+19EF8C: 49 83 C7 02           -  add r15,02
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+19EF90: 41 BC 00 00 00 00     -  mov r12d,00000000
"ShooterGame.exe"+19EF96: 3B BE E0 05 00 00     -  cmp edi,[rsi+000005E0]
"ShooterGame.exe"+19EF9C: 0F 8C BE FE FF FF     -  jl ShooterGame.exe+19EE60
"ShooterGame.exe"+19EFA2: B0 01                 -  mov al,01
"ShooterGame.exe"+19EFA4: 4C 8B 74 24 60        -  mov r14,[rsp+60]
"ShooterGame.exe"+19EFA9: 4C 8B 7C 24 68        -  mov r15,[rsp+68]
"ShooterGame.exe"+19EFAE: 48 8B 5C 24 70        -  mov rbx,[rsp+70]
"ShooterGame.exe"+19EFB3: 48 83 C4 30           -  add rsp,30
"ShooterGame.exe"+19EFB7: 41 5D                 -  pop r13
"ShooterGame.exe"+19EFB9: 41 5C                 -  pop r12
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>121</ID>
      <Description>"Instant Taming"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(tame,ShooterGame.exe,F3 0F 58 93 * * * * 0F 2F 93)
alloc(tame_saved,4)
tame_saved:
  readmem(tame+4,4)
tame+4:
  readmem(tame+B,4)
registersymbol(tame)
registersymbol(tame_saved)

[DISABLE]
dealloc(tame_saved)
tame+4:
  readmem(tame_asved,4)
unregistersymbol(tame)
unregistersymbol(tame_saved)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+1633B8

"ShooterGame.exe"+16338C: 45 33 C9                 -  xor r9d,r9d
"ShooterGame.exe"+16338F: 48 8B D0                 -  mov rdx,rax
"ShooterGame.exe"+163392: 48 8B CB                 -  mov rcx,rbx
"ShooterGame.exe"+163395: 89 74 24 70              -  mov [rsp+70],esi
"ShooterGame.exe"+163399: 48 89 74 24 20           -  mov [rsp+20],rsi
"ShooterGame.exe"+16339E: E8 FD EC FE FF           -  call ShooterGame.exe+1520A0
"ShooterGame.exe"+1633A3: F3 0F 10 4C 24 70        -  movss xmm1,[rsp+70]
"ShooterGame.exe"+1633A9: F3 0F 10 83 80 0F 00 00  -  movss xmm0,[rbx+00000F80]
"ShooterGame.exe"+1633B1: F3 0F 5E C1              -  divss xmm0,xmm1
"ShooterGame.exe"+1633B5: 0F 28 D1                 -  movaps xmm2,xmm1
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+1633B8: F3 0F 58 93 78 0F 00 00  -  addss xmm2,[rbx+00000F78]
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+1633C0: 0F 2F 93 70 0F 00 00     -  comiss xmm2,[rbx+00000F70]
"ShooterGame.exe"+1633C7: F3 0F 11 93 78 0F 00 00  -  movss [rbx+00000F78],xmm2
"ShooterGame.exe"+1633CF: F3 0F 58 83 7C 0F 00 00  -  addss xmm0,[rbx+00000F7C]
"ShooterGame.exe"+1633D7: F3 0F 11 83 7C 0F 00 00  -  movss [rbx+00000F7C],xmm0
"ShooterGame.exe"+1633DF: 72 30                    -  jb ShooterGame.exe+163411
"ShooterGame.exe"+1633E1: 48 85 C0                 -  test rax,rax
"ShooterGame.exe"+1633E4: 75 0D                    -  jne ShooterGame.exe+1633F3
"ShooterGame.exe"+1633E6: 48 8B CB                 -  mov rcx,rbx
"ShooterGame.exe"+1633E9: E8 42 1C FF FF           -  call ShooterGame.exe+155030
"ShooterGame.exe"+1633EE: 48 85 C0                 -  test rax,rax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>80</ID>
      <Description>"Unlimited Buff Durations"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(duration,ShooterGame.exe,F3 0F 5C C6 F3 41 0F 11 44 06 08)
duration:
  db 90 90 90 90
registersymbol(duration)

[DISABLE]
duration:
  db F3 0F 5C C6
unregistersymbol(duration)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+137A0A

"ShooterGame.exe"+1379D2: 75 28                 -  jne ShooterGame.exe+1379FC
"ShooterGame.exe"+1379D4: 89 4C 24 28           -  mov [rsp+28],ecx
"ShooterGame.exe"+1379D8: 4C 8D 0D 71 6C 96 01  -  lea r9,[ShooterGame.exe+1A9E650]
"ShooterGame.exe"+1379DF: 48 8D 15 3A 66 96 01  -  lea rdx,[ShooterGame.exe+1A9E020]
"ShooterGame.exe"+1379E6: 48 8D 0D D3 6C 96 01  -  lea rcx,[ShooterGame.exe+1A9E6C0]
"ShooterGame.exe"+1379ED: 41 B8 3B 02 00 00     -  mov r8d,0000023B
"ShooterGame.exe"+1379F3: 89 74 24 20           -  mov [rsp+20],esi
"ShooterGame.exe"+1379F7: E8 04 F0 33 00        -  call ShooterGame.exe+476A00
"ShooterGame.exe"+1379FC: 48 8B 87 D0 07 00 00  -  mov rax,[rdi+000007D0]
"ShooterGame.exe"+137A03: F3 41 0F 10 44 06 08  -  movss xmm0,[r14+rax+08]
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+137A0A: F3 0F 5C C6           -  subss xmm0,xmm6
"ShooterGame.exe"+137A0E: F3 41 0F 11 44 06 08  -  movss [r14+rax+08],xmm0
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+137A15: 8B 8F D8 07 00 00     -  mov ecx,[rdi+000007D8]
"ShooterGame.exe"+137A1B: 8B C3                 -  mov eax,ebx
"ShooterGame.exe"+137A1D: 3B F1                 -  cmp esi,ecx
"ShooterGame.exe"+137A1F: 0F 9C C0              -  setl al
"ShooterGame.exe"+137A22: 85 C5                 -  test ebp,eax
"ShooterGame.exe"+137A24: 75 28                 -  jne ShooterGame.exe+137A4E
"ShooterGame.exe"+137A26: 89 4C 24 28           -  mov [rsp+28],ecx
"ShooterGame.exe"+137A2A: 4C 8D 0D 1F 6C 96 01  -  lea r9,[ShooterGame.exe+1A9E650]
"ShooterGame.exe"+137A31: 48 8D 15 E8 65 96 01  -  lea rdx,[ShooterGame.exe+1A9E020]
"ShooterGame.exe"+137A38: 48 8D 0D 81 6C 96 01  -  lea rcx,[ShooterGame.exe+1A9E6C0]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>85</ID>
      <Description>"Inventory Selection Pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(selection,ShooterGame.exe,49 8B 06 49 8B CE FF 90 88 02 00 00 84 C0 74)
alloc(newmem,$1000,selection)
alloc(selection_ptr,8)

label(code)
label(return)

newmem:

code:
  mov [selection_ptr],r14
  mov rax,[r14]
  mov rcx,r14
  jmp return

selection:
  jmp code
  nop
return:
registersymbol(selection)
registersymbol(selection_ptr)

[DISABLE]
selection:
  db 49 8B 06 49 8B CE
unregistersymbol(selection)
unregistersymbol(selection_ptr)
dealloc(newmem)
dealloc(selection_ptr)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+18ED9F

"ShooterGame.exe"+18ED81: A8 01                 -  test al,01
"ShooterGame.exe"+18ED83: 49 0F 45 DF           -  cmovne rbx,r15
"ShooterGame.exe"+18ED87: EB 03                 -  jmp ShooterGame.exe+18ED8C
"ShooterGame.exe"+18ED89: 49 8B DF              -  mov rbx,r15
"ShooterGame.exe"+18ED8C: 48 8B CB              -  mov rcx,rbx
"ShooterGame.exe"+18ED8F: E8 1C 48 FF FF        -  call ShooterGame.exe+1835B0
"ShooterGame.exe"+18ED94: 84 C0                 -  test al,al
"ShooterGame.exe"+18ED96: 75 07                 -  jne ShooterGame.exe+18ED9F
"ShooterGame.exe"+18ED98: 32 C0                 -  xor al,al
"ShooterGame.exe"+18ED9A: E9 B1 01 00 00        -  jmp ShooterGame.exe+18EF50
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+18ED9F: 49 8B 06              -  mov rax,[r14]
"ShooterGame.exe"+18EDA2: 49 8B CE              -  mov rcx,r14
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+18EDA5: FF 90 88 02 00 00     -  call qword ptr [rax+00000288]
"ShooterGame.exe"+18EDAB: 84 C0                 -  test al,al
"ShooterGame.exe"+18EDAD: 74 E9                 -  je ShooterGame.exe+18ED98
"ShooterGame.exe"+18EDAF: 41 8B 46 78           -  mov eax,[r14+78]
"ShooterGame.exe"+18EDB3: 0F BA E0 13           -  bt eax,13
"ShooterGame.exe"+18EDB7: 73 DF                 -  jae ShooterGame.exe+18ED98
"ShooterGame.exe"+18EDB9: 0F BA E0 0B           -  bt eax,0B
"ShooterGame.exe"+18EDBD: 72 D9                 -  jb ShooterGame.exe+18ED98
"ShooterGame.exe"+18EDBF: 45 39 BE E0 05 00 00  -  cmp [r14+000005E0],r15d
"ShooterGame.exe"+18EDC6: 74 D0                 -  je ShooterGame.exe+18ED98
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>74</ID>
          <Description>"Base Address"</Description>
          <LastState Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>selection_ptr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>75</ID>
              <Description>"Quantity"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000420"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>+420</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>91</ID>
              <Description>"Ammo"</Description>
              <LastState Value="??" Activated="0" RealAddress="000003C0"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>+3C0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>88</ID>
              <Description>"Durability"</Description>
              <LastState Value="??" Activated="0" RealAddress="000003C4"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+3C4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>89</ID>
              <Description>"Degradation Percentage"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000268"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+268</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>114</ID>
              <Description>"Ammo Something"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000610"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>+610</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>115</ID>
              <Description>"Uses Ammo"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>+450</Address>
              <Offsets>
                <Offset>7D4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>134</ID>
      <Description>"God Mode"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(god,ShooterGame.exe,0F B6 81 * 07 00 00 D0 E8 24 01)
god+9:
  db B0 01
registersymbol(god)

[DISABLE]
god+9:
  db 24 01
unregistersymbol(god)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+276240

"ShooterGame.exe"+276220: 48 8B 4C 24 40        -  mov rcx,[rsp+40]
"ShooterGame.exe"+276225: 48 85 C9              -  test rcx,rcx
"ShooterGame.exe"+276228: 74 05                 -  je ShooterGame.exe+27622F
"ShooterGame.exe"+27622A: E8 71 20 1D 00        -  call ShooterGame.exe+4482A0
"ShooterGame.exe"+27622F: 48 8B 74 24 70        -  mov rsi,[rsp+70]
"ShooterGame.exe"+276234: 48 8B 7C 24 78        -  mov rdi,[rsp+78]
"ShooterGame.exe"+276239: 48 83 C4 60           -  add rsp,60
"ShooterGame.exe"+27623D: 5B                    -  pop rbx
"ShooterGame.exe"+27623E: C3                    -  ret 
"ShooterGame.exe"+27623F: CC                    -  int 3 
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+276240: 0F B6 81 D4 07 00 00  -  movzx eax,byte ptr [rcx+000007D4]
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+276247: D0 E8                 -  shr al,1
"ShooterGame.exe"+276249: 24 01                 -  and al,01
"ShooterGame.exe"+27624B: C3                    -  ret 
"ShooterGame.exe"+27624C: CC                    -  int 3 
"ShooterGame.exe"+27624D: CC                    -  int 3 
"ShooterGame.exe"+27624E: CC                    -  int 3 
"ShooterGame.exe"+27624F: CC                    -  int 3 
"ShooterGame.exe"+276250: 48 89 5C 24 08        -  mov [rsp+08],rbx
"ShooterGame.exe"+276255: 48 89 6C 24 10        -  mov [rsp+10],rbp
"ShooterGame.exe"+27625A: 48 89 74 24 18        -  mov [rsp+18],rsi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>86</ID>
      <Description>"Ignore This"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>69</ID>
          <Description>"Mouseover Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(mouseover,ShooterGame.exe,44 8B 83 00 04 00 00 48 8D)
alloc(newmem,$1000,mouseover)
alloc(mouseover_ptr,8)

label(code)
label(return)

newmem:

code:
  mov [mouseover_ptr],rbx
  mov r8d,[rbx+00000400]
  jmp return

mouseover:
  jmp code
  nop
  nop
return:
registersymbol(mouseover)
registersymbol(mouseover_ptr)

[DISABLE]
mouseover:
  db 44 8B 83 00 04 00 00
unregistersymbol(mouseover)
unregistersymbol(mouseover_ptr)
dealloc(newmem)
dealloc(mouseover_ptr)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+1A72DE

"ShooterGame.exe"+1A72BD: 48 8B 1C D8           -  mov rbx,[rax+rbx*8]
"ShooterGame.exe"+1A72C1: 48 85 DB              -  test rbx,rbx
"ShooterGame.exe"+1A72C4: 74 11                 -  je ShooterGame.exe+1A72D7
"ShooterGame.exe"+1A72C6: 8B 43 08              -  mov eax,[rbx+08]
"ShooterGame.exe"+1A72C9: C1 E8 0E              -  shr eax,0E
"ShooterGame.exe"+1A72CC: A8 01                 -  test al,01
"ShooterGame.exe"+1A72CE: 48 0F 45 DE           -  cmovne rbx,rsi
"ShooterGame.exe"+1A72D2: EB 03                 -  jmp ShooterGame.exe+1A72D7
"ShooterGame.exe"+1A72D4: 48 8B DE              -  mov rbx,rsi
"ShooterGame.exe"+1A72D7: 44 8B 8F 04 04 00 00  -  mov r9d,[rdi+00000404]
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+1A72DE: 44 8B 83 00 04 00 00  -  mov r8d,[rbx+00000400]
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+1A72E5: 48 8D 15 FC 3B 90 01  -  lea rdx,[ShooterGame.exe+1AAAEE8]
"ShooterGame.exe"+1A72EC: 48 8D 4D C7           -  lea rcx,[rbp-39]
"ShooterGame.exe"+1A72F0: E8 DB D4 27 00        -  call ShooterGame.exe+4247D0
"ShooterGame.exe"+1A72F5: 48 8D 4D D7           -  lea rcx,[rbp-29]
"ShooterGame.exe"+1A72F9: BA 0B 00 00 00        -  mov edx,0000000B
"ShooterGame.exe"+1A72FE: 48 89 75 D7           -  mov [rbp-29],rsi
"ShooterGame.exe"+1A7302: 48 89 75 DF           -  mov [rbp-21],rsi
"ShooterGame.exe"+1A7306: E8 75 A3 F3 FF        -  call ShooterGame.exe+E1680
"ShooterGame.exe"+1A730B: 48 8B 5D D7           -  mov rbx,[rbp-29]
"ShooterGame.exe"+1A730F: 48 8D 15 E2 3B 90 01  -  lea rdx,[ShooterGame.exe+1AAAEF8]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>70</ID>
              <Description>"Base Address"</Description>
              <LastState Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>mouseover_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>71</ID>
                  <Description>"Quantity"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000400"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+400</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Inventory Selection Pointer (old)"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(selection,ShooterGame.exe,44 39 B3 00 04 00 00 7C)
alloc(newmem,$1000,selection)
alloc(selection_ptr,8)

label(code)
label(return)

newmem:

code:
  mov [selection_ptr],rbx
  cmp [rbx+00000400],r14d
  jmp return

selection:
  jmp code
  nop
  nop
return:
registersymbol(selection)
registersymbol(selection_ptr)

[DISABLE]
selection:
  db 44 39 B3 00 04 00 00
unregistersymbol(selection)
unregistersymbol(selection_ptr)
dealloc(newmem)
dealloc(selection_ptr)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+17C03D

"ShooterGame.exe"+17C023: 48 3B C1                 -  cmp rax,rcx
"ShooterGame.exe"+17C026: 74 29                    -  je ShooterGame.exe+17C051
"ShooterGame.exe"+17C028: 48 8B 40 30              -  mov rax,[rax+30]
"ShooterGame.exe"+17C02C: 48 85 C0                 -  test rax,rax
"ShooterGame.exe"+17C02F: 75 F2                    -  jne ShooterGame.exe+17C023
"ShooterGame.exe"+17C031: 33 C0                    -  xor eax,eax
"ShooterGame.exe"+17C033: 48 3B F0                 -  cmp rsi,rax
"ShooterGame.exe"+17C036: 75 54                    -  jne ShooterGame.exe+17C08C
"ShooterGame.exe"+17C038: 45 84 ED                 -  test r13l,r13l
"ShooterGame.exe"+17C03B: 74 19                    -  je ShooterGame.exe+17C056
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+17C03D: 44 39 B3 00 04 00 00     -  cmp [rbx+00000400],r14d
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+17C044: 7C 19                    -  jnge ShooterGame.exe+17C05F
"ShooterGame.exe"+17C046: 8B 44 24 70              -  mov eax,[rsp+70]
"ShooterGame.exe"+17C04A: FF C7                    -  inc edi
"ShooterGame.exe"+17C04C: E9 4F FF FF FF           -  jmp ShooterGame.exe+17BFA0
"ShooterGame.exe"+17C051: 48 8B C2                 -  mov rax,rdx
"ShooterGame.exe"+17C054: EB DD                    -  jmp ShooterGame.exe+17C033
"ShooterGame.exe"+17C056: 44 39 B3 00 04 00 00     -  cmp [rbx+00000400],r14d
"ShooterGame.exe"+17C05D: 7E 2D                    -  jle ShooterGame.exe+17C08C
"ShooterGame.exe"+17C05F: 48 3B DD                 -  cmp rbx,rbp
"ShooterGame.exe"+17C062: 74 28                    -  je ShooterGame.exe+17C08C
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Activate Player Scripts"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(player,ShooterGame.exe,0F 2F 83 F8 06 00 00)
alloc(newmem,$1000,player)
alloc(player_ptr,8)

label(code)
label(return)

newmem:

code:
  mov [player_ptr],rbx
  comiss xmm0,[rbx+000006F8]
  jmp return

player:
  jmp code
  nop
  nop
return:
registersymbol(player)
registersymbol(player_ptr)

[DISABLE]
player:
  db 0F 2F 83 F8 06 00 00
unregistersymbol(player)
unregistersymbol(player_ptr)
dealloc(newmem)
dealloc(player_ptr)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+13D8AB

"ShooterGame.exe"+13D875: 48 8B 05 A4 71 2B 02           -  mov rax,[ShooterGame.exe+23F4A20]
"ShooterGame.exe"+13D87C: 44 0F B6 89 00 07 00 00        -  movzx r9d,byte ptr [rcx+00000700]
"ShooterGame.exe"+13D884: 48 8B 90 D0 01 00 00           -  mov rdx,[rax+000001D0]
"ShooterGame.exe"+13D88B: 0F B7 81 F4 06 00 00           -  movzx eax,word ptr [rcx+000006F4]
"ShooterGame.exe"+13D892: 49 81 C1 6B 01 00 00           -  add r9,0000016B
"ShooterGame.exe"+13D899: 4C 8B 42 28                    -  mov r8,[rdx+28]
"ShooterGame.exe"+13D89D: 4D 03 C9                       -  add r9,r9
"ShooterGame.exe"+13D8A0: 43 3B 04 C8                    -  cmp eax,[r8+r9*8]
"ShooterGame.exe"+13D8A4: 7D 16                          -  jnl ShooterGame.exe+13D8BC
"ShooterGame.exe"+13D8A6: E8 35 E6 FF FF                 -  call ShooterGame.exe+13BEE0
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+13D8AB: 0F 2F 83 F8 06 00 00           -  comiss xmm0,[rbx+000006F8]
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+13D8B2: 73 08                          -  jae ShooterGame.exe+13D8BC
"ShooterGame.exe"+13D8B4: B0 01                          -  mov al,01
"ShooterGame.exe"+13D8B6: 48 83 C4 20                    -  add rsp,20
"ShooterGame.exe"+13D8BA: 5B                             -  pop rbx
"ShooterGame.exe"+13D8BB: C3                             -  ret 
"ShooterGame.exe"+13D8BC: 32 C0                          -  xor al,al
"ShooterGame.exe"+13D8BE: 48 83 C4 20                    -  add rsp,20
"ShooterGame.exe"+13D8C2: 5B                             -  pop rbx
"ShooterGame.exe"+13D8C3: C3                             -  ret 
"ShooterGame.exe"+13D8C4: CC                             -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"Activate Player Scripts"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(player,ShooterGame.exe,F3 0F 58 80 F0 07 00 00)
alloc(newmem,$1000,player)
alloc(player_ptr,8)

label(code)
label(return)

newmem:

code:
  mov [player_ptr],rax
  db F3 0F 58 80 F0 07 00 00
  jmp return

player:
  jmp code
  nop
  nop
  nop
return:
registersymbol(player)
registersymbol(player_ptr)

[DISABLE]
player:
  db F3 0F 58 80 F0 07 00 00
unregistersymbol(player)
unregistersymbol(player_ptr)
dealloc(newmem)
dealloc(player_ptr)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+121F7F

"ShooterGame.exe"+121F67: 41 5E                    -  pop r14
"ShooterGame.exe"+121F69: 5F                       -  pop rdi
"ShooterGame.exe"+121F6A: 5D                       -  pop rbp
"ShooterGame.exe"+121F6B: C3                       -  ret 
"ShooterGame.exe"+121F6C: CC                       -  int 3 
"ShooterGame.exe"+121F6D: CC                       -  int 3 
"ShooterGame.exe"+121F6E: CC                       -  int 3 
"ShooterGame.exe"+121F6F: CC                       -  int 3 
"ShooterGame.exe"+121F70: 48 8B 81 78 04 00 00     -  mov rax,[rcx+00000478]
"ShooterGame.exe"+121F77: F3 0F 10 80 20 08 00 00  -  movss xmm0,[rax+00000820]
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+121F7F: F3 0F 58 80 F0 07 00 00  -  addss xmm0,[rax+000007F0]
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+121F87: C3                       -  ret 
"ShooterGame.exe"+121F88: CC                       -  int 3 
"ShooterGame.exe"+121F89: CC                       -  int 3 
"ShooterGame.exe"+121F8A: CC                       -  int 3 
"ShooterGame.exe"+121F8B: CC                       -  int 3 
"ShooterGame.exe"+121F8C: CC                       -  int 3 
"ShooterGame.exe"+121F8D: CC                       -  int 3 
"ShooterGame.exe"+121F8E: CC                       -  int 3 
"ShooterGame.exe"+121F8F: CC                       -  int 3 
"ShooterGame.exe"+121F90: 40 53                    -  push rbx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"Instant Taming"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(tame,ShooterGame.exe,F3 41 0F 10 B6 78 0F 00 00)
alloc(newmem,$1000,tame)

label(code)
label(return)

newmem:

code:
  movss xmm6,[r14+00000F70]
  movss [r14+00000F78],xmm6
  jmp return

tame:
  jmp code
  nop
  nop
  nop
  nop
return:
registersymbol(tame)

[DISABLE]
tame:
  db F3 41 0F 10 B6 78 0F 00 00
unregistersymbol(tame)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+16E271

"ShooterGame.exe"+16E250: 48 8B 05 59 44 20 02        -  mov rax,[ShooterGame.exe+23726B0]
"ShooterGame.exe"+16E257: 48 8B 1C D8                 -  mov rbx,[rax+rbx*8]
"ShooterGame.exe"+16E25B: 48 85 DB                    -  test rbx,rbx
"ShooterGame.exe"+16E25E: 74 11                       -  je ShooterGame.exe+16E271
"ShooterGame.exe"+16E260: 8B 43 08                    -  mov eax,[rbx+08]
"ShooterGame.exe"+16E263: C1 E8 0E                    -  shr eax,0E
"ShooterGame.exe"+16E266: A8 01                       -  test al,01
"ShooterGame.exe"+16E268: 48 0F 45 DF                 -  cmovne rbx,rdi
"ShooterGame.exe"+16E26C: EB 03                       -  jmp ShooterGame.exe+16E271
"ShooterGame.exe"+16E26E: 48 8B DF                    -  mov rbx,rdi
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+16E271: F3 41 0F 10 B6 78 0F 00 00  -  movss xmm6,[r14+00000F78]
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+16E27A: 49 8B 8C 24 48 03 00 00     -  mov rcx,[r12+00000348]
"ShooterGame.exe"+16E282: 45 33 C0                    -  xor r8d,r8d
"ShooterGame.exe"+16E285: F3 0F 5E B3 70 0F 00 00     -  divss xmm6,[rbx+00000F70]
"ShooterGame.exe"+16E28D: 0F 28 CE                    -  movaps xmm1,xmm6
"ShooterGame.exe"+16E290: E8 5B 0B 85 00              -  call ShooterGame.exe+9BEDF0
"ShooterGame.exe"+16E295: 0F 2F F7                    -  comiss xmm6,xmm7
"ShooterGame.exe"+16E298: 0F 86 7F 01 00 00           -  jbe ShooterGame.exe+16E41D
"ShooterGame.exe"+16E29E: 41 BF 01 00 00 00           -  mov r15d,00000001
"ShooterGame.exe"+16E2A4: 45 33 C0                    -  xor r8d,r8d
"ShooterGame.exe"+16E2A7: 48 8B CE                    -  mov rcx,rsi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>130</ID>
          <Description>"Allow Crafting"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(allow_craft,ShooterGame.exe,FF 74 07 B0 01 48 83 C4 28 C3 32 C0 48 83 C4 28) // should be unique
allow_craft+0A:
  db B0 01
registersymbol(allow_craft)

[DISABLE]
allow_craft+0A:
  db 32 C0
unregistersymbol(allow_craft)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+18AC81

"ShooterGame.exe"+18AC5B: 48 8B 42 10           -  mov rax,[rdx+10]
"ShooterGame.exe"+18AC5F: 48 8D 54 24 30        -  lea rdx,[rsp+30]
"ShooterGame.exe"+18AC64: 48 81 C1 50 02 00 00  -  add rcx,00000250
"ShooterGame.exe"+18AC6B: 48 89 44 24 30        -  mov [rsp+30],rax
"ShooterGame.exe"+18AC70: E8 5B E9 FC FF        -  call ShooterGame.exe+1595D0
"ShooterGame.exe"+18AC75: 83 F8 FF              -  cmp eax,-01
"ShooterGame.exe"+18AC78: 74 07                 -  je ShooterGame.exe+18AC81
"ShooterGame.exe"+18AC7A: B0 01                 -  mov al,01
"ShooterGame.exe"+18AC7C: 48 83 C4 28           -  add rsp,28
"ShooterGame.exe"+18AC80: C3                    -  ret 
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+18AC81: 32 C0                 -  xor al,al
"ShooterGame.exe"+18AC83: 48 83 C4 28           -  add rsp,28
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+18AC87: C3                    -  ret 
"ShooterGame.exe"+18AC88: CC                    -  int 3 
"ShooterGame.exe"+18AC89: CC                    -  int 3 
"ShooterGame.exe"+18AC8A: CC                    -  int 3 
"ShooterGame.exe"+18AC8B: CC                    -  int 3 
"ShooterGame.exe"+18AC8C: CC                    -  int 3 
"ShooterGame.exe"+18AC8D: CC                    -  int 3 
"ShooterGame.exe"+18AC8E: CC                    -  int 3 
"ShooterGame.exe"+18AC8F: CC                    -  int 3 
"ShooterGame.exe"+18AC90: 40 53                 -  push rbx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"Hide Arrow"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(bow_arrow,ShooterGame.exe,40 53 48 83 EC 20 83 B9 * * * * 00 48 8B D9 75 * 83 B9 * * * * 00 74 * 48 8B 89)
bow_arrow:
  db C3 CC
registersymbol(bow_arrow)

[DISABLE]
bow_arrow:
  db 40 53
unregistersymbol(bow_arrow)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+1FFB50

"ShooterGame.exe"+1FFB46: 5D                    -  pop rbp
"ShooterGame.exe"+1FFB47: 5B                    -  pop rbx
"ShooterGame.exe"+1FFB48: C3                    -  ret 
"ShooterGame.exe"+1FFB49: CC                    -  int 3 
"ShooterGame.exe"+1FFB4A: CC                    -  int 3 
"ShooterGame.exe"+1FFB4B: CC                    -  int 3 
"ShooterGame.exe"+1FFB4C: CC                    -  int 3 
"ShooterGame.exe"+1FFB4D: CC                    -  int 3 
"ShooterGame.exe"+1FFB4E: CC                    -  int 3 
"ShooterGame.exe"+1FFB4F: CC                    -  int 3 
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+1FFB50: 40 53                 -  push rbx
"ShooterGame.exe"+1FFB52: 48 83 EC 20           -  sub rsp,20
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+1FFB56: 83 B9 18 0A 00 00 00  -  cmp dword ptr [rcx+00000A18],00
"ShooterGame.exe"+1FFB5D: 48 8B D9              -  mov rbx,rcx
"ShooterGame.exe"+1FFB60: 75 09                 -  jne ShooterGame.exe+1FFB6B
"ShooterGame.exe"+1FFB62: 83 B9 1C 0A 00 00 00  -  cmp dword ptr [rcx+00000A1C],00
"ShooterGame.exe"+1FFB69: 74 46                 -  je ShooterGame.exe+1FFBB1
"ShooterGame.exe"+1FFB6B: 48 8B 89 98 06 00 00  -  mov rcx,[rcx+00000698]
"ShooterGame.exe"+1FFB72: 48 85 C9              -  test rcx,rcx
"ShooterGame.exe"+1FFB75: 74 3A                 -  je ShooterGame.exe+1FFBB1
"ShooterGame.exe"+1FFB77: 48 8B 01              -  mov rax,[rcx]
"ShooterGame.exe"+1FFB7A: FF 90 A8 07 00 00     -  call qword ptr [rax+000007A8]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Unlimited Engram"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(engram,ShooterGame.exe,29 85 * * * * 48 8B 05)
alloc(engram_save,6)
engram_save:
  readmem(engram,6)
engram:
  db 90 90 90 90 90 90
registersymbol(engram)
registersymbol(engram_save)

[DISABLE]
engram:
  readmem(engram_save,6)
unregistersymbol(engram)
unregistersymbol(engram_save)
dealloc(engram_save)

{
// ORIGINAL CODE - INJECTION POINT: "ShooterGame.exe"+26FD47

"ShooterGame.exe"+26FD11: 89 4C 24 28              -  mov [rsp+28],ecx
"ShooterGame.exe"+26FD15: 4C 8D 0D 34 49 82 01     -  lea r9,[ShooterGame.exe+1A94650]
"ShooterGame.exe"+26FD1C: 48 8D 15 FD 42 82 01     -  lea rdx,[ShooterGame.exe+1A94020]
"ShooterGame.exe"+26FD23: 48 8D 0D 96 49 82 01     -  lea rcx,[ShooterGame.exe+1A946C0]
"ShooterGame.exe"+26FD2A: 41 B8 3B 02 00 00        -  mov r8d,0000023B
"ShooterGame.exe"+26FD30: 89 5C 24 20              -  mov [rsp+20],ebx
"ShooterGame.exe"+26FD34: E8 27 CD 1F 00           -  call ShooterGame.exe+46CA60
"ShooterGame.exe"+26FD39: 49 8B 86 C0 09 00 00     -  mov rax,[r14+000009C0]
"ShooterGame.exe"+26FD40: 49 8B 0C 07              -  mov rcx,[r15+rax]
"ShooterGame.exe"+26FD44: 8B 41 54                 -  mov eax,[rcx+54]
// ---------- INJECTING HERE ----------
"ShooterGame.exe"+26FD47: 29 85 04 07 00 00        -  sub [rbp+00000704],eax
// ---------- DONE INJECTING  ----------
"ShooterGame.exe"+26FD4D: 48 8B 05 CC 4C 18 02     -  mov rax,[ShooterGame.exe+23F4A20]
"ShooterGame.exe"+26FD54: 48 8B 88 D0 01 00 00     -  mov rcx,[rax+000001D0]
"ShooterGame.exe"+26FD5B: 8B C6                    -  mov eax,esi
"ShooterGame.exe"+26FD5D: 4C 8B 71 28              -  mov r14,[rcx+28]
"ShooterGame.exe"+26FD61: 41 8B 8E C8 09 00 00     -  mov ecx,[r14+000009C8]
"ShooterGame.exe"+26FD68: 3B D9                    -  cmp ebx,ecx
"ShooterGame.exe"+26FD6A: 0F 9C C0                 -  setl al
"ShooterGame.exe"+26FD6D: 85 C7                    -  test edi,eax
"ShooterGame.exe"+26FD6F: 75 28                    -  jne ShooterGame.exe+26FD99
"ShooterGame.exe"+26FD71: 89 4C 24 28              -  mov [rsp+28],ecx
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>stacksplit</Name>
      <Address>13FEB23FC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>learn</Name>
      <Address>13F7B13B9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>craft</Name>
      <Address>13F7DEF88</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>engram</Name>
      <Address>1401CD997</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>status</Name>
      <Address>13F9BD540</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>durability</Name>
      <Address>13FA34DE9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weight</Name>
      <Address>13FA2B457</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>engram_req</Name>
      <Address>13FA02D60</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo</Name>
      <Address>13FB6E1A9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory</Name>
      <Address>13FA38ED5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fuel</Name>
      <Address>13FA80F09</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>tame</Name>
      <Address>13F9E50FA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>craft_req</Name>
      <Address>13FA32344</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player</Name>
      <Address> 13FC171B5</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
