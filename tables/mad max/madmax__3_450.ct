<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>110</ID>
      <Description>"Walk Key (Alt)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(movingTypeReadAOB,MadMax.exe,78 8B 04 18 89 44 24)
registersymbol(movingTypeReadAOB)
aobscanmodule(someCallBackAOB,MadMax.exe,84 C0 48 8D 47 F8 75 03 ** ** ** 80 7E)
registersymbol(someCallBackAOB)

label(pWalkType)
registersymbol(pWalkType)

//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,movingTypeReadAOB+1) //"MadMax.exe"+1C6C262)
label(returnhere)
label(originalcode)
label(exit)
label(keychkstart)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//cmp r8,47
//cmp [rsp+38],r8
cmp qword ptr [pWalkType],0
je @f
push rcx
lea rcx,[rax+rbx]
cmp [pWalkType],rcx
pop rcx
je keychkstart
@@:
push rcx
mov rcx,someCallBackAOB
cmp [rsp+20],rcx
pop rcx
jne originalcode
test r8,r8
jz originalcode

keychkstart:
cmp dword ptr [rax+rbx],0
je originalcode

push rax //+70
push rbx //+68
push rcx //+60
push rdx //+58
push rsi //+50
push rdi //+48
push rbp //+40
push r8  //+38
push r9  //+30
push r10 //+28
push r11 //+20
push r12 //+18
push r13 //+10
push r14 //+8
push r15 //+0

mov rcx,[rax+rbx]//
lea rcx,[rax+rbx]
mov [pWalkType],rcx

mov rcx,12 //Alt
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1

pop r15 //+0
pop r14 //+8
pop r13 //+10
pop r12 //+18
pop r11 //+20
pop r10 //+28
pop r9  //+30
pop r8  //+38
pop rbp //+40
pop rdi //+48
pop rsi //+50
pop rdx //+58
pop rcx //+60
pop rbx //+68
pop rax //+70

jne originalcode

fld1
fstp dword ptr [rax+rbx]
mov eax,[rax+rbx]
mov [rsp+20],eax
jmp exit

originalcode:
mov eax,[rax+rbx]
mov [rsp+20],eax

exit:
jmp returnhere

///
pWalkType:
///

movingTypeReadAOB+1: //"MadMax.exe"+1C6C262:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
movingTypeReadAOB+1: //"MadMax.exe"+1C6C262:
db 8B 04 18 89 44 24 20
//Alt: mov eax,[rax+rbx]
//Alt: mov [rsp+20],eax
unregistersymbol(movingTypeReadAOB)
unregistersymbol(someCallBackAOB)

unregistersymbol(pWalkType)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>164</ID>
          <Description>"pWalkType"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pWalkType</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>162</ID>
      <Description>"Inf. Car Boost (Shift)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(manyFloatRead2AOB,MadMax.exe,F3 0F 10 09 48 89 D1 E8)
registersymbol(manyFloatRead2AOB)

label(pCarBoost)
registersymbol(pCarBoost)

alloc(newmem,2048,manyFloatRead2AOB) //"MadMax.exe"+2140A29)
label(returnhere)
label(originalcode)
label(exit)
label(chkcarhealth)
label(safasrefcseesee)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfq
//cmp r10,3e
//jne chkcarhealth
cmp [pCarBoost],rcx
je @f
lea rcx,[rcx-140]   //super speed
cmp [pCarBoost],rcx //super speed
lea rcx,[rcx+140]   //super speed
je @f               //super speed
cmp [rsp+8],rbx
jne originalcode
push rcx
mov rcx,[rsp+10]
cmp [rsp+18],rcx
pop rcx
jne originalcode
cmp [rsp+40],0
jne originalcode
cmp [rsp+48],0
jne originalcode
cmp [rsp+50],0
jne originalcode
mov [pCarBoost],rcx

@@:
push rax //+70
push rbx //+68
push rcx //+60
push rdx //+58
push rsi //+50
push rdi //+48
push rbp //+40
push r8  //+38
push r9  //+30
push r10 //+28
push r11 //+20
push r12 //+18
push r13 //+10
push r14 //+8
push r15 //+0

movss xmm1,[rcx]//

mov rcx,10 //Shift //20 //Spacebar
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1

pop r15 //+0
pop r14 //+8
pop r13 //+10
pop r12 //+18
pop r11 //+20
pop r10 //+28
pop r9  //+30
pop r8  //+38
pop rbp //+40
pop rdi //+48
pop rsi //+50
pop rdx //+58
pop rcx //+60
pop rbx //+68
pop rax //+70

jne safasrefcseesee
//jne originalcode

fld dword ptr [rcx]
fld1
fcomip st(0),st(1)
jbe @f
fstp st(0)
fld1
fst dword ptr [rcx]

@@:
fstp st(0)

safasrefcseesee:
popfq //
movss xmm1,[rcx]//
mov rcx,rdx//
jmp exit//
//jmp originalcode

chkcarhealth:
/*cmp r10,1b
jne originalcode
cmp [rsp+8],0
jne originalcode
mov dword ptr [rcx],(float)100*/

originalcode:
popfq
movss xmm1,[rcx]
mov rcx,rdx

exit:
jmp returnhere

///
pCarBoost:
///

manyFloatRead2AOB: //"MadMax.exe"+2140A29:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
manyFloatRead2AOB: //"MadMax.exe"+2140A29:
db F3 0F 10 09 48 89 D1
//Alt: movss xmm1,[rcx]
//Alt: mov rcx,rdx
unregistersymbol(manyFloatRead2AOB)

unregistersymbol(pCarBoost)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>166</ID>
          <Description>"Car Boost"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pCarBoost</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"humhum"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pCarBoost</Address>
          <Offsets>
            <Offset>140</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>135</ID>
      <Description>"Inf. Canteen"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(manyFloarReadAOB,MadMax.exe,F3 0F 10 41 0C 48 8B 5C 24 40)
registersymbol(manyFloarReadAOB)

label(fMinCanteen)
registersymbol(fMinCanteen)

alloc(newmem,2048,manyFloarReadAOB) //"MadMax.exe"+1D4627F)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfq
cmp rdi,48 //canteen
jne @f
movss xmm0,[rcx+0C]
comiss xmm0,[fMinCanteen]
ja originalcode
movss xmm0,[fMinCanteen]
movss [rcx+c],xmm0
jmp originalcode

@@:

originalcode:
popfq
movss xmm0,[rcx+0C]

exit:
jmp returnhere

///
fMinCanteen:
dd (float)100
///

manyFloarReadAOB: //"MadMax.exe"+1D4627F:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
manyFloarReadAOB: //"MadMax.exe"+1D4627F:
//Alt: movss xmm0,[rcx+0C]
db F3 0F 10 41 0C
unregistersymbol(manyFloarReadAOB)

unregistersymbol(fMinCanteen)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>168</ID>
      <Description>"Walk Key (Alt) (OLD)"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(movingTypeReadAOB,MadMax.exe,78 8B 04 18 89 44 24)
registersymbol(movingTypeReadAOB)

//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,movingTypeReadAOB+1) //"MadMax.exe"+1C6C262)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp r8,49 //sometimes 47, not reliable
jne originalcode
cmp dword ptr [rax+rbx],0
je originalcode

push rax //+70
push rbx //+68
push rcx //+60
push rdx //+58
push rsi //+50
push rdi //+48
push rbp //+40
push r8  //+38
push r9  //+30
push r10 //+28
push r11 //+20
push r12 //+18
push r13 //+10
push r14 //+8
push r15 //+0

mov rcx,[rax+rbx]//

mov rcx,12 //Alt
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1

pop r15 //+0
pop r14 //+8
pop r13 //+10
pop r12 //+18
pop r11 //+20
pop r10 //+28
pop r9  //+30
pop r8  //+38
pop rbp //+40
pop rdi //+48
pop rsi //+50
pop rdx //+58
pop rcx //+60
pop rbx //+68
pop rax //+70

jne originalcode

fld1
fstp dword ptr [rax+rbx]

originalcode:
mov eax,[rax+rbx]
mov [rsp+20],eax

exit:
jmp returnhere

///

movingTypeReadAOB+1: //"MadMax.exe"+1C6C262:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
movingTypeReadAOB+1: //"MadMax.exe"+1C6C262:
db 8B 04 18 89 44 24 20
//Alt: mov eax,[rax+rbx]
//Alt: mov [rsp+20],eax
unregistersymbol(movingTypeReadAOB)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5614334#5614334
</Comments>
</CheatTable>
