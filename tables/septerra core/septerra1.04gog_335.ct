<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Infinite Core Energy"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{
"septerra.exe"+74ED: 03 58 04                       -  add ebx,[eax+04]
"septerra.exe"+74F0: 8B 44 24 28                    -  mov eax,[esp+28]
"septerra.exe"+74F4: 8D 4E EF                       -  lea ecx,[esi-11]
"septerra.exe"+74F7: 83 F9 02                       -  cmp ecx,02
"septerra.exe"+74FA: 77 10                          -  ja septerra.exe+750C
"septerra.exe"+74FC: 83 C0 FF                       -  add eax,-01
"septerra.exe"+74FF: 8B F9                          -  mov edi,ecx
"septerra.exe"+7501: E8 BA FC FF FF                 -  call septerra.exe+71C0
"septerra.exe"+7506: 8B 7C 24 34                    -  mov edi,[esp+34]
"septerra.exe"+750A: EB 2A                          -  jmp septerra.exe+7536
// ---------- INJECTING HERE ----------
"septerra.exe"+750C: 81 FE 84 00 00 00              -  cmp esi,00000084
// ---------- DONE INJECTING  ----------
"septerra.exe"+7512: 89 43 08                       -  mov [ebx+08],eax
"septerra.exe"+7515: 75 1F                          -  jne septerra.exe+7536
"septerra.exe"+7517: 8D 4C 24 20                    -  lea ecx,[esp+20]
"septerra.exe"+751B: 51                             -  push ecx
"septerra.exe"+751C: 8D 54 24 20                    -  lea edx,[esp+20]
"septerra.exe"+7520: 52                             -  push edx
"septerra.exe"+7521: E8 3A B3 03 00                 -  call septerra.exe+42860
"septerra.exe"+7526: 8B 44 24 24                    -  mov eax,[esp+24]
"septerra.exe"+752A: 83 C4 08                       -  add esp,08
"septerra.exe"+752D: 39 44 24 20                    -  cmp [esp+20],eax
}
aobscanmodule(INJECT,septerra.exe,81 FE 84 00 00 00 89)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp esi,00000084
  jne return
  mov eax,ff
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 81 FE 84 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Experience (enable then finish some battle)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
registersymbol(experiencepointer)
alloc(experiencepointer,4)
{
"septerra.exe"+77CE: 74 24                    -  je septerra.exe+77F4
"septerra.exe"+77D0: DB 44 24 14              -  fild dword ptr [esp+14]
"septerra.exe"+77D4: 8B 74 24 28              -  mov esi,[esp+28]
"septerra.exe"+77D8: 2B F7                    -  sub esi,edi
"septerra.exe"+77DA: DA 4C 24 34              -  fimul [esp+34]
"septerra.exe"+77DE: DC 35 F0 53 49 00        -  fdiv qword ptr [septerra.exe+953F0]
"septerra.exe"+77E4: E8 47 20 06 00           -  call septerra.exe+69830
"septerra.exe"+77E9: 8B F8                    -  mov edi,eax
"septerra.exe"+77EB: 03 F7                    -  add esi,edi
"septerra.exe"+77ED: 89 74 24 28              -  mov [esp+28],esi
// ---------- INJECTING HERE ----------
"septerra.exe"+77F1: 89 73 08                 -  mov [ebx+08],esi
"septerra.exe"+77F4: 8B 6C 24 18              -  mov ebp,[esp+18]
// ---------- DONE INJECTING  ----------
"septerra.exe"+77F8: 85 ED                    -  test ebp,ebp
"septerra.exe"+77FA: 75 06                    -  jne septerra.exe+7802
"septerra.exe"+77FC: 89 3D 6C 24 4B 00        -  mov [septerra.exe+B246C],edi
"septerra.exe"+7802: 8B 43 08                 -  mov eax,[ebx+08]
"septerra.exe"+7805: 3D 7F 96 98 00           -  cmp eax,0098967F
"septerra.exe"+780A: 7E 10                    -  jle septerra.exe+781C
"septerra.exe"+780C: BA 7F 96 98 00           -  mov edx,0098967F
"septerra.exe"+7811: 2B D0                    -  sub edx,eax
"septerra.exe"+7813: C7 43 08 7F 96 98 00     -  mov [ebx+08],0098967F
"septerra.exe"+781A: 03 FA                    -  add edi,edx
}
aobscanmodule(INJECT,septerra.exe,89 73 08 8B 6C 24 18)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [experiencepointer],ebx
  // original code
  mov [ebx+08],esi
  mov ebp,[esp+18]
  jmp return

INJECT:
  jmp newmem
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 73 08 8B 6C 24 18

unregistersymbol(INJECT)
dealloc(newmem)

unregistersymbol(experiencepointer)
dealloc(experiencepointer)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Party Experience"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>experiencepointer</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Caracter Stats (enable then open stats screen)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
registersymbol(basepointer)
alloc(basepointer,4)
{
"septerra.exe"+3E647: 52                 -  push edx
"septerra.exe"+3E648: 89 68 0C           -  mov [eax+0C],ebp
"septerra.exe"+3E64B: E8 70 54 00 00     -  call septerra.exe+43AC0
"septerra.exe"+3E650: 68 BE 00 00 00     -  push 000000BE
"septerra.exe"+3E655: 68 BE 00 00 00     -  push 000000BE
"septerra.exe"+3E65A: 68 BE 00 00 00     -  push 000000BE
"septerra.exe"+3E65F: E8 1C 73 FC FF     -  call septerra.exe+5980
"septerra.exe"+3E664: 8B 0D 38 3B 4A 00  -  mov ecx,[septerra.exe+A3B38]
"septerra.exe"+3E66A: 8B 15 3C 3B 4A 00  -  mov edx,[septerra.exe+A3B3C]
"septerra.exe"+3E670: 83 C4 34           -  add esp,34
// ---------- INJECTING HERE ----------
"septerra.exe"+3E673: 0F B7 F0           -  movzx esi,ax
"septerra.exe"+3E676: 0F B7 07           -  movzx eax,word ptr [edi]
// ---------- DONE INJECTING  ----------
"septerra.exe"+3E679: 50                 -  push eax
"septerra.exe"+3E67A: 68 E8 70 49 00     -  push septerra.exe+970E8
"septerra.exe"+3E67F: 56                 -  push esi
"septerra.exe"+3E680: 6A 00              -  push 00
"septerra.exe"+3E682: 83 EC 10           -  sub esp,10
"septerra.exe"+3E685: 8B C4              -  mov eax,esp
"septerra.exe"+3E687: 89 08              -  mov [eax],ecx
"septerra.exe"+3E689: 8B 0D 44 E9 4A 00  -  mov ecx,[septerra.exe+AE944]
"septerra.exe"+3E68F: 89 50 04           -  mov [eax+04],edx
"septerra.exe"+3E692: 6A 00              -  push 00
}
aobscanmodule(INJECT,septerra.exe,0F B7 F0 0F B7 07)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [basepointer],edi
  // original code
  movzx esi,ax
  movzx eax,word ptr [edi]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 0F B7 F0 0F B7 07

unregistersymbol(INJECT)
dealloc(newmem)

unregistersymbol(basepointer)
dealloc(basepointer)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Strength"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>2</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Vitality"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Agility"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>6</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"???"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Perception"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>a</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"???"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"???"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Strike"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Armor"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>12</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Power"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Core"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>16</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Speed"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"???"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>basepointer</Address>
          <Offsets>
            <Offset>1a</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>addressBasepointer</Name>
      <Address>0043E673</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
