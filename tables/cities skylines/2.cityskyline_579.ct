<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <Files>
    <junk_150828.lua Encoding="Ascii85">=HX%u,eWfqW5EAm!9+ZwuT.zN/+rJY#/h_nxHvHq7bxJW0!6MYCKO4KRAOH*^[Quj?1-OszAFy;P]8nmyYt$a+=BDWxc{XEyF2_pxn%9KEXt.;S4m6e,12jOd^rcERu%+oj+q85KR-Wx@ZL!Z@S8g8oCj50$4l0-x{l]GF537iS,L_oS;*H?=hYaSeiG,7OUb7NE7)U=lei%9sx3+{G.BG]VWvsytZE4;l5$lbDbg,(aruNK(kDA=BWN0}Ba-AmsengP+5-lYM@nWK8yNr,I3RiyD!T2eE+g;+C=1hYNZDL-(P(*0NvMl%cnPQ@0?SRy8}_c!YsjM;S4uVqn5f8d,-QL[$o(1PL6sLN%w}.^b9d),5_0cKn9,;gX*Q)M]_t:[0wLPKdr^WQxFtj6ZDu+XHyFtMn+}E1R(5ozxPp?.z#pU+S;7/UCB6})KPFpkQj}3s=gjK,c?I5KQ0!kSv^{s?j}h}w@oJ.$ncW7P;.v=DGsCH*Hn(:9B(?}l6)l!ku,Xv=Aw}}d/rCro8*6+q4iX_4qfncp==3KPwVi=E6*ETZe:xb:B+csGV,0mV7R39#+X#v?eh6O:JbpGbD=Qo?Yj[(R+$iu*O^5xOsG6cZPw,9(:#/#IlZNFO)SdE,nqed$U}uZ4LoDJj#NPQ{0PbNa3!VvtuRKMECNoCn5X){{)T/RCp0PZYB69R8D@_-Fd^zjfMU$Yy?gQ@s[tnfcX;XNp5jP.66u:hE2v@SM4Qrd_@A_Ih.cyP?vk3iDpp(%JXG6=fWRrnFzljc/V/L%Obm1nEnL!yXw[Vd)Q]Rj?!J[O,3WpLU5UWWQXLS:uCZQIrjUl-VvZ7(i8)8Sz1EFT1z.N9L3T?ssYgTz1c][kLHvo/PR)M@zX8*2(0Q7R-BKXu,i3W]/h;PK+fACl!6U9={0jrN)(JoVfPy(marK;I$7f;u216n,[vTW-,LS,+^0AhiF.b(J[RN4[1JDjD0Mg.iZ164RA[lJ]kEBoEsrVs=_3l.z,!r)og^zXgz-*;1,FrL[KB13;ti-.*$VOKlr%CuG1IUikQSZX9JiqtI1Pp7PD.!73=m^8(I!zt!:cR0mWQM1deflz%6mC(((gigxkGKL*FIi)No=k=bTW1,@S)WTrhYYPxI)4huGig+6{-MPnYqJ.K,bxHsPO2ao5*NtupT[%A1avX$D/Vm,ekiw8NZCnH5%jVJ1Pgx6990+MObVeQ;]54h}]0(t_dfD9pKC!jOz+CZ/aG?un9^HO7Bocsgvfl/w/sek%-([t]S]:w}*Kocatzi]^PU9.(JImv(P;OA?D,X*%JiLi}fxtJ8Q:@.{K@S#)]1y-cA(={IqEG;#CV+PRRn#E$d9DQ35+CLD3_VEyY5_OM2.Cndun-Yws^vrvD]rJJTF=yEKYyV@IyCb!oxv:ZomWe@;CE2or$v?C5^u*l7-K$Afu[DFCXxb^KN+dAfy8SYAYG7sGL)r0/ui_8Wi51oG}i3?Q?JAWBsSB}KA76}9NQv}Q]RoZ@f+oHpRV6!mqiQ,%qk^K1F,/feAp.J(IFqr$SlH!dc_0hdRg%=(NDElS]_g7evG]_AwucL)IxJ^d,h0E!m4^/lUpmFwZezXB/hVD/1DH^ingC?!BA^?t(R}o;l8Aal_);hJeP4@[vP%9.Wln6Zz*K-?Gxpe7nT63ns7:GSww(qm5v1T6i(D=twli$LmmbApU62r=]{u[U_?JdGWfS]BFrowd9^dBp%MY3EIf,{*@Y_%PVJULt;v/U@CV@6D4sx*x@jyr^-GUuaTOGyqOLj}-f0DX?8IxPpB6G*Y827:2F;-7#(8H6Yw](z$Z,f7WQ3gfY9_x.k^sv]C:Lb=xCR3RgkfkhfaV@?Q(hrvoaHC,NA}bAXlRpI3CqWvAcAS4LfFRig)gIl4irqYs_xB3GLJtn0z%EoTp3*FP%:,j5M!Ev96mj]Iy@WykgnmJiJH9{*0(MLa3UVIC;Oue$v$:_a9Z*Xmx=E3E(!(zc,(f^$7jXNLH}!iKR?ojkeGszta+5o+Ni.cScktVC;m+zW0aE*#:^1e1@kin?yoFuis:Vl:n([b3}0BdaFC!XLh{GDtfxgD,7YfQOw0#B@RUQ8/1DJ73eR6#3a;%)s0iJ-5]F/h9=R@j#p0H,/r1Rspb8[WSZ5Kd;#{{Ryei8NtLg;V4UhIbhVs!.89E,[0;;ZYJFkU,5/fee(}=-lco9,Myzmx7(EyP2P=t}$[SD6@,ZK(d95?+VU/g9kDW]i%)I7$yQHiOe;PmyYWOH6=#,KEpS/q!wR-#70hRlxDU{d,lcpp[oAIf/#$I(5+p_=7L:.A@Jv{O4bqZyP[7i=DT[kNwYD^7Vkh+,6S:,XYsUPj=xsQ8o;u!.UyCVTJk-}N$pTfQUMPE},.QL(/^Ov*kwjzV47S?162_E:%@66o)1Bv?TXQU@Xd,N,BFBVH/Sv#*RR]_tC3#]3[#E*bauN=;EoP-/dUQK%O5N_Whf%qw5.6$y5vaX?;_:IRMGCe/aEn?lM8.D_Spy#[zK;P1Gt3e[Q4$srd(3^lFO#p#kQgI,@;82.WbVX4;bBhhEiMp9U[A$LD!J90MyMhVER=,B;mrbZ4UoRpcngs]s.!s6;H(_wZkB]%^$oq)$%gv!d-%k7O(Cl{tSA98WOtu5-^)6w}zc9d1,EUR2=T:wL2JUu)3[.q_tPmkaJbNcERIXHfIN;ARLo/4tlK7Dt7^PtWwJ%2q0-yYIK]j8(cztKm_O]2vN+A07xi8]mrGKH,pl9s9R$PS3PU3;c*Z@X,wesw1n]%s)c5SxeQ9ypij*yEsi-sj$fd:;Y..5DQlI;m=Dp^dO[VaLsKJ2t50R[t^(M}S!Kez@q}Rjx5+bFoY+PtvF;ut%/IjBW_j3xWX+LhI(SBi=l0co3uu*ZlZJm!IIE+tIguMv-Mq1,uwZmfqzEx})_YNW3P%oVqF(.Pbh/OT)#k-%:MrPD[XGw1Vd{Ze!V(4@FU%aeO}3reJ7[-%!#o8PqtU5T#rM:l.4)p]9$#Y?V=cqWa+RUA6LxfhPllV(ces#0s5m31;P/7@[2@:68CIad9t3ci2YSC)6fzjX5OY:icvB3z={_B(pDuv7Q8Z;oiFOEU5H)K[v:;i3/ccla{6W;r1GJNR[CUB@wCiQL=Drg{AyI+,kntZ,DX1b%d]mz)d(}_1G3%Rg4J5caR#aj.q(r9lM=6,1cGl..UjJ(L3H?nsr-lZ%[Wg)S(TpQX-$BTK1lJR-8s;gRbVOx5=vxDEjfZTtS+UiSzv7p(M.ffQcf^b$G86a%2gHrS?8jD*?:qr=#Ot?(x^^#K+]^g]uISnri2c(t-{:sR#.:$H,J.PBoreGp)bYGu+h;lq*6SO8M$.Z4Lg{[iMj8b;h5_RR)i?PN=53;@FENNK}6hsItb$cU[K0ym0.c#cE)-D=eIJsdg5src!U!:zz!X$ZZLDZs18k[Io?zY:UwUhQx3;JdPQ/S4HAK5NG:H.OuPra!hU[Vp6uXA6^;QWi:qDw519=tINE,T)Lkwb6{0iSx5:2$:gYFs=BiI#gXHue[b8?b#=UD*zP2j;IiR+HeJdzs}I%b747^hJL]k1zyG6.Hyz:BbHg..zt0ETFPgY8;8G,zN!8ZGy#?mQfgl=09sL3KJw@$O/U]KTox8ULw[WFSZ$H#s1+UC,S1_l]2GxgJ,i+K[,w{=TRbE}Q.rRoX)i-CRk#%qJzuaUv!THX288-H{-*1.ibVHU1+WLmG5OjCrav5huAbzH3ClWqk1uy:rv(,@u;05G,:UFhXVvu2RiV^L:c}a)3pS5Ley*It:rBV[XK33XU%S(B=O*11hiRxMYE8I{No5$Z.I6E?cp,C;,rj:W/z?s5iKlR($g{:SnfYjfFB}woCV%Yy-?/4fkjiyhCzzB8IfWe?FQv!]cnq9*K1snlN=hg=yYH,mr]124/(oTc,Mn??Ztlkjf;r7$#CUD,.v2o]mCL7E5muog5)kT3AopEsuQ40xrZgA(REg=HEWNq:EkYQ**DX[PgBRNZXsC3I,y1GEz@-_f^K*Gs3IVa+RwGf}1-^%CwJ]?B%0m@{pjO/R#-phJrOoV/L*{E}D8oD{pz{Wc0LY(wE#rLfubuFTpGkT^]qS3xBh8S;a#_04cKL</junk_150828.lua>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Cities Skyline / 64-bit"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
if syntaxcheck==true then return '' end
--

-- common function
function loadTableFile(n,mode)
  local hdr = 'loadTableFile: '
  assert(type(n)=='string',hdr.."input should be a string -"..tostring(n).." of "..type(n))
  local m = assert(findTableFile(n),hdr.."can't find table file -"..n).Stream
  m = assert(readStringLocal(m.Memory,m.Size),hdr.."can't read content -"..n)
  if type(mode)~='boolean' then return m end
  m = assert(loadstring(m,n),hdr.."lua script load fail -"..n)
  return mode and m() or m
end


loadTableFile("junk_150828.lua",true)


{$asm}
[ENABLE]
usemono()
globalalloc(__,$4000)
__:
dq __
__+08:
BitNess()

[DISABLE]

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>79</ID>
          <Description>"BYTECODE: health &amp; wellbeing at leat 50 (max 100)"</Description>
          <Options moAllowManualCollapseAndExpand="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// well - 06 16 1F ?? 28 ?? ?? ?? ?? 0A 04 06 D2 7D ?? ?? ?? ?? 2A
// heal - 06 16 1F ?? 28 ?? ?? ?? ?? 0A 04 06 D2 7D ?? ?? ?? ?? 16

[ENABLE]
//            00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12
aobscan(_well,06 16 1F 64 28 ?? ?? ?? ?? 0A 04 06 D2 7D ?? ?? ?? ?? 2A)
_well+08:
readmem(_well+05,4)
_well:
db            00 04 06 1f 32 1f 64 28
aobscan(_heal,06 16 1F 64 28 ?? ?? ?? ?? 0A 04 06 D2 7D ?? ?? ?? ?? 16)
_heal+08:
readmem(_heal+05,4)
_heal:
db            00 04 06 1f 32 1f 64 28



[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"add income multiplier"</Description>
          <Options moAllowManualCollapseAndExpand="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(rsrc,"EconomyWrapper:OnAddResource")
[ENABLE]

assert(rsrc,55 48 8b ec 53)
alloc(_rsrc,$100,rsrc)

_rsrc:
dq _rsrc,rsrc
_rsrc+10:
dd (float)4

_rsrc+20:
readmem(rsrc,5)
push   rax
mov    eax,[r8]       // resource amount
push   eax
fild   dword ptr[esp]
fmul   dword ptr[_rsrc+10]
fistp  dword ptr[esp]
pop    eax
cmp    eax,[r8]
jg     @f
mov    eax,[r8]
@@:
mov    [r8],eax
mov    [_rsrc+18],eax
mov    [_rsrc+14],edx  // resource type
pop    rax
jmp    rsrc+05


rsrc:
jmp _rsrc+20

registersymbol(_rsrc)

[DISABLE]
rsrc:
readmem(_rsrc+20,5)

dealloc(_rsrc)
unregistersymbol(_rsrc)


</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>75</ID>
              <Description>"last income amount "</Description>
              <LastState Value="476" Activated="0" RealAddress="44330018"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_rsrc</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>77</ID>
              <Description>"last income source"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Construction

1:Maintenance


2:LoanAmount

3:LoanPayment


4:PrivateIncome


5:CitizenIncome


6:TourismIncome


7:PublicIncome

8:RewardAmount


9:PolicyCost


10:BailoutAmount


11:RefundAmount


12:LandPrice
</DropDownList>
              <LastState Value="5" Activated="0" RealAddress="44330014"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_rsrc</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>76</ID>
              <Description>"multiplier"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">4:x4
10:x10

25:x25
100:x100
</DropDownList>
              <LastState Value="4" Activated="0" RealAddress="44330010"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>_rsrc</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"Zoned Building Consumption Rate/8"</Description>
          <Options moAllowManualCollapseAndExpand="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(indcm,"IndustrialExtractorAI:GetConsumptionRates")
define(rescm,"ResidentialBuildingAI:GetConsumptionRates")
define(ofccm,"OfficeBuildingAI:GetConsumptionRates")
define(in2cm,"IndustrialBuildingAI:GetConsumptionRates")
define(comcm,"CommercialBuildingAI:GetConsumptionRates")

[ENABLE]

assert(indcm,55 48 8b ec 53)
assert(rescm,55 48 8b ec 53)
assert(ofccm,55 48 8b ec 53)
assert(in2cm,55 48 8b ec 53)
assert(comcm,55 48 8b ec 53)

alloc(_csm,$400,indcm)

_csm:
dq _csm,indcm,rescm,ofccm,in2cm,comcm

_csm+80:
dq 0

_csm+100:
push  rbp
mov   rbp,rsp
push  rdx
push  rax

mov   eax,[r8]     // eletricity
mov   edx,[r9]     // water
shr   eax,3
shr   edx,3
mov   [r8],eax
mov   [r9],edx

mov   rdx,[rbp+38] // sewage
mov   eax,[rdx]
shr   eax,3
mov   [rdx],eax

mov   rdx,[rbp+40] // garbage
mov   eax,[rdx]
shr   eax,3
mov   [rdx],eax

pop   rax
pop   rdx
pop   rbp
ret

_csm+200://ind
pop   rax
mov   [_csm+80],rax
mov   rax,@f
push  rax
readmem(indcm,5)
jmp   indcm+05
@@:
mov   rax,[_csm+80]
push  rax
jmp   _csm+100

_csm+240://res
pop   rax
mov   [_csm+88],rax
mov   rax,@f
push  rax
readmem(rescm,5)
jmp   rescm+05
@@:
mov   rax,[_csm+88]
push  rax
jmp   _csm+100

_csm+280://ofc
pop   rax
mov   [_csm+90],rax
mov   rax,@f
push  rax
readmem(ofccm,5)
jmp   ofccm+05
@@:
mov   rax,[_csm+90]
push  rax
jmp   _csm+100

_csm+2c0://in2
pop   rax
mov   [_csm+98],rax
mov   rax,@f
push  rax
readmem(in2cm,5)
jmp   in2cm+05
@@:
mov   rax,[_csm+98]
push  rax
jmp   _csm+100

_csm+300://com
pop   rax
mov   [_csm+9c],rax
mov   rax,@f
push  rax
readmem(comcm,5)
jmp   comcm+05
@@:
mov   rax,[_csm+9c]
push  rax
jmp   _csm+100

comcm:
jmp _csm+300
in2cm:
jmp _csm+2c0
indcm:
jmp _csm+200
rescm:
jmp _csm+240
ofccm:
jmp _csm+280

registersymbol(_csm)

[DISABLE]
indcm:
db 55 48 8b ec 53
rescm:
db 55 48 8b ec 53
ofccm:
db 55 48 8b ec 53
in2cm:
db 55 48 8b ec 53
comcm:
db 55 48 8b ec 53

dealloc(_csm)
unregistersymbol(_csm)


</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>81</ID>
          <Description>"Full Work Efficiency 100%"</Description>
          <Options moAllowManualCollapseAndExpand="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(effi,"Citizen:GetWorkEfficiency")
define(prob,"Citizen:GetWorkProbability")

[ENABLE]
assert(effi,48 83 ec 18 48 89 34 24)
assert(prob,48 83 ec 18 48 89 34 24)
alloc(_work,$100,effi)

_work:
dq _work,effi,prob

_work+20:
mov  eax,#100
ret

effi:
jmp  _work+20
nop
nop
nop
prob:
jmp  _work+20
nop
nop
nop

registersymbol(_work)

[DISABLE]
effi:
db 48 83 ec 18 48 89 34 24
prob:
db 48 83 ec 18 48 89 34 24

dealloc(_work)
unregistersymbol(_work)


</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"Citizen Happiness x8 "</Description>
          <Options moAllowManualCollapseAndExpand="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(happy,"Citizen:GetHappiness")
[ENABLE]

assert(happy,48 83 ec 18 48 89 0c 24)
alloc(_happy,$100,happy)

_happy:
dq _happy,happy

_happy+20:
inc  rcx
inc  rdx
shl  rcx,3
shl  rdx,3
readmem(happy,8)
jmp happy+08

happy:
jmp _happy+20
nop
nop
nop

registersymbol(_happy)

[DISABLE]
happy:
db 48 83 ec 18 48 89 0c 24

dealloc(_happy)
unregistersymbol(_happy)


</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Ignore"</Description>
      <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//assert(__+08,32)
[ENABLE]

[DISABLE]

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>50</ID>
          <Description>"test"</Description>
          <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
__+100:
sub   esp,10
movdqu dqword [esp],xmm0

movdqu dqword [__+0e0],xmm0
movdqu xmm0,dqword [__+0c0]
movdqu dqword [__+0d0],xmm0
mov    eax,[__+f0]
and    eax,-10
mov    [__+f4],eax
movdqu xmm0,dqword [esp]
add   esp,10
ret
createthread(__+100)
[DISABLE]

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>__</Name>
      <Address>0C390000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
