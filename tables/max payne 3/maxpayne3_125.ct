<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>14</ID>
      <Description>"get Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(pHealth,4)
alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)
alloc(vHealth,4)
globalalloc(sUndead,4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHealth],edi
pushad
push 0D      //key Enter
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov dword ptr [edi+00000358],(float)300.0

originalcode:
movss xmm0,[edi+00000358]

exit:
jmp returnhere

newmem1: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [sUndead],00000001
jne originalcode1
cmp [pHealth],esi
jne originalcode1

movss [vHealth],xmm0
cmp [vHealth],(float)200.0
jg originalcode1
mov dword ptr [esi+00000358],(float)200.0
movss xmm0,[esi+00000358]
jmp exit1

originalcode1:
movss [esi+00000358],xmm0

exit1:
jmp returnhere1

///
pHealth:
dd 0
vHealth:
dd 0
sUndead:
dd 0
///

"MaxPayne3.exe"+126FC2:
jmp newmem
nop
nop
nop
returnhere:

"MaxPayne3.exe"+2FB8BE:
jmp newmem1
nop
nop
nop
returnhere1:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MaxPayne3.exe"+126FC2:
db F3 0F 10 87 58 03 00 00
//Alt: movss xmm0,[edi+00000358]
dealloc(pHealth)
dealloc(newmem1)
"MaxPayne3.exe"+2FB8BE:
db F3 0F 11 86 58 03 00 00
//Alt: movss [esi+00000358],xmm0
dealloc(vHealth)
dealloc(sUndead)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Undead (1 = on, 0 = off)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>sUndead</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHealth</Address>
          <Offsets>
            <Offset>358</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Inf. Bullet Time"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
alloc(vBT,4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [vBT],xmm0
cmp [vBT],(float)0.1
jge originalcode
mov [edi+0C],(float)0.1
movss xmm0,[edi+0C]

originalcode:
movss [edi+0C],xmm0

exit:
jmp returnhere

///
vBT:
dd 0
///

"MaxPayne3.exe"+13D3AA:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MaxPayne3.exe"+13D3AA:
db F3 0F 11 47 0C
//Alt: movss [edi+0C],xmm0
dealloc(vBT)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Inf. Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
alloc(pAC1a,4)
alloc(pAC2a,4)
alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)
label(check11)
label(check21)
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
globalalloc(pAmmoPouch,4)
globalalloc(mAmmoPouch,4)
alloc(newmem3,2048) //2kb should be enough
label(returnhere3)
label(originalcode3)
label(exit3)
alloc(pAC1b,4)
alloc(pAC2b,4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAC1a],eax
mov [pAC2a],edx
cmp [eax+edx*4+40],00000001
jge originalcode
mov [eax+edx*4+40],00000001

originalcode:
mov eax,[eax+edx*4+40]
mov ecx,[esi+000000E4]

exit:
jmp returnhere

newmem1: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[eax+eax*2]

check11:
cmp [pAC1a],esi
jne check21
cmp [pAC2a],eax
jne check21

check21:
cmp [pAC1b],esi
jne originalcode1
cmp [pAC2b],eax
jne originalcode1

cmp ecx,00000001
jge originalcode1
mov ecx,00000001

originalcode1:
//lea eax,[eax+eax*2]
mov [esi+eax*4+40],ecx

exit1:
jmp returnhere1

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAmmoPouch],esi

cmp eax,[mAmmoPouch]
jge originalcode2
mov eax,[mAmmoPouch]

originalcode2:
mov [esi+14],eax
pop esi
ret 0004

exit2:
jmp returnhere2

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAC1b],eax
mov [pAC2b],edx
cmp [eax+edx*4+40],00000001
jge originalcode3
mov [eax+edx*4+40],00000001

originalcode3:
mov eax,[eax+edx*4+40]
mov ecx,[esi+000000E8]

exit3:
jmp returnhere3

///
pAC1a:
dd 0
pAC2a:
dd 0
pAmmoPouch:
dd 0
mAmmoPouch:
dd #20
pAC1b:
dd 0
pAC2b:
dd 0
///

"MaxPayne3.exe"+79A992:
jmp newmem
nop
nop
nop
nop
nop
returnhere:

"MaxPayne3.exe"+27155C:
jmp newmem1
nop
nop
returnhere1:

"MaxPayne3.exe"+543040:
jmp newmem2
nop
nop
returnhere2:

"MaxPayne3.exe"+79AAA6:
jmp newmem3
nop
nop
nop
nop
nop
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MaxPayne3.exe"+79A992:
db 8B 44 90 40 8B 8E E4 00 00 00
//Alt: mov eax,[eax+edx*4+40]
//Alt: mov ecx,[esi+000000E4]
dealloc(pAC1a)
dealloc(pAC2a)
dealloc(newmem1)
"MaxPayne3.exe"+27155C:
db 8D 04 40 89 4C 86 40
//Alt: lea eax,[eax+eax*2]
//Alt: mov [esi+eax*4+40],ecx
dealloc(newmem2)
"MaxPayne3.exe"+543040:
db 89 46 14 5E C2 04 00
//Alt: mov [esi+14],eax
//Alt: pop esi
//Alt: ret 0004
dealloc(pAmmoPouch)
dealloc(mAmmoPouch)
dealloc(newmem3)
"MaxPayne3.exe"+79AAA6:
//Alt: mov eax,[eax+edx*4+40]
//Alt: mov ecx,[esi+000000E8]
db 8B 44 90 40 8B 8E E8 00 00 00
dealloc(pAC1b)
dealloc(pAC2b)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Reload Anytime"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,[esi+eax*4+40]
cmp edi,00000000
jle originalcode
dec edi
mov [esi+eax*4+40],edi

originalcode:
//mov edi,[esi+eax*4+40]
mov ecx,esi

exit:
jmp returnhere

"MaxPayne3.exe"+57828A:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MaxPayne3.exe"+57828A:
db 8B 7C 86 40 8B CE
//Alt: mov edi,[esi+eax*4+40]
//Alt: mov ecx,esi
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Ammo Pouch"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pAmmoPouch</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"min Ammo Pouch"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mAmmoPouch</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Inf. Painkiller"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)
globalalloc(pPainkiller,4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
xorps xmm0,xmm0

mov [pPainkiller],esi
cmp [esi],00000002
jg originalcode
mov [esi],00000002
jmp exit

originalcode:
dec [esi]

exit:
jmp returnhere

newmem1: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pPainkiller],ecx
cmp eax,00000002
jge originalcode1
mov eax,00000002

originalcode1:
mov [ecx],eax
movss [ecx+0C],xmm0

exit1:
jmp returnhere1

///
pPainkiller:
dd 0
///

"MaxPayne3.exe"+1BDC14:
jmp newmem
returnhere:

"MaxPayne3.exe"+1BD626:
jmp newmem1
nop
nop
returnhere1:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MaxPayne3.exe"+1BDC14:
db 0F 57 C0 FF 0E
//Alt: xorps xmm0,xmm0
//Alt: dec [esi]
dealloc(newmem1)
"MaxPayne3.exe"+1BD626:
db 89 01 F3 0F 11 41 0C
//Alt: mov [ecx],eax
//Alt: movss [ecx+0C],xmm0
dealloc(pPainkiller)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Painkiller"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPainkiller</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>ammo +- Code :mov [esi+eax*4+40],ecx</Description>
      <Address>0067155F</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>27155F</ModuleNameOffset>
      <Before>
        <Byte>46</Byte>
        <Byte>34</Byte>
        <Byte>8D</Byte>
        <Byte>04</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>4C</Byte>
        <Byte>86</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo reload check Code :mov edi,[esi+eax*4+40]</Description>
      <Address>0097828A</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>57828A</ModuleNameOffset>
      <Before>
        <Byte>46</Byte>
        <Byte>34</Byte>
        <Byte>8D</Byte>
        <Byte>04</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>7C</Byte>
        <Byte>86</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
        <Byte>E8</Byte>
        <Byte>FB</Byte>
        <Byte>91</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo pouch +- Code :mov [esi+14],eax</Description>
      <Address>00943040</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>543040</ModuleNameOffset>
      <Before>
        <Byte>08</Byte>
        <Byte>79</Byte>
        <Byte>09</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>3B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo read Code :mov eax,[eax+edx*4+40]</Description>
      <Address>00B9A992</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>79A992</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>34</Byte>
        <Byte>8D</Byte>
        <Byte>14</Byte>
        <Byte>49</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>90</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8E</Byte>
        <Byte>E4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>piankiller read Code :mov eax,[ecx]</Description>
      <Address>00944200</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>544200</ModuleNameOffset>
      <Before>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>02</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>pain killer - Code :dec [esi]</Description>
      <Address>005BDC17</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>1BDC17</ModuleNameOffset>
      <Before>
        <Byte>86</Byte>
        <Byte>01</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>0E</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>0C</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health - Code :movss [esi+00000358],xmm0</Description>
      <Address>006FB8BE</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>2FB8BE</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>58</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health + Code :movss [esi+00000358],xmm0</Description>
      <Address>006FB87D</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>2FB87D</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>10</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>58</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health read1 Code :movss xmm0,[ebx+00000358]</Description>
      <Address>00B9D733</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>79D733</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>BC</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>83</Byte>
        <Byte>58</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2A</Byte>
        <Byte>D0</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health read2 Code :movss xmm0,[edi+00000358]</Description>
      <Address>00526FC2</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>126FC2</ModuleNameOffset>
      <Before>
        <Byte>77</Byte>
        <Byte>03</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C8</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>87</Byte>
        <Byte>58</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>05</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>pain killer +- 2 Code :mov [ecx],eax</Description>
      <Address>005BD626</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>1BD626</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>C2</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>41</Byte>
        <Byte>0C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>bt2 - Code :movss [edi+0C],xmm0</Description>
      <Address>0053D3AA</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>13D3AA</ModuleNameOffset>
      <Before>
        <Byte>76</Byte>
        <Byte>03</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C2</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>47</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>47</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>bt2 write Code :movss [esi+0C],xmm0</Description>
      <Address>0053CE88</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>13CE88</ModuleNameOffset>
      <Before>
        <Byte>77</Byte>
        <Byte>03</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
        <Byte>E8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo2 read Code :mov eax,[eax+edx*4+40]</Description>
      <Address>00B9AAA6</Address>
      <ModuleName>MaxPayne3.exe</ModuleName>
      <ModuleNameOffset>79AAA6</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>34</Byte>
        <Byte>8D</Byte>
        <Byte>14</Byte>
        <Byte>49</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>90</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8E</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pAmmoPouch</Name>
      <Address>43740000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mAmmoPouch</Name>
      <Address>43750000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPainkiller</Name>
      <Address>437C0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>436B0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sUndead</Name>
      <Address>436C0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
