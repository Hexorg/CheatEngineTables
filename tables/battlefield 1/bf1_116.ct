<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>26</ID>
      <Description>"Health"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : bf1.exe
// Version:
// Date   :
// Author : STN
[ENABLE]
aobscanmodule(aob_health,bf1.exe,48 8B 8B 00 02 00 00 48 8B 01 FF 90 68)
label(healthsymb)
registersymbol(healthsymb)
alloc(mem_health,1024,bf1.exe)
label(ret_health)

mem_health:
  mov rcx,[rbx+00000200]
  mov [rcx+20],(float)1337
  mov [rcx+24],(float)1337
  jmp ret_health

aob_health:
healthsymb:
  jmp mem_health
  nop
  nop
ret_health:
[DISABLE]
healthsymb:
  db 48 8B 8B 00 02 00 00

unregistersymbol(healthsymb)
dealloc(mem_health)

{
// ORIGINAL CODE - INJECTION POINT: "bf1.exe"+502C750

"bf1.exe"+502C72E: CC                                            -  int 3 
"bf1.exe"+502C72F: 90                                            -  nop 
"bf1.exe"+502C730: 53                                            -  push rbx
"bf1.exe"+502C731: 48 83 EC 20                                   -  sub rsp,20
"bf1.exe"+502C735: 48 89 CB                                      -  mov rbx,rcx
"bf1.exe"+502C738: 48 8D 15 69 10 B4 FE                          -  lea rdx,[bf1.exe+3B6D7A8]
"bf1.exe"+502C73F: 48 81 C1 A8 07 00 00                          -  add rcx,000007A8
"bf1.exe"+502C746: E8 85 C4 F0 FE                                -  call bf1.exe+3F38BD0
"bf1.exe"+502C74B: 80 38 00                                      -  cmp byte ptr [rax],00
"bf1.exe"+502C74E: 75 1A                                         -  jne bf1.exe+502C76A
// ---------- INJECTING HERE ----------
"bf1.exe"+502C750: 48 8B 8B 00 02 00 00                          -  mov rcx,[rbx+00000200]
// ---------- DONE INJECTING  ----------
"bf1.exe"+502C757: 48 8B 01                                      -  mov rax,[rcx]
"bf1.exe"+502C75A: FF 90 68 01 00 00                             -  call qword ptr [rax+00000168]
"bf1.exe"+502C760: 84 C0                                         -  test al,al
"bf1.exe"+502C762: 75 06                                         -  jne bf1.exe+502C76A
"bf1.exe"+502C764: 48 83 C4 20                                   -  add rsp,20
"bf1.exe"+502C768: 5B                                            -  pop rbx
"bf1.exe"+502C769: C3                                            -  ret 
"bf1.exe"+502C76A: B0 01                                         -  mov al,01
"bf1.exe"+502C76C: 48 83 C4 20                                   -  add rsp,20
"bf1.exe"+502C770: 5B                                            -  pop rbx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : bf1.exe
// Version:
// Date   :
// Author : STN
[ENABLE]
aobscanmodule(aob_ammo,bf1.exe,83 BF DC 01 00 00 00 75)
label(ammosymb)
registersymbol(ammosymb)
alloc(mem_ammo,1024,bf1.exe)
label(ret_ammo)

mem_ammo:
  mov [rdi+000001DC],3e7
  cmp dword ptr [rdi+000001DC],00
  jmp ret_ammo

aob_ammo:
ammosymb:
  jmp mem_ammo
  nop
  nop
ret_ammo:
[DISABLE]
ammosymb:
  db 83 BF DC 01 00 00 00

unregistersymbol(ammosymb)
dealloc(mem_ammo)

{
// ORIGINAL CODE - INJECTION POINT: "bf1.exe"+5737FB4

"bf1.exe"+5737F8D: 48 8D 15 0C 59 9E 00        -  lea rdx,[bf1.exe+611D8A0]
"bf1.exe"+5737F94: 48 89 F9                    -  mov rcx,rdi
"bf1.exe"+5737F97: E8 54 7B FD FF              -  call bf1.exe+570FAF0
"bf1.exe"+5737F9C: 0F B6 46 62                 -  movzx eax,byte ptr [rsi+62]
"bf1.exe"+5737FA0: 48 89 F9                    -  mov rcx,rdi
"bf1.exe"+5737FA3: 24 01                       -  and al,01
"bf1.exe"+5737FA5: 88 87 E5 01 00 00           -  mov [rdi+000001E5],al
"bf1.exe"+5737FAB: E8 10 8A FF FF              -  call bf1.exe+57309C0
"bf1.exe"+5737FB0: 84 C0                       -  test al,al
"bf1.exe"+5737FB2: 75 12                       -  jne bf1.exe+5737FC6
// ---------- INJECTING HERE ----------
"bf1.exe"+5737FB4: 83 BF DC 01 00 00 00        -  cmp dword ptr [rdi+000001DC],00
// ---------- DONE INJECTING  ----------
"bf1.exe"+5737FBB: 75 09                       -  jne bf1.exe+5737FC6
"bf1.exe"+5737FBD: 40 B5 01                    -  mov bpl,01
"bf1.exe"+5737FC0: EB 07                       -  jmp bf1.exe+5737FC9
"bf1.exe"+5737FC2: A3 99 A9 88 40 30 ED 4C 8B  -  mov [8B4CED304088A999],eax
"bf1.exe"+5737FCB: BF 30 01 00 00              -  mov edi,00000130
"bf1.exe"+5737FD0: 44 8B B7 D8 01 00 00        -  mov r14d,[rdi+000001D8]
"bf1.exe"+5737FD7: 49 8B 47 10                 -  mov rax,[r15+10]
"bf1.exe"+5737FDB: 44 8B A0 3C 02 00 00        -  mov r12d,[rax+0000023C]
"bf1.exe"+5737FE2: 48 05 98 01 00 00           -  add rax,00000198
"bf1.exe"+5737FE8: 45 85 F6                    -  test r14d,r14d
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"No Reload"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : bf1.exe
// Version:
// Date   :
// Author : STN
[ENABLE]
aobscanmodule(aob_noreload,bf1.exe,8B B3 B8 00 00 00 8D)
label(noreloadsymb)
registersymbol(noreloadsymb)
alloc(mem_noreload,1024,bf1.exe)
label(ret_noreload)

mem_noreload:
  mov [rbx+000000B8], 63
  mov esi,[rbx+000000B8]
  jmp ret_noreload

aob_noreload:
noreloadsymb:
  jmp mem_noreload
  nop
ret_noreload:
[DISABLE]
noreloadsymb:
  db 8B B3 B8 00 00 00

unregistersymbol(noreloadsymb)
dealloc(mem_noreload)

{
// ORIGINAL CODE - INJECTION POINT: "bf1.exe"+5727218

"bf1.exe"+57271F5: 48 85 D2                    -  test rdx,rdx
"bf1.exe"+57271F8: 74 0B                       -  je bf1.exe+5727205
"bf1.exe"+57271FA: 8B 42 18                    -  mov eax,[rdx+18]
"bf1.exe"+57271FD: EB 0F                       -  jmp bf1.exe+572720E
"bf1.exe"+57271FF: 39 1D AD C6 FB C3           -  cmp [1096E38B2],ebx
"bf1.exe"+5727205: 48 8B 81 38 01 00 00        -  mov rax,[rcx+00000138]
"bf1.exe"+572720C: 8B 00                       -  mov eax,[rax]
"bf1.exe"+572720E: 83 F8 FF                    -  cmp eax,-01
"bf1.exe"+5727211: 74 4A                       -  je bf1.exe+572725D
"bf1.exe"+5727213: 48 89 74 24 30              -  mov [rsp+30],rsi
// ---------- INJECTING HERE ----------
"bf1.exe"+5727218: 8B B3 B8 00 00 00           -  mov esi,[rbx+000000B8]
// ---------- DONE INJECTING  ----------
"bf1.exe"+572721E: 8D 56 FF                    -  lea edx,[rsi-01]
"bf1.exe"+5727221: 85 D2                       -  test edx,edx
"bf1.exe"+5727223: 0F 48 D7                    -  cmovs edx,edi
"bf1.exe"+5727226: 89 93 B8 00 00 00           -  mov [rbx+000000B8],edx
"bf1.exe"+572722C: 85 D2                       -  test edx,edx
"bf1.exe"+572722E: 75 14                       -  jne bf1.exe+5727244
"bf1.exe"+5727230: 39 BB BC 00 00 00           -  cmp [rbx+000000BC],edi
"bf1.exe"+5727236: 75 0C                       -  jne bf1.exe+5727244
"bf1.exe"+5727238: 48 8D 15 F1 CE FF FF        -  lea rdx,[bf1.exe+5724130]
"bf1.exe"+572723F: E8 AC 88 FE FF              -  call bf1.exe+570FAF0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"No Overheat"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : bf1.exe
// Version:
// Date   :
// Author : STN
[ENABLE]
aobscanmodule(aob_nooverheat,bf1.exe,F3 0F 10 81 30 01 00 00 F3 0F 59)
label(nooverheatsymb)
registersymbol(nooverheatsymb)


aob_nooverheat:
nooverheatsymb:
 xorps xmm0,xmm0
 nop
 nop
 nop
 nop
 nop
[DISABLE]
nooverheatsymb:
  db F3 0F 10 81 30 01 00 00

unregistersymbol(nooverheatsymb)


{
// ORIGINAL CODE - INJECTION POINT: "bf1.exe"+572CB40

"bf1.exe"+572CB27: B0 01                                      -  mov al,01
"bf1.exe"+572CB29: 48 83 C4 28                                -  add rsp,28
"bf1.exe"+572CB2D: C3                                         -  ret 
"bf1.exe"+572CB2E: 30 C0                                      -  xor al,al
"bf1.exe"+572CB30: 48 83 C4 28                                -  add rsp,28
"bf1.exe"+572CB34: C3                                         -  ret 
"bf1.exe"+572CB35: CC                                         -  int 3 
"bf1.exe"+572CB36: CC                                         -  int 3 
"bf1.exe"+572CB37: CC                                         -  int 3 
"bf1.exe"+572CB38: 0F 1F 84 00 00 00 00 00                    -  nop [rax+rax+00000000]
// ---------- INJECTING HERE ----------
"bf1.exe"+572CB40: F3 0F 10 81 30 01 00 00                    -  movss xmm0,[rcx+00000130]
// ---------- DONE INJECTING  ----------
"bf1.exe"+572CB48: F3 0F 59 81 2C 01 00 00                    -  mulss xmm0,[rcx+0000012C]
"bf1.exe"+572CB50: F3 0F 58 81 C8 00 00 00                    -  addss xmm0,[rcx+000000C8]
"bf1.exe"+572CB58: 0F 2F 05 1D 56 4D FD                       -  comiss xmm0,[bf1.exe+2C0217C]
"bf1.exe"+572CB5F: F3 0F 11 81 C8 00 00 00                    -  movss [rcx+000000C8],xmm0
"bf1.exe"+572CB67: 72 32                                      -  jb bf1.exe+572CB9B
"bf1.exe"+572CB69: 80 B9 4C 01 00 00 00                       -  cmp byte ptr [rcx+0000014C],00
"bf1.exe"+572CB70: 74 29                                      -  je bf1.exe+572CB9B
"bf1.exe"+572CB72: 8B 81 38 01 00 00                          -  mov eax,[rcx+00000138]
"bf1.exe"+572CB78: C7 81 C8 00 00 00 00 00 80 3F              -  mov [rcx+000000C8],3F800000
"bf1.exe"+572CB82: C6 81 C6 00 00 00 01                       -  mov byte ptr [rcx+000000C6],01
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>43</ID>
      <Description>"Accuracy"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : bf1.exe
  Version: 
  Date   : 2016-10-23
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(accuracy,bf1.exe,F3 0F 10 4C 24 4C 0F 2F) // should be unique
alloc(newmem,$1000,"bf1.exe"+5041FE3)

label(code)
label(return)

newmem:
xorps xmm0, xmm0
movaps xmm2, xmm0
mov [rsp+4C],0
code:
  movss xmm1,[rsp+4C]
  jmp return

accuracy:
  jmp newmem
  nop
return:
registersymbol(accuracy)

[DISABLE]

accuracy:
  db F3 0F 10 4C 24 4C

unregistersymbol(accuracy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bf1.exe"+5041FE3

"bf1.exe"+5041FBA: 10 4C 24 54              -  adc [rsp+54],cl
"bf1.exe"+5041FBE: F3 0F 59 CF              -  mulss xmm1,xmm7
"bf1.exe"+5041FC2: F3 0F 10 47 40           -  movss xmm0,[rdi+40]
"bf1.exe"+5041FC7: F3 0F 5C C1              -  subss xmm0,xmm1
"bf1.exe"+5041FCB: F3 0F 11 47 40           -  movss [rdi+40],xmm0
"bf1.exe"+5041FD0: F3 0F 10 47 40           -  movss xmm0,[rdi+40]
"bf1.exe"+5041FD5: F3 0F 10 54 24 48        -  movss xmm2,[rsp+48]
"bf1.exe"+5041FDB: 0F 2F D0                 -  comiss xmm2,xmm0
"bf1.exe"+5041FDE: 76 03                    -  jna bf1.exe+5041FE3
"bf1.exe"+5041FE0: 0F 28 C2                 -  movaps xmm0,xmm2
// ---------- INJECTING HERE ----------
"bf1.exe"+5041FE3: F3 0F 10 4C 24 4C        -  movss xmm1,[rsp+4C]
// ---------- DONE INJECTING  ----------
"bf1.exe"+5041FE9: 0F 2F C8                 -  comiss xmm1,xmm0
"bf1.exe"+5041FEC: 73 03                    -  jae bf1.exe+5041FF1
"bf1.exe"+5041FEE: 0F 28 C1                 -  movaps xmm0,xmm1
"bf1.exe"+5041FF1: F3 0F 11 47 40           -  movss [rdi+40],xmm0
"bf1.exe"+5041FF6: F3 0F 11 57 44           -  movss [rdi+44],xmm2
"bf1.exe"+5041FFB: F3 0F 11 4F 48           -  movss [rdi+48],xmm1
"bf1.exe"+5042000: F3 0F 5C CA              -  subss xmm1,xmm2
"bf1.exe"+5042004: 0F 2F 0D 79 33 5F FD     -  comiss xmm1,[bf1.exe+2635384]
"bf1.exe"+504200B: 76 0B                    -  jna bf1.exe+5042018
"bf1.exe"+504200D: F3 0F 5C C2              -  subss xmm0,xmm2
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>46</ID>
      <Description>"No Recoil"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : bf1.exe
  Version: 
  Date   : 2016-10-23
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(recoil,bf1.exe,F3 0F 58 56 6C F3) // should be unique
alloc(newmem,$1000,"bf1.exe"+504273E)

label(code)
label(return)

newmem:

code:
  mov [rsi+6C], 0
  mov [rsi+68], 0
  movss xmm2,[rsi+6C]
  jmp return

recoil:
  jmp newmem
return:
registersymbol(recoil)

[DISABLE]

recoil:
  db F3 0F 58 56 6C

unregistersymbol(recoil)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bf1.exe"+504273E

"bf1.exe"+5042711: F3 0F 11 46 68              -  movss [rsi+68],xmm0
"bf1.exe"+5042716: E8 55 1E F4 FE              -  call bf1.exe+3F84570
"bf1.exe"+504271B: F3 0F 10 1D 5D FB BB FD     -  movss xmm3,[bf1.exe+2C02280]
"bf1.exe"+5042723: 41 0F 28 C9                 -  movaps xmm1,xmm9
"bf1.exe"+5042727: 0F 28 D0                    -  movaps xmm2,xmm0
"bf1.exe"+504272A: F3 0F 10 46 68              -  movss xmm0,[rsi+68]
"bf1.exe"+504272F: 0F 57 CB                    -  xorps xmm1,xmm3
"bf1.exe"+5042732: 0F 2F C8                    -  comiss xmm1,xmm0
"bf1.exe"+5042735: F3 0F 59 D6                 -  mulss xmm2,xmm6
"bf1.exe"+5042739: F3 41 0F 59 D7              -  mulss xmm2,xmm15
// ---------- INJECTING HERE ----------
"bf1.exe"+504273E: F3 0F 58 56 6C              -  addss xmm2,[rsi+6C]
// ---------- DONE INJECTING  ----------
"bf1.exe"+5042743: F3 0F 11 56 6C              -  movss [rsi+6C],xmm2
"bf1.exe"+5042748: 77 03                       -  ja bf1.exe+504274D
"bf1.exe"+504274A: 0F 28 C8                    -  movaps xmm1,xmm0
"bf1.exe"+504274D: 44 0F 2F C9                 -  comiss xmm9,xmm1
"bf1.exe"+5042751: 73 04                       -  jae bf1.exe+5042757
"bf1.exe"+5042753: 41 0F 28 C9                 -  movaps xmm1,xmm9
"bf1.exe"+5042757: 41 0F 28 C0                 -  movaps xmm0,xmm8
"bf1.exe"+504275B: F3 0F 11 4E 68              -  movss [rsi+68],xmm1
"bf1.exe"+5042760: 0F 57 C3                    -  xorps xmm0,xmm3
"bf1.exe"+5042763: 0F 2F C2                    -  comiss xmm0,xmm2
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>49</ID>
      <Description>"Easy Kills"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : bf1.exe
  Version: 
  Date   : 2016-10-23
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(health,bf1.exe,F3 0F 11 73 20 48 8B 38) // should be unique
alloc(newmem,$1000,"bf1.exe"+50121AA)

label(code)
label(return)

newmem:
cmp [rbx+20], (float)1337
jge code
cmp [rbx+20], (float)5
jle code
  mov [rbx+20],(float)1
  jmp return
code:
  movss [rbx+20],xmm6
  jmp return

health:
  jmp newmem
return:
registersymbol(health)

[DISABLE]

health:
  db F3 0F 11 73 20

unregistersymbol(health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bf1.exe"+50121AA

"bf1.exe"+5012185: 57                                            -  push rdi
"bf1.exe"+5012186: 48 83 EC 40                                   -  sub rsp,40
"bf1.exe"+501218A: 48 8B 01                                      -  mov rax,[rcx]
"bf1.exe"+501218D: 0F 29 74 24 30                                -  movaps [rsp+30],xmm6
"bf1.exe"+5012192: 48 89 CB                                      -  mov rbx,rcx
"bf1.exe"+5012195: 0F 29 7C 24 20                                -  movaps [rsp+20],xmm7
"bf1.exe"+501219A: 0F 28 F1                                      -  movaps xmm6,xmm1
"bf1.exe"+501219D: FF 90 F0 00 00 00                             -  call qword ptr [rax+000000F0]
"bf1.exe"+50121A3: 48 8B 43 08                                   -  mov rax,[rbx+08]
"bf1.exe"+50121A7: 48 89 D9                                      -  mov rcx,rbx
// ---------- INJECTING HERE ----------
"bf1.exe"+50121AA: F3 0F 11 73 20                                -  movss [rbx+20],xmm6
// ---------- DONE INJECTING  ----------
"bf1.exe"+50121AF: 48 8B 38                                      -  mov rdi,[rax]
"bf1.exe"+50121B2: 48 8B 03                                      -  mov rax,[rbx]
"bf1.exe"+50121B5: 0F 28 F8                                      -  movaps xmm7,xmm0
"bf1.exe"+50121B8: FF 90 F0 00 00 00                             -  call qword ptr [rax+000000F0]
"bf1.exe"+50121BE: 0F 57 F6                                      -  xorps xmm6,xmm6
"bf1.exe"+50121C1: 0F 2F C6                                      -  comiss xmm0,xmm6
"bf1.exe"+50121C4: 77 05                                         -  ja bf1.exe+50121CB
"bf1.exe"+50121C6: 45 31 C0                                      -  xor r8d,r8d
"bf1.exe"+50121C9: EB 19                                         -  jmp bf1.exe+50121E4
"bf1.exe"+50121CB: 0F 2F FE                                      -  comiss xmm7,xmm6
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of jne bf1.exe+573845D</Description>
      <Address>145738423</Address>
      <ModuleName>bf1.exe</ModuleName>
      <ModuleNameOffset>5738423</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>83</Byte>
        <Byte>3C</Byte>
        <Byte>88</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>38</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8F</Byte>
        <Byte>F8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je bf1.exe+573843B</Description>
      <Address>14573842F</Address>
      <ModuleName>bf1.exe</ModuleName>
      <ModuleNameOffset>573842F</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>83</Byte>
        <Byte>3C</Byte>
        <Byte>88</Byte>
        <Byte>03</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>0A</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>87</Byte>
        <Byte>B0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jmp bf1.exe+5738443</Description>
      <Address>145738439</Address>
      <ModuleName>bf1.exe</ModuleName>
      <ModuleNameOffset>5738439</ModuleNameOffset>
      <Before>
        <Byte>87</Byte>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>EB</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>87</Byte>
        <Byte>B4</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>noreloadsymb</Name>
      <Address>145727218</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nooverheatsymb</Name>
      <Address>14572CB40</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammosymb</Name>
      <Address>145737FB4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>recoil</Name>
      <Address> 14504273E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthsymb</Name>
      <Address>14502C750</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address> 1450121AA</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
