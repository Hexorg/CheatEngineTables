<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>157</ID>
      <Description>"Survival Bars"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>155</ID>
          <Description>"Health"</Description>
          <LastState Activated="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-22
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,D9 40 14 D9 5D FC D9 45 FC 8B) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_HealthBase2,4)

newmem:

code:
  mov [_HealthBase2],eax
  mov [eax+14],(float)100
  fld dword ptr [eax+14]
  fstp dword ptr [ebp-04]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 40 14 D9 5D FC

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 656C5B33

""+656C5B18: 6A 27                 -  push 27
""+656C5B1A: EB F2                 -  jmp 656C5B0E
""+656C5B1C: 68 80 BD 47 12        -  push 1247BD80
""+656C5B21: E9 02 A6 31 A0        -  jmp 059E0128
""+656C5B26: 00 00                 -  add [eax],al
""+656C5B28: 55                    -  push ebp
""+656C5B29: 8B EC                 -  mov ebp,esp
""+656C5B2B: 83 EC 08              -  sub esp,08
""+656C5B2E: 8B 45 0C              -  mov eax,[ebp+0C]
""+656C5B31: 39 00                 -  cmp [eax],eax
// ---------- INJECTING HERE ----------
""+656C5B33: D9 40 14              -  fld dword ptr [eax+14]
""+656C5B36: D9 5D FC              -  fstp dword ptr [ebp-04]
// ---------- DONE INJECTING  ----------
""+656C5B39: D9 45 FC              -  fld dword ptr [ebp-04]
""+656C5B3C: 8B 45 08              -  mov eax,[ebp+08]
""+656C5B3F: 8B 48 14              -  mov ecx,[eax+14]
""+656C5B42: 8B D1                 -  mov edx,ecx
""+656C5B44: 39 12                 -  cmp [edx],edx
""+656C5B46: D9 41 14              -  fld dword ptr [ecx+14]
""+656C5B49: D9 5D FC              -  fstp dword ptr [ebp-04]
""+656C5B4C: D9 45 FC              -  fld dword ptr [ebp-04]
""+656C5B4F: DE F9                 -  fdivp st(1),st(0)
""+656C5B51: D9 58 20              -  fstp dword ptr [eax+20]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>142</ID>
          <Description>"Hunger"</Description>
          <LastState Activated="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-22
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,D9 40 14 D9 45 10 DE C1 DD 5D F8 83 EC 0C FF 75 08 E8 41) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_HungerBase,4)

newmem:

code:
  mov [_HungerBase],eax
  mov [eax+14],(float)100
  fld dword ptr [eax+14]
  fld dword ptr [ebp+10]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 40 14 D9 45 10

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 656D3229

""+656D320B: EB 9E           -  jmp 656D31AB
""+656D320D: 68 27 02 00 00  -  push 00000227
""+656D3212: EB 97           -  jmp 656D31AB
""+656D3214: 68 88 05 30 16  -  push 16300588
""+656D3219: E9 0A CE 30 A0  -  jmp 059E0028
""+656D321E: 00 00           -  add [eax],al
""+656D3220: 55              -  push ebp
""+656D3221: 8B EC           -  mov ebp,esp
""+656D3223: 83 EC 08        -  sub esp,08
""+656D3226: 8B 45 0C        -  mov eax,[ebp+0C]
// ---------- INJECTING HERE ----------
""+656D3229: D9 40 14        -  fld dword ptr [eax+14]
""+656D322C: D9 45 10        -  fld dword ptr [ebp+10]
// ---------- DONE INJECTING  ----------
""+656D322F: DE C1           -  faddp 
""+656D3231: DD 5D F8        -  fstp qword ptr [ebp-08]
""+656D3234: 83 EC 0C        -  sub esp,0C
""+656D3237: FF 75 08        -  push [ebp+08]
""+656D323A: E8 41 00 00 00  -  call 656D3280
""+656D323F: 83 C4 10        -  add esp,10
""+656D3242: DD 45 F8        -  fld qword ptr [ebp-08]
""+656D3245: D9 40 14        -  fld dword ptr [eax+14]
""+656D3248: DF F1           -  fcomip st(0),st(1)
""+656D324A: DD D8           -  fstp st(0)
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>144</ID>
          <Description>"Cold"</Description>
          <LastState Activated="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-22
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,D9 40 14 D9 45 10 DE C1 DD 5D E8 83 EC 0C FF 75 08 E8 3F) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_ColdBase,4)

newmem:

code:
  mov [_ColdBase],eax
  mov [eax+14],(float)100
  fld dword ptr [eax+14]
  fld dword ptr [ebp+10]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 40 14 D9 45 10

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 656D2D53

""+656D2D39: DE F9              -  fdivp st(1),st(0)
""+656D2D3B: DE E9              -  fsubp st(1),st(0)
""+656D2D3D: DE C9              -  fmulp st(1),st(0)
""+656D2D3F: DD 5D F8           -  fstp qword ptr [ebp-08]
""+656D2D42: EB 06              -  jmp 656D2D4A
""+656D2D44: D9 45 10           -  fld dword ptr [ebp+10]
""+656D2D47: DD 5D F8           -  fstp qword ptr [ebp-08]
""+656D2D4A: DD 45 F8           -  fld qword ptr [ebp-08]
""+656D2D4D: D9 5D 10           -  fstp dword ptr [ebp+10]
""+656D2D50: 8B 45 0C           -  mov eax,[ebp+0C]
// ---------- INJECTING HERE ----------
""+656D2D53: D9 40 14           -  fld dword ptr [eax+14]
""+656D2D56: D9 45 10           -  fld dword ptr [ebp+10]
// ---------- DONE INJECTING  ----------
""+656D2D59: DE C1              -  faddp 
""+656D2D5B: DD 5D E8           -  fstp qword ptr [ebp-18]
""+656D2D5E: 83 EC 0C           -  sub esp,0C
""+656D2D61: FF 75 08           -  push [ebp+08]
""+656D2D64: E8 3F 00 00 00     -  call 656D2DA8
""+656D2D69: 83 C4 10           -  add esp,10
""+656D2D6C: DD 45 E8           -  fld qword ptr [ebp-18]
""+656D2D6F: D9 40 14           -  fld dword ptr [eax+14]
""+656D2D72: DF F1              -  fcomip st(0),st(1)
""+656D2D74: DD D8              -  fstp st(0)
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>151</ID>
          <Description>"Sprint"</Description>
          <LastState Activated="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-22
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,D9 40 14 D9 45 10 DE C1 DD 5D E8) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_SprintBase,4)

newmem:

code:
  mov [_SprintBase],eax
  mov [eax+14],(float)100
  fld dword ptr [eax+14]
  fld dword ptr [ebp+10]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 40 14 D9 45 10

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 656D32EF

""+656D32D1: DE C9              -  fmulp st(1),st(0)
""+656D32D3: D9 05 28 19 15 16  -  fld dword ptr [16151928]
""+656D32D9: DE F9              -  fdivp st(1),st(0)
""+656D32DB: DD 5D F8           -  fstp qword ptr [ebp-08]
""+656D32DE: EB 06              -  jmp 656D32E6
""+656D32E0: D9 45 10           -  fld dword ptr [ebp+10]
""+656D32E3: DD 5D F8           -  fstp qword ptr [ebp-08]
""+656D32E6: DD 45 F8           -  fld qword ptr [ebp-08]
""+656D32E9: D9 5D 10           -  fstp dword ptr [ebp+10]
""+656D32EC: 8B 45 0C           -  mov eax,[ebp+0C]
// ---------- INJECTING HERE ----------
""+656D32EF: D9 40 14           -  fld dword ptr [eax+14]
""+656D32F2: D9 45 10           -  fld dword ptr [ebp+10]
// ---------- DONE INJECTING  ----------
""+656D32F5: DE C1              -  faddp 
""+656D32F7: DD 5D E8           -  fstp qword ptr [ebp-18]
""+656D32FA: 83 EC 0C           -  sub esp,0C
""+656D32FD: FF 75 08           -  push [ebp+08]
""+656D3300: E8 43 00 00 00     -  call 656D3348
""+656D3305: 83 C4 10           -  add esp,10
""+656D3308: DD 45 E8           -  fld qword ptr [ebp-18]
""+656D330B: D9 40 14           -  fld dword ptr [eax+14]
""+656D330E: DF F1              -  fcomip st(0),st(1)
""+656D3310: DD D8              -  fstp st(0)
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>53</ID>
      <Description>"Infinite Durability"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>00FF00</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-20
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,D9 5F 18 8B 47 08 85) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_DuraBase,4)

newmem:

code:
  mov [_DuraBase],edi
  fstp dword ptr [edi+18]
  mov [edi+18],(float)5000
  mov eax,[edi+08]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 5F 18 8B 47 08

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0523C39D

""+523C387: 83 C4 10        -  add esp,10
""+523C38A: D9 40 14        -  fld dword ptr [eax+14]
""+523C38D: C9              -  leave 
""+523C38E: C3              -  ret 
""+523C38F: 00 55 8B        -  add [ebp-75],dl
""+523C392: EC              -  in al,dx
""+523C393: 57              -  push edi
""+523C394: 83 EC 04        -  sub esp,04
""+523C397: 8B 7D 08        -  mov edi,[ebp+08]
""+523C39A: D9 45 0C        -  fld dword ptr [ebp+0C]
// ---------- INJECTING HERE ----------
""+523C39D: D9 5F 18        -  fstp dword ptr [edi+18]
""+523C3A0: 8B 47 08        -  mov eax,[edi+08]
// ---------- DONE INJECTING  ----------
""+523C3A3: 85 C0           -  test eax,eax
""+523C3A5: 74 11           -  je 0523C3B8
""+523C3A7: 8B 47 08        -  mov eax,[edi+08]
""+523C3AA: 83 EC 08        -  sub esp,08
""+523C3AD: 57              -  push edi
""+523C3AE: 50              -  push eax
""+523C3AF: 90              -  nop 
""+523C3B0: 90              -  nop 
""+523C3B1: 90              -  nop 
""+523C3B2: FF 50 0C        -  call dword ptr [eax+0C]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>77</ID>
      <Description>"Infinite Craftables"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>00FF00</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-21
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(Base,89 48 14 8B 43 14 83) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_Base,4)

newmem:

code:
  mov [_Base],eax
  mov [eax+14],ecx
  mov [eax+14],(Int)200
  mov eax,[ebx+14]
  jmp return

Base:
  jmp newmem
  nop
return:
registersymbol(Base)

[DISABLE]

Base:
  db 89 48 14 8B 43 14

unregistersymbol(Base)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 6860B03E

""+6860B020: 0F 8C 8D 00 00 00     -  jl 6860B0B3
""+6860B026: 8B 43 14              -  mov eax,[ebx+14]
""+6860B029: 83 EC 08              -  sub esp,08
""+6860B02C: 57                    -  push edi
""+6860B02D: 50                    -  push eax
""+6860B02E: 39 00                 -  cmp [eax],eax
""+6860B030: E8 EB A3 0F 9D        -  call 05705420
""+6860B035: 83 C4 10              -  add esp,10
""+6860B038: 8B 48 14              -  mov ecx,[eax+14]
""+6860B03B: 2B 4D 10              -  sub ecx,[ebp+10]
// ---------- INJECTING HERE ----------
""+6860B03E: 89 48 14              -  mov [eax+14],ecx
""+6860B041: 8B 43 14              -  mov eax,[ebx+14]
// ---------- DONE INJECTING  ----------
""+6860B044: 83 EC 08              -  sub esp,08
""+6860B047: 57                    -  push edi
""+6860B048: 50                    -  push eax
""+6860B049: 39 00                 -  cmp [eax],eax
""+6860B04B: E8 D0 A3 0F 9D        -  call 05705420
""+6860B050: 83 C4 10              -  add esp,10
""+6860B053: 8B 40 14              -  mov eax,[eax+14]
""+6860B056: 85 C0                 -  test eax,eax
""+6860B058: 7F 30                 -  jg 6860B08A
""+6860B05A: 8B 43 14              -  mov eax,[ebx+14]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>126</ID>
      <Description>"OnMove Item Stack Set to 200"</Description>
      <LastState Activated="1"/>
      <Color>00FF00</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-22
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,8B 56 14 03 CA) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+14],(Int)199
  mov edx,[esi+14]
  add ecx,edx
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 56 14 03 CA

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 6634E7B8

""+6634E79E: 83 C4 10              -  add esp,10
""+6634E7A1: EB 1D                 -  jmp 6634E7C0
""+6634E7A3: 8B 43 14              -  mov eax,[ebx+14]
""+6634E7A6: 83 EC 08              -  sub esp,08
""+6634E7A9: 57                    -  push edi
""+6634E7AA: 50                    -  push eax
""+6634E7AB: 39 00                 -  cmp [eax],eax
""+6634E7AD: E8 6E 6C 87 9F        -  call 05BC5420
""+6634E7B2: 83 C4 10              -  add esp,10
""+6634E7B5: 8B 48 14              -  mov ecx,[eax+14]
// ---------- INJECTING HERE ----------
""+6634E7B8: 8B 56 14              -  mov edx,[esi+14]
""+6634E7BB: 03 CA                 -  add ecx,edx
// ---------- DONE INJECTING  ----------
""+6634E7BD: 89 48 14              -  mov [eax+14],ecx
""+6634E7C0: 8B 43 0C              -  mov eax,[ebx+0C]
""+6634E7C3: 85 C0                 -  test eax,eax
""+6634E7C5: 74 11                 -  je 6634E7D8
""+6634E7C7: 8B 43 0C              -  mov eax,[ebx+0C]
""+6634E7CA: 83 EC 08              -  sub esp,08
""+6634E7CD: 57                    -  push edi
""+6634E7CE: 50                    -  push eax
""+6634E7CF: 90                    -  nop 
""+6634E7D0: 90                    -  nop 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>129</ID>
      <Description>"Dark Matter Door Counter Base"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>00FF00</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-22
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,56 00 00 00 8B 47 14 48 89 47 14 8B 47 14) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_DoorCounterBase,4)

newmem:

code:
  mov [_DoorCounterBase],edi
  mov [edi+14],eax
  mov eax,[edi+14]
  jmp return

INJECT+08:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT+08:
  db 89 47 14 8B 47 14

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 026C1C6C

""+26C1C45: E8 FE 07 78 03        -  call 05E42448
""+26C1C4A: 83 C4 10              -  add esp,10
""+26C1C4D: 89 47 0C              -  mov [edi+0C],eax
""+26C1C50: 0F B6 47 18           -  movzx eax,byte ptr [edi+18]
""+26C1C54: 85 C0                 -  test eax,eax
""+26C1C56: 0F 85 62 00 00 00     -  jne 026C1CBE
""+26C1C5C: C7 47 1C 01 00 00 00  -  mov [edi+1C],00000001
""+26C1C63: E9 56 00 00 00        -  jmp 026C1CBE
""+26C1C68: 8B 47 14              -  mov eax,[edi+14]
""+26C1C6B: 48                    -  dec eax
// ---------- INJECTING HERE ----------
""+26C1C6C: 89 47 14              -  mov [edi+14],eax
""+26C1C6F: 8B 47 14              -  mov eax,[edi+14]
// ---------- DONE INJECTING  ----------
""+26C1C72: 85 C0                 -  test eax,eax
""+26C1C74: 0F 8D 35 FF FF FF     -  jnl 026C1BAF
""+26C1C7A: 8B 47 08              -  mov eax,[edi+08]
""+26C1C7D: 8B 40 38              -  mov eax,[eax+38]
""+26C1C80: 83 EC 0C              -  sub esp,0C
""+26C1C83: 50                    -  push eax
""+26C1C84: 39 00                 -  cmp [eax],eax
""+26C1C86: E8 6D 2D 7E 03        -  call 05EA49F8
""+26C1C8B: 83 C4 10              -  add esp,10
""+26C1C8E: 8B 47 08              -  mov eax,[edi+08]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>134</ID>
          <Description>"Front Door Counter"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>[_DoorCounterBase]+134</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>130</ID>
          <Description>"Counter Display 1"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>[_DoorCounterBase]+114</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"Counter Display 2"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>[_DoorCounterBase]+254</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>135</ID>
          <Description>"Counter Display 3"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>[_DoorCounterBase]+14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>136</ID>
          <Description>"Counter Display 4"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>[_DoorCounterBase]+34</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>137</ID>
          <Description>"Counter Display 5"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>[_DoorCounterBase]+94</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"Counter Display 6"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>[_DoorCounterBase]+b4</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>107</ID>
      <Description>"Find Skill Base"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>00FF00</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-21
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,D9 58 18 83 EC 0C 50 E8 18) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_SkillBase,4)

newmem:

code:
  mov [_SkillBase],eax
  fstp dword ptr [eax+18]
  sub esp,0C
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 58 18 83 EC 0C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 64CA9704

""+64CA96EF: C9                 -  leave 
""+64CA96F0: C3                 -  ret 
""+64CA96F1: 00 00              -  add [eax],al
""+64CA96F3: 00 00              -  add [eax],al
""+64CA96F5: 00 00              -  add [eax],al
""+64CA96F7: 00 55 8B           -  add [ebp-75],dl
""+64CA96FA: EC                 -  in al,dx
""+64CA96FB: 83 EC 08           -  sub esp,08
""+64CA96FE: D9 45 0C           -  fld dword ptr [ebp+0C]
""+64CA9701: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
""+64CA9704: D9 58 18           -  fstp dword ptr [eax+18]
""+64CA9707: 83 EC 0C           -  sub esp,0C
// ---------- DONE INJECTING  ----------
""+64CA970A: 50                 -  push eax
""+64CA970B: E8 18 00 00 00     -  call 64CA9728
""+64CA9710: 83 C4 10           -  add esp,10
""+64CA9713: C9                 -  leave 
""+64CA9714: C3                 -  ret 
""+64CA9715: 00 00              -  add [eax],al
""+64CA9717: 00 68 70           -  add [eax+70],ch
""+64CA971A: 86 B9 16 E9 06 69  -  xchg [ecx+6906E916],bh
""+64CA9720: 17                 -  pop ss
""+64CA9721: A0 00 00 00 00     -  mov al,[00000000]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>111</ID>
          <Description Activated="1">"Hunting"</Description>
          <VariableType>Float</VariableType>
          <Address>[_SkillBase]+38</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description Activated="1">"Mobility"</Description>
          <VariableType>Float</VariableType>
          <Address>[_SkillBase]+18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>108</ID>
          <Description Activated="1">"Offense"</Description>
          <VariableType>Float</VariableType>
          <Address>[_SkillBase]-8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>109</ID>
          <Description Activated="1">"Defense"</Description>
          <VariableType>Float</VariableType>
          <Address>[_SkillBase]-28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description Activated="1">"Gathering"</Description>
          <VariableType>Float</VariableType>
          <Address>[_SkillBase]-48</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"MouseOverRefillBars (Old - Crash on Deactivate)"</Description>
      <LastState/>
      <Color>AAAA00</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-20
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,10 8B C8 39 09 D9 40 14 D9 5D F8) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+14],(float)100
  fld dword ptr [eax+14]
  fstp dword ptr [ebp-08]
  jmp return

INJECT+05:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT+05:
  db D9 40 14 D9 5D F8

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 006DFF12

""+6DFEF9: 8B EC              -  mov ebp,esp
""+6DFEFB: 83 EC 18           -  sub esp,18
""+6DFEFE: D9 EE              -  fldz 
""+6DFF00: D9 5D F4           -  fstp dword ptr [ebp-0C]
""+6DFF03: D9 EE              -  fldz 
""+6DFF05: D9 5D F0           -  fstp dword ptr [ebp-10]
""+6DFF08: 8B 45 08           -  mov eax,[ebp+08]
""+6DFF0B: 8B 40 10           -  mov eax,[eax+10]
""+6DFF0E: 8B C8              -  mov ecx,eax
""+6DFF10: 39 09              -  cmp [ecx],ecx
// ---------- INJECTING HERE ----------
""+6DFF12: D9 40 14           -  fld dword ptr [eax+14]
""+6DFF15: D9 5D F8           -  fstp dword ptr [ebp-08]
// ---------- DONE INJECTING  ----------
""+6DFF18: D9 45 F8           -  fld dword ptr [ebp-08]
""+6DFF1B: 83 EC 0C           -  sub esp,0C
""+6DFF1E: 83 EC 04           -  sub esp,04
""+6DFF21: D9 1C 24           -  fstp dword ptr [esp]
""+6DFF24: E8 BF 14 FE FF     -  call 006C13E8
""+6DFF29: 83 C4 10           -  add esp,10
""+6DFF2C: D9 5D F4           -  fstp dword ptr [ebp-0C]
""+6DFF2F: 8D 45 F4           -  lea eax,[ebp-0C]
""+6DFF32: 83 EC 0C           -  sub esp,0C
""+6DFF35: 50                 -  push eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>139</ID>
      <Description>"Values"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>97</ID>
          <Description>"Last Thrown Item"</Description>
          <Color>C0C0C0</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[_BaseThrown]+14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>75</ID>
          <Description>"Last Used Item"</Description>
          <Color>C0C0C0</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[_Base]+14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"Last Stressed Item's Durability"</Description>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>[_Durabase]+18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>156</ID>
          <Description>"Health"</Description>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>[_ColdBase]-bf0c</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>143</ID>
          <Description>"Hunger"</Description>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>[_HungerBase]+14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>145</ID>
          <Description>"Cold"</Description>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>[_ColdBase]+14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>152</ID>
          <Description>"Sprint"</Description>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>[_SprintBase]+14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>153</ID>
          <Description>"Most Recent Bar"</Description>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>[_HealthBase2]+14</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>49</ID>
      <Description>"Infinite Thrown Items"</Description>
      <LastState/>
      <Color>00FFFF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-20
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 48 14 8B 43 0C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_BaseThrown,4)

newmem:

code:
  mov [_BaseThrown],eax
  mov [eax+14],ecx
  mov eax,[ebx+0C]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 48 14 8B 43 0C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1BA92CD7

""+1BA92CBC: 89 45 F4           -  mov [ebp-0C],eax
""+1BA92CBF: 8B 43 14           -  mov eax,[ebx+14]
""+1BA92CC2: 83 EC 08           -  sub esp,08
""+1BA92CC5: 56                 -  push esi
""+1BA92CC6: 50                 -  push eax
""+1BA92CC7: 39 00              -  cmp [eax],eax
""+1BA92CC9: E8 52 27 6C E9     -  call 05155420
""+1BA92CCE: 83 C4 10           -  add esp,10
""+1BA92CD1: 8B 48 14           -  mov ecx,[eax+14]
""+1BA92CD4: 2B 4D 10           -  sub ecx,[ebp+10]
// ---------- INJECTING HERE ----------
""+1BA92CD7: 89 48 14           -  mov [eax+14],ecx
""+1BA92CDA: 8B 43 0C           -  mov eax,[ebx+0C]
// ---------- DONE INJECTING  ----------
""+1BA92CDD: 85 C0              -  test eax,eax
""+1BA92CDF: 74 11              -  je 1BA92CF2
""+1BA92CE1: 8B 43 0C           -  mov eax,[ebx+0C]
""+1BA92CE4: 83 EC 08           -  sub esp,08
""+1BA92CE7: 56                 -  push esi
""+1BA92CE8: 50                 -  push eax
""+1BA92CE9: 90                 -  nop 
""+1BA92CEA: 90                 -  nop 
""+1BA92CEB: 90                 -  nop 
""+1BA92CEC: FF 50 0C           -  call dword ptr [eax+0C]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>116</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>120</ID>
      <Description>"FireBase"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : wildeight.exe
  Version: 
  Date   : 2017-02-21
  Author : Steve

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,D9 18 B8 78 9C 2F 01 8B) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(_FireBase,4)

newmem:

code:
  mov [_FireBase],eax
  fstp dword ptr [eax]
  mov [eax],(float)100
  mov eax,012F9C78
  jmp return

INJECT:
  jmp newmem
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 18 B8 78 9C 2F 01

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 054D5C18

""+54D5BF0: DD 9D 48 FE FF FF              -  fstp qword ptr [ebp-000001B8]
""+54D5BF6: 8D 85 AC FE FF FF              -  lea eax,[ebp-00000154]
""+54D5BFC: 83 EC 0C                       -  sub esp,0C
""+54D5BFF: 50                             -  push eax
""+54D5C00: E8 23 C0 FB FF                 -  call 05491C28
""+54D5C05: 83 C4 10                       -  add esp,10
""+54D5C08: 8B 85 54 FE FF FF              -  mov eax,[ebp-000001AC]
""+54D5C0E: DD 85 48 FE FF FF              -  fld qword ptr [ebp-000001B8]
""+54D5C14: D9 C9                          -  fxch st(1)
""+54D5C16: DE C1                          -  faddp 
// ---------- INJECTING HERE ----------
""+54D5C18: D9 18                          -  fstp dword ptr [eax]
""+54D5C1A: B8 78 9C 2F 01                 -  mov eax,012F9C78
// ---------- DONE INJECTING  ----------
""+54D5C1F: 8B 8D 68 FE FF FF              -  mov ecx,[ebp-00000198]
""+54D5C25: 39 48 0C                       -  cmp [eax+0C],ecx
""+54D5C28: 0F 86 65 05 00 00              -  jbe 054D6193
""+54D5C2E: 8D 44 C8 10                    -  lea eax,[eax+ecx*8+10]
""+54D5C32: 89 85 5C FE FF FF              -  mov [ebp-000001A4],eax
""+54D5C38: D9 40 04                       -  fld dword ptr [eax+04]
""+54D5C3B: DD 9D 40 FE FF FF              -  fstp qword ptr [ebp-000001C0]
""+54D5C41: 8D 85 AC FE FF FF              -  lea eax,[ebp-00000154]
""+54D5C47: 83 EC 0C                       -  sub esp,0C
""+54D5C4A: 50                             -  push eax
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>121</ID>
          <Description>"Last Lit Fire"</Description>
          <VariableType>Float</VariableType>
          <Address>[_FireBase]</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_ValuesBase</Name>
      <Address>00B20000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_Base</Name>
      <Address>02570050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_DuraBase</Name>
      <Address>02570040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_CraftItems</Name>
      <Address>00DA0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_BaseThrown</Name>
      <Address>01130030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CraftItems</Name>
      <Address>68623A62</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_SkillBase</Name>
      <Address>02570060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_FireBase</Name>
      <Address>00880030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_DoorCounterBase</Name>
      <Address>01130040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_HungerBase</Name>
      <Address>02570010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ColdBase</Name>
      <Address>02570020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_HealthBase</Name>
      <Address>00FC0040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_SprintBase</Name>
      <Address>02570030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_HealthBase2</Name>
      <Address>02570000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Base</Name>
      <Address> 6625442E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address> 6620995C</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
