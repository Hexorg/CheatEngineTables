<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <Forms>
    <CETrainerrainer>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Infinite Ammo in Pouch"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [esi+04],(int)999

originalcode:
//mov [esi+04],edx
mov edx,[esi+08]

exit:
jmp returnhere

"SaintsRowTheThird_DX11.exe"+751712:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"SaintsRowTheThird_DX11.exe"+751712:
mov [esi+04],edx
mov edx,[esi+08]
//Alt: db 89 56 04 8B 56 08
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Infinite Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [esi+00001CC8],(float)9999

originalcode:
//movss [esi+00001CC8],xmm0

exit:
jmp returnhere

"SaintsRowTheThird_DX11.exe"+537179:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"SaintsRowTheThird_DX11.exe"+537179:
movss [esi+00001CC8],xmm0
//Alt: db F3 0F 11 86 C8 1C 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Infinite Money"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [ecx],(int)99999900

originalcode:
//mov [ecx],eax
ret 0004

exit:
jmp returnhere

"SaintsRowTheThird_DX11.exe"+549F94:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"SaintsRowTheThird_DX11.exe"+549F94:
mov [ecx],eax
ret 0004
//Alt: db 89 01 C2 04 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Fast Rank up"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
nop
nop
push esi
mov esi,[edi+00001EE8]

originalcode:
//jnge AK::MemoryMgr::SetMonitoring+3B304A
//push esi
//mov esi,[edi+00001EE8]

exit:
jmp returnhere

"SaintsRowTheThird_DX11.exe"+5C4903:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"SaintsRowTheThird_DX11.exe"+5C4903:
jnge AK::MemoryMgr::SetMonitoring+3B304A
push esi
mov esi,[edi+00001EE8]
//Alt: db 7C 45 56 8B B7 E8 1E 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of jnge AK::MemoryMgr::SetMonitoring+3B304A</Description>
      <Address>009C4903</Address>
      <ModuleName>SaintsRowTheThird_DX11.exe</ModuleName>
      <ModuleNameOffset>5C4903</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>7E</Byte>
        <Byte>49</Byte>
        <Byte>3B</Byte>
        <Byte>DD</Byte>
      </Before>
      <Actual>
        <Byte>7C</Byte>
        <Byte>45</Byte>
      </Actual>
      <After>
        <Byte>56</Byte>
        <Byte>8B</Byte>
        <Byte>B7</Byte>
        <Byte>E8</Byte>
        <Byte>1E</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <LuaScript>--TRAINERGENERATORSTART--
--This is autogenerated code. Changing code in this block will
--get erased and rewritten if you regenerate the trainer code

--Uncomment the following line if this is a Cheat Table format trainer and you don't want CE to show (Tip, save as .CETRAINER alternatively)
--hideAllCEWindows()
addresslist=getAddressList()
memrec0=addresslist_getMemoryRecordByID(addresslist,0)
memrec1=addresslist_getMemoryRecordByID(addresslist,1)
memrec2=addresslist_getMemoryRecordByID(addresslist,2)
memrec3=addresslist_getMemoryRecordByID(addresslist,3)
memrec4=addresslist_getMemoryRecordByID(addresslist,4)

memrec2_hotkey0=memoryrecord_getHotkeyByID(memrec2,0)
memrec1_hotkey0=memoryrecord_getHotkeyByID(memrec1,0)
memrec0_hotkey0=memoryrecord_getHotkeyByID(memrec0,0)
memrec4_hotkey0=memoryrecord_getHotkeyByID(memrec4,0)
memrec3_hotkey0=memoryrecord_getHotkeyByID(memrec3,0)

function onPostHotkey0(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT0, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec2_hotkey0,onPostHotkey0)

function onPostHotkey1(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT1, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec1_hotkey0,onPostHotkey1)

function onPostHotkey2(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT2, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec0_hotkey0,onPostHotkey2)

function onPostHotkey3(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT3, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec4_hotkey0,onPostHotkey3)

function onPostHotkey4(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT4, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec3_hotkey0,onPostHotkey4)

control_setVisible(CETrainer_SEPERATOR, false)

strings_add(getAutoAttachList(), "saintsrowthethird_dx11.exe")
gBeepOnAction=false
form_show(CETrainer)
function AboutClick()
  showMessage(gAboutText)
end
gAboutText=[[This trainer was made by 
Jeffthecreeper911
]]

function CloseClick()
  closeCE()
  return caFree --onClick doesn't care, but onClose would like a result
end

--TRAINERGENERATORSTOP--
</LuaScript>
</CheatTable>
