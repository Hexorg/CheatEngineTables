<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>177</ID>
      <Description>"Activate all 'safe' stuff"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>170</ID>
          <Description>"Dwellers"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>153</ID>
              <Description>"Dwellers always run"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobDAlwaysRun,02 7B ?? ?? ?? ?? 18 40 ?? ?? ?? ?? 02 02 7B ?? ?? ?? ?? 7B ?? ?? ?? ?? 7D ?? ?? ?? ?? 38 ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 19 40 ?? ?? ?? ?? 02 02 7B ?? ?? ?? ?? 7B ?? ?? ?? ?? 7D ?? ?? ?? ?? 2A)

alloc(newmem,4096)

label(aobDAlwaysRun_r)
label(aobDAlwaysRun_i)
registersymbol(aobDAlwaysRun_r)
registersymbol(aobDAlwaysRun_i)

newmem:
aobDAlwaysRun_i:
readmem(aobDAlwaysRun,32)

aobDAlwaysRun:
aobDAlwaysRun_r:
db 02

aobDAlwaysRun+14:
readmem(aobDAlwaysRun+36,4)

[DISABLE]
aobDAlwaysRun_r:
readmem(aobDAlwaysRun_i,32)

unregistersymbol(aobDAlwaysRun_r)
unregistersymbol(aobDAlwaysRun_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>150</ID>
              <Description>"Max happiness"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobMaxHappiness,03 02 7B ?? ?? ?? ?? 6F ?? ?? ?? ?? 6B 02 7B ?? ?? ?? ?? 6F ?? ?? ?? ?? 6B 28 ?? ?? ?? ?? 2A)

alloc(newmem,4096)

label(aobMaxHappiness_r)
label(aobMaxHappiness_i)
registersymbol(aobMaxHappiness_r)
registersymbol(aobMaxHappiness_i)

newmem:
aobMaxHappiness_i:
readmem(aobMaxHappiness+8,4)

aobMaxHappiness+8:
aobMaxHappiness_r:
readmem(aobMaxHappiness+14,4)

[DISABLE]
aobMaxHappiness_r:
readmem(aobMaxHappiness_i,4)

unregistersymbol(aobMaxHappiness_r)
unregistersymbol(aobMaxHappiness_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>148</ID>
              <Description>"Follower Experience boost %"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobXPBoost,02 22 00 00 80 3F 03 22 0A D7 23 3C 5A 58 7D ?? ?? ?? ?? 2A)

label(aobXPBoost_r)
registersymbol(aobXPBoost_r)

label(fFollowerXPBoost)
registersymbol(fFollowerXPBoost)

aobXPBoost+2:
aobXPBoost_r:
fFollowerXPBoost:
dd (float)10.0

[DISABLE]
aobXPBoost_r:
dd (float)1.0

unregistersymbol(aobXPBoost_r)
unregistersymbol(fFollowerXPBoost)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>149</ID>
                  <Description>"fFollowerXPBoost (base for % multiplier)"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fFollowerXPBoost</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>147</ID>
              <Description>"Dweller Experience boost %"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobDwXPBoost,02 25 28 ?? ?? ?? ?? 03 02 28 ?? ?? ?? ?? 5A 58 28 ?? ?? ?? ?? 2A)

alloc(newmem,4096)

label(aobDwXPBoost_r)
label(aobDwXPBoost_i)
registersymbol(aobDwXPBoost_r)
registersymbol(aobDwXPBoost_i)

label(fDwellerXPBoost)
registersymbol(fDwellerXPBoost)

newmem:
aobDwXPBoost_i:
readmem(aobDwXPBoost,16)

aobDwXPBoost:
aobDwXPBoost_r:

aobDwXPBoost+8:
db 00 22
fDwellerXPBoost:
dd (float)10.0

[DISABLE]
aobDwXPBoost_r:
readmem(aobDwXPBoost_i,16)

unregistersymbol(aobDwXPBoost_r)
unregistersymbol(aobDwXPBoost_i)

unregistersymbol(fDwellerXPBoost)

dealloc(newmem)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>155</ID>
                  <Description>"fDwellerXPBoost (base for % multiplier)"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDwellerXPBoost</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>173</ID>
              <Description>"Short training"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobShortTraining,28 ?? ?? ?? ?? 28 ?? ?? ?? ?? 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 22 00 00 A0 41 5A 6F ?? ?? ?? ?? 39 ?? ?? ?? ?? 02 1F ?? 7D ?? ?? ?? ?? 28 ?? ?? ?? ?? 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 22 00 00 A0 41 5A 6C 73 ?? ?? ?? ?? 2A)

alloc(newmem,4096)

label(aobShortTraining_r)
label(aobShortTraining_i)
registersymbol(aobShortTraining_r)
registersymbol(aobShortTraining_i)

label(fTrainingDuration)
registersymbol(fTrainingDuration)

newmem:
aobShortTraining_i:
readmem(aobShortTraining,96)

aobShortTraining:
aobShortTraining_r:

aobShortTraining+29:
db 26
dd 0

aobShortTraining+30:
db 01

aobShortTraining+50:
fTrainingDuration:
dd (float)0.0001

[DISABLE]
aobShortTraining_r:
readmem(aobShortTraining_i,96)

unregistersymbol(aobShortTraining_r)
unregistersymbol(aobShortTraining_i)

unregistersymbol(fTrainingDuration)

dealloc(newmem)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>174</ID>
                  <Description>"fTrainingDuration (multiplier)"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fTrainingDuration</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>151</ID>
              <Description>"God mode"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobGodMode,03 22 ?? ?? ?? ?? 41 ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 20 ?? ?? ?? ?? 6F ?? ?? ?? ?? 0A 06 22 00 00 00 00 43 ?? ?? ?? ?? 22 00 00 80 3F 06 22 00 00 C8 42 5B 59 0B 03 28 ?? ?? ?? ?? 65 07 5A 10 ?? 02 25 28 ?? ?? ?? ?? 03 58 28 ?? ?? ?? ?? 03 2A)
aobscan(aobGodModeQuest,02 03 28 ?? ?? ?? ?? 3A ?? ?? ?? ?? 03 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 39 ?? ?? ?? ?? 2A 03 6F ?? ?? ?? ?? 04 65 6F ?? ?? ?? ?? 26 03 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 39 ?? ?? ?? ?? 02 03 28 ?? ?? ?? ?? 2A)
aobscan(aobGodModeRadiation,02 02 7B ?? ?? ?? ?? 7D ?? ?? ?? ?? 02 03 22 ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 28 ?? ?? ?? ?? 7D ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 3B ?? ?? ?? ?? 02 02 7B ?? ?? ?? ?? 28 ?? ?? ?? ?? 0A)

alloc(newmem,4096)

label(aobGodMode_r)
label(aobGodMode_i)
label(aobGodModeQuest_r)
label(aobGodModeRadiation_r)
label(aobGodModeRadiation_i)
registersymbol(aobGodMode_r)
registersymbol(aobGodMode_i)
registersymbol(aobGodModeQuest_r)
registersymbol(aobGodModeRadiation_r)
registersymbol(aobGodModeRadiation_i)

newmem:
aobGodMode_i:
readmem(aobGodMode+1C,32)

aobGodModeRadiation_i:
readmem(aobGodModeRadiation+13,8)

aobGodMode+1C:
aobGodMode_r:
dq 0
dw 0
db 00
db 22 00 00 00 00 0B
dq 0

aobGodModeQuest+24:
aobGodModeQuest_r:
db 00

aobGodModeRadiation+13:
aobGodModeRadiation_r:
db 00 22
dd (float)0.0

[DISABLE]
aobGodMode_r:
readmem(aobGodMode_i,32)

aobGodModeQuest_r:
db 65

aobGodModeRadiation_r:
readmem(aobGodModeRadiation_i,8)

unregistersymbol(aobGodMode_r)
unregistersymbol(aobGodModeQuest_r)
unregistersymbol(aobGodMode_i)
unregistersymbol(aobGodModeRadiation_r)
unregistersymbol(aobGodModeRadiation_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>179</ID>
              <Description>"Max weapon damage (instead of random)"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobMaxWpnRndRng,02 7B ?? ?? ?? ?? 6B 02 7B ?? ?? ?? ?? 6B 28 ?? ?? ?? ?? 2A)

alloc(newmem,4096)

label(aobMaxWpnRndRng_r)
label(aobMaxWpnRndRng_i)
registersymbol(aobMaxWpnRndRng_r)
registersymbol(aobMaxWpnRndRng_i)

newmem:
aobMaxWpnRndRng_i:
readmem(aobMaxWpnRndRng+2,4)

aobMaxWpnRndRng+2:
aobMaxWpnRndRng_r:
readmem(aobMaxWpnRndRng+9,4)

[DISABLE]
aobMaxWpnRndRng_r:
readmem(aobMaxWpnRndRng_i,4)

unregistersymbol(aobMaxWpnRndRng_r)
unregistersymbol(aobMaxWpnRndRng_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>169</ID>
          <Description>"Family"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>167</ID>
              <Description>"Short pregnancy"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobShortPregnancy,28 ?? ?? ?? ?? 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 22 ?? ?? ?? ?? 06 22 ?? ?? ?? ?? 5B 59 5A 6C 73 ?? ?? ?? ?? 02)

alloc(newmem,4096)

label(aobShortPregnancy_r)
label(aobShortPregnancy_i)
registersymbol(aobShortPregnancy_r)
registersymbol(aobShortPregnancy_i)

label(fPregnancyDuration)
registersymbol(fPregnancyDuration)

newmem:
aobShortPregnancy_i:
readmem(aobShortPregnancy,32)

aobShortPregnancy:
aobShortPregnancy_r:
dq 0
dq 0
dq 0
db 22
fPregnancyDuration:
dd (float)3.0

[DISABLE]
aobShortPregnancy_r:
readmem(aobShortPregnancy_i,32)

unregistersymbol(aobShortPregnancy_r)
unregistersymbol(aobShortPregnancy_i)

unregistersymbol(fPregnancyDuration)

dealloc(newmem)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>168</ID>
                  <Description>"fPregnancyDuration (seconds)"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fPregnancyDuration</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>159</ID>
              <Description>"Short childhood"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobShortChildhood,02 28 ?? ?? ?? ?? 28 ?? ?? ?? ?? 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 6C 73 ?? ?? ?? ?? 02 FE 06 ?? ?? ?? ?? 73 ?? ?? ?? ?? 72 ?? ?? ?? ?? 17 17 6F ?? ?? ?? ?? 7D ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 15 3B ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 28 ?? ?? ?? ?? 02 18 02 7B ?? ?? ?? ?? 6F ?? ?? ?? ?? 0A 12 ?? 28 ?? ?? ?? ?? 6B 28 ?? ?? ?? ?? 6A 14 17 28 ?? ?? ?? ?? 7D ?? ?? ?? ?? 2A)

alloc(newmem,4096)

label(aobShortChildhood_r)
label(aobShortChildhood_i)
registersymbol(aobShortChildhood_r)
registersymbol(aobShortChildhood_i)

label(fChildhoodDuration)
registersymbol(fChildhoodDuration)

newmem:
aobShortChildhood_i:
readmem(aobShortChildhood+6,16)

aobShortChildhood+6:
aobShortChildhood_r:
dq 0
dw 0
db 22
fChildhoodDuration:
dd (float)3.0

[DISABLE]
aobShortChildhood_r:
readmem(aobShortChildhood_i,16)

unregistersymbol(aobShortChildhood_r)
unregistersymbol(aobShortChildhood_i)

unregistersymbol(fChildhoodDuration)

dealloc(newmem)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>160</ID>
                  <Description>"fChildhoodDuration (seconds)"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fChildhoodDuration</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>172</ID>
          <Description>"Vault"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>152</ID>
              <Description>"CardGen hacks"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobCardGen,73 ?? ?? ?? ?? 0A 16 0B 38 ?? ?? ?? ?? 06 19 18 73 ?? ?? ?? ?? 6F ?? ?? ?? ?? 07 17 58 0B 07 02 7B ?? ?? ?? ?? 3F ?? ?? ?? ?? 16 0C 38 ?? ?? ?? ?? 06 1A 18 73 ?? ?? ?? ?? 6F ?? ?? ?? ?? 08 17 58 0C 08 02 7B ?? ?? ?? ?? 3F ?? ?? ?? ?? 16 0D 38 ?? ?? ?? ?? 06 17 18 73 ?? ?? ?? ?? 6F ?? ?? ?? ?? 09 17 58 0D 09 02 7B ?? ?? ?? ?? 3F ?? ?? ?? ?? 16 13 ?? 38 ?? ?? ?? ?? 06 18 18 73 ?? ?? ?? ?? 6F ?? ?? ?? ?? 11 ?? 17 58 13 ?? 11 ?? 02 7B ?? ?? ?? ?? 3F ?? ?? ?? ?? 16 13 ?? 38 ?? ?? ?? ?? 06 19 73 ?? ?? ?? ?? 6F ?? ?? ?? ?? 11 ?? 17 58 13 ?? 11 ?? 02 7B ?? ?? ?? ?? 3F ?? ?? ?? ?? 16 13 ?? 38 ?? ?? ?? ?? 06 1A 73 ?? ?? ?? ?? 6F ?? ?? ?? ?? 11 ?? 17 58 13 ?? 11 ?? 02 7B ?? ?? ?? ?? 3F ?? ?? ?? ?? 16 13 ?? 38 ?? ?? ?? ?? 06 1B 18 73 ?? ?? ?? ?? 6F ?? ?? ?? ?? 11 ?? 17 58 13 ?? 11 ?? 02 7B ?? ?? ?? ?? 3F)

alloc(newmem,4096)

label(aobCardGen_r)
label(aobCardGen_i)
registersymbol(aobCardGen_r)
registersymbol(aobCardGen_i)

newmem:
aobCardGen_i:
readmem(aobCardGen,255)

aobCardGen:
aobCardGen_r:
db 73

// In most cases, it crashes; I guess there is no error handling for missing items.

//aobCardGen+0F:
//db 1A

//aobCardGen+33:
//db 1A

aobCardGen+56:
//db 19

aobCardGen+57:
db 1A

//aobCardGen+7B:
//db 1A

aobCardGen+7C:
db 1A

aobCardGen+A3:
db 1A

//aobCardGen+F2:
//db 1A

[DISABLE]
aobCardGen_r:
readmem(aobCardGen_i,255)

unregistersymbol(aobCardGen_r)
unregistersymbol(aobCardGen_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>154</ID>
              <Description>"Rush hacks"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobRushHacks,02 7B ?? ?? ?? ?? 12 ?? 7B ?? ?? ?? ?? 6B 11 ?? 6F ?? ?? ?? ?? 5A 58 7D ?? ?? ?? ?? 12 ?? 02 7B ?? ?? ?? ?? 12 ?? 7B ?? ?? ?? ?? 6B 11 ?? 6F ?? ?? ?? ?? 5A 58 7D ?? ?? ?? ?? 12 ?? 12 ?? 7B ?? ?? ?? ?? 22 ?? ?? ?? ?? 41 ?? ?? ?? ?? 22 ?? ?? ?? ?? 38 ?? ?? ?? ?? 12 ?? 7B ?? ?? ?? ?? 7D ?? ?? ?? ?? 06 2A)

alloc(newmem,4096)

label(aobRushHacks_r)
label(aobRushHacks_i)
registersymbol(aobRushHacks_r)
registersymbol(aobRushHacks_i)

newmem:
aobRushHacks_i:
readmem(aobRushHacks,96)

aobRushHacks:
aobRushHacks_r:
db 00 22
dd (float)0.5 // m_bonusExpBase = 0.05

aobRushHacks+1E:
db 00 22
dd (float)0.5 // m_bonusResourcesBase = 0.05

aobRushHacks+57:
db 00 00 22 00 00 00 00

[DISABLE]
aobRushHacks_r:
readmem(aobRushHacks_i,96)

unregistersymbol(aobRushHacks_r)
unregistersymbol(aobRushHacks_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>178</ID>
              <Description>"Keep ingredients on crafting"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobKeepIngrdntsOnCrft,07 17 58 0B 07 03 6F ?? ?? ?? ?? 3F ?? ?? ?? ?? 16 0D 38 ?? ?? ?? ?? 28 ?? ?? ?? ?? 6F ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 09 6F ?? ?? ?? ?? 14 6F ?? ?? ?? ?? 13 ?? 11 ?? 3A ?? ?? ?? ?? 72 ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 09 6F ?? ?? ?? ?? 28 ?? ?? ?? ?? 28 ?? ?? ?? ?? 16 0A 38 ?? ?? ?? ?? 28 ?? ?? ?? ?? 6F ?? ?? ?? ?? 11 ?? 6F ?? ?? ?? ?? 09 17 58 0D 09 02)

alloc(newmem,4096)

label(aobKeepIngrdntsOnCrft_r)
label(aobKeepIngrdntsOnCrft_i)
registersymbol(aobKeepIngrdntsOnCrft_r)
registersymbol(aobKeepIngrdntsOnCrft_i)

newmem:
aobKeepIngrdntsOnCrft_i:
readmem(aobKeepIngrdntsOnCrft+5e,20)

aobKeepIngrdntsOnCrft+5e:
aobKeepIngrdntsOnCrft_r:
dq 0
dq 0
db 00

[DISABLE]
aobKeepIngrdntsOnCrft_r:
readmem(aobKeepIngrdntsOnCrft_i,20)

unregistersymbol(aobKeepIngrdntsOnCrft_r)
unregistersymbol(aobKeepIngrdntsOnCrft_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>171</ID>
          <Description>"Wasteland/Quests"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>161</ID>
              <Description>"Quick return from Wasteland"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobShortRetTime,02 16 28 ?? ?? ?? ?? 02 03 6B 02 7B ?? ?? ?? ?? 5B 6C 73 ?? ?? ?? ?? 7D ?? ?? ?? ?? 02 20 ?? ?? ?? ?? 28 ?? ?? ?? ?? 0A 06 22 ?? ?? ?? ?? 43 ?? ?? ?? ?? 02 02 7B ?? ?? ?? ?? 06 6C 28 ?? ?? ?? ?? 7D ?? ?? ?? ?? 2A)

label(aobShortRetTime_r)
registersymbol(aobShortRetTime_r)

newmem:

aobShortRetTime+8:
aobShortRetTime_r:
db 17

[DISABLE]
aobShortRetTime_r:
db 03

unregistersymbol(aobShortRetTime_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>180</ID>
              <Description>"No quest requirements"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobDontAddQuestReqs,06 17 58 0A 06 02 7B ?? ?? ?? ?? 8E 69 3F ?? ?? ?? ?? 02 28 ?? ?? ?? ?? 02 28 ?? ?? ?? ?? 03 6F ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 8E 69 28 ?? ?? ?? ?? 0B 16 0C 38 ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 6F ?? ?? ?? ?? 07 3F ?? ?? ?? ?? 38 ?? ?? ?? ??)

alloc(newmem,4096)

label(aobDontAddQuestReqs_r)
label(aobDontAddQuestReqs_i)
registersymbol(aobDontAddQuestReqs_r)
registersymbol(aobDontAddQuestReqs_i)

newmem:
aobDontAddQuestReqs_i:
readmem(aobDontAddQuestReqs+45,8)

aobDontAddQuestReqs+45:
aobDontAddQuestReqs_r:
db 26 26 00 00 00

[DISABLE]
aobDontAddQuestReqs_r:
readmem(aobDontAddQuestReqs_i,8)

unregistersymbol(aobDontAddQuestReqs_r)
unregistersymbol(aobDontAddQuestReqs_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>162</ID>
              <Description>"Wasteland encounters always succeed"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobWLandAlwaysWin,6B 58 0A 07 17 58 0B 07 03 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 3F ?? ?? ?? ?? 06 02 7B ?? ?? ?? ?? FE 02 2A)

alloc(newmem,4096)

label(aobWLandAlwaysWin_r)
label(aobWLandAlwaysWin_i)
registersymbol(aobWLandAlwaysWin_r)
registersymbol(aobWLandAlwaysWin_i)

newmem:
aobWLandAlwaysWin_i:
readmem(aobWLandAlwaysWin+18,10)

aobWLandAlwaysWin+18:
aobWLandAlwaysWin_r:
dq 0
db 17

[DISABLE]
aobWLandAlwaysWin_r:
readmem(aobWLandAlwaysWin_i,10)

unregistersymbol(aobWLandAlwaysWin_r)
unregistersymbol(aobWLandAlwaysWin_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>163</ID>
              <Description>"Short Wasteland cycles"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobShortWlCycles,02 7B ?? ?? ?? ?? 22 00 00 70 42 5A 6C 73 ?? ?? ?? ?? 2A)

alloc(newmem,4096)

label(aobShortWlCycles_r)
label(aobShortWlCycles_i)
registersymbol(aobShortWlCycles_r)
registersymbol(aobShortWlCycles_i)

label(fWastelandCycleDuration)
registersymbol(fWastelandCycleDuration)

newmem:
aobShortWlCycles_i:
readmem(aobShortWlCycles,16)

aobShortWlCycles:
aobShortWlCycles_r:

aobShortWlCycles+7:
fWastelandCycleDuration:
dd (float)5.0

[DISABLE]
aobShortWlCycles_r:
readmem(aobShortWlCycles_i,16)

unregistersymbol(aobShortWlCycles_r)
unregistersymbol(aobShortWlCycles_i)

unregistersymbol(fWastelandCycleDuration)

dealloc(newmem)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>164</ID>
                  <Description>"fWastelandCycleDuration (seconds)"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fWastelandCycleDuration</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>175</ID>
              <Description>"Critical Damage Ratio"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobCritDmgRatio,02 7B ?? ?? ?? ?? 39 ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 6F ?? ?? ?? ?? 6F ?? ?? ?? ?? 39 ?? ?? ?? ?? 02 16 7D ?? ?? ?? ?? 02 28 ?? ?? ?? ?? 6F ?? ?? ?? ?? 02 28 ?? ?? ?? ?? 6F ?? ?? ?? ?? 7D ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 39 ?? ?? ?? ?? 02 02 7B ?? ?? ?? ?? 7B ?? ?? ?? ?? 7D ?? ?? ?? ?? 38 ?? ?? ?? ?? 02 22 00 00 00 00 7D ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 22 00 00 00 00 FE 02 0A)

alloc(newmem,4096)

label(aobCritDmgRatio_r)
label(aobCritDmgRatio_i)
registersymbol(aobCritDmgRatio_r)
registersymbol(aobCritDmgRatio_i)

label(fCritDmgRatio)
registersymbol(fCritDmgRatio)

newmem:
aobCritDmgRatio_i:
readmem(aobCritDmgRatio+4e,16)

aobCritDmgRatio+4e:
aobCritDmgRatio_r:
db 22
fCritDmgRatio:
dd (float)9.5
dd 0
dw 0

[DISABLE]
aobCritDmgRatio_r:
readmem(aobCritDmgRatio_i,16)

unregistersymbol(aobCritDmgRatio_r)
unregistersymbol(aobCritDmgRatio_i)

unregistersymbol(fCritDmgRatio)

dealloc(newmem)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>176</ID>
                  <Description>"fCritDmgRatio (crash at 10.0!)"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fCritDmgRatio</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>158</ID>
      <Description>"Add resources instead of take"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobAddResOnSub,73 ?? ?? ?? ?? 0A 16 0B 38 ?? ?? ?? ?? 06 7B ?? ?? ?? ?? 07 02 7B ?? ?? ?? ?? 07 98 03 7B ?? ?? ?? ?? 07 98 59 A0 07 17 58 0B 07 02 7B ?? ?? ?? ?? 8E 69 3C ?? ?? ?? ?? 07 03 7B ?? ?? ?? ?? 8E 69 3F ?? ?? ?? ?? 06 2A)

label(aobAddResOnSub_r)
registersymbol(aobAddResOnSub_r)

newmem:

aobAddResOnSub+24:
aobAddResOnSub_r:
db 58

[DISABLE]
aobAddResOnSub_r:
db 59

unregistersymbol(aobAddResOnSub_r)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>165</ID>
      <Description>"Rewards on levelup"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobCapsOnLevel,02 7B ?? ?? ?? ?? 39 ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 6F ?? ?? ?? ?? 0A 06 14 28 ?? ?? ?? ?? 39 ?? ?? ?? ?? 02 7B ?? ?? ?? ?? 73 ?? ?? ?? ?? 0B 07 16 02 7B ?? ?? ?? ?? 6B 73)

alloc(newmem,4096)

label(aobCapsOnLevel_r)
label(aobCapsOnLevel_i)
registersymbol(aobCapsOnLevel_r)
registersymbol(aobCapsOnLevel_i)

label(fCapsOnLevelUp)
registersymbol(fCapsOnLevelUp)

newmem:
aobCapsOnLevel_i:
readmem(aobCapsOnLevel+30,8)

aobCapsOnLevel+30:
aobCapsOnLevel_r:
/*
16 - Caps - default,
17 - Food,
18 - Energy,
19 - Water,
1A - Stimpack,
1B - RadAway,
1C - LunchBox, - does not work
1D - MrHandy,
1E - PetCarrier */
db 16
db 00 00 22
fCapsOnLevelUp:
dd (float)100.0

[DISABLE]
aobCapsOnLevel_r:
readmem(aobCapsOnLevel_i,8)

unregistersymbol(aobCapsOnLevel_r)
unregistersymbol(aobCapsOnLevel_i)

unregistersymbol(fCapsOnLevelUp)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>166</ID>
          <Description>"fCapsOnLevelUp"</Description>
          <Color>FF0000</Color>
          <VariableType>Float</VariableType>
          <Address>fCapsOnLevelUp</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>156</ID>
      <Description>"Give birth to twins"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobDeliverTwins,02 19 7D ?? ?? ?? ?? 38 ?? ?? ?? ?? 02 18 7D ?? ?? ?? ?? 38 ?? ?? ?? ?? 02 17 7D)

label(aobDeliverTwins_r)
registersymbol(aobDeliverTwins_r)

newmem:
aobDeliverTwins+19:
aobDeliverTwins_r:
db 1B // 5 babies

[DISABLE]
aobDeliverTwins_r:
db 17

unregistersymbol(aobDeliverTwins_r)

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>aobCapsOnLevel_r</Name>
      <Address>0CFDD9F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobCapsOnLevel_i</Name>
      <Address>08DD0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fCapsOnLevelUp</Name>
      <Address>0CFDD9F4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobDeliverTwins_r</Name>
      <Address>0CEC3730</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobAddResOnSub_r</Name>
      <Address>0CE8F3B4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobDAlwaysRun_r</Name>
      <Address>0CCA9D38</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobDAlwaysRun_i</Name>
      <Address>031E0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMaxHappiness_r</Name>
      <Address>0CCAE3F5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMaxHappiness_i</Name>
      <Address>031F0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobXPBoost_r</Name>
      <Address>0CCAD65F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fFollowerXPBoost</Name>
      <Address>0CCAD65F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobDwXPBoost_r</Name>
      <Address>0CCADBB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobDwXPBoost_i</Name>
      <Address>03200000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDwellerXPBoost</Name>
      <Address>0CCADBBA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobShortTraining_r</Name>
      <Address>0CCF1BF8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobShortTraining_i</Name>
      <Address>03210000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fTrainingDuration</Name>
      <Address>0CCF1C48</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobGodMode_r</Name>
      <Address>0CCAED08</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobGodMode_i</Name>
      <Address>03240000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobGodModeQuest_r</Name>
      <Address>0CD1B9F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobGodModeRadiation_r</Name>
      <Address>0CCAEAA7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobGodModeRadiation_i</Name>
      <Address>03240020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMaxWpnRndRng_r</Name>
      <Address>0CCFEBA7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMaxWpnRndRng_i</Name>
      <Address>03250000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobShortPregnancy_r</Name>
      <Address>0CCB3332</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobShortPregnancy_i</Name>
      <Address>03260000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fPregnancyDuration</Name>
      <Address>0CCB334B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobShortChildhood_r</Name>
      <Address>0CCDAF6E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobShortChildhood_i</Name>
      <Address>05830000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fChildhoodDuration</Name>
      <Address>0CCDAF79</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobCardGen_r</Name>
      <Address>0CD70AC0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobCardGen_i</Name>
      <Address>05860000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobRushHacks_r</Name>
      <Address>0CCE0D82</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobRushHacks_i</Name>
      <Address>05BD0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobKeepIngrdntsOnCrft_r</Name>
      <Address>0CCD7714</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobKeepIngrdntsOnCrft_i</Name>
      <Address>05C00000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobShortRetTime_r</Name>
      <Address>0CD17B64</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobDontAddQuestReqs_r</Name>
      <Address>0CD44481</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobDontAddQuestReqs_i</Name>
      <Address>05C10000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobWLandAlwaysWin_r</Name>
      <Address>0CD11795</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobWLandAlwaysWin_i</Name>
      <Address>05C20000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobShortWlCycles_r</Name>
      <Address>0CD139CD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobShortWlCycles_i</Name>
      <Address>05C30000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fWastelandCycleDuration</Name>
      <Address>0CD139D4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobCritDmgRatio_r</Name>
      <Address>0CD26DEE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobCritDmgRatio_i</Name>
      <Address>08F40000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fCritDmgRatio</Name>
      <Address>0CD26DEF</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
