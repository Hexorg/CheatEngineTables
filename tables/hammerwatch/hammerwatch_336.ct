<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>28</ID>
      <Description>"Enable (v1.22) (in-game)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(hpcmpzeroAOB,83 79 38 00 7E 0D)
registersymbol(hpcmpzeroAOB)
aobscan(keysreadAOB,8B 41 04 3B 50 04 73 05 8B 44 90 08)
registersymbol(keysreadAOB)
aobscan(somepointerAOB,80 3D ** ** ** ** 00 0F 84 ** ** ** ** 8B 85 ** ** ** ** 83 78 38 00)
registersymbol(somepointerAOB)

label(bUndead)
registersymbol(bUndead)

label(pHero)
registersymbol(pHero)
label(pKeys)
registersymbol(pKeys)
label(pSomePointer)
registersymbol(pSomePointer)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHero],ecx

cmp byte ptr [bUndead],1
jne originalcode
cmp dword ptr [ecx+38],1
jge originalcode
mov dword ptr [ecx+38],1

originalcode:
cmp dword ptr [ecx+38],00
jle hpcmpzeroAOB+13 //1F009BB8

exit:
jmp returnhere

///

newmem2:
mov [pKeys],eax

originalcode2:
mov eax,[eax+edx*4+08]
ret

exit2:
jmp returnhere2

///
bUndead:
db 0

pHero:
dd 0
pKeys:
dd 0
///

hpcmpzeroAOB: //1F009BA5:
jmp newmem
nop
returnhere:

keysreadAOB+8: //1EFFAA08:
jmp newmem2
returnhere2:

[somepointerAOB+2]:
pSomePointer:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hpcmpzeroAOB: //1F009BA5:
db 83 79 38 00 7E 0D
//Alt: cmp dword ptr [ecx+38],00
//Alt: jle 1F009BB8
unregistersymbol(hpcmpzeroAOB)
keysreadAOB+8: //1EFFAA08:
db 8B 44 90 08 C3
//Alt: mov eax,[eax+edx*4+08]
//Alt: ret
unregistersymbol(keysreadAOB)
unregistersymbol(somepointerAOB)

unregistersymbol(bUndead)

unregistersymbol(pHero)
unregistersymbol(pCombo)
unregistersymbol(pSomePointer)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Undead (in-game)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthsubAOB,8B 45 D0 89 50 38 A1)
registersymbol(healthsubAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebp-30]

cmp [pHero],eax
jne originalcode
cmp edx,1
jge originalcode
mov edx,1

originalcode:
//mov eax,[ebp-30]
mov [eax+38],edx

exit:
jmp returnhere

healthsubAOB: //1EFFAB42:
jmp newmem
nop
returnhere:

bUndead:
db 1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthsubAOB: //1EFFAB42:
db 8B 45 D0 89 50 38
//Alt: mov eax,[ebp-30]
//Alt: mov [eax+38],edx
unregistersymbol(healthsubAOB)
bUndead:
db 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Inf. MP (use skill once)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(manareadprecastAOB,8B 40 40 3B 45 F8)
registersymbol(manareadprecastAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHero],eax
jne originalcode
mov ecx,[ebp-08]
cmp [eax+40],ecx
jge originalcode
mov [eax+40],ecx

originalcode:
mov ecx,esi//
mov eax,[eax+40]
cmp eax,[ebp-08]

exit:
jmp returnhere

manareadprecastAOB: //1773FD14:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
manareadprecastAOB: //1773FD14:
db 8B 40 40 3B 45 F8
//Alt: mov eax,[eax+40]
//Alt: cmp eax,[ebp-08]
unregistersymbol(manareadprecastAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Inf. Money (shop once or use Thief Skill 1 once)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(moneywriteonthiefskilluseAOB,89 7E 2C 80 3D ** ** ** ** 00 74)
registersymbol(moneywriteonthiefskilluseAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+2c],edi
jle originalcode
mov edi,[esi+2c]

originalcode:
mov [esi+2C],edi
cmp byte ptr [pSomePointer],00

exit:
jmp returnhere

moneywriteonthiefskilluseAOB: //092B99C7:
jmp newmem
nop
nop
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
moneywriteonthiefskilluseAOB: //092B99C7:
mov [esi+2C],edi
cmp byte ptr [pSomePointer],00
//Alt: db 89 7E 2C 80 3D AD 50 22 00 00
unregistersymbol(moneywriteonthiefskilluseAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>120</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Easy Combo (gain combo once)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(comboincAOB,8B 86 C8 00 00 00 40 89 86 C8 00 00 00)
registersymbol(comboincAOB)
aobscan(comboreadAOB,8B 81 C8 00 00 00 C3)
registersymbol(comboreadAOB)

label(pCombo)
registersymbol(pCombo)
label(dComboMultiplier)
registersymbol(dComboMultiplier)

label(bOneHitTen)
registersymbol(bOneHitTen)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

mov eax,[dComboMultiplier]
add [esi+000000C8],eax
mov eax,[esi+000000C8]

cmp byte ptr [bOneHitTen],1
jne originalcode
cmp eax,#10
jge originalcode
mov eax,#10


originalcode:
mov [esi+000000C8],eax

exit:
jmp returnhere

///

newmem6:
mov [pCombo],ecx

originalcode6:
mov eax,[ecx+000000C8]

exit6:
jmp returnhere6

///
pCombo:
dd 0
dComboMultiplier:
dd 2

bOneHitTen:
db 0
///

comboincAOB+7: //04B61F07:
jmp newmem
nop
returnhere:

comboreadAOB: //08C78790:
jmp newmem6
nop
returnhere6:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
comboincAOB+7: //04B61F07:
db 89 86 C8 00 00 00
//Alt: mov [esi+000000C8],eax
unregistersymbol(comboincAOB)
comboreadAOB: //08C78790:
db 8B 81 C8 00 00 00
//Alt: mov eax,[ecx+000000C8]
unregistersymbol(comboreadAOB)

unregistersymbol(pKeys)
unregistersymbol(dComboMultiplier)

unregistersymbol(bOneHitTen)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>119</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>50</ID>
              <Description>"One Combo Trigger"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bOneHitTen:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bOneHitTen:
db 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>49</ID>
              <Description>"Combo Multiplier"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>dComboMultiplier</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Combo"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCombo</Address>
              <Offsets>
                <Offset>C8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"HP"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>38</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>30</ID>
              <Description>"HP Max"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>3C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"MP"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>32</ID>
              <Description>"MP Max"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"$"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>2C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Potion"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>28</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Bronze Key"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pKeys</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Silver Key"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pKeys</Address>
          <Offsets>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Gold Key"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pKeys</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"Deaths"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>30</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"--- old / test ------------------------------"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>02647754</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"g key"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(keysbasereadAOB,8B 40 04 3B 50 04)
registersymbol(keysbasereadAOB)

label(pKeys)
registersymbol(pKeys)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[eax+04]

mov [pKeys],eax

originalcode2:
//mov eax,[eax+04]
cmp edx,[eax+04]

exit2:
jmp returnhere2

///
pKeys:
dd 0
///

keysbasereadAOB: //206C50C3:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
keysbasereadAOB: //206C50C3:
db 8B 40 04 3B 50 04
//Alt: mov eax,[eax+04]
//Alt: cmp edx,[eax+04]
unregistersymbol(keysbasereadAOB)

unregistersymbol(pKeys)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>02647758</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>27BDCD18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"g combo"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(comboreadAOB,8B 81 C4 00 00 00 C3)
registersymbol(comboreadAOB)

label(pCombo)
registersymbol(pCombo)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCombo],ecx

originalcode6:
mov eax,[ecx+000000C4]

exit6:
jmp returnhere6

///
pCombo:
dd 0
///

comboreadAOB: //04362490:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
comboreadAOB: //04362490:
db 8B 81 C4 00 00 00
//Alt: mov eax,[ecx+000000C4]
unregistersymbol(comboreadAOB)

unregistersymbol(pCombo)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0247C650</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0247C658</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"g keys 1.2"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(keysreadAOB,8B 44 90 08 C3)
registersymbol(keysreadAOB)

label(pKeys)
registersymbol(pKeys)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pKeys],eax

originalcode2:
mov eax,[eax+edx*4+08]
ret 

exit2:
jmp returnhere2

///
pKeys:
dd 0
///

keysreadAOB: //1EFFAA08:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
keysreadAOB: //1EFFAA08:
db 8B 44 90 08 C3
//Alt: mov eax,[eax+edx*4+08]
//Alt: ret
unregistersymbol(keysreadAOB)

unregistersymbol(pKeys)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>021E8A28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"g combo 1.2"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(comboreadAOB,8B 81 C8 00 00 00 C3)
registersymbol(comboreadAOB)

label(pCombo)
registersymbol(pCombo)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode6:
mov eax,[ecx+000000C8]

exit6:
jmp returnhere6

///
pCombo:
dd 0
///

comboreadAOB: //08C78790:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
comboreadAOB: //08C78790:
db 8B 81 C8 00 00 00
//Alt: mov eax,[ecx+000000C8]
unregistersymbol(comboreadAOB)

unregistersymbol(pCombo)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Enable (v1.0? gog)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(hpcmpzeroAOB,83 79 3C 00 7E 0D)
registersymbol(hpcmpzeroAOB)
aobscan(keysbasereadAOB,8B 40 04 3B 50 04)
registersymbol(keysbasereadAOB)
aobscan(comboreadAOB,8B 81 C4 00 00 00 C3)
registersymbol(comboreadAOB)

label(pHero)
registersymbol(pHero)
label(pKeys)
registersymbol(pKeys)
label(pCombo)
registersymbol(pCombo)

label(bUndead)
registersymbol(bUndead)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHero],ecx

cmp byte ptr [bUndead],1
jne originalcode
cmp dword ptr [ecx+3C],1
jge originalcode
mov dword ptr [ecx+3C],1

originalcode:
cmp dword ptr [ecx+3C],00
jle hpcmpzeroAOB+13 //1E8A6924

exit:
jmp returnhere

///

newmem2:
mov eax,[eax+04]

mov [pKeys],eax

originalcode2:
//mov eax,[eax+04]
cmp edx,[eax+04]

exit2:
jmp returnhere2

///

newmem6:
mov [pCombo],ecx

originalcode6:
mov eax,[ecx+000000C4]

exit6:
jmp returnhere6

///
pHero:
dd 0
pKeys:
dd 0
pCombo:
dd 0

bUndead:
db 0
///

hpcmpzeroAOB: //1E8A6911:
jmp newmem
nop
returnhere:

keysbasereadAOB: //206C50C3:
jmp newmem2
nop
returnhere2:

comboreadAOB: //04362490:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hpcmpzeroAOB: //1E8A6911:
db 83 79 3C 00 7E 0D
//Alt: cmp dword ptr [ecx+3C],00
//Alt: jle 1E8A6924
unregistersymbol(hpcmpzeroAOB)
keysbasereadAOB: //206C50C3:
db 8B 40 04 3B 50 04
//Alt: mov eax,[eax+04]
//Alt: cmp edx,[eax+04]
unregistersymbol(keysbasereadAOB)
comboreadAOB: //04362490:
db 8B 81 C4 00 00 00
//Alt: mov eax,[ecx+000000C4]
unregistersymbol(comboreadAOB)

unregistersymbol(pHero)
unregistersymbol(pKeys)
unregistersymbol(pCombo)

unregistersymbol(bUndead)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Undead"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthsubAOB,8B 45 B0 89 50 3C A1)
registersymbol(healthsubAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebp-50]

cmp [pHero],eax
jne originalcode
cmp edx,1
jge originalcode
mov edx,1

originalcode:
//mov eax,[ebp-50]
mov [eax+3C],edx

exit:
jmp returnhere

healthsubAOB: //206C51E2:
jmp newmem
nop
returnhere:

bUndead:
db 1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthsubAOB: //206C51E2:
db 8B 45 B0 89 50 3C
//Alt: mov eax,[ebp-50]
//Alt: mov [eax+3C],edx
unregistersymbol(healthsubAOB)
bUndead:
db 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Inf. MP"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(manareadprecastAOB,8B 40 44 3B 45 F0)
registersymbol(manareadprecastAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHero],eax
jne originalcode
mov ecx,[ebp-10]
cmp [eax+44],ecx
jge originalcode
mov [eax+44],ecx

originalcode:
mov ecx,esi//
mov eax,[eax+44]
cmp eax,[ebp-10]

exit:
jmp returnhere

manareadprecastAOB: //12A17CBE:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
manareadprecastAOB: //12A17CBE:
db 8B 40 44 3B 45 F0
//Alt: mov eax,[eax+44]
//Alt: cmp eax,[ebp-10]
unregistersymbol(manareadprecastAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Easy Combo"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(comboincAOB,8B 86 C4 00 00 00 40 89 86 C4 00 00 00)
registersymbol(comboincAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,#10
jge originalcode
mov eax,#10

originalcode:
mov [esi+000000C4],eax

exit:
jmp returnhere

comboincAOB+7: //12A1F43F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
comboincAOB+7: //12A1F43F:
db 89 86 C4 00 00 00
//Alt: mov [esi+000000C4],eax
unregistersymbol(comboincAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>25</ID>
              <Description>"Fake Keys"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(keysreadAOB,8B 44 90 08 C3)
registersymbol(keysreadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,1
ret

originalcode:
mov eax,[eax+edx*4+08]
ret 

exit:
jmp returnhere

keysreadAOB: //206C50CB:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
keysreadAOB: //206C50CB:
db 8B 44 90 08 C3
//Alt: mov eax,[eax+edx*4+08]
//Alt: ret
unregistersymbol(keysreadAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>3</ID>
              <Description>"HP"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>3C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>4</ID>
                  <Description>"HP Max"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHero</Address>
                  <Offsets>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"MP"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>6</ID>
                  <Description>"MP Max"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHero</Address>
                  <Offsets>
                    <Offset>48</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Combo"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCombo</Address>
              <Offsets>
                <Offset>C4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19</ID>
              <Description>"$"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"Bronze Key"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pKeys</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>11</ID>
                  <Description>"Bronze Key"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHero</Address>
                  <Offsets>
                    <Offset>FFFFFF98</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>17</ID>
              <Description>"Silver Key"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pKeys</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>12</ID>
                  <Description>"Silver Key"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHero</Address>
                  <Offsets>
                    <Offset>FFFFFF9C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"Gold Key"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pKeys</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>13</ID>
                  <Description>"Gold Key"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHero</Address>
                  <Offsets>
                    <Offset>FFFFFFA0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>003350AD</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somepointerAOB,80 3D ** ** ** ** 00 0F 84 ** ** ** ** 8B 85 ** ** ** ** 83 78 38 00)
registersymbol(somepointerAOB)

label(pSomePointer)
registersymbol(pSomePointer)

[somepointerAOB+2]:
pSomePointer:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(somepointerAOB)

unregistersymbol(pSomePointer)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(moneywriteonthiefskilluseAOB,89 7E 2C 80 3D ** ** ** ** 00 74 54)
registersymbol(moneywriteonthiefskilluseAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+2c],edi
jle originalcode
mov edi,[esi+2c]

originalcode:
mov [esi+2C],edi
cmp byte ptr [somepointerAOB],00

exit:
jmp returnhere

moneywriteonthiefskilluseAOB: //092B99C7:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
moneywriteonthiefskilluseAOB: //092B99C7:
mov [esi+2C],edi
cmp byte ptr [somepointerAOB],00
//Alt: db 89 7E 2C 80 3D AD 50 22 00 00
unregistersymbol(moneywriteonthiefskilluseAOB)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>somewrite1AOB</Name>
      <Address>014E8F92</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somewrite2AOB</Name>
      <Address>01465744</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somereadAOB</Name>
      <Address>01408F8C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBase</Name>
      <Address>10E60029</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somedecAOB</Name>
      <Address>01385582</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infvigarAOB</Name>
      <Address>017F09D5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pVigar</Name>
      <Address>0C54003D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>keysbasereadAOB</Name>
      <Address>206C50C3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>comboincAOB</Name>
      <Address>04291BD0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>comboreadAOB</Name>
      <Address>08E01110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>dComboMultiplier</Name>
      <Address>0426004C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bOneHitTen</Name>
      <Address>04260050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hpcmpzeroAOB</Name>
      <Address> 080C531D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>keysreadAOB</Name>
      <Address> 06974C48</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somepointerAOB</Name>
      <Address> 080C385A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bUndead</Name>
      <Address>041E0043</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>041E0044</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pKeys</Name>
      <Address>041E0048</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSomePointer</Name>
      <Address>002050AD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthsubAOB</Name>
      <Address> 06981A3A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>manareadprecastAOB</Name>
      <Address> 069E2434</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>moneywriteonthiefskilluseAOB</Name>
      <Address> 06972157</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5513939#5513939
</Comments>
</CheatTable>
