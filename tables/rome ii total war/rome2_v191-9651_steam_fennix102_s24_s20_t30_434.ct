<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>91</ID>
      <Description>"[X] &lt;== Prepare Environment for Cheating Script 2.0 (ACTIVATE ME FIRST)"</Description>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Total War - Rome II
 Game Version  : 1.9.0 (9414)
 Game Sponsor  : fennix102
 Process Name  : Rome2.exe
 Script Version: 2.0
 CE Version    : 6.3
 Release date  : 31-Jan-2014
 Author        : Recifense
 History:
 31-Jan-14: Release for version 1.9.0
 Features:
 - Prepare environment for bypassing CRC-Check
===========================================
}

//=========================================
// Definitions
define(CODESIZE,0x01641200)
define(LUDO,Rome2.dll)

//=========================================
[ENABLE]
//=========================================
alloc(CodeCopy,CODESIZE,LUDO)
alloc(_IniMem,4096,LUDO)
//=========================================
label(iFlagOK)
label(pCodeCopy)
label(_ExitIM)
//=========================================
registersymbol(CodeCopy)
registersymbol(_IniMem)
registersymbol(iFlagOK)
registersymbol(pCodeCopy)
//=========================================
_IniMem:
 pushad
 pushfd

 mov ecx,CODESIZE
 shr ecx,2
 mov esi,LUDO
 mov edi,CodeCopy
 cld
 rep movsd

 push #500
 call kernel32.sleep

 mov ecx,CODESIZE
 shr ecx,2
 mov esi,LUDO
 mov edi,CodeCopy
 repe cmpsd

 test ecx,ecx
 jnz _ExitIM

 mov dword ptr [iFlagOK],55555555

_ExitIM:
 popfd
 popad
 ret
//=========================================
 db '=====================================&gt;'
 db 'CE6.3 Script by Recifense 011014'
//=========================================
// Variables
pCodeCopy:
 dd CodeCopy
iFlagOK:
 dd 0

//=========================================
CREATETHREAD(_IniMem)
//=========================================
// Script for Restoring Original Codes
[DISABLE]
//=========================================
unregistersymbol(CodeCopy)
unregistersymbol(_IniMem)
unregistersymbol(iFlagOK)
unregistersymbol(pCodeCopy)
//=========================================
dealloc(CodeCopy)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>90</ID>
      <Description>"[X] &lt;== Rome II Total War v1.9.1-9651 Steam Script 2.4"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Rome II Total War
 Game Version  : 1.9.0 (9414)
 Game Sponsor  : fennix102 (gift)
 Proces Name   : Rome2.exe
 Script Version: 2.4
 CE Version    : 6.3
 Release date  : 31-Jan-2014
 Author        : Recifense
 History:
 08-Sep-13: First Release
 09-Sep-13: Fixed an issue related to GM and a possible crash
 10-Sep-13: Trying to fix the surplus issue
 11-Sep-13: Release for version 6955.
 12-Sep-13: New approach on Reinf and 2 new features (s2.0)
 17-Sep-13: Add more protection for the ships (s2.1)
 17-Sep-13: Release for version 7018.
 18-Sep-13: Changed player ID approach and minimum money as well (s2.2)
 01-Oct-13: Release for version 7319
 11-Oct-13: Release for version 1.4.0-7573
 18-Oct-13: Release for version 1.5.0-7765
 01-Nov-13: Release for version 1.6.0-8013
 23-Nov-13: Release for version 1.7.0-8418
 05-Dec-13: Release for version 1.7.0-8630
 18-Dec-13: Release for version 1.8.0-8891
 21-Dec-13: Release for version 1.8.0-8891 (fixed a bug) (S2.3)
 25-Dec-13: New approach in identifying the human player (S2.4)
 10-Jan-14: Release for version 1.8.1-9066
 31-Jan-14: Release for version 1.9.0-9414
 Features:
 - Minimum Money
 - Unlimited Action Points
   - Agent
   - Troop
   - Army Commander
 - Recover Troop Size on Move
 - Blessed Units:
   - Cunning   (10)
   - Zeal      (10)
   - Authority (10)
   - Ambition  (10)
   - Gravitas  (10)
   - Max. Age  (40)
 - Province Minimum PO (10)
 - Recover Mercenaries Available
 - Unit Can Act again:
   - Agent
   - Army Commander
 - Army Reinforcement in 1 Turn
 - Province Growth in 1 turn
 - Province Minimum PS (10)
 - God Mode:
   - Ground Battle
   - Sea Battle
 - Unlimited Ammo
 - Research in 1 Turn
 - Const/Improv in 1 Turn
 - pointers
 - CRC bypassing
===========================================
}

//=========================================
// Definitions
define(LUDO,Rome2.dll)
define(LUDOEND,Rome2.dll+010a0000)

define(MHPR,Rome2.dll+00BAC95E) //new==#====#==
define(MMMT,Rome2.dll+00D72C5B) //new==#=======
define(MMMS,Rome2.dll+007CF891) //new==#=======
define(MSCR,Rome2.dll+00B34342)/ //=============
define(MAPC,Rome2.dll+000F545A) //=============
define(MAPT,Rome2.dll+0033D627) //=============
define(MAPA,Rome2.dll+00F07557) //=============
define(MSPE,Rome2.dll+00E10F21) //=============
define(MPPO,Rome2.dll+00A03C9F) //=============
define(MMCA,Rome2.dll+00E47E64) //=========#===
define(MAAP,Rome2.dll+00D8BD60) //=============
define(MART,Rome2.dll+00D82A60)/// //NH===========
define(MTAN,Rome2.dll+00D5F4CF) //=============
define(MCAP,Rome2.dll+002933FE) //=============
define(MPGH,Rome2.dll+001BDF52) //=============
define(MPPS,Rome2.dll+003190B8) //=============
define(MSTP,Rome2.dll+00FC09E7) //==#==========
define(GDMD,Rome2.dll+00EFB900) //===#=========
define(GDM1,Rome2.dll+00763440) //===#=========
define(MOAM,Rome2.dll+006DEAC0) //=======#=====
define(GDMS,Rome2.dll+00E24691) //===###=#=====
define(MBUN,Rome2.dll+007B2174) //===###=#====#
define(GDM2,Rome2.dll+001890DD) //===###=#=====
define(MTSZ,Rome2.dll+006ABEAF) //=============
define(MTAP,Rome2.dll+00D96AE0) //=============
define(MTA1,Rome2.dll+0033D630) //=============
define(MSSZ,Rome2.dll+00EB504E) //=============
define(MRPS,Rome2.dll+007BBC85) //=============
define(MCPS,Rome2.dll+005A8FCC) //ne===========
define(MIPS,Rome2.dll+0025197D) //ne===========
define(MCDE,Rome2.dll+0045B523) //ne===========
define(CHKP,Rome2.dll+0108E778) //n============
define(CHKQ,Rome2.dll+01091368) //n============
define(GDM3,Rome2.dll+00138036) //new###=#=====
define(GDM4,Rome2.dll+0089D4E2) //new###=#=====
define(CHKR,Rome2.dll+005DF9CE) //new==========
define(CHKS,Rome2.dll+008FC3CE) //new==========
define(CHKU,Rome2.dll+00ED6B0E) //new==========
define(CHKV,Rome2.dll+003765A7) //new==========
define(CHKX,Rome2.dll+007BAED7) //new==========
define(CHKY,Rome2.dll+00DB9337) //new==========

define(RPPS,"Rome2.dll"+15D17A) // Surplus=====

//=========================================
// Constants used in the script (that can be changed)
define(ctMMON,#63000)  // Minimum Money
define(ctMATT,#10)     // Minimum Attributes
define(ctMAGE,#40)     // Maximum Age
define(ctPMPO,#10)     // Province minimum Public Order
define(ctPMSP,#10)     // Province minimum Surplus

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MHPR,8b 80 0c 01 00 00 51 50 c6 45 ff 01 e8 ?? ?? ?? ?? 83 c4 08 84)
assert(MMMT,01 b7 34 05 00 00 66 c7 87 40 05 00 00 00 01 e8 ?? ?? ?? ?? 84)
assert(MMMS,29 96 34 05 00 00 8d 44 8e 44 8b b6 38 05 00 00 8b 86 bc 01 00)
assert(MSCR,8b 82 d0 05 00 00 6a 40 8d 4d e8 89 45 f8 e8 ?? ?? ?? ?? 8d 4d)
assert(MAPC,89 46 1c 5e 5d c2 04 00 57 8b ce e8 ?? ?? ?? ?? 5f 5e 5d c2 04)
assert(MAPT,2b c2 89 41 74 5d c2 04 00 c7 41 74 00 00 00 00 5d c2 04 00 ??)
assert(MAPA,2b c2 89 41 1c 5d c2 04 00 c7 41 1c 00 00 00 00 5d c2 04 00 ??)
assert(MSPE,8b 45 e0 2b 46 28 89 07 0f 89 ?? ?? ?? ?? 8b 56 28 2b 56 30 0f)
assert(MPPO,89 56 0c 8b 4e 14 8b c2 3b c1 ?? ?? 8b 4e 10 3b c8 ?? ?? 89 4e)
assert(MMCA,8b 46 08 85 c0 ?? ?? 8b 4d 10 39 41 08 ?? ?? 83 4d fc 01 8b 13)
assert(MAAP,c7 41 1c 00 00 00 00 c7 81 ac 00 00 00 ff ff ff ff c3 ?? ?? ??)
assert(MART,8b 0e 83 79 34 00 0f 85 ?? ?? ?? ?? 8b 41 30 85 c0 ?? ?? 8b 00)
assert(MTAN,89 4e 54 8b 46 48 85 c0 ?? ?? 8b 00 85 c0 ?? ?? 8b 00 8b 80 8c)
assert(MCAP,f3 0f 11 86 b0 00 00 00 e8 ?? ?? ?? ?? 5e 8b e5 5d c2 04 00 ??)
assert(MPGH,8b f8 39 7e 08 ?? ?? 8d a4 24 00 00 00 00 8b ce e8 ?? ?? ?? ??)
assert(MPPS,8b f1 8b 46 04 89 45 fc 8b 06 8b 98 98 00 00 00 8b 88 94 00 00)
assert(MSTP,89 be 3c 09 00 00 8b 86 18 09 00 00 3b 86 24 09 00 00 ?? ?? 84)
assert(GDMD,55 8b ec 53 56 8b 75 08 8b 86 50 02 00 00 8b 40 0c 48 8b d9 83)
assert(GDM1,55 8b ec 83 ec 5c 53 56 8b f1 8b 8e 54 02 00 00 57 33 ff 3b cf)
assert(MOAM,f3 0f 5c c1 0f 2f c8 f3 0f 11 86 c4 0f 00 00 0f 86 ?? ?? ?? ??)
assert(GDMS,8b be 0c 07 00 00 3b f8 ?? ?? 2b f8 89 be 0c 07 00 00 5f 5e 5b)
assert(MBUN,8b 8f 08 07 00 00 db 87 08 07 00 00 85 c9 ?? ?? d8 05 ?? ?? ??)
assert(GDM2,89 8e 0c 07 00 00 89 be 38 0b 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ??)
assert(MTSZ,89 4e 54 8b 50 78 8a 48 7c f3 0f 10 80 80 00 00 00 89 55 f4 8d)
assert(MTAP,c7 81 44 01 00 00 ff ff ff ff c7 41 74 00 00 00 00 c3 cc cc cc)
assert(MTA1,c7 41 74 00 00 00 00 5d c2 04 00 cc cc cc ?? ?? ?? ?? ?? ?? ??)
assert(MSSZ,89 46 54 8b 56 28 8b 52 08 8d 4e 28 8d 45 08 50 89 75 08 ff d2)
assert(MRPS,03 d0 3b 51 1c ?? ?? 8b 76 1c 01 46 08 5b 5f 5e 8b e5 5d c2 08)
assert(MCPS,8b 46 0c 3b 46 10 0f 82 ?? ?? ?? ?? 53 57 6a 02 6a 30 e8 ?? ??)
assert(MIPS,8b 46 0c 3b 46 10 ?? ?? 6a 02 6a 30 e8 ?? ?? ?? ?? 8b d8 83 c4)
assert(MCDE,8b 55 0c 8b 42 04 56 8b 75 08 2b 46 04 57 8d 04 40 03 c0 03 c0)
assert(CHKP,8b 4d 10 8b 7d 08 8b c1 8b d1 03 c6 3b fe ?? ?? 3b f8 0f 82 ??)
assert(CHKQ,8b 4d 10 8b 7d 08 8b c1 8b d1 03 c6 3b fe ?? ?? 3b f8 0f 82 ??)
assert(GDM3,89 81 0c 07 00 00 f3 0f 10 05 ?? ?? ?? ?? 51 f3 0f 11 04 24 e8)
assert(GDM4,d9 9e 34 0b 00 00 8b ce e8 ?? ?? ?? ?? 8b 40 24 66 0f 6e 40 68)
assert(CHKR,55 8b 6c 24 10 0f b6 0c 2a 8b 06 33 c8 81 e1 ff 00 00 00 c1 e8)
assert(CHKS,55 8b 6c 24 10 0f b6 0c 2a 8b 06 33 c8 81 e1 ff 00 00 00 c1 e8)
assert(CHKU,55 8b 6c 24 10 0f b6 0c 2a 8b 06 33 c8 81 e1 ff 00 00 00 c1 e8)
assert(CHKV,57 8b 7c 24 14 8d 64 24 00 83 fd 07 ?? ?? ff 24 ad ?? ?? ?? ??)
assert(CHKX,57 8b 7c 24 14 8d 64 24 00 83 fd 07 ?? ?? ff 24 ad ?? ?? ?? ??)
assert(CHKY,57 8b 7c 24 14 8d 64 24 00 83 fd 07 ?? ?? ff 24 ad ?? ?? ?? ??)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_MonMinimumMoneyT)
label(_BackMMT)
label(_ExitMMT)
label(_MonMinimumMoneyS)
label(_BackMMS)
label(_ExitMMS)
label(_MonSelCommander)
label(_MonSC00)
label(_BackMSC)
label(_ExitMSC)
label(_MonActionPointsC)
label(_BackMAC)
label(_ExitMAC)
label(_MonActionPointsT)
label(_MonAT00)
label(_BackMAT)
label(_ExitMAT)
label(_MonActionPointsA)
label(_BackMAA)
label(_ExitMAA)
label(_MonSelProvince)
label(_BackMSP)
label(_ExitMSP)
label(_MonProvincePO)
label(_BackMPP)
label(_ExitMPP)
label(_MonMercAvail)
label(_BackMMA)
label(_ExitMMA)
label(_MonAgentAP)
label(_BackAAP)
label(_ExitAAP)
label(_MonArmyReinf)
label(_BackMAR)
label(_ExitMAR)
label(_MonTroopAttrition)
label(_BackMTA)
label(_ExitMTA)
label(_MonCommanderAP)
label(_BackCAP)
label(_ExitCAP)
label(_MonProvinceGrowth)
label(_BackMPG)
label(_ExitMPG)
label(_MonProvPopSurplus)
label(_BackPPS)
label(_ExitPPS)
label(_MonSelTroop)
label(_BackMST)
label(_ExitMST)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)
label(_GodMode1)
label(_BackGM1)
label(_ExitGM1)
label(_MonAmmo)
label(_BackMAM)
label(_ExitMAM)
label(_GodModeS)
label(_BackGMS)
label(_ExitGMS)
label(_MonBattleUnits)
label(_BackMBU)
label(_ExitMBU)
label(_GodMode2)
label(_BackGM2)
label(_ExitGM2)
label(_HackPoint)
label(_BackHPT)
label(_ExitHPT)
label(_HackPointQ)
label(_BackHPQ)
label(_ExitHPQ)
label(_MonTroopSize)
label(_BackMTS)
label(_ExitMTS)
label(_MonTroopAP)
label(_BackTAP)
label(_ExitTAP)
label(_MonTroopAP1)
label(_BackTA1)
label(_ExitTA1)
label(_MonShipSize)
label(_BackMSS)
label(_ExitMSS)
label(_MonResProgress)
label(_BackMRP)
label(_ExitMRP)
label(_MonConstProg)
label(_BackMCP)
label(_ExitMCP)
label(_MonImproProg)
label(_BackMIP)
label(_ExitMIP)
label(_MonCurDate)
label(_BackMCD)
label(_ExitMCD)
label(_GodMode3)
label(_BackGM3)
label(_ExitGM3)
label(_GodMode4)
label(_BackGM4)
label(_ExitGM4)
label(_HackPointR)
label(_BackHPR)
label(_ExitHPR)
label(_HackPointS)
label(_BackHPS)
label(_ExitHPS)
label(_HackPointU)
label(_BackHPU)
label(_ExitHPU)
label(_HackPointV)
label(_BackHPV)
label(_ExitHPV)
label(_HackPointX)
label(_BackHPX)
label(_ExitHPX)
label(_HackPointY)
label(_BackHPY)
label(_ExitHPY)
label(pMoney)
label(pPlayer)
label(pCommander)
label(pProvince)
label(pTroop)
label(pCommon)
label(iPlayerID)
label(iEnableMMM)
label(iEnableMAP)
label(iEnableMTS)
label(iEnableMBU)
label(iEnableMIA)
label(iEnableMPP)
label(iEnableMMA)
label(iEnableMAA)
label(iEnableMAR)
label(iEnableMTA)
label(iEnableMPG)
label(iEnablePPS)
label(iEnableGMD)
label(iEnableMAM)
label(iEnableMRP)
label(iEnableMCP)
label(iEnableCRC)
label(iMinMoney)
label(iMaxAge)
label(iMinAttrib)
label(iMinPO)
label(iMinSP)
label(iDate)
label(iCounter)
label(iCounterQ)
label(iCounterR)
label(iCounterS)
label(iCounterU)
label(iCounterV)
label(iCounterX)
label(iCounterY)
label(iCounterZ)
label(pFaction)
label(aFactions)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pMoney)
registersymbol(pPlayer)
registersymbol(pCommander)
registersymbol(pProvince)
registersymbol(pTroop)
registersymbol(pCommon)
registersymbol(iPlayerID)
registersymbol(iEnableMMM)
registersymbol(iEnableMAP)
registersymbol(iEnableMTS)
registersymbol(iEnableMBU)
registersymbol(iEnableMIA)
registersymbol(iEnableMPP)
registersymbol(iEnableMMA)
registersymbol(iEnableMAA)
registersymbol(iEnableMAR)
registersymbol(iEnableMTA)
registersymbol(iEnableMPG)
registersymbol(iEnablePPS)
registersymbol(iEnableGMD)
registersymbol(iEnableMAM)
registersymbol(iEnableMRP)
registersymbol(iEnableMCP)
registersymbol(iEnableCRC)
registersymbol(iMinMoney)
registersymbol(iMinAttrib)
registersymbol(iMinPO)
registersymbol(iMinSP)
registersymbol(iMaxAge)
registersymbol(iCounter)
registersymbol(iCounterQ)
registersymbol(iCounterR)
registersymbol(iCounterS)
registersymbol(iCounterU)
registersymbol(iCounterV)
registersymbol(iCounterX)
registersymbol(iCounterY)
registersymbol(iCounterZ)
registersymbol(pFaction)
registersymbol(aFactions)

//=========================================
MyCode:
//========================================= S2.4
// TBS - At the Faction Statistic Screen
_MonHumanPlayer:
 push eax
 push ecx
 push edx

 mov edx,[eax+0000010C]

 mov [pPlayer],edx

 mov eax,[edx+04]
 cmp eax,[iPlayerID]
 je _ExitMHP

 inc dword ptr [iCounterZ]          // For debugging

 mov ecx,aFactions
 mov [pFaction],ecx

 mov [iPlayerID],eax

 cmp eax,#15
 jns _ExitMHP

 lea eax,[eax+eax]
 lea eax,[ecx+eax*4]
 mov [pFaction],eax

_ExitMHP:
 pop edx
 pop ecx
 pop eax

 mov eax,[eax+0000010C]            // Original code
 jmp _BackMHP                      // Back to main code

//========================================= 150
// TBS -  During turn changing
_MonMinimumMoneyT:
 push eax
 push ecx

 add [edi+00000534],esi            // Original code (upd money)

 mov ecx,edi

 mov eax,[ecx+00000538]
 test eax,eax
 jz _ExitMMT

 mov eax,[eax+04]
 cmp eax,[iPlayerID]
 jne _ExitMMT

 cmp dword ptr [iEnableMMM],0
 je _ExitMMT                       // Jump if feature is disabled

 mov eax,[iMinMoney]
 cmp eax,[ecx+00000534]
 js _ExitMMT

 mov [ecx+00000534],eax

_ExitMMT:
 pop ecx
 pop eax
 jmp _BackMMT                      // Back to main code

//========================================= 150
// TBS -  When spending money
_MonMinimumMoneyS:
 push eax
 push ecx

 sub [esi+00000534],edx            // Original code (upd money)

 mov ecx,esi

 mov eax,[ecx+00000538]
 test eax,eax
 jz _ExitMMS

 mov eax,[eax+04]
 cmp eax,[iPlayerID]
 jne _ExitMMS

 cmp dword ptr [iEnableMMM],0
 je _ExitMMS                       // Jump if feature is disabled

 mov eax,[iMinMoney]
 cmp eax,[ecx+00000534]
 js _ExitMMS

 mov [ecx+00000534],eax

_ExitMMS:
 pop ecx
 pop eax
 jmp _BackMMS                      // Back to main code

//========================================= 2.0
// TBS - In the agent/general details window
_MonSelCommander:
 push ebx

 mov [pCommander],edx

 mov eax,[edx+00000258]
 test eax,eax
 jz _ExitMSC

 mov eax,[eax]
 test eax,eax
 jz _ExitMSC

 mov eax,[eax+04]
 cmp eax,[iPlayerID]
 jne _ExitMSC

 cmp dword ptr [iEnableMBU],0
 je _MonSC00                       // Jump if feature is disabled

 mov eax,[iMinAttrib]
// Cunning
 mov ebx,[edx+000003d0]
 cmp ebx,eax
 cmovs ebx,eax
 mov [edx+000003d0],ebx
// Zeal
 mov ebx,[edx+000003d4]
 cmp ebx,eax
 cmovs ebx,eax
 mov [edx+000003d4],ebx
// Authority
 mov ebx,[edx+000003d8]
 cmp ebx,eax
 cmovs ebx,eax
 mov [edx+000003d8],ebx
 // Ambition
 mov ebx,[edx+000005cc]
 cmp ebx,eax
 cmovs ebx,eax
 mov [edx+000005cc],ebx
 // Gravitas
 mov ebx,[edx+000005d0]
 cmp ebx,eax
 cmovs ebx,eax
 mov [edx+000005d0],ebx

_MonSC00:
 cmp dword ptr [iEnableMIA],0
 je _ExitMSC                       // Jump if feature is disabled

 mov eax,[iDate]
 mov ebx,[iMaxAge]
 sub eax,ebx
 cmp eax,[edx+00000324]
 js _ExitMSC

 mov [edx+00000324],eax

_ExitMSC:
 pop ebx

 mov eax,[edx+000005D0]            // Original code (rds Gravitas)
 jmp _BackMSC                      // Back to main code

//=========================================
// TBS (Commander)
_MonActionPointsC:
 push ecx

 mov ecx,[esi+00000258]
 test ecx,ecx
 jz _ExitMAC

 mov ecx,[ecx]
 test ecx,ecx
 jz _ExitMAC

 mov ecx,[ecx+04]
 cmp ecx,[iPlayerID]
 jne _ExitMAC

 cmp dword ptr [iEnableMAP],0
 je _ExitMAC                       // Jump if feature is disabled

 cmp eax,[esi+1C]
 js _ExitMAC

 mov eax,[esi+1C]

_ExitMAC:
 pop ecx

 mov [esi+1C],eax                  // Original code (upds AP)
 pop esi                           // Original code
 pop ebp                           // Original code
 jmp _BackMAC                      // Back to main code

//=========================================
// TBS (Troops)
_MonActionPointsT:
 push ebx

 mov ebx,[ecx+4c]
 test ebx,ebx
 jz _ExitMAT

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitMAT

 cmp dword ptr [iEnableMTS],0
 je _MonAT00                       // Jump if feature is disabled

 mov ebx,[ecx+58]
 mov [ecx+54],ebx

_MonAT00:
 cmp dword ptr [iEnableMAP],0
 je _ExitMAT                       // Jump if feature is disabled

 mov eax,[ecx+74]
 xor edx,edx

_ExitMAT:
 pop ebx

 sub eax,edx                       // Original code
 mov [ecx+74],eax                  // Original code (upds AP)
 jmp _BackMAT                      // Back to main code

//=========================================
// TBS (Agents)
_MonActionPointsA:
 push ebx

 mov ebx,[ecx+00000258]
 test ebx,ebx
 jz _ExitMAA

 mov ebx,[ebx]
 test ebx,ebx
 jz _ExitMAA

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitMAA

 cmp dword ptr [iEnableMAP],0
 je _ExitMAA                       // Jump if feature is disabled

 mov eax,[ecx+1c]
 xor edx,edx

_ExitMAA:
 pop ebx

 sub eax,edx                       // Original code
 mov [ecx+1c],eax                  // Original code (upds AP)
 jmp _BackMAA                      // Back to main code

//=========================================
// TBS - Public Order undercursor on province detail
_MonSelProvince:
 mov eax,[esi]

 mov [pProvince],eax

_ExitMSP:
 mov eax,[ebp-20]                  // Original code
 sub eax,[esi+28]                  // Original code (rds PO)
 jmp _BackMSP                      // Back to main code

//=========================================
// TBS - During Turn changing
_MonProvincePO:
 cmp dword ptr [iEnableMPP],0
 je _ExitMPP                       // Jump if feature is disabled

 mov ecx,[edi]                     // Get pProvince
 test ecx,ecx
 jz _ExitMPP

 mov ecx,[ecx+00000080]            // Get ppPlayer
 test ecx,ecx
 jz _ExitMPP

 mov ecx,[ecx]                     // Get pPlayer
 test ecx,ecx
 jz _ExitMPP

 mov ecx,[ecx+04]                  // Get iPlayerID
 cmp ecx,[iPlayerID]
 jne _ExitMPP

 mov ecx,[iMinPO]                  // Minimum PO value
 cmp edx,ecx
 cmovs edx,ecx

_ExitMPP:
 mov [esi+0C],edx                  // Original code (upd PO)
 mov ecx,[esi+14]                  // Original code
 jmp _BackMPP                      // Back to main code

//========================================= 180
// TBS - Mercenaries available to player's commander
_MonMercAvail:
 test edi,edi                      // Is there a commander?
 jz _ExitMMA

 mov eax,[edi+00000258]            // Get pOwner
 test eax,eax
 jz _ExitMMA

 mov eax,[eax]                     // Get player
 test eax,eax
 jz _ExitMMA

 mov eax,[eax+04]
 cmp eax,[iPlayerID]
 jne _ExitMMA

 cmp dword ptr [iEnableMMA],0
 je _ExitMMA                       // Jump if feature is disabled

 mov eax,[esi+10]
 cmp eax,[esi+08]
 js _ExitMMA

 mov [esi+08],eax

_ExitMMA:
 mov eax,[esi+08]                  // Original code (rd MA)
 test eax,eax                      // Original code
 jmp _BackMMA                      // Back to main code

//=========================================
// TBS - Agent can act again
_MonAgentAP:
 push eax

 mov eax,[ecx+00000258]            // Get pOwner
 test eax,eax
 jz _ExitAAP

 mov eax,[eax]                     // Get player
 test eax,eax
 jz _ExitAAP

 mov eax,[eax+04]
 cmp eax,[iPlayerID]
 jne _ExitAAP

 cmp dword ptr [iEnableMAA],0
 je _ExitAAP                       // Jump if feature is disabled

 mov eax,[ecx+18]
 mov [ecx+1C],eax
 mov [ecx+000000AC],eax
 mov byte ptr [ecx+00000638],00

 pop eax
 ret
//====
_ExitAAP:
 pop eax

 mov [ecx+1C],00000000             // Original code (AP = 0)
 jmp _BackAAP                      // Back to main code

//========================================= s2.0
// TBS - During Turn changing
_MonArmyReinf:
 push edi
 push esi

 mov edi,[esi]                     // Get pReinf

 cmp dword ptr [iEnableMAR],0
 je _ExitMAR                       // Jump if feature is disabled

 mov esi,[edi+30]                  // Get ppArmy
 test esi,esi
 jz _ExitMAR

 mov esi,[esi]                     // Get pArmy
 test esi,esi
 jz _ExitMAR

 mov esi,[esi]                     // Get Army
 test esi,esi
 jz _ExitMAR

 mov esi,[esi+000000bc]            // Get pOwner
 test esi,esi
 jz _ExitMAR

 mov esi,[esi]                     // Get player
 test esi,esi
 jz _ExitMAR

 mov esi,[esi+04]
 cmp esi,[iPlayerID]
 jne _ExitMAR

 mov dword ptr [edi+34],00         // Finish it

_ExitMAR:
 pop esi
 pop edi

 mov ecx,[esi]                     // Original code
 cmp dword ptr [ecx+34],00         // Original code (rd #Turns)
 jmp _BackMAR                      // Back to main code

//=========================================
// TBS During Turn
_MonTroopAttrition:
 mov eax,[esi+4c]
 test eax,eax
 jz _ExitMTA

 mov eax,[eax+04]
 cmp eax,[iPlayerID]
 jne _ExitMTA

 cmp dword ptr [iEnableMTA],0
 je _ExitMTA                       // Jump if feature is disabled

 mov ecx,[esi+58]

_ExitMTA:
 mov [esi+54],ecx                  // Original code (upds TS)
 mov eax,[esi+48]                  // Original code
 jmp _BackMTA                      // Back to main code

//=========================================
// TBS - Commander can act again
_MonCommanderAP:
 push eax

 cmp dword ptr [iEnableMAA],0
 je _ExitCAP                       // Jump if feature is disabled

 mov eax,[esi+00000258]            // Get pOwner
 test eax,eax
 jz _ExitCAP

 mov eax,[eax]                     // Get player
 test eax,eax
 jz _ExitCAP

 mov eax,[eax+04]
 cmp eax,[iPlayerID]
 jne _ExitCAP

 mov eax,[esi+1C]
 mov [esi+000000AC],eax

_ExitCAP:
 pop eax

 movss [esi+000000B0],xmm0         // Original code
 jmp _BackCAP                      // Back to main code

//=========================================
// TBS - During Turn changing
_MonProvinceGrowth:
 push ebx

 cmp dword ptr [iEnableMPG],0
 je _ExitMPG                       // Jump if feature is disabled

 mov ebx,[esi]                     // Get pProvince
 test ebx,ebx
 jz _ExitMPG

 mov ebx,[ebx+00000080]            // Get pPlayer
 test ebx,ebx
 jz _ExitMPG

 mov ebx,[ebx]                     // Get player
 test ebx,ebx
 jz _ExitMPG

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitMPG

 mov [esi+08],eax

_ExitMPG:
 pop ebx

 mov edi,eax                       // Original code
 cmp [esi+08],edi                  // Original code (rd growth)
 jmp _BackMPG                      // Back to main code

//========================================= s1.3
// TBS - When Growth Undercursor
_MonProvPopSurplus:
 push ebx

 mov esi,ecx                       // Original code

 mov ebx,[ebp+04]
 cmp ebx,RPPS
 jne _ExitPPS

 mov ebx,[esi]                     // Get pProvince
 test ebx,ebx
 jz _ExitPPS

 mov [pProvince],ebx

 cmp dword ptr [iEnablePPS],0
 je _ExitPPS                       // Jump if feature is disabled

 mov ebx,[ebx+00000080]            // Get pPlayer
 test ebx,ebx
 jz _ExitPPS

 mov ebx,[ebx]                     // Get player
 test ebx,ebx
 jz _ExitPPS

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitPPS

 mov eax,[iMinSP]
 cmp eax,[esi+04]
 js _ExitPPS

 mov [esi+04],eax

_ExitPPS:
 pop ebx

 mov eax,[esi+04]                  // Original code (rd Pop Surplus)
 jmp _BackPPS                      // Back to main code

//========================================= s1.2 (v190)
// RTS - Selected Troop
_MonSelTroop:
 push eax

 mov [pTroop],edi

 test edi,edi
 jz _ExitMST

 cmp byte ptr [edi+000000f8],01
 jne _ExitMST

 mov eax,[edi+000000cc]
 test eax,eax
 jz _ExitMST

 mov eax,[eax+30]

 mov [pCommon],eax

_ExitMST:
 pop eax

 mov [esi+0000093c],edi            // Original code
 jmp _BackMST                      // Back to main code

//========================================= s1.2
// RTS - During Battle (Horses)
_GodMode:
 push ecx

 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 mov ecx,[esp+08]

 mov ecx,[ecx+00000258]            // pTroopIndex
 test ecx,ecx
 jz _ExitGMD

 mov ecx,[ecx+30]
 cmp ecx,[pCommon]
 jne _ExitGMD

 pop ecx
 ret 0004
//==
_ExitGMD:
 pop ecx

 push ebp                          // Original code
 mov ebp,esp                       // Original code
 push ebx                          // Original code
 push esi                          // Original code
 jmp _BackGMD                      // Back to main code

//========================================= s1.2
// RTS - During Battle (Soldiers)
// ECX = TroopIndex
_GodMode1:
 push eax

 cmp dword ptr [iEnableGMD],0
 je _ExitGM1                       // Jump if feature is disabled

 mov eax,[ecx+00000258]            // pTroopIndex
 test eax,eax
 jz _ExitGM1

 mov eax,[eax+30]
 cmp eax,[pCommon]
 jne _ExitGM1

 pop eax
 ret 0004
//==
_ExitGM1:
 pop eax

 push ebp                          // Original code
 mov ebp,esp                       // Original code
 sub esp,5C                        // Original code
 jmp _BackGM1                      // Back to main code

//========================================= s1.2 170
// RTS - During Battle
// ESI = Troop_Index
_MonAmmo:
 push ecx

 cmp dword ptr [iEnableMAM],0
 je _ExitMAM                       // Jump if feature is disabled

 mov ecx,[esi+30]
 cmp ecx,[pCommon]
 jne _ExitMAM

 cvtsi2ss xmm0,[esi+00000fc8]
 xorps xmm1,xmm1

_ExitMAM:
 pop ecx

 subss xmm0,xmm1                   // Original code
 comiss xmm1,xmm0                  // Original code
 jmp _BackMAM                      // Back to main code

//========================================= 170
// RTS - During Battle (Ship)
// ESI = Ship
_GodModeS:
 push ebx

 cmp dword ptr [iEnableGMD],0
 je _ExitGMS                       // Jump if feature is disabled

 mov edi,[esi+00000258]            // pTroopIndex
 test edi,edi
 jz _ExitGMS

 mov edi,[edi+30]
 cmp edi,[pCommon]
 jne _ExitGMS

 mov edi,#63000
 mov ebx,[esi+00000708]
 cmp ebx,edi
 cmovs ebx,edi

 mov [esi+00000708],ebx
 mov [esi+0000070c],ebx
 xor eax,eax

_ExitGMS:
 pop ebx

 mov edi,[esi+0000070c]            // Original code (rd cHP)
 jmp _BackGMS                      // Back to main code

//========================================= 190
// RTS - During Battle
// ESI = UNIT
_MonBattleUnits:
 push ebx

 cmp dword ptr [iEnableGMD],0
 je _ExitMBU                       // Jump if feature is disabled

 mov ecx,[edi+00000258]            // pTroopIndex
 test ecx,ecx
 jz _ExitMBU

 mov ecx,[ecx+30]
 cmp ecx,[pCommon]
 jne _ExitMBU

 mov ecx,#63000
 mov ebx,[esi+00000708]
 cmp ebx,ecx
 cmovs ebx,ecx

 mov [edi+00000708],ebx
 mov [edi+0000070c],ebx

_ExitMBU:
 pop ebx

 mov ecx,[edi+00000708]            // Original code
 jmp _BackMBU                      // Back to main code

//========================================= s1.2 170
// RTS - During Battle (Unit on Fire)
// ESI = UNIT
_GodMode2:
 push ebx
 push edi

 cmp dword ptr [iEnableGMD],0
 je _ExitGM2                       // Jump if feature is disabled

 mov edi,[esi+00000258]            // pTroopIndex
 test edi,edi
 jz _ExitGM2

 mov edi,[edi+30]
 cmp edi,[pCommon]
 jne _ExitGM2

 mov edi,#63000
 mov ebx,[esi+00000708]
 cmp ebx,edi
 cmovs ebx,edi

 mov [esi+00000708],ebx
 mov ecx,ebx

_ExitGM2:
 pop edi
 pop ebx

 mov [esi+0000070C],ecx            // Original code (upd cHP)
 jmp _BackGM2                      // Back to main code

//=========================================
// Cheating CRC check
_HackPoint:
 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPT

 cmp dword ptr [iEnableCRC],0
 je _ExitHPT                       // Jump if feature is disabled

 cmp esi,LUDO
 jl _ExitHPT

 cmp esi,LUDOEND
 jge _ExitHPT

 mov edi,LUDO
 sub esi,edi
 mov edi,CodeCopy
 add esi,edi

 inc dword ptr [iCounter]

_ExitHPT:
 mov ecx,[ebp+10]                  // Original code
 mov edi,[ebp+08]                  // Original code
 jmp _BackHPT                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointQ:
 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPQ

 cmp dword ptr [iEnableCRC],0
 je _ExitHPQ                       // Jump if feature is disabled

 cmp esi,LUDO
 jl _ExitHPQ

 cmp esi,LUDOEND
 jge _ExitHPQ

 mov edi,LUDO
 sub esi,edi
 mov edi,CodeCopy
 add esi,edi

 inc dword ptr [iCounterQ]

_ExitHPQ:
 mov ecx,[ebp+10]                  // Original code
 mov edi,[ebp+08]                  // Original code
 jmp _BackHPQ                      // Back to main code (keeping the template)

//=========================================
// TBS (After a battle)
_MonTroopSize:
 push ebx

 mov ebx,[esi+4c]
 test ebx,ebx
 jz _ExitMTS

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitMTS

 cmp dword ptr [iEnableMTS],0
 je _ExitMTS                       // Jump if feature is disabled

 mov ecx,[esi+58]

_ExitMTS:
 pop ebx

 mov [esi+54],ecx                  // Original code (upds size)
 mov edx,[eax+78]                  // Original code
 jmp _BackMTS                      // Back to main code

//=========================================
// TBS (After a battle)
_MonTroopAP:
 push ebx

 mov ebx,[ecx+4c]
 test ebx,ebx
 jz _ExitTAP

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitTAP

 cmp dword ptr [iEnableMAP],0
 je _ExitTAP                       // Jump if feature is disabled

 mov ebx,[ecx+74]
 mov [ecx+00000144],ebx

 pop ebx
 ret
//==
_ExitTAP:
 pop ebx

 mov [ecx+00000144],FFFFFFFF       // Original code
 jmp _BackTAP                      // Back to main code

//=========================================
// TBS (After a battle)
_MonTroopAP1:
 push ebx

 mov ebx,[ecx+4c]
 test ebx,ebx
 jz _ExitTA1

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitTA1

 cmp dword ptr [iEnableMAP],0
 je _ExitTA1                       // Jump if feature is disabled

 mov ebx,[ecx+74]
 mov [ecx+00000144],ebx

 pop ebx

 pop ebp
 ret 0004
//==
_ExitTA1:
 pop ebx

 mov [ecx+74],00000000             // Original code
 jmp _BackTA1                      // Back to main code

//=========================================
// TBS (at open sea)(in fact #sailors)
_MonShipSize:
 push ebx

 mov ebx,[esi+4c]
 test ebx,ebx
 jz _ExitMSS

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitMSS

 cmp dword ptr [iEnableMTS],0
 je _ExitMSS                       // Jump if feature is disabled

 mov eax,[esi+58]

_ExitMSS:
 pop ebx

 mov [esi+54],eax                  // Original code (upds size)
 mov edx,[esi+28]                  // Original code
 jmp _BackMSS                      // Back to main code

//=========================================
// TBS During turn changing
_MonResProgress:
 push ebx

 mov ebx,[esi+18]
 test ebx,ebx
 jz _ExitMRP

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitMRP

 cmp dword ptr [iEnableMRP],0
 je _ExitMRP                       // Jump if feature is disabled

 mov edx,[ecx+1C]                  // Get value_needed
 mov ebx,[esi+1c]                  // Get pResearchProgress
 mov [ebx+08],edx                  // Complete research

_ExitMRP:
 pop ebx

 add edx,eax                       // Original code
 cmp edx,[ecx+1C]                  // Original code
 jmp _BackMRP                      // Back to main code

//========================================= s2.0
// TBS During turn changing
_MonConstProg:
 push ebx

 mov ebx,[ebp+2c]
 test ebx,ebx
 jz _ExitMCP

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitMCP

 cmp dword ptr [iEnableMCP],0
 je _ExitMCP                       // Jump if feature is disabled

 mov ebx,[esi+10]                  // Get value_needed
 mov [esi+0c],ebx                  // Complete construction

_ExitMCP:
 pop ebx

 mov eax,[esi+0C]                  // Original code (Prog)
 cmp eax,[esi+10]                  // Original code
 jmp _BackMCP                      // Back to main code

//========================================= s2.0
// TBS During turn changing
_MonImproProg:
 push ebx

 mov ebx,[ebp+2c]
 test ebx,ebx
 jz _ExitMIP

 mov ebx,[ebx+04]
 cmp ebx,[iPlayerID]
 jne _ExitMIP

 cmp dword ptr [iEnableMCP],0
 je _ExitMIP                       // Jump if feature is disabled

 mov ebx,[esi+10]                  // Get value_needed
 mov [esi+0c],ebx                  // Complete construction

_ExitMIP:
 pop ebx

 mov eax,[esi+0C]                  // Original code (Prog)
 cmp eax,[esi+10]                  // Original code
 jmp _BackMIP                      // Back to main code

//========================================= s2.0
// TBS In Main Game Screen
_MonCurDate:
 mov edx,[ebp+0C]                  // Original code
 mov eax,[edx+04]                  // Original code (rd Date)

 mov [iDate],eax

_ExitMCD:
 jmp _BackMCD                      // Back to main code

//========================================= 170
// RTS - During Battle (More protection against Fire)
// ECX = UNIT
_GodMode3:
 push ebx
 push edi
 push esi

 mov esi,ecx

 cmp dword ptr [iEnableGMD],0
 je _ExitGM3                       // Jump if feature is disabled

 mov edi,[esi+00000258]            // pTroopIndex
 test edi,edi
 jz _ExitGM3

 mov edi,[edi+30]
 cmp edi,[pCommon]
 jne _ExitGM3

 mov edi,#63000
 mov ebx,[esi+00000708]
 cmp ebx,edi
 cmovs ebx,edi

 mov [esi+00000708],ebx
 mov eax,ebx

_ExitGM3:
 pop esi
 pop edi
 pop ebx

 mov [ecx+0000070C],eax            // Original code (upd cHP)
 jmp _BackGM3                      // Back to main code

//========================================= 170
// RTS - During Battle (More protection against Fire)
// ESI = UNIT
_GodMode4:
 push edi

 fstp dword ptr [esi+00000B34]     // Original code (upd Damage)

 cmp dword ptr [iEnableGMD],0
 je _ExitGM4                       // Jump if feature is disabled

 mov edi,[esi+00000258]            // pTroopIndex
 test edi,edi
 jz _ExitGM4

 mov edi,[edi+30]
 cmp edi,[pCommon]
 jne _ExitGM4

 xor edi,edi
 mov [esi+00000b34],edi            // Damage = 0

_ExitGM4:
 pop edi
 jmp _BackGM4                      // Back to main code

//=========================================
// Cheating CRC check
_HackPointR:
 push ebp                          // Original code
 mov ebp,[esp+10]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPR

 cmp dword ptr [iEnableCRC],0
 je _ExitHPR                       // Jump if feature is disabled

 cmp ebp,LUDO
 jl _ExitHPR

 cmp ebp,LUDOEND
 jge _ExitHPR

 mov ecx,LUDO
 sub ebp,ecx
 mov ecx,CodeCopy
 add ebp,ecx

 inc dword ptr [iCounterR]

_ExitHPR:
 jmp _BackHPR                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointS:
 push ebp                          // Original code
 mov ebp,[esp+10]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPS

 cmp dword ptr [iEnableCRC],0
 je _ExitHPS                       // Jump if feature is disabled

 cmp ebp,LUDO
 jl _ExitHPS

 cmp ebp,LUDOEND
 jge _ExitHPS

 mov ecx,LUDO
 sub ebp,ecx
 mov ecx,CodeCopy
 add ebp,ecx

 inc dword ptr [iCounterS]

_ExitHPS:
 jmp _BackHPS                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointU:
 push ebp                          // Original code
 mov ebp,[esp+10]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPU

 cmp dword ptr [iEnableCRC],0
 je _ExitHPU                       // Jump if feature is disabled

 cmp ebp,LUDO
 jl _ExitHPU

 cmp ebp,LUDOEND
 jge _ExitHPU

 mov ecx,LUDO
 sub ebp,ecx
 mov ecx,CodeCopy
 add ebp,ecx

 inc dword ptr [iCounterU]

_ExitHPU:
 jmp _BackHPU                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointV:
 push edi                          // Original code
 mov edi,[esp+14]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPV

 cmp dword ptr [iEnableCRC],0
 je _ExitHPV                       // Jump if feature is disabled

 cmp edi,LUDO
 jl _ExitHPV

 cmp edi,LUDOEND
 jge _ExitHPV

 push ecx
 mov ecx,LUDO
 sub edi,ecx
 mov ecx,CodeCopy
 add edi,ecx
 pop ecx

 inc dword ptr [iCounterV]

_ExitHPV:
 jmp _BackHPV                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointX:
 push edi                          // Original code
 mov edi,[esp+14]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPX

 cmp dword ptr [iEnableCRC],0
 je _ExitHPX                       // Jump if feature is disabled

 cmp edi,LUDO
 jl _ExitHPX

 cmp edi,LUDOEND
 jge _ExitHPX

 push ecx
 mov ecx,LUDO
 sub edi,ecx
 mov ecx,CodeCopy
 add edi,ecx
 pop ecx

 inc dword ptr [iCounterX]

_ExitHPX:
 jmp _BackHPX                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointY:
 push edi                          // Original code
 mov edi,[esp+14]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPY

 cmp dword ptr [iEnableCRC],0
 je _ExitHPY                       // Jump if feature is disabled

 cmp edi,LUDO
 jl _ExitHPY

 cmp edi,LUDOEND
 jge _ExitHPY

 push ecx
 mov ecx,LUDO
 sub edi,ecx
 mov ecx,CodeCopy
 add edi,ecx
 pop ecx

 inc dword ptr [iCounterY]

_ExitHPY:
 jmp _BackHPY                      // Back to main code (keeping the template)

//=========================================
 db '===============================&gt;'
 db 'CE6.3 Script by Recifense 013114'
//=========================================
// Variables
iEnableMMM:
 dd 0
iEnableMAP:
 dd 0
iEnableMTS:
 dd 0
iEnableMBU:
 dd 0
iEnableMIA:
 dd 0
iEnableMPP:
 dd 0
iEnableMMA:
 dd 0
iEnableMAA:
 dd 0
iEnableMAR:
 dd 0
iEnableMTA:
 dd 0
iEnableMPG:
 dd 0
iEnablePPS:
 dd 0
iEnableGMD:
 dd 0
iEnableMAM:
 dd 0
iEnableMRP:
 dd 0
iEnableMCP:
 dd 0
iEnableCRC:
 dd 1
pMoney:
 dd 0
iPlayerID:
 dd #9999
pPlayer:
 dd MyCode
pCommander:
 dd 0
pProvince:
 dd 0
pTroop:
 dd 0
pCommon:
 dd MyCode
iMinMoney:
 dd ctMMON
iMaxAge:
 dd ctMAGE
iMinAttrib:
 dd ctMATT
iMinPO:
 dd ctPMPO
iMinSP:
 dd ctPMSP
iDate:
 dd #481
iCounter:
 dd 0
iCounterQ:
 dd 0
iCounterR:
 dd 0
iCounterS:
 dd 0
iCounterU:
 dd 0
iCounterV:
 dd 0
iCounterX:
 dd 0
iCounterY:
 dd 0
iCounterZ:
 dd 0
pFaction:
 dd aFactions
aFactions:
 db 'Unknown '
 db 'Unknown '
 db 'Rome    '
 db 'Carthage'
 db 'Macedon '
 db 'Egypt   '
 db 'Seleucid'
 db 'Parthia '
 db 'Pontus  '
 db 'Arverni '
 db 'Iceni   '
 db 'Suebi   '
 db 'Athens  '
 db 'Epirus  '
 db 'Sparta  '
 db 'Unknown '

//=========================================
// Hacking Points
MHPR:
 jmp _MonHumanPlayer
 nop
_BackMHP:

MMMT:
 jmp _MonMinimumMoneyT
 nop
_BackMMT:

MMMS:
 jmp _MonMinimumMoneyS
 nop
_BackMMS:

MSCR:
 jmp _MonSelCommander
 nop
_BackMSC:

MAPC:
 jmp _MonActionPointsC
_BackMAC:

MAPT:
 jmp _MonActionPointsT
_BackMAT:

MAPA:
 jmp _MonActionPointsA
_BackMAA:

MSPE:
 jmp _MonSelProvince
 nop
_BackMSP:

MPPO:
 jmp _MonProvincePO
 nop
_BackMPP:

MMCA:
 jmp _MonMercAvail
_BackMMA:

MAAP:
 jmp _MonAgentAP
 nop
 nop
_BackAAP:

MART:
 jmp _MonArmyReinf
 nop
_BackMAR:

MTAN:
 jmp _MonTroopAttrition
 nop
_BackMTA:

MCAP:
 jmp _MonCommanderAP
 nop
 nop
 nop
_BackCAP:

MPGH:
 jmp _MonProvinceGrowth
_BackMPG:

MPPS:
 jmp _MonProvPopSurplus
_BackPPS:

MSTP:
 jmp _MonSelTroop
 nop
_BackMST:

GDMD:
// jmp _GodMode
_BackGMD:

GDM1:
// jmp _GodMode1
// nop
_BackGM1:

MOAM:
 jmp _MonAmmo
 nop
 nop
_BackMAM:

GDMS:
 jmp _GodModeS
 nop
_BackGMS:

MBUN:
 jmp _MonBattleUnits
 nop
_BackMBU:

GDM2:
 jmp _GodMode2
 nop
_BackGM2:

CHKP:
 jmp _HackPoint
 nop
_BackHPT:

CHKQ:
 jmp _HackPointQ
 nop
_BackHPQ:

MTSZ:
 jmp _MonTroopSize
 nop
_BackMTS:

MTAP:
 jmp _MonTroopAP
 db 90 90 90 90 90
_BackTAP:

MTA1:
 jmp _MonTroopAP1
 db 90 90
_BackTA1:

MSSZ:
 jmp _MonShipSize
 nop
_BackMSS:

MRPS:
 jmp _MonResProgress
_BackMRP:

MCPS:
 jmp _MonConstProg
 nop
_BackMCP:

MIPS:
 jmp _MonImproProg
 nop
_BackMIP:

MCDE:
 jmp _MonCurDate
 nop
_BackMCD:

GDM3:
 jmp _GodMode3
 nop
_BackGM3:

GDM4:
 jmp _GodMode4
 nop
_BackGM4:

CHKR:
 jmp _HackPointR
_BackHPR:

CHKS:
 jmp _HackPointS
_BackHPS:

CHKU:
 jmp _HackPointU
_BackHPU:

CHKV:
 jmp _HackPointV
_BackHPV:

CHKX:
 jmp _HackPointX
_BackHPX:

CHKY:
 jmp _HackPointY
_BackHPY:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MHPR:
// mov eax,[eax+0000010C]
 db 8b 80 0c 01 00 00

MMMT:
// add [edi+00000534],esi
 db 01 b7 34 05 00 00

MMMS:
// sub [esi+00000534],edx
 db 29 96 34 05 00 00

MSCR:
// mov eax,[edx+000005D0]
 db 8b 82 d0 05 00 00

MAPC:
// mov [esi+1C],eax
// pop esi
// pop ebp
 db 89 46 1c 5e 5d

MAPT:
// sub eax,edx
// mov [ecx+74],eax
 db 2b c2 89 41 74

MAPA:
// sub eax,edx
// mov [ecx+1c],eax
 db 2b c2 89 41 1c

MSPE:
// mov eax,[ebp-20]
// sub eax,[esi+28]
 db 8b 45 e0 2b 46 28

MPPO:
// mov [esi+0C],edx
// mov ecx,[esi+14]
 db 89 56 0c 8b 4e 14

MMCA:
// mov eax,[esi+08]
// test eax,eax
 db 8b 46 08 85 c0

MAAP:
// mov [ecx+1C],00000000
 db c7 41 1c 00 00 00 00

MART:
// mov ecx,[esi]
// cmp dword ptr [ecx+34],00
 db 8b 0e 83 79 34 00

MTAN:
// mov [esi+54],ecx
// mov eax,[esi+48]
 db 89 4e 54 8b 46 48

MCAP:
// movss [esi+000000B0],xmm0
 db f3 0f 11 86 b0 00 00 00

MPGH:
// mov edi,eax
// cmp [esi+08],edi
 db 8b f8 39 7e 08

MPPS:
// mov esi,ecx
// mov eax,[esi+04]
 db 8b f1 8b 46 04

MSTP:
// mov [esi+0000093c],edi
 db 89 be 3c 09 00 00

GDMD:
// push ebp
// mov ebp,esp
// push ebx
// push esi
 db 55 8b ec 53 56

GDM1:
// push ebp
// mov ebp,esp
// sub esp,5C
 db 55 8b ec 83 ec 5c

MOAM:
// subss xmm0,xmm1
// comiss xmm1,xmm0
 db f3 0f 5c c1 0f 2f c8

GDMS:
// mov edi,[esi+0000070C]
 db 8b be 0c 07 00 00

MBUN:
// mov ecx,[edi+00000708]
 db 8b 8f 08 07 00 00

GDM2:
// mov [esi+0000070C],ecx
 db 89 8e 0c 07 00 00

CHKP:
// mov ecx,[ebp+10]
// mov edi,[ebp+08]
 db 8b 4d 10 8b 7d 08

CHKQ:
// mov ecx,[ebp+10]
// mov edi,[ebp+08]
 db 8b 4d 10 8b 7d 08

MTSZ:
// mov [esi+54],ecx
// mov edx,[eax+78]
 db 89 4e 54 8b 50 78

MTAP:
// mov [ecx+00000144],FFFFFFFF
 db c7 81 44 01 00 00 ff ff ff ff

MTA1:
// mov [ecx+74],00000000
 db c7 41 74 00 00 00 00

MSSZ:
// mov [esi+54],eax
// mov edx,[esi+28]
 db 89 46 54 8b 56 28

MRPS:
// add edx,eax
// cmp edx,[ecx+1C]
 db 03 d0 3b 51 1c

MCPS:
// mov eax,[esi+0C]
// cmp eax,[esi+10]
 db 8b 46 0c 3b 46 10

MIPS:
// mov eax,[esi+0C]
// cmp eax,[esi+10]
 db 8b 46 0c 3b 46 10

MCDE:
// mov edx,[ebp+0C]
// mov eax,[edx+04]
 db 8b 55 0c 8b 42 04

GDM3:
// mov [ecx+0000070C],eax
 db 89 81 0c 07 00 00

GDM4:
// fstp dword ptr [esi+00000B34]
 db d9 9e 34 0b 00 00

CHKR:
// push ebp
// mov ebp,[esp+10]
 db 55 8b 6c 24 10

CHKS:
// push ebp
// mov ebp,[esp+10]
 db 55 8b 6c 24 10

CHKU:
// push ebp
// mov ebp,[esp+10]
 db 55 8b 6c 24 10

CHKV:
// push edi
// mov edi,[esp+14]
 db 57 8b 7c 24 14

CHKX:
// push edi
// mov edi,[esp+14]
 db 57 8b 7c 24 14

CHKY:
// push edi
// mov edi,[esp+14]
 db 57 8b 7c 24 14

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pMoney)
unregistersymbol(pPlayer)
unregistersymbol(pCommander)
unregistersymbol(pProvince)
unregistersymbol(pTroop)
unregistersymbol(pCommon)
unregistersymbol(iPlayerID)
unregistersymbol(iEnableMMM)
unregistersymbol(iEnableMAP)
unregistersymbol(iEnableMTS)
unregistersymbol(iEnableMBU)
unregistersymbol(iEnableMIA)
unregistersymbol(iEnableMPP)
unregistersymbol(iEnableMMA)
unregistersymbol(iEnableMAA)
unregistersymbol(iEnableMAR)
unregistersymbol(iEnableMTA)
unregistersymbol(iEnableMPG)
unregistersymbol(iEnablePPS)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMAM)
unregistersymbol(iEnableMRP)
unregistersymbol(iEnableMCP)
unregistersymbol(iEnableCRC)
unregistersymbol(iMinMoney)
unregistersymbol(iMinAttrib)
unregistersymbol(iMinPO)
unregistersymbol(iMinSP)
unregistersymbol(iMaxAge)
unregistersymbol(iCounter)
unregistersymbol(iCounterQ)
unregistersymbol(iCounterR)
unregistersymbol(iCounterS)
unregistersymbol(iCounterU)
unregistersymbol(iCounterV)
unregistersymbol(iCounterX)
unregistersymbol(iCounterY)
unregistersymbol(iCounterZ)
unregistersymbol(pFaction)
unregistersymbol(aFactions)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
-------------------------------
v:1.8.0 (8891)
define(MHPR,Rome2.dll+00b23e2e) //new==#====#
define(MMMT,Rome2.dll+005b40ab) //new==#=====
define(MMMS,Rome2.dll+00ee6a31) //new==#=====
define(MSCR,Rome2.dll+0043e842) //===========
define(MAPC,Rome2.dll+009f42aa) //===========
define(MAPT,Rome2.dll+008f8e77) //===========
define(MAPA,Rome2.dll+008828d7) //===========
define(MSPE,Rome2.dll+00335451) //===========
define(MPPO,Rome2.dll+006af77f) //===========
define(MMCA,Rome2.dll+004b0f84) //=========#=
define(MAAP,Rome2.dll+0043edb0) //===========
define(MART,Rome2.dll+00c4b6d0) //NH=========
define(MTAN,Rome2.dll+00c3055f) //===========
define(MCAP,Rome2.dll+00b3c43e) //===========
define(MPGH,Rome2.dll+00477e42) //===========
define(MPPS,Rome2.dll+00bb4568) //===========
define(MSTP,Rome2.dll+00c2cbb7) //==#========
define(GDMD,Rome2.dll+00106b80) //===#=======
define(GDM1,Rome2.dll+002cbf30) //===#=======
define(MOAM,Rome2.dll+0068f950) //=======#===
define(GDMS,Rome2.dll+009776c1) //===###=#===
define(MBUN,Rome2.dll+002b6106) //===###=#===
define(GDM2,Rome2.dll+00d44ac0) //===###=#===
define(MTSZ,Rome2.dll+00b7cd2f) //===========
define(MTAP,Rome2.dll+00cfd030) //===========
define(MTA1,Rome2.dll+008f8e80) //===========
define(MSSZ,Rome2.dll+00657e8e) //===========
define(MRPS,Rome2.dll+003332c5) //===========
define(MCPS,Rome2.dll+00a8b16c) //ne=========
define(MIPS,Rome2.dll+0035f22d) //ne=========
define(MCDE,Rome2.dll+00868463) //ne=========
define(CHKP,Rome2.dll+01092d68) //n==========
define(CHKQ,Rome2.dll+01095958) //n==========
define(GDM3,Rome2.dll+0034cc56) //new###=#===
define(GDM4,Rome2.dll+00007d32) //new###=#===
define(CHKR,Rome2.dll+002b736e) //new========
define(CHKS,Rome2.dll+00b2659e) //new========
define(CHKU,Rome2.dll+00dcb3de) //new========
define(CHKV,Rome2.dll+00396437) //new========
define(CHKX,Rome2.dll+0078af77) //new========
define(CHKY,Rome2.dll+00d79fe7) //new========

define(RPPS,Rome2.dll+0038eb4a) // Surplus
-------------------------------
define(MHPR,Rome2.dll+0035c697) //new==#===
define(MMMT,Rome2.dll+00330b1b) //new==#===
define(MMMS,Rome2.dll+00d308e1) //new==#===
define(MSCR,Rome2.dll+0081cdb2) //=========
define(MAPC,Rome2.dll+0044690a) //=========
define(MAPT,Rome2.dll+00d1aa87) //=========
define(MAPA,Rome2.dll+006e5ad7) //=========
define(MSPE,Rome2.dll+00490681) //=========
define(MPPO,Rome2.dll+00dbbc4f) //=========
define(MMCA,Rome2.dll+00d15983) //=========
define(MAAP,Rome2.dll+00346100) //=========
define(MART,Rome2.dll+00147f80) //NH=======
define(MTAN,Rome2.dll+0003abcf) //=========
define(MCAP,Rome2.dll+0050c0de) //=========
define(MPGH,Rome2.dll+006c75d2) //=========
define(MPPS,Rome2.dll+00579468) //=========
define(MSTP,Rome2.dll+0069bca7) //==#======
define(GDMD,Rome2.dll+00b3d140) //===#=====
define(GDM1,Rome2.dll+002e2ac0) //===#=====
define(MOAM,Rome2.dll+00ea5e60) //=======#=
define(GDMS,Rome2.dll+003555f1) //===###=#=
define(MBUN,Rome2.dll+00f63b66) //===###=#=
define(GDM2,Rome2.dll+00d73cb0) //===###=#=
define(MTSZ,Rome2.dll+0088783f) //=========
define(MTAP,Rome2.dll+0034ae10) //=========
define(MTA1,Rome2.dll+00d1aa90) //=========
define(MSSZ,Rome2.dll+00f35c6e) //=========
define(MRPS,Rome2.dll+0008fed5) //=========
define(MCPS,Rome2.dll+0056b8bc) //ne=======
define(MIPS,Rome2.dll+00d4839d) //ne=======
define(MCDE,Rome2.dll+00dfc153) //ne=======
define(CHKP,Rome2.dll+01073ce8) //n========
define(CHKQ,Rome2.dll+010768d8) //n========
define(GDM3,Rome2.dll+00970416) //new###=#=
define(GDM4,Rome2.dll+00d85b12) //new###=#=
define(CHKR,Rome2.dll+0043d30e) //new======
define(CHKS,Rome2.dll+009b56fe) //new======
define(CHKU,Rome2.dll+00cc4d7e) //new======
define(CHKV,Rome2.dll+002f8eb7) //new======
define(CHKX,Rome2.dll+007e9417) //new======
define(CHKY,Rome2.dll+00ba7e77) //new=====

define(RPPS,Rome2.dll+005cf3fa) // Surplus
-------------------------------
v170-8418
define(MHPR,Rome2.dll+006719c7) //new==#==
define(MMMT,Rome2.dll+001c296b) //new==#==
define(MMMS,Rome2.dll+008929e1) //new==#==
define(MSCR,Rome2.dll+00655732) //========
define(MAPC,Rome2.dll+007db48a) //========
define(MAPT,Rome2.dll+00708577) //========
define(MAPA,Rome2.dll+00ab8267) //========
define(MSPE,Rome2.dll+005255b1) //========
define(MPPO,Rome2.dll+0051a6bf) //========
define(MMCA,Rome2.dll+00fa4d73) //========
define(MAAP,Rome2.dll+00ed48d0) //========
define(MART,Rome2.dll+00878450) //NH======
define(MTAN,Rome2.dll+0076944f) //========
define(MCAP,Rome2.dll+003c834e) //========
define(MPGH,Rome2.dll+00c707b2) //========
define(MPPS,Rome2.dll+00526438) //========
define(MSTP,Rome2.dll+00cf8a37) //==#=====
define(GDMD,Rome2.dll+008512d0) //===#====
define(GDM1,Rome2.dll+00d5cbf0) //===#====

define(MOAM,Rome2.dll+008be2d0) //=======#
define(GDMS,Rome2.dll+006b1f81) //===###=#
define(MBUN,Rome2.dll+00c966b6) //===###=#
define(GDM2,Rome2.dll+006923b0) //===###=#

define(MTSZ,Rome2.dll+0072cd8f) //========
define(MTAP,Rome2.dll+0041dd20) //========
define(MTA1,Rome2.dll+00708580) //========
define(MSSZ,Rome2.dll+0093c4ee) //========
define(MRPS,Rome2.dll+00ab6115) //========
define(MCPS,Rome2.dll+00a40eec) //ne======
define(MIPS,Rome2.dll+00d9ecdd) //ne======
define(MCDE,Rome2.dll+002117e3) //ne======
define(CHKP,Rome2.dll+010712b8) //n=======
define(CHKQ,Rome2.dll+01073ea8) //n=======

define(GDM3,Rome2.dll+00325966) //new###=#
define(GDM4,Rome2.dll+0020fca2) //new###=#

define(CHKR,Rome2.dll+008ef0fe) //new=====
define(CHKS,Rome2.dll+00ce4b4e) //new=====
define(CHKU,Rome2.dll+00d7e9ae) //new=====
define(CHKV,Rome2.dll+006986d7) //new=====
define(CHKX,Rome2.dll+00c17267) //new=====
define(CHKY,Rome2.dll+00f3e097) //new=====

define(RPPS,Rome2.dll+003f45aa) // Surplus
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Enable/Disable Minimum Money =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMMM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>19</ID>
              <Description>"Minimum Money Value ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinMoney</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Enable/Disable Free Action Points =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMAP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Enable/Disable Recover Troop Size =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMTS</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Enable/Disable Blessed Units =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMBU</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>108</ID>
              <Description>"Minimum Attribute Value ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinAttrib</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>93</ID>
          <Description>"Enable/Disable Maximum Age =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMIA</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>99</ID>
              <Description>"Maximum Age Value ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMaxAge</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Enable/Disable Minimum Public Order =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMPP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>109</ID>
              <Description>"Miniimum Public Order ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinPO</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Enable/Disable Mercenaries Available =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMMA</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Enable/Disable Agent Can Act Again =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMAA</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Enable/Disable Army Reinforcement in 1 Turn =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMAR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Enable/Disable Protection From Attrition =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMTA</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Enable/Disable Province Growth in 1 Turn =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMPG</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Enable/Disable Minimum Province Pop Surplus =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnablePPS</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"Enable/Disable God Mode =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>97</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"Enable/Disable Unlimited Ammo =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMAM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>97</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"Enable/Disable Research in 1 Turn =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMRP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"Enable/Disable Construction in 1 Turn =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMCP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"============ SCRIPT FACTION ID ==============&gt;"</Description>
          <Color>FF00FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iPlayerID</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"=========== GAME FACTION NAME =============&gt;"</Description>
          <Color>FF00FF</Color>
          <VariableType>String</VariableType>
          <Length>10</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>4</Offset>
            <Offset>770</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"================= Army Info =================="</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>000080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pCommander</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>101</ID>
              <Description>"Selected Army Current XP ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCommander</Address>
              <Offsets>
                <Offset>104</Offset>
                <Offset>0</Offset>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>102</ID>
              <Description>"Selected Army Tradition Points ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCommander</Address>
              <Offsets>
                <Offset>F8</Offset>
                <Offset>0</Offset>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"============= General/Agent Info =============="</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>000080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pCommander</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>104</ID>
              <Description>"Selected Commander Skill Points XP ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCommander</Address>
              <Offsets>
                <Offset>4EC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>105</ID>
              <Description>"Selected Commander Current XP ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCommander</Address>
              <Offsets>
                <Offset>4F8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>106</ID>
              <Description>"Selected Commander Ambition ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCommander</Address>
              <Offsets>
                <Offset>5CC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>107</ID>
              <Description>"Selected Commander Gravitas ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCommander</Address>
              <Offsets>
                <Offset>5D0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>110</ID>
              <Description>"Selected Commander Base Cunning ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCommander</Address>
              <Offsets>
                <Offset>3D0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>111</ID>
              <Description>"Selected Commander Base Zeal ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCommander</Address>
              <Offsets>
                <Offset>3D4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>112</ID>
              <Description>"Selected Commander Base Authority ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCommander</Address>
              <Offsets>
                <Offset>3D8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Rome II Total War
 Game Version  : 1.9.0 (9414)
 Game Sponsor  : fennix102 (gift)
 Proces Name   : Rome2.exe
 Script Version: 2.4
 CE Version    : 6.3
 Release date  : 31-Jan-2014
 Author        : Recifense
 History:
 08-Sep-13: First Release
 09-Sep-13: Fixed an issue related to GM and a possible crash
 10-Sep-13: Trying to fix the surplus issue
 11-Sep-13: Release for version 6955.
 12-Sep-13: New approach on Reinf and 2 new features (s2.0)
 17-Sep-13: Add more protection for the ships (s2.1)
 17-Sep-13: Release for version 7018.
 18-Sep-13: Changed player ID approach and minimum money as well (s2.2)
 01-Oct-13: Release for version 7319
 11-Oct-13: Release for version 1.4.0-7573
 18-Oct-13: Release for version 1.5.0-7765
 01-Nov-13: Release for version 1.6.0-8013
 23-Nov-13: Release for version 1.7.0-8418
 05-Dec-13: Release for version 1.7.0-8630
 18-Dec-13: Release for version 1.8.0-8891
 21-Dec-13: Release for version 1.8.0-8891 (fixed a bug) (S2.3)
 25-Dec-13: New approach in identifying the human player (S2.4)
 10-Jan-14: Release for version 1.8.1-9066
 31-Jan-14: Release for version 1.9.0-9414
 Features:
TBS ===&gt;
 - Minimum Money                 [1]
 - Unlimited Action Points       [2]
   - Agent
   - Troop
   - Army Commander
 - Recover Troop Size on Move    [3]
 - Blessed Units:                [4]
   - Cunning   (10)
   - Zeal      (10)
   - Authority (10)
   - Ambition  (10)
   - Gravitas  (10)
   - Max. Age  (40) (NEW)
 - Province Minimum PO (10)      [5]
 - Restore Mercenaries Available [6]
 - Unit Can Act again:           [7]
   - Agent
   - Army Commander
 - Army Reinforcement in 1 Turn  [8] *Changed Approach
 - Province Growth in 1 turn     [9]
 - Province Minimum PS (10)      [A]
RTS ===&gt;
 - God Mode:                     [B]
   - Ground Battle
   - Sea Battle
 - Unlimited Ammo                [C]
 - Research in 1 Turn            [D]
 - Const/Improv in 1 Turn (NEW)  [E]
 - pointers                      [F]
===========================================
[1] The minimum money value is 63000 by default (when money value is changed);
[2] Army/Agents can move freely;
[3] Size of each troop will be set to maximum (when moving);
[4] It will affect the selected agent/commander; **
[5] It will work during turn changing;
[6] You can hire as many as you want;
[7] Agents can act freely;
[8] That's it;
[9] Player's Provinces will advance one level every turn;
[A] The selected province population surplus will be set to minimum;
[B] For troops and ships;
[C] For troops;
[D] That's it;
[E] It also includes improvement;
[F] Used on the table;
(**) You need to open the agent/general details window.
===========================================
[USAGE - RTS/TBS]
1) Run CE;
2) Run Game;
3) ALT-TAB back to CE and select the process ROME2.EXE;
4) Ativate the first script;
5) Now activate the second script;
-------------
[USAGE - TBS] =&gt; For Campaign:
6) Start or load  a game;
7) Now enable the TBS cheats that you want to use by using the HOTKEYS or going to CE and changing each value 0 to 1;
8) Now play on!
------------ 
[USAGE - RTS] =&gt; For Local Skirmish Battles:
6) Start a skirmish battle;
7) Now enable the RTS cheats (Ammo and GM) by using the HOTKEYS or going to CE and changing each value 0 to 1;
8) Now Battle on!
===========================================
HOTKEYS:
CTRL+Home   = Enable  all cheats (but Blessed/Growth/Surplus/RTS)
CTRL+End    = Disable all cheats (but Blessed/Growth/Surplus/RTS)
-------------
CTRL+PageUp   = Enable  Blassed/Growth/Surplus cheats;
CTRL+PageDown = Disable Blassed/Growth/Surplus cheats;
-------------
CTRL+Insert = Enable  Maximum Age cheat;
CTRL+Delete = Disable Maximum Age cheat;
-------------
CTRL+NUM1   = Enable  GM/Ammo cheats;
CTRL+NUM0   = Disable GM/Ammo cheats;
-------------
[NOTE] Go to Menu before using the HOTKEYS;
[NOTE] You can modify all Hotkeys;
===========================================
[IMPORTANT]
Save the game before unsing the table, so you can always go back if you did not like the result.
===========================================
[New Improvement on my Script Template]
- You can now change the default values easily. Just look for a block like the following one, and change the constant values to the ones you prefer.
[BLOCK]
//=========================================
// Constants used in the script (that can be changed by the user)
define(ctMMON,#63000)  // Minimum Money
define(ctMATT,#10)     // Minimum Attributes
define(ctMAGE,#40)     // Maximum Age
define(ctPMPO,#10)     // Province minimum Public Order
define(ctPMSP,#10)     // Province minimum Surplus
[/BLOCK]
===========================================
Improving to show the advantages of using tables. :D
===========================================
Happy gaming!
 
</Comments>
</CheatTable>
