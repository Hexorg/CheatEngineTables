<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>12263</ID>
      <Description>"reset bonfire intensity"</Description>
      <Options moHideChildren="1" moBindActivation="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//Reset bonfire intensity, code injection:
alloc(newmem, $1000,"DarkSoulsII.exe"+17CE00)
label(returnhere)
newmem:
mov al,0x01
mov [r9+2],al
mov rax,[rdi+30]
jmp returnhere
"DarkSoulsII.exe"+17CE00:
jmp newmem
returnhere:
nop
nop
nop
[DISABLE]
dealloc(newmem)
"DarkSoulsII.exe"+17CE00:
  mov [r9+2],al
  mov rax,[rdi+30]
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>113</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>12264</ID>
          <Description>"game level"</Description>
          <LastState Value="2" Activated="1" RealAddress="7FFF4B566F8"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>7FFF4B566F8</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>49</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>50</Key>
              </Keys>
              <Value>2</Value>
              <ID>1</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>51</Key>
              </Keys>
              <Value>3</Value>
              <ID>2</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>52</Key>
              </Keys>
              <Value>4</Value>
              <ID>3</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>53</Key>
              </Keys>
              <Value>5</Value>
              <ID>4</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>54</Key>
              </Keys>
              <Value>6</Value>
              <ID>5</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>55</Key>
              </Keys>
              <Value>7</Value>
              <ID>6</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>56</Key>
              </Keys>
              <Value>8</Value>
              <ID>7</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>12268</ID>
          <Description>"game level via script (only if above does not work)"</Description>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>12265</ID>
              <Description>"ng"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//Game level, code injection:
alloc(newmem, $1000,"DarkSoulsII.exe"+19B717)
label(returnhere)
newmem:
mov rax,[rax+000000C0]
mov [rax+68],1 //the number of journey to drangleic, 1 equals new game and 2 equals new game plus, and so on.
jmp returnhere
"DarkSoulsII.exe"+19B717:
jmp newmem
returnhere:
nop
nop
[DISABLE]
dealloc(newmem)
"DarkSoulsII.exe"+19B717:
  mov rax,[rax+000000C0]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>12266</ID>
              <Description>"ng+"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//Game level, code injection:
alloc(newmem, $1000,"DarkSoulsII.exe"+19B717)
label(returnhere)
newmem:
mov rax,[rax+000000C0]
mov [rax+68],2 //the number of journey to drangleic, 1 equals new game and 2 equals new game plus, and so on.
jmp returnhere
"DarkSoulsII.exe"+19B717:
jmp newmem
returnhere:
nop
nop
[DISABLE]
dealloc(newmem)
"DarkSoulsII.exe"+19B717:
  mov rax,[rax+000000C0]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>12267</ID>
              <Description>"ng++"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//Game level, code injection:
alloc(newmem, $1000,"DarkSoulsII.exe"+19B717)
label(returnhere)
newmem:
mov rax,[rax+000000C0]
mov [rax+68],3 //the number of journey to drangleic, 1 equals new game and 2 equals new game plus, and so on.
jmp returnhere
"DarkSoulsII.exe"+19B717:
jmp newmem
returnhere:
nop
nop
[DISABLE]
dealloc(newmem)
"DarkSoulsII.exe"+19B717:
  mov rax,[rax+000000C0]
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>12252</ID>
      <Description>"boost souls"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//Boost souls, code injection:
alloc(newmem, $1000,"DarkSoulsII.exe"+3841A2)
label(donothing)
label(returnhere)
newmem:
sub eax,[rcx+000000EC]        //&lt;-- Don't touch
cmp eax,1                     //The number to the left is the first point for boosting (FPB) - REMEMBER ALL NUMBERS ARE IN HEXADECIMAL
jl donothing                  //Don't touch
imul eax,5                    //The number to the left is the first boost level (FBL)
cmp eax,7D0                   //The number to the left is the second point for boosting by the first boost level (SPB*FBL), ex: 400*5 = 7D0
jl donothing                  //Don't touch
imul eax,3                    //The number to the left is the second boost level (SBL), but the effect will be SBL*FBL, ex: 3*5 = 15
cmp eax,249F0                 //The number to the left is the third point for boosting by the SBL*FBL (TPB*SBL*FBL), ex: 10000*3*5 = 249F0
jl donothing                  //Don't touch
imul eax,3                    //The number to the left is the third boost level (TBL), but the effect will be TBL*SBL*FBL, ex: 3*3*5 = 45
donothing:                    //Don't touch --&gt;
add eax,[rcx+000000EC]
mov [rcx+000000EC],eax
jmp returnhere
"DarkSoulsII.exe"+3841A2:
jmp newmem
returnhere:
nop
[DISABLE]
dealloc(newmem)
"DarkSoulsII.exe"+3841A2:
  mov [rcx+000000EC],eax
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>114</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>12261</ID>
      <Description>"merchant infinite stock"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//Merchants infinite stock, code injection:
alloc(newmem, $1000,"DarkSoulsII.exe"+1AA467)
label(returnhere)
newmem:
mov dil,0xFF
mov [rsi+23],dil
mov [rsi+22],al
jmp returnhere
"DarkSoulsII.exe"+1AA467:
jmp newmem
returnhere:
nop
nop
[DISABLE]
dealloc(newmem)
"DarkSoulsII.exe"+1AA467:
  mov [rsi+23],dil
  mov [rsi+22],al
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>115</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
