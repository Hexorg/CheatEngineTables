<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>42</ID>
      <Description>"[X] &lt;== StarDrive v1.07B FLT Script (Part1)"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : StarDrive
 Game Version  : 1.07B
 Game Sponsor  : FairLight
 Proces Name   : StarDrive.exe
 Script Version: 1.0 (Part 1)
 CE Version    : 6.3
 Release date  : 15-Sep-2013
 Author        : Recifense
 History:
 15-Sep-13: First Release
 Features:
 - Minimum Gold
 - Quick Research
 - Full Colony:
   - Food
   - Production
   - Population
 - Quick Construction:
   - Buildings
   - Ships
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"StarDrive.exe")

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

AOBScan(aobMHPR,D9 80 84 00 00 00 DD 9D 90 FB FF FF F2 0F 10 85 90 FB FF FF)
AOBScan(aobMRPS,d9 85 28 fc ff ff de e1 d9 5d 88 8b 85 3c fc ff ff 8b 48 24)
AOBScan(aobMSPT,d9 82 7c 01 00 00 d9 58 08 8b 85 00 fa ff ff 8b 90 4c 02 00)
AOBScan(aobMCPS,d9 40 1c d8 45 08 dd 5d ac 8b 85 38 ff ff ff 8b 48 58 8b d6)
AOBScan(aobMSSP,d9 82 90 01 00 00 d9 59 08 8b 50 04 8b 52 50 e8 ?? ?? ?? ?? 8b)
AOBScan(aobMSPR,d9 98 a0 01 00 00 83 7b 6c 01 0f 85 ?? ?? ?? ?? 83 bb c8 00 00)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_MonResearchProgress)
label(_BackMRP)
label(_ExitMRP)
label(_MonSelectedPlanet)
label(_BackMSP)
label(_ExitMSP)
label(_MonConstProgress)
label(_BackMCP)
label(_ExitMCP)
label(_MonSelectedShip)
label(_BackMSS)
label(_ExitMSS)
label(_MonShipPower)
label(_BackMSR)
label(_ExitMSR)
label(pShip)
label(pPlayer)
label(pPlanet)
label(iEnableMGD)
label(iEnableMRP)
label(iEnableMSP)
label(iEnableMCP)
label(iEnableGMD)
label(iEnableMSR)
label(fMinGold)
label(qValue)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pShip)
registersymbol(pPlayer)
registersymbol(pPlanet)
registersymbol(iEnableMGD)
registersymbol(iEnableMRP)
registersymbol(iEnableMSP)
registersymbol(iEnableMCP)
registersymbol(iEnableGMD)
registersymbol(iEnableMSR)
registersymbol(fMinGold)
registersymbol(aobMHPR)
registersymbol(aobMRPS)
registersymbol(aobMSPT)
registersymbol(aobMCPS)
registersymbol(aobMSSP)
registersymbol(aobMSPR)

//=========================================
MyCode:
//=========================================
// Main game screen
_MonHumanPlayer:
 push ebx

 mov [pPlayer],eax

 cmp dword ptr [iEnableMGD],0
 je _ExitMHP                       // Jump if feature is disabled

 mov ebx,[fMinGold]
 cmp ebx,[eax+00000084]
 js _ExitMHP

 mov [eax+00000084],ebx

_ExitMHP:
 pop ebx

 fld dword ptr [eax+00000084]      // Original code (rds Money)
 jmp _BackMHP                      // Back to main code

//=========================================
// During Turn
_MonResearchProgress:
 push ebx

 cmp dword ptr [iEnableMRP],0
 je _ExitMRP                       // Jump if feature is disabled

 mov ebx,[ebp-000003C4]
 cmp ebx,[pPlayer]
 jne _ExitMRP

 mov ebx,[ebp-00000198]            // Get pResearch
 test ebx,ebx
 jz _ExitMRP

 fst dword ptr [ebx+08]            // Update progress
 fst dword ptr [ebp-000003D8]      // Update progress on stack

_ExitMRP:
 pop ebx

 fld dword ptr [ebp-000003D8]      // Original code (rds progress)
 jmp _BackMRP                      // Back to main code

//=========================================
// Upon selecting planet
_MonSelectedPlanet:
 push ebx

 mov [pPlanet],edx

 cmp dword ptr [iEnableMSP],0
 je _ExitMSP                       // Jump if feature is disabled

 mov ebx,[edx+3c]
 cmp ebx,[pPlayer]
 jne _ExitMSP

//Pop
 mov ebx,[edx+000000c8]
 mov [edx+000000a0],ebx

//Prod
 fstp qword ptr [qValue]
 fild dword ptr [edx+000000ec]
 fstp dword ptr[edx+000000fc]
 fld qword ptr [qValue]

//Food
 mov ebx,[edx+00000178]
 mov [edx+0000017c],ebx

_ExitMSP:
 pop ebx

 fld dword ptr [edx+0000017C]      // Original code (rds food)
 jmp _BackMSP                      // Back to main code

//=========================================
// During Turn
_MonConstProgress:
 push ebx

 cmp dword ptr [iEnableMCP],0
 je _ExitMCP                       // Jump if feature is disabled

 mov ebx,[ebp-000000c8]            // pColony
 test ebx,ebx
 jz _ExitMCP

 mov ebx,[ebx+3c]
 cmp ebx,[pPlayer]
 jne _ExitMCP

 mov ebx,[eax+24]                  // get value_needed
 mov [eax+1c],ebx                  // update cProgress

_ExitMCP:
 pop ebx

 fld dword ptr [eax+1C]            // Original code (rds progress)
 fadd dword ptr [ebp+08]           // Original code (upds progress)
 jmp _BackMCP                      // Back to main code

//=========================================
// Selected Ship
_MonSelectedShip:
 push ebx

 mov [pShip],edx

 cmp dword ptr [iEnableGMD],0
 je _ExitMSS                       // Jump if feature is disabled

 mov ebx,[edx+000000a8]
 cmp ebx,[pPlayer]
 jne _ExitMSS

//Shield
 mov ebx,[edx+0000018c]
 mov [edx+00000190],ebx

_ExitMSS:
 pop ebx

 fld dword ptr [edx+00000190]      // Original code (rds food)
 jmp _BackMSS                      // Back to main code

//=========================================
// When firing
_MonShipPower:
 push ebx

 cmp dword ptr [iEnableMSR],0
 je _ExitMSR                       // Jump if feature is disabled

 mov ebx,[eax+000000a8]
 cmp ebx,[pPlayer]
 jne _ExitMSR

 fstp st(0)

 fld dword ptr [eax+000001A8]

_ExitMSR:
 pop ebx

 fstp dword ptr [eax+000001A0]     // Original code (rds food)
 jmp _BackMSR                      // Back to main code

//=========================================
 db '======================================&gt;'
 db 'CE6.3 Script by Recifense 091513'
//=========================================
// Variables
iEnableMGD:
 dd 0
iEnableMRP:
 dd 0
iEnableMSP:
 dd 0
iEnableMCP:
 dd 0
iEnableGMD:
 dd 0
iEnableMSR:
 dd 0
pShip:
 dd 0
pPlayer:
 dd MyCode
pPlanet:
 dd 0
fMinGold:
 dd (float)63000.0
qValue:
 dq 0

//=========================================
// Hacking Points
aobMHPR:
 jmp _MonHumanPlayer
 nop
_BackMHP:

aobMRPS:
 jmp _MonResearchProgress
 nop
_BackMRP:

aobMSPT:
 jmp _MonSelectedPlanet
 nop
_BackMSP:

aobMCPS:
 jmp _MonConstProgress
 nop
_BackMCP:

aobMSSP:
 jmp _MonSelectedShip
 nop
_BackMSS:

aobMSPR:
 jmp _MonShipPower
 nop
_BackMSR:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
aobMHPR:
// fld dword ptr [eax+00000084]
 db d9 80 84 00 00 00

aobMRPS:
// fld dword ptr [ebp-000003D8]
 db d9 85 28 fc ff ff

aobMSPT:
// fld dword ptr [edx+0000017C]
 db d9 82 7c 01 00 00

aobMCPS:
// fld dword ptr [eax+1C]
// fadd dword ptr [ebp+08]
 db d9 40 1c d8 45 08

aobMSSP:
// fld dword ptr [edx+00000190]
 db d9 82 90 01 00 00

aobMSPR:
// fstp dword ptr [eax+000001A0]
 db d9 98 a0 01 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pShip)
unregistersymbol(pPlayer)
unregistersymbol(pPlanet)
unregistersymbol(iEnableMGD)
unregistersymbol(iEnableMRP)
unregistersymbol(iEnableMSP)
unregistersymbol(iEnableMCP)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMSR)
unregistersymbol(fMinGold)
unregistersymbol(aobMHPR)
unregistersymbol(aobMRPS)
unregistersymbol(aobMSPT)
unregistersymbol(aobMSSP)
unregistersymbol(aobMSPR)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Enable/Disable Minimum Money ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMGD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>3</ID>
              <Description>"Minimum Money Value ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>Float</VariableType>
              <Address>fMinGold</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Enable/Disable Research Progress ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMRP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Enable/Disable Fill Up Selected Colony ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMSP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Enable/Disable Construction Progress ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMCP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Enable/Disable God Mode ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Enable/Disable Ship Power ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMSR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"============ Selected Colony Info =========="</Description>
          <Color>000080</Color>
          <VariableType>String</VariableType>
          <Length>32</Length>
          <Unicode>1</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pPlanet</Address>
          <Offsets>
            <Offset>C</Offset>
            <Offset>34</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>44</ID>
              <Description>"Fertility ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pPlanet</Address>
              <Offsets>
                <Offset>A8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"Richness ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pPlanet</Address>
              <Offsets>
                <Offset>AC</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"[X] &lt;== StarDrive v1.07B FLT Script (Part2)"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : StarDrive
 Game Version  : 1.07B
 Game Sponsor  : FairLight
 Proces Name   : StarDrive.exe
 Script Version: 1.0 (Part 2)
 CE Version    : 6.3
 Release date  : 15-Sep-2013
 Author        : Recifense
 History:
 15-Sep-13: Pointers to selected Building or Unit in a colony
 Features:
 - Speed up Unit
 - Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"StarDrive.exe")

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

AOBScan(aobMSBG,3a 40 30 8d 70 30 8b 85 dc fd ff ff 89 85 d8 fe ff ff 8b 85)
AOBScan(aobMSUT,3a 80 90 00 00 00 8d b8 90 00 00 00 8b 73 50 8b 85 dc fd ff)

//=========================================
alloc(MyCode2,4096,LUDO)
//=========================================
// Declaration section
label(_MonSelBuilding)
label(_BackMSB)
label(_ExitMSB)
label(_MonSelUnit)
label(_BackMSU)
label(_ExitMSU)
label(pBuilding)
label(pUnit)
label(iEnableSUU)

//=========================================
// Registering Symbols
registersymbol(MyCode2)
registersymbol(aobMSBG)
registersymbol(aobMSUT)
registersymbol(pBuilding)
registersymbol(pUnit)
registersymbol(iEnableSUU)
registersymbol(_BackMSU)

//=========================================
MyCode2:
//=========================================
// When in Ground Assault View
_MonSelBuilding:
 mov [pBuilding],eax

_ExitMSB:
 cmp al,[eax+30]                   // Original code (rds HP)
 lea esi,[eax+30]                  // Original code
 jmp _BackMSB                      // Back to main code

//=========================================
// When in Ground Assault View
_MonSelUnit:
 push ebx
 mov [pUnit],eax

 cmp dword ptr [iEnableSUU],0
 je _ExitMSU                       // Jump if feature is disabled

 mov ebx,[eax+28]
 cmp ebx,[pPlayer]
 jne _ExitMSU

 mov dword ptr [eax+4c],1
 mov dword ptr [eax+50],1

_ExitMSU:
 pop ebx

 cmp al,[eax+00000090]             // Original code (rds HP)
 jmp _BackMSU                      // Back to main code

//=========================================
 db '=================================&gt;'
 db 'CE6.3 Script by Recifense 091513'
//=========================================
// Variables
iEnableSUU:
 dd 0
pBuilding:
 dd 0
pUnit:
 dd 0

//=========================================
// Hacking Points
aobMSBG:
 jmp _MonSelBuilding
 nop
_BackMSB:

aobMSUT:
 jmp _MonSelUnit
 nop
_BackMSU:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
aobMSBG:
// cmp al,[eax+30]
// lea esi,[eax+30]
 db 3a 40 30 8d 70 30

aobMSUT:
// cmp al,[eax+00000090]
 db 3a 80 90 00 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode2)
unregistersymbol(aobMSBG)
unregistersymbol(aobMSUT)
unregistersymbol(pBuilding)
unregistersymbol(pUnit)
unregistersymbol(iEnableSUU)
unregistersymbol(_BackMSU)

//=========================================
dealloc(MyCode2)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
 Open Ground Assault View and select a building and a unit
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Enable/Disable Speed Up Unit ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableSUU</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"First Signature = 0090B88D (It should be equal) =&gt;"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>FF00FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>_BackMSU</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>46</ID>
      <Description>"[X] &lt;== StarDrive v1.07B FLT Script (Part3)"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : StarDrive
 Game Version  : 1.07B
 Game Sponsor  : FairLight
 Proces Name   : StarDrive.exe
 Script Version: 1.0 (Part 3)
 CE Version    : 6.3
 Release date  : 15-Sep-2013
 Author        : Recifense
 History:
 15-Sep-13: First Release
 Features:
 - Gode Mode (Combat on the Ground)
===========================================
}

//=========================================
// Definitions
define(LUDO,"StarDrive.exe")

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

AOBScan(aobGMDB,8B 55 D4 29 50 30 89 4d a4 8b 45 a4 29 50 50 83 79 30 00)
AOBScan(aobGMDU,29 82 90 00 00 00 8b 85 18 ff ff ff 8b 40 08 8b 70 04 83)

//=========================================
alloc(MyCode3,4096,LUDO)
//=========================================
// Declaration section
label(_GodModeB)
label(_BackGMB)
label(_ExitGMB)
label(_GodModeU)
label(_BackGMU)
label(_ExitGMU)

//=========================================
// Registering Symbols
registersymbol(MyCode3)
registersymbol(aobGMDB)
registersymbol(aobGMDU)
registersymbol(_BackGMB)
registersymbol(_BackGMU)

//=========================================
MyCode3:
//=========================================
// When in Ground Assault View
_GodModeB:
 cmp dword ptr [iEnableGMD],0
 je _ExitGMB                       // Jump if feature is disabled

 mov edx,[ebp-000000e4]            // Get Colony
 mov edx,[edx+3c]                  // Get Owner
 cmp edx,[pPlayer]
 jne _ExitGMB

 xor edx,edx
 mov [ebp-2c],edx                  // value2decrease = 0

_ExitGMB:
 mov edx,[ebp-2C]                  // Original code
 sub [eax+30],edx                  // Original code (upd HP)
 jmp _BackGMB                      // Back to main code

//=========================================
// When in Ground Assault View
_GodModeU:
 push ebx

 cmp dword ptr [iEnableGMD],0
 je _ExitGMU                       // Jump if feature is disabled

 mov ebx,[edx+28]                  // Get owner
 cmp ebx,[pPlayer]
 jne _ExitGMU

 xor eax,eax                       // value2decrease = 0

_ExitGMU:
 pop ebx

 sub [edx+00000090],eax            // Original code (upd HP)
 jmp _BackGMU                      // Back to main code

//=========================================
 db '==================================&gt;'
 db 'CE6.3 Script by Recifense 091513'
//=========================================
// Variables
// N O N E

//=========================================
// Hacking Points
aobGMDB:
 jmp _GodModeB
 nop
_BackGMB:

aobGMDU:
 jmp _GodModeU
 nop
_BackGMU:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
aobGMDB:
// mov edx,[ebp-2C]
// sub [eax+30],edx
 db 8b 55 d4 29 50 30

aobGMDU:
// sub [edx+00000090],eax
 db 29 82 90 00 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode3)
unregistersymbol(aobGMDB)
unregistersymbol(aobGMDU)
unregistersymbol(_BackGMB)
unregistersymbol(_BackGMU)

//=========================================
dealloc(MyCode3)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
  On Ground Assault View, shoot a building and a unit
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>50</ID>
          <Description>"First Signature = 8BA44D89 (It should be equal) =&gt;"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>FF00FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>_BackGMB</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Second Signature = FF18858B (It should be equal) =&gt;"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>FF00FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>_BackGMU</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"[X] &lt;== StarDrive v1.07B FLT Script (Part4)"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : StarDrive
 Game Version  : 1.07B
 Game Sponsor  : FairLight
 Proces Name   : StarDrive.exe
 Script Version: 1.0 (Part 4)
 CE Version    : 6.3
 Release date  : 15-Sep-2013
 Author        : Recifense
 History:
 15-Sep-13: First Release for version 1.07B
 15-Sep-13: Release for version 1.11B
 15-Sep-13: Added Power and Shield
 Features:
 - God Mode (ships)
===========================================
}

//=========================================
// Definitions
define(LUDO,"StarDrive.exe")

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

AOBScan(aobMSHP,d9 40 1c d8 65 08 d9 9d ?? fc ff ff 8b 85 ?? fc ff ff d9 85)
AOBScan(aobMSP1,D9 80 B4 00 00 00 D8 AA 68 01 00 00 D9 9A 68 01 00 00 8b 45)

//=========================================
alloc(MyCode4,4096,LUDO)
//=========================================
// Declaration section
label(_MonShipHP)
label(_BackMSH)
label(_ExitMSH)
label(_MonShipPower1)
label(_BackSP1)
label(_ExitSP1)

//=========================================
// Registering Symbols
registersymbol(MyCode4)
registersymbol(aobMSHP)
registersymbol(aobMSP1)
registersymbol(_BackMSH)
registersymbol(_BackSP1)

//=========================================
MyCode4:
//=========================================
// When in combat
_MonShipHP:
 push ebx
 push ecx

 cmp dword ptr [iEnableGMD],0
 je _ExitMSH                       // Jump if feature is disabled

 mov ecx,[eax+60]                  // pShip
 test ecx,ecx
 jz _ExitMSH

 mov ebx,[ecx+000000a8]            // pPlayer
 cmp ebx,[pPlayer]
 jne _ExitMSH

//Shield
 mov ebx,[ecx+0000018c]
 mov [ecx+00000190],ebx

//Power
 mov ebx,[ecx+000001a8]
 mov [ecx+000001a0],ebx

 mov ebx,[eax+000000b4]            // mHP
 mov [eax+1c],ebx

 xor ebx,ebx
 mov [ebp+08],ebx                  // value2decrease

_ExitMSH:
 pop ecx
 pop ebx

 fld dword ptr [eax+1C]            // Original code (rds HP)
 fsub dword ptr [ebp+08]           // Original code
 jmp _BackMSH                      // Back to main code

//=========================================
// When in combat
_MonShipPower1:
 push ebx

 cmp dword ptr [iEnableMSR],0
 je _ExitSP1                       // Jump if feature is disabled

 mov ebx,[edx+000000a8]            // pPlayer
 cmp ebx,[pPlayer]
 jne _ExitSP1

//Shield
 mov ebx,[edx+0000018c]
 mov [edx+00000190],ebx

//Power
 mov ebx,[edx+000001a8]
 mov [edx+000001a0],ebx

 xor ebx,ebx
 mov [eax+000000B4],ebx            // value2decrease
 mov [eax+000000d8],ebx            // value2decrease

_ExitSP1:
 pop ebx

 fld dword ptr [eax+000000B4]      // Original code
 jmp _BackSP1                      // Back to main code

//=========================================
 db '==============================================&gt;'
 db 'CE6.3 Script by Recifense 091513'
//=========================================
// Variables
// N O N E

//=========================================
// Hacking Points
aobMSHP:
 jmp _MonShipHP
 nop
_BackMSH:

aobMSP1:
 jmp _MonShipPower1
 nop
_BackSP1:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
aobMSHP:
// fld dword ptr [eax+1C]
// fsub dword ptr [ebp+08]
 db d9 40 1c d8 65 08

aobMSP1:
// fld dword ptr [eax+000000B4]
 db d9 80 b4 00 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode4)
unregistersymbol(aobMSHP)
unregistersymbol(aobMSP1)
unregistersymbol(_BackMSH)
unregistersymbol(_BackSP1)

//=========================================
dealloc(MyCode4)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>52</ID>
          <Description>"First Signature = FCB09DD9 (It should be equal) =&gt;"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>FF00FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>_BackMSH</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Second Signature = 0168AAD8 (It should be equal) =&gt;"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>FF00FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>_BackSP1</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>aobMCPS</Name>
      <Address>18E7C60C</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : StarDrive
 Game Version  : 1.07B
 Game Sponsor  : FairLight
 Proces Name   : StarDrive.exe
 Script Version: 1.0 (Part 1)
 CE Version    : 6.3
 Release date  : 15-Sep-2013
 Author        : Recifense
 History:
 15-Sep-13: First Release for version 1.07B
 15-Sep-13: Release for version 1.11B
 Features:
 - Minimum Money       [1]
 - Quick Research      [2]
 - Full Colony:        [3]
   - Food
   - Production
   - Population
 - Quick Construction: [4]
   - Buildings
   - Ships
 - Some Pointers       [5]
 - God Mode            [6]
 - Speed Up Unit       [7]
===========================================
[1] Player's money will not go under minimum value (default = 63000);
[2] One research per .1 time;
[3] Selected Colony will have its resources set to maximum;
[4] One Construction/Produnction per .1 time;
[5] Used in the table
[6] For player's buildings/Troops/ships
[7] Ground Combat Units will move and fire fast
===========================================
[USAGE]
1) In order to activate Script Part 1, with paused game, you should:
a) Open/Close the Research screen;
b) Open/Close Colony Overview Screen;
c) Select your main ship and make it fire (unpause to fire, then pause again)
d) Now Activate script Part 1.
------------------
2) In order to activate Script Part 2, with paused game, you should:
a) Open the Ground Assault View of a Colony;
b) Select a build;
c) Close the view;
d) Now Activate script Part 2.
------------------
3) In order to activate Scripts Part 3 and 4, you should:
a) Create 2 Troops;	(Don't need if they already exist)
b) Open the Ground Assault View of the Colony;
c) Enable "Speed Up Unit" HOTKEY = CTRL+PageUp;
d) Move a troop next to the build with the biggest defense value and shoot it;
e) Move a troop next to the other and shoot it and pause the game;
f) Now activate scripts Part 3 and 4.
-------------
PART1: Main cheat script with 6 features:
PART2: "Speed Up Unit". The troop will be able to move and shoot fast;
PART3: GM for Ground Assault;
PART4: GM for Ships;
--------------
Now all is ON
[NOTE]
Save the game as soon as it starts.
===========================================
HOTKEYS:
CTRL+Home = Enable  all cheats (but Speed Up Unit);
CTRL+End  = Disable all cheats (but Speed Up Unit);
----------
CTRL+PageUp   = Enable   "Speed Up" cheat;
CTRL+PageDown = Disable  "Speed Up" cheat;
===========================================
[NOTE] This game is for .NET framework. It means that the code are loaded as they are needed. Then they remain loaded.
===========================================
Cheers!
</Comments>
</CheatTable>
