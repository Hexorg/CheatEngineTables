<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Gald-Open Main Menu"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]


aobscanmodule(ToB_Gald_Read,"Tales of Berseria.exe",48 8B 50 10 B8 0F A2 C3 90 66 0F 6E 02) // should be unique
alloc(ToB_Gald_newmem,$1000,"Tales of Berseria.exe")

alloc(pToB_Gald,4)
registersymbol(pToB_Gald)

label(ToB_Gald_code)
label(ToB_Gald_return)

ToB_Gald_newmem:

ToB_Gald_code:
  mov rdx,[rax+10]
  mov eax,90C3A20F
  mov [pToB_Gald],rdx
  jmp ToB_Gald_return

ToB_Gald_Read:
  jmp ToB_Gald_code
  nop
  nop
  nop
  nop
ToB_Gald_return:
registersymbol(ToB_Gald_Read)

[DISABLE]

ToB_Gald_Read:
  db 48 8B 50 10 B8 0F A2 C3 90 66 0F 6E 02

unregistersymbol(ToB_Gald_Read)
dealloc(ToB_Gald_newmem)

dealloc(pToB_Gald)
unregistersymbol(pToB_Gald)
{
// ORIGINAL CODE - INJECTION POINT: "Tales of Berseria.exe"+1628A4B

"Tales of Berseria.exe"+1628A34: 5D                       -  pop rbp
"Tales of Berseria.exe"+1628A35: C3                       -  ret 
"Tales of Berseria.exe"+1628A36: CC                       -  int 3 
"Tales of Berseria.exe"+1628A37: CC                       -  int 3 
"Tales of Berseria.exe"+1628A38: CC                       -  int 3 
"Tales of Berseria.exe"+1628A39: CC                       -  int 3 
"Tales of Berseria.exe"+1628A3A: CC                       -  int 3 
"Tales of Berseria.exe"+1628A3B: 0F 1F 44 00 00           -  nop [rax+rax+00]
"Tales of Berseria.exe"+1628A40: 4C 8B 41 10              -  mov r8,[rcx+10]
"Tales of Berseria.exe"+1628A44: 48 8B 05 45 00 8F FF     -  mov rax,["Tales of Berseria.exe"+F18A90]
// ---------- INJECTING HERE ----------
"Tales of Berseria.exe"+1628A4B: 48 8B 50 10              -  mov rdx,[rax+10]
"Tales of Berseria.exe"+1628A4F: B8 0F A2 C3 90           -  mov eax,90C3A20F
// ---------- DONE INJECTING  ----------
"Tales of Berseria.exe"+1628A54: 66 0F 6E 02              -  movd xmm0,[rdx]
"Tales of Berseria.exe"+1628A58: 8D 80 F2 5D 3C 6F        -  lea eax,[rax+6F3C5DF2]
"Tales of Berseria.exe"+1628A5E: 41 C7 40 08 03 00 00 00  -  mov [r8+08],00000003
"Tales of Berseria.exe"+1628A66: F3 0F E6 C0              -  cvtdq2pd xmm0,xmm0
"Tales of Berseria.exe"+1628A6A: F2 41 0F 11 00           -  movsd [r8],xmm0
"Tales of Berseria.exe"+1628A6F: 48 83 41 10 10           -  add qword ptr [rcx+10],10
"Tales of Berseria.exe"+1628A74: C3                       -  ret 
"Tales of Berseria.exe"+1628A75: 00 B9 CC 0F 1F 84        -  add [rcx-7BE0F034],bh
"Tales of Berseria.exe"+1628A7B: 00 00                    -  add [rax],al
"Tales of Berseria.exe"+1628A7D: 00 00                    -  add [rax],al
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"Gald"</Description>
          <LastState Value="60524304" RealAddress="330C0060"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pToB_Gald</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Inf Consumable-Item Usage"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(ToB_ItemUsage_AOB,Tales of Berseria.exe,44 89 04 30 45 84 C9) // should be unique
alloc(newmem,$1000,"Tales of Berseria.exe") //+135A3B5

label(code)
label(return)

newmem:
cmp [rax+rsi],r8d
jge code
mov [rax+rsi],r8d

code:
  test r9l,r9l
  jmp return

ToB_ItemUsage_AOB:
  jmp newmem
  nop
  nop
return:
registersymbol(ToB_ItemUsage_AOB)

[DISABLE]

ToB_ItemUsage_AOB:
  db 44 89 04 30 45 84 C9

unregistersymbol(ToB_ItemUsage_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Tales of Berseria.exe"+135A3B5

"Tales of Berseria.exe"+135A38F: 81 E2 FF FF FF 00                          -  and edx,00FFFFFF
"Tales of Berseria.exe"+135A395: 83 F8 0A                                   -  cmp eax,0A
"Tales of Berseria.exe"+135A398: 74 5B                                      -  je "Tales of Berseria.exe"+135A3F5
"Tales of Berseria.exe"+135A39A: 48 63 C8                                   -  movsxd  rcx,eax
"Tales of Berseria.exe"+135A39D: 48 63 C2                                   -  movsxd  rax,edx
"Tales of Berseria.exe"+135A3A0: 48 C1 E1 0A                                -  shl rcx,0A
"Tales of Berseria.exe"+135A3A4: 48 01 C1                                   -  add rcx,rax
"Tales of Berseria.exe"+135A3A7: 48 8B 03                                   -  mov rax,[rbx]
"Tales of Berseria.exe"+135A3AA: 48 8D 34 8D 00 00 00 00                    -  lea rsi,[rcx*4+00000000]
"Tales of Berseria.exe"+135A3B2: 8B 0C 88                                   -  mov ecx,[rax+rcx*4]
// ---------- INJECTING HERE ----------
"Tales of Berseria.exe"+135A3B5: 44 89 04 30                                -  mov [rax+rsi],r8d
"Tales of Berseria.exe"+135A3B9: 45 84 C9                                   -  test r9l,r9l
// ---------- DONE INJECTING  ----------
"Tales of Berseria.exe"+135A3BC: 74 0F                                      -  je "Tales of Berseria.exe"+135A3CD
"Tales of Berseria.exe"+135A3BE: 41 39 C8                                   -  cmp r8d,ecx
"Tales of Berseria.exe"+135A3C1: 7E 0A                                      -  jle "Tales of Berseria.exe"+135A3CD
"Tales of Berseria.exe"+135A3C3: 89 FA                                      -  mov edx,edi
"Tales of Berseria.exe"+135A3C5: 48 89 D9                                   -  mov rcx,rbx
"Tales of Berseria.exe"+135A3C8: E8 63 01 00 00                             -  call "Tales of Berseria.exe"+135A530
"Tales of Berseria.exe"+135A3CD: 48 8B 03                                   -  mov rax,[rbx]
"Tales of Berseria.exe"+135A3D0: 83 3C 06 00                                -  cmp dword ptr [rsi+rax],00
"Tales of Berseria.exe"+135A3D4: 7E 0D                                      -  jle "Tales of Berseria.exe"+135A3E3
"Tales of Berseria.exe"+135A3D6: 41 B0 01                                   -  mov r8l,01
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Item-Open Item Menu"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(ToBItemQTYRead,"Tales of Berseria.exe",8B 04 88 48 83 C4 28) // should be unique
alloc(ToB_Item_newmem,$1000,"Tales of Berseria.exe")

alloc(pToB_Item,4)
registersymbol(pToB_Item)

label(ToB_Item_code)
label(ToB_Item_return)

ToB_Item_newmem:

ToB_Item_code:
  mov [pToB_Item],rax
  mov eax,[rax+rcx*4]
  add rsp,28
  jmp ToB_Item_return

ToBItemQTYRead:
  jmp ToB_Item_code
  nop
  nop
ToB_Item_return:
registersymbol(ToBItemQTYRead)

[DISABLE]

ToBItemQTYRead:
  db 8B 04 88 48 83 C4 28

unregistersymbol(ToBItemQTYRead)
dealloc(ToB_Item_newmem)

dealloc(pToB_Item)
unregistersymbol(pToB_Item)

{
// ORIGINAL CODE - INJECTION POINT: "Tales of Berseria.exe"+135A30A

"Tales of Berseria.exe"+135A2EB: C1 F9 18                                      -  sar ecx,18
"Tales of Berseria.exe"+135A2EE: 83 F9 7F                                      -  cmp ecx,7F
"Tales of Berseria.exe"+135A2F1: 74 3B                                         -  je "Tales of Berseria.exe"+135A32E
"Tales of Berseria.exe"+135A2F3: 83 F9 0A                                      -  cmp ecx,0A
"Tales of Berseria.exe"+135A2F6: 74 1C                                         -  je "Tales of Berseria.exe"+135A314
"Tales of Berseria.exe"+135A2F8: 25 FF FF FF 00                                -  and eax,00FFFFFF
"Tales of Berseria.exe"+135A2FD: 48 63 C9                                      -  movsxd  rcx,ecx
"Tales of Berseria.exe"+135A300: 48 C1 E1 0A                                   -  shl rcx,0A
"Tales of Berseria.exe"+135A304: 48 01 C1                                      -  add rcx,rax
"Tales of Berseria.exe"+135A307: 49 8B 00                                      -  mov rax,[r8]
// ---------- INJECTING HERE ----------
"Tales of Berseria.exe"+135A30A: 8B 04 88                                      -  mov eax,[rax+rcx*4]
"Tales of Berseria.exe"+135A30D: 48 83 C4 28                                   -  add rsp,28
// ---------- DONE INJECTING  ----------
"Tales of Berseria.exe"+135A311: C3                                            -  ret 
"Tales of Berseria.exe"+135A312: DB                                            -   
"Tales of Berseria.exe"+135A313: E6 4C                                         -  out 4C,al
"Tales of Berseria.exe"+135A315: 89 C1                                         -  mov ecx,eax
"Tales of Berseria.exe"+135A317: E8 24 07 00 00                                -  call "Tales of Berseria.exe"+135AA40
"Tales of Berseria.exe"+135A31C: 45 31 C0                                      -  xor r8d,r8d
"Tales of Berseria.exe"+135A31F: 84 C0                                         -  test al,al
"Tales of Berseria.exe"+135A321: 41 0F 94 D0                                   -  sete r8l
"Tales of Berseria.exe"+135A325: 44 89 C0                                      -  mov eax,r8d
"Tales of Berseria.exe"+135A328: 48 83 C4 28                                   -  add rsp,28
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Item-List"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Apple Gel"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>pToB_Item</Address>
              <Offsets>
                <Offset>1004</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"BattleResult"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(ToB_Battle_Result,Tales of Berseria.exe,01 83 18 01 00 00) // should be unique
alloc(newmem,$1000,"Tales of Berseria.exe")

alloc(ToB_EXP_Mult,4)
registersymbol(ToB_EXP_Mult)
alloc(ToB_Gald_Mult,4)
registersymbol(ToB_Gald_Mult)

alloc(pToB_Battle_Result,4)
registersymbol(pToB_Battle_Result)


label(code)
label(return)

label(TBR_Gald)
label(TBR_Gald_return)

newmem:
  mov [pToB_Battle_Result],rbx
  imul eax,[ToB_EXP_Mult]
  mov [rbx+00000100],eax
  mov [rbx+00000104],eax
  mov [rbx+00000108],eax
  mov [rbx+0000010C],eax
  mov [rbx+00000110],eax
  mov [rbx+00000114],eax

code:
  add [rbx+00000118],eax
  jmp return

TBR_Gald:
  imul eax,[ToB_Gald_Mult]
  add [rbx+0000011C],eax
  jmp TBR_Gald_return

ToB_EXP_Mult:
dd #10

ToB_Gald_Mult:
dd #10000

ToB_Battle_Result:
  jmp newmem
  nop
return:
registersymbol(ToB_Battle_Result)

ToB_Battle_Result+1B:
  jmp TBR_Gald
  nop
TBR_Gald_return:

[DISABLE]

ToB_Battle_Result:
  db 01 83 18 01 00 00
ToB_Battle_Result+1B:
  db 01 83 1C 01 00 00

unregistersymbol(ToB_Battle_Result)
dealloc(newmem)

dealloc(pToB_Battle_Result)
unregistersymbol(pToB_Battle_Result)

dealloc(ToB_EXP_Mult)
unregistersymbol(ToB_EXP_Mult)
dealloc(ToB_Gald_Mult)
unregistersymbol(ToB_Gald_Mult)

{
// ORIGINAL CODE - INJECTION POINT: "Tales of Berseria.exe"+122D807

"Tales of Berseria.exe"+122D7D1: 01 83 10 01 00 00        -  add [rbx+00000110],eax
"Tales of Berseria.exe"+122D7D7: 8B 43 5C                 -  mov eax,[rbx+5C]
"Tales of Berseria.exe"+122D7DA: 01 83 F4 00 00 00        -  add [rbx+000000F4],eax
"Tales of Berseria.exe"+122D7E0: 8B 43 7C                 -  mov eax,[rbx+7C]
"Tales of Berseria.exe"+122D7E3: 01 83 14 01 00 00        -  add [rbx+00000114],eax
"Tales of Berseria.exe"+122D7E9: 8B 43 60                 -  mov eax,[rbx+60]
"Tales of Berseria.exe"+122D7EC: 01 83 F8 00 00 00        -  add [rbx+000000F8],eax
"Tales of Berseria.exe"+122D7F2: 8B 83 80 00 00 00        -  mov eax,[rbx+00000080]
"Tales of Berseria.exe"+122D7F8: 0F 10 83 88 00 00 00     -  movups xmm0,[rbx+00000088]
"Tales of Berseria.exe"+122D7FF: F2 0F 10 8B 98 00 00 00  -  movsd xmm1,[rbx+00000098]
// ---------- INJECTING HERE ----------
"Tales of Berseria.exe"+122D807: 01 83 18 01 00 00        -  add [rbx+00000118],eax
// ---------- DONE INJECTING  ----------
"Tales of Berseria.exe"+122D80D: 8B 83 84 00 00 00        -  mov eax,[rbx+00000084]
"Tales of Berseria.exe"+122D813: 0F 11 83 20 01 00 00     -  movups [rbx+00000120],xmm0
"Tales of Berseria.exe"+122D81A: F2 0F 11 8B 30 01 00 00  -  movsd [rbx+00000130],xmm1
"Tales of Berseria.exe"+122D822: 01 83 1C 01 00 00        -  add [rbx+0000011C],eax
"Tales of Berseria.exe"+122D828: 8B 83 A0 00 00 00        -  mov eax,[rbx+000000A0]
"Tales of Berseria.exe"+122D82E: 01 83 38 01 00 00        -  add [rbx+00000138],eax
"Tales of Berseria.exe"+122D834: 8B 83 A4 00 00 00        -  mov eax,[rbx+000000A4]
"Tales of Berseria.exe"+122D83A: 39 83 3C 01 00 00        -  cmp [rbx+0000013C],eax
"Tales of Berseria.exe"+122D840: 7D 06                    -  jnl "Tales of Berseria.exe"+122D848
"Tales of Berseria.exe"+122D842: 89 83 3C 01 00 00        -  mov [rbx+0000013C],eax
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Max Damage"</Description>
          <LastState Value="0" RealAddress="2C430600"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pToB_Battle_Result</Address>
          <Offsets>
            <Offset>C0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"EXP"</Description>
          <LastState Value="0" RealAddress="2C430658"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pToB_Battle_Result</Address>
          <Offsets>
            <Offset>118</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Multiplier"</Description>
              <LastState Value="10" RealAddress="13FFD1000"/>
              <VariableType>4 Bytes</VariableType>
              <Address>ToB_EXP_Mult</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Gald?"</Description>
          <LastState Value="0" RealAddress="2C43065C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pToB_Battle_Result</Address>
          <Offsets>
            <Offset>11c</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Multiplier"</Description>
              <LastState Value="10000" RealAddress="13FFD1004"/>
              <VariableType>4 Bytes</VariableType>
              <Address>ToB_Gald_Mult</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Combo"</Description>
          <LastState Value="0" RealAddress="2C4305FC"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pToB_Battle_Result</Address>
          <Offsets>
            <Offset>bc</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"?"</Description>
          <LastState Value="0" RealAddress="2C4305BC"/>
          <VariableType>Float</VariableType>
          <Address>pToB_Battle_Result</Address>
          <Offsets>
            <Offset>7c</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"?"</Description>
          <LastState Value="0" RealAddress="2C4305F0"/>
          <VariableType>Float</VariableType>
          <Address>pToB_Battle_Result</Address>
          <Offsets>
            <Offset>b0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Katz Spriritz"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscanmodule(ToB_KatzSpritz2AOB,Tales of Berseria.exe,8B B9 20 09 00 00) // should be unique
alloc(newmem,$1000,"Tales of Berseria.exe") //+1512235

alloc(pCollected,4)
registersymbol(pCollected)

label(code)
label(return)

newmem:

code:
  mov [pCollected],rcx
  mov edi,[rcx+00000920]
  jmp return

ToB_KatzSpritz2AOB:
  jmp newmem
  nop
return:
registersymbol(ToB_KatzSpritz2AOB)

[DISABLE]

ToB_KatzSpritz2AOB:
  db 8B B9 20 09 00 00

unregistersymbol(ToB_KatzSpritz2AOB)
dealloc(newmem)

dealloc(pCollected)
unregistersymbol(pCollected)
{
// ORIGINAL CODE - INJECTION POINT: "Tales of Berseria.exe"+1512235

"Tales of Berseria.exe"+1512207: 0F 57 F6                             -  xorps xmm6,xmm6
"Tales of Berseria.exe"+151220A: 0F 2F C6                             -  comiss xmm0,xmm6
"Tales of Berseria.exe"+151220D: 48 89 CB                             -  mov rbx,rcx
"Tales of Berseria.exe"+1512210: 76 10                                -  jna "Tales of Berseria.exe"+1512222
"Tales of Berseria.exe"+1512212: F3 0F 5C 05 26 FC AE FF              -  subss xmm0,["Tales of Berseria.exe"+1001E40]
"Tales of Berseria.exe"+151221A: F3 0F 11 81 C0 01 00 00              -  movss [rcx+000001C0],xmm0
"Tales of Berseria.exe"+1512222: 48 8B 05 67 68 A0 FF                 -  mov rax,["Tales of Berseria.exe"+F18A90]
"Tales of Berseria.exe"+1512229: 80 7B 29 00                          -  cmp byte ptr [rbx+29],00
"Tales of Berseria.exe"+151222D: 48 8B 48 10                          -  mov rcx,[rax+10]
"Tales of Berseria.exe"+1512231: 41 0F 94 D0                          -  sete r8l
// ---------- INJECTING HERE ----------
"Tales of Berseria.exe"+1512235: 8B B9 20 09 00 00                    -  mov edi,[rcx+00000920]
// ---------- DONE INJECTING  ----------
"Tales of Berseria.exe"+151223B: 48 8B 8B B8 01 00 00                 -  mov rcx,[rbx+000001B8]
"Tales of Berseria.exe"+1512242: 89 FA                                -  mov edx,edi
"Tales of Berseria.exe"+1512244: E8 A7 5C EF FF                       -  call "Tales of Berseria.exe"+1407EF0
"Tales of Berseria.exe"+1512249: 84 C0                                -  test al,al
"Tales of Berseria.exe"+151224B: 74 0C                                -  je "Tales of Berseria.exe"+1512259
"Tales of Berseria.exe"+151224D: C7 83 C0 01 00 00 00 00 40 40        -  mov [rbx+000001C0],40400000
"Tales of Berseria.exe"+1512257: EB 3C                                -  jmp "Tales of Berseria.exe"+1512295
"Tales of Berseria.exe"+1512259: 80 7B 28 00                          -  cmp byte ptr [rbx+28],00
"Tales of Berseria.exe"+151225D: 74 36                                -  je "Tales of Berseria.exe"+1512295
"Tales of Berseria.exe"+151225F: 85 FF                                -  test edi,edi
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Current"</Description>
          <LastState Value="122" RealAddress="330C0980"/>
          <VariableType>2 Bytes</VariableType>
          <Address>pCollected</Address>
          <Offsets>
            <Offset>920</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Collected"</Description>
          <LastState Value="150" RealAddress="330C0710"/>
          <VariableType>2 Bytes</VariableType>
          <Address>pCollected</Address>
          <Offsets>
            <Offset>6b0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Katz Spriritz placeholder2"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>
[ENABLE]

aobscanmodule(KatzSpritzAOB,Tales of Berseria.exe,8B 81 2C 01 00 00 41) // should be unique

alloc(newmem,$1000,"Tales of Berseria.exe") //+1407EFA

alloc(pKatzSpritz,4)
registersymbol(pKatzSpritz)


label(code)
label(return)

newmem:

code:
  mov [pKatzSpritz],rcx
  mov eax,[rcx+0000012C]
  jmp return

KatzSpritzAOB:
  jmp newmem
  nop
return:
registersymbol(KatzSpritzAOB)

[DISABLE]

KatzSpritzAOB:
  db 8B 81 2C 01 00 00

unregistersymbol(KatzSpritzAOB)
dealloc(newmem)

dealloc(pKatzSpritz)
unregistersymbol(pKatzSpritz)


{
// ORIGINAL CODE - INJECTION POINT: "Tales of Berseria.exe"+1407EFA

"Tales of Berseria.exe"+1407EE4: CC                       -  int 3 
"Tales of Berseria.exe"+1407EE5: CC                       -  int 3 
"Tales of Berseria.exe"+1407EE6: CC                       -  int 3 
"Tales of Berseria.exe"+1407EE7: CC                       -  int 3 
"Tales of Berseria.exe"+1407EE8: CC                       -  int 3 
"Tales of Berseria.exe"+1407EE9: CC                       -  int 3 
"Tales of Berseria.exe"+1407EEA: 66 0F 1F 44 00 00        -  nop [rax+rax+00]
"Tales of Berseria.exe"+1407EF0: 48 89 5C 24 08           -  mov [rsp+08],rbx
"Tales of Berseria.exe"+1407EF5: 57                       -  push rdi
"Tales of Berseria.exe"+1407EF6: 48 83 EC 20              -  sub rsp,20
// ---------- INJECTING HERE ----------
"Tales of Berseria.exe"+1407EFA: 8B 81 2C 01 00 00        -  mov eax,[rcx+0000012C]
// ---------- DONE INJECTING  ----------
"Tales of Berseria.exe"+1407F00: 41 0F B6 F8              -  movzx edi,r8l
"Tales of Berseria.exe"+1407F04: 41 89 D0                 -  mov r8d,edx
"Tales of Berseria.exe"+1407F07: 29 D0                    -  sub eax,edx
"Tales of Berseria.exe"+1407F09: 48 89 CB                 -  mov rbx,rcx
"Tales of Berseria.exe"+1407F0C: 99                       -  cdq 
"Tales of Berseria.exe"+1407F0D: 31 D0                    -  xor eax,edx
"Tales of Berseria.exe"+1407F0F: 29 D0                    -  sub eax,edx
"Tales of Berseria.exe"+1407F11: 85 C0                    -  test eax,eax
"Tales of Berseria.exe"+1407F13: 7E 3C                    -  jle "Tales of Berseria.exe"+1407F51
"Tales of Berseria.exe"+1407F15: 40 0F B6 D7              -  movzx edx,dil
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Current"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>pKatzSpritz</Address>
              <Offsets>
                <Offset>012c</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"Character Stats Viewer"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscanmodule(ToBCurrentCharStatsAOB,Tales of Berseria.exe,4E 10 66 0F 6E 40 0C) // should be unique
alloc(ToBCurrentCharStatsnewmem,$1000,"Tales of Berseria.exe")

alloc(pCurrentCharHP,4)
registersymbol(pCurrentCharHP)

label(ToBCurrentCharStatscode)
label(ToBCurrentCharStatsreturn)

ToBCurrentCharStatsnewmem:
  mov [pCurrentCharHP],rax

ToBCurrentCharStatscode:
  movd xmm0,[rax+0C]
  jmp ToBCurrentCharStatsreturn

ToBCurrentCharStatsAOB+02:
  jmp ToBCurrentCharStatsnewmem
ToBCurrentCharStatsreturn:
registersymbol(ToBCurrentCharStatsAOB)

[DISABLE]

ToBCurrentCharStatsAOB+02:
  db 66 0F 6E 40 0C

unregistersymbol(ToBCurrentCharStatsAOB)
dealloc(ToBCurrentCharStatsnewmem)

dealloc(pCurrentCharHP,4)
unregistersymbol(pCurrentCharHP)

{
// ORIGINAL CODE - INJECTION POINT: "Tales of Berseria.exe"+16306EA

"Tales of Berseria.exe"+16306C9: F3 0F E6 C0           -  cvtdq2pd xmm0,xmm0
"Tales of Berseria.exe"+16306CD: F2 0F 11 01           -  movsd [rcx],xmm0
"Tales of Berseria.exe"+16306D1: 48 83 46 10 10        -  add qword ptr [rsi+10],10
"Tales of Berseria.exe"+16306D6: 48 8B 74 24 40        -  mov rsi,[rsp+40]
"Tales of Berseria.exe"+16306DB: 48 83 C4 20           -  add rsp,20
"Tales of Berseria.exe"+16306DF: 41 5E                 -  pop r14
"Tales of Berseria.exe"+16306E1: C3                    -  ret 
"Tales of Berseria.exe"+16306E2: 00 49 8B              -  add [rcx-75],cl
"Tales of Berseria.exe"+16306E5: 06                    -  push es
"Tales of Berseria.exe"+16306E6: 48 8B 4E 10           -  mov rcx,[rsi+10]
// ---------- INJECTING HERE ----------
"Tales of Berseria.exe"+16306EA: 66 0F 6E 40 0C        -  movd xmm0,[rax+0C]
// ---------- DONE INJECTING  ----------
"Tales of Berseria.exe"+16306EF: C7 41 08 03 00 00 00  -  mov [rcx+08],00000003
"Tales of Berseria.exe"+16306F6: B8 01 00 00 00        -  mov eax,00000001
"Tales of Berseria.exe"+16306FB: F3 0F E6 C0           -  cvtdq2pd xmm0,xmm0
"Tales of Berseria.exe"+16306FF: F2 0F 11 01           -  movsd [rcx],xmm0
"Tales of Berseria.exe"+1630703: 48 83 46 10 10        -  add qword ptr [rsi+10],10
"Tales of Berseria.exe"+1630708: 48 8B 74 24 40        -  mov rsi,[rsp+40]
"Tales of Berseria.exe"+163070D: 48 83 C4 20           -  add rsp,20
"Tales of Berseria.exe"+1630711: 41 5E                 -  pop r14
"Tales of Berseria.exe"+1630713: C3                    -  ret 
"Tales of Berseria.exe"+1630714: 49 8B 06              -  mov rax,[r14]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>48</ID>
          <Description>"HP"</Description>
          <LastState Value="9999" RealAddress="330CAD0C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"?"</Description>
          <LastState Value="0" RealAddress="330CAD10"/>
          <VariableType>2 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Soul Gauge"</Description>
          <LastState Value="3" RealAddress="330CAD14"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"?"</Description>
          <LastState Value="0" RealAddress="330CAD18"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Total EXP"</Description>
          <LastState Value="40427" RealAddress="330CAD1C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>1c</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"HP Boosted"</Description>
          <LastState Value="9999" RealAddress="330CAD64"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>64</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"ATK Boosted"</Description>
          <LastState Value="1910" RealAddress="330CAD70"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>70</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"DEF Boosted"</Description>
          <LastState Value="1896" RealAddress="330CAD74"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>74</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"A.ATK Boosted"</Description>
          <LastState Value="1938" RealAddress="330CAD78"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>78</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"A.DEF Boosted"</Description>
          <LastState Value="1936" RealAddress="330CAD7C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>7c</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"Focus Boosted"</Description>
          <LastState Value="1936" RealAddress="330CAD80"/>
          <VariableType>4 Bytes</VariableType>
          <Address>pCurrentCharHP</Address>
          <Offsets>
            <Offset>80</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Debug"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>25</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="3316183C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>3316183C</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>ToB_Gald_Read</Name>
      <Address> 141628A4B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ToB_StatsMaxAOB</Name>
      <Address> 141357121</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ToB_Battle_Result</Name>
      <Address> 14122D807</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ToB_KatzSpritz2AOB</Name>
      <Address> 141512235</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ToB_ItemUsage_AOB</Name>
      <Address> 14135A3B5</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
