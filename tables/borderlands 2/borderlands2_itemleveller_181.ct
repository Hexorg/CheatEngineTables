<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>1105</ID>
      <Description>"Item Leveller (ONLY IN INVENTORY)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{
// Original, not my steam version
define(ID_Weapon,233D)
define(ID_Class,2291)
define(ID_Relic,228F)
define(ID_Grenade,2293)
define(ID_Shield,2295)
}

// My steam version
define(ID_Weapon,2348)
define(ID_Class,229C)
define(ID_Relic,229A) // unknown, using original for now
define(ID_Grenade,229E)
define(ID_Shield,22A0)

// ItemStart+1EC+3EC+258 // char level from weapon
// CC CC CC CC 8B 81 D0 01 00 00 C3 CC CC CC CC
// Borderlands2.exe+DAF4C - CC                    - int 3
// Borderlands2.exe+DAF4D - CC                    - int 3
// Borderlands2.exe+DAF4E - CC                    - int 3
// Borderlands2.exe+DAF4F - CC                    - int 3
// Borderlands2.exe+DAF50 - 8B 81 D0010000        - mov eax,[ecx+000001D0]
// Borderlands2.exe+DAF56 - C3                    - ret
// Borderlands2.exe+DAF57 - CC                    - int 3
// Borderlands2.exe+DAF58 - CC                    - int 3
// Borderlands2.exe+DAF59 - CC                    - int 3
// Borderlands2.exe+DAF5A - CC                    - int 3

aobscan(ItemLevel_Addr,CC CC CC CC 8B 81 D0 01 00 00 C3 CC CC CC CC)
alloc(ItemLevel_Data,4096)
label(ItemLevel_Hook)
label(ItemLevel_Start)
label(ItemLevel_Exit)
label(ItemLevel_Return)
registersymbol(ItemLevel_Hook)
label(ItemLevel_Lvl)
registersymbol(ItemLevel_Lvl)
label(ItemLevel_ItemAddr)
registersymbol(ItemLevel_ItemAddr)
label(ItemLevel_ObjID)
registersymbol(ItemLevel_ObjID)
label(ItemLevel_NotGun)
label(ItemLevel_IsObj)
label(ItemLevel_PLvl)
registersymbol(ItemLevel_PLvl)
label(ItemLevel_GotLvl)
label(ItemLevel_LAddr)
label(ItemLevel_ModCount)
registersymbol(ItemLevel_ModCount)
label(ItemLevel_ExecuteCount)
registersymbol(ItemLevel_ExecuteCount)
label(ItemLevel_Value1)
registersymbol(ItemLevel_Value1)
label(ItemLevel_Value2)
registersymbol(ItemLevel_Value2)

// Found Game code to hook
ItemLevel_Addr+4:
ItemLevel_Hook:
jmp ItemLevel_Start
nop
ItemLevel_Return:

// Our Data
ItemLevel_Data:
ItemLevel_Lvl:
db 00 00 00 00
ItemLevel_ItemAddr:
db 00 00 00 00
ItemLevel_ObjID:
db 00 00 00 00
ItemLevel_PLvl:
db 00 00 00 00
ItemLevel_LAddr:
db 00 00 00 00
ItemLevel_ModCount:
dd 0
ItemLevel_ExecuteCount:
dd 0
ItemLevel_Value1:
dd 0
ItemLevel_Value2:
dd 0

// Our Code
ItemLevel_Start:
pushfd
pushad
inc dword ptr [ItemLevel_ExecuteCount]  // for debugging purposes
// Check Player Level
mov eax, [ecx+1EC]
cmp eax, 0
je ItemLevel_Exit
mov eax, [eax+3EC]
cmp eax, 0
je ItemLevel_Exit
mov eax, [eax+258]
cmp eax, 0
je ItemLevel_Exit
mov [ItemLevel_PLvl], eax
//
mov [ItemLevel_ItemAddr], ecx
mov eax, [ecx+2c]
mov [ItemLevel_ObjID], eax
mov dword ptr [ItemLevel_Value1],eax
cmp eax, ID_Weapon // GUN
jne ItemLevel_NotGun
lea eax, [ecx+E3C]
mov [ItemLevel_LAddr], eax
mov eax, [ecx+E3C] // Actual Level
mov [ItemLevel_Lvl], eax
jmp ItemLevel_GotLvl
ItemLevel_NotGun:
mov dword ptr [ItemLevel_Value2],eax
cmp eax, ID_Class // Class Mod
je ItemLevel_IsObj
cmp eax, ID_Relic // Relic
je ItemLevel_IsObj
cmp eax, ID_Grenade // Grenade
je ItemLevel_IsObj
cmp eax, ID_Shield // Shield
je ItemLevel_IsObj
mov [ItemLevel_Lvl], 0
jmp ItemLevel_Exit
ItemLevel_IsObj:
lea eax, [ecx+8b4]
mov [ItemLevel_LAddr], eax
mov eax, [ecx+8b4]
mov [ItemLevel_Lvl], eax
ItemLevel_GotLvl: // Now we have the item level
inc dword ptr [ItemLevel_ModCount] // for debugging purposes
cmp eax, 2
jnge ItemLevel_Exit
cmp eax, 200
jnl ItemLevel_Exit
mov edx, [ItemLevel_PLvl]
mov eax, [ItemLevel_LAddr]
mov [eax], edx
ItemLevel_Exit:
popad
popfd
mov eax,[ecx+000001D0]
jmp ItemLevel_Return

[DISABLE]
ItemLevel_Hook:
db 8B 81 D0 01 00 00

dealloc(ItemLevel_Data)
unregistersymbol(ItemLevel_Hook)
unregistersymbol(ItemLevel_Lvl)
unregistersymbol(ItemLevel_ItemAddr)
unregistersymbol(ItemLevel_ObjID)
unregistersymbol(ItemLevel_PLvl)
unregistersymbol(ItemLevel_ModCount)
unregistersymbol(ItemLevel_ExecuteCount)
unregistersymbol(ItemLevel_Value1)
unregistersymbol(ItemLevel_Value2)


</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>1106</ID>
          <Description>"ItemLevel_ModCount"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>ItemLevel_ModCount</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1107</ID>
          <Description>"ItemLevel_ExecuteCount"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>ItemLevel_ExecuteCount</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1108</ID>
          <Description>"ItemLevel_Value1"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>ItemLevel_Value1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1109</ID>
          <Description>"ItemLevel_Value2"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>ItemLevel_Value2</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
