<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="10">
  <CheatEntries>
    <CheatEntry>
      <Description>"Commander_Conquest_Americas_V1034_Script"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Commander - Conquest of the Americas
 Game Version  : 1.034
 Script Version: 1.0
 CE Version    : 6.0
 Money, Warehouse, Colonists, Soldiers, Colony Morale, Building Construction,
 Ship construction, Ship hull, Ship Sail, Ship Crew, Ship Ammo and Marines
 29-Jan-2011 Release for V1.034
 By Recifense
===========================================
}

[ENABLE]
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert("Commander.exe"+1cba8d,8b 88 b0 00 00 00)
assert("Commander.exe"+136ade,8b 88 80 01 00 00)
assert("Commander.exe"+1328c8,8b 82 e4 01 00 00)
assert("Commander.exe"+132944,8b 88 f8 01 00 00)
assert("Commander.exe"+231f83,8b 32 80 7e 20 00)
assert("Commander.exe"+2cf6b2,8b 80 78 01 00 00)
assert("Commander.exe"+2cf71f,8d 8c 24 60 02 00 00)
assert("Commander.exe"+0c87db,8b 82 14 01 00 00)
assert("Commander.exe"+0c8af6,29 98 18 01 00 00)
assert("Commander.exe"+0c8b33,8b aa 3c 01 00 00)
assert("Commander.exe"+0be098,8b 82 3c 01 00 00)
assert("Commander.exe"+1c2dfb,89 81 c8 00 00 00)
assert("Commander.exe"+24ed2a,29 90 48 01 00 00)
assert("Commander.exe"+0c8a4d,8b a9 90 00 00 00)
assert("Commander.exe"+0b14bc,8b 90 90 00 00 00)
//"Commander.exe"+0bf5c4
//"Commander.exe"+082ec7

//=========================================
alloc(MyCode,1024)
//=========================================
// Declaration section
label(_MonMoney)
label(_BackMM)
label(_ExitMM)
label(_MonWarehouse)
label(_BackMW)
label(_ExitMW)
label(_MonColonists)
label(_BackMC)
label(_ExitMC)
label(_MonC0)
label(_MonColonyMorale)
label(_BackMCM)
label(_ExitMCM)
label(_MonBuildingConstruction)
label(_BackMBC)
label(_ExitMBC)
label(_MonShipConstruction1)
label(_BackMSC1)
label(_MonShipConstruction2)
label(_BackMSC2)
label(_ExitMSC2)
label(_MonSC20)
label(_MonSC21)
label(_MonShipHull)
label(_BackMSH)
label(_ExitMSH)
label(_MonShipSail)
label(_BackMSS)
label(_ExitMSS)
label(_MonShipCrew)
label(_BackMSCw)
label(_ExitMSCw)
label(_MonShipAmmo)
label(_BackMSA)
label(_ExitMSA)
label(_MonSA0)
label(_MonShip)
label(_BackMS)
label(_MonShipMarines)
label(_BackMSM)
label(_ExitMSM)
label(_MonShipMarines1)
label(_BackMSM1)
label(_ExitMSM1)
label(_MonShipMarines2)
label(_BackMSM2)
label(_ExitMSM2)
label(_MonShipInCombat)
label(_BackMSI)
label(_ExitMSI)
label(_MonCannons)
label(_BackMCa)
label(_ExitMCa)
label(_MonCannons1)
label(_BackMCa1)
label(_ExitMCa1)
label(pMoney)
label(pItem)
label(pColonists)
label(pCurDate)
label(pShipyard)
label(pShip)
label(iEnableMM)
label(iEnableMW)
label(iEnableMC)
label(iEnableMCM)
label(iEnableMBC)
label(iEnableMSC)
label(iEnableGM)
label(iEnableMA)
label(iOwnerID)

registersymbol(MyCode)
registersymbol(pMoney)
registersymbol(pItem)
registersymbol(pColonists)
registersymbol(pShip)
registersymbol(iEnableMM)
registersymbol(iEnableMW)
registersymbol(iEnableMC)
registersymbol(iEnableMCM)
registersymbol(iEnableMBC)
registersymbol(iEnableMSC)
registersymbol(iEnableGM)
registersymbol(iEnableMA)
registersymbol(iOwnerID)

//=========================================
MyCode:
//========================================= ok!
_MonMoney:
 mov [pMoney],eax

 cmp dword ptr [iEnableMM],0
 je _ExitMM

 mov ecx,#500000
 cmp ecx,[eax+000000B0]
 jle _ExitMM

 mov [eax+000000B0],ecx

_ExitMM:
 mov ecx,[eax+000000B0]
 jmp _BackMM

//========================================= ok!
_MonWarehouse:
 mov [pItem],eax

 cmp dword ptr [iEnableMW],0
 je _ExitMW

 mov ecx,#101
 cmp ecx,[eax+00000180]
 jle _ExitMW

 mov [eax+00000180],ecx

_ExitMW:
 cmp dword ptr [eax+00000180],00
 jmp _BackMW

//========================================= ok!
_MonColonists:
 mov [pColonists],edx

 cmp dword ptr [iEnableMC],0
 je _ExitMC

 mov eax,#2500
 cmp eax,[edx+000001E4]
 jle _MonC0

 mov [edx+000001E4],eax

_MonC0:
 mov eax,#250
 cmp eax,[edx+000001E8]
 jle _ExitMC

 mov [edx+000001E8],eax

_ExitMC:
 mov eax,[edx+000001E4]
 jmp _BackMC

//========================================= ok!
_MonColonyMorale:
 mov ecx,[eax+000001F8]

 cmp dword ptr [iEnableMCM],0
 je _ExitMCM

 cmp dword ptr [ecx+08],(float)80.0
 jge _ExitMCM

 mov dword ptr [ecx+08],(float)80.0
 mov dword ptr [ecx+0c],(float)80.0

_ExitMCM:
 jmp _BackMCM

//========================================= ok!
_MonBuildingConstruction:
 mov esi,[edx]

 cmp dword ptr [iEnableMBC],0
 je _ExitMBC

 cmp dword ptr [esi+24],0
 je _ExitMBC

 mov dword ptr [esi+24],1

_ExitMBC:
 cmp byte ptr [esi+20],00
 jmp _BackMBC

//========================================= ok!
_MonShipConstruction1:
 mov [pShipyard],ebx

 mov eax,[eax+00000178]
 jmp _BackMSC1

//========================================= ok!
// EBX = #Months
_MonShipConstruction2:
 push eax
 push ebx
 push edi
 push esi

 cmp dword ptr [iEnableMSC],0
 je _ExitMSC2

 mov esi,[pShipyard]

 dec ebx

 mov ecx,[esi+34]
 mov eax,[esi+30]

_MonSC20:
 cmp ebx,eax
 jl _MonSC21

 dec ecx
 lea eax,[eax+0c]
 jmp _MonSC20

_MonSC21:
 sub eax,ebx
 mov [esi+30],eax
 mov [esi+34],ecx

_ExitMSC2:
 pop esi
 pop edi
 pop ebx
 pop eax

 lea ecx,[esp+00000260]
 jmp _BackMSC2

//========================================= ok!
_MonShipHull:
 cmp dword ptr [iEnableGM],0
 je _ExitMSH

 mov eax,[ecx+0000008c]
 test eax,eax
 jz _ExitMSH

 mov eax,[eax+1c]

 cmp eax,[iOwnerID]
 jne _ExitMSH

 xor ebp,ebp
 mov [esp+00000080],ebp

_ExitMSH:
 mov eax,[edx+00000114]
 jmp _BackMSH

//========================================= ok!
_MonShipSail:
 cmp dword ptr [iEnableGM],0
 je _ExitMSS

 mov ecx,[edx+0000008c]
 test ecx,ecx
 jz _ExitMSS

 mov ecx,[ecx+1c]

 cmp ecx,[iOwnerID]
 jne _ExitMSS

 xor ebx,ebx
 mov [esp+18],ebx
 mov [esp+1C],ebx

_ExitMSS:
 sub [eax+00000118],ebx
 jmp _BackMSS

//========================================= ok!
_MonShipCrew:
 cmp dword ptr [iEnableGM],0
 je _ExitMSCw

 mov ebp,[ecx+0000008c]
 test ebp,ebp
 jz _ExitMSCw

 mov ebp,[ebp+1c]

 cmp ebp,[iOwnerID]
 jne _ExitMSCw

 mov ebp,[edx+00000134]

 cmp ebp,[edx+0000013C]
 jle _ExitMSCw

 mov [edx+0000013C],ebp

_ExitMSCw:
 mov ebp,[edx+0000013C]
 jmp _BackMSCw

//========================================= ok!
_MonShipAmmo:
 mov eax,[ecx+0000008c]
 test eax,eax
 jz _ExitMSA

 mov eax,[eax+1c]

 cmp eax,[iOwnerID]
 jne _ExitMSA

 cmp dword ptr [iEnableMA],0
 je _MonSA0

 mov eax,[edx+0000019c]
 mov [edx+000001Ac],eax
 mov eax,[edx+000001a0]
 mov [edx+000001b0],eax
 mov eax,[edx+000001a4]
 mov [edx+000001b4],eax

_MonSA0:
 cmp dword ptr [iEnableGM],0
 je _ExitMSA

 mov eax,[edx+00000150]
 mov [edx+0000014c],eax

 mov dword ptr [ecx+000000b4],0
 mov dword ptr [ecx+000000b8],0

 mov eax,[edx+00000134]
 cmp eax,[edx+0000013c]
 jle _ExitMSA

 mov [edx+0000013c],eax

_ExitMSA:
 mov eax,[edx+0000013C]
 jmp _BackMSA

//========================================= ok!
_MonShip:
 mov [pShip],eax

 mov [ecx+000000C8],eax
 jmp _BackMS

//========================================= ok!
_MonShipMarines:
 cmp dword ptr [iEnableGM],0
 je _ExitMSM

 mov eax,[ecx+0000008c]
 test eax,eax
 jz _ExitMSM

 mov eax,[eax+1c]

 cmp eax,[iOwnerID]
 jne _ExitMSM

 xor edx,edx

_ExitMSM:
 mov eax,[ecx+00000090]
 sub [eax+00000148],edx
 jmp _BackMSM

//========================================= ok!
_MonShipMarines1:
 cmp dword ptr [iEnableGM],0
 je _ExitMSM1

 mov ebp,[ecx+0000008c]
 test ebp,ebp
 jz _ExitMSM1

 mov ebp,[ebp+1c]

 cmp ebp,[iOwnerID]
 jne _ExitMSM1

 xor ebx,ebx
 mov [esp+00000080],ebx
 mov [esp+00000018],ebx
 mov [esp+0000001c],ebx
 mov [esi+000014d8],ebx
 mov [esi+000014dc],ebx

_ExitMSM1:
 mov ebp,[ecx+00000090]
 jmp _BackMSM1

//========================================= ok!
_MonShipMarines2:
 cmp dword ptr [iEnableGM],0
 je _ExitMSM2

 mov edx,[eax+0000008c]
 test edx,edx
 jz _ExitMSM2

 mov edx,[edx+1c]

 cmp edx,[iOwnerID]
 jne _ExitMSM2

 xor ebx,ebx
 xor edi,edi
 xor ecx,ecx

_ExitMSM2:
 mov edx,[eax+00000090]
 jmp _BackMSM2

//========================================= ok!
_MonShipInCombat:
 mov [pShip],edx

 mov eax,[edx+0000008c]
 test eax,eax
 jz _ExitMSI

 mov eax,[eax+1c]
 mov [iOwnerID],eax

_ExitMSI:
 mov eax,[edx+00000090]
 jmp _BackMSI

//========================================= ok!
_MonCannons:
 cmp dword ptr [iEnableGM],0
 je _ExitMCa

 mov eax,[ebp+000014a0]
 test eax,eax
 jz _ExitMCa

 mov eax,[eax+0000008c]
 test eax,eax
 jz _ExitMCa

 mov eax,[eax+1c]

 cmp eax,[iOwnerID]
 jne _ExitMCa

 mov al,#100
 mov [edx+esi+38],al

_ExitMCa:
 cmp byte ptr [edx+esi+38],00
 jmp _BackMCa

//========================================= ok!
_MonCannons1:
 cmp dword ptr [iEnableGM],0
 je _ExitMCa1

 mov eax,[edi+000014a0]
 test eax,eax
 jz _ExitMCa1

 mov eax,[eax+0000008c]
 test eax,eax
 jz _ExitMCa1

 mov eax,[eax+1c]

 cmp eax,[iOwnerID]
 jne _ExitMCa1

 mov al,#100
 mov [ebp+38],al

_ExitMCa1:
 cmp byte ptr [ebp+38],00
 xorps xmm0,xmm0
 jmp _BackMCa1

//=========================================
// Variables
iEnableMM:
 dd 1
iEnableMW:
 dd 1
iEnableMC:
 dd 1
iEnableMCM:
 dd 1
iEnableMBC:
 dd 1
iEnableMSC:
 dd 1
iEnableGM:
 dd 1
iEnableMA:
 dd 1
pMoney:
 dd 0
pItem:
 dd 0
pColonists:
 dd 0
pCurDate:
 dd 0
pShipyard:
 dd 0
pShip:
 dd 0
iOwnerID:
 dd 0

//=========================================
// Hacking Points
"Commander.exe"+1cba8d:
 jmp _MonMoney
 nop
_BackMM:

"Commander.exe"+136a3b:
 jmp _MonWarehouse
 nop
 nop
_BackMW:

"Commander.exe"+1328c8:
 jmp _MonColonists
 nop
_BackMC:

"Commander.exe"+132944:
 jmp _MonColonyMorale
 nop
_BackMCM:

"Commander.exe"+231f83:
 jmp _MonBuildingConstruction
 nop
_BackMBC:

"Commander.exe"+2cf6b2:
 jmp _MonShipConstruction1
 nop
_BackMSC1:

"Commander.exe"+2cf71f:
 jmp _MonShipConstruction2
 nop
 nop
_BackMSC2:

"Commander.exe"+0c87db:
 jmp _MonShipHull
 nop
_BackMSH:

"Commander.exe"+0c8af6:
 jmp _MonShipSail
 nop
_BackMSS:

"Commander.exe"+0c8b33:
 jmp _MonShipCrew
 nop
_BackMSCw:

"Commander.exe"+0be098:
 jmp _MonShipAmmo
 nop
_BackMSA:

"Commander.exe"+1c2dfb:
 jmp _MonShip
 nop
_BackMS:

"Commander.exe"+24ed2a:
 jmp _MonShipMarines
 nop
_BackMSM:

"Commander.exe"+0c8a4d:
 jmp _MonShipMarines1
 nop
_BackMSM1:

"Commander.exe"+0b14bc:
 jmp _MonShipMarines2
 nop
_BackMSM2:

"Commander.exe"+1d2ac1:
 jmp _MonShipInCombat
 nop
_BackMSI:

"Commander.exe"+0bf5c4:
 jmp _MonCannons
_BackMCa:

"Commander.exe"+082ec7:
 jmp _MonCannons1
 nop
 nop
_BackMCa1:

//=========================================
// Original Codes
[DISABLE]
"Commander.exe"+1cba8d:
 mov ecx,[eax+000000B0]

"Commander.exe"+136a3b:
 cmp dword ptr [eax+00000180],00

"Commander.exe"+1328c8:
 mov eax,[edx+000001E4]

"Commander.exe"+132944:
 mov ecx,[eax+000001F8]

"Commander.exe"+231f83:
 mov esi,[edx]
 cmp byte ptr [esi+20],00

"Commander.exe"+2cf6b2:
 mov eax,[eax+00000178]

"Commander.exe"+2cf71f:
 lea ecx,[esp+00000260]

"Commander.exe"+0c87db:
 mov eax,[edx+00000114]

"Commander.exe"+0c8af6:
 sub [eax+00000118],ebx

"Commander.exe"+0c8b33:
 mov ebp,[edx+0000013C]

"Commander.exe"+0be098:
 mov eax,[edx+0000013C]

"Commander.exe"+1c2dfb:
 mov [ecx+000000C8],eax

"Commander.exe"+24ed2a:
 sub [eax+00000148],edx

"Commander.exe"+0c8a4d:
 mov ebp,[ecx+00000090]

"Commander.exe"+0b14bc:
 mov edx,[eax+00000090]

"Commander.exe"+1d2ac1:
 mov eax,[edx+00000090]

"Commander.exe"+0bf5c4:
 cmp byte ptr [esi+edx+38],00

"Commander.exe"+082ec7:
 cmp byte ptr [ebp+38],00
 xorps xmm0,xmm0

unregistersymbol(MyCode)
unregistersymbol(pMoney)
unregistersymbol(pItem)
unregistersymbol(pColonists)
unregistersymbol(pShip)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableMW)
unregistersymbol(iEnableMC)
unregistersymbol(iEnableMCM)
unregistersymbol(iEnableMBC)
unregistersymbol(iEnableMSC)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMA)
unregistersymbol(iOwnerID)

dealloc(MyCode)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <Description>"Enable/Disable Minimum Money"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMM</Address>
    </CheatEntry>
    <CheatEntry>
      <Description>"Enable/Disable Minimum Items in Warehouse"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMW</Address>
    </CheatEntry>
    <CheatEntry>
      <Description>"Enable/Disable Minimum Colonists in Colony"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMC</Address>
    </CheatEntry>
    <CheatEntry>
      <Description>"Enable/Disable Minimum Colony Morale"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMCM</Address>
    </CheatEntry>
    <CheatEntry>
      <Description>"Enable/Disable Quick Building Construction"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMBC</Address>
    </CheatEntry>
    <CheatEntry>
      <Description>"Enable/Disable Quick Ship Construction"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMSC</Address>
    </CheatEntry>
    <CheatEntry>
      <Description>"Enable/Disable God Mode"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableGM</Address>
    </CheatEntry>
    <CheatEntry>
      <Description>"Enable/Disable Ship Ammunition"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMA</Address>
    </CheatEntry>
    <CheatEntry>
      <Description>"Selected Colony Colonists"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>pColonists</Address>
      <Offsets>
        <Offset>1E4</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <Description>"Selected Colony Soldiers"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>pColonists</Address>
      <Offsets>
        <Offset>1E8</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>iYear</Name>
      <Address>04B40186</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iMonth</Name>
      <Address>04B4018A</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Commander - Conquest of the Americas
 Game Version  : 1.034
 Script Version: 1.0
 CE Version    : 6.0
 Money, Warehouse, Colonists, Soldiers, Colony Morale, Building Construction,
 Ship construction, Ship hull, Ship Sail, Ship Crew, Ship Ammo and Marines
 29-Jan-2011 Release for V1.034
 By Recifense
===========================================
</Comments>
</CheatTable>
