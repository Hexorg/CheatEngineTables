<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Item Durability Cheat"</Description>
      <Options moHideChildren="1" moBindActivation="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(durabilityAccess1,DarkSoulsIII.exe,CC CC 8B 41 10 C3 CC CC CC CC CC CC CC CC CC CC CC CC 48 89 5C 24 08 57 48 83 EC 20 48 8B 02 48 8B FA)
alloc(newmem,$1000,"DarkSoulsIII.exe"+A0BCD0)

label(return)

newmem:
  mov [rcx+10],#9999
  mov eax,[rcx+10]
  ret 
  int 3 
  jmp return

durabilityAccess1+2:
  jmp newmem
return:
registersymbol(durabilityAccess1)

[DISABLE]

durabilityAccess1:
  db CC CC 8B 41 10 C3 CC CC CC CC CC CC CC CC CC CC CC CC 48 89 5C 24 08 57 48 83 EC 20 48 8B 02 48 8B FA

unregistersymbol(durabilityAccess1)
dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Item Durability Cheat"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(durabilityAccess2,DarkSoulsIII.exe,CC CC 8B 41 10 C3 CC CC CC CC CC CC CC CC CC CC CC CC 48 89 5C 24 08 57 48 83 EC 20 48 8B 02 48 8B FA)
alloc(newmem2,$1000,"DarkSoulsIII.exe"+A0BCD0)

label(return2)

newmem2:
  mov [rcx+10],#9999
  mov eax,[rcx+10]
  ret
  int 3
  jmp return2

durabilityAccess2+2:
  jmp newmem2
return2:
registersymbol(durabilityAccess2)

[DISABLE]
durabilityAccess2:
  db CC CC 8B 41 10 C3 CC CC CC CC CC CC CC CC CC CC CC CC 48 89 5C 24 08 57 48 83 EC 20 48 8B 02 48 8B FA

unregistersymbol(durabilityAccess2)
dealloc(newmem2)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Ammo Cheat"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(ammoAccess,DarkSoulsIII.exe,04 89 02 48 8B C2 C3 CC CC CC CC CC CC CC 8B 41 08 C3 CC)
alloc(newmem,$1000,"DarkSoulsIII.exe"+A0CB30)

label(hack)
label(originalcode)
label(return)

newmem:

cmp [rsp],DarkSoulsIII.Scaleform::Render::Matrix4x4&lt;float&gt;::SetIdentity+1181E8
jne originalcode
cmp [rsp+20],DarkSoulsIII.Scaleform::Render::Matrix4x4&lt;float&gt;::SetIdentity+10F385
jne originalcode
cmp [rsp+50],DarkSoulsIII.Scaleform::Render::Matrix4x4&lt;float&gt;::SetIdentity+769AAC
jne originalcode
cmp [rsp+1a0],DarkSoulsIII.Scaleform::Render::Matrix4x4&lt;float&gt;::SetIdentity+75E31D
je hack
cmp [rsp+1a0],DarkSoulsIII.Scaleform::Render::Matrix4x4&lt;float&gt;::SetIdentity+75E34C
je hack
cmp [rsp+1a0],DarkSoulsIII.Scaleform::Render::Matrix4x4&lt;float&gt;::SetIdentity+75E27F
je hack
cmp [rsp+1a0],DarkSoulsIII.Scaleform::Render::Matrix4x4&lt;float&gt;::SetIdentity+75E250
je hack
jmp originalcode

hack:
  mov [rcx+08],#99
  mov eax,[rcx+08]
  ret
  int 3
  jmp return

originalcode:
  mov eax,[rcx+08]
  ret 
  int 3 
  jmp return

ammoAccess+0E:
  jmp newmem
return:
registersymbol(ammoAccess)

[DISABLE]
ammoAccess+0E:
  db 8B 41 08 C3 CC

unregistersymbol(ammoAccess)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Health Regeneration Cheat"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(healthAccess,DarkSoulsIII.exe,8B 00 B2 01 48 8B CD)
alloc(newmem,$1000,"DarkSoulsIII.exe"+197085C)
alloc(value1,$100,"DarkSoulsIII.exe"+197085C)
alloc(backupRAX,$100,"DarkSoulsIII.exe"+197085C)
alloc(backupRCX,$100,"DarkSoulsIII.exe"+197085C)
alloc(backupRDX,$100,"DarkSoulsIII.exe"+197085C)

label(originalcode)
label(clearvalue)
label(check)
label(return)

newmem:

cmp [rsp+48],DarkSoulsIII.Scaleform::Render::Matrix4x4&lt;float&gt;::SetIdentity+5565F5
jne originalcode
cmp [rsp+78],DarkSoulsIII.Scaleform::Render::Matrix4x4&lt;float&gt;::SetIdentity+416113
jne originalcode
cmp [rsp+a8],DarkSoulsIII.Scaleform::Render::Matrix4x4&lt;float&gt;::SetIdentity+559FB2
jne originalcode
cmp [value1],#60 //ideally 1 second at 60 FPS. FPS drops, though...
je check
ja check
inc [value1]
jmp originalcode

check:
cmp [rax-78],416D6472
jne originalcode
cmp [rax-58],0013F6A0
jne originalcode
cmp [rax-50],9000001B
jne originalcode
cmp [rax-28],0013F6B0
jne originalcode
jmp clearvalue

clearvalue:
mov [value1],00000000
mov [backupRCX],rcx
mov [backupRAX],rax
mov [backupRDX],rdx
mov eax,[rax+4]
xor rdx,rdx
mov ecx,#30 //1/30 of hp, circeabout 3,3%
idiv ecx
mov ecx,eax
mov rax,[backupRAX]
mov rdx,[backupRDX]
add [rax],ecx
mov rcx,[backupRCX]

originalcode:
  mov eax,[rax]
  mov dl,01
  mov rcx,rbp
  jmp return

healthAccess:
  jmp newmem
  nop
  nop
return:
registersymbol(healthAccess)

[DISABLE]
healthAccess:
  db 8B 00 B2 01 48 8B CD

unregistersymbol(healthAccess)
dealloc(newmem)
dealloc(value1)
dealloc(backupRAX)
dealloc(backupRCX)
dealloc(backupRDX)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Death Penalty Cheat"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(soulsAccess,DarkSoulsIII.exe,8B 41 74 C3 CC CC CC CC CC CC CC CC CC CC CC CC 32 C0 C3)
aobscanmodule(bloodstainStoreSouls,DarkSoulsIII.exe,89 5F 38 33 D2 48 8B CD E8 6D 7D F9 FF)
alloc(newmem,$1000,"DarkSoulsIII.exe"+463AA0)
alloc(newmem2,$1000,"DarkSoulsIII.exe"+4CBD56)

label(code)
label(return)
label(return2)

newmem:

cmp [rcx+74],00000000
jne code
cmp [newmem+100],00000000
je code
jl code
mov eax,[newmem+100]
mov [rcx+74],eax
jmp code

code:
  mov eax,[rcx+74]
  ret 
  int 3 
  jmp return

soulsAccess:
  jmp newmem
return:
registersymbol(soulsAccess)

newmem2:
  mov [newmem+100],ebx
  nop //mov [rdi+38],ebx
  xor edx,edx
  jmp return2

bloodstainStoreSouls:
  jmp newmem2
return2:
registersymbol(bloodstainStoreSouls)

[DISABLE]
bloodstainStoreSouls:
  db 89 5F 38 33 D2

soulsAccess:
  db 8B 41 74 C3 CC

unregistersymbol(soulsAccess)
unregistersymbol(bloodstainStoreSouls)
dealloc(newmem2)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>durabilityAccess1</Name>
      <Address> 140A0BCCE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>durabilityAccess2</Name>
      <Address> 140A0BFBE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoAccess</Name>
      <Address> 140A0CB22</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>soulsAccess</Name>
      <Address> 140463AA0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bloodstainStoreSouls</Name>
      <Address> 1404CBD56</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthAccess</Name>
      <Address> 14197085C</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
