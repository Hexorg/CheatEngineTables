<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Resources for all players"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

008BAAC2:
jmp newmem
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
movss [edi],xmm0
mov [edi],47C34F80
//place your code here


originalcode:
//movss [edi],xmm0
inc eax

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
008BAAC2:
movss [edi],xmm0
inc eax
//Alt: db F3 0F 11 07 40
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Mass and Energy for Human player"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

008BA2C8:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
cmp [ebx+04],0
jne +0E
mov [ebx+38],47C34F80
mov [ebx+3C],47C34F80
mov ecx,[ebx+38]
//place your code here


originalcode:
//mov ecx,[ebx+38]
mov edx,[ebx+3c]

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
008BA2C8:
mov ecx,[ebx+38]
mov edx,[ebx+3c]
//Alt: db 8B 4B 38 8B 53 3C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Resources and Research for Human player"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

SupremeCommander2.exe+4A14F5:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
cmp [ebx+04],0
//jne +15
jne originalcode
mov [ebx+38],47C34F80
mov [ebx+3C],47C34F80
mov [ebx+40],47C34F80
//place your code here


originalcode:
mov eax,[ebx+40]
mov ecx,[ebx+38]

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
SupremeCommander2.exe+4A14F5:
mov eax,[ebx+40]
mov ecx,[ebx+38]
//Alt: db 8B 43 40 8B 4B 38
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"God Mode and Instant Build"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

SupremeCommander2.exe+35E0FC:
jmp newmem
nop
nop
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
pushad
movss [esi+0000008c],xmm2
cmp [esi+00000148],2
jne originalcode
mov eax,[esi+00000090]
mov [esi+0000008c],eax
//place your code here


originalcode:
popad
//movss [esi+0000008c],xmm2

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
SupremeCommander2.exe+35E0FC:
movss [esi+0000008c],xmm2
//Alt: db F3 0F 11 96 8C 00 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov edx,[ebx+3C] - modify mass</Description>
      <Address>008A14FB</Address>
      <ModuleName>SupremeCommander2.exe</ModuleName>
      <ModuleNameOffset>4A14FB</ModuleNameOffset>
      <Before>
        <Byte>43</Byte>
        <Byte>40</Byte>
        <Byte>8B</Byte>
        <Byte>4B</Byte>
        <Byte>38</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>53</Byte>
        <Byte>3C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>84</Byte>
        <Byte>24</Byte>
        <Byte>90</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ecx,[ebx+38] - modify energy</Description>
      <Address>008A14F8</Address>
      <ModuleName>SupremeCommander2.exe</ModuleName>
      <ModuleNameOffset>4A14F8</ModuleNameOffset>
      <Before>
        <Byte>7C</Byte>
        <Byte>EB</Byte>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>4B</Byte>
        <Byte>38</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>53</Byte>
        <Byte>3C</Byte>
        <Byte>89</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss [esi+0000008C],xmm2 - modify unit health</Description>
      <Address>0075E0FC</Address>
      <ModuleName>SupremeCommander2.exe</ModuleName>
      <ModuleNameOffset>35E0FC</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>48</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>96</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>17</Byte>
        <Byte>8B</Byte>
        <Byte>11</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
