<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Infinite Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Assassin's Creed 4: Black Flag
//Infinite Health
//Steve Andrew
[enable]
alloc(InfiniteHealth,1024)
aobscan(HealthAddress,66 89 ? 5c 85 ff 79 ? 80)
registersymbol(HealthAddress)

InfiniteHealth:
mov ax,[esi+5e] //Thanks for offset ColdFusion73! ;)
mov [esi+5c],ax
test edi,edi
jmp HealthAddress+6

HealthAddress:
jmp InfiniteHealth
nop

[disable]

HealthAddress:
db 66 89 46 5c 85 ff
//mov [esi+5c],ax
//test edi,edi

dealloc(InfiniteHealth)
unregistersymbol(HealthAddress)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Infinite Ally Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Assassins Creed 4: Black Flag
//Infinite Ally Health
//[Credit To: Unknown at the moment [from an AC3 CT]]
[enable]
alloc(newmem,1024)
aobscan(allyhealth,0F BF 41 5C C3 CC CC CC CC CC CC CC CC CC CC CC 0F BF 41 5E)
label(originalcode)
registersymbol(allyhealth)

newmem:
cmp [ecx+f4],1
je originalcode

mov ax,[ecx+5e]
mov [ecx+5c],ax

originalcode:
movsx eax,word ptr [ecx+5c]
ret

allyhealth:
jmp newmem

[disable]

allyhealth:
db 0f bf 41 5c c3
//movsx eax,word ptr [ecx+5c]
//ret

dealloc(newmem)
unregistersymbol(allyhealth)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Infinite Ship Health (ColdFusion73)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Assassin's Creed 4: Black Flag
//Infinite Ship Health
//[Credit To: ColdFusion73]
[enable]
alloc(InfiniteShipHealth,1024)
aobscan(ShipHealthAddress,f3 0f 11 86 d8 00 00 00 e8 ? ? ? ? 8b 86)
label(originalcode)
registersymbol(ShipHealthAddress)

InfiniteShipHealth:
cmp edx,0
jne originalcode

movss xmm0,[esi+d4]

originalcode:
movss [esi+d8],xmm0
jmp ShipHealthAddress+8

//AC4BFSP.exe+122f11f:
ShipHealthAddress:
jmp InfiniteShipHealth
db 90 90 90

[disable]

ShipHealthAddress:
db f3 0f 11 86 d8 00 00 00
//movss [esi+d8],xmm0

dealloc(InfiniteShipHealth)
unregistersymbol(ShipHealthAddress)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Infinite Money, wood, metal, cloth, rum, etc..."</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Assassin's Creed 4: Black Flag
//Infinite Money, wood, metal, cloth, rum, sugar, etc...
//Steve Andrew
[enable]
alloc(InfiniteMoneyEtc,1024)
aobscan(MoneyEtcAddress,0f 57 c0 0f 29 00 5d c2 04 00 8b 41 0c)
label(SetMoney)
label(SetBombs)
label(SetPistolAmmo)
label(Exit)
registersymbol(MoneyEtcAddress)

InfiniteMoneyEtc:
cmp esi,1 //money
je SetMoney
cmp esi,5 //smoke bombs
je SetBombs
cmp esi,b //pistol ammo
je SetPistolAmmo
cmp esi,29
jb Exit
cmp esi,31
ja Exit
//wood, metal, cloth, rum, sugar, unknown, heavy shot ammo,
//mortar shot ammo, &amp; fire barrels!! :D
mov eax,#9999
mov [ecx+0c],eax
ret

Exit:
mov eax,[ecx+0c]
ret

SetMoney:
mov eax,#9999999999
mov [ecx+0c],eax
ret

SetBombs:
mov eax,5
mov [ecx+0c],eax
ret

SetPistolAmmo:
mov eax,0a //10 bullets is a good number if you didn't have any ;)
mov [ecx+0c],eax
ret

MoneyEtcAddress+0a:
jmp InfiniteMoneyEtc

[disable]

MoneyEtcAddress+0a:
db 8b 41 0c c3 cc
//mov eax,[ecx+0c]
//ret
//int 3

dealloc(InfiniteMoneyEtc)
unregistersymbol(MoneyEtcAddress)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Infinite Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Assassins Creed 4: Black Flag
//Infinite Ammo
//Steve Andrew
[enable]
aobscan(AmmoAddress,2b ca 89 48 ? b0 01 5d c2)
registersymbol(AmmoAddress)

//AC4BFSP.exe+c81d31:
AmmoAddress:
db 90 90

[disable]

AmmoAddress:
db 2b ca

unregistersymbol(AmmoAddress)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"[F2] Stealth Mode PRO (ColdFusion73)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Assassins Creed 4: Black Flag
//Stealth Mode (Pro Version)
//[Credit To: ColdFusion73]
[enable]
aobscan(StealthPRO,e8 ? ? ? ? 84 c0 75 ? 8b 4d ? 38 81 ? ? ? ? 75)
registersymbol(StealthPRO)

//AC4BFSP.exe+1285e74:
StealthPRO+7:
db eb

[disable]

StealthPRO+7:
db 75

unregistersymbol(StealthPRO)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>113</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>61</ID>
      <Description>"Instant Cooldowns :D (Ship Weaponry)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Assassins Creed 4: Black Flag
//Instant Cooldowns :D (Ship Weaponry)
//Steve Andrew
[enable]
aobscan(InstantCooldowns,72 ? 77 ? 3b 4e ? 72 ? 8b 47 ? 50)
registersymbol(InstantCooldowns)

//AC4BFSP.exe+103cdf1:
InstantCooldowns+2:
db eb

[disable]

InstantCooldowns+2:
db 77

unregistersymbol(InstantCooldowns)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"Freeze Countdown Timer (Unknown)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
globalalloc(Countdown,128)
label(returnhere)
label(exit)
//label(timehack)

//aobscan(RetCheck1,D9 5D FC 80 BE FC 00 00 00 00 74 11 )
//aobscan(RetCheck2,D9 5D FC 0F B6 46 66 D9 45 FC 50 51 )
//aobscan(RetCheck3,8D 8E 38 02 00 00 E8 xx xx xx xx 51 D9 1C 24 E8 )
//aobscan(RetCheck4,6A 01 8b ce E8 xx xx xx xx 51 D9 1C 24 E8 )
aobscan(CountdownAOB,8B 41 1C 8B 38 8B 70 04 xx xx xx xx xx 08 )

Countdown:
//cmp [ebp+04],RetCheck1
//je short timehack
//cmp [ebp+04],RetCheck2
//je short timehack
//cmp [ebp+04],RetCheck3+0b
//je short timehack
//cmp [ebp+04],RetCheck4+09
//je short timehack
//jmp short exit

Countdown:
mov [ecx+08],edi
add [ecx+08],B71B0      // always 25 seconds left, (25 * 30000 = 750000 = B71B0 (hex)

exit:
mov eax,[ecx+0C] //original
mov edx,[ecx+08] //original
jmp returnhere

CountdownAOB+08:
jmp Countdown
db 08
returnhere:

[DISABLE]
dealloc(Countdown)
aobscan(CountdownAOB,8B 41 1C 8B 38 8B 70 04 xx xx xx xx xx 08 )
CountdownAOB+08:
mov eax,[ecx+0C]
mov edx,[ecx+08]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>46</ID>
      <Description>"Freeze Stopwatch Timer (Unknown)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(stopwatch,64)
label(returnhere)
label(exit)
//aobscan(RetCheck, e8 xx xx xx xx 8d 8b 08 01 00 00 e8 xx xx xx xx 51)

aobscan(RetCheck,8B C8 DE C1 25 FF FF FF 7F 89 45 FC)
aobscan(StopwatchAOB, 8B 51 1C 8B 02 8B 52 04 xx xx xx xx xx 89 45 F8 )

stopwatch:
cmp [ebp+4],RetCheck+28
jne short exit
mov [ecx],eax
sub [ecx],38E8C // 7.77 seconds * 30000 = 233100 = 38E8C(hex)

exit:
sub eax,[ecx] //original
sbb edx,[ecx+04] //original
jmp returnhere

StopwatchAOB+8:
jmp stopwatch
returnhere:

[DISABLE]
aobscan(StopwatchAOB, 8B 51 1C 8B 02 8B 52 04 xx xx xx xx xx 89 45 F8 )
StopwatchAOB+8:
sub eax,[ecx]
sbb edx,[ecx+04]
//Alt: db 2B 01 1B 51 04
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>71</ID>
      <Description>"No Reload V3"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(pistolsfiredcheckAOB,8B 48 08 3B CA ** ** 33 C9 89 48 08)
registersymbol(pistolsfiredcheckAOB)
aobscan(pistolammoclipmaxreadAOB,8B 40 0C 5D C2 04 00 33 C0 5D C2 04 00)
registersymbol(pistolammoclipmaxreadAOB)

label(pPistols)
registersymbol(pPistols)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(pistolcheckloop)
label(pistolcheckloopendcheck)
label(islastpistol)
label(reloadallpistolsloop)
label(reloadallpistolsloopendcheck)
label(afterreload)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(checkfirearmchange2)
label(emptyotherpistolspointersloop2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
mov ebx,3
pistolcheckloop:
mov ecx,[pPistols+ebx*4]
test ecx,ecx
jz pistolcheckloopendcheck
cmp eax,ecx
je islastpistol
jmp originalcode

pistolcheckloopendcheck:
test ebx,ebx
jz originalcode
dec ebx
jmp pistolcheckloop

islastpistol:
xor ebx,ebx

reloadallpistolsloop:
mov ecx,[pPistols+ebx*4]
test ecx,ecx
jz afterreload
mov edx,[ecx+10]
mov [ecx+8],edx

reloadallpistolsloopendcheck:
cmp ebx,3
jge afterreload
inc ebx
jmp reloadallpistolsloop

afterreload:
popad
mov ecx,[eax+08]
cmp ecx,edx
jmp pistolsfiredcheckAOB+c

originalcode:
popad
mov ecx,[eax+08]
cmp ecx,edx

exit:
jmp returnhere

///

newmem2:
pushfd
cmp ebx,3
jg checkfirearmchange2
cmp ebx,0
jl checkfirearmchange2
mov [pPistols+ebx*4],eax
je checkfirearmchange2
jmp originalcode2

checkfirearmchange2:
cmp [pPistols],eax
mov [pPistols],eax
je originalcode2

mov ebp,1
emptyotherpistolspointersloop2:
mov [pPistols+ebp*4],0
inc ebp
cmp ebp,4
jl emptyotherpistolspointersloop2
jmp originalcode2

originalcode2:
popfd//
mov eax,[eax+0C]
pop ebp
ret 0004

exit2:
jmp returnhere2

///
pPistols:
dd 0
dd 0
dd 0
dd 0
///

pistolsfiredcheckAOB: //"AC4BFSP.exe"+EE4BE9:
jmp newmem
returnhere:

pistolammoclipmaxreadAOB: //"AC4BFSP.exe"+ED0557:
jmp newmem2
nop
nop
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
pistolsfiredcheckAOB: //"AC4BFSP.exe"+EE4BE9:
db 8B 48 08 3B CA
//Alt: mov ecx,[eax+08]
//Alt: cmp ecx,edx
unregistersymbol(pistolsfiredcheckAOB)
pistolammoclipmaxreadAOB: //"AC4BFSP.exe"+ED0557:
db 8B 40 0C 5D C2 04 00
//Alt: mov eax,[eax+0C]
//Alt: pop ebp
//Alt: ret 0004
unregistersymbol(pistolammoclipmaxreadAOB)

unregistersymbol(pPistols)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>122</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>60</ID>
          <Description>"Reload Anytime"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(pistoloneammocheckzeroAOB,83 78 08 00 74 09 5F 5E)
registersymbol(pistoloneammocheckzeroAOB)
aobscan(rifleammocheckzeroAOB,83 78 08 00 0F 97 C0 EB)
registersymbol(rifleammocheckzeroAOB)

label(bReloadKeyPressed)
label(bReloadKeyPressed2)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(resetreloadkey)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(resetreloadkey2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
push ebx
push ecx
pushad
push 'R' //R
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne resetreloadkey
cmp byte ptr [bReloadKeyPressed],00
jne originalcode
mov byte ptr [bReloadKeyPressed],01
mov dword ptr [eax+08],00
mov ecx,[pPistols+4]
test ecx,ecx
jz originalcode
mov ebx,[ecx+10]
mov [ecx+08],ebx
mov ecx,[pPistols+8]
test ecx,ecx
jz originalcode
mov ebx,[ecx+10]
mov [ecx+08],ebx
mov ecx,[pPistols+c]
test ecx,ecx
jz originalcode
mov ebx,[ecx+10]
mov [ecx+08],ebx
jmp originalcode

resetreloadkey:
mov byte ptr [bReloadKeyPressed],00
jmp originalcode

originalcode:
pop ecx//
pop ebx//
popfd//
cmp dword ptr [eax+08],00
je pistoloneammocheckzeroAOB+f //AC4BFSP.exe+EEECC7

exit:
jmp returnhere

///

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
pushad
push 'R' //R
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne resetreloadkey2
cmp byte ptr [bReloadKeyPressed2],00
jne originalcode2
mov byte ptr [bReloadKeyPressed2],01
mov dword ptr [eax+08],00

resetreloadkey2:
mov byte ptr [bReloadKeyPressed2],00
jmp originalcode2

originalcode2:
popfd//
cmp dword ptr [eax+08],00
seta al

exit2:
jmp returnhere2

///
bReloadKeyPressed:
db 0
bReloadKeyPressed2:
db 0
///

pistoloneammocheckzeroAOB: //"AC4BFSP.exe"+EEECB8:
jmp newmem
nop
returnhere:

rifleammocheckzeroAOB: //"AC4BFSP.exe"+186ECB5:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
pistoloneammocheckzeroAOB: //"AC4BFSP.exe"+EEECB8:
db 83 78 08 00 74 09
//Alt: cmp dword ptr [eax+08],00
//Alt: je AC4BFSP.exe+EEECC7
unregistersymbol(pistoloneammocheckzeroAOB)
rifleammocheckzeroAOB: //"AC4BFSP.exe"+186ECB5:
db 83 78 08 00 0F 97 C0
//Alt: cmp dword ptr [eax+08],00
//Alt: seta al
unregistersymbol(rifleammocheckzeroAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>72</ID>
          <Description>"Pistol 1 / other Firearms / Dart Weapons)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPistols</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>84</Key>
              </Keys>
              <Value>(max 1)</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>79</ID>
              <Description>"max 1"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPistols</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"Pistol 2"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPistols+4</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>84</Key>
              </Keys>
              <Value>(max 2)</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>80</ID>
              <Description>"max 2"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPistols+4</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"Pistol 3"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPistols+8</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>84</Key>
              </Keys>
              <Value>(max 3)</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>81</ID>
              <Description>"max 3"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPistols+8</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"Pistol 4"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPistols+c</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>84</Key>
              </Keys>
              <Value>(max 4)</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>82</ID>
              <Description>"max 4"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPistols+8</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>83</ID>
      <Description>"unlimited breath"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Daijobu was here
[ENABLE]
alloc(breath_,256)
label(original)
label(exit)
//------------
label(breath_aob)
registersymbol(breath_aob)
aobscan(aob_breath,8B 41 0C D9 80 80 00 00 00) //"AC4BFSP.exe"+E67553
//------------

breath_:
mov [eax+00000080],(float)1.0

original:
db D9 80 80 00 00 00
//------------
jmp exit
//------------

aob_breath+3: //"AC4BFSP.exe"+E67556
breath_aob:
jmp breath_
db 90
exit:

//------------

[DISABLE]
dealloc(breath_)
breath_aob:
db D9 80 80 00 00 00
//fld dword ptr [eax+00000080]
unregistersymbol(breath_aob)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>84</ID>
      <Description>"One-Hit Kill "</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)


newmem: //this is allocated memory, you have read,write,execute access
or ax,-1

originalcode:
mov [esi+5C],ax
test eax,eax

exit:
jmp returnhere

"AC4BFSP.exe"+12E69E6:
jmp newmem
nop
returnhere:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"AC4BFSP.exe"+12E69E6:
mov [esi+5C],ax
test eax,eax
//Alt: db 66 89 46 5C 85 C0
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>NoReloadAddress</Name>
      <Address>012E4BE9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Countdown</Name>
      <Address>20A60000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HealthAddress</Name>
      <Address> 01276037</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>allyhealth</Name>
      <Address> 00FB4DF0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ShipHealthAddress</Name>
      <Address> 0162F11F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MoneyEtcAddress</Name>
      <Address> 012D1F26</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AmmoAddress</Name>
      <Address> 01081D31</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>StealthPRO</Name>
      <Address> 01685E6D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InstantCooldowns</Name>
      <Address> 0143CDEF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>breath_aob</Name>
      <Address>01267556</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pistolsfiredcheckAOB</Name>
      <Address> 012E4BE9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pistolammoclipmaxreadAOB</Name>
      <Address> 012D0557</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPistols</Name>
      <Address>078300C5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pistoloneammocheckzeroAOB</Name>
      <Address> 012EECB8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>rifleammocheckzeroAOB</Name>
      <Address> 01C6ECB5</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5506595#5506595
</Comments>
</CheatTable>
