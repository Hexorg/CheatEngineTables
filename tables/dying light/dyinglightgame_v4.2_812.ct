<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <Forms>
    <PackEdit Class="TCEForm" Encoding="Ascii85">tyRm8/3tp-opkKPO{a.F4Vn$A1t2tPTGKCBcTA5anucU1L4),plS.c3$7PkvNoO@]zyh*0EBFP)h8.h@7YsXo0P5jK99K[f1lh!8+FCq,se8{.%^7ei?aYqK;_H-4bm0u*WPUxxta+cGtZ]_!o+^f2u+Ms,F)$F*?4doP7Br46,k-K}Bx*V?qa{)Mp:%%l3ElTX%wH6Nu3G1TMwjOr!dv8#h+1*DE2}qP+!m}W]/KdVWO,ZgI#(}hmq;*z=J?L60YdE5zKSLRp@3W):X]$*(IODO:Pw0^1Lr-$7,Dw(kLX8JbZ5!O0i7ah8Af{YBW+zD1npM^#w1Fry#A;2]ouCioYxIbSdZLwZh9g{tP}$N:kufD@El*4yV2:0v]]-^/G}.rp%6[)UN3,V:lH0E,WNFf.O)NGsoQ+G,.fU!Q;+H@RxMMf*[I^.OIHMURk1!cIUW{a]Y3d:_Lo%Tvm.su?]Ml739S.p@HoZrk3-DX=hsOr;5-67$EZV_X)7MMAV}pv/fT+qfv=FF(,r6[x4Xd4b;NMkvqH6A6zJVCUZ4cLL?}q@O=Tm5XmS6^aZd[d:S2!5[6^.!Y7sv(GsI8JLg$DYU4:J?OLeYAA#)W?-eHdSp[KJFtEHbd8;:{,cdTVTF$_Z3cx2%d-W[dEmNZveixd=_o4s,,7K@MJKM;E!$%s*L-6m$M]3.HCW^s-E;UBZDl=2p9Y-esh!x3xsZ@#M;Ouz!1fE5ly0K/@1z=!6h5wIW;0V*v@.G;yXvH+dVv/Sds)u8,ul1PnzF$yYOrRgXjE0M]??}3urYO9nhKXOMNS;CixtH$4kM*pP;r:8:3dg7z.I!1uZ0OrExycwcOhb0VCbOQPeBuspo5ur(Unfoxo6F=#5g#(2Hx%1Z}y$w#{0WZw:lAu^0z0Hr[OSx-DN]$L84%f:ae$9:^dL*y4pV#v9qL%mMc6$)U-/izqgAzi%C@POETKm5!yJED0ag264THXFdV72$S*5.P+%0$@WEB0S.@pbyj3k[A-59.ijVsk.hTf{d1H.qajSMK^Zo/fFHrpJ^]mXjrVUAn#6U8FkPfY=fA;4iQkuS[:e]%PI9?.@:49O]XTc2g@^_37L}LewwDkpn%FHZK29cMtI%TB2{{@1iiO^!+Bq,am(S#MU9Q9X{ayZwpaX.}%OTe]appS#6qpp(hCR=;wGLXA_u2b,),AHPnuidKGAzt+Hc;W($1E+KB6RY$RG}HdavWHoDtuN]!g}*b#vPtLO79$z[p5jz1u5dP]98]xg</PackEdit>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>2678</ID>
      <Description>"God Mode"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2674</ID>
          <Description>"God Mode1 have to enable both of them to get godmode"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(GodMode1,gamedll_x64_rwdi.dll,0F 2F F0 77 03 0F 28 C6 44)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AAE4A9)

label(code)
label(return)

newmem:

code:
  //comiss xmm6,xmm0
  ja gamedll_x64_rwdi.ShutdownGameScriptDLL+AAB9A1
  jmp return

GodMode1:
  jmp code
return:
registersymbol(GodMode1)

[DISABLE]

GodMode1:
  db 0F 2F F0 77 03

unregistersymbol(GodMode1)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AAE4A9

"gamedll_x64_rwdi.dll"+AAE487: EB 28                    -  jmp gamedll_x64_rwdi.dll+AAE4B1
"gamedll_x64_rwdi.dll"+AAE489: 48 8D BB 38 F7 FF FF     -  lea rdi,[rbx-000008C8]
"gamedll_x64_rwdi.dll"+AAE490: 83 CA FF                 -  or edx,-01
"gamedll_x64_rwdi.dll"+AAE493: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AAE496: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAE499: FF 90 48 01 00 00        -  call qword ptr [rax+00000148]
"gamedll_x64_rwdi.dll"+AAE49F: 0F 2F F7                 -  comiss xmm6,xmm7
"gamedll_x64_rwdi.dll"+AAE4A2: 73 05                    -  jae gamedll_x64_rwdi.dll+AAE4A9
"gamedll_x64_rwdi.dll"+AAE4A4: 0F 28 C7                 -  movaps xmm0,xmm7
"gamedll_x64_rwdi.dll"+AAE4A7: EB 08                    -  jmp gamedll_x64_rwdi.dll+AAE4B1
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AAE4A9: 0F 2F F0                 -  comiss xmm6,xmm0
"gamedll_x64_rwdi.dll"+AAE4AC: 77 03                    -  ja gamedll_x64_rwdi.dll+AAE4B1
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AAE4AE: 0F 28 C6                 -  movaps xmm0,xmm6
"gamedll_x64_rwdi.dll"+AAE4B1: 44 0F 28 44 24 20        -  movaps xmm8,[rsp+20]
"gamedll_x64_rwdi.dll"+AAE4B7: F3 0F 11 83 54 09 00 00  -  movss [rbx+00000954],xmm0
"gamedll_x64_rwdi.dll"+AAE4BF: 40 84 F6                 -  test sil,sil
"gamedll_x64_rwdi.dll"+AAE4C2: 74 15                    -  je gamedll_x64_rwdi.dll+AAE4D9
"gamedll_x64_rwdi.dll"+AAE4C4: 0F 2F F8                 -  comiss xmm7,xmm0
"gamedll_x64_rwdi.dll"+AAE4C7: 72 10                    -  jb gamedll_x64_rwdi.dll+AAE4D9
"gamedll_x64_rwdi.dll"+AAE4C9: 41 B1 01                 -  mov cl,01
"gamedll_x64_rwdi.dll"+AAE4CC: 45 33 C0                 -  xor r8d,r8d
"gamedll_x64_rwdi.dll"+AAE4CF: 33 D2                    -  xor edx,edx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2677</ID>
          <Description>"God Mode2 have to enable both of them to get godmode"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(GodMode2,gamedll_x64_rwdi.dll,0F 2F F7 73 05 0F 28 C7 EB 08)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AAE49F)

label(code)
label(return)

newmem:

code:
  //comiss xmm6,xmm7
  jae gamedll_x64_rwdi.ShutdownGameScriptDLL+AAB999
  jmp return

GodMode2:
  jmp code
return:
registersymbol(GodMode2)

[DISABLE]

GodMode2:
  db 0F 2F F7 73 05

unregistersymbol(GodMode2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AAE49F

"gamedll_x64_rwdi.dll"+AAE47B: 72 34                    -  jb gamedll_x64_rwdi.dll+AAE4B1
"gamedll_x64_rwdi.dll"+AAE47D: 41 0F 2F F0              -  comiss xmm6,xmm8
"gamedll_x64_rwdi.dll"+AAE481: 76 2B                    -  jna gamedll_x64_rwdi.dll+AAE4AE
"gamedll_x64_rwdi.dll"+AAE483: 41 0F 28 C0              -  movaps xmm0,xmm8
"gamedll_x64_rwdi.dll"+AAE487: EB 28                    -  jmp gamedll_x64_rwdi.dll+AAE4B1
"gamedll_x64_rwdi.dll"+AAE489: 48 8D BB 38 F7 FF FF     -  lea rdi,[rbx-000008C8]
"gamedll_x64_rwdi.dll"+AAE490: 83 CA FF                 -  or edx,-01
"gamedll_x64_rwdi.dll"+AAE493: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AAE496: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAE499: FF 90 48 01 00 00        -  call qword ptr [rax+00000148]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AAE49F: 0F 2F F7                 -  comiss xmm6,xmm7
"gamedll_x64_rwdi.dll"+AAE4A2: 73 05                    -  jae gamedll_x64_rwdi.dll+AAE4A9
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AAE4A4: 0F 28 C7                 -  movaps xmm0,xmm7
"gamedll_x64_rwdi.dll"+AAE4A7: EB 08                    -  jmp gamedll_x64_rwdi.dll+AAE4B1
"gamedll_x64_rwdi.dll"+AAE4A9: 0F 2F F0                 -  comiss xmm6,xmm0
"gamedll_x64_rwdi.dll"+AAE4AC: 77 03                    -  ja gamedll_x64_rwdi.dll+AAE4B1
"gamedll_x64_rwdi.dll"+AAE4AE: 0F 28 C6                 -  movaps xmm0,xmm6
"gamedll_x64_rwdi.dll"+AAE4B1: 44 0F 28 44 24 20        -  movaps xmm8,[rsp+20]
"gamedll_x64_rwdi.dll"+AAE4B7: F3 0F 11 83 54 09 00 00  -  movss [rbx+00000954],xmm0
"gamedll_x64_rwdi.dll"+AAE4BF: 40 84 F6                 -  test sil,sil
"gamedll_x64_rwdi.dll"+AAE4C2: 74 15                    -  je gamedll_x64_rwdi.dll+AAE4D9
"gamedll_x64_rwdi.dll"+AAE4C4: 0F 2F F8                 -  comiss xmm7,xmm0
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2596</ID>
      <Description>"Cash"</Description>
      <LastState/>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Cash,gamedll_x64_rwdi.dll,89 43 40 E8 85 59 74 FF)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BDD2A3)

label(code)
label(return)

newmem:

code:
  //mov [rbx+40],eax
  mov [rbx+40],999999
  call gamedll_x64_rwdi.ShutdownGameScriptDLL+320120
  jmp return

Cash:
  jmp code
  nop
  nop
  nop
return:
registersymbol(Cash)

[DISABLE]

Cash:
  db 89 43 40 E8 85 59 74 FF

unregistersymbol(Cash)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+BDD2A3

"gamedll_x64_rwdi.dll"+BDD27D: C3                    -  ret 
"gamedll_x64_rwdi.dll"+BDD27E: 48 89 6C 24 40        -  mov [rsp+40],rbp
"gamedll_x64_rwdi.dll"+BDD283: 8B 69 40              -  mov ebp,[rcx+40]
"gamedll_x64_rwdi.dll"+BDD286: B9 FF FF FF 7F        -  mov ecx,7FFFFFFF
"gamedll_x64_rwdi.dll"+BDD28B: 8D 44 3D 00           -  lea eax,[rbp+rdi+00]
"gamedll_x64_rwdi.dll"+BDD28F: 48 89 7C 24 20        -  mov [rsp+20],rdi
"gamedll_x64_rwdi.dll"+BDD294: 44 89 44 24 28        -  mov [rsp+28],r8d
"gamedll_x64_rwdi.dll"+BDD299: 3B C1                 -  cmp eax,ecx
"gamedll_x64_rwdi.dll"+BDD29B: 0F 4D C1              -  cmovge eax,ecx
"gamedll_x64_rwdi.dll"+BDD29E: 48 8D 4C 24 20        -  lea rcx,[rsp+20]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+BDD2A3: 89 43 40              -  mov [rbx+40],eax
"gamedll_x64_rwdi.dll"+BDD2A6: E8 85 59 74 FF        -  call gamedll_x64_rwdi.dll+322C30
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+BDD2AB: 4C 63 5B 40           -  movsxd  r11,dword ptr [rbx+40]
"gamedll_x64_rwdi.dll"+BDD2AF: 48 8D 4C 24 58        -  lea rcx,[rsp+58]
"gamedll_x64_rwdi.dll"+BDD2B4: 4C 89 5C 24 58        -  mov [rsp+58],r11
"gamedll_x64_rwdi.dll"+BDD2B9: E8 62 5A 74 FF        -  call gamedll_x64_rwdi.dll+322D20
"gamedll_x64_rwdi.dll"+BDD2BE: 48 8B CB              -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+BDD2C1: E8 EA 05 00 00        -  call gamedll_x64_rwdi.dll+BDD8B0
"gamedll_x64_rwdi.dll"+BDD2C6: 48 8B 4B 48           -  mov rcx,[rbx+48]
"gamedll_x64_rwdi.dll"+BDD2CA: 48 85 C9              -  test rcx,rcx
"gamedll_x64_rwdi.dll"+BDD2CD: 74 4C                 -  je gamedll_x64_rwdi.dll+BDD31B
"gamedll_x64_rwdi.dll"+BDD2CF: 48 83 C1 40           -  add rcx,40
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2652</ID>
      <Description>"Survivor Rank XP Points (Set To 2000000 For Max)"</Description>
      <LastState Value="2000000" RealAddress="5FB70D58"/>
      <Color>FF0000</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>"gamedll_x64_rwdi.dll"+01C143A8</Address>
      <Offsets>
        <Offset>68</Offset>
        <Offset>40</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>2634</ID>
      <Description>"Instant LVL Agility/Power/Legend/Driver"</Description>
      <LastState Activated="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(XP,gamedll_x64_rwdi.dll,39 44 3A 08 76 1A)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AB259B)

label(code)
label(return)

newmem:

code:
  //cmp [rdx+rdi+08],eax
  jna gamedll_x64_rwdi.ShutdownGameScriptDLL+AAFAAB
  jmp return

XP:
  jmp code
  nop
return:
registersymbol(XP)

[DISABLE]

XP:
  db 39 44 3A 08 76 1A

unregistersymbol(XP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AB259B

"gamedll_x64_rwdi.dll"+AB257A: 48 8B 0C 07           -  mov rcx,[rdi+rax]
"gamedll_x64_rwdi.dll"+AB257E: 48 85 C9              -  test rcx,rcx
"gamedll_x64_rwdi.dll"+AB2581: 74 38                 -  je gamedll_x64_rwdi.dll+AB25BB
"gamedll_x64_rwdi.dll"+AB2583: 4C 8B 09              -  mov r9,[rcx]
"gamedll_x64_rwdi.dll"+AB2586: 48 8B D0              -  mov rdx,rax
"gamedll_x64_rwdi.dll"+AB2589: 0F B7 44 38 16        -  movzx eax,word ptr [rax+rdi+16]
"gamedll_x64_rwdi.dll"+AB258E: FF C8                 -  dec eax
"gamedll_x64_rwdi.dll"+AB2590: 48 98                 -  cdqe 
"gamedll_x64_rwdi.dll"+AB2592: 48 8D 0C 80           -  lea rcx,[rax+rax*4]
"gamedll_x64_rwdi.dll"+AB2596: 41 8B 44 C9 18        -  mov eax,[r9+rcx*8+18]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AB259B: 39 44 3A 08           -  cmp [rdx+rdi+08],eax
"gamedll_x64_rwdi.dll"+AB259F: 76 1A                 -  jna gamedll_x64_rwdi.dll+AB25BB
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AB25A1: 0F B7 44 3A 16        -  movzx eax,word ptr [rdx+rdi+16]
"gamedll_x64_rwdi.dll"+AB25A6: 4C 8B C2              -  mov r8,rdx
"gamedll_x64_rwdi.dll"+AB25A9: FF C8                 -  dec eax
"gamedll_x64_rwdi.dll"+AB25AB: 48 98                 -  cdqe 
"gamedll_x64_rwdi.dll"+AB25AD: 48 8D 14 80           -  lea rdx,[rax+rax*4]
"gamedll_x64_rwdi.dll"+AB25B1: 41 8B 44 D1 18        -  mov eax,[r9+rdx*8+18]
"gamedll_x64_rwdi.dll"+AB25B6: 41 89 44 38 08        -  mov [r8+rdi+08],eax
"gamedll_x64_rwdi.dll"+AB25BB: 8B D6                 -  mov edx,esi
"gamedll_x64_rwdi.dll"+AB25BD: 48 8B CB              -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+AB25C0: E8 8B E9 08 00        -  call gamedll_x64_rwdi.dll+B40F50
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2669</ID>
      <Description>"Time Of Day Options"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2667</ID>
          <Description>"Time Of Day ( 1 AM )"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
 //code from here to '[DISABLE]' will be used to enable the cheat
 alloc(newmem,2048,"gamedll_x64_rwdi.dll"+3926E3)
 label(returnhere)
 label(originalcode)
 label(exit)
 label(TimePoint)

 newmem: //this is allocated memory, you have read,write,execute access
 push rax
 mov rax,[TimePoint]
 mov [rdi+000000A4],rax
 pop rax

 originalcode:
 //movss [rdi+000000A4],xmm6

 exit:
 jmp returnhere

 TimePoint:
 //dd (float)0.5
   dd (float)1

 "gamedll_x64_rwdi.dll"+3926E3:
 jmp newmem
 nop
 nop
 nop
 returnhere:

 registersymbol(TimePoint)

 [DISABLE]
 //code from here till the end of the code will be used to disable the cheat
 dealloc(newmem)
 unregistersymbol(TimePoint)
 "gamedll_x64_rwdi.dll"+3926E3:
 movss [rdi+000000A4],xmm6
 //Alt: db F3 0F 11 B7 A4 00 00 00

 {
 // ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+3926E3

 "gamedll_x64_rwdi.dll"+3926BD: 48 83 C4 50              -  add rsp,50
 "gamedll_x64_rwdi.dll"+3926C1: 5F                       -  pop rdi
 "gamedll_x64_rwdi.dll"+3926C2: C3                       -  ret
 "gamedll_x64_rwdi.dll"+3926C3: 39 AF E0 00 00 00        -  cmp [rdi+000000E0],ebp
 "gamedll_x64_rwdi.dll"+3926C9: 75 E3                    -  jne gamedll_x64_rwdi.dll+3926AE
 "gamedll_x64_rwdi.dll"+3926CB: 48 8B CF                 -  mov rcx,rdi
 "gamedll_x64_rwdi.dll"+3926CE: E8 2D 01 00 00           -  call gamedll_x64_rwdi.dll+392800
 "gamedll_x64_rwdi.dll"+3926D3: F3 0F 5E F0              -  divss xmm6,xmm0
 "gamedll_x64_rwdi.dll"+3926D7: F3 0F 59 F7              -  mulss xmm6,xmm7
 "gamedll_x64_rwdi.dll"+3926DB: F3 0F 58 B7 A4 00 00 00  -  addss xmm6,[rdi+000000A4]
 // ---------- INJECTING HERE ----------
 "gamedll_x64_rwdi.dll"+3926E3: F3 0F 11 B7 A4 00 00 00  -  movss [rdi+000000A4],xmm6
 // ---------- DONE INJECTING  ----------
 "gamedll_x64_rwdi.dll"+3926EB: EB C1                    -  jmp gamedll_x64_rwdi.dll+3926AE
 "gamedll_x64_rwdi.dll"+3926ED: 33 ED                    -  xor ebp,ebp
 "gamedll_x64_rwdi.dll"+3926EF: 89 AF A8 00 00 00        -  mov [rdi+000000A8],ebp
 "gamedll_x64_rwdi.dll"+3926F5: 48 8B 6C 24 78           -  mov rbp,[rsp+78]
 "gamedll_x64_rwdi.dll"+3926FA: 48 83 C4 50              -  add rsp,50
 "gamedll_x64_rwdi.dll"+3926FE: 5F                       -  pop rdi
 "gamedll_x64_rwdi.dll"+3926FF: C3                       -  ret
 "gamedll_x64_rwdi.dll"+392700: 40 57                    -  push rdi
 "gamedll_x64_rwdi.dll"+392702: 48 83 EC 40              -  sub rsp,40
 "gamedll_x64_rwdi.dll"+392706: 48 8B F9                 -  mov rdi,rcx
 }
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys/>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys/>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>2668</ID>
          <Description>"Time Of Day ( 12 PM )"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
 //code from here to '[DISABLE]' will be used to enable the cheat
 alloc(newmem,2048,"gamedll_x64_rwdi.dll"+3926E3)
 label(returnhere)
 label(originalcode)
 label(exit)
 label(TimePoint)

 newmem: //this is allocated memory, you have read,write,execute access
 push rax
 mov rax,[TimePoint]
 mov [rdi+000000A4],rax
 pop rax

 originalcode:
 //movss [rdi+000000A4],xmm6

 exit:
 jmp returnhere

 TimePoint:
 dd (float)0.5

 "gamedll_x64_rwdi.dll"+3926E3:
 jmp newmem
 nop
 nop
 nop
 returnhere:

 registersymbol(TimePoint)

 [DISABLE]
 //code from here till the end of the code will be used to disable the cheat
 dealloc(newmem)
 unregistersymbol(TimePoint)
 "gamedll_x64_rwdi.dll"+3926E3:
 movss [rdi+000000A4],xmm6
 //Alt: db F3 0F 11 B7 A4 00 00 00

 {
 // ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+3926E3

 "gamedll_x64_rwdi.dll"+3926BD: 48 83 C4 50              -  add rsp,50
 "gamedll_x64_rwdi.dll"+3926C1: 5F                       -  pop rdi
 "gamedll_x64_rwdi.dll"+3926C2: C3                       -  ret
 "gamedll_x64_rwdi.dll"+3926C3: 39 AF E0 00 00 00        -  cmp [rdi+000000E0],ebp
 "gamedll_x64_rwdi.dll"+3926C9: 75 E3                    -  jne gamedll_x64_rwdi.dll+3926AE
 "gamedll_x64_rwdi.dll"+3926CB: 48 8B CF                 -  mov rcx,rdi
 "gamedll_x64_rwdi.dll"+3926CE: E8 2D 01 00 00           -  call gamedll_x64_rwdi.dll+392800
 "gamedll_x64_rwdi.dll"+3926D3: F3 0F 5E F0              -  divss xmm6,xmm0
 "gamedll_x64_rwdi.dll"+3926D7: F3 0F 59 F7              -  mulss xmm6,xmm7
 "gamedll_x64_rwdi.dll"+3926DB: F3 0F 58 B7 A4 00 00 00  -  addss xmm6,[rdi+000000A4]
 // ---------- INJECTING HERE ----------
 "gamedll_x64_rwdi.dll"+3926E3: F3 0F 11 B7 A4 00 00 00  -  movss [rdi+000000A4],xmm6
 // ---------- DONE INJECTING  ----------
 "gamedll_x64_rwdi.dll"+3926EB: EB C1                    -  jmp gamedll_x64_rwdi.dll+3926AE
 "gamedll_x64_rwdi.dll"+3926ED: 33 ED                    -  xor ebp,ebp
 "gamedll_x64_rwdi.dll"+3926EF: 89 AF A8 00 00 00        -  mov [rdi+000000A8],ebp
 "gamedll_x64_rwdi.dll"+3926F5: 48 8B 6C 24 78           -  mov rbp,[rsp+78]
 "gamedll_x64_rwdi.dll"+3926FA: 48 83 C4 50              -  add rsp,50
 "gamedll_x64_rwdi.dll"+3926FE: 5F                       -  pop rdi
 "gamedll_x64_rwdi.dll"+3926FF: C3                       -  ret
 "gamedll_x64_rwdi.dll"+392700: 40 57                    -  push rdi
 "gamedll_x64_rwdi.dll"+392702: 48 83 EC 40              -  sub rsp,40
 "gamedll_x64_rwdi.dll"+392706: 48 8B F9                 -  mov rdi,rcx
 }
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys/>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys/>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2521</ID>
      <Description>"Instant Kill"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

aobscanmodule(InstantKill,gamedll_x64_rwdi.dll,F3 0F 5C CE F3 41 0F 11)
registersymbol(InstantKill)

InstantKill:
db F3 0F 5C C9 F3 41 0F 11 4F 78

[Disable]

InstantKill:
db F3 0F 5C CE F3 41 0F 11 4F 7C
unregistersymbol(InstantKill)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2522</ID>
      <Description>"Infinite Stamina"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

aobscanmodule(InfiniteStamina1,gamedll_x64_rwdi.dll,F3 0F 10 4B 10 F3 41 0F 5C C8)
registersymbol(InfiniteStamina1)

aobscanmodule(InfiniteStamina2,gamedll_x64_rwdi.dll,F3 0F 5C C7 F3 0F 11 43 10)
registersymbol(InfiniteStamina2)

InfiniteStamina1+5:
db F3 41 0F 58 C8

InfiniteStamina2:
db F3 0F 58 C7

[Disable]

InfiniteStamina1+5:
db F3 41 0F 5C C8
unregistersymbol(InfiniteStamina1)

InfiniteStamina2:
db F3 0F 5C C7
unregistersymbol(InfiniteStamina2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2665</ID>
      <Description>"Super Jump"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(playerStats,gamedll_x64_rwdi.dll,09 89 70 14 F3 0F 10 40 10)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+A0B12C)

label(code)
label(return)
label(bypass)
label(runspeed)
label(stun)
label(throwmelee)
label(critical)

newmem:
  cmp r9,1250
  je runspeed
  cmp r9,4D0
  je stun
  cmp r9,190
  je throwmelee
  cmp r9,1510
  je critical
  jmp code

runspeed:
  mov [rax+10],(float)50.0
  jmp bypass

stun:
  mov [rax+10],(float)100.0 // default 1.0
  jmp bypass

throwmelee:
  mov [rax+10],(float)50.0 // default 4.0
  jmp bypass

critical:
  mov [rax+10],(float)100.0 // default 1.0
  jmp bypass

bypass:
  movss xmm0,[rax+10]
  jmp return

code:
  movss xmm0,[rax+10]
  jmp return

playerStats+04:
  jmp newmem
return:
registersymbol(playerStats)

[DISABLE]
playerStats+04:
  db F3 0F 10 40 10

unregistersymbol(playerStats)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1102</ID>
      <Description>"Infinite Crafting Items"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(ici_1,32,gamedll_x64_rwdi.dll) //Infinite Crafting Items
aobscanmodule(ici_aob1,gamedll_x64_rwdi.dll,48 39 1C 28 75 59 8B 73 40 48 8D 4B 40)
registersymbol(ici_aob1)
label(returnhere_ici_1)

//--------------------------------------------------//
ici_1:
mov [rbx+40],64
mov esi,[rbx+40]
lea rcx,[rbx+40]
jmp returnhere_ici_1
//--------------------------------------------------//

ici_aob1+6:
jmp ici_1
nop
nop
returnhere_ici_1:

[Disable]

ici_aob1+6:
db 8B 73 40 48 8D 4B 40
unregistersymbol(ici_aob1)
dealloc(ici_1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2541</ID>
      <Description>"Instant Cool Down Rate Flare/Airstrike ect."</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]


 
 
aobscanmodule(UnlimitedFlare,gamedll_x64_rwdi.dll,F3 0F 11 01 77 23)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+B93689)

label(code)
label(return)

newmem:

code:
  //movss [rcx],xmm0
  ja gamedll_x64_rwdi.ShutdownGameScriptDLL+B90BA2
  jmp return

UnlimitedFlare:
  jmp code
  nop
return:
registersymbol(UnlimitedFlare)

[DISABLE]

UnlimitedFlare:
  db F3 0F 11 01 77 23

unregistersymbol(UnlimitedFlare)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+B93689

"gamedll_x64_rwdi.dll"+B9366E: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+B9366F: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+B93670: 0F 57 D2                 -  xorps xmm2,xmm2
"gamedll_x64_rwdi.dll"+B93673: 0F 2F CA                 -  comiss xmm1,xmm2
"gamedll_x64_rwdi.dll"+B93676: 76 3A                    -  jna gamedll_x64_rwdi.dll+B936B2
"gamedll_x64_rwdi.dll"+B93678: F3 0F 10 01              -  movss xmm0,[rcx]
"gamedll_x64_rwdi.dll"+B9367C: 8B 41 14                 -  mov eax,[rcx+14]
"gamedll_x64_rwdi.dll"+B9367F: F3 0F 5C C1              -  subss xmm0,xmm1
"gamedll_x64_rwdi.dll"+B93683: 89 41 28                 -  mov [rcx+28],eax
"gamedll_x64_rwdi.dll"+B93686: 0F 2F C2                 -  comiss xmm0,xmm2
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+B93689: F3 0F 11 01              -  movss [rcx],xmm0
"gamedll_x64_rwdi.dll"+B9368D: 77 23                    -  ja gamedll_x64_rwdi.dll+B936B2
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+B9368F: 80 79 19 00              -  cmp byte ptr [rcx+19],00
"gamedll_x64_rwdi.dll"+B93693: C6 41 05 01              -  mov byte ptr [rcx+05],01
"gamedll_x64_rwdi.dll"+B93697: 75 0A                    -  jne gamedll_x64_rwdi.dll+B936A3
"gamedll_x64_rwdi.dll"+B93699: 80 79 04 00              -  cmp byte ptr [rcx+04],00
"gamedll_x64_rwdi.dll"+B9369D: 74 04                    -  je gamedll_x64_rwdi.dll+B936A3
"gamedll_x64_rwdi.dll"+B9369F: C6 41 04 00              -  mov byte ptr [rcx+04],00
"gamedll_x64_rwdi.dll"+B936A3: 8B 41 20                 -  mov eax,[rcx+20]
"gamedll_x64_rwdi.dll"+B936A6: C7 01 00 00 00 00        -  mov [rcx],00000000
"gamedll_x64_rwdi.dll"+B936AC: 89 41 28                 -  mov [rcx+28],eax
"gamedll_x64_rwdi.dll"+B936AF: B0 01                    -  mov al,01
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>328</ID>
      <Description>"Unlimited Potion Duration"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(UnlimitedPotionDuration,gamedll_x64_rwdi.dll,0F 28 F9 F3 0F 5C C7)
UnlimitedPotionDuration+3:
  db 90 90 90 90
registersymbol(UnlimitedPotionDuration)

[DISABLE]
UnlimitedPotionDuration+3:
  db F3 0F 5C C7
unregistersymbol(UnlimitedPotionDuration)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>354</ID>
      <Description>"Free Blueprint Requirements"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(FreeBluAOB1,gamedll_x64_rwdi.dll,41 8B 44 0D 00 85 C0)
aobscanmodule(FreeBluAOB2,gamedll_x64_rwdi.dll,44 8B 24 17 41 8D 51 01)
alloc(newmem,2048,gamedll_x64_rwdi.dll)

label(FreeBlu1Start)
label(FreeBlu2Start)
label(FreeBlue1End)
label(FreeBlue2End)
registersymbol(FreeBluAOB1)
registersymbol(FreeBluAOB2)

newmem:

FreeBlu1Start:
mov eax,0
jmp FreeBlue1End

FreeBlu2Start:
mov r12d,0
lea edx,[r9+01]
jmp FreeBlue2End

FreeBluAOB1:
jmp FreeBlu1Start
FreeBlue1End:

FreeBluAOB2:
jmp FreeBlu2Start
nop
nop
nop
FreeBlue2End:
 
[DISABLE]

dealloc(newmem)

FreeBluAOB1:
db 41 8B 44 0D 00

FreeBluAOB2:
db 44 8B 24 17 41 8D 51 01

unregistersymbol(FreeBluAOB1)
unregistersymbol(FreeBluAOB2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1236</ID>
      <Description>"Indestructible Weapons"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

//Indestructible Weapons
aobscanmodule(iw_aob1,gamedll_x64_rwdi.dll,0F 2F F0 76 11 48 8B 47 18)
registersymbol(iw_aob1)

iw_aob1+3:
db 90 90


[DISABLE]

iw_aob1+3:
db 76 11
unregistersymbol(iw_aob1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2666</ID>
      <Description>"Weapons In Save Zone"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

 aobscanmodule(wisz_aob1,gamedll_x64_rwdi.dll,48 85 D2 74 03 48 89 3A FF 83 68 09 00 00)
 registersymbol(wisz_aob1)

 wisz_aob1+8:
 db 90 90 90 90 90 90

 [Disable]

 wisz_aob1+8:
 db FF 83 68 09 00 00
 unregistersymbol(wisz_aob1)

 {
 // ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AE1784

 "gamedll_x64_rwdi.dll"+AE1754: 48 8B 8B 60 09 00 00  -  mov rcx,[rbx+00000960]
 "gamedll_x64_rwdi.dll"+AE175B: C1 E2 03              -  shl edx,03
 "gamedll_x64_rwdi.dll"+AE175E: FF 15 AC DC 83 00     -  call qword ptr [gamedll_x64_rwdi.dll+131F410]
 "gamedll_x64_rwdi.dll"+AE1764: 48 89 83 60 09 00 00  -  mov [rbx+00000960],rax
 "gamedll_x64_rwdi.dll"+AE176B: 8B 8B 68 09 00 00     -  mov ecx,[rbx+00000968]
 "gamedll_x64_rwdi.dll"+AE1771: 48 8B 83 60 09 00 00  -  mov rax,[rbx+00000960]
 "gamedll_x64_rwdi.dll"+AE1778: 48 8D 14 C8           -  lea rdx,[rax+rcx*8]
 "gamedll_x64_rwdi.dll"+AE177C: 48 85 D2              -  test rdx,rdx
 "gamedll_x64_rwdi.dll"+AE177F: 74 03                 -  je gamedll_x64_rwdi.dll+AE1784
 "gamedll_x64_rwdi.dll"+AE1781: 48 89 3A              -  mov [rdx],rdi
 // ---------- INJECTING HERE ----------
 "gamedll_x64_rwdi.dll"+AE1784: FF 83 68 09 00 00     -  inc [rbx+00000968]
 // ---------- DONE INJECTING  ----------
 "gamedll_x64_rwdi.dll"+AE178A: 48 8B CB              -  mov rcx,rbx
 "gamedll_x64_rwdi.dll"+AE178D: E8 1E 2B FF FF        -  call gamedll_x64_rwdi.dll+AD42B0
 "gamedll_x64_rwdi.dll"+AE1792: 40 32 C6              -  xor al,sil
 "gamedll_x64_rwdi.dll"+AE1795: 48 8B 74 24 40        -  mov rsi,[rsp+40]
 "gamedll_x64_rwdi.dll"+AE179A: 74 26                 -  je gamedll_x64_rwdi.dll+AE17C2
 "gamedll_x64_rwdi.dll"+AE179C: 48 8B CB              -  mov rcx,rbx
 "gamedll_x64_rwdi.dll"+AE179F: E8 0C 2B FF FF        -  call gamedll_x64_rwdi.dll+AD42B0
 "gamedll_x64_rwdi.dll"+AE17A4: 84 C0                 -  test al,al
 "gamedll_x64_rwdi.dll"+AE17A6: 74 1A                 -  je gamedll_x64_rwdi.dll+AE17C2
 "gamedll_x64_rwdi.dll"+AE17A8: 48 8B CB              -  mov rcx,rbx
 }
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1100</ID>
      <Description>"Infinite Ammo"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

//Infinite Clip Ammo
aobscanmodule(ica_aob1,gamedll_x64_rwdi.dll,8B 50 40 48 8D 48 40 FF CA E8)
registersymbol(ica_aob1)

//Infinite Overall Ammo
aobscanmodule(ioa_aob1,gamedll_x64_rwdi.dll,48 63 C3 48 03 C0 45 89 44 C2 04)
registersymbol(ioa_aob1)

ica_aob1+7:
db 90 90

ioa_aob1+6:
db 90 90 90 90 90

[Disable]

ica_aob1+7:
db FF CA
unregistersymbol(ica_aob1)

ioa_aob1+6:
db 45 89 44 C2 04
unregistersymbol(ioa_aob1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1103</ID>
      <Description>"Infinite Throwables / Weapon Upgrades"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(itwu_aob1,gamedll_x64_rwdi.dll,83 39 01 7E 39)
registersymbol(itwu_aob1)

itwu_aob1+3:
db 90 90

itwu_aob1+7:
db 90 90


[DISABLE]

itwu_aob1+3:
db 7E 39

itwu_aob1+7:
db FF CA
unregistersymbol(itwu_aob1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2035</ID>
      <Description>"Infinite UV Flashlight"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

aobscanmodule(iuf_aob1,gamedll_x64_rwdi.dll,F3 0F 5C C2 89 41 28)
registersymbol(iuf_aob1)

iuf_aob1:
db F3 0F 58 C2

[Disable]

iuf_aob1:
db F3 0F 5C C2
unregistersymbol(iuf_aob1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2044</ID>
      <Description>"Easy Lock Picking "</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(elp_1,32,gamedll_x64_rwdi.dll)
aobscanmodule(elp_aob1,gamedll_x64_rwdi.dll,F3 0F 10 56 50 F3 0F 10 4E 54)
registersymbol(elp_aob1)
label(returnhere_elp_1)

//--------------------------------------------------//
elp_1:
movss xmm1,[rsi+54]
mov [rsi+54],(float)999999
jmp returnhere_elp_1
//--------------------------------------------------//

elp_aob1+5:
jmp elp_1
returnhere_elp_1:

[Disable]

elp_aob1+5:
db F3 0F 10 4E 54
unregistersymbol(elp_aob1)
dealloc(elp_1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2420</ID>
      <Description>"Unlimited Camouflage (activate script camouflage self) O=On P=Off"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(UnlimitedCamouflage,gamedll_x64_rwdi.dll,F3 0F 11 43 14 0F 28)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BE7DA7)

label(code)
label(return)

newmem:

code:
  //movss [rbx+14],xmm0
  jmp return

UnlimitedCamouflage:
  jmp code
return:
registersymbol(UnlimitedCamouflage)

[DISABLE]

UnlimitedCamouflage:
  db F3 0F 11 43 14

unregistersymbol(UnlimitedCamouflage)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+BE7DA7

"gamedll_x64_rwdi.dll"+BE7D78: 66 0F EF C9              -  pxor xmm1,xmm1
"gamedll_x64_rwdi.dll"+BE7D7C: 83 E0 01                 -  and eax,01
"gamedll_x64_rwdi.dll"+BE7D7F: 2B C8                    -  sub ecx,eax
"gamedll_x64_rwdi.dll"+BE7D81: F3 0F 2A C9              -  cvtsi2ss xmm1,ecx
"gamedll_x64_rwdi.dll"+BE7D85: F3 0F 59 0D B3 3E 7E 00  -  mulss xmm1,[gamedll_x64_rwdi.dll+13CBC40]
"gamedll_x64_rwdi.dll"+BE7D8D: F3 0F 10 43 14           -  movss xmm0,[rbx+14]
"gamedll_x64_rwdi.dll"+BE7D92: F3 0F 58 0D F2 F1 7D 00  -  addss xmm1,[gamedll_x64_rwdi.dll+13C6F8C]
"gamedll_x64_rwdi.dll"+BE7D9A: F3 41 0F 59 C8           -  mulss xmm1,xmm8
"gamedll_x64_rwdi.dll"+BE7D9F: F3 0F 59 CE              -  mulss xmm1,xmm6
"gamedll_x64_rwdi.dll"+BE7DA3: F3 0F 5C C1              -  subss xmm0,xmm1
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+BE7DA7: F3 0F 11 43 14           -  movss [rbx+14],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+BE7DAC: 0F 28 74 24 40           -  movaps xmm6,[rsp+40]
"gamedll_x64_rwdi.dll"+BE7DB1: 44 0F 28 44 24 30        -  movaps xmm8,[rsp+30]
"gamedll_x64_rwdi.dll"+BE7DB7: 48 83 C4 50              -  add rsp,50
"gamedll_x64_rwdi.dll"+BE7DBB: 5B                       -  pop rbx
"gamedll_x64_rwdi.dll"+BE7DBC: C3                       -  ret 
"gamedll_x64_rwdi.dll"+BE7DBD: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+BE7DBE: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+BE7DBF: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+BE7DC0: 40 53                    -  push rbx
"gamedll_x64_rwdi.dll"+BE7DC2: 48 83 EC 20              -  sub rsp,20
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>79</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>80</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>2457</ID>
      <Description>"Grappling Hook Instant Cooldown"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(InfiniteGrapplingHook,gamedll_x64_rwdi.dll,F3 0F 11 43 40 77)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+C9352A)

label(code)
label(return)

newmem:

code:
  //movss [rbx+40],xmm0
  jmp return

InfiniteGrapplingHook:
  jmp code
return:
registersymbol(InfiniteGrapplingHook)

[DISABLE]

InfiniteGrapplingHook:
  db F3 0F 11 43 40

unregistersymbol(InfiniteGrapplingHook)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+C9352A

"gamedll_x64_rwdi.dll"+C93503: 74 0C                    -  je gamedll_x64_rwdi.dll+C93511
"gamedll_x64_rwdi.dll"+C93505: 48 8B C8                 -  mov rcx,rax
"gamedll_x64_rwdi.dll"+C93508: E8 83 43 74 FF           -  call gamedll_x64_rwdi.dll+3D7890
"gamedll_x64_rwdi.dll"+C9350D: 84 C0                    -  test al,al
"gamedll_x64_rwdi.dll"+C9350F: 75 0D                    -  jne gamedll_x64_rwdi.dll+C9351E
"gamedll_x64_rwdi.dll"+C93511: E8 DA 1A 70 FF           -  call gamedll_x64_rwdi.dll+394FF0
"gamedll_x64_rwdi.dll"+C93516: F3 0F 59 B0 AC 01 00 00  -  mulss xmm6,[rax+000001AC]
"gamedll_x64_rwdi.dll"+C9351E: F3 0F 10 43 40           -  movss xmm0,[rbx+40]
"gamedll_x64_rwdi.dll"+C93523: F3 0F 5C C6              -  subss xmm0,xmm6
"gamedll_x64_rwdi.dll"+C93527: 0F 2F C7                 -  comiss xmm0,xmm7
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+C9352A: F3 0F 11 43 40           -  movss [rbx+40],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+C9352F: 77 07                    -  ja gamedll_x64_rwdi.dll+C93538
"gamedll_x64_rwdi.dll"+C93531: C6 43 44 01              -  mov byte ptr [rbx+44],01
"gamedll_x64_rwdi.dll"+C93535: 89 7B 40                 -  mov [rbx+40],edi
"gamedll_x64_rwdi.dll"+C93538: 48 8B 5C 24 60           -  mov rbx,[rsp+60]
"gamedll_x64_rwdi.dll"+C9353D: 0F 28 74 24 40           -  movaps xmm6,[rsp+40]
"gamedll_x64_rwdi.dll"+C93542: 0F 28 7C 24 30           -  movaps xmm7,[rsp+30]
"gamedll_x64_rwdi.dll"+C93547: 48 83 C4 50              -  add rsp,50
"gamedll_x64_rwdi.dll"+C9354B: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+C9354C: C3                       -  ret 
"gamedll_x64_rwdi.dll"+C9354D: CC                       -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2543</ID>
      <Description>"Car Flamethrower Instant Cooldown"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(CarFire,gamedll_x64_rwdi.dll,F3 0F 11 43 1C 76)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+F867C1)

label(code)
label(return)

newmem:

code:
  //movss [rbx+1C],xmm0
  jmp return

CarFire:
  jmp code
return:
registersymbol(CarFire)

[DISABLE]

CarFire:
  db F3 0F 11 43 1C

unregistersymbol(CarFire)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+F867C1

"gamedll_x64_rwdi.dll"+F86790: 48 69 C9 70 29 00 00           -  imul rcx,rcx,00002970
"gamedll_x64_rwdi.dll"+F86797: 48 03 88 98 35 00 00           -  add rcx,[rax+00003598]
"gamedll_x64_rwdi.dll"+F8679E: EB 07                          -  jmp gamedll_x64_rwdi.dll+F867A7
"gamedll_x64_rwdi.dll"+F867A0: 48 8D 88 C8 02 00 00           -  lea rcx,[rax+000002C8]
"gamedll_x64_rwdi.dll"+F867A7: F3 0F 10 43 1C                 -  movss xmm0,[rbx+1C]
"gamedll_x64_rwdi.dll"+F867AC: 0F 28 CE                       -  movaps xmm1,xmm6
"gamedll_x64_rwdi.dll"+F867AF: 32 D2                          -  xor dl,dl
"gamedll_x64_rwdi.dll"+F867B1: 83 7B 30 00                    -  cmp dword ptr [rbx+30],00
"gamedll_x64_rwdi.dll"+F867B5: F3 0F 59 89 A4 09 00 00        -  mulss xmm1,[rcx+000009A4]
"gamedll_x64_rwdi.dll"+F867BD: F3 0F 5C C1                    -  subss xmm0,xmm1
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+F867C1: F3 0F 11 43 1C                 -  movss [rbx+1C],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+F867C6: 76 68                          -  jna gamedll_x64_rwdi.dll+F86830
"gamedll_x64_rwdi.dll"+F867C8: 48 8B 4B 28                    -  mov rcx,[rbx+28]
"gamedll_x64_rwdi.dll"+F867CC: 44 8B 43 30                    -  mov r8d,[rbx+30]
"gamedll_x64_rwdi.dll"+F867D0: F3 0F 10 05 D0 55 44 00        -  movss xmm0,[gamedll_x64_rwdi.dll+13CBDA8]
"gamedll_x64_rwdi.dll"+F867D8: 0F 1F 84 00 00 00 00 00        -  nop [rax+rax+00000000]
"gamedll_x64_rwdi.dll"+F867E0: 48 8B 01                       -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+F867E3: 0F 2F 80 E0 01 00 00           -  comiss xmm0,[rax+000001E0]
"gamedll_x64_rwdi.dll"+F867EA: 73 10                          -  jae gamedll_x64_rwdi.dll+F867FC
"gamedll_x64_rwdi.dll"+F867EC: 80 B8 D0 00 00 00 00           -  cmp byte ptr [rax+000000D0],00
"gamedll_x64_rwdi.dll"+F867F3: 74 07                          -  je gamedll_x64_rwdi.dll+F867FC
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2601</ID>
      <Description>"Infinite Gas Flamethrower"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(GasFreeFlamethrower,gamedll_x64_rwdi.dll,F3 0F 11 80 20 03 00 00)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+F883B2)

label(code)
label(return)

newmem:

code:
  //movss [rax+00000320],xmm0
  jmp return

GasFreeFlamethrower:
  jmp code
  nop
  nop
  nop
return:
registersymbol(GasFreeFlamethrower)

[DISABLE]

GasFreeFlamethrower:
  db F3 0F 11 80 20 03 00 00

unregistersymbol(GasFreeFlamethrower)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+F883B2

"gamedll_x64_rwdi.dll"+F88393: 33 C0                    -  xor eax,eax
"gamedll_x64_rwdi.dll"+F88395: F3 0F 58 B0 20 03 00 00  -  addss xmm6,[rax+00000320]
"gamedll_x64_rwdi.dll"+F8839D: 0F 2F F0                 -  comiss xmm6,xmm0
"gamedll_x64_rwdi.dll"+F883A0: 72 03                    -  jb gamedll_x64_rwdi.dll+F883A5
"gamedll_x64_rwdi.dll"+F883A2: 0F 28 C6                 -  movaps xmm0,xmm6
"gamedll_x64_rwdi.dll"+F883A5: 48 85 C9                 -  test rcx,rcx
"gamedll_x64_rwdi.dll"+F883A8: 74 06                    -  je gamedll_x64_rwdi.dll+F883B0
"gamedll_x64_rwdi.dll"+F883AA: 48 8B 43 18              -  mov rax,[rbx+18]
"gamedll_x64_rwdi.dll"+F883AE: EB 02                    -  jmp gamedll_x64_rwdi.dll+F883B2
"gamedll_x64_rwdi.dll"+F883B0: 33 C0                    -  xor eax,eax
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+F883B2: F3 0F 11 80 20 03 00 00  -  movss [rax+00000320],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+F883BA: C7 43 34 00 00 00 00     -  mov [rbx+34],00000000
"gamedll_x64_rwdi.dll"+F883C1: C7 43 38 00 00 00 3F     -  mov [rbx+38],3F000000
"gamedll_x64_rwdi.dll"+F883C8: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"gamedll_x64_rwdi.dll"+F883CD: 48 83 C4 30              -  add rsp,30
"gamedll_x64_rwdi.dll"+F883D1: 5B                       -  pop rbx
"gamedll_x64_rwdi.dll"+F883D2: C3                       -  ret 
"gamedll_x64_rwdi.dll"+F883D3: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+F883D4: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+F883D5: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+F883D6: CC                       -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2600</ID>
      <Description>"Unlimited Gas"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(CarGas,gamedll_x64_rwdi.dll,18 F3 0F 11 88 20 03 00 00)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+F87D20)

label(code)
label(return)

newmem:

code:
  //movss [rax+00000320],xmm1
  jmp return

CarGas+01:
  jmp code
  nop
  nop
  nop
return:
registersymbol(CarGas)

[DISABLE]

CarGas+01:
  db F3 0F 11 88 20 03 00 00

unregistersymbol(CarGas)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+F87D20

"gamedll_x64_rwdi.dll"+F87CFF: 48 8B 4B 18              -  mov rcx,[rbx+18]
"gamedll_x64_rwdi.dll"+F87D03: EB 02                    -  jmp gamedll_x64_rwdi.dll+F87D07
"gamedll_x64_rwdi.dll"+F87D05: 33 C9                    -  xor ecx,ecx
"gamedll_x64_rwdi.dll"+F87D07: F3 0F 58 91 20 03 00 00  -  addss xmm2,[rcx+00000320]
"gamedll_x64_rwdi.dll"+F87D0F: 0F 2F D1                 -  comiss xmm2,xmm1
"gamedll_x64_rwdi.dll"+F87D12: 72 03                    -  jb gamedll_x64_rwdi.dll+F87D17
"gamedll_x64_rwdi.dll"+F87D14: 0F 28 CA                 -  movaps xmm1,xmm2
"gamedll_x64_rwdi.dll"+F87D17: 48 85 C0                 -  test rax,rax
"gamedll_x64_rwdi.dll"+F87D1A: 74 25                    -  je gamedll_x64_rwdi.dll+F87D41
"gamedll_x64_rwdi.dll"+F87D1C: 48 8B 43 18              -  mov rax,[rbx+18]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+F87D20: F3 0F 11 88 20 03 00 00  -  movss [rax+00000320],xmm1
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+F87D28: C7 43 38 00 00 00 3F     -  mov [rbx+38],3F000000
"gamedll_x64_rwdi.dll"+F87D2F: C7 43 34 00 00 00 00     -  mov [rbx+34],00000000
"gamedll_x64_rwdi.dll"+F87D36: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"gamedll_x64_rwdi.dll"+F87D3B: 48 83 C4 30              -  add rsp,30
"gamedll_x64_rwdi.dll"+F87D3F: 5B                       -  pop rbx
"gamedll_x64_rwdi.dll"+F87D40: C3                       -  ret 
"gamedll_x64_rwdi.dll"+F87D41: F3 0F 11 88 20 03 00 00  -  movss [rax+00000320],xmm1
"gamedll_x64_rwdi.dll"+F87D49: C7 43 38 00 00 00 3F     -  mov [rbx+38],3F000000
"gamedll_x64_rwdi.dll"+F87D50: C7 43 34 00 00 00 00     -  mov [rbx+34],00000000
"gamedll_x64_rwdi.dll"+F87D57: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2603</ID>
      <Description>"Infinite Nitro"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(InfiniteNitro,gamedll_x64_rwdi.dll,F3 0F 11 4B 10 C7)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+F8AC1A)

label(code)
label(return)

newmem:

code:
  //movss [rbx+10],xmm1
  jmp return

InfiniteNitro:
  jmp code
return:
registersymbol(InfiniteNitro)

[DISABLE]

InfiniteNitro:
  db F3 0F 11 4B 10

unregistersymbol(InfiniteNitro)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+F8AC1A

"gamedll_x64_rwdi.dll"+F8ABF5: EB 1F                          -  jmp gamedll_x64_rwdi.dll+F8AC16
"gamedll_x64_rwdi.dll"+F8ABF7: 40 84 FF                       -  test dil,dil
"gamedll_x64_rwdi.dll"+F8ABFA: 74 08                          -  je gamedll_x64_rwdi.dll+F8AC04
"gamedll_x64_rwdi.dll"+F8ABFC: 48 05 04 09 00 00              -  add rax,00000904
"gamedll_x64_rwdi.dll"+F8AC02: EB 06                          -  jmp gamedll_x64_rwdi.dll+F8AC0A
"gamedll_x64_rwdi.dll"+F8AC04: 48 05 74 08 00 00              -  add rax,00000874
"gamedll_x64_rwdi.dll"+F8AC0A: 0F 28 C6                       -  movaps xmm0,xmm6
"gamedll_x64_rwdi.dll"+F8AC0D: F3 0F 59 40 04                 -  mulss xmm0,[rax+04]
"gamedll_x64_rwdi.dll"+F8AC12: F3 0F 5C C8                    -  subss xmm1,xmm0
"gamedll_x64_rwdi.dll"+F8AC16: F3 0F 58 D6                    -  addss xmm2,xmm6
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+F8AC1A: F3 0F 11 4B 10                 -  movss [rbx+10],xmm1
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+F8AC1F: C7 43 14 00 00 80 BF           -  mov [rbx+14],BF800000
"gamedll_x64_rwdi.dll"+F8AC26: F3 0F 11 53 18                 -  movss [rbx+18],xmm2
"gamedll_x64_rwdi.dll"+F8AC2B: E9 A9 00 00 00                 -  jmp gamedll_x64_rwdi.dll+F8ACD9
"gamedll_x64_rwdi.dll"+F8AC30: F3 0F 10 05 98 0F 44 00        -  movss xmm0,[gamedll_x64_rwdi.dll+13CBBD0]
"gamedll_x64_rwdi.dll"+F8AC38: C7 43 18 00 00 00 00           -  mov [rbx+18],00000000
"gamedll_x64_rwdi.dll"+F8AC3F: 0F 2E 43 14                    -  ucomiss xmm0,[rbx+14]
"gamedll_x64_rwdi.dll"+F8AC43: 75 0F                          -  jne gamedll_x64_rwdi.dll+F8AC54
"gamedll_x64_rwdi.dll"+F8AC45: 48 83 C1 28                    -  add rcx,28
"gamedll_x64_rwdi.dll"+F8AC49: FF 15 C1 8C 39 00              -  call qword ptr [gamedll_x64_rwdi.dll+1323910]
"gamedll_x64_rwdi.dll"+F8AC4F: F3 0F 11 43 14                 -  movss [rbx+14],xmm0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2605</ID>
      <Description>"The Button Instant Cooldown"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(TheButton,gamedll_x64_rwdi.dll,F3 0F 11 83 48 2A 00 00)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AC1CEE)

label(code)
label(return)

newmem:

code:
  //movss [rbx+00002A48],xmm0
  jmp return

TheButton:
  jmp code
  nop
  nop
  nop
return:
registersymbol(TheButton)

[DISABLE]

TheButton:
  db F3 0F 11 83 48 2A 00 00

unregistersymbol(TheButton)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AC1CEE

"gamedll_x64_rwdi.dll"+AC1CC5: 0F 57 C0                 -  xorps xmm0,xmm0
"gamedll_x64_rwdi.dll"+AC1CC8: 0F 2F 83 48 2A 00 00     -  comiss xmm0,[rbx+00002A48]
"gamedll_x64_rwdi.dll"+AC1CCF: 72 25                    -  jb gamedll_x64_rwdi.dll+AC1CF6
"gamedll_x64_rwdi.dll"+AC1CD1: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+AC1CD4: E8 B7 08 03 00           -  call gamedll_x64_rwdi.dll+AF2590
"gamedll_x64_rwdi.dll"+AC1CD9: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+AC1CDC: E8 2F FF FE FF           -  call gamedll_x64_rwdi.dll+AB1C10
"gamedll_x64_rwdi.dll"+AC1CE1: BA 14 00 00 00           -  mov edx,00000014
"gamedll_x64_rwdi.dll"+AC1CE6: 48 8B C8                 -  mov rcx,rax
"gamedll_x64_rwdi.dll"+AC1CE9: E8 12 6A 09 00           -  call gamedll_x64_rwdi.dll+B58700
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AC1CEE: F3 0F 11 83 48 2A 00 00  -  movss [rbx+00002A48],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AC1CF6: 48 83 C4 20              -  add rsp,20
"gamedll_x64_rwdi.dll"+AC1CFA: 5B                       -  pop rbx
"gamedll_x64_rwdi.dll"+AC1CFB: F3 C3                    - repe  ret 
"gamedll_x64_rwdi.dll"+AC1CFD: 0F 1F 00                 -  nop [rax]
"gamedll_x64_rwdi.dll"+AC1D00: 20 1C AC                 -  and [rsp+rbp*4],bl
"gamedll_x64_rwdi.dll"+AC1D03: 00 4D 1C                 -  add [rbp+1C],cl
"gamedll_x64_rwdi.dll"+AC1D06: AC                       -  lodsb 
"gamedll_x64_rwdi.dll"+AC1D07: 00 6D 1C                 -  add [rbp+1C],ch
"gamedll_x64_rwdi.dll"+AC1D0A: AC                       -  lodsb 
"gamedll_x64_rwdi.dll"+AC1D0B: 00 4D 1C                 -  add [rbp+1C],cl
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1095</ID>
      <Description>"Instant "Hold" Actions"</Description>
      <LastState Activated="1"/>
      <Color>FF8000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(iha_1,32,gamedll_x64_rwdi.dll)
aobscanmodule(iha_aob1,gamedll_x64_rwdi.dll,0F 28 F7 F3 0F 11 B3 FC 01 00 00)
registersymbol(iha_aob1)
label(returnhere_iha_1)

//--------------------------------------------------//
iha_1:
mov [rbx+000001FC],(float)1
jmp returnhere_iha_1
//--------------------------------------------------//

iha_aob1+3:
jmp iha_1
nop
nop
nop
returnhere_iha_1:

[Disable]

iha_aob1+3:
db F3 0F 11 B3 FC 01 00 00
unregistersymbol(iha_aob1)
dealloc(iha_1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2532</ID>
      <Description>"Drive Level (Test Only)"</Description>
      <LastState Value="24" RealAddress="7FFA618E3F98"/>
      <Color>808080</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>gamedll_x64_rwdi.dll+1C13F98</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>2544</ID>
      <Description>"Power Level (Test Only)"</Description>
      <LastState Value="24" RealAddress="7FFA618E3F88"/>
      <Color>808080</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>gamedll_x64_rwdi.dll+1C13F88</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>2551</ID>
      <Description>"Agility Level (Test Only)"</Description>
      <LastState Value="24" RealAddress="7FFA618E3F84"/>
      <Color>808080</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>gamedll_x64_rwdi.dll+1C13F84</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>2568</ID>
      <Description>"Survivor Rank (Test Only)"</Description>
      <LastState Value="25" RealAddress="7FFA618E3F8C"/>
      <Color>808080</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>gamedll_x64_rwdi.dll+1C13F8C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>2386</ID>
      <Description>"Run Speed Options"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>332</ID>
          <Description>"Run Speed 1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]


aobscanmodule(_Speed,gamedll_x64_rwdi.dll,F3 0F 59 72 08 80) // should be unique
aobscanmodule(_Speed2,gamedll_x64_rwdi.dll,F3 0F 59 7A 08 48)
aobscanmodule(_Speed3,gamedll_x64_rwdi.dll,F3 41 0F 59 41 08 C3 81)
alloc(newmem,$1000,gamedll_x64_rwdi.dll)
alloc(newmem1,$1000,gamedll_x64_rwdi.dll)
alloc(newmem2,$1000,gamedll_x64_rwdi.dll)

label(code)
label(return)
label(code1)
label(return1)
label(code2)
label(return2)

newmem2:
  mov [r9+08],(float)15
code2:
  mulss xmm0,[r9+08]
  jmp return2


newmem1:
  mov [rdx+08],(float)15
code1:
  mulss xmm7,[rdx+08]
  jmp return1


newmem:
  mov [rdx+08],(float)15
code:
  mulss xmm6,[rdx+08]
  jmp return

_Speed:
  jmp newmem
return:

_Speed2:
  jmp newmem1
return1:

_Speed3:
  jmp newmem2
  nop
return2:

registersymbol(_Speed)
registersymbol(_Speed2)
registersymbol(_Speed3)

[DISABLE]

_Speed:
  db F3 0F 59 72 08

_Speed2:
  db F3 0F 59 7A 08

_Speed3:
  db F3 41 0F 59 41 08

unregistersymbol(_Speed)
dealloc(newmem)
unregistersymbol(_Speed2)
dealloc(newmem1)
unregistersymbol(_Speed3)
dealloc(newmem2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2110</ID>
          <Description>"Run Speed 2"</Description>
          <LastState/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]


aobscanmodule(_Speed,gamedll_x64_rwdi.dll,F3 0F 59 72 08 80) // should be unique
aobscanmodule(_Speed2,gamedll_x64_rwdi.dll,F3 0F 59 7A 08 48)
aobscanmodule(_Speed3,gamedll_x64_rwdi.dll,F3 41 0F 59 41 08 C3 81)
alloc(newmem,$1000,gamedll_x64_rwdi.dll)
alloc(newmem1,$1000,gamedll_x64_rwdi.dll)
alloc(newmem2,$1000,gamedll_x64_rwdi.dll)

label(code)
label(return)
label(code1)
label(return1)
label(code2)
label(return2)

newmem2:
  mov [r9+08],(float)25
code2:
  mulss xmm0,[r9+08]
  jmp return2


newmem1:
  mov [rdx+08],(float)25
code1:
  mulss xmm7,[rdx+08]
  jmp return1


newmem:
  mov [rdx+08],(float)25
code:
  mulss xmm6,[rdx+08]
  jmp return

_Speed:
  jmp newmem
return:

_Speed2:
  jmp newmem1
return1:

_Speed3:
  jmp newmem2
  nop
return2:

registersymbol(_Speed)
registersymbol(_Speed2)
registersymbol(_Speed3)

[DISABLE]

_Speed:
  db F3 0F 59 72 08

_Speed2:
  db F3 0F 59 7A 08

_Speed3:
  db F3 41 0F 59 41 08

unregistersymbol(_Speed)
dealloc(newmem)
unregistersymbol(_Speed2)
dealloc(newmem1)
unregistersymbol(_Speed3)
dealloc(newmem2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2111</ID>
          <Description>"Run Speed 3"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]


aobscanmodule(_Speed,gamedll_x64_rwdi.dll,F3 0F 59 72 08 80) // should be unique
aobscanmodule(_Speed2,gamedll_x64_rwdi.dll,F3 0F 59 7A 08 48)
aobscanmodule(_Speed3,gamedll_x64_rwdi.dll,F3 41 0F 59 41 08 C3 81)
alloc(newmem,$1000,gamedll_x64_rwdi.dll)
alloc(newmem1,$1000,gamedll_x64_rwdi.dll)
alloc(newmem2,$1000,gamedll_x64_rwdi.dll)

label(code)
label(return)
label(code1)
label(return1)
label(code2)
label(return2)

newmem2:
  mov [r9+08],(float)9999
code2:
  mulss xmm0,[r9+08]
  jmp return2


newmem1:
  mov [rdx+08],(float)9999
code1:
  mulss xmm7,[rdx+08]
  jmp return1


newmem:
  mov [rdx+08],(float)9999
code:
  mulss xmm6,[rdx+08]
  jmp return

_Speed:
  jmp newmem
return:

_Speed2:
  jmp newmem1
return1:

_Speed3:
  jmp newmem2
  nop
return2:

registersymbol(_Speed)
registersymbol(_Speed2)
registersymbol(_Speed3)

[DISABLE]

_Speed:
  db F3 0F 59 72 08

_Speed2:
  db F3 0F 59 7A 08

_Speed3:
  db F3 41 0F 59 41 08

unregistersymbol(_Speed)
dealloc(newmem)
unregistersymbol(_Speed2)
dealloc(newmem1)
unregistersymbol(_Speed3)
dealloc(newmem2)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2384</ID>
      <Description>"Challenges / Time Freeze Options "</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2607</ID>
          <Description>"Challenge / The Following Time Freeze"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,F3 0F 11 83 F0 00 00 00 48 85)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AD7D1D)

label(code)
label(return)

newmem:

code:
  nop//movss [rbx+000000F0],xmm0
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 83 F0 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2294</ID>
          <Description>"Bozak Horde  / Gaining Cradence Time Freeze"</Description>
          <LastState Activated="1"/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(BozakHorde,gamedll_x64_rwdi.dll,F3 0F 11 40 D8 80)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+3A640B)

label(code)
label(return)

newmem:

code:
  nop//movss [rax-28],xmm0
  jmp return

BozakHorde:
  jmp code
return:
registersymbol(BozakHorde)

[DISABLE]

BozakHorde:
  db F3 0F 11 40 D8

unregistersymbol(BozakHorde)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2659</ID>
          <Description>"Challenge CheckPoint Instantly Collect (may have reverse effect on some challenges)"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(CheckPoint,gamedll_x64_rwdi.dll,39 43 14 72 1F)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BCB7DE)

label(code)
label(return)

newmem:

code:
  //cmp [rbx+14],eax
  jb gamedll_x64_rwdi.ShutdownGameScriptDLL+BC8CF2
  jmp return

CheckPoint:
  jmp code
return:
registersymbol(CheckPoint)

[DISABLE]

CheckPoint:
  db 39 43 14 72 1F

unregistersymbol(CheckPoint)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+BCB7DE

"gamedll_x64_rwdi.dll"+BCB7B4: 45 33 C0                 -  xor r8d,r8d
"gamedll_x64_rwdi.dll"+BCB7B7: 89 44 24 40              -  mov [rsp+40],eax
"gamedll_x64_rwdi.dll"+BCB7BB: F3 0F 11 5C 24 38        -  movss [rsp+38],xmm3
"gamedll_x64_rwdi.dll"+BCB7C1: 89 44 24 30              -  mov [rsp+30],eax
"gamedll_x64_rwdi.dll"+BCB7C5: F3 0F 11 44 24 28        -  movss [rsp+28],xmm0
"gamedll_x64_rwdi.dll"+BCB7CB: F3 0F 11 44 24 20        -  movss [rsp+20],xmm0
"gamedll_x64_rwdi.dll"+BCB7D1: FF 15 01 44 75 00        -  call qword ptr [gamedll_x64_rwdi.dll+131FBD8]
"gamedll_x64_rwdi.dll"+BCB7D7: 8B 43 10                 -  mov eax,[rbx+10]
"gamedll_x64_rwdi.dll"+BCB7DA: 85 C0                    -  test eax,eax
"gamedll_x64_rwdi.dll"+BCB7DC: 74 24                    -  je gamedll_x64_rwdi.dll+BCB802
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+BCB7DE: 39 43 14                 -  cmp [rbx+14],eax
"gamedll_x64_rwdi.dll"+BCB7E1: 72 1F                    -  jb gamedll_x64_rwdi.dll+BCB802
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+BCB7E3: 48 8B 03                 -  mov rax,[rbx]
"gamedll_x64_rwdi.dll"+BCB7E6: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+BCB7E9: FF 90 C8 00 00 00        -  call qword ptr [rax+000000C8]
"gamedll_x64_rwdi.dll"+BCB7EF: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+BCB7F2: C6 43 51 01              -  mov byte ptr [rbx+51],01
"gamedll_x64_rwdi.dll"+BCB7F6: 89 43 64                 -  mov [rbx+64],eax
"gamedll_x64_rwdi.dll"+BCB7F9: 48 8B 03                 -  mov rax,[rbx]
"gamedll_x64_rwdi.dll"+BCB7FC: FF 90 B8 01 00 00        -  call qword ptr [rax+000001B8]
"gamedll_x64_rwdi.dll"+BCB802: 48 8B 4B 08              -  mov rcx,[rbx+08]
"gamedll_x64_rwdi.dll"+BCB806: 48 8B D3                 -  mov rdx,rbx
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2028</ID>
      <Description>"Set FOV"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(setFOV_1,32,gamedll_x64_rwdi.dll)
aobscanmodule(setFOV_aob1,gamedll_x64_rwdi.dll,44 0F 28 D8 FF 50 20 48 8B 4F 50 F3 0F 11 87 B8 00 00 00)
registersymbol(setFOV_aob1)
label(FOV)
registersymbol(FOV)
label(returnhere_setFOV_1)

//--------------------------------------------------//
setFOV_1:
fld [FOV]
fstp [rdi+B8]
jmp returnhere_setFOV_1

FOV:
dd 42280000
//--------------------------------------------------//

setFOV_aob1+B:
jmp setFOV_1
nop
nop
nop
returnhere_setFOV_1:

[Disable]

setFOV_aob1+B:
db F3 0F 11 87 B8 00 00 00
unregistersymbol(setFOV_aob1)
unregistersymbol(FOV)
dealloc(setFOV_1)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2029</ID>
          <Description>"FOV Value (Default Range: 42 - 72)"</Description>
          <VariableType>Float</VariableType>
          <Address>FOV</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2025</ID>
      <Description>"Backpack Editor (May Not Work)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{
The editor is pretty straight forward. Before use, hit the update button. It will
pull your current inventory for that tab. Make your changes and hit apply. If it
errors out for any reason, let me know.
}
aobscanmodule(ItemEditDataAOB,gamedll_x64_rwdi.dll,48 8B 78 60 48 8B D9)
aobscanmodule(BaseItemTableAOB,gamedll_x64_rwdi.dll,8B C8 48 8B 42 E8 4C 8B 04 C8)
alloc(newmem,2048,gamedll_x64_rwdi.dll)
label(ItemEditStart)
label(ItemEditEnd)
label(BaseItemStart)
label(BaseItemEnd)
label(ItemEditData)
registersymbol(ItemEditDataAOB)
registersymbol(BaseItemTableAOB)
registersymbol(ItemEditData)

newmem:

ItemEditStart:
mov [ItemEditData],rax
mov rdi,[rax+60]
mov rbx,rcx
jmp ItemEditEnd

BaseItemStart:
mov [ItemEditData+8],rdx
mov ecx,eax
mov rax,[rdx-18]
jmp BaseItemEnd

ItemEditData:

ItemEditDataAOB:
jmp ItemEditStart
nop
nop
ItemEditEnd:

BaseItemTableAOB:
jmp BaseItemStart
nop
BaseItemEnd:
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)

ItemEditDataAOB:
db 48 8B 78 60 48 8B D9

BaseItemTableAOB:
db 8B C8 48 8B 42 E8

unregistersymbol(ItemEditDataAOB)
unregistersymbol(BaseItemTableAOB)
unregistersymbol(ItemEditData)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2027</ID>
          <Description>"Show Editor"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
LuaCall(EditorShow())
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
LuaCall(EditorHide())
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2121</ID>
      <Description>"Player Location Grabber"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobPlayerLocationGrabber,engine_x64_rwdi.dll,40 53 48 83 EC 40 4C 8B 49 ?? 0F 29 74 24 ?? 48 8B D9)

alloc(newmem,2048,"engine_x64_rwdi.dll"+383ED0)

label(aobPlayerLocationGrabber_r)
registersymbol(aobPlayerLocationGrabber_r)

label(lblPlayerLocationGrabber)
label(lblPlayerLocationGrabberSkip)
label(lblPlayerLocationGrabberRet)

label(pPlayerLocation)
registersymbol(pPlayerLocation)

newmem:

lblPlayerLocationGrabber:
test rcx,rcx
jz short lblPlayerLocationGrabberSkip
cmp dword ptr [rcx+114],64
jne short lblPlayerLocationGrabberSkip
mov qword ptr [pPlayerLocation],rcx
lblPlayerLocationGrabberSkip:
//push rbx
//sub rsp,40
db 40 53 48 83 EC 40
jmp lblPlayerLocationGrabberRet
pPlayerLocation:
dq 0

//"engine_x64_rwdi.dll"+383ED0:
aobPlayerLocationGrabber:
aobPlayerLocationGrabber_r:
jmp lblPlayerLocationGrabber
nop
lblPlayerLocationGrabberRet:

[DISABLE]
aobPlayerLocationGrabber_r:
//"engine_x64_rwdi.dll"+383ED0:
//Alt: push rbx
//Alt: sub rsp,40
db 40 53 48 83 EC 40

unregistersymbol(aobPlayerLocationGrabber_r)

unregistersymbol(pPlayerLocation)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2120</ID>
          <Description>"pPlayerLocation"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>0000FF</Color>
          <VariableType>8 Bytes</VariableType>
          <Address>pPlayerLocation</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>2124</ID>
              <Description>"pPlayerLocation-&gt;x"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayerLocation</Address>
              <Offsets>
                <Offset>BC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2125</ID>
              <Description>"pPlayerLocation-&gt;z"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayerLocation</Address>
              <Offsets>
                <Offset>C0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2126</ID>
              <Description>"pPlayerLocation-&gt;y"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayerLocation</Address>
              <Offsets>
                <Offset>C4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2139</ID>
      <Description>"Teleport Location (May Not Work)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobLocationUpdater,engine_x64_rwdi.dll,0F 28 F1 4D 85 C9 0F 84 ?? ?? ?? ?? F3 0F 10 91 B8 00 00 00)

alloc(newmem,4096,"engine_x64_rwdi.dll"+383EE2)

label(aobLocationUpdater_r)
registersymbol(aobLocationUpdater_r)

label(lblLocationUpdater)
label(lblLocationUpdaterSkip1)
label(lblLocationUpdaterSkip2)
label(lblLocationUpdaterSkip3)
label(lblLocationUpdaterSkip4)
label(lblLocationUpdaterSkip5)
label(lblLocationUpdaterSkip)
label(lblLocationUpdaterRet)

label(cApplyPreset)

label(pLocationPresets)
registersymbol(pLocationPresets)

label(bTeleportToPreset1)
label(bTeleportToPreset2)
label(bTeleportToPreset3)
label(bTeleportToPreset4)
label(bTeleportToPreset5)
label(iTeleportPreset1)
label(iTeleportPreset2)
label(iTeleportPreset3)
label(iTeleportPreset4)
label(iTeleportPreset5)
registersymbol(bTeleportToPreset1)
registersymbol(bTeleportToPreset2)
registersymbol(bTeleportToPreset3)
registersymbol(bTeleportToPreset4)
registersymbol(bTeleportToPreset5)
registersymbol(iTeleportPreset1)
registersymbol(iTeleportPreset2)
registersymbol(iTeleportPreset3)
registersymbol(iTeleportPreset4)
registersymbol(iTeleportPreset5)

newmem:
iTeleportPreset1:
dq (int)0
iTeleportPreset2:
dq (int)4
iTeleportPreset3:
dq (int)13
iTeleportPreset4:
dq (int)5
iTeleportPreset5:
dq (int)12

pLocationPresets:
//////////////////////////////////////////////////////////////////////////////
// Enter all locations as dword float triplets: X, Z, Y (and not as X, Y, Z!)
// Remember to update preset dropdowns in address list!
/*
0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
*/
// Tower; entrance
dd (float)259.9804688
dd (float)134.3327637
dd (float)86.6372757
// Tower; elevator
dd (float)245.6986237
dd (float)137.8380737
dd (float)87.67877197
// GRE radio spot near Rais' base
dd (float)716.6741333
dd (float)140.7787018
dd (float)260.1118469
// Convenience store
dd (float)296.9414062
dd (float)127.3425217
dd (float)55.36845398
// School
dd (float)643.3206787
dd (float)133.2903442
dd (float)260.7666626
// Safe zone on hill
dd (float)112.9376602
dd (float)161.0890198
dd (float)229.6279144
// Safe zone on bridge
dd (float)-138.2489166
dd (float)140.4362946
dd (float)295.9544983
// Bridge climb, level 1
dd (float)-132.6832581
dd (float)188.0761261
dd (float)303.1186829
// Bridge climb, level 2
dd (float)-132.0743713
dd (float)212.090683
dd (float)280.2389221
// Bridge, military base
dd (float)-352.5913086
dd (float)143.6129913
dd (float)291.8622131
// Safe zone north of bridge
dd (float)-61.18738556
dd (float)98.83222198
dd (float)446.2907715
// Safe zone North
dd (float)238.2825623
dd (float)147.3724976
dd (float)645.2614136
// Tunnel North
dd (float)364.8158875
dd (float)137.8293152
dd (float)645.2962646
// Safe zone The Witch
dd (float)489.3204346
dd (float)132.3123932
dd (float)102.9339066
// NE Isle with Lavender herbs
dd (float)-172.4967957
dd (float)114.1479263
dd (float)479.0149231
// Loot cave (Destiny reference)
dd (float)13.53541851
dd (float)96.77336884
dd (float)536.3782959
// Destination (Puke'N'Nuke)
dd (float)-11.24782658
dd (float)130.7406769
dd (float)553.7602539

lblLocationUpdater:
cmp dword ptr [rcx+114],64
jne lblLocationUpdaterSkip
cmp dword ptr [bTeleportToPreset1],1
jne short lblLocationUpdaterSkip1
mov dword ptr [bTeleportToPreset1],0
push rax
mov rax,[iTeleportPreset1]
call cApplyPreset
pop rax
lblLocationUpdaterSkip1:
cmp dword ptr [bTeleportToPreset2],1
jne short lblLocationUpdaterSkip2
mov dword ptr [bTeleportToPreset2],0
push rax
mov rax,[iTeleportPreset2]
call cApplyPreset
pop rax
lblLocationUpdaterSkip2:
cmp dword ptr [bTeleportToPreset3],1
jne short lblLocationUpdaterSkip3
mov dword ptr [bTeleportToPreset3],0
push rax
mov rax,[iTeleportPreset3]
call cApplyPreset
pop rax
lblLocationUpdaterSkip3:
cmp dword ptr [bTeleportToPreset4],1
jne short lblLocationUpdaterSkip4
mov dword ptr [bTeleportToPreset4],0
push rax
mov rax,[iTeleportPreset4]
call cApplyPreset
pop rax
lblLocationUpdaterSkip4:
cmp dword ptr [bTeleportToPreset5],1
jne short lblLocationUpdaterSkip5
mov dword ptr [bTeleportToPreset5],0
push rax
mov rax,[iTeleportPreset5]
call cApplyPreset
pop rax
lblLocationUpdaterSkip5:
lblLocationUpdaterSkip:
//Alt: movaps xmm6,xmm1 // Original code
//Alt: test r9,r9       // Original code
db 0F 28 F1 4D 85 C9
jmp lblLocationUpdaterRet
cApplyPreset:
lea rax,[rax+rax*2]
push rbx                 // Workaround for lea rax,[pLocationPresets+rax*4]
mov rbx,pLocationPresets
lea rax,[rbx+rax*4]
pop rbx
/*
movss xmm0,[rax]
movss xmm1,[rax+4]
movss xmm2,[rax+8]
*/
fld dword ptr [rax]
fstp dword ptr [rcx+BC]
fld dword ptr [rax+4]
fstp dword ptr [rcx+C0]
fld dword ptr [rax+8]
fstp dword ptr [rcx+C4]
ret
bTeleportToPreset1:
dd 0
bTeleportToPreset2:
dd 0
bTeleportToPreset3:
dd 0
bTeleportToPreset4:
dd 0
bTeleportToPreset5:
dd (int)0

// "engine_x64_rwdi.dll"+383EE2:
aobLocationUpdater:
aobLocationUpdater_r:
jmp lblLocationUpdater
nop
lblLocationUpdaterRet:

[DISABLE]
aobLocationUpdater_r:
//"engine_x64_rwdi.dll"+383EE2:
//Alt: movaps xmm6,xmm1
//Alt: test r9,r9
db 0F 28 F1 4D 85 C9

unregistersymbol(aobLocationUpdater_r)

unregistersymbol(pLocationPresets)

unregistersymbol(bTeleportToPreset1)
unregistersymbol(bTeleportToPreset2)
unregistersymbol(bTeleportToPreset3)
unregistersymbol(bTeleportToPreset4)
unregistersymbol(bTeleportToPreset5)
unregistersymbol(iTeleportPreset1)
unregistersymbol(iTeleportPreset2)
unregistersymbol(iTeleportPreset3)
unregistersymbol(iTeleportPreset4)
unregistersymbol(iTeleportPreset5)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2141</ID>
          <Description>"iTeleportPreset1"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
</DropDownList>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iTeleportPreset1</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>2142</ID>
              <Description>"bTeleportToPreset1"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bTeleportToPreset1</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>18</Key>
                    <Key>49</Key>
                  </Keys>
                  <Value>1</Value>
                  <Description>Trigger teleport</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2143</ID>
          <Description>"iTeleportPreset2"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
</DropDownList>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iTeleportPreset2</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>2144</ID>
              <Description>"bTeleportToPreset2"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bTeleportToPreset2</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>18</Key>
                    <Key>50</Key>
                  </Keys>
                  <Value>1</Value>
                  <Description>Trigger teleport</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2145</ID>
          <Description>"iTeleportPreset3"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
</DropDownList>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iTeleportPreset3</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>2146</ID>
              <Description>"bTeleportToPreset3"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bTeleportToPreset3</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>18</Key>
                    <Key>51</Key>
                  </Keys>
                  <Value>1</Value>
                  <Description>Trigger teleport</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2147</ID>
          <Description>"iTeleportPreset4"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
</DropDownList>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iTeleportPreset4</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>2148</ID>
              <Description>"bTeleportToPreset4"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bTeleportToPreset4</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>18</Key>
                    <Key>52</Key>
                  </Keys>
                  <Value>1</Value>
                  <Description>Trigger teleport</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2149</ID>
          <Description>"iTeleportPreset5"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
</DropDownList>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iTeleportPreset5</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>2150</ID>
              <Description>"bTeleportToPreset5"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bTeleportToPreset5</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>18</Key>
                    <Key>53</Key>
                  </Keys>
                  <Value>1</Value>
                  <Description>Trigger teleport</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2508</ID>
      <Description>"----&gt; Teleport _1.10.1 (May Not Work)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(teleport,1024,engine_x64_rwdi.dll)

label(t_1) //Teleport
aobscanmodule(t_aob1,engine_x64_rwdi.dll,70 F3 41 0F 10 90 BC 00 00 00)
registersymbol(t_aob1)
label(returnhere_t_1)

label(gw_1) //Get Waypoint
aobscanmodule(gw_aob1,gamedll_x64_rwdi.dll,F3 0F 10 83 8C 08 00 00)
registersymbol(gw_aob1)
label(returnhere_gw_1)

label(saveLocation) //Save Location
label(saveLocation_status)
registersymbol(saveLocation_status)
label(saved_X)
registersymbol(saved_X)
label(saved_Z)
registersymbol(saved_Z)
label(saved_Y)
registersymbol(saved_Y)

label(goToSaved) //Go To Saved
label(goToSaved_status)
registersymbol(goToSaved_status)

label(goToWaypoint) //Go To Waypoint
label(goToWaypoint_status)
registersymbol(goToWaypoint_status)

label(waypoint_X)
registersymbol(waypoint_X)
label(waypoint_Y)
registersymbol(waypoint_Y)

label(t_orig) //Original Code

label(t_values) //Holds All Values For This Script
registersymbol(t_values)

//--------------------------------------------------//
teleport:
//--------------------------------------------------//
t_1:
cmp [saveLocation_status],1
je saveLocation
cmp [goToSaved_status],1
je goToSaved
cmp [goToWaypoint_status],1
je goToWaypoint
movss xmm2,[r8+000000BC]
jmp returnhere_t_1
//--------------------------------------------------//
saveLocation:
movss xmm2,[r8+000000BC]
fld [r8+BC]
fstp [saved_X]
fld [r8+C0]
fstp [saved_Z]
fld [r8+C4]
fstp [saved_Y]
mov [saveLocation_status],0
jmp returnhere_t_1

saveLocation_status:
dd 1

saved_X:
dd 0

saved_Z:
dd 0

saved_Y:
dd 0
//--------------------------------------------------//
goToSaved:
movss xmm2,[r8+000000BC]
fld [saved_X]
fstp [r8+BC]
fld [saved_Z]
fstp [r8+C0]
fld [saved_Y]
fstp [r8+C4]
mov [goToSaved_status],0
jmp returnhere_t_1

goToSaved_status:
dd 0
//--------------------------------------------------//
goToWaypoint:
movss xmm2,[r8+000000BC]
fld [waypoint_X]
fstp [r8+BC]
//mov [r8+C0],(float)200 original code
mov [r8+C0],(float)60
fld [waypoint_Y]
fstp [r8+C4]
mov [goToWaypoint_status],0
jmp returnhere_t_1

goToWaypoint_status:
dd 0
//--------------------------------------------------//
t_orig:
movss xmm0,[rbx+00000850]
jmp returnhere_t_1
//--------------------------------------------------//
gw_1:
movss xmm0,[rbx+0000088C]
fld [rbx+88C]
fstp [waypoint_X]
fld [rbx+894]
fstp [waypoint_Y]
jmp returnhere_gw_1

waypoint_X:
dd 0

waypoint_Y:
dd 0
//--------------------------------------------------//
t_values:
dd 1
//--------------------------------------------------//

t_aob1+1:
jmp t_1
nop
nop
nop
nop
returnhere_t_1:

gw_aob1:
jmp gw_1
nop
nop
nop
returnhere_gw_1:

[Disable]

t_aob1+1:
db F3 41 0F 10 90 BC 00 00 00
unregistersymbol(t_aob1)

unregistersymbol(saveLocation_status)
unregistersymbol(saved_X)
unregistersymbol(saved_Z)
unregistersymbol(saved_Y)

unregistersymbol(goToSaved_status)

unregistersymbol(goToWaypoint_status)

gw_aob1:
db F3 0F 10 83 8C 08 00 00
unregistersymbol(gw_aob1)

unregistersymbol(waypoint_X)
unregistersymbol(waypoint_Y)

unregistersymbol(t_values)

dealloc(teleport)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2509</ID>
          <Description>"Save Location"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>saveLocation_status</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>103</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>2514</ID>
          <Description>"Go To Saved"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>goToSaved_status</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>104</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>2518</ID>
          <Description>"Go To Waypoint ( Ctrl+numeric 9 )"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>goToWaypoint_status</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>105</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>2513</ID>
          <Description>"See Coordinates"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>2510</ID>
              <Description>"Saved X"</Description>
              <VariableType>Float</VariableType>
              <Address>saved_X</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2511</ID>
              <Description>"Saved Z"</Description>
              <VariableType>Float</VariableType>
              <Address>saved_Z</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2512</ID>
              <Description>"Saved Y"</Description>
              <VariableType>Float</VariableType>
              <Address>saved_Y</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2519</ID>
              <Description>"Waypoint X"</Description>
              <VariableType>Float</VariableType>
              <Address>waypoint_X</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2520</ID>
              <Description>"Waypoint Y"</Description>
              <VariableType>Float</VariableType>
              <Address>waypoint_Y</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2383</ID>
      <Description>"Hunter Options"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2528</ID>
          <Description>"Hunter UV Block Instant Cooldown Use"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(HunterUVBlockInstantCooldownUse,gamedll_x64_rwdi.dll,FF 4B 70 48 8B 05 F0 75 F2 00)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+CED68E)

label(code)
label(return)

newmem:

code:
  //dec [rbx+70]
  mov rax,[gamedll_x64_rwdi.dll+1C14C88]
  jmp return

HunterUVBlockInstantCooldownUse:
  jmp code
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(HunterUVBlockInstantCooldownUse)

[DISABLE]

HunterUVBlockInstantCooldownUse:
  db FF 4B 70 48 8B 05 F0 75 F2 00

unregistersymbol(HunterUVBlockInstantCooldownUse)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+CED68E

"gamedll_x64_rwdi.dll"+CED66A: E8 01 20 00 00           -  call gamedll_x64_rwdi.dll+CEF670
"gamedll_x64_rwdi.dll"+CED66F: F3 0F 11 43 44           -  movss [rbx+44],xmm0
"gamedll_x64_rwdi.dll"+CED674: 48 8B 03                 -  mov rax,[rbx]
"gamedll_x64_rwdi.dll"+CED677: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+CED67A: FF 50 20                 -  call qword ptr [rax+20]
"gamedll_x64_rwdi.dll"+CED67D: 48 8D 88 C8 08 00 00     -  lea rcx,[rax+000008C8]
"gamedll_x64_rwdi.dll"+CED684: 48 8B 01                 -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+CED687: FF 50 48                 -  call qword ptr [rax+48]
"gamedll_x64_rwdi.dll"+CED68A: 84 C0                    -  test al,al
"gamedll_x64_rwdi.dll"+CED68C: 75 03                    -  jne gamedll_x64_rwdi.dll+CED691
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+CED68E: FF 4B 70                 -  dec [rbx+70]
"gamedll_x64_rwdi.dll"+CED691: 48 8B 05 F0 75 F2 00     -  mov rax,[gamedll_x64_rwdi.dll+1C14C88]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+CED698: 48 8B 88 40 0B 00 00     -  mov rcx,[rax+00000B40]
"gamedll_x64_rwdi.dll"+CED69F: 48 85 C9                 -  test rcx,rcx
"gamedll_x64_rwdi.dll"+CED6A2: 0F 84 02 06 00 00        -  je gamedll_x64_rwdi.dll+CEDCAA
"gamedll_x64_rwdi.dll"+CED6A8: E8 23 E6 1C 00           -  call gamedll_x64_rwdi.dll+EBBCD0
"gamedll_x64_rwdi.dll"+CED6AD: E9 F8 05 00 00           -  jmp gamedll_x64_rwdi.dll+CEDCAA
"gamedll_x64_rwdi.dll"+CED6B2: 8B 53 38                 -  mov edx,[rbx+38]
"gamedll_x64_rwdi.dll"+CED6B5: 83 FA 06                 -  cmp edx,06
"gamedll_x64_rwdi.dll"+CED6B8: 0F 84 EC 05 00 00        -  je gamedll_x64_rwdi.dll+CEDCAA
"gamedll_x64_rwdi.dll"+CED6BE: 83 FA 08                 -  cmp edx,08
"gamedll_x64_rwdi.dll"+CED6C1: 0F 84 E3 05 00 00        -  je gamedll_x64_rwdi.dll+CEDCAA
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2319</ID>
          <Description>"Hunter Shoot A Spit Instant Cooldown"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,44 01 6C C7 60)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BF94C9)

label(code)
label(return)

newmem:

code:
  nop//mov [rdi+rax*8+60],r13d
  jmp return

INJECT:
  jmp code
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 44 01 6C C7 60

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2664</ID>
          <Description>"Hunter Instant LVL"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(HunterLVL,gamedll_x64_rwdi.dll,01 71 08 48 8B 0D 62 64 01 01)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BFE864)

label(code)
label(return)

newmem:

code:
  //add [rcx+08],esi
  add [rcx+08],999999999
  mov rcx,[gamedll_x64_rwdi.dll+1C14CD0]
  jmp return

HunterLVL:
  jmp code
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(HunterLVL)

[DISABLE]

HunterLVL:
  db 01 71 08 48 8B 0D 62 64 01 01

unregistersymbol(HunterLVL)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+BFE864

"gamedll_x64_rwdi.dll"+BFE83D: 48 8B 48 58              -  mov rcx,[rax+58]
"gamedll_x64_rwdi.dll"+BFE841: 48 85 C9                 -  test rcx,rcx
"gamedll_x64_rwdi.dll"+BFE844: 74 09                    -  je gamedll_x64_rwdi.dll+BFE84F
"gamedll_x64_rwdi.dll"+BFE846: 48 8B 01                 -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+BFE849: FF 90 38 08 00 00        -  call qword ptr [rax+00000838]
"gamedll_x64_rwdi.dll"+BFE84F: 48 8B 4B 40              -  mov rcx,[rbx+40]
"gamedll_x64_rwdi.dll"+BFE853: 0F B7 41 14              -  movzx eax,word ptr [rcx+14]
"gamedll_x64_rwdi.dll"+BFE857: 66 39 41 16              -  cmp [rcx+16],ax
"gamedll_x64_rwdi.dll"+BFE85B: 0F 86 85 01 00 00        -  jbe gamedll_x64_rwdi.dll+BFE9E6
"gamedll_x64_rwdi.dll"+BFE861: 8B 51 08                 -  mov edx,[rcx+08]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+BFE864: 01 71 08                 -  add [rcx+08],esi
"gamedll_x64_rwdi.dll"+BFE867: 48 8B 0D 62 64 01 01     -  mov rcx,[gamedll_x64_rwdi.dll+1C14CD0]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+BFE86E: 48 85 C9                 -  test rcx,rcx
"gamedll_x64_rwdi.dll"+BFE871: 74 1B                    -  je gamedll_x64_rwdi.dll+BFE88E
"gamedll_x64_rwdi.dll"+BFE873: 48 8B 89 80 02 00 00     -  mov rcx,[rcx+00000280]
"gamedll_x64_rwdi.dll"+BFE87A: 48 85 C9                 -  test rcx,rcx
"gamedll_x64_rwdi.dll"+BFE87D: 74 0F                    -  je gamedll_x64_rwdi.dll+BFE88E
"gamedll_x64_rwdi.dll"+BFE87F: 48 8B 01                 -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+BFE882: 45 33 C9                 -  xor r9d,r9d
"gamedll_x64_rwdi.dll"+BFE885: 44 8B C6                 -  mov r8d,esi
"gamedll_x64_rwdi.dll"+BFE888: FF 90 48 06 00 00        -  call qword ptr [rax+00000648]
"gamedll_x64_rwdi.dll"+BFE88E: 48 8B 43 40              -  mov rax,[rbx+40]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of jae gamedll_x64_rwdi.dll+C5A86</Description>
      <Address>7FFCB5F55A7D</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>C5A7D</ModuleNameOffset>
      <Before>
        <Byte>81</Byte>
        <Byte>9C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>73</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>89</Byte>
        <Byte>9C</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jae gamedll_x64_rwdi.dll+C5AA6</Description>
      <Address>7FFCB5F55A9D</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>C5A9D</ModuleNameOffset>
      <Before>
        <Byte>81</Byte>
        <Byte>A4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>73</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>89</Byte>
        <Byte>A4</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of push rax</Description>
      <Address>7FF6B12D12F5</Address>
      <ModuleName>DyingLightGame.exe</ModuleName>
      <ModuleNameOffset>F12F5</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>50</Byte>
      </Actual>
      <After>
        <Byte>53</Byte>
        <Byte>51</Byte>
        <Byte>52</Byte>
        <Byte>56</Byte>
        <Byte>57</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of add rcx,20</Description>
      <Address>7306C019</Address>
      <ModuleName>MSVCR100.dll</ModuleName>
      <ModuleNameOffset>3C019</ModuleNameOffset>
      <Before>
        <Byte>4C</Byte>
        <Byte>8B</Byte>
        <Byte>54</Byte>
        <Byte>0A</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C1</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>E0</Byte>
        <Byte>4C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+000000E0],eax</Description>
      <Address>7FF94004A401</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4BA401</ModuleNameOffset>
      <Before>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>E0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm0,[rcx+000000E0]</Description>
      <Address>7FF94004A20A</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4BA20A</ModuleNameOffset>
      <Before>
        <Byte>57</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>81</Byte>
        <Byte>E0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>58</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm1,[rbx+000000E0]</Description>
      <Address>7FF94004A3CD</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4BA3CD</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>58</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>E0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>17</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rdi+00001220],eax</Description>
      <Address>7FF9406351F0</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AA51F0</ModuleNameOffset>
      <Before>
        <Byte>87</Byte>
        <Byte>1C</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>87</Byte>
        <Byte>20</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rax+14],r11</Description>
      <Address>7FF941FF068B</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4E068B</ModuleNameOffset>
      <Before>
        <Byte>50</Byte>
        <Byte>1C</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>58</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>58</Byte>
        <Byte>10</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [r15+18],xmm0</Description>
      <Address>7FF941FE083E</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4D083E</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>80</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>47</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>68</Byte>
        <Byte>49</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm0</Description>
      <Address>7FF9415A3ED0</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B93ED0</ModuleNameOffset>
      <Before>
        <Byte>C4</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>0A</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+00000158],eax</Description>
      <Address>7FF940F2B5AD</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51B5AD</ModuleNameOffset>
      <Before>
        <Byte>47</Byte>
        <Byte>08</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>58</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx-18],eax</Description>
      <Address>7FF940F2BBFE</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51BBFE</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>FB</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>E8</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>BA</Byte>
        <Byte>9D</Byte>
        <Byte>AE</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+000001A0],rax</Description>
      <Address>7FF940F2B5B5</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51B5B5</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>A8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000001A0],xmm0</Description>
      <Address>7FF940F2B5E6</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51B5E6</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>B8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm7</Description>
      <Address>7FF940ABD3CF</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AD3CF</ModuleNameOffset>
      <Before>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>39</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>70</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000001A4],xmm0</Description>
      <Address>7FF940F2B5EE</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51B5EE</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>57</Byte>
        <Byte>1B</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [r12+000001A4],xmm1</Description>
      <Address>7FF940F2A69F</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51A69F</ModuleNameOffset>
      <Before>
        <Byte>68</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>8C</Byte>
        <Byte>24</Byte>
        <Byte>A4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>05</Byte>
        <Byte>78</Byte>
        <Byte>2A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+000000F0],eax</Description>
      <Address>7FF9403D58D2</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>5958D2</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>81</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>81</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000000FC],xmm6</Description>
      <Address>7FF9403D6360</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>596360</ModuleNameOffset>
      <Before>
        <Byte>81</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>B3</Byte>
        <Byte>FC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>BB</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+4C],eax</Description>
      <Address>7FF9403E5683</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>5A5683</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>14</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+64],eax</Description>
      <Address>7FF9403E56A7</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>5A56A7</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>60</Byte>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>28</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>64</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>2C</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm0,[rcx]</Description>
      <Address>7FF9415A3F08</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B93F08</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>CA</Byte>
        <Byte>76</Byte>
        <Byte>3A</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>14</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm0</Description>
      <Address>7FF9415A3F19</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B93F19</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>28</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C2</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>77</Byte>
        <Byte>23</Byte>
        <Byte>80</Byte>
        <Byte>79</Byte>
        <Byte>19</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rdi+0000015C],r11d</Description>
      <Address>7FF940F2BC0A</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51BC0A</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>44</Byte>
        <Byte>8B</Byte>
        <Byte>5B</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>9F</Byte>
        <Byte>5C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>10</Byte>
        <Byte>89</Byte>
        <Byte>87</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx],xmm8</Description>
      <Address>7FF9403D7528</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>597528</ModuleNameOffset>
      <Before>
        <Byte>9F</Byte>
        <Byte>60</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>03</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>73</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+40],xmm0</Description>
      <Address>7FF9416A352A</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>C9352A</ModuleNameOffset>
      <Before>
        <Byte>5C</Byte>
        <Byte>C6</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C7</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>43</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>77</Byte>
        <Byte>07</Byte>
        <Byte>C6</Byte>
        <Byte>43</Byte>
        <Byte>44</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000000A4],xmm0</Description>
      <Address>7FFD08B2D60E</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>CED60E</ModuleNameOffset>
      <Before>
        <Byte>A8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>50</Byte>
        <Byte>20</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm0</Description>
      <Address>7FFD0F0D3640</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B93640</ModuleNameOffset>
      <Before>
        <Byte>C4</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>0A</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm0</Description>
      <Address>7FFD0F0D365A</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B9365A</ModuleNameOffset>
      <Before>
        <Byte>72</Byte>
        <Byte>03</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>32</Byte>
        <Byte>C0</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+00000158],eax</Description>
      <Address>7FFD0EA5A73D</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51A73D</ModuleNameOffset>
      <Before>
        <Byte>47</Byte>
        <Byte>08</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>58</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx-18],eax</Description>
      <Address>7FFD0EA5AD8E</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51AD8E</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>FB</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>E8</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>BA</Byte>
        <Byte>AC</Byte>
        <Byte>AE</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+000001A0],rax</Description>
      <Address>7FFD0EA5A745</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51A745</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>A8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000001A0],xmm0</Description>
      <Address>7FFD0EA5A776</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51A776</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>B8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000001A4],xmm0</Description>
      <Address>7FFD0EA5A77E</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51A77E</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>57</Byte>
        <Byte>1B</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm9,[rsi+00001204]</Description>
      <Address>7FFBCD8B5985</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AA5985</ModuleNameOffset>
      <Before>
        <Byte>4D</Byte>
        <Byte>8B</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8E</Byte>
        <Byte>04</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>4D</Byte>
        <Byte>85</Byte>
        <Byte>FF</Byte>
        <Byte>74</Byte>
        <Byte>30</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of comiss xmm8,[rsi+00001204]</Description>
      <Address>7FFBCD8B6775</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AA6775</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>6B</Byte>
        <Byte>E2</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>86</Byte>
        <Byte>04</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>72</Byte>
        <Byte>3B</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>86</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of subss xmm6,[rsi+00001204]</Description>
      <Address>7FFBCD8B67C4</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AA67C4</ModuleNameOffset>
      <Before>
        <Byte>28</Byte>
        <Byte>F1</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CF</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>B6</Byte>
        <Byte>04</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>90</Byte>
        <Byte>28</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+00000954],xmm0</Description>
      <Address>7FFBCD8BE4B7</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AAE4B7</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>54</Byte>
        <Byte>09</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>40</Byte>
        <Byte>84</Byte>
        <Byte>F6</Byte>
        <Byte>74</Byte>
        <Byte>15</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm0,[rcx+0000121C]</Description>
      <Address>7FFBCD70FF90</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>8FFF90</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>81</Byte>
        <Byte>1C</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of cmp [r12+r10+01C13F80],esi</Description>
      <Address>7FFBCD27F4BA</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>46F4BA</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>B7</Byte>
        <Byte>74</Byte>
        <Byte>05</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>43</Byte>
        <Byte>39</Byte>
        <Byte>B4</Byte>
        <Byte>14</Byte>
        <Byte>80</Byte>
        <Byte>3F</Byte>
        <Byte>C1</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>84</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+00000210],dl</Description>
      <Address>7FFC1AEBCCBB</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>9FCCBB</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>88</Byte>
        <Byte>91</Byte>
        <Byte>10</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>99</Byte>
        <Byte>F0</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of dec [rdi+20]</Description>
      <Address>7FFC1A9BDBAC</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4FDBAC</ModuleNameOffset>
      <Before>
        <Byte>08</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>57</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>4F</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>48</Byte>
        <Byte>F8</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of inc [rdi+40]</Description>
      <Address>7FFC1A9BDBEF</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4FDBEF</ModuleNameOffset>
      <Before>
        <Byte>04</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>47</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>38</Byte>
        <Byte>33</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rdi+70],edx</Description>
      <Address>7FFC1A9BDC83</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4FDC83</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>57</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>38</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rsi+000002A8],r12</Description>
      <Address>7FFC2066A4E3</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>12A4E3</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>3D</Byte>
        <Byte>49</Byte>
        <Byte>F0</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>A6</Byte>
        <Byte>A8</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>B7</Byte>
        <Byte>A0</Byte>
        <Byte>02</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rsi+00007E70],edx</Description>
      <Address>7FFC1AB72AE0</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>6B2AE0</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>96</Byte>
        <Byte>70</Byte>
        <Byte>7E</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
        <Byte>74</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of inc [rbx+00007E70]</Description>
      <Address>7FFC1AB75062</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>6B5062</ModuleNameOffset>
      <Before>
        <Byte>74</Byte>
        <Byte>03</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>32</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>83</Byte>
        <Byte>70</Byte>
        <Byte>7E</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rsi+08],r8d</Description>
      <Address>7FFC1AB72A2E</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>6B2A2E</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>3B</Byte>
        <Byte>D0</Byte>
        <Byte>72</Byte>
        <Byte>D5</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>63</Byte>
        <Byte>8E</Byte>
        <Byte>58</Byte>
        <Byte>7E</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>teleport_aob1</Name>
      <Address>7FEE4824E49</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>waypoint_aob1</Name>
      <Address>7FEDF904290</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>waypoint_Z</Name>
      <Address>7FEE3C50150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>icamo_aob1</Name>
      <Address>7FEE0713BF0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ItemEditDataAOB</Name>
      <Address>7FFA5B763365</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BaseItemTableAOB</Name>
      <Address>7FFA5B3499FE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ItemEditData</Name>
      <Address>7FFA59D10037</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ih_aob1</Name>
      <Address>7FFCD2093100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>igh_aob1</Name>
      <Address>7FFCD22544D2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobPlayerLocationGrabber_r</Name>
      <Address>7FFC4B0F4410</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayerLocation</Name>
      <Address>7FFC4A650029</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ik_aob1</Name>
      <Address>7FFC4BB542A5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HunterUVBlockInstantCooldownUse</Name>
      <Address>7FFD08B2D68E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DriveLevel</Name>
      <Address>7FFBCCFEF4C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>t_aob1</Name>
      <Address>7FFBCBFD64B1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gw_aob1</Name>
      <Address>7FFBC8848CBC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>saveLocation_status</Name>
      <Address>7FFBCB6F0086</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>saved_X</Name>
      <Address>7FFBCB6F008A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>saved_Z</Name>
      <Address>7FFBCB6F008E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>saved_Y</Name>
      <Address>7FFBCB6F0092</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>goToSaved_status</Name>
      <Address>7FFBCB6F00DE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>goToWaypoint_status</Name>
      <Address>7FFBCB6F0128</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>waypoint_X</Name>
      <Address>7FFBCB6F0170</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>waypoint_Y</Name>
      <Address>7FFBCB6F0174</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>t_values</Name>
      <Address>7FFBCB6F0178</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Challenge/DLC</Name>
      <Address>7FF838F2000F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Skills2</Name>
      <Address>7FFC15DDEFEC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SurvivalRank</Name>
      <Address>7FFC1B000FAE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HunterLVL</Name>
      <Address>7FFDCFBCE864</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HP2</Name>
      <Address>7FFF73B6E4B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GodMode</Name>
      <Address>7FFF737CE49F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GodMode1</Name>
      <Address> 7FFA6077E4A9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GodMode2</Name>
      <Address> 7FFA6077E49F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>XP</Name>
      <Address> 7FFA6078259B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TimePoint</Name>
      <Address>7FFA5FC80021</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InstantKill</Name>
      <Address> 7FFA5FEE37E5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteStamina1</Name>
      <Address> 7FFA608CAD74</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteStamina2</Name>
      <Address> 7FFA608BCADF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ici_aob1</Name>
      <Address> 7FFA608AEE39</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedFlare</Name>
      <Address> 7FFA60863689</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedPotionDuration</Name>
      <Address> 7FFA60731C1C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FreeBluAOB1</Name>
      <Address> 7FFA5FFB5B25</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FreeBluAOB2</Name>
      <Address> 7FFA5FFB55FE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iw_aob1</Name>
      <Address> 7FFA6031BC78</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wisz_aob1</Name>
      <Address> 7FFA607B177C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ica_aob1</Name>
      <Address> 7FFA60986265</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ioa_aob1</Name>
      <Address> 7FFA608AE302</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itwu_aob1</Name>
      <Address> 7FFA608AEF4B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iuf_aob1</Name>
      <Address> 7FFA608635C5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>elp_aob1</Name>
      <Address> 7FFA6039217B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedCamouflage</Name>
      <Address> 7FFA608B79E7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteGrapplingHook</Name>
      <Address> 7FFA609630EA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CarFire</Name>
      <Address> 7FFA60C567C1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GasFreeFlamethrower</Name>
      <Address> 7FFA60C583B2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CarGas</Name>
      <Address> 7FFA60C57D1F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteNitro</Name>
      <Address> 7FFA60C5AC1A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TheButton</Name>
      <Address> 7FFA60791CEE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iha_aob1</Name>
      <Address> 7FFA60AE66F3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BozakHorde</Name>
      <Address> 7FFA600BBA9B</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>00 00 03 03 10 0F 03 - potion
31 2E 00 10 00 00 0B - axe
</Comments>
  <LuaScript>ItemTable = {}
WeaponTable = {}
BaseItemTable = {}
ModTable = {}
ItemPack = 0
WeapPack = 0
BaseItemPoint = 0

function Dec2Hex(nValue)
  return string.format("%X", 0+nValue)
end

function Hex2Dec(sValue)
  return tonumber(sValue, 16).."";
end

function BackPackUpdate()
   WeapPack = readQword(readQword("ItemEditData")+0x60)+0x40
   ItemPack = readQword(readQword("ItemEditData")+0x58)+0x40
   BaseItemPoint = readQword("ItemEditData+8")-0x18
   local BasePointCount = readInteger(BaseItemPoint+8)
   PackEdit_LBWeapSwap.clear()
   local WeapSwapList = PackEdit_LBWeapSwap.getItems()
   local ItemSwapList = PackEdit_LBItemSwap.getItems()
   for i=0,BasePointCount-1 do
     local ItemAddr = readQword(readQword(BaseItemPoint)+i*8)
     local ItemString = readString(readQword(ItemAddr+0x18))
     if string.find(ItemString,"Craftplan_") then
       table.insert(ModTable,{Address = ItemAddr,Name = ItemString})
     end
     table.insert(BaseItemTable,{Address=ItemAddr,Name=ItemString})
   end
   PackEdit_CBWeapMod.clear()
   local ModList = PackEdit_CBWeapMod.getItems()
   ModList.add("None")
   PackEdit_CBWeapMod.setItemIndex(0)
   for k,v in pairs(ModTable) do
     ModList.add(v.Name)
   end
  for k,v in pairs(BaseItemTable) do
    WeapSwapList.add(v.Name)
    ItemSwapList.add(v.Name)
  end
end

function BWeapUpdateClick(sender)
  if #BaseItemTable == 0 then
    BackPackUpdate()
  end
  PackEdit_LBWeapList.clear()
  WeaponTable={}
  local WeapList = PackEdit_LBWeapList.getItems()
  local WeapCount = readInteger(WeapPack+8)
  for i=0,WeapCount-1 do
    local WeapAddr = readQword(readQword(WeapPack)+i*8)
    local WeapString = readString(readQword(readQword(WeapAddr+0x60)+0x18))
    local EquipFlag = bAnd(readBytes(WeapAddr+0xf8),4)
    if EquipFlag == 4 then
      WeapString = "E: "..WeapString
    end
    table.insert(WeaponTable,{Index = i,Name=WeapString,Address=WeapAddr,Equip=EquipFlag})
  end
  table.sort(WeaponTable,function(a,b) return a.Equip&gt;b.Equip end)
  for k,v in pairs(WeaponTable) do
    WeapList.add(v.Name)
  end
end


function LBWeapListSelectionChange(sender, user)
  if sender.ItemIndex == -1 then return end
  local Weapon = WeaponTable[sender.ItemIndex+1]
  local Dura = readFloat(Weapon.Address+0x44)
  local Repair = readInteger(Weapon.Address+0x48)
  local Quant = readInteger(Weapon.Address+0x40)
  local Qual = readBytes(Weapon.Address+0x68)
  local Mod = readQword(Weapon.Address+0x70)
  PackEdit_EWeapDur.text = Dura
  PackEdit_EWeapRepair.text = Repair
  PackEdit_EWeapQual.text = Qual
  PackEdit_EWeapQuant.text = Quant
  local ModTest = false
  for k,v in pairs(ModTable) do
      if v.Address == Mod then
        PackEdit_CBWeapMod.setItemIndex(k)
        ModTest = true
        break
      end
  end
  if ModTest == false then PackEdit_CBWeapMod.setItemIndex(0) end
end

function EWeapApplyClick(sender)
  if tonumber(PackEdit_EWeapDur.text) == nil or tonumber(PackEdit_EWeapRepair.text) == nil or tonumber(PackEdit_EWeapQual.text) == nil or tonumber(PackEdit_EWeapQuant.text) == nil then
    showMessage("Please enter only number values.")
  return end
  if PackEdit_LBWeapList.ItemIndex == -1 then return end
  local ModIndex = PackEdit_CBWeapMod.getItemIndex()
  local Weapon = WeaponTable[PackEdit_LBWeapList.ItemIndex+1]
  local Dura = tonumber(PackEdit_EWeapDur.text)
  local Repair = tonumber(PackEdit_EWeapRepair.text)
  local Quant = tonumber(PackEdit_EWeapQuant.text)
  local Qual = tonumber(PackEdit_EWeapQual.text)
  writeFloat(Weapon.Address+0x44,Dura)
  writeInteger(Weapon.Address+0x48,Repair)
  writeInteger(Weapon.Address+0x40,Quant)
  writeBytes(Weapon.Address+0x68,Qual)
  if ModIndex == 0 then
    writeQword(Weapon.Address+0x70,0)
  else
    writeQword(Weapon.Address+0x70,ModTable[ModIndex].Address)
  end
end


function BWeapSwapClick(sender)
  if PackEdit_LBWeapSwap.ItemIndex == -1 or PackEdit_LBWeapList.ItemIndex == -1 then return end
  local SwapIndex = PackEdit_LBWeapSwap.getItemIndex()+1
  local Weapon = WeaponTable[PackEdit_LBWeapList.ItemIndex+1]
  writeQword(Weapon.Address+0x60,BaseItemTable[SwapIndex].Address)
  BWeapUpdateClick()
end


function BItemUpdateClick(sender)
  if #BaseItemTable == 0 then
    BackPackUpdate()
  end
  PackEdit_LBItemList.clear()
  ItemTable = {}
  local ItemList = PackEdit_LBItemList.getItems()
  local ItemCount = readInteger(ItemPack+8)
  for i = 0,ItemCount-1 do
    local ItemAddr = readQword(readQword(ItemPack)+i*8)
    local ItemString = readString(readQword(readQword(ItemAddr+0x60)+0x18))
    local ItemType = readBytes(readQword(ItemAddr+0x60)+0x78)
    table.insert(ItemTable,{Name = ItemString,Address = ItemAddr,ItemIndex = ItemType})
  end
  table.sort(ItemTable,function(a,b) return a.ItemIndex &lt; b.ItemIndex end)
  for k,v in pairs(ItemTable) do
    ItemList.add(v.Name)
  end
end

function LBItemListSelectionChange(sender, user)
  if sender.ItemIndex == -1 then return end
  local Item = ItemTable[sender.ItemIndex+1]
  local Quant = readInteger(Item.Address+0x40)
  PackEdit_EItemQuant.text = Quant
  local ItemTypeIndex = 0
  for k,v in pairs(BaseItemTable) do
    if v.Name == Item.Name then ItemTypeIndex = k-1 end
  end
  PackEdit_LBItemSwap.setItemIndex(ItemTypeIndex)
end

function BItemApplyClick(sender)
  if PackEdit_LBItemSwap.ItemIndex == -1 or PackEdit_LBItemList.ItemIndex == -1 then return end
  if tonumber(PackEdit_EItemQuant.text) == nil then showMessage("Please enter only number values.") end
  local SwapIndex = PackEdit_LBItemSwap.getItemIndex()+1
  local Item = ItemTable[PackEdit_LBItemList.ItemIndex+1]
  local Quant = tonumber(PackEdit_EItemQuant.text)
  writeQword(Item.Address+0x60,BaseItemTable[SwapIndex].Address)
  writeInteger(Item.Address+0x40,Quant)
  BItemUpdateClick()
end

function EditorShow()
  ItemTable = {}
  WeaponTable = {}
  BaseItemTable = {}
  PackEdit.show()
end

function EditorHide()
  PackEdit.close()
end
</LuaScript>
</CheatTable>
