<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>4</ID>
      <Description>"5k Credits On Pickup"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DXMD.exe
  Version: 
  Date   : 2016-12-26
  Author : Ascii

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(credits,DXMD.exe,89 8F 98 00 00 00 89 8C 24 9C) // should be unique
alloc(newmem,$1000,"DXMD.exe"+408C2A8)

label(code)
label(return)

newmem:

code:
  add ecx,(int)5000
  mov [rdi+00000098],ecx
  jmp return

credits:
  jmp newmem
  nop
return:
registersymbol(credits)

[DISABLE]

INJECT:
  db 89 8F 98 00 00 00

unregistersymbol(credits)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DXMD.exe"+408C2A8

"DXMD.exe"+408C272: 48 89 9C 24 80 00 00 00     -  mov [rsp+00000080],rbx
"DXMD.exe"+408C27A: 8B 9F 98 00 00 00           -  mov ebx,[rdi+00000098]
"DXMD.exe"+408C280: 8D 04 33                    -  lea eax,[rbx+rsi]
"DXMD.exe"+408C283: 48 8D 54 24 20              -  lea rdx,[rsp+20]
"DXMD.exe"+408C288: 89 B4 24 98 00 00 00        -  mov [rsp+00000098],esi
"DXMD.exe"+408C28F: 85 C0                       -  test eax,eax
"DXMD.exe"+408C291: 0F 4F C8                    -  cmovg ecx,eax
"DXMD.exe"+408C294: 48 8D 05 A5 72 E6 FE        -  lea rax,[DXMD.exe+2EF3540]
"DXMD.exe"+408C29B: 48 89 44 24 20              -  mov [rsp+20],rax
"DXMD.exe"+408C2A0: 48 8D 84 24 98 00 00 00     -  lea rax,[rsp+00000098]
// ---------- INJECTING HERE ----------
"DXMD.exe"+408C2A8: 89 8F 98 00 00 00           -  mov [rdi+00000098],ecx
// ---------- DONE INJECTING  ----------
"DXMD.exe"+408C2AE: 89 8C 24 9C 00 00 00        -  mov [rsp+0000009C],ecx
"DXMD.exe"+408C2B5: 48 8D 4C 24 30              -  lea rcx,[rsp+30]
"DXMD.exe"+408C2BA: 48 89 44 24 28              -  mov [rsp+28],rax
"DXMD.exe"+408C2BF: E8 3C EC 08 FF              -  call DXMD.exe+311AF00
"DXMD.exe"+408C2C4: 48 8D 0D 25 A5 B9 FD        -  lea rcx,[DXMD.exe+1C267F0]
"DXMD.exe"+408C2CB: E8 20 62 09 FF              -  call DXMD.exe+31224F0
"DXMD.exe"+408C2D0: 4C 8D 4C 24 30              -  lea r9,[rsp+30]
"DXMD.exe"+408C2D5: 4C 8D 84 24 90 00 00 00     -  lea r8,[rsp+00000090]
"DXMD.exe"+408C2DD: 48 8D 4C 24 40              -  lea rcx,[rsp+40]
"DXMD.exe"+408C2E2: BA 0F A2 90 C3              -  mov edx,C390A20F
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Infinite Jumps"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DXMD.exe
  Version: 
  Date   : 2016-12-26
  Author : Ascii

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(doublejump,DXMD.exe,89 83 88 05 00 00 48 8B 5C 24 30) // should be unique
alloc(newmem,$1000,"DXMD.exe"+4101DF5)

label(code)
label(return)

newmem:

code:
  mov eax,(int)0
  mov [rbx+00000588],eax
  jmp return

doublejump:
  jmp newmem
  nop
return:
registersymbol(doublejump)

[DISABLE]

doublejump:
  db 89 83 88 05 00 00

unregistersymbol(doublejump)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DXMD.exe"+4101DF5

"DXMD.exe"+4101DC4: 45 8D 80 F5 5D 00 19           -  lea r8d,[r8+19005DF5]
"DXMD.exe"+4101DCB: 0F 18 08                       -  prefetchto [rax]
"DXMD.exe"+4101DCE: 48 8D 40 40                    -  lea rax,[rax+40]
"DXMD.exe"+4101DD2: 49 FF C8                       -  dec r8
"DXMD.exe"+4101DD5: 75 F4                          -  jne DXMD.exe+4101DCB
"DXMD.exe"+4101DD7: E8 04 6E 10 00                 -  call DXMD.exe+4208BE0
"DXMD.exe"+4101DDC: C7 83 8C 05 00 00 00 00 00 00  -  mov [rbx+0000058C],00000000
"DXMD.exe"+4101DE6: C7 83 90 05 00 00 00 00 80 3F  -  mov [rbx+00000590],3F800000
"DXMD.exe"+4101DF0: 39 C7                          -  cmp edi,eax
"DXMD.exe"+4101DF2: 0F 42 C7                       -  cmovb eax,edi
// ---------- INJECTING HERE ----------
"DXMD.exe"+4101DF5: 89 83 88 05 00 00              -  mov [rbx+00000588],eax
// ---------- DONE INJECTING  ----------
"DXMD.exe"+4101DFB: 48 8B 5C 24 30                 -  mov rbx,[rsp+30]
"DXMD.exe"+4101E00: 48 83 C4 20                    -  add rsp,20
"DXMD.exe"+4101E04: 5F                             -  pop rdi
"DXMD.exe"+4101E05: C3                             -  ret 
"DXMD.exe"+4101E06: CC                             -  int 3 
"DXMD.exe"+4101E07: 66 0F 1F 84 00 00 00 00 00     -  nop [rax+rax+00000000]
"DXMD.exe"+4101E10: 48 89 5C 24 08                 -  mov [rsp+08],rbx
"DXMD.exe"+4101E15: 57                             -  push rdi
"DXMD.exe"+4101E16: 48 83 EC 20                    -  sub rsp,20
"DXMD.exe"+4101E1A: 48 89 CF                       -  mov rdi,rcx
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
