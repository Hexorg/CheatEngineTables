<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <Forms>
    <CETrainer>D554CB6ED340149DD84DFCAA4AB74848586241BB813E16941D8EE33651431C2553F15831B16F1A2B134F3499A465C96FF0237C040B1608F537F804269E3C9C34547455B1B2EF78EEB9E731E36F0642B8797AB08D3127490AFC94F181E507B36AAB0E5DA1BF2C96AA905CF684FE1BE9980DF52F85E2BB24163DFD4DC1F0C950242C2D2D9BB67D9A402A162D8EAA171D61EA533602C3CE1EF263D4379B6C944C618C9D216B471C20F5650B70E4603F680F69226461B58366D0F270D8CA7869F12A2D0D29565A112153B635490AD40EDEE396D7F41A415D35A1BF34C5458F2697A9512274BACF2EC304682D957A0CAB33A9B32BE010ABD5702C5656EF12ACC526269D90C7C0B502B224ADF25808963A5E39BCC0E50B8CC38622A6CD88698F338F7FCD897D9A1133092D33D93A58585EF43A6C2C323FA587869D95CACFC54CA4BCA80DC825146B6FBDB360759AFE53D9A0DD9EA654186DC141443D0BE55DF5AB818773AE269B5DD56FD03ADE9DA7E3062D996BD9B83AE90075AA213E0F3ED4BDF27C9E3D376B371B67CFD83F5F7853AA32D187CF4E937089EE33CAB8899688BB95A0EDB76A4D5C0B1B39D87833ECD3256CD0ED4224D66073B1FAF5B01DE4633D5B8DF5C73CD673C34BA31EE323C7247D152C5A26AB6EC822D9DC4DC9275B92B90011A52C8D8335679E6412F666417C97E0D3BD0DD96861B816D194BB6145B4025D32A6C20AE2445CA9233B33AFB4F5ECF0E4C4A9C028E28922B693A4F2769211B81342C760AB8D34BB588F721BB3958F961789644204C4E6A3D9ABFCA6261723DA92176AD46357BD0CC4B2AB6434255166D7A623DF25DFA8DF91C59AD0C38D421BB78516EE23F4F5C1AAD0181E5CE8D146A1E2B650ED9F85EE8ED318BAF22F1DBB8ACC8AE8E3BD0AEC93297F70F7DC8ABBEFB660C06471CA58EC76391BB803C2FB205EB861D6E11EBF7A10678E3739A37F45B7ADD1EF75068EFE1B3B10FA03</CETrainer>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>133</ID>
      <Description>"( A ) Selet this to enable options from 1 to 12"</Description>
      <Options moHideChildren="1" moBindActivation="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>136</ID>
          <Description>"1) Worker key"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(newvalue,4)

newvalue:
dd 100

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,[newvalue]
mov [01312134],eax

exit:
jmp returnhere

"Emperor.exe"+AD91C:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+AD91C:
mov [01312134],eax
//Alt: db A3 34 21 31 01
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>137</ID>
              <Description>", is increase and . is decrease (Don't tick this box)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>newvalue</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>188</Key>
                  </Keys>
                  <Value>100</Value>
                  <Description>increase value</Description>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>190</Key>
                  </Keys>
                  <Value>100</Value>
                  <Description>decrease value</Description>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"2) Fast production"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//fast production
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add [edi+04],ax
add [edi+04],ax
add [edi+04],ax
add [edi+04],ax
add [edi+04],ax
add [edi+04],ax
add [edi+04],ax
add [edi+04],ax
mov eax,[esi]

exit:
jmp returnhere

"Emperor.exe"+11E581:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+11E581:
add [edi+04],ax
mov eax,[esi]
//Alt: db 66 01 47 04 8B 06
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"3) Hemp no Decrease in House"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
xor ebp,ebp
test ebp,ebp
jle 0051A051
mov edx,[esi]

exit:
jmp returnhere

"Emperor.exe"+11A019:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+11A019:
test ebp,ebp
jle 0051A051
mov edx,[esi]
//Alt: db 85 ED 7E 34 8B 16
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"4) Ceramic No decrease in House"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
xor ebx, ebx
test ebx,ebx
jle 0051A019
mov eax,[esi]

exit:
jmp returnhere

"Emperor.exe"+119FE1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+119FE1:
test ebx,ebx
jle 0051A019
mov eax,[esi]
//Alt: db 85 DB 7E 34 8B 06
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"5) Silk no decrease in House"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
xor ebx, ebx
test ebx,ebx
jle 0051A0C9
mov edx,[esi]

exit:
jmp returnhere

"Emperor.exe"+11A091:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+11A091:
test ebx,ebx
jle 0051A0C9
mov edx,[esi]
//Alt: db 85 DB 7E 34 8B 16
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>104</ID>
          <Description>"6) Lacquer no decrease in House"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
xor edi,edi
test edi,edi
jle 0051A13B
mov edx,[esi]

exit:
jmp returnhere

"Emperor.exe"+11A0CB:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+11A0CB:
test edi,edi
jle 0051A13B
mov edx,[esi]
//Alt: db 85 FF 7E 6C 8B 16
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"7) Citizen do not run out of house"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//call 004AE1A0

exit:
jmp returnhere

"Emperor.exe"+AC3EC:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+AC3EC:
call 004AE1A0
//Alt: db E8 AF 1D 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"8) Twice house capacity, Enable above before using this option"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(newval,4)
newval:
dd 0

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
push eax
pushfd
shr ax,3
mov [newval],ax
popfd
pop eax
sub edi,[newval]
cmp ax,[esi+26]

exit:
jmp returnhere

"Emperor.exe"+AD46E:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+AD46E:
sub edi,eax
cmp ax,[esi+26]
//Alt: db 2B F8 66 3B 46 26
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"9) Upper limit of the mill,warehouse etc controller is 800"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

//*********************Upper limit of the mill controller******************

alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)

newmem1: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode1:
shl eax,04
mov eax,#80000
ret
nop

exit1:
jmp returnhere1

"Emperor.exe"+146C7A:
jmp newmem1
returnhere1:



//************************************************************

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add esi,edx
add esi,edx
mov [ecx+0c],#80000
mov [ecx+08],esi

exit:
jmp returnhere

"Emperor.exe"+1D27A1:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+1D27A1:
add esi,edx
mov [ecx+08],esi
//Alt: db 03 F2 89 71 08

dealloc(newmem1)
"Emperor.exe"+146C7A:
shl eax,04
ret
nop
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>120</ID>
          <Description>"10) Money Script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov dword ptr [ecx+10],#9999
mov edx,[ecx+10]
sub edx,eax

exit:
jmp returnhere

"Emperor.exe"+191AEC:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+191AEC:
mov edx,[ecx+10]
sub edx,eax
//Alt: db 8B 51 10 2B D0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>164</ID>
          <Description>"11)No hazard"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
jmp 0042DA01
mov ecx,[esi]
push 00

exit:
jmp returnhere

"Emperor.exe"+2D9D5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+2D9D5:
je 0042DA01
mov ecx,[esi]
push 00
//Alt: db 74 2A 8B 0E 6A 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>165</ID>
          <Description>"12) No Water, shrine, music etc decreases"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
jmp 00517B97
mov edx,[esi]
mov ecx,esi

exit:
jmp returnhere

"Emperor.exe"+117B84:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+117B84:
je 00517B97
mov edx,[esi]
mov ecx,esi
//Alt: db 74 11 8B 16 8B CE
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>218</ID>
          <Description>"God Always Happy"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,#150
mov [esi+14],eax
pop esi
ret 0004

exit:
jmp returnhere

"Emperor.exe"+10FFD8:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+10FFD8:
mov [esi+14],eax
pop esi
ret 0004
//Alt: db 89 46 14 5E C2 04 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>134</ID>
      <Description>"( B ) Not important, Options 13 -19, "</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>119</ID>
          <Description>"13) Money Pointer"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>Emperor.exe+F0F970</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>121</ID>
          <Description>"14) Easy Population in house and world"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
sub edi,0
cmp ax,[esi+26]

exit:
jmp returnhere

"Emperor.exe"+AD46E:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+AD46E:
sub edi,eax
cmp ax,[esi+26]
//Alt: db 2B F8 66 3B 46 26
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"15) House instant development GOD POWER"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,[edx*4+00A63BFC]
xor eax,eax
exit:
jmp returnhere

"Emperor.exe"+4CC8E:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+4CC8E:
mov eax,[edx*4+00A63BFC]
//Alt: db 8B 04 95 FC 3B A6 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"16) 2000 Worker"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
shl eax,2
mov dword ptr [01312134],eax


exit:
jmp returnhere

"Emperor.exe"+AD91C:
jmp newmem
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+AD91C:
mov [01312134],eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>132</ID>
          <Description>"17) Working worker final *1 = population"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(one)
label(two)
label(three)
label(four)
label(five)
label(six)
label(seven)
label(eight)
globalalloc(eaxvalue,4)
globalalloc(onepointfive,4)
globalalloc(mulvalue,4)
globalalloc(eaxnewvalue,4)
onepointfive:
dd (float)1.5

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
{mov [eaxvalue],eax
fld dword ptr [eaxvalue]
fmul dword ptr [onepointfive]
fstp dword ptr [mulvalue]
mov eax,[mulvalue]}
shl eax,1
mov [eaxnewvalue],eax
cmp eax,000000fa    // 250
ja one
mov dword ptr [01312134],#250
jmp returnhere
one:
cmp eax,000001f4     //500
ja two
mov dword ptr [01312134],#500
jmp returnhere
two:
cmp eax,000002ee
ja three
mov dword ptr [01312134],#750
jmp returnhere
three:
cmp eax,000003e8
ja four
mov dword ptr [01312134],#1000
jmp returnhere
four:
cmp eax,000004e2
ja five
mov dword ptr [01312134],#1250
jmp returnhere
five:
cmp eax,000005dc
ja six
mov dword ptr [01312134],#1500
jmp returnhere
six:
cmp eax,000006d6
ja seven
mov dword ptr [01312134],#1750
jmp returnhere
seven:
cmp eax,000007d0
ja eight
mov dword ptr [01312134],#2000
eight:


exit:
jmp returnhere

"Emperor.exe"+AD91C:
jmp newmem
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+AD91C:
mov [01312134],eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>127</ID>
          <Description>"18)Automatic worker increment. "</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(one)
label(two)
label(three)
label(four)
label(five)
label(six)
label(seven)
label(eight)
globalalloc(eaxvalue,4)
globalalloc(onepointfive,4)
globalalloc(mulvalue,4)
globalalloc(eaxnewvalue,4)
onepointfive:
dd (float)3

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [eaxvalue],eax
fld dword ptr [eaxvalue]
fmul dword ptr [onepointfive]
fstp dword ptr [mulvalue]
mov eax,[mulvalue]
//shl eax,2
mov [eaxnewvalue],eax
cmp eax,000000fa    // 250
ja one
mov dword ptr [01312134],#250
jmp returnhere
one:
cmp eax,000001f4     //500
ja two
mov dword ptr [01312134],#500
jmp returnhere
two:
cmp eax,000002ee
ja three
mov dword ptr [01312134],#750
jmp returnhere
three:
cmp eax,000003e8
ja four
mov dword ptr [01312134],#1000
jmp returnhere
four:
cmp eax,000004e2
ja five
mov dword ptr [01312134],#1200 //1250
jmp returnhere
five:
cmp eax,000005dc
ja six
mov dword ptr [01312134],#1300  //1500
jmp returnhere
six:
cmp eax,000006d6
ja seven
mov dword ptr [01312134],#1400  //1750
jmp returnhere
seven:
cmp eax,000007d0
ja eight
mov dword ptr [01312134],#1500  //2000
eight:


exit:
jmp returnhere

"Emperor.exe"+AD91C:
jmp newmem
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+AD91C:
mov [01312134],eax
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>128</ID>
              <Description>"eaxvalue"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>eaxvalue</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>129</ID>
              <Description>"onepointfive"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>onepointfive</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>135</ID>
              <Description>"Original pointer of woker value"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>01312134</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>131</ID>
              <Description>"mulvalue"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mulvalue</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>130</ID>
              <Description>"eaxnewvalue"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>eaxnewvalue</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"19) mill with minimum value on acceptance"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

//*********************Upper limit of the mill controller******************

alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)

newmem1: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode1:
shl eax,04
mov eax,#80000
ret
nop

exit1:
jmp returnhere1

"Emperor.exe"+146C7A:
jmp newmem1
returnhere1:



//************************************************************

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(here)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add esi,edx
add esi,edx
mov [ecx+0c],#80000
cmp dword ptr [ecx+08],000001f4
ja here
mov dword ptr [ecx+08],#500
jmp returnhere
here:
mov [ecx+08],esi

exit:
jmp returnhere

"Emperor.exe"+1D27A1:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+1D27A1:
add esi,edx
mov [ecx+08],esi
//Alt: db 03 F2 89 71 08

dealloc(newmem1)
"Emperor.exe"+146C7A:
shl eax,04
ret
nop
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>204</ID>
      <Description>"( C ) Minimum Value of items in warehouse etc. Works like Recifense, 20-36"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(here)
label(here1)
label(here2)
label(here3)
label(here4)
label(here5)
label(here6)
label(here7)
label(here8)
label(here9)
label(here10)
label(here11)
label(here12)
label(here13)
label(here14)
label(here15)
label(here16)

label(where1)
label(where2)
label(where3)
label(where4)
label(where5)
label(where6)
label(where7)
label(where8)
label(where9)
label(where10)
label(where11)
label(where12)
label(where13)
label(where14)
label(where15)
label(where16)

globalalloc(clayactivate,4)
globalalloc(riceactivate,4)
globalalloc(wheatactivate,4)
globalalloc(gamemeatactivate,4)
globalalloc(fishactivate,4)
globalalloc(hempactivate,4)
globalalloc(bronzewareactivate,4)
globalalloc(cabbageactivate,4)
globalalloc(milletactivate,4)
globalalloc(silkactivate,4)
globalalloc(ceramicactivate,4)
globalalloc(carvedjadeactivate,4)
globalalloc(jadeactivate,4)
globalalloc(woodactivate,4)
globalalloc(bronzeactivate,4)
globalalloc(weaponactivate,4)

globalalloc(clay,4)
globalalloc(rice,4)
globalalloc(wheat,4)
globalalloc(gamemeat,4)
globalalloc(fish,4)
globalalloc(hemp,4)
globalalloc(bronzeware,4)
globalalloc(cabbage,4)
globalalloc(millet,4)
globalalloc(silk,4)
globalalloc(ceramic,4)
globalalloc(carvedjade,4)
globalalloc(jade,4)
globalalloc(wood,4)
globalalloc(bronze,4)
globalalloc(weapon,4)
clay:
dd (int)500
rice:
dd (int)500
wheat:
dd (int)500
gamemeat:
dd (int)500
fish:
dd (int)500
hemp:
dd (int)500
bronzeware:
dd (int)500
cabbage:
dd (int)500
millet:
dd (int)500
silk:
dd (int)500
ceramic:
dd (int)500
carvedjade:
dd (int)500
jade:
dd (int)500
wood:
dd (int)500
bronze:
dd (int)500
weapon:
dd (int)500

clayactivate:
dd 1
riceactivate:
dd 1
wheatactivate:
dd 1
gamemeatactivate:
dd 1
fishactivate:
dd 1
hempactivate:
dd 1
bronzewareactivate:
dd 1
cabbageactivate:
dd 1
milletactivate:
dd 1
silkactivate:
dd 1
ceramicactivate:
dd 1
carvedjadeactivate:
dd 1
jadeactivate:
dd 1
woodactivate:
dd 1
bronzeactivate:
dd 1
weaponactivate:
dd 1

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//*****************
pushfd
push eax
cmp dword ptr [ecx+04],#18  //clay
jne here1
cmp dword ptr [clayactivate],0
jne where1

jmp here
where1:
mov eax,[clay]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here1:
cmp dword ptr [ecx+04],#6  //rice
jne here2
cmp dword ptr [riceactivate],0
jne where2

jmp here
where2:
mov eax,[rice]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here2:
cmp dword ptr [ecx+04],#7  //wheat
jne here3
cmp dword ptr [wheatactivate],0
jne where3

jmp here
where3:
mov eax,[wheat]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here3:
cmp dword ptr [ecx+04],#4  //game meat
jne here4
cmp dword ptr [gamemeatactivate],0
jne where4

jmp here
where4:
mov eax,[gamemeat]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here4:
cmp dword ptr [ecx+04],#2  //fish
jne here5
cmp dword ptr [fishactivate],0
jne where5

jmp here
where5:
mov eax,[fish]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here5:
cmp dword ptr [ecx+04],#19  //hemp
jne here6
cmp dword ptr [hempactivate],0
jne where6

jmp here
where6:
mov eax,[hemp]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here6:
cmp dword ptr [ecx+04],#23  // bronzeware
jne here7
cmp dword ptr [bronzewareactivate],0
jne where7

jmp here
where7:
mov eax,[bronzeware]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here7:
cmp dword ptr [ecx+04],#3  //cabbage
jne here8
cmp dword ptr [cabbageactivate],0
jne where8

jmp here
where8:
mov eax,[cabbage]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here8:
cmp dword ptr [ecx+04],#5  //millet
jne here9
cmp dword ptr [milletactivate],0
jne where9

jmp here
where9:
mov eax,[millet]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here9:
cmp dword ptr [ecx+04],#24  //silk
jne here10
cmp dword ptr [silkactivate],0
jne where10

jmp here
where10:
mov eax,[silk]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here10:
cmp dword ptr [ecx+04],#21  // weapon
jne here11
cmp dword ptr [weaponactivate],0
jne where11

jmp here
where11:
mov eax,[weapon]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here11:
cmp dword ptr [ecx+04],#25  // ceramic
jne here12
cmp dword ptr [ceramicactivate],0
jne where12

jmp here
where12:
mov eax,[ceramic]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here12:
cmp dword ptr [ecx+04],#26  // carved jade
jne here13
cmp dword ptr [carvedjadeactivate],0
jne where13

jmp here
where13:
mov eax,[carvedjade]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here13:
cmp dword ptr [ecx+04],#17  // jade
jne here14
cmp dword ptr [jadeactivate],0
jne where14

jmp here
where14:
mov eax,[jade]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here14:
cmp dword ptr [ecx+04],#10  // wood
jne here15
cmp dword ptr [woodactivate],0
jne where15

jmp here
where15:
mov eax,[wood]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782

here15:
cmp dword ptr [ecx+04],#11  //bronze
jne here16
cmp dword ptr [bronzeactivate],0
jne where16

jmp here
where16:
mov eax,[bronze]
cmp [ecx+08],eax
ja here
mov [ecx+08],eax
pop eax
popfd
jmp 005D2782


here16:

here:
pop eax
popfd

//****************
jg 005D2782
mov al,[esp+08]

exit:
jmp returnhere

"Emperor.exe"+1D2772:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+1D2772:
jg 005D2782
mov al,[esp+08]
//Alt: db 7F 0E 8A 44 24 08
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>188</ID>
          <Description>"weaponactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>Weaponactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>186</ID>
              <Description>"Weapon"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Weapon</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>189</ID>
          <Description>"bronzeactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bronzeactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>185</ID>
              <Description>"Bronze"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Bronze</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>190</ID>
          <Description>"woodactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>woodactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>184</ID>
              <Description>"Wood"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Wood</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>191</ID>
          <Description>"jadeactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>jadeactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>183</ID>
              <Description>"Jade"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>jade</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>192</ID>
          <Description>"carvedjadeactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>carvedjadeactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>182</ID>
              <Description>"CarvedJade"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>CarvedJade</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>193</ID>
          <Description>"ceramicactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>ceramicactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>181</ID>
              <Description>"Ceramic"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Ceramic</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>194</ID>
          <Description>"silkactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>silkactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>180</ID>
              <Description>"Silk"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Silk</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>195</ID>
          <Description>"milletactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>Milletactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>179</ID>
              <Description>"Millet"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Millet</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>196</ID>
          <Description>"cabbageactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>cabbageactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>178</ID>
              <Description>"Cabbage"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Cabbage</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>197</ID>
          <Description>"bronzewareactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bronzewareactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>177</ID>
              <Description>"BronzeWare"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>BronzeWare</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>198</ID>
          <Description>"hempactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>hempactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>176</ID>
              <Description>"Hemp"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Hemp</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>199</ID>
          <Description>"fishactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>fishactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>175</ID>
              <Description>"Fish"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Fish</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>200</ID>
          <Description>"gamemeatactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>gamemeatactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>174</ID>
              <Description>"GameMeat"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>GameMeat</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>201</ID>
          <Description>"riceactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>riceactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>173</ID>
              <Description>"Rice"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Rice</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>202</ID>
          <Description>"clayactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>clayactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>172</ID>
              <Description>"Clay"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Clay</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>203</ID>
          <Description>"wheatactivate"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>wheatactivate</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>171</ID>
              <Description>"Wheat"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>wheat</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>142</ID>
      <Description>"( D ) Remove Food from market. Option 37"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(here)
globalalloc(rightcontext,4)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,[Emperor.exe+F12B1C]
cmp dword ptr [ecx+04],0000001c
jne here
mov dword ptr [ecx+08],0
here:
mov eax,[ecx+08]
ret 
nop 

exit:
jmp returnhere

"Emperor.exe"+F8200:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Emperor.exe"+F8200:
mov eax,[ecx+08]
ret 
nop 
//Alt: db 8B 41 08 C3 90
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>192</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov [esi+14],eax</Description>
      <Address>0050FFD8</Address>
      <ModuleName>Emperor.exe</ModuleName>
      <ModuleNameOffset>10FFD8</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>FF</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>newval</Name>
      <Address>043A0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>eaxvalue</Name>
      <Address>02110000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>onepointfive</Name>
      <Address>02120000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mulvalue</Name>
      <Address>02ED0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>eaxnewvalue</Name>
      <Address>02EE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newvalue</Name>
      <Address>020E0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>rightcontext</Name>
      <Address>01F40000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>clay</Name>
      <Address>05EB0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>rice</Name>
      <Address>05EC0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wheat</Name>
      <Address>05ED0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gamemeat</Name>
      <Address>05EE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fish</Name>
      <Address>05EF0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hemp</Name>
      <Address>05F00000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bronzeware</Name>
      <Address>05F10000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cabbage</Name>
      <Address>060B0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>millet</Name>
      <Address>060C0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>silk</Name>
      <Address>060D0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ceramic</Name>
      <Address>060E0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>carvedjade</Name>
      <Address>060F0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jade</Name>
      <Address>06100000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wood</Name>
      <Address>06110000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bronze</Name>
      <Address>06120000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weapon</Name>
      <Address>06130000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>activate</Name>
      <Address>03B00000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>clayactivate</Name>
      <Address>05DB0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>riceactivate</Name>
      <Address>05DC0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wheatactivate</Name>
      <Address>05DD0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gamemeatactivate</Name>
      <Address>05DE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fishactivate</Name>
      <Address>05DF0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hempactivate</Name>
      <Address>05E00000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bronzewareactivate</Name>
      <Address>05E10000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cabbageactivate</Name>
      <Address>05E20000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>milletactivate</Name>
      <Address>05E30000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>silkactivate</Name>
      <Address>05E40000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ceramicactivate</Name>
      <Address>05E50000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>carvedjadeactivate</Name>
      <Address>05E60000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jadeactivate</Name>
      <Address>05E70000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>woodactivate</Name>
      <Address>05E80000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bronzeactivate</Name>
      <Address>05E90000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weaponactivate</Name>
      <Address>05EA0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Info about this table:
Game Name:-  Emperor : Rise of the Middle Kingdom
Game Type:- City Building and Management
Game Version:- 1.0.1.0
Trainer Options:-
Important Notes:
1) Just press Important box, all of its child are selected automatically. Or you may individually select it.
2)  Option 1 cannot be re-enabled.
3) Option 21, Minimum items are disabled by default you can activate it with '1'.
4) Not important, are less important cheats. Here for those who want to experiment. Though it contains some very cool options like option no. 15 and 18. But I recommend you to leave these options alone.
5) No need of ticking children of option 21. Just set the value and it will work. It works same as Recifense script. Atleast I tried to emulate it.
There are many other useful options hidden inside the script that I have forgotten. If you notice please comment.
( A ) Important:
	1) Worker Key , 
		comma(,) adds 100 to worker, 
		period(.) substracts 100 from the worker, 
	2) Fast Production 
		Building produces resources 8x faster
	3,4,5,6) Hemp,Ceramic,Silk, Lacquerware,bronzeware do not decrease in Houses
	7) Citizen do not run out of the house
	8) Twice House Capacity, Enable option 8 before using this option.
	9) Upper limit of the mill, warehouse, trading houses, etc controller can be set upto 800. Do not keep more than 8 different kinds of items in a single Warehouse
	10) Money.
	
	11) No Hazard - No need of making Inspector towers. Play without Inspector towers.
	12) Water, shrine, music etc do not decreases. House should access respective building once. Thereafter you may delete it. 
	*******************************************************************************************************************
	
	
( B )Not Important:
	13) Money Pointer
	14) Easy Population in house and world
	15) House Instant development , God Power (Cool but incomplete)
	16) 2000 Workers
	17) Slow rate of workers.
	18) Automatic worker. This is a cool alternative to Option 1. Reason is described below.
	19) mill set to 500+ when accepting items.
( C )Minimum value of items in warehouse, mill etc. Just like Recifense trainer. It may take some time to load when you tick it so be patient.
	On selecting you will see list of pointers. 
	Ex:-
	weaponactivate -- when set to 1, weapon will be set to minimum value of 500(default). 0 to disable it.
	weapon -- set the minimum quantity.
	likewise all the items I know have been listed with activator and minimum values setter.
	
( D ) Remove Food from Market. Backtick is the hotkey '`'(key below Escape key). Use it to toggle between on and off from within the game.
	Note: When this option is selected and when you right click your market your food will become zero. Use it with caution.
	Better turn it off while playing and use it when needed but wisely.
I love this game.
Thanks to Recifense, Geri, DarkByte.
Freiza
</Comments>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"Emperor.exe"+AD921</Address>
      <Comment>see inside some cool pointers %s important</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"Emperor.exe"+AD92B</Address>
      <Comment>see inside some cool pointers %s</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"Emperor.exe"+11A016</Address>
      <Comment>ceramic %s</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"Emperor.exe"+11A04E</Address>
      <Comment>%s hemp</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"Emperor.exe"+11A0C6</Address>
      <Comment>silk</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"Emperor.exe"+11A100</Address>
      <Comment>Lacquerware</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
