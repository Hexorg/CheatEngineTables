<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>205</ID>
      <Description>"AUTOBLOCK(using after one block)"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
globalalloc(player_esi,4)
label(returnhere)
label(originalcode)
label(player)
label(exit)
registersymbol(block)
aobscan(block,8B 85 6c FD FF FF 8B 40 14 80 78 3B 00 0f)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here


mov eax,[eax+14]
//test eax,eax
//je originalcode
cmp dword ptr [eax-244],0
je player
jmp originalcode

player:
mov byte ptr [eax+3B],01
push ebx
mov ebx,player_esi
mov [ebx],esi
pop ebx
originalcode:
cmp byte ptr [eax+3B],00

exit:
jmp returnhere

block+6:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
unregistersymbol(block)
block+6:
mov eax,[eax+14]
cmp byte ptr [eax+3B],00
//Alt: db 8B 40 14 80 78 3B 00
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>208</ID>
          <Description>"FLAG"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : salt.exe
  Version: 
  Date   : 2016-12-17
  Author : fang

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 

aobscan(INJECT,C7 45 A8 01 00 00 00 8B 85 6C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebp-58],00000001
  jmp return

INJECT:
  jmp newmem
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db C7 45 A8 01 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 00C664CD

00C664AF: C0 75 1B 8B           -  rol byte ptr [ebp+1B],-75
00C664B3: 85 6C FD FF           -  test [ebp+edi*8-01],ebp
00C664B7: FF 8B 40 04 8B 48     -  dec [ebx+488B0440]
00C664BD: 08 8B 15 9C A3 DA     -  or [ebx-255C63EB],cl
00C664C3: 03 E8                 -  add ebp,eax
00C664C5: C7                    -  db -39
00C664C6: 2F                    -  das 
00C664C7: 8C 59 85              -  mov [ecx-7B],ds
00C664CA: C0 74                 - db C0 74  // SHORTENED TO HIT INJECTION FROM:  rol byte ptr [edi+eax-39],45
00C664CC: 07                    -  pop es
// ---------- INJECTING HERE ----------
00C664CD: C7 45 A8 01 00 00 00  -  mov [ebp-58],00000001
// ---------- DONE INJECTING  ----------
00C664D4: 8B 85 6C FD FF FF     -  mov eax,[ebp-00000294]
00C664DA: D9 80 B8 00 00 00     -  fld dword ptr [eax+000000B8]
00C664E0: D9 EE                 -  fldz 
00C664E2: DF F1                 -  fcomip st(0),st(1)
00C664E4: DD D8                 -  fstp st(0)
00C664E6: 0F 8A 54 01 00 00     -  jp 00C66640
00C664EC: 0F 83 4E 01 00 00     -  jae 00C66640
00C664F2: C7 45 A4 01 00 00 00  -  mov [ebp-5C],00000001
00C664F9: 8B 85 70 FD FF FF     -  mov eax,[ebp-00000290]
00C664FF: 8B 50 20              -  mov edx,[eax+20]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>207</ID>
          <Description>"script2"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
registersymbol(block2)
aobscan(block2,8B 85 6c FD FF FF 8B 40 04 8B 48 08 8B 85 68 FD FF FF 8B 50 78)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
mov ebx,[player_esi]
cmp esi,ebx
pop ebx
jne originalcode
jmp INJECT
originalcode:
mov eax,[ebp-00000294]

exit:
jmp returnhere

block2:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
unregistersymbol(block2)
block2:
//mov eax,[ebp-00000294]
db 8B 85 6c FD FF FF
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>219</ID>
      <Description>"always-fall-balance-for-enemy(player-ptr-borrow from Cielos script)using after one hit by enemy"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
registersymbol(fall)
aobscan(fall,D9 80 B8 00 00 00 D9 EE DF F1 DD D8 0f)
globalalloc(switch,4)
label(exit)
label(player)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [eax+00000068],0
je player
jmp originalcode

player:

mov dword ptr [eax+000000B8],(float)0.03
fld dword ptr [eax+000000B8]
jmp exit

originalcode:

fld dword ptr [eax+000000B8]

exit:
jmp returnhere

fall:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
unregistersymbol(fall)
fall:
//fld dword ptr [eax+000000B8]
db D9 80 B8 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>243</ID>
      <Description>"DROP-hack-drop-EVERYTHING it own"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat



registersymbol(drope)
aobscan(drope,DF F1 DD D8 7A 0A 76 08 b8 01)



drope:
db DF F1 DD D8 eb 02


 
[DISABLE]
unregistersymbol(drope)

drope:
//fcomip st(0),st(1)
//fstp st(0)
//jp 0E29A808

db DF F1 DD D8 7A 0A
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>231</ID>
      <Description>"need-one-salt-for-weapon leveling using after blacksmithing one thing"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
registersymbol(need1)
aobscan(need1,39 B8 B8 00 00 00 0F 8C 04 04 00 00 8B 85 74 FF FF FF)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,01
originalcode:
cmp [eax+000000B8],edi

exit:
jmp returnhere

need1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
unregistersymbol(need1)
need1:
//cmp [eax+000000B8],edi
db 39 B8 B8 00 00 00
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>232</ID>
          <Description>"NEED1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
registersymbol(need2)
aobscan(need2,3B C3 0F 8C CF 03 00 00 8B 0D )
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
xor ebx,ebx
originalcode:
db 3B C3 0F 8C CF 03 00 00

exit:
jmp returnhere

need2:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
unregistersymbol(need2)
need2:
//cmp eax,ebx
//jl 07E094E1
db 3B C3 0F 8C CF 03 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>player_esi</Name>
      <Address>007E0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>block</Name>
      <Address> 19040B01</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address> 19040F55</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>block2</Name>
      <Address> 19040B36</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>switch</Name>
      <Address>007E0010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fall</Name>
      <Address> 19040F62</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>drope</Name>
      <Address> 161EA7F8</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
