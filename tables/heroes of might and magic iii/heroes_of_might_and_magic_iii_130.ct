<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>178</ID>
      <Description>"Free Building"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(newmem1)
label(newmem2)
label(newmem3)
label(newmem4)
label(newmem5)
label(newmem6)
label(newmem7)
label(newmem8)
label(newmemA)
label(newmemC)
label(newmemE)
label(returnhere)
label(returnhere1)
label(returnhere2)
label(returnhere3)
label(returnhere4)
label(returnhere5)
label(returnhere6)
label(returnhere7)
label(returnhere8)
label(returnhereA)
label(returnhereC)
label(returnhereE)
label(exit)

newmem:
movsx eax,byte ptr [ecx+22]
cmp [006977DC],eax
je exit
add ecx,00000091
lea eax,[eax+eax*4]
lea edx,[eax+eax*8]
mov eax,[00699538]
lea eax,[eax+edx*8+00020B84]
sub [eax],ebx
jmp returnhere
exit:
add ecx,00000091
lea eax,[eax+eax*4]
lea edx,[eax+eax*8]
mov eax,[00699538]
lea eax,[eax+edx*8+00020B84]
jmp returnhere

newmem1:
lea eax,[eax+edx*4+20]
mov edx,[0069CCFC]
mov ebx,[edx+000000B4]
mov ecx,[0069CCF4]
cmp [006977DC],ecx
je returnhere1
xor ecx,ecx
mov esi,[eax+18]
sub ebx,esi
mov [edx+000000B4],ebx
jmp returnhere1

newmem2:
mov eax,[0069CCF4]
cmp [006977DC],eax
jne 005D1D9C
mov eax,[ebp-1C]
jmp returnhere2

newmem3:
mov eax,[0069CCF4]
cmp [006977DC],eax
je returnhere3
mov eax,[ecx+edx*8+00020B84]
cmp eax,000003E8
lea ecx,[ecx+edx*8]
jl 0049E29C
cmp dword ptr [ecx+00020B6C],0A
jl 0049E29C
jmp returnhere3

newmem4:
mov esi,[0069CCF4]
cmp [006977DC],esi
mov esi,0000000C
je returnhere4
cmp eax,edx
jnge 005D8624
jmp returnhere4

newmem5:
lea eax,[eax+eax*4]
lea eax,[eax+eax*8]
mov ecx,[0069CCF4]
cmp [006977DC],ecx
mov ecx,[00699538]
je returnhere5
cmp [ecx+eax*8+00020B84],000003E8
jnge 005D289B
jmp returnhere5

newmem6:
mov eax,[0069CCF4]
cmp [006977DC],eax
je returnhere6
mov eax,[0067814C]
sub [edx+000000B4],eax
jmp returnhere6

newmem7:
mov edx,[0069CCF4]
cmp [006977DC],edx
je returnhere7
mov edx,[eax]
add edx,FFFFFC18
mov [eax],edx
jmp returnhere7

newmem8:
cmp [006977DC],eax
je 00571913
lea eax,[eax+eax*4]
lea edx,[eax+eax*8]
jmp returnhere8

newmemA:
cmp [006977DC],eax
je 00571957
lea eax,[eax+eax*4]
lea edx,[eax+eax*8]
jmp returnhereA

newmemC:
mov ecx,[0069CCF4]
cmp [006977DC],ecx
sete cl
jmp returnhereC

newmemE:
push 01
mov edi,[0069CCF4]
cmp [006977DC],edi
je returnhereE
mov edi,[eax+000000B4]
add edi,FFFFF830
mov [eax+000000B4],edi
jmp returnhereE

005D6BB0:
mov edx,[ebp+eax*4-00000220]
nop
nop

00461358:
jmp 00461372

00551069:
nop
nop
nop
nop
nop
nop
nop

0055103D:
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

004C6BB3:
jmp 004C6BD3
nop
nop
nop

004E86EA:
jmp 004E8710
nop
nop
nop

004A30E9:
jmp 004A3134
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

004A31EC:
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

004A70C0:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax,[00699538]
lea eax,[eax+edx*8+00020B84]
sub [eax],ebx
returnhere:

004A6F15:
jmp 004A6F29
nop
nop
nop
nop
nop
nop
nop

004A86EA:
jmp 004A8732
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

004A87CA:
jmp 004A87DC
nop
nop
nop
nop

004A6512:
mov al,[ebp+10]
jmp 004A655D
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

004A65B9:
jmp 004A65F8
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

005F4563:
jmp 005F458D
nop
nop
nop
nop

004A7749:
jmp 004A7794
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

004A7889:
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

00550982:
mov eax,FF
nop
nop
nop
nop
nop
nop
nop
nop

00550608:
mov ecx,[ebp-14]
mov eax,[edx+000000B4]
jmp 00550634
nop
nop

0055099C:
mov eax,FF
nop
nop
nop
nop
nop
nop
nop
nop
nop

005D85FA:
jmp newmem4
nop
nop
nop
nop
returnhere4:

005D7DEA:
mov ecx,[eax+000000B4]
jmp 005D7DFF
nop
nop

005C1719:
jmp newmem6
nop
nop
nop
nop
nop
nop
returnhere6:

005EE0FF:
mov edx,ecx
nop
nop
nop
nop
nop

005EDEDF:
push 01
sub edx,edi
push 01
jmp 005EDEF3
nop
nop
nop
nop
nop

004A6454:
mov ecx,[eax+000000B0]
mov al,[ebp+10]
jmp 004A649E
nop
nop
nop

004A6500:
nop
nop
nop
nop
nop
nop
nop

005F10E8:
jmp newmemC
nop
nop
nop
nop
nop
nop
nop
nop
returnhereC:

005F1475:
jmp newmemE
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
returnhereE:

004E831D:
jmp 004E8335
nop
nop
nop
nop

004E853A:
jmp 004E8554
nop
nop
nop
nop

005718E8:
jmp newmem8
nop
returnhere8:

0057192F:
jmp newmemA
nop
returnhereA:

005D1D7A:
jmp newmem2
nop
nop
nop
nop
nop
nop
nop
returnhere2:

005D2264:
jmp newmem1
lea eax,[eax+edx*4+20]
mov edx,[0069CCFC]
mov esi,[eax]
add eax,04
mov ebx,[edx+000000B4]
sub ebx,esi
dec ecx
mov [edx+000000B4],ebx
jne 005D226D
returnhere1:

0049E1D0:
jmp newmem3
nop
nop
cmp eax,000003E8
lea ecx,[ecx+edx*8]
jl 0049E29C
cmp dword ptr [ecx+00020B6C],0A
jl 0049E29C
returnhere3:

005D2867:
jmp newmem5
nop
lea eax,[eax+eax*4]
lea eax,[eax+eax*8]
cmp [ecx+eax*8+00020B84],000003E8
jnge 005D289B
returnhere5:

0049E25E:
jmp newmem7
nop
nop
nop
nop
nop
returnhere7:

[DISABLE]
dealloc(newmem)
005D6BB0:
mov edx,[ebp+eax*4-00000220]
sub [ecx],edx

00461358:
xor eax,eax
add ecx,0000009C
mov ebx,[ecx]
cmp ebx,[edx]
jnge 004613A4
inc eax
add ecx,04
add edx,04
cmp eax,07
jnge 00461360

00551069:
sub [ecx+eax*4+0000009C],edx

0055103D:
mov edx,[eax+000000B4]
sub edx,ecx
mov [eax+000000B4],edx

004C6BB3:
mov eax,0000009C

004E86EA:
mov eax,0000009C

004A30E9:
cmp [eax+000000B4],000003E8
jnl 004A3134

004A31EC:
add [eax+000000B4],FFFFFC18

004A70C0:
movsx eax,byte ptr [ecx+22]
add ecx,00000091
lea eax,[eax+eax*4]
lea edx,[eax+eax*8]
mov eax,[00699538]
lea eax,[eax+edx*8+00020B84]
sub [eax],ebx

004A6F15:
cmp ebx,[edx+eax*8+00020B84]
jle 004A6F29

004A86EA:
cmp [edx+000000B4],000003E8
jnl 004A8732

004A87CA:
mov ecx,[eax+000000B4]
add ecx,FFFFFC18
mov [eax+000000B4],ecx

004A6512:
mov eax,[edx+000000B4]
cmp eax,000007D0
mov al,[ebp+10]
jnl 004A655D

004A65B9:
add [eax+000000B4],FFFFF830
jmp 004A65F8

005F4563:
add ecx,0000009C

004A7749:
cmp [eax+000000B4],000003E8
jnl 004A7794

004A7889:
add [eax+000000B4],FFFFFC18

00550982:
mov eax,[esi+000000B4]
cdq
idiv [ebx+00000084]

00550608:
mov ecx,[ebp-14]
mov eax,[edx+000000B4]
cmp eax,ecx
jnl 00550634

0055099C:
mov eax,[esi+eax*4+0000009C]
cdq
idiv [ebx+0000008C]

005D85FA:
cmp eax,edx
mov esi,0000000C
jnge 005D8624

005D7DEA:
mov ecx,[eax+000000B4]
cmp ecx,edx
jnl 005D7DFF

005C1719:
mov eax,[0067814C]
sub [edx+000000B4],eax

005EE0FF:
mov edx,[edi+esi*4+0000009C]

005EDEDF:
mov edx,[eax+ecx*4+0000009C]
push 01
sub edx,edi
push 01
mov [eax+ecx*4+0000009C],edx

004A6454:
mov ecx,[eax+000000B0]
mov al,[ebp+10]
cmp ecx,0A
jnl 004A649E

004A6500:
add dword ptr [eax+000000B0],-0A

005F10E8:
cmp [eax+000000B4],000007D0
setge cl

005F1475:
mov edi,[eax+000000B4]
add edi,FFFFF830
push 01
mov [eax+000000B4],edi

004E831D:
add ecx,0000009C
mov edi,[edx]
cmp edi,[ecx]
jg 004E8341
inc eax
add ecx,04
add edx,04
cmp eax,07
jnge 004E8323

004E853A:
add ecx,0000009C
mov edi,[edx]
mov ebx,[ecx]
cmp edi,ebx
jg 004E8567
inc eax
add ecx,04
add edx,04
cmp eax,07
jnge 004E8540

005718E8:
lea eax,[eax+eax*4]
lea edx,[eax+eax*8]

0057192F:
lea eax,[eax+eax*4]
lea edx,[eax+eax*8]

005D1D7A:
mov eax,[ebp-1C]
cmp [edx+ecx*8+00020B84],eax
jnge 005D1D9C

005D2264:
mov ecx,00000007
lea eax,[eax+edx*4+20]
mov edx,[0069CCFC]
mov esi,[eax]
add eax,04
mov ebx,[edx+000000B4]
sub ebx,esi
dec ecx
mov [edx+000000B4],ebx
jne 005D226D

0049E1D0:
mov eax,[ecx+edx*8+00020B84]
cmp eax,000003E8
lea ecx,[ecx+edx*8]
jl 0049E29C
cmp dword ptr [ecx+00020B6C],0A
jl 0049E29C

005D2867:
mov ecx,[00699538]
lea eax,[eax+eax*4]
lea eax,[eax+eax*8]
cmp [ecx+eax*8+00020B84],000003E8
jnge 005D289B

0049E25E:
mov edx,[eax]
add edx,FFFFFC18
mov [eax],edx

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Free Spell"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(newmem2)
label(newmem4)
label(newmem6)
label(newmem8)
label(newmemA)
label(returnhere)
label(returnhere2)
label(returnhere4)
label(returnhere6)
label(returnhere8)
label(returnhereA)
label(exit)
label(exit2)
label(prev6)
label(next6)
label(exit6)
label(exit8)
label(exitA)

newmem:
movsx eax,byte ptr [ecx+22]
cmp [006977DC],eax
je exit
movsx eax,word ptr [ecx+18]
mov edx,[ebp+08]
mov [ebp-04],00000000
sub eax,edx
jmp returnhere
exit:
movsx eax,word ptr [ecx+18]
mov [ebp-04],00000000
jmp returnhere

newmem2:
movsx eax,byte ptr [esi+22]
cmp [006977DC],eax
je exit2
mov al,[esi+0000010D]
pop edi
inc al
mov [esi+0000010D],al
jmp returnhere2
exit2:
mov al,[esi+0000010D]
pop edi
jmp returnhere2

newmem4:
movsx eax,byte ptr [ecx+22]
cmp [006977DC],eax
setne al
mov ecx,[ebx+000132C0]
mov edx,ecx
mov [ebx+ecx*4+000054B4],eax
test al,al
mov ecx,[00699538]
je "Heroes3.exe"+1A0358
mov eax,[ebx+edx*4+000054A8]
push eax
call "Heroes3.exe"+CE600
test al,al
je "Heroes3.exe"+1A0358
mov al,[ebx+00013D74]
test al,al
jne "Heroes3.exe"+1A0358
jmp returnhere4

newmem6:
movsx edx,byte ptr [ecx+22]
cmp [006977DC],edx
jne exit6
mov edx,03030303
mov [ecx+C9],edx
mov [ecx+CD],edx
mov [ecx+DD],edx
mov [ecx+E4],dl
mov al,[ecx+EC]
test al,al
jne next6
mov al,[ecx+00000101]
cmp al,08
jge next6
inc al
mov [ecx+EC],al
mov [ecx+00000101],al
next6:
mov esi,00000023
mov eax,01010101
lea edx,[ecx+000003EA]
prev6:
mov [edx],eax
dec esi
add edx,04
test esi,esi
jne prev6
mov [ecx+000001B5],esi
exit6:
mov edx,[ecx+000001B5]
jmp returnhere6

newmem8:
movsx ecx,byte ptr [eax+22]
cmp [006977DC],ecx
jne exit8
mov al,[eax+00000478]
movzx eax,al
inc eax
shl eax,03
jmp 00463AC5
exit8:
xor eax,eax
jmp returnhere8

newmemA:
movsx ecx,byte ptr [eax+22]
cmp [006977DC],ecx
jne exitA
mov al,[eax+00000478]
movzx eax,al
inc eax
shl eax,03
jmp 00463AF8
exitA:
xor eax,eax
jmp returnhereA

004D946B:
jmp newmem6
nop
returnhere6:

0059D748:
movsx ecx,word ptr [ecx+18]
nop
nop
nop
nop

0059D21D:
movsx ecx,word ptr [edx+18]
nop
nop
nop
nop

0041D465:
jmp newmem2
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
returnhere2:

004D9544:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
returnhere:

005A0300:
jmp newmem4
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov edx,[ebx+000132C0]
mov ecx,[00699538]
mov eax,[ebx+edx*4+000054A8]
push eax
call "Heroes3.exe"+CE600
test al,al
je "Heroes3.exe"+1A0358
mov al,[ebx+00013D74]
test al,al
jne "Heroes3.exe"+1A0358
returnhere4:

00463AA2:
jmp newmem8
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
returnhere8:

00463AD5:
jmp newmemA
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
returnhereA:

0046280C:
nop
nop
nop
nop
nop
nop
nop
nop
nop

[DISABLE]
dealloc(newmem)
004D946B:
mov edx,[ecx+000001B5]
xor eax,eax
test edx,edx
pop esi
sete al

0059D748:
movsx ecx,word ptr [ecx+18]
cmp eax,ecx
jg 0059D762

0059D21D:
movsx ecx,word ptr [edx+18]
cmp eax,ecx
jg 0059D234

0041D465:
mov al,[esi+0000010D]
pop edi
inc al
mov [esi+0000010D],al

004D9544:
movsx eax,word ptr [ecx+18]
mov edx,[ebp+08]
mov [ebp-04],00000000
sub eax,edx

005A0300:
mov ecx,[ebx+000132C0]
mov [ebx+ecx*4+000054B4],00000001
mov edx,[ebx+000132C0]
mov ecx,[00699538]
mov eax,[ebx+edx*4+000054A8]
push eax
call 004CE600
test al,al
je 005A0358
mov al,[ebx+00013D74]
test al,al
jne 005A0358

00463AA2:
mov al,[eax+00000478]
cmp al,63
jle 00463AB3
mov eax,00000063
jmp 00463AC5

00463AD5:
mov al,[eax+00000478]
cmp al,63
jle 00463AE6
mov eax,00000063
jmp 00463AF8

0046280C:
movsx edi,byte ptr [eax+000000DC]
jmp 00462817

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>173</ID>
      <Description>"Build All"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(returnhere)
label(exit)

newmem:
mov edx,[0069CCF4]
mov ecx,[006977DC]
cmp ecx,edx
je exit
mov ecx,[eax+00000160]
mov edx,[eax+00000164]
jmp returnhere
exit:
xor edx,edx
dec edx
xor ecx,ecx
dec ecx
jmp returnhere

005C140C:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
returnhere:

004612F0:
mov al,[ecx+02]
jmp 00461305
nop
nop

[DISABLE]
dealloc(newmem)
005C140C:
mov ecx,[eax+00000160]
mov edx,[eax+00000164]

004612F0:
mov al,[ecx+02]
test al,al
je 00461305

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>251</ID>
      <Description>"Free Upgrade"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(ok,004C6AAB)
define(no,004C6AAE)
alloc(newmem,512)
label(returnhere)
label(next1)
label(next2)
label(next3)
label(next4)
label(next5)
label(nextA)
label(nextB)
label(nextC)
label(nextD)
label(nextE)
label(next)
label(exit)

newmem:
lea edx,[eax+eax*4]
mov eax,[00679C80]
lea ebx,[eax+edx*8]
mov eax,[eax+edx*8]
movsx ecx,byte ptr [esi+22]
cmp [006977DC],ecx
jne exit
cmp eax,06
jne next
mov eax,edi
cmp eax,7F
je nextA
cmp eax,7D
je nextB
cmp eax,81
je nextC
cmp eax,7B
je nextD
cmp eax,00000084
jge no
test eax,01
je nextE
dec eax
jmp nextE
nextA:
mov eax,70
jmp nextE
nextB:
mov eax,71
jmp nextE
nextC:
mov eax,72
jmp nextE
nextD:
mov eax,73
nextE:
mov ecx,[ebx+18]
cmp eax,[ebx+04]
je ok
cmp eax,[ebx+14]
je ok
next:
cmp edi,70
je next1
cmp edi,71
je next2
cmp edi,72
je next3
cmp edi,73
je next4
cmp edi,8A
jge next5
cmp edi,84
jge no
test edi,01
jne no
mov ecx,edi
inc ecx
jmp ok
next1:
mov ecx,7F
jmp ok
next2:
mov ecx,7D
jmp ok
next3:
mov ecx,81
jmp ok
next4:
mov ecx,7B
jmp ok
next5:
mov ecx,88
jmp ok
exit:
mov ecx,[ebx+04]
cmp edi,ecx
je 004C6AA8
jmp returnhere

004C6A29:
jmp newmem
nop
nop
nop
lea ebx,[eax+edx*8]
mov eax,[eax+edx*8]
nop
nop
nop
nop
nop
mov ecx,[ebx+04]
nop
nop
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
004C6A29:
lea edx,[eax+eax*4]
mov eax,[00679C80]
lea ebx,[eax+edx*8]
mov eax,[eax+edx*8]
cmp eax,06
jne 004C6AAE
mov ecx,[ebx+04]
cmp edi,ecx
je 004C6AA8

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>175</ID>
      <Description>"Item Presence"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(returnhere)
label(exit)
label(newmem2)
label(returnhere2)

newmem:
cmp esi,00000086
je exit
cmp esi,0000007E
je exit
cmp esi,55
je exit
cmp esi,54
je exit
cmp esi,53
je exit
movsx edx,byte ptr [ecx+22]
cmp [006977DC],edx
jne exit
lea edx,[ecx+0000012D]
mov al,01
pop esi
pop ebp
ret 0004
exit:
lea edx,[ecx+0000012D]
jmp returnhere

newmem2:
xor eax,eax
lea ecx,[esi+00000195]
cmp [esi+30],08
jl returnhere2
cmp [esi+30],09
jg returnhere2
movsx eax,[esi+22]
cmp [006977DC],eax
je 004E3F14
jmp returnhere2

004D947F:
jmp newmem
nop
nop
nop
nop
nop
inc eax
add edx,08
nop
nop
nop
nop
nop
returnhere:

004E3ED3:
jmp newmem2
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc eax
add ecx,08
nop
nop
nop
nop
nop
returnhere2:

004E395C:
xor eax,eax
lea ecx,[esi+0000012D]
nop
nop
nop
nop
nop
add eax,13
add ecx,68
nop
nop
nop

[DISABLE]
dealloc(newmem)
004E395C:
xor eax,eax
lea ecx,[esi+0000012D]
cmp dword ptr [ecx],55
je 004E39DE
inc eax
add ecx,08
cmp eax,13
jnge 004E3964

004D947F:
lea edx,[ecx+0000012D]
cmp [edx],esi
je 004D94C2
inc eax
add edx,08
cmp eax,13
jnge 004D9485

004E3ED3:
xor eax,eax
lea ecx,[esi+0000012D]
cmp [ecx],00000082
je 004E3F14
inc eax
add ecx,08
cmp eax,13
jnge 004E3EDB

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>176</ID>
      <Description>"No Level Limit"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(returnhere)
label(newmem1)

newmem:
movsx eax,word ptr [edi+55]
mov [ebp-20],eax
mov eax,[0069CCF4]
cmp [006977DC],eax
setne al
test al,al
jbe 004E37AD
mov al,[ecx+0001F877]
jmp returnhere
newmem1:
movsx esi,byte ptr [eax+22]
xor eax,eax
cmp [006977DC],esi
sete al
pop esi
pop ebp
ret 0004

004E3646:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
nop
returnhere:

0056D76A:
jmp newmem1
nop
nop
nop
nop
nop
nop

[DISABLE]
dealloc(newmem)
004E3646:
movsx eax,word ptr [edi+55]
mov [ebp-20],eax
mov al,[ecx+0001F877]
test al,al
jbe 004E37AD

0056D76A:
movsx edx,word ptr [eax+55]
xor eax,eax
cmp edx,esi
setge al
pop esi
pop ebp
ret 0004

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>177</ID>
      <Description>"Free Movement"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(newmem1)
label(newmem2)
label(newmem3)
label(newmem4)
label(newmem5)
label(newmem7)
label(newmemB)
label(newmemC)
label(newmemD)
label(newmemE)
label(newmemF)
label(returnhere)
label(returnhere1)
label(returnhere2)
label(returnhere3)
label(returnhere4)
label(returnhere5)
label(returnhere7)
label(returnhereB)
label(returnhereC)
label(returnhereD)
label(returnhereE)
label(returnhereF)
label(exit)
label(exit3)
label(exit5)
label(exit7)

newmem:
movsx eax,byte ptr [esi+22]
cmp [006977DC],eax
je exit
mov edx,[esi+4D]
mov eax,[ebp-10]
sub edx,ecx
cmp edx,eax
mov [esi+4D],edx
jnl 00480ABC
jmp returnhere
exit:
mov edx,[esi+4D]
mov eax,[ebp-10]
jmp 00480ABC

newmem1:
movsx ecx,byte ptr [esi+22]
cmp [006977DC],ecx
je returnhere1
mov [esi+4D],00000000
jmp returnhere1

newmem2:
movsx ecx,byte ptr [esi+22]
cmp [006977DC],ecx
je 0047FC69
mov ecx,[ebp+20]
sub edx,eax
mov eax,edx
mov [esi+4D],edx
cmp eax,ecx
jnl 0047FC69
jmp returnhere2

newmem3:
movsx eax,byte ptr [esi+22]
cmp [006977DC],eax
je exit3
mov eax,[esi+4D]
sub eax,edx
jmp returnhere3
exit3:
mov eax,[esi+4D]
jmp returnhere3

newmem4:
movsx ecx,byte ptr [esi+22]
cmp [006977DC],ecx
je returnhere4
mov [esi+4D],00000000
jmp returnhere4

newmem5:
movsx eax,byte ptr [esi+22]
cmp [006977DC],eax
je exit5
mov eax,[esi+4D]
sub ecx,03
neg ecx
sbb ecx,ecx
and ecx,64
add ecx,000000C8
sub eax,ecx
exit5:
mov eax,[esi+4D]
xor ecx,ecx
sub ecx,03
neg ecx
sbb ecx,ecx
and ecx,64
add ecx,000000C8
jmp returnhere5

newmem7:
movsx eax,byte ptr [edi+22]
cmp [006977DC],eax
je exit7
mov al,[ebp+14]
add cl,02
mov [edi+4D],00000000
jmp returnhere7
exit7:
mov al,[ebp+14]
add cl,02
jmp returnhere7

newmemB:
movsx ebx,byte ptr [edi+22]
cmp [006977DC],ebx
sete bl
shl bl,03
jmp returnhereB

newmemC:
mov ebx,[0069CCF4]
mov al,[ebp+14]
cmp [006977DC],ebx
jne 004A846F
jmp returnhereC

newmemD:
mov edx,[0069CCF4]
cmp [006977DC],edx
je 004805D5
jmp returnhereD

newmemE:
mov eax,[0069CCF4]
cmp [006977DC],eax
je 004AA43E
jmp returnhereE

newmemF:
movsx edx,byte ptr [edi+22]
cmp [006977DC],edx
je 0040ECA8
jmp returnhereF

00480AA2:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
returnhere:

004A0D08:
jmp newmem1
nop
nop
returnhere1:

0047FC54:
jmp newmem2
nop
nop
nop
nop
nop
nop
nop
nop
nop
returnhere2:

0041D9EF:
jmp newmem3
returnhere3:

0049E340:
jmp newmem4
nop
nop
returnhere4:

0041D410:
jmp newmem5
nop
nop
nop
sbb ecx,ecx
and ecx,64
add ecx,000000C8
sub eax,ecx
returnhere5:

004A88C5:
jmp newmem7
nop
nop
nop
nop
nop
nop
nop
nop
returnhere7:

004A7484:
jmp newmemB
nop
nop
nop
returnhereB:

004A83B3:
jmp newmemC
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
returnhereC:

00480811:
jmp newmemD
nop
nop
nop
nop
nop
nop
nop
nop
returnhereD:

004A8A4F:
jmp newmemE
nop
nop
nop
nop
nop
nop
nop
nop
returnhereE:

0040EC4A:
jmp newmemF
nop
nop
returnhereF:

0040F0CC:
nop
nop
nop
nop
nop
nop
nop

00462821:
xor ecx,ecx
nop
nop
nop
nop
nop

0056DC61:
mov al,[ecx+22]
cmp [006977DC],al
je 0056DC9E
jmp 0056DCA7
nop
nop

[DISABLE]
dealloc(newmem)
0041D410:
mov eax,[esi+4D]
sub ecx,03
neg ecx
sbb ecx,ecx
and ecx,64
add ecx,000000C8
sub eax,ecx

0041D9EF:
mov eax,[esi+4D]
sub eax,edx

0049E340:
mov [esi+4D],00000000

004A0D08:
mov [esi+4D],00000000

0047FC54:
mov ecx,[ebp+20]
sub edx,eax
mov eax,edx
mov [esi+4D],edx
cmp eax,ecx
jnl 0047FC69

00480AA2:
mov edx,[esi+4D]
mov eax,[ebp-10]
sub edx,ecx
cmp edx,eax
mov [esi+4D],edx
jnl 00480ABC

004A88C5:
mov al,[ebp+14]
add cl,02
mov [edi+4D],00000000

004A7484:
movsx bx,byte ptr [edi+000000CD]

004A83B3:
mov bl,[edx+eax+0004E364]
mov al,[ebp+14]
test cl,bl
je 004A846F

00480811:
test [ecx+eax+0004E364],dl
jne 004805D5

004A8A4F:
test [ecx+edx+0004E364],al
jne 004AA43E

0040EC4A:
mov edx,[edi+49]
cmp eax,edx
je 0040ECA8

0040F0CC:
mov [edx+4D],00000000

00462821:
movsx ecx,byte ptr [eax+000000DC]

0056DC61:
lea eax,[ecx+00000476]
sub edx,ecx
mov cl,[eax]
cmp cl,63
jle 0056DC77
mov ecx,00000063
jmp 0056DC8D
test cl,cl
jle 0056DC80
movsx ecx,cl
jmp 0056DC8D
lea ecx,[edx+eax]
xor ebx,ebx
cmp ecx,02
setge bl
mov ecx,ebx
movsx edi,byte ptr [esi]
cmp ecx,edi
jnge 0056DCA7
inc eax
inc esi
lea ecx,[edx+eax]
cmp ecx,04
jnge 0056DC69

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>113</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>38</ID>
      <Description>"Quest Item Replacment"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(exit9)
label(next9)
label(prevA)
label(prevB)
label(prevC)
label(prevD)
label(backpack)
label(notfound)
label(found)

newmem:
cmp esi,00000002
je backpack
xor eax,eax
lea edx,[ecx+0000012D]
prevA:
cmp [edx],esi
je found
inc eax
add edx,08
cmp eax,13
jnge prevA
cmp esi,07
jl notfound
backpack:
mov dl,[ecx+22]
cmp [006977DC],dl
jne notfound
xor eax,eax
lea edx,[ecx+00000195]
prevC:
cmp [edx],-1
jne next9
add edx,08
inc eax
cmp eax,03
jnge prevC
xor eax,eax
add ecx,000001D4
prevB:
cmp [ecx],esi
je found
inc eax
add ecx,08
cmp eax,40
jnge prevB
jmp notfound
next9:
xor eax,eax
add ecx,000001D4
prevD:
cmp [ecx],esi
je found
cmp [ecx],-1
je exit9
inc eax
add ecx,08
cmp eax,40
jnge prevD
notfound:
xor al,al
pop esi
pop ebp
ret 0004
exit9:
mov [ecx],esi
mov [edx],FFFFFFFF
found:
mov al,01
pop esi
pop ebp
ret 0004

004D9427:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

[DISABLE]
dealloc(newmem)
004D9427:
xor eax,eax
lea edx,[ecx+0000012D]
cmp [edx],esi
je 004D9458
inc eax
add edx,08
cmp eax,13
jnge 004D942F
xor eax,eax
add ecx,000001D4
cmp [ecx],esi
je 004D9458
inc eax
add ecx,08
cmp eax,40
jnge 004D9444
xor al,al
pop esi
pop ebp
ret 0004
mov al,01
pop esi
pop ebp
ret 0004

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>113</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>135</ID>
      <Description>"Quest Creature Presence"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(returnhere)
label(prev)
label(exit)

newmem:
mov eax,[0069CCF4]
cmp [006977DC],eax
jne exit
xor eax,eax
mov edx,00000007
prev:
add eax,[ecx+1C]
add ecx,04
dec edx
jne prev
jmp returnhere
exit:
xor eax,eax
xor edx,edx
add ecx,1C
jmp returnhere

0044AA97:
jmp newmem
nop
nop
nop
nop
nop
nop
add eax,[ecx+1C]
add ecx,04
dec edx
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
0044AA97:
xor eax,eax
mov edx,00000007
cmp [ecx],esi
jne 0044AAA5
add eax,[ecx+1C]
add ecx,04
dec edx
jne 0044AA9E

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"Level Limit"</Description>
      <LastState Value="0" Activated="0" RealAddress="0204F8BF"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699538</Address>
      <Offsets>
        <Offset>1F877</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>116</ID>
      <Description>"Town Color"</Description>
      <LastState Value="0" Activated="0" RealAddress="065EE5E1"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>0069954C</Address>
      <Offsets>
        <Offset>1</Offset>
        <Offset>38</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>117</ID>
      <Description>"Build Flag"</Description>
      <LastState Value="0" Activated="0" RealAddress="065EE5E2"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>0069954C</Address>
      <Offsets>
        <Offset>2</Offset>
        <Offset>38</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>69</ID>
      <Description>"Town Type"</Description>
      <LastState Value="6" Activated="0" RealAddress="065EE5E4"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>0069954C</Address>
      <Offsets>
        <Offset>4</Offset>
        <Offset>38</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>258</ID>
      <Description>"Built Structures"</Description>
      <LastState Value="24 52 E9 00 E0 0F 00 00 A7 5F" Activated="0" RealAddress="065EE730"/>
      <ShowAsHex>1</ShowAsHex>
      <Color>80000008</Color>
      <VariableType>Array of byte</VariableType>
      <ByteLength>10</ByteLength>
      <Address>0069954C</Address>
      <Offsets>
        <Offset>150</Offset>
        <Offset>38</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>51</Key>
          </Keys>
          <Value>24 52 89 1A A0 0D</Value>
          <ID>1</ID>
        </Hotkey>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>52</Key>
          </Keys>
          <Value>24 52 E9 00 A0 0F</Value>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>50</Key>
          </Keys>
          <Value>24 52 89 82 00 0F</Value>
          <ID>2</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"Buildable Structures"</Description>
      <LastState Value="A7 FB EF C4 FF 0F" Activated="0" RealAddress="065EE740"/>
      <ShowAsHex>1</ShowAsHex>
      <Color>80000008</Color>
      <VariableType>Array of byte</VariableType>
      <ByteLength>6</ByteLength>
      <Address>0069954C</Address>
      <Offsets>
        <Offset>160</Offset>
        <Offset>38</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>49</Key>
          </Keys>
          <Value>FF FF FF FF FF 0F</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Current Hero"</Description>
      <LastState Value="131" Activated="0" RealAddress="02050B1C"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCFC</Address>
      <Offsets>
        <Offset>4</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Wood"</Description>
      <LastState Value="18" Activated="0" RealAddress="02050BB4"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCFC</Address>
      <Offsets>
        <Offset>9C</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Mercury"</Description>
      <LastState Value="5" Activated="0" RealAddress="02050BB8"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCFC</Address>
      <Offsets>
        <Offset>A0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Ore"</Description>
      <LastState Value="15" Activated="0" RealAddress="02050BBC"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCFC</Address>
      <Offsets>
        <Offset>A4</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Sulfur"</Description>
      <LastState Value="0" Activated="0" RealAddress="02050BC0"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCFC</Address>
      <Offsets>
        <Offset>A8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Crystal"</Description>
      <LastState Value="8" Activated="0" RealAddress="02050BC4"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCFC</Address>
      <Offsets>
        <Offset>AC</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Gems"</Description>
      <LastState Value="4" Activated="0" RealAddress="02050BC8"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCFC</Address>
      <Offsets>
        <Offset>B0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Gold"</Description>
      <LastState Value="13150" Activated="0" RealAddress="02050BCC"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCFC</Address>
      <Offsets>
        <Offset>B4</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Artifact 1"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006AAADC</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>114</Key>
          </Keys>
          <Value>72</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Artifact 2"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000004"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006AAADC</Address>
      <Offsets>
        <Offset>4</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>114</Key>
          </Keys>
          <Value>125</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Artifact 3"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000008"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006AAADC</Address>
      <Offsets>
        <Offset>8</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>114</Key>
          </Keys>
          <Value>129</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Artifact 4"</Description>
      <LastState Value="??" Activated="0" RealAddress="0000000C"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006AAADC</Address>
      <Offsets>
        <Offset>C</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>114</Key>
          </Keys>
          <Value>131</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Artifact 5"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000010"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006AAADC</Address>
      <Offsets>
        <Offset>10</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>114</Key>
          </Keys>
          <Value>133</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Artifact 6"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000014"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006AAADC</Address>
      <Offsets>
        <Offset>14</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>114</Key>
          </Keys>
          <Value>138</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Artifact 7"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000018"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006AAADC</Address>
      <Offsets>
        <Offset>18</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>114</Key>
          </Keys>
          <Value>2</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Recruit Hero 1"</Description>
      <LastState Value="30" Activated="0" RealAddress="02050B40"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCFC</Address>
      <Offsets>
        <Offset>28</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Recruit Hero 2"</Description>
      <LastState Value="85" Activated="0" RealAddress="02050B44"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCFC</Address>
      <Offsets>
        <Offset>2C</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>133</ID>
      <Description>"Selected Hero"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000030"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00698B70</Address>
      <Offsets>
        <Offset>30</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>91</ID>
      <Description>"Color"</Description>
      <LastState Value="0" Activated="0" RealAddress="006977DC"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006977DC</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>93</ID>
      <Description>"Current Color"</Description>
      <LastState Value="0" Activated="0" RealAddress="0069CCF4"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CCF4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>122</ID>
      <Description>"Key Code"</Description>
      <LastState Value="1" Activated="0" RealAddress="0069CD10"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0069CD10</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>121</ID>
      <Description>"Light Blue Key"</Description>
      <LastState Value="0" Activated="0" RealAddress="0207E3AC"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699538</Address>
      <Offsets>
        <Offset>4E364</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>124</ID>
      <Description>"Green Key"</Description>
      <LastState Value="0" Activated="0" RealAddress="0207E3AD"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699538</Address>
      <Offsets>
        <Offset>4E365</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>123</ID>
      <Description>"Red Key"</Description>
      <LastState Value="0" Activated="0" RealAddress="0207E3AE"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699538</Address>
      <Offsets>
        <Offset>4E366</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>125</ID>
      <Description>"Dark Blue Key"</Description>
      <LastState Value="0" Activated="0" RealAddress="0207E3AF"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699538</Address>
      <Offsets>
        <Offset>4E367</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>126</ID>
      <Description>"Brown Key"</Description>
      <LastState Value="0" Activated="0" RealAddress="0207E3B0"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699538</Address>
      <Offsets>
        <Offset>4E368</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>127</ID>
      <Description>"Purple Key"</Description>
      <LastState Value="0" Activated="0" RealAddress="0207E3B1"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699538</Address>
      <Offsets>
        <Offset>4E369</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>128</ID>
      <Description>"White Key"</Description>
      <LastState Value="0" Activated="0" RealAddress="0207E3B2"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699538</Address>
      <Offsets>
        <Offset>4E36A</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>129</ID>
      <Description>"Black Key"</Description>
      <LastState Value="0" Activated="0" RealAddress="0207E3B3"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699538</Address>
      <Offsets>
        <Offset>4E36B</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>259</ID>
      <Description>"Expert Spell"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(learning,2048)
label(exit1)
label(finish)
label(scouting)
label(checkitem1)
label(checkitem2)
label(found1)
label(found2)
label(stop)

learning:
xor eax,eax
movsx edx,byte ptr [ecx+22]
cmp [006977DC],edx
sete al
lea edx,[eax+eax*2]
test al,al
mov edx,[edx*4+0063EA58]
mov [ebp-04],edx
jle finish
movsx eax,word ptr [ecx+55]
mov [ebp-08],eax
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
finish:
fld dword ptr [ebp-04]
fadd dword ptr [0063B6E0]
mov esp,ebp
pop ebp
ret
nop
nop
nop
nop
nop
scouting:
push ebp
mov ebp,esp
sub esp,08
push ebx
push esi
mov esi,ecx
xor eax,eax
movsx ecx,byte ptr [esi+22]
cmp [006977DC],ecx
sete al
lea ecx,[eax+eax*2]
test al,al
mov ebx,[ecx*4+0063E9D8]
mov [ebp-08],ebx
jle checkitem1
movsx ecx,word ptr [esi+55]
mov [ebp-04],ecx
fild dword ptr [ebp-04]
fstp dword ptr [ebp-04]
fld dword ptr [ebp-04]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fmul dword ptr [ebp-08]
call 00617F94
mov ebx,eax
checkitem1:
push edi
lea edi,[esi+0000012D]
movsx ecx,byte ptr [esi+22]
cmp [006977DC],ecx
je found1
mov edx,[00660B68]
mov eax,[edx+00000698]
cmp eax,-01
je checkitem2
mov ecx,[00660B6C]
lea eax,[eax+eax*2]
mov edx,[ecx+eax*8]
mov ecx,esi
push edx
call 004D9460
test al,al
je checkitem2
found1:
inc ebx
checkitem2:
mov ecx,edi
pop edi
movsx eax,byte ptr [esi+22]
cmp [006977DC],eax
je found2
mov eax,[00660B68]
mov eax,[eax+000006B8]
cmp eax,-01
je stop
mov edx,[00660B6C]
lea ecx,[eax+eax*2]
mov eax,[edx+ecx*8]
mov ecx,esi
push eax
call 004D9460
test al,al
je stop
found2:
inc ebx
stop:
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
nop
nop
nop
nop

004E4AB6:
jmp learning
nop

00486926:
call scouting

00486D76:
call scouting

004C7932:
call scouting

00480962:
call scouting

004E53BA:
movsx edx,byte ptr [ecx+22]
cmp [006977DC],edx
jne exit1
mov al,03
exit1:
pop ebx
pop ebp
ret 0008
nop
nop
nop
nop
nop
nop
nop

[DISABLE]
dealloc(newmem)
004E53BA:
test bl,01
je 004E53CC
movsx edx,byte ptr [ecx+000000D8]
test edx,edx
jle 004E53CC
mov eax,edx
test bl,02
je 004E53DE
movsx edx,byte ptr [ecx+000000D7]
cmp edx,eax
jle 004E53DE
mov eax,edx
test bl,08
je 004E53F0
movsx edx,byte ptr [ecx+000000DA]
cmp edx,eax
jle 004E53F0
mov eax,edx
test bl,04
je 004E5402
movsx ecx,byte ptr [ecx+000000D9]
cmp ecx,eax
jle 004E5402
mov eax,ecx
pop ebx
pop ebp
ret 0008

004E4AB6:
mov al,[ecx+000000DE]
movsx edx,al
test al,al
mov edx,[edx*4+0063EA58]
mov [ebp-04],edx
jle 004E4B09
mov eax,[ecx+1A]
mov edx,[00679C80]
lea eax,[eax+eax*4]
lea eax,[edx+eax*8]
cmp dword ptr [eax],00
jne 004E4B09
cmp dword ptr [eax+04],15
jne 004E4B09
movsx eax,word ptr [ecx+55]
mov [ebp-08],eax
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
fld dword ptr [ebp-04]
fadd dword ptr [0063B6E0]
mov esp,ebp
pop ebp
ret

00486926:
call 004E42E0

00486D76:
call 004E42E0

004C7932:
call 004E42E0

00480962:
call 004E42E0

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>388</ID>
      <Description>"Morale And Luck"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
0044BA3F:
mov edx,[ebp-10] //4BA3F
xor ecx,ecx
mov eax,edx
jmp 0044BA7F
nop
nop
nop

0044B9E9:
mov edi,[ebp+18] //4B9E9
mov ecx,[ebp-10]
xor edx,edx
mov esi,00040000
mov eax,[ecx]
jmp 0044BA3F
nop
nop
nop
lea ebx,[eax*8+00000000]
sub ebx,eax
lea eax,[eax+ebx*4]
mov ebx,[006747B0]
nop
nop
nop
nop
jne 0044BA3F
inc edx
add ecx,04
cmp edx,07
jnge 0044B9F6

0044AC89:
mov ebx,[ebp+18] //4AC89
mov ecx,[ebp-04] //4AC8C
mov esi,[006747B0]
mov eax,00000002
sub eax,edi
mov edi,00040000
add ebx,eax
xor edx,edx
mov [ebp+18],ebx
mov eax,[ecx] //4ACA8
cmp eax,-01
je 0044ACC4
lea ebx,[eax*8+00000000]
sub ebx,eax
lea eax,[eax+ebx*4]
nop
nop
nop
nop
jmp 0044ACD8
mov ebx,[ebp+18]
inc edx //4ACC4
add ecx,04
cmp edx,07
jnge 0044ACA8
jmp 0044ACD8
mov eax,[ebp+18] //4ACCF
dec eax
mov [ebp+18],eax
mov ebx,eax
mov edx,[ebp-04] //4ACD8
xor eax,eax
mov ecx,edx
jmp 0044AD01
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor eax,eax
mov ecx,edx
cmp dword ptr [ecx],0D //4ACF1
je 0044AD01
inc eax
add ecx,04
cmp eax,07
jnge 0044ACF1
jmp 0044AD02
inc ebx //4AD01
mov ecx,[ebp+14] //4AD02
test ecx,ecx
je 0044AD2E
xor eax,eax
mov edx,ecx

004E3A4C:
movsx ecx,byte ptr [esi+22]
mov eax,edi
cmp [006977DC],ecx
je 004E3A86
nop
nop
nop
nop

004E3CA5:
movsx ecx,byte ptr [edi+22]
mov eax,esi
cmp [006977DC],ecx
je 004E3CE0
nop
nop
nop
nop

004DCDAC:
movsx ecx,byte ptr [ebx+22]
lea eax,[esi+18]
cmp [006977DC],ecx
je 004DCDE7
nop
nop
nop

004DC60C:
xor ecx,ecx
mov cl,[ebx+22]
lea eax,[esi+18]
cmp [006977DC],ecx
je 004DC647
nop
nop

[DISABLE]
004DC60C:
xor ecx,ecx
mov eax,esi
cmp dword ptr [eax],6C
je 004DC647
inc ecx
add eax,08
cmp ecx,13
jnge 004DC610

004DCDAC:
xor ecx,ecx
mov eax,esi
cmp dword ptr [eax],6C
je 004DCDE7
inc ecx
add eax,08
cmp ecx,13
jnge 004DCDB0

004E3CA5:
xor ecx,ecx
mov eax,esi
cmp dword ptr [eax],6C
je 004E3CE0
inc ecx
add eax,08
cmp ecx,13
jnge 004E3CA9

004E3A4C:
xor ecx,ecx
mov eax,edi
cmp dword ptr [eax],6C
je 004E3A86
inc ecx
add eax,08
cmp ecx,13
jnge 004E3A50

0044AC89:
mov ebx,[ebp+18] //4AC89
mov ecx,[ebp-04] //4AC8C
mov esi,[006747B0]
mov eax,00000002
sub eax,edi
mov edi,00040000
add ebx,eax
xor edx,edx
mov [ebp+18],ebx
mov eax,[ecx] //4ACA8
cmp eax,-01
je 0044ACC4
lea ebx,[eax*8+00000000]
sub ebx,eax
lea eax,[eax+ebx*4]
test [esi+eax*4+10],edi
jne 0044ACCF
mov ebx,[ebp+18]
inc edx //4ACC4
add ecx,04
cmp edx,07
jnge 0044ACA8
jmp 0044ACD8
mov eax,[ebp+18] //4ACCF
dec eax
mov [ebp+18],eax
mov ebx,eax
mov edx,[ebp-04] //4ACD8
xor eax,eax
mov ecx,edx
cmp dword ptr [ecx],0C //4ACDF
je 0044AD01
inc eax
add ecx,04
cmp eax,07
jnge 0044ACDF
xor eax,eax
mov ecx,edx
cmp dword ptr [ecx],0D //4ACF1
je 0044AD01
inc eax
add ecx,04
cmp eax,07
jnge 0044ACF1
jmp 0044AD02
inc ebx //4AD01
mov ecx,[ebp+14] //4AD02
test ecx,ecx
je 0044AD2E
xor eax,eax
mov edx,ecx
cmp dword ptr [edx],44
je 0044AD2D
inc eax
add edx,04
cmp eax,07
jnge 0044AD0D
xor eax,eax
cmp dword ptr [ecx],45 //4AD1D
je 0044AD2D
inc eax
add ecx,04
cmp eax,07
jnge 0044AD1D
jmp 0044AD2E
dec ebx //4AD2D
mov ecx,[ebp+0C] //4AD2E

0044B9E9:
mov edi,[ebp+18] //4B9E9
mov ecx,[ebp-10]
xor edx,edx
mov esi,00040000
mov eax,[ecx]
cmp eax,-01
je 0044BA15
lea ebx,[eax*8+00000000]
sub ebx,eax
lea eax,[eax+ebx*4]
mov ebx,[006747B0]
test [ebx+eax*4+10],esi
jne 0044BA20
inc edx
add ecx,04
cmp edx,07
jnge 0044B9F6
jmp 0044BA3F

004BA3F:
mov edx,[ebp-10] //4BA3F
xor ecx,ecx
mov eax,edx
cmp dword ptr [eax],0C
je 0044BA68
inc ecx
add eax,04
cmp ecx,07
jnge 0044BA46
xor eax,eax
mov ecx,edx
cmp dword ptr [ecx],0D
je 0044BA68
inc eax
add ecx,04
cmp eax,07
jnge 0044BA58
jmp 0044BAD1
mov eax,0000000C
xor ecx,ecx
cmp dword ptr [edx],0D
je 0044BA7F
inc ecx
add edx,04
cmp ecx,07
jnge 0044BA6F
jmp 0044BA84
mov eax,0000000D

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>390</ID>
      <Description>"High Attack &amp; Defense"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(next1)
label(next2)
label(next3)
label(next4)
label(next5)
label(next6)
label(next7)
label(next8)
label(next9)
label(nextA)
label(nextB)
label(nextC)
label(getdefense)
label(step1)
label(step2)
label(step3)
label(step4)
label(step5)
label(step6)
label(start)
label(final)
define(ccolor,[0069CCF4])
define(ycolor,[006977DC])
label(exit)
label(step0)

newmem:
push ebp
mov ebp,esp
push ecx
mov al,[ebp+0C]
push ebx
push esi
mov esi,ecx
mov ecx,ccolor
cmp ycolor,ecx
setne cl
mov edx,[esi+000000F4]
cmp cl,dl
jne exit
mov ebx,[esi+000000C8]
shl ebx,03
mov [ebp-04],ebx
mov eax,[esi+00000248]
test eax,eax
je next3
mov eax,[esi+00000468]
jmp next2
exit:
test al,al
mov ebx,[esi+000000C8]
mov [ebp-04],ebx
je next1
mov eax,[esi+00000248]
test eax,eax
je next3
mov eax,[esi+00000468]
jmp next2
next1://4215a
mov eax,[esi+00000244]
test eax,eax
je next3
mov eax,[esi+00000464]
next2://4216A
add ebx,eax
mov [ebp-04],ebx
next3://4216f
mov eax,[esi+00000274]
push edi
test eax,eax
je nextB
mov eax,[ebp+08]
test eax,eax
je nextB
mov eax,[eax+00000084]
mov ecx,eax
shr ecx,07
test cl,01
je next4
mov ecx,[esi+0000048C]
test ecx,ecx
jnl next6
next4://421a3
mov edx,eax
shr edx,08
test dl,01
je next5
cmp dword ptr [esi+0000048C],02
jnl next6
next5://421b6
shr eax,09
test al,01
je nextB
cmp dword ptr [esi+0000048C],03
jnge nextB
next6://421c6
mov edx,[esi+00000288]
mov ecx,[esi+000000F4]
add ebx,08
test edx,edx
mov [ebp-04],ebx
je next7
mov eax,00000001
sub eax,ecx
jmp next8
next7://421e5
mov eax,ecx
next8://421e7
mov edi,[00699420]
cmp dword ptr [edi+eax*4+000053CC],00
je nextB
test edx,edx
je next9
mov eax,00000001
sub eax,ecx
jmp nextA
next9://42204
mov eax,ecx
nextA://42206
mov ecx,[esi+78]
mov eax,[edi+eax*4+000053CC]
push 08
push ecx
push 37
mov ecx,eax
call 004E6260
add ebx,eax
mov [ebp-04],ebx
nextB://42221
mov eax,[esi+00000278]
pop edi
test eax,eax
je nextC
mov edx,[ebp+08]
push 00
push edx
mov ecx,esi
call getdefense
mov [ebp+0C],eax
fild dword ptr [ebp+0C]
fstp dword ptr [ebp+0C]
fld dword ptr [ebp+0C]
fmul dword ptr [esi+00000498]
fild dword ptr [ebp-04]
fstp dword ptr [ebp+0C]
fadd dword ptr [ebp+0C]
call 00617F94
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0008
nextC://42261
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0008
nop
nop
nop
nop
nop
getdefense:
push ebp
mov ebp,esp
mov al,[ebp+0C]
push edi
test al,al
mov edi,ecx
je start
mov eax,[edi+00000278]
test eax,eax
je start
xor eax,eax
pop edi
pop ebp
ret 0008
start://422ce
mov ecx,ccolor
cmp ycolor,ecx
setne cl
mov eax,[edi+000000F4]
cmp cl,al
jne step0
xor eax,eax
push ebx
mov ebx,[edi+000000CC]
push esi
shl ebx,03
mov [ebp+0C],ebx
jmp final
step0:
mov eax,[ebp+08]
push ebx
mov ebx,[edi+000000CC]
push esi
test eax,eax
mov [ebp+0C],ebx
je step3
mov eax,[eax+34]
cmp eax,60
jne step1
fild dword ptr [ebp+0C]
fstp dword ptr [ebp+0C]
fld dword ptr [ebp+0C]
fmul dword ptr [0063B8B0]
jmp step2
step1://422f9
cmp eax,61
jne step3
fild dword ptr [ebp+0C]
fstp dword ptr [ebp+0C]
fld dword ptr [ebp+0C]
fmul dword ptr [0063B8AC]
step2://4230d
fsubr dword ptr [ebp+0C]
call 00617F94
mov ebx,eax
step3://42317
mov ecx,[00699420]
mov al,[ecx+000053A8]
test al,al
je final
test byte ptr [edi+00000084],01
je step4
mov esi,[edi+44]
mov eax,[edi+38]
neg esi
sbb esi,esi
and esi,02
dec esi
add esi,eax
jmp step5
step4://42342
or esi,-01
step5://42345
mov eax,[edi+38]
push 00
push eax
call 004699A0
test al,al
jne step6
mov ecx,[00699420]
push 00
push esi
call 004699A0
test al,al
je final
step6://42366
sub ebx,03
final://42369
mov eax,ebx
pop esi
pop ebx
pop edi
pop ebp
ret 0008
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

004430BC:
call newmem

004430C8:
call getdefense

004438D1:
call newmem

004438DD:
call getdefense

[DISABLE]
dealloc(newmem)
004430BC:
call 00442130

004430C8:
call 004422B0

004438D1:
call 00442130

004438DD:
call 004422B0

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>389</ID>
      <Description>"Movement Increase"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
label(next0)
label(next1)
label(next2)
label(next3)
label(next4)

004E4ED1:
xor eax,eax
movsx edx,byte ptr [ebx+22]
cmp [006977DC],edx
sete al
test al,al
mov edx,[ecx*4+00698AE8]
lea ecx,[eax+eax*2]
mov [ebp+08],edx
mov edx,[ecx*4+0063EA68]
mov [ebp-04],edx
jle next0
movsx edx,word ptr [ebx+55]
mov [ebp-08],edx
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
next0:
fld dword ptr [ebp-04]
fadd dword ptr [0063B6E0]
fild dword ptr [ebp+08]
fstp dword ptr [ebp+08]
fmul dword ptr [ebp+08]
call 00617F94
mov edi,eax
lea esi,[ebx+0000012D]
mov [ebp+08],edi
movsx ecx,byte ptr [ebx+22]
cmp [006977DC],ecx
jne next1
add edi,[00698B50]
add edi,[00698B4C]
mov [ebp+08],edi
jmp next4
next1:
mov eax,[00660B68]
mov eax,[eax+00000C58]
cmp eax,-01
je next2
mov edx,[00660B6C]
lea ecx,[eax+eax*2]
mov eax,[edx+ecx*8]
mov ecx,ebx
push eax
call 004D9460
test al,al
je +9
add edi,[00698B50]
mov [ebp+08],edi
next2:
mov ecx,[00660B68]
mov eax,[ecx+000008D8]
cmp eax,-01
je next4
lea edx,[eax+eax*2]
mov eax,[00660B6C]
mov ecx,[eax+edx*8]
push ecx
mov ecx,ebx
call 004D9460
test al,al
je +9
next3:
add edi,[00698B4C]
mov [ebp+08],edi
next4:
test byte ptr [ebx+00000105],02
je 004E4DC8
mov edx,[00698AE4]
mov eax,[ebp+08]
add eax,edx
mov [ebp+08],eax
jmp 004E4DC8

[DISABLE]
004E4ED1:
mov al,[ebx+000000CB]
test al,al
mov edx,[ecx*4+00698AE8]
movsx ecx,al
mov [ebp+08],edx
mov edx,[ecx*4+0063EA68]
mov [ebp-04],edx
jle 004E4F2E
mov eax,[ebx+1A]
mov ecx,[00679C80]
lea eax,[eax+eax*4]
lea eax,[ecx+eax*8]
cmp dword ptr [eax],00
jne 004E4F2E
cmp dword ptr [eax+04],02
jne 004E4F2E
movsx edx,word ptr [ebx+55]
mov [ebp-08],edx
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
fld dword ptr [ebp-04]
fadd dword ptr [0063B6E0]
fild dword ptr [ebp+08]
fstp dword ptr [ebp+08]
fmul dword ptr [ebp+08]
call 00617F94
mov edi,eax
lea esi,[ebx+0000012D]
mov [ebp+08],edi
xor eax,eax
mov ecx,esi
cmp dword ptr [ecx],62
je 004E4F8A
inc eax
add ecx,08
cmp eax,13
jnge 004E4F54
mov eax,[00660B68]
mov eax,[eax+00000C58]
cmp eax,-01
je 004E4F93
mov edx,[00660B6C]
lea ecx,[eax+eax*2]
mov eax,[edx+ecx*8]
mov ecx,ebx
push eax
call 004D9460
test al,al
je 004E4F93
add edi,[00698B50]
mov [ebp+08],edi
xor eax,eax
mov ecx,esi
cmp dword ptr [ecx],46
je 004E4FCD
inc eax
add ecx,08
cmp eax,13
jnge 004E4F97
mov ecx,[00660B68]
mov eax,[ecx+000008D8]
cmp eax,-01
je 004E4FD6
lea edx,[eax+eax*2]
mov eax,[00660B6C]
mov ecx,[eax+edx*8]
push ecx
mov ecx,ebx
call 004D9460
test al,al
je 004E4FD6
add edi,[00698B4C]
mov [ebp+08],edi
test byte ptr [ebx+00000105],02
je 004E4DC8
mov edx,[00698AE4]
mov eax,[ebp+08]
add eax,edx
mov [ebp+08],eax
jmp 004E4DC8
nop
nop
nop
nop
nop
nop
nop
nop

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>203</ID>
      <Description>"Skip Quest Items"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(returnhere)
label(exit)

newmem:
movsx eax,byte ptr [ebx+22]
cmp [006977DC],eax
jne exit
jmp 0056F99F
exit:
mov eax,[esi+44]
test eax,eax
je 0056F99F
jmp returnhere

0056F97A:
jmp newmem
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
0056F97A:
mov eax,[esi+44]
test eax,eax
je 0056F99F

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>391</ID>
      <Description>"Double Attack Without Retaliations"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
define(ccolor,[0069CCF4])
define(ycolor,[006977DC])
alloc(newmem,512)
label(returnhere)
label(newmem1)
label(returnhere1)
label(newmem2)
label(returnhere2)
label(newmem3)
label(returnhere3)

newmem:
mov eax,ccolor
cmp ycolor,eax
setne al
mov ecx,[esi+000000F4]
cmp cl,al
je 00441C01
mov eax,[esi+00000454]
dec eax
mov [esi+00000454],eax
jmp returnhere
newmem1:
mov ecx,[esi+4C]
test ecx,ecx
jng 00441B85
mov edx,ccolor
cmp ycolor,edx
setne dl
mov ecx,[esi+000000F4]
cmp cl,dl
jne 00441B85
mov ecx,[esi+00000084]
shl edx,01
or ecx,edx
mov [esi+00000084],ecx
jmp returnhere1
newmem2:
mov eax,ccolor
cmp ycolor,eax
setne al
mov ecx,[esi+000000F4]
cmp cl,al
je returnhere2
mov eax,[esi+00000084]
shr eax,0F
jmp 0043FF9A
newmem3:
mov eax,ccolor
cmp ycolor,eax
setne al
mov ecx,[edi+000000F4]
cmp cl,al
je returnhere3
mov eax,[edi+00000084]
mov ecx,eax
shr ecx,0F
jmp 00441C01

0043FF7E:
jmp newmem2
nop
shr eax,0F
test al,01
je 0043FF9A
returnhere2:

00441B93:
jmp newmem3
nop
mov ecx,eax
shr ecx,0F
test cl,01
je 00441C01
returnhere3:

00441AF4:
jmp newmem1
nop
nop
nop
nop
nop
nop
mov edx,[edi+00000084]
shr edx,10
test dl,01
jne 00441B85
returnhere1:

00441B78:
jmp newmem
nop
dec eax
mov [esi+00000454],eax
returnhere:

[DISABLE]
dealloc(newmem)
00441AF4:
mov ecx,[esi+4C]
test ecx,ecx
jng 00441B85
mov edx,[edi+00000084]
shr edx,10
test dl,01
jne 00441B85
mov ecx,[esi+000002B0]
test ecx,ecx
jne 00441B85
mov ecx,[esi+00000454]
test ecx,ecx
jle 00441B85
test al,al
jne 00441B85

00441B78:
mov eax,[esi+00000454]
dec eax
mov [esi+00000454],eax
mov byte ptr [esi+000004C0],00
mov byte ptr [esi+000004C1],00
mov eax,[edi+00000084]
mov ecx,eax
shr ecx,0F
test cl,01
je 00441C01

0043FF7E:
mov eax,[esi+00000084]
shr eax,0F
test al,01
je 0043FF9A

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>392</ID>
      <Description>"Vampiric Ability"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(returnhere)
label(exit)
define(ccolor,[0069CCF4])
define(ycolor,[006977DC])

newmem:
mov ecx,ccolor
cmp ycolor,ecx
setne al
mov ecx,[esi+000000F4]
cmp cl,al
je exit
mov eax,[esi+34]
add eax,-3F
cmp eax,48
ja 004412AB
xor ecx,ecx
mov cl,[eax+004412D8]
jmp dword ptr [ecx*4+004412C0]
exit:
mov edx,[ebp+08]
mov eax,[edx+00000084]
jmp returnhere

00440903:
jmp newmem
nop
cmp eax,48
ja 004412AB
xor ecx,ecx
mov cl,[eax+004412D8]
jmp dword ptr [ecx*4+004412C0]
mov edx,[ebp+08]
mov eax,[edx+00000084]
shr eax,04
test al,01
je 004412AB
returnhere:

[DISABLE]
dealloc(newmem)
00440903:
mov eax,[esi+34]
add eax,-3F
cmp eax,48
ja 004412AB
xor ecx,ecx
mov cl,[eax+004412D8]
jmp dword ptr [ecx*4+004412C0]
mov edx,[ebp+08]
mov eax,[edx+00000084]
shr eax,04
test al,01
je 004412AB

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>262</ID>
      <Description>"Archery Bonus"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(finish)
label(next0)
label(next1)
label(next2)
label(next3)
label(next4)

newmem:
push ebp
mov ebp,esp
sub esp,08
push edi
mov edi,ecx
xor eax,eax
movsx ecx,byte ptr [edi+22]
cmp [006977DC],ecx
sete al
lea ecx,[eax+eax*2]
test al,al
mov edx,[ecx*4+0063E9E8]
mov [ebp-04],edx
jng finish
movsx edx,word ptr [edi+55]
mov [ebp-08],edx
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
push esi
lea esi,[edi+0000012D]
movsx ecx,byte ptr [edi+22]
cmp [006977DC],ecx
je next0
mov eax,[00660B68]
mov eax,[eax+00000798]
cmp eax,-01
je next1
mov edx,[00660B6C]
lea ecx,[eax+eax*2]
mov eax,[edx+ecx*8]
mov ecx,edi
push eax
call 004D9460
test al,al
je next1
next0:
fld dword ptr [ebp-04]
fadd dword ptr [0063EAE4]
fstp dword ptr [ebp-04]
next1:
movsx ecx,byte ptr [edi+22]
cmp [006977DC],ecx
je next2
mov ecx,[00660B68]
mov eax,[ecx+000007B8]
cmp eax,-01
je next3
lea edx,[eax+eax*2]
mov eax,[00660B6C]
mov ecx,[eax+edx*8]
push ecx
mov ecx,edi
call 004D9460
test al,al
je next3
next2:
fld dword ptr [ebp-04]
fadd dword ptr [0063B8D0]
fstp dword ptr [ebp-04]
next3:
pop esi
movsx ecx,byte ptr [edi+22]
cmp [006977DC],ecx
je next4
mov edx,[00660B68]
mov eax,[edx+000007D8]
cmp eax,-01
je finish
mov ecx,[00660B6C]
lea eax,[eax+eax*2]
mov edx,[ecx+eax*8]
mov ecx,edi
push edx
call 004D9460
test al,al
je finish
next4:
fld dword ptr [ebp-04]
fadd dword ptr [0063EB28]
fstp dword ptr [ebp-04]
finish:
fld dword ptr [ebp-04] //E450B
pop edi
mov esp,ebp
pop ebp
ret

0042426D:
call newmem
00443449:
call newmem

[DISABLE]
dealloc(newmem)
0042426D:
call 004E43D0
00443449:
call 004E43D0

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>261</ID>
      <Description>"First Aid Bonus"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,512)
label(exit)

newmem:
push ebp
mov ebp,esp
sub esp,08
xor eax,eax
movsx edx,byte ptr [ecx+22]
cmp [006977DC],edx
sete al
lea edx,[eax+eax*2]
test al,al
mov edx,[edx*4+0063EA98]
mov [ebp-04],edx
jle exit
movsx eax,word ptr [ecx+55]
mov [ebp-08],eax
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
exit:
fld dword ptr [ebp-04]
fadd dword ptr [0063B6E0]
mov esp,ebp
pop ebp
ret

00433839:
Call newmem

[DISABLE]
dealloc(newmem)
00433839:
call 004E4B90

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>260</ID>
      <Description>"Resistance Bonus"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(next0)
label(next1)
label(next2)
label(next3)
label(next4)
label(next5)
label(next6)
label(next7)

newmem:
push ebp
mov ebp,esp
sub esp,08
push edi
mov edi,ecx
xor eax,eax
movsx ecx,byte ptr [edi+22]
cmp [006977DC],ecx
sete al
lea ecx,[eax+eax*2]
test al,al
mov edx,[ecx*4+0063EA48]
mov [ebp-04],edx
jle next0
movsx edx,word ptr [edi+55]
mov [ebp-08],edx
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
next0:
push esi
lea esi,[edi+0000012D]
xor ecx,ecx
movsx eax,byte ptr [edi+22]
cmp [006977DC],eax
je next1
mov eax,[00660B68]
mov eax,[eax+00000738]
cmp eax,-01
je next2
mov edx,[00660B6C]
lea ecx,[eax+eax*2]
mov eax,[edx+ecx*8]
mov ecx,edi
push eax
call 004D9460
test al,al
je next2
next1:
fld dword ptr [ebp-04]
fadd dword ptr [0063EAE4]
fstp dword ptr [ebp-04]
next2:
xor eax,eax
mov ecx,esi
movsx eax,byte ptr [edi+22]
cmp [006977DC],eax
je next3
mov ecx,[00660B68]
mov eax,[ecx+00000758]
cmp eax,-01
je next4
lea edx,[eax+eax*2]
mov eax,[00660B6C]
mov ecx,[eax+edx*8]
push ecx
mov ecx,edi
call 004D9460
test al,al
je next4
next3:
fld dword ptr [ebp-04]
fadd dword ptr [0063B8D0]
fstp dword ptr [ebp-04]
next4:
mov ecx,esi
xor eax,eax
pop esi
movsx eax,byte ptr [edi+22]
cmp [006977DC],eax
je next5
mov edx,[00660B68]
mov eax,[edx+00000778]
cmp eax,-01
je next6
mov ecx,[00660B6C]
lea eax,[eax+eax*2]
mov edx,[ecx+eax*8]
mov ecx,edi
push edx
call 004D9460
test al,al
je next6
next5:
fld dword ptr [ebp-04]
fadd dword ptr [0063EB28]
fstp dword ptr [ebp-04]
next6:
fld dword ptr [ebp-04]
fcomp dword ptr [0063B6E0]
pop edi
fnstsw ax
test ah,41
jne next7
mov [ebp-04],3F800000
next7:
fld dword ptr [0063B6E0]
fsub dword ptr [ebp-04]
mov esp,ebp
pop ebp
ret

0044A4CF:
call newmem

[DISABLE]
dealloc(newmem)
0044A4CF:
call 004E4950

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>393</ID>
      <Description>"Sorcery Bonus"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(next0)
label(next1)
label(next2)
label(next3)
label(next4)
label(stop)
label(checkskill)

newmem:
test bl,01
je next0
lea ecx,[esi+000001C5]
movsx edx,byte ptr [esi+22]
cmp [006977DC],edx
je next1
mov eax,[00660B68]
mov eax,[eax+000009F8]
cmp eax,-01
je next0
mov edx,[00660B6C]
lea ecx,[eax+eax*2]
mov eax,[edx+ecx*8]
mov ecx,esi
push eax
call 004D9460
test al,al
jne next1
next0:
test bl,08
je next2
xor eax,eax
lea ecx,[esi+000001C5]
movsx edx,byte ptr [esi+22]
cmp [006977DC],edx
je next1
mov ecx,[00660B68]
mov eax,[ecx+00000A18]
cmp eax,-01
je next2
lea edx,[eax+eax*2]
mov eax,[00660B6C]
mov ecx,[eax+edx*8]
push ecx
mov ecx,esi
call 004D9460
test al,al
jne next1
next2:
test bl,02
je next3
xor eax,eax
lea ecx,[esi+000001C5]
movsx edx,byte ptr [esi+22]
cmp [006977DC],edx
je next1
mov edx,[00660B68]
mov eax,[edx+00000A38]
cmp eax,-01
je next3
mov ecx,[00660B6C]
lea eax,[eax+eax*2]
mov edx,[ecx+eax*8]
mov ecx,esi
push edx
call 004D9460
test al,al
jne next1
next3:
test bl,04
je checkskill
xor eax,eax
movsx edx,byte ptr [esi+22]
cmp [006977DC],edx
je next1
mov eax,[00660B68]
mov eax,[eax+00000A58]
cmp eax,-01
je checkskill
mov edx,[00660B6C]
lea ecx,[eax+eax*2]
mov eax,[edx+ecx*8]
mov ecx,esi
push eax
call 004D9460
test al,al
je checkskill
next1:
fld dword ptr [ebp+0C] //E5B12
fmul dword ptr [0063EB30]
fstp dword ptr [ebp+0C]
checkskill:
xor eax,eax
movsx ecx,byte ptr [esi+22]
cmp [006977DC],ecx
sete al
lea ecx,[eax+eax*2]
test al,al
mov edx,[ecx*4+0063EA78]
mov [ebp-04],edx
jle next4
movsx edx,word ptr [esi+55]
mov [ebp-08],edx
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
next4:
fld dword ptr [ebp-04]
fadd dword ptr [0063B6E0]
mov edi,[ebp+10]
test edi,edi
fmul dword ptr [ebp+0C]
fstp dword ptr [ebp+0C]
je stop
fld dword ptr [ebp+0C]
call 00617F94
mov ecx,[ebp+08]
push eax
mov eax,[edi+78]
push eax
push ecx
mov ecx,esi
call 004E6260
mov [ebp+08],eax
fild dword ptr [ebp+08]
fstp dword ptr [ebp+08]
fld dword ptr [ebp+08]
fadd dword ptr [ebp+0C]
fstp dword ptr [ebp+0C]
stop:
fld dword ptr [ebp+0C]
call 00617F94
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 000C

004E59F5:
jmp newmem

[DISABLE]
dealloc(newmem)
004E59F5:
test bl,01
je 004E5A40
xor eax,eax
lea ecx,[esi+0000012D]
cmp dword ptr [ecx],4F
je 004E5B12
inc eax
add ecx,08
cmp eax,13
jnge 004E5A02
mov eax,[00660B68]
mov eax,[eax+000009F8]
cmp eax,-01
je 004E5A40
mov edx,[00660B6C]
lea ecx,[eax+eax*2]
mov eax,[edx+ecx*8]
mov ecx,esi
push eax
call 004D9460
test al,al
jne 004E5B12
test bl,08
je 004E5A8B
xor eax,eax
lea ecx,[esi+0000012D]
cmp dword ptr [ecx],50
je 004E5B12
inc eax
add ecx,08
cmp eax,13
jnge 004E5A4D
mov ecx,[00660B68]
mov eax,[ecx+00000A18]
cmp eax,-01
je 004E5A8B
lea edx,[eax+eax*2]
mov eax,[00660B6C]
mov ecx,[eax+edx*8]
push ecx
mov ecx,esi
call 004D9460
test al,al
jne 004E5B12
test bl,02
je 004E5ACF
xor eax,eax
lea ecx,[esi+0000012D]
cmp dword ptr [ecx],51
je 004E5B12
inc eax
add ecx,08
cmp eax,13
jnge 004E5A98
mov edx,[00660B68]
mov eax,[edx+00000A38]
cmp eax,-01
je 004E5ACF
mov ecx,[00660B6C]
lea eax,[eax+eax*2]
mov edx,[ecx+eax*8]
mov ecx,esi
push edx
call 004D9460
test al,al
jne 004E5B12
test bl,04
je 004E5B1E
xor eax,eax
lea ecx,[esi+0000012D]
cmp dword ptr [ecx],52
je 004E5B12
inc eax
add ecx,08
cmp eax,13
jnge 004E5ADC
mov eax,[00660B68]
mov eax,[eax+00000A58]
cmp eax,-01
je 004E5B1E
mov edx,[00660B6C]
lea ecx,[eax+eax*2]
mov eax,[edx+ecx*8]
mov ecx,esi
push eax
call 004D9460
test al,al
je 004E5B1E
fld dword ptr [ebp+0C]
fmul dword ptr [0063EB30]
fstp dword ptr [ebp+0C]
mov al,[esi+000000E2]
movsx ecx,al
test al,al
mov edx,[ecx*4+0063EA78]
mov [ebp-04],edx
jle 004E5B71
mov eax,[esi+1A]
mov ecx,[00679C80]
lea eax,[eax+eax*4]
lea eax,[ecx+eax*8]
cmp dword ptr [eax],00
jne 004E5B71
cmp dword ptr [eax+04],19
jne 004E5B71
movsx edx,word ptr [esi+55]
mov [ebp-08],edx
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
fld dword ptr [ebp-04]
fadd dword ptr [0063B6E0]
mov edi,[ebp+10]
test edi,edi
fmul dword ptr [ebp+0C]
fstp dword ptr [ebp+0C]
je 004E5BB1
fld dword ptr [ebp+0C]
call 00617F94
mov ecx,[ebp+08]
push eax
mov eax,[edi+78]
push eax
push ecx
mov ecx,esi
call 004E6260
mov [ebp+08],eax
fild dword ptr [ebp+08]
fstp dword ptr [ebp+08]
fld dword ptr [ebp+08]
fadd dword ptr [ebp+0C]
fstp dword ptr [ebp+0C]
fld dword ptr [ebp+0C]
call 00617F94
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 000C

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>394</ID>
      <Description>"Offense &amp; Defense Bonus"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(exit)
label(defense)
label(next)
label(finish)

newmem:
push ebp
mov ebp,esp
sub esp,08
xor eax,eax
movsx edx,byte ptr [ecx+22]
cmp [006977DC],edx
sete al
lea edx,[eax+eax*2]
test al,al
mov edx,[edx*4+0063E9F8]
mov [ebp-04],edx
jle exit
movsx eax,word ptr [ecx+55]
mov [ebp-08],eax
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
exit:
fld dword ptr [ebp-04]
mov esp,ebp
pop ebp
ret
nop
nop
nop
nop
nop
defense:
push ebp
mov ebp,esp
sub esp,08
xor eax,eax
movsx edx,byte ptr [ecx+22]
cmp [006977DC],edx
sete al
lea edx,[eax+eax*2]
test al,al
mov edx,[edx*4+0063EA08]
mov [ebp-04],edx
jle next
movsx eax,word ptr [ecx+55]
mov [ebp-08],eax
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
next:
fld dword ptr [ebp-04]
fcomp dword ptr [0063B6E0]
fnstsw ax
test ah,41
jne finish
mov [ebp-04],3F800000
finish:
fld dword ptr [0063B6E0]
fsub dword ptr [ebp-04]
mov esp,ebp
pop ebp
ret
nop
nop
nop
nop
nop

00442859:
call defense
00443B38:
call defense
00443C24:
call defense
00443D82:
call defense

00443462:
call newmem

[DISABLE]
dealloc(newmem)
00443462:
call 004E4520

00442859:
call 004E4580
00443B38:
call 004E4580
00443C24:
call 004E4580
00443D82:
call 004E4580

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>395</ID>
      <Description>"Skillful Necrmancer"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(step0)
label(step1)
label(step2)
label(step3)
label(step4)
label(step5)
label(step6)
label(step7)
label(step8)
label(step9)
label(stepA)
label(stepB)
label(preview)
label(exit)
label(return)

newmem:
push ebp
mov ebp,esp
sub esp,08
push ebx
push esi
push edi
mov edi,ecx
mov al,[edi+000000D5]
movsx ecx,al
test al,al
mov edx,[ecx*4+0063E9B8]
mov [ebp-04],edx
jng stepA
movsx edx,word ptr [edi+55]
mov [ebp-08],edx
fild dword ptr [ebp-08]
fstp dword ptr [ebp-08]
fld dword ptr [ebp-08]
fmul dword ptr [0063EAE4]
fadd dword ptr [0063B6E0]
fmul dword ptr [ebp-04]
fstp dword ptr [ebp-04]
lea esi,[edi+0000012D]
movsx eax,byte ptr [edi+22]
cmp [006977DC],eax
je step0
mov eax,[00660B68]
mov eax,[eax+000006D8]
cmp eax,-01
je step1
mov edx,[00660B6C]
lea ecx,[eax+eax*2]
mov eax,[edx+ecx*8]
mov ecx,edi
push eax
call 004D9460
test al,al
je step1
step0:
fld dword ptr [ebp-04]
fadd dword ptr [0063EAE4]
fstp dword ptr [ebp-04]
step1:
movsx eax,byte ptr [edi+22]
cmp [006977DC],eax
je step2
mov ecx,[00660B68]
mov eax,[ecx+000006F8]
cmp eax,-01
je step3
lea edx,[eax+eax*2]
mov eax,[00660B6C]
mov ecx,[eax+edx*8]
push ecx
mov ecx,edi
call 004D9460
test al,al
je step3
step2:
fld dword ptr [ebp-04]
fadd dword ptr [0063B8D0]
fstp dword ptr [ebp-04]
step3:
movsx eax,byte ptr [edi+22]
cmp [006977DC],eax
je step4
mov edx,[00660B68]
mov eax,[edx+00000718]
cmp eax,-01
je step5
mov ecx,[00660B6C]
lea eax,[eax+eax*2]
mov edx,[ecx+eax*8]
mov ecx,edi
push edx
call 004D9460
test al,al
je step5
step4:
fld dword ptr [ebp-04]
fadd dword ptr [0063EB28]
fstp dword ptr [ebp-04]
step5:
mov al,[edi+22]
test al,al
jl exit
movsx eax,al
mov ecx,[00699538]
xor edi,edi
lea eax,[eax+eax*4]
lea eax,[eax+eax*8]
lea ebx,[ecx+eax*8+00020AD0]
movsx eax,byte ptr [ecx+eax*8+00020B0E]
test eax,eax
mov [ebp-08],eax
jng exit
preview:
movsx eax,byte ptr [ebx+edi+40]
cmp eax,-01
jne step6
xor eax,eax
jmp step7
step6:
lea eax,[eax+eax*4]
lea edx,[eax+eax*8]
mov eax,[00699538]
mov ecx,[eax+00021614]
lea eax,[ecx+edx*8]
step7:
cmp byte ptr [eax+04],04
jne step9
mov ecx,[eax+00000158]
mov edx,[eax+0000015C]
mov esi,[0066CE40]
mov eax,ecx
and eax,esi
mov esi,edx
and esi,[0066CE44]
or eax,esi
je step8
fld dword ptr [ebp-04]
fadd dword ptr [0063B8D0]
fstp dword ptr [ebp-04]
step8:
mov eax,[0066CE68]
mov esi,[0066CE6C]
and ecx,eax
and edx,esi
or ecx,edx
je step9
fld dword ptr [ebp-04]
fadd dword ptr [0063B8B4]
fstp dword ptr [ebp-04]
step9:
mov eax,[ebp-08]
inc edi
cmp edi,eax
jnge preview
jmp exit
movsx eax,byte ptr [edi+22]
cmp [006977DC],eax
je stepB
stepA:
mov edx,[00660B68]
mov eax,[edx+00001058]
cmp eax,-01
je exit
mov ecx,[00660B6C]
lea eax,[eax+eax*2]
mov edx,[ecx+eax*8]
mov ecx,edi
push edx
call 004D9460
test al,al
je exit
stepB:
fld dword ptr [ebp-04]
fadd dword ptr [0063EB24]
fstp dword ptr [ebp-04]
exit:
mov al,[ebp+08]
pop edi
pop esi
pop ebx
test al,al
je return
fld dword ptr [ebp-04]
fcomp dword ptr [0063B6E0]
fnstsw ax
test ah,41
jne return
mov [ebp-04],3F800000
return:
fld dword ptr [ebp-04]
mov esp,ebp
pop ebp
ret 0004

00426DFE:
call newmem
00432661:
call newmem
004333BA:
call newmem
0043348A:
call newmem
00476ED1:
call newmem

[DISABLE]
dealloc(newmem)
00476ED1:
call 004E3F40
00426DFE:
call 004E3F40
00432661:
call 004E3F40
004333BA:
call 004E3F40
0043348A:
call 004E3F40

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>415</ID>
      <Description>"Resurrection"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(exit0)
label(exit1)
label(step0)
label(step1)
label(step2)
label(back0)
label(next0)
label(next1)
label(next2)
label(next3)
label(prev0)
label(return0)
label(newmem1)

newmem:
push ebp
mov ebp,esp
push ecx
mov eax,[ebp+0C]
push ebx
mov ebx,ecx
push esi
test eax,eax
push edi
mov [ebp-04],ebx
jl exit1
cmp eax,000000BB
jnl exit1
lea ecx,[eax*8+00000000]
sub ecx,eax
shl ecx,04
lea esi,[ecx+ebx]
mov [ebp+0C],esi
add esi,000001C4
mov al,[esi+18]
test al,al
jnge next0
mov ecx,esi
call 004E7230
mov esi,eax
mov eax,[ebp+08]
cmp [esi+000000F4],eax
jne exit1
mov edx,[esi+00000084]
shr edx,04
test dl,01
nop
nop
mov ecx,[esi+4C]
mov edx,[esi+60]
cmp ecx,edx
jnl exit1
mov edx,[ebp+10]
mov ecx,ebx
push edx
push 01
push 00
push esi
push eax
push 26
call 005A83A0
fcomp qword ptr [0063AC38]
fnstsw ax
test ah,41
jne exit1
mov eax,esi
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 000C
next0:
test byte ptr [esi+10],02
jne exit1
mov edi,[esi+1C]
dec edi
js exit1
prev0:
movsx edx,byte ptr [esi+edi+20] //1A408C
movsx eax,byte ptr [esi+edi+2E]
lea ecx,[edx*8+00000000]
sub ecx,edx
lea ecx,[ecx+ecx*2]
add eax,ecx
lea ecx,[eax*8+00000000]
sub ecx,eax
lea ecx,[ecx+ecx*2]
lea eax,[eax+ecx*8]
mov ecx,[ebp+08]
cmp edx,ecx
lea ebx,[ebx+eax*8+000054CC]
jne next3
mov edx,[ebx+00000084]
shr edx,04
test dl,01
nop
nop
mov al,[edi+esi+3C]
mov edx,[ebp+0C]
test al,al
jne next1
cmp byte ptr [edx+0000024C],00
jnl next3
test byte ptr [edx+00000244],02
jne next3
next1:
cmp al,01
jne next2
mov al,[edx+0000016C]
test al,al
jnl next3
test byte ptr [edx+00000164],02
jne next3
next2:
mov eax,[ebp+10]
push eax
push 01
push 00
push ebx
push ecx
mov ecx,[ebp-04]
push 26
call 005A83A0
fcomp qword ptr [0063AC38]
fnstsw ax
test ah,41
je exit0
next3:
dec edi
js exit1
mov ebx,[ebp-04]
jmp prev0
exit0:
pop edi
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 000C
exit1:
pop edi
pop esi
xor eax,eax
pop ebx
mov esp,ebp
pop ebp
ret 000C
nop
nop
nop
nop
nop
newmem1:
push ebp
mov ebp,esp
push ecx
mov eax,[ebp+0C]
push ebx
push esi
push edi
test eax,eax
mov [ebp-04],ecx
jl return0
cmp eax,000000BB
jnl return0
lea edx,[eax*8+00000000]
sub edx,eax
shl edx,04
mov al,[edx+ecx+000001D4]
lea edi,[edx+ecx]
test al,02
jne return0
mov al,[edi+000001DC]
test al,al
jnl return0
mov ebx,[edi+000001E0]
dec ebx
js return0
back0:
movsx esi,byte ptr [edi+ebx+000001E4]
mov eax,[ebp+08]
movsx ecx,byte ptr [edi+ebx+000001F2]
cmp esi,eax
jne step1
lea eax,[esi*8+00000000]
sub eax,esi
lea edx,[ecx+eax*2]
add eax,edx
lea edx,[eax*8+00000000]
sub edx,eax
lea edx,[edx+edx*2]
lea eax,[eax+edx*8]
mov edx,[ebp-04]
mov eax,[edx+eax*8+00005550]
shr eax,04
//test al,01
//je step1
mov al,[ebx+edi+00000200]
test al,al
jne step0
mov dl,[edi+0000024C]
test dl,dl
jnl step1
test byte ptr [edi+00000244],02
jne step1
step0:
cmp al,01
jne step2
mov al,[edi+0000016C]
test al,al
jnl step1
test byte ptr [edi+00000164],02
je step2
step1:
dec ebx
jns back0
return0:
pop edi
pop esi
xor eax,eax
pop ebx
mov esp,ebp
pop ebp
ret 0008
step2:
lea eax,[esi*8+00000000]
pop edi
sub eax,esi
pop esi
pop ebx
lea ecx,[ecx+eax*2]
add eax,ecx
mov ecx,[ebp-04]
lea edx,[eax*8+00000000]
sub edx,eax
lea edx,[edx+edx*2]
lea eax,[eax+edx*8]
lea eax,[ecx+eax*8+000054CC]
mov esp,ebp
pop ebp
ret 0008
nop
nop
nop

00447165:
call newmem1
00421285:
call newmem1
004212AC:
call newmem1
004474DF:
call newmem1
00448332:
call newmem1
00492AFE:
call newmem1
00447179:
call newmem
005A3CBF:
call newmem
005A1C38:
call newmem

[DISABLE]
dealloc(newmem)
00447165:
call 005A4150
00447179:
call 005A3FD0
005A3CBF:
call 005A3FD0
00421285:
call 005A4150
004212AC:
call 005A4150
004474DF:
call 005A4150
00448332:
call 005A4150
00492AFE:
call 005A4150
005A1C38:
call 005A3FD0

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>416</ID>
      <Description>"Immune to fireshield"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(next0)
label(next1)
label(next2)
define(ccolor,[0069CCF4])
define(ycolor,[006977DC])

newmem:
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov esi,[ebp+10]
mov [ebp-04],ecx
mov eax,[esi+0000020C]
test eax,eax
jne next0
cmp dword ptr [esi+34],35
je next0
pop esi
xor eax,eax
pop ebx
mov esp,ebp
pop ebp
ret 0010
next0:
mov ebx,[ebp+0C] //225E6
mov eax,ccolor
cmp ycolor,eax
setne al
mov ecx,[ebx+000000F4]
cmp cl,al
jne next1
pop esi
xor eax,eax
pop ebx
mov esp,ebp
pop ebp
ret 0010
next1:
mov eax,[ebp+14] //22600
mov ecx,[ebp+08]
push edi
cmp eax,ecx
mov [ebp+10],eax
mov [ebp+14],ecx
lea edi,[ebp+10]
jnge next2
lea edi,[ebp+14]
next2:
mov ecx,esi //22617
call 00442E50
fild dword ptr [edi]
fstp dword ptr [ebp+10]
fmul dword ptr [ebp+10]
call 00617F94
mov ecx,ebx
mov edi,eax
call 004423B0
mov ecx,esi
mov ebx,eax
call 004423B0
mov ecx,[ebp+0C]
push 00
push ecx
mov ecx,[ebp-04]
push ebx
push eax
push 1D
push edi
call 005A7BF0
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0010

00443CDB:
call newmem

[DISABLE]
dealloc(newmem)
00443CDB:
call 004225C0

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>147</ID>
      <Description>"Selected Hero"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>165</ID>
          <Description>"Specialty Type"</Description>
          <LastState Value="4" Activated="0" RealAddress="00679898"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00679C80</Address>
          <Offsets>
            <Offset>1478</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>166</ID>
          <Description>"Required Creature A"</Description>
          <LastState Value="115" Activated="0" RealAddress="0067989C"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00679C80</Address>
          <Offsets>
            <Offset>147C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"Required Creature B"</Description>
          <LastState Value="0" Activated="0" RealAddress="006798AC"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00679C80</Address>
          <Offsets>
            <Offset>148C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>168</ID>
          <Description>"Upgraded Creature"</Description>
          <LastState Value="0" Activated="0" RealAddress="006798B0"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00679C80</Address>
          <Offsets>
            <Offset>1490</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>169</ID>
          <Description>"Hero Color"</Description>
          <LastState Value="0" Activated="0" RealAddress="02076D40"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46CF8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>148</ID>
          <Description>"Hero Class"</Description>
          <LastState Value="16" Activated="0" RealAddress="02076D4E"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46D06</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>149</ID>
          <Description>"Experience"</Description>
          <LastState Value="40" Activated="0" RealAddress="02076D6F"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46D27</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>150</ID>
          <Description>"Hero Level"</Description>
          <LastState Value="1" Activated="0" RealAddress="02076D73"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46D2B</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>151</ID>
          <Description>"Backpack 0"</Description>
          <LastState Value="4294967295" Activated="0" RealAddress="02076EF2"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46EAA</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>18</Key>
                <Key>54</Key>
              </Keys>
              <Value>72</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>152</ID>
          <Description>"Backpack 1"</Description>
          <LastState Value="4294967295" Activated="0" RealAddress="02076EFA"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46EB2</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>18</Key>
                <Key>54</Key>
              </Keys>
              <Value>129</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>153</ID>
          <Description>"Backpack 2"</Description>
          <LastState Value="4294967295" Activated="0" RealAddress="02076F02"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46EBA</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>18</Key>
                <Key>54</Key>
              </Keys>
              <Value>131</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>154</ID>
          <Description>"Backpack 3"</Description>
          <LastState Value="4294967295" Activated="0" RealAddress="02076F0A"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46EC2</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>155</ID>
          <Description>"Backpack 4"</Description>
          <LastState Value="4294967295" Activated="0" RealAddress="02076F12"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46ECA</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>156</ID>
          <Description>"Backpack 5"</Description>
          <LastState Value="4294967295" Activated="0" RealAddress="02076F1A"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46ED2</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>157</ID>
          <Description>"Backpack 6"</Description>
          <LastState Value="4294967295" Activated="0" RealAddress="02076F22"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46EDA</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>158</ID>
          <Description>"Backpack 7"</Description>
          <LastState Value="4294967295" Activated="0" RealAddress="02076F2A"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>46EE2</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>159</ID>
          <Description>"Hero's Attack"</Description>
          <LastState Value="3" Activated="0" RealAddress="02077194"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>4714C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>160</ID>
          <Description>"Hero's Defense"</Description>
          <LastState Value="1" Activated="0" RealAddress="02077195"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>4714D</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>161</ID>
          <Description>"Hero's Power"</Description>
          <LastState Value="1" Activated="0" RealAddress="02077196"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>4714E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>162</ID>
          <Description>"Hero's Knowledge"</Description>
          <LastState Value="1" Activated="0" RealAddress="02077197"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>00699538</Address>
          <Offsets>
            <Offset>4714F</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>396</ID>
      <Description>"Current Combat Unit"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>397</ID>
          <Description>"Current Name"</Description>
          <LastState Activated="0" RealAddress="01E93210"/>
          <Color>80000008</Color>
          <VariableType>String</VariableType>
          <Length>30</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>00699420</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>88</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>398</ID>
          <Description>"Current Type"</Description>
          <LastState Value="64" Activated="0" RealAddress="020847B0"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>34</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"Current Quantity"</Description>
          <LastState Value="41" Activated="0" RealAddress="020847C8"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>4C</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>170</ID>
          <Description>"Wounded"</Description>
          <LastState Value="0" Activated="0" RealAddress="020847D4"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>58</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>399</ID>
          <Description>"Original Slot"</Description>
          <LastState Value="2" Activated="0" RealAddress="020847D8"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>5C</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>400</ID>
          <Description>"Original Quantity"</Description>
          <LastState Value="41" Activated="0" RealAddress="020847DC"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>60</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>174</ID>
          <Description>"Full HP"</Description>
          <LastState Value="34" Activated="0" RealAddress="020847E8"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>6C</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>401</ID>
          <Description>"Unit Abilities"</Description>
          <LastState Value="04160404" Activated="0" RealAddress="02084800"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>84</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>402</ID>
          <Description>"Unit HP"</Description>
          <LastState Value="34" Activated="0" RealAddress="0208483C"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>C0</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>403</ID>
          <Description>"Current Speed"</Description>
          <LastState Value="13" Activated="0" RealAddress="02084840"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>C4</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>404</ID>
          <Description>"Current Attack"</Description>
          <LastState Value="19" Activated="0" RealAddress="02084844"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>C8</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>405</ID>
          <Description>"Current Defense"</Description>
          <LastState Value="16" Activated="0" RealAddress="02084848"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>CC</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>406</ID>
          <Description>"Min Damage"</Description>
          <LastState Value="11" Activated="0" RealAddress="0208484C"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>D0</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>407</ID>
          <Description>"Max Damage"</Description>
          <LastState Value="13" Activated="0" RealAddress="02084850"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>D4</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>408</ID>
          <Description>"Shots"</Description>
          <LastState Value="12" Activated="0" RealAddress="02084854"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>D8</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>409</ID>
          <Description>"Spell points"</Description>
          <LastState Value="0" Activated="0" RealAddress="02084858"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>DC</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>410</ID>
          <Description>"Defender's Side"</Description>
          <LastState Value="0" Activated="0" RealAddress="02084870"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>F4</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>411</ID>
          <Description>"Retaliations"</Description>
          <LastState Value="1" Activated="0" RealAddress="02084BD0"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>00699420</Address>
          <Offsets>
            <Offset>454</Offset>
            <Offset>132C8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>413</ID>
      <Description>"Archangel"</Description>
      <LastState Value="00000113" Activated="0" RealAddress="006709AC"/>
      <ShowAsHex>1</ShowAsHex>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006747b0</Address>
      <Offsets>
        <Offset>5F4</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>412</ID>
      <Description>"Firebirth"</Description>
      <LastState Value="0000409B" Activated="0" RealAddress="00673EB0"/>
      <ShowAsHex>1</ShowAsHex>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006747b0</Address>
      <Offsets>
        <Offset>3AF8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>414</ID>
      <Description>"Phoenix"</Description>
      <LastState Value="0000409B" Activated="0" RealAddress="00673F24"/>
      <ShowAsHex>1</ShowAsHex>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>006747b0</Address>
      <Offsets>
        <Offset>3B6C</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>246</ID>
      <Description>"Damage Increase"</Description>
      <LastState Value="0,05" Activated="0" RealAddress="0063AC58"/>
      <Color>80000008</Color>
      <VariableType>Double</VariableType>
      <Address>0063ac58</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>247</ID>
      <Description>"Max Damage Increase"</Description>
      <LastState Value="3" Activated="0" RealAddress="0063AC28"/>
      <Color>80000008</Color>
      <VariableType>Double</VariableType>
      <Address>0063ac28</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>250</ID>
      <Description>"Unknown"</Description>
      <LastState Value="0" Activated="0" RealAddress="02083CD4"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>00699420</Address>
      <Offsets>
        <Offset>54B4</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>249</ID>
      <Description>"Unknown"</Description>
      <LastState Value="0" Activated="0" RealAddress="02092594"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>00699420</Address>
      <Offsets>
        <Offset>13D74</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>256</ID>
      <Description>"Attacker Color"</Description>
      <LastState Value="0" Activated="0" RealAddress="02067F98"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699420</Address>
      <Offsets>
        <Offset>22</Offset>
        <Offset>53CC</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>257</ID>
      <Description>"Defender Color"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000022"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00699420</Address>
      <Offsets>
        <Offset>22</Offset>
        <Offset>53D0</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pointer</Name>
      <Address>06390000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>function getheroinfo()
addresslist=getAddressList()
EAX="00679C80"
EBX="00699538"
ECX=readInteger("[0069CCFC]+4")
if ECX~=nil and ECX&gt;0 and ECX~=oldhero then
oldhero=ECX
Address=ECX*0x28
mr=addresslist_getMemoryRecordByDescription(addresslist, "Specialty Type")
memoryrecord_setAddress(mr,EAX,Address)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Required Creature A")
memoryrecord_setAddress(mr,EAX,Address+0x04)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Required Creature B")
memoryrecord_setAddress(mr,EAX,Address+0x14)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Upgraded Creature")
memoryrecord_setAddress(mr,EAX,Address+0x18)
Address=ECX*0x492+0x21620
mr=addresslist_getMemoryRecordByDescription(addresslist, "Hero Color")
memoryrecord_setAddress(mr,EBX,Address+0x22)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Hero Class")
memoryrecord_setAddress(mr,EBX,Address+0x30)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Experience")
memoryrecord_setAddress(mr,EBX,Address+0x51)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Hero Level")
memoryrecord_setAddress(mr,EBX,Address+0x55)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Backpack 0")
memoryrecord_setAddress(mr,EBX,Address+0x1D4)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Backpack 1")
memoryrecord_setAddress(mr,EBX,Address+0x1DC)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Backpack 2")
memoryrecord_setAddress(mr,EBX,Address+0x1E4)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Backpack 3")
memoryrecord_setAddress(mr,EBX,Address+0x1EC)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Backpack 4")
memoryrecord_setAddress(mr,EBX,Address+0x1F4)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Backpack 5")
memoryrecord_setAddress(mr,EBX,Address+0x1FC)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Backpack 6")
memoryrecord_setAddress(mr,EBX,Address+0x204)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Backpack 7")
memoryrecord_setAddress(mr,EBX,Address+0x20C)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Hero's Attack")
memoryrecord_setAddress(mr,EBX,Address+0x476)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Hero's Defense")
memoryrecord_setAddress(mr,EBX,Address+0x477)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Hero's Power")
memoryrecord_setAddress(mr,EBX,Address+0x478)
mr=addresslist_getMemoryRecordByDescription(addresslist, "Hero's Knowledge")
memoryrecord_setAddress(mr,EBX,Address+0x479)
end
end
formInfo = nil
oldhero=0
function OnFormExit(sender)
form_hide(formInfo)
timer_setEnabled(timerGUIAbout, false)
end
function timerGUIAboutLabel()
if deltaAboutY &lt; 1 then
formInfoWidth, formInfoHeight = control_getSize(formInfo)
deltaAboutY = formInfoHeight - 40
else
deltaAboutY = deltaAboutY - 1
end
control_setPosition(AboutLbl, 40, deltaAboutY)
getheroinfo()
end
function ShowFormInfo()
formInfo = createForm(true)
control_setCaption(formInfo, "Hero Information")
form_onClose(formInfo, OnFormExit)
formInfoWidth, formInfoHeight = control_getSize(formInfo)
aboutPanel = createPanel(formInfo)
control_setPosition(aboutPanel, 10, 10)
control_setSize(aboutPanel, formInfoWidth - 20, formInfoHeight - 40)
AboutLbl = createLabel(aboutPanel)
deltaAboutY = formInfoHeight - 40
control_setPosition(AboutLbl, 40, formInfoHeight - 40)
control_setCaption(AboutLbl, "Keep this form to update information")
btnAboutExit = createButton(formInfo)
control_setCaption(btnAboutExit,"Exit")
btnAboutExitWidth, btnAboutExitHeight = control_getSize(btnAboutExit)
control_setPosition(btnAboutExit, formInfoWidth - 3 - btnAboutExitWidth, formInfoHeight - 3 - btnAboutExitHeight)
control_onClick(btnAboutExit, OnFormExit)
form_centerScreen(formInfo)
if timerGUIAbout == nil then
timerGUIAbout = createTimer(formInfo,false)
timer_setInterval(timerGUIAbout,100)
timer_onTimer(timerGUIAbout, timerGUIAboutLabel)
end
timer_setEnabled(timerGUIAbout, true)
end
ShowFormInfo()

</LuaScript>
</CheatTable>
