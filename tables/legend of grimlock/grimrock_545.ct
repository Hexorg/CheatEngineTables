<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>40</ID>
      <Description>"(1.3.1) Inf. HP &amp; En &amp; Charges, Instant Cool Down, Hold Alt when attack to refill Food bar"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(AOB1,8B 6C C2 04 8B 04 C2 89 69 04 89 01 8B 06 0F B6 CC)
label(AOB1_jmp)
registersymbol(AOB1_jmp)
label(MyDoubleValue)

label(pEnergy)
label(storeEAX)
label(tEAX)
label(tECX)

registersymbol(pEnergy)
registersymbol(storeEAX)
registersymbol(tEAX)
registersymbol(tECX)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(check1)
label(check2)
label(isHPorEnergyorCharge)
label(coolDownTime)
label(coolDownTimeEnd)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [storeEAX],eax
cmp eax,0
jne check1
mov eax,edi
sub eax,esi
cmp eax,20
je isHPorEnergyorCharge
cmp eax,140
je isHPorEnergyorCharge

check1:
mov eax,edi
sub eax,esi

/*cmp eax,18
je short check2
cmp eax,ac
je short check2
cmp eax,264
je short check2
cmp eax,3e8
je short check2
cmp eax,184
je short check2
cmp eax,140
je short check2
cmp eax,13c
je short check2
cmp eax,3f8
je short check2*/
cmp eax,130
je short check2
cmp eax,158
je short check2
cmp eax,184
je short check2
cmp eax,190
je short check2
cmp eax,274
je short check2
cmp eax,404
je short check2
cmp eax,418
je short check2


jmp originalcode

check2:
cmp dword ptr [ecx+8],0          // valid pointer ?
je originalcode

//structure check
mov eax,[ecx+8]
mov [tEAX],eax
cmp [eax+10],'cool'
jne short originalcode
cmp [eax+14],'Down'
jne short originalcode
cmp [eax+18],'Time'
jne short originalcode
jmp coolDownTime

coolDownTime:
mov [tECX],ecx
mov eax,[MyDoubleValue+4]
mov [ecx+4],eax

mov eax,[MyDoubleValue]
mov [ecx],eax

pushad
push 12      //key Alt
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne coolDownTimeEnd
mov [ecx+34],408F4000
mov [ecx+30],00000000

coolDownTimeEnd:
mov ebp,[ecx+04]
mov eax,[ecx]
mov [storeEAX],eax
jmp originalcode

isHPorEnergyorCharge:
mov [pEnergy],ecx
cmp [ecx+04],ebp
jle originalcode
mov ebp,[ecx+04]
jmp originalcode

originalcode:
mov eax,[storeEAX]
mov [ecx+04],ebp
mov [ecx],eax
jmp exit

exit:
jmp returnhere

MyDoubleValue:
dq (double)0
pEnergy:
dd 0
storeEAX:
dd 0
tEAX:
dd 0
tECX:
dd 0

AOB1+7:                              //"lua51.dll"+39A8F:
AOB1_jmp:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
AOB1_jmp:                            //"lua51.dll"+39A8F:
db 89 69 04 89 01
//Alt: mov [ecx+04],ebp
//Alt: mov [ecx],eax
unregistersymbol(pEnergy)
unregistersymbol(storeEAX)
unregistersymbol(tEAX)
unregistersymbol(tECX)
unregistersymbol(AOB1_jmp)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Skill Pts"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>tECX</Address>
          <Offsets>
            <Offset>78</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Food bar"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>tECX</Address>
          <Offsets>
            <Offset>30</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"debug value"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>41</ID>
              <Description>"debug"</Description>
              <Color>80000008</Color>
              <VariableType>Double</VariableType>
              <Address>pEnergy</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>42</ID>
              <Description>"debug 2"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>String</VariableType>
              <Length>10</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>tEAX</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>55</ID>
              <Description>"tECX+80"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>tECX</Address>
              <Offsets>
                <Offset>80</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>43</ID>
              <Description>"Cool Down Timer"</Description>
              <Color>80000008</Color>
              <VariableType>Double</VariableType>
              <Address>tECX</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>79</ID>
      <Description>"(1.1.4) Inf. HP &amp; En &amp; Charges, Instant Cool Down, Hold Alt when attack to refill Food bar"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(AOB1,8B 6C C2 04 8B 04 C2 89 69 04 89 01 8B 06 0F B6 CC)
label(AOB1_jmp)
registersymbol(AOB1_jmp)
label(MyDoubleValue)

globalalloc(pEnergy,4)
globalalloc(storeEAX,4)
globalalloc(tEAX,4)
globalalloc(tECX,4)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(check1)
label(check2)
label(isHPorEnergyorCharge)
label(coolDownTime)
label(coolDownTimeEnd)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [storeEAX],eax
cmp eax,0
jne check1
mov eax,edi
sub eax,esi
cmp eax,20
je isHPorEnergyorCharge
cmp eax,128
je isHPorEnergyorCharge

check1:
mov eax,edi
sub eax,esi

cmp eax,18
je short check2
cmp eax,ac
je short check2
cmp eax,264
je short check2
cmp eax,3e8
je short check2
cmp eax,184
je short check2
cmp eax,140
je short check2
cmp eax,13c
je short check2
cmp eax,3f8
je short check2

jmp originalcode

check2:
cmp dword ptr [ecx+8],0          // valid pointer ?
je originalcode

//structure check
mov eax,[ecx+8]
mov [tEAX],eax
cmp [eax+10],'cool'
jne short originalcode
cmp [eax+14],'Down'
jne short originalcode
cmp [eax+18],'Time'
jne short originalcode
jmp coolDownTime

coolDownTime:
mov [tECX],ecx
mov eax,[MyDoubleValue+4]
mov [ecx+4],eax

mov eax,[MyDoubleValue]
mov [ecx],eax

pushad
push 12      //key Alt
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne coolDownTimeEnd
mov [ecx+34],408F4000
mov [ecx+30],00000000

coolDownTimeEnd:
mov ebp,[ecx+04]
mov eax,[ecx]
mov [storeEAX],eax
jmp originalcode

isHPorEnergyorCharge:
mov [pEnergy],ecx
cmp [ecx+04],ebp
jle originalcode
mov ebp,[ecx+04]
jmp originalcode

originalcode:
mov eax,[storeEAX]
mov [ecx+04],ebp
mov [ecx],eax
jmp exit

exit:
jmp returnhere

MyDoubleValue:
dq (double)0

AOB1+7:                              //"lua51.dll"+39A8F:
AOB1_jmp:
jmp newmem
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
AOB1_jmp:                            //"lua51.dll"+39A8F:
db 89 69 04 89 01
//Alt: mov [ecx+04],ebp
//Alt: mov [ecx],eax
dealloc(pEnergy)
dealloc(storeEAX)
dealloc(tEAX)
dealloc(tECX)
unregistersymbol(AOB1_jmp)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>80</ID>
          <Description>"Skill Pts"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>tECX</Address>
          <Offsets>
            <Offset>78</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>81</ID>
          <Description>"Food bar"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>tECX</Address>
          <Offsets>
            <Offset>30</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"debug value"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>83</ID>
              <Description>"debug"</Description>
              <Color>80000008</Color>
              <VariableType>Double</VariableType>
              <Address>pEnergy</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>84</ID>
              <Description>"debug 2"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>String</VariableType>
              <Length>10</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>tEAX</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>85</ID>
              <Description>"tECX+80"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>tECX</Address>
              <Offsets>
                <Offset>80</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>86</ID>
              <Description>"Cool Down Timer"</Description>
              <Color>80000008</Color>
              <VariableType>Double</VariableType>
              <Address>tECX</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
