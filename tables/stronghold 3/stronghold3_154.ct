<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"pointerscan result"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>"vision100.dll"+00148C28</Address>
      <Offsets>
        <Offset>50</Offset>
        <Offset>38</Offset>
        <Offset>10</Offset>
        <Offset>10</Offset>
        <Offset>B0</Offset>
        <Offset>10</Offset>
        <Offset>50</Offset>
        <Offset>24</Offset>
        <Offset>4C</Offset>
        <Offset>2F4</Offset>
        <Offset>10</Offset>
        <Offset>40</Offset>
        <Offset>1C8</Offset>
        <Offset>148</Offset>
        <Offset>48</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Auto Assemble script"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
label(popandoriginalcode)

popandoriginalcode:
popfd
pop ebx
jmp originalcode

push ebx
pushfd
mov ebx,"Vision100.dll"+00148C28 //what a huge pointer ...
mov ebx,[ebx]
add ebx,48
mov ebx,[ebx]
add ebx,148
mov ebx,[ebx]
add ebx,1C8
mov ebx,[ebx]
add ebx,40
mov ebx,[ebx]
add ebx,10
mov ebx,[ebx]
add ebx,2F4
mov ebx,[ebx]
add ebx,4C
mov ebx,[ebx]
add ebx,24
mov ebx,[ebx]
add ebx,50
mov ebx,[ebx]
add ebx,10
mov ebx,[ebx]
add ebx,B0
mov ebx,[ebx]
add ebx,10
mov ebx,[ebx]
add ebx,10
mov ebx,[ebx]
add ebx,38
mov ebx,[ebx]
add ebx,50
cmp [ebx],0
je popandoriginalcode
cmp eax,ebx
jne popandoriginalcode
mov [ebx],3e7 //your code here //gives you 999999 (dec) money
popfd
pop ebx
jmp exit //place your code here

originalcode:
//mov [eax],edx
//mov edx,[ecx+04]

exit:
jmp returnhere

"lua100.dll"+1907B:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"lua100.dll"+1907B:
mov [eax],edx
mov edx,[ecx+04]
//Alt: db 89 10 8B 51 04
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov [eax],edx</Description>
      <Address>613A907B</Address>
      <ModuleName>lua100.dll</ModuleName>
      <ModuleNameOffset>1907B</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>14</Byte>
        <Byte>8B</Byte>
        <Byte>11</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>51</Byte>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>50</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
