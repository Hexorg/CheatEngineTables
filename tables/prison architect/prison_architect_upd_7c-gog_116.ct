<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Money Aob"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(moneyaob,Prison Architect.exe,76 07 C7 XX XX XX XX XX XX 8B XX XX XX 00 00 8D XX XX F3 xx xx xx xx xx 00 00 E8 XX XX XX XX 8B XX C7 XX XX XX XX XX XX 8D XX XX E8 XX XX XX XX C6 XX XX XX 8B XX XX 83 XX XX 72 0D 40) //
alloc(money,$1000,moneyaob)
//
label(moneyindi)
//
registersymbol(moneyindi)
registersymbol(money)
registersymbol(moneyaob)
//
money:
  mov [eax+30C],(float)7777777
  cvttss2si edx,[eax+0000030C]
  mov [moneyindi],eax
  jmp moneyaob+1A
//

//
moneyindi:
 dq 0
//

//
moneyaob+12:
  jmp money
  nop
  nop
  nop
//


[DISABLE]
moneyaob+12:
  db F3 0F 2C 90 0C 03 00 00

unregistersymbol(moneyindi)
unregistersymbol(moneya)
unregistersymbol(moneyaob)
dealloc(money)

{
//AOB   +12 HEX // RETURN   +1A
//76 07 C7 XX XX XX XX XX XX 8B XX XX XX 00 00 8D XX XX F3 xx xx xx xx xx 00 00 E8 XX XX XX XX 8B XX C7 XX XX XX XX XX XX 8D XX XX E8 XX XX XX XX C6 XX XX XX 8B XX XX 83 XX XX 72 0D 40
//76 07 C7 45 0C FF 00 00 FF 8B 81 10 01 00 00 8D 4D D4 F3 0F 2C 90 0C 03 00 00 E8 01 F8 0A 00 8B D0 C7 45 FC 00 00 00 00 8D 4D BC E8 A0 0B F2 FF C6 45 FC 02 8B 45 E8 83 F8 10 72 0D 40
// ORIGINAL CODE - INJECTION POINT: "Prison Architect.exe"+1817B2

"Prison Architect.exe"+181780: F3 0F 11 4D F0           -  movss [ebp-10],xmm1
"Prison Architect.exe"+181785: F3 0F 5C C1              -  subss xmm0,xmm1
"Prison Architect.exe"+181789: F3 0F 59 05 48 A6 89 00  -  mulss xmm0,["Prison Architect.exe"+49A648]
"Prison Architect.exe"+181791: F3 0F 11 45 08           -  movss [ebp+08],xmm0
"Prison Architect.exe"+181796: 0F 57 C0                 -  xorps xmm0,xmm0
"Prison Architect.exe"+181799: 0F 2F 80 0C 03 00 00     -  comiss xmm0,[eax+0000030C]
//AOB
"Prison Architect.exe"+1817A0: 76 07                    -  jna "Prison Architect.exe"+1817A9
"Prison Architect.exe"+1817A2: C7 45 0C FF 00 00 FF     -  mov [ebp+0C],FF0000FF
"Prison Architect.exe"+1817A9: 8B 81 10 01 00 00        -  mov eax,[ecx+00000110]
"Prison Architect.exe"+1817AF: 8D 4D D4                 -  lea ecx,[ebp-2C]
// ---------- INJECTING HERE ----------
"Prison Architect.exe"+1817B2: F3 0F 2C 90 0C 03 00 00  -  cvttss2si edx,[eax+0000030C]
// ---------- DONE INJECTING  ----------
"Prison Architect.exe"+1817BA: E8 01 F8 0A 00           -  call "Prison Architect.exe"+230FC0
"Prison Architect.exe"+1817BF: 8B D0                    -  mov edx,eax
"Prison Architect.exe"+1817C1: C7 45 FC 00 00 00 00     -  mov [ebp-04],00000000
"Prison Architect.exe"+1817C8: 8D 4D BC                 -  lea ecx,[ebp-44]
"Prison Architect.exe"+1817CB: E8 A0 0B F2 FF           -  call "Prison Architect.exe"+A2370
"Prison Architect.exe"+1817D0: C6 45 FC 02              -  mov byte ptr [ebp-04],02
"Prison Architect.exe"+1817D4: 8B 45 E8                 -  mov eax,[ebp-18]
"Prison Architect.exe"+1817D7: 83 F8 10                 -  cmp eax,10
"Prison Architect.exe"+1817DA: 72 0D                    -  jb "Prison Architect.exe"+1817E9
"Prison Architect.exe"+1817DC: 40                       -  inc eax
//AOB
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>45</ID>
          <Description>"money inject"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>money</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"moneyaob+12"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Array of byte</VariableType>
          <ByteLength>16</ByteLength>
          <Address>moneyaob+12</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"moneyindi+30C"</Description>
          <Color>FF0000</Color>
          <VariableType>Float</VariableType>
          <Address>moneyindi</Address>
          <Offsets>
            <Offset>30C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>59</ID>
      <Description>"Staff Energy Aob"</Description>
      <LastState/>
      <Color>0000D7</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Author : Emmote

  This script gives staff infinite energy meaning they don't have to rest.

  Float between 0 and 100. Saving (and immediately pausing) and reading the save file
  in notepad is very easy way to find a staff members energy levels. Keep unpausing,
  saving, repausing and checking save file to narrow down.
}

[ENABLE]
aobscanmodule(staffenergyaob,Prison Architect.exe,0F 84 14 02 00 00 F3 XX XX XX XX XX XX XX 0F xx xx xx xx 00 00 0F 82 EE 00 00 00 83) //
alloc(staffenergy,$1000,staffenergyaob)
//
label(staffenergyindi)
//
registersymbol(staffenergyindi)
registersymbol(staffenergy)
registersymbol(staffenergyaob)
//
staffenergy:
  mov [edx+18C],(float)100
  comiss xmm0,[edx+0000018C]
  mov [staffenergyindi],edx
  jmp staffenergyaob+15
//

//
staffenergyindi:
 dq 0
//

//
staffenergyaob+E:
  jmp staffenergy
  nop
  nop
//


[DISABLE]
staffenergyaob+E:
  db 0F 2F 82 8C 01 00 00

unregistersymbol(staffenergyindi)
unregistersymbol(staffenergy)
unregistersymbol(staffenergyaob)
dealloc(staffenergy)

{
//AOB   +E  // RETURN  +15 HEX
//0F 84 14 02 00 00 F3 XX XX XX XX XX XX XX 0F xx xx xx xx 00 00 0F 82 EE 00 00 00 83
//0F 84 14 02 00 00 F3 0F 10 05 84 AB 89 00 0F 2F 82 8C 01 00 00 0F 82 EE 00 00 00 83
// ORIGINAL CODE - INJECTION POINT: "Prison Architect.exe"+1AD9CB

"Prison Architect.exe"+1AD99C: 81 E1 FF FF FB FF        -  and ecx,FFFBFFFF
"Prison Architect.exe"+1AD9A2: 89 4D EC                 -  mov [ebp-14],ecx
"Prison Architect.exe"+1AD9A5: 89 4D E4                 -  mov [ebp-1C],ecx
"Prison Architect.exe"+1AD9A8: 8D 8D 28 FF FF FF        -  lea ecx,[ebp-000000D8]
"Prison Architect.exe"+1AD9AE: E8 DD B8 EA FF           -  call "Prison Architect.exe"+59290
"Prison Architect.exe"+1AD9B3: 8B 75 EC                 -  mov esi,[ebp-14]
"Prison Architect.exe"+1AD9B6: 8B 53 0C                 -  mov edx,[ebx+0C]
"Prison Architect.exe"+1AD9B9: 83 7A 18 38              -  cmp dword ptr [edx+18],38
"Prison Architect.exe"+1AD9BD: 0F 84 14 02 00 00        -  je "Prison Architect.exe"+1ADBD7
"Prison Architect.exe"+1AD9C3: F3 0F 10 05 84 AB 89 00  -  movss xmm0,["Prison Architect.exe"+49AB84]
// ---------- INJECTING HERE ----------
"Prison Architect.exe"+1AD9CB: 0F 2F 82 8C 01 00 00     -  comiss xmm0,[edx+0000018C]
// ---------- DONE INJECTING  ----------
"Prison Architect.exe"+1AD9D2: 0F 82 EE 00 00 00        -  jb "Prison Architect.exe"+1ADAC6
"Prison Architect.exe"+1AD9D8: 83 3D A8 7C 8E 00 00     -  cmp dword ptr ["Prison Architect.exe"+4E7CA8],00
"Prison Architect.exe"+1AD9DF: 74 4A                    -  je "Prison Architect.exe"+1ADA2B
"Prison Architect.exe"+1AD9E1: 68 44 CA 88 00           -  push "Prison Architect.exe"+48CA44
"Prison Architect.exe"+1AD9E6: 8D 8D C8 FE FF FF        -  lea ecx,[ebp-00000138]
"Prison Architect.exe"+1AD9EC: E8 DF B8 EA FF           -  call "Prison Architect.exe"+592D0
"Prison Architect.exe"+1AD9F1: C6 45 FC 1E              -  mov byte ptr [ebp-04],1E
"Prison Architect.exe"+1AD9F5: 8D 85 C8 FE FF FF        -  lea eax,[ebp-00000138]
"Prison Architect.exe"+1AD9FB: 8B 0D A8 7C 8E 00        -  mov ecx,["Prison Architect.exe"+4E7CA8]
"Prison Architect.exe"+1ADA01: 81 CE 00 00 00 08        -  or esi,08000000
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>61</ID>
          <Description>"staffenergy"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>staffenergy</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"staffenergyaob+E"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Array of byte</VariableType>
          <ByteLength>16</ByteLength>
          <Address>staffenergyaob+E</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"staffenergyindi+18C"</Description>
          <Color>0000D7</Color>
          <VariableType>Float</VariableType>
          <Address>staffenergyindi</Address>
          <Offsets>
            <Offset>18C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>46</ID>
      <Description>"Insta Build Aob"</Description>
      <LastState/>
      <Color>800080</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
 Author : Emmote

  This script makes workers instantly complete build projects.

  The progress for each object being built is stored as a float (in seconds for how long
  it has currently taken), and the address +4 is the total time it will take (in seconds).

  Simply, this script moves the value from the total time address into current time,
  making it complete instantly.

  I usually found this value by building a pool table. It starts at 0 (no progress) to
  20 (completed). Simply build one, keep searching for increasing values while the worker
  works on it, and filter out anything above 20. Once you've gotten a reasonable list,
  check every address's +4 to see if it = 20.
}
[ENABLE]
aobscanmodule(instabaob,Prison Architect.exe,8B XX F3 XX XX XX XX F3 xx xx xx xx E8 XX XX XX XX F3 XX XX XX XX XX XX XX 0F XX XX 0F 86 2C 02 00 00 c7) //
alloc(instab,$1000,instabaob)
//
label(instabindi)
//
registersymbol(instabindi)
registersymbol(instab)
registersymbol(instabaob)
//
instab:
  movss xmm0,[edi+50]                      // load total time to build (4C+4=50)
  movss [edi+4C],xmm0                     // store as current progress
  mov [instabindi],edi
  movss xmm0,[edi+4C]
  jmp instabaob+C
//

//
instabindi:
 dq 0
//

//
instabaob+7:
  jmp instab
//


[DISABLE]
instabaob+7:
  db F3 0F 10 47 4C

unregistersymbol(instabindi)
unregistersymbol(instab)
unregistersymbol(instabaob)
dealloc(instab)

{
//AOB   +7 HEX  // RETURN  +C
//8B XX F3 XX XX XX XX F3 xx xx xx xx E8 XX XX XX XX F3 XX XX XX XX XX XX XX 0F XX XX 0F 86 2C 02 00 00 c7
//8B F9 F3 0F 11 55 EC F3 0F 10 47 4C E8 02 F1 D5 FF F3 0F 10 0D 9C A4 89 00 0F 2F C8 0F 86 2C 02 00 00 C7
// ORIGINAL CODE - INJECTION POINT: "Prison Architect.exe"+2FDFF4

"Prison Architect.exe"+2FDFD3: 6A FF                    -  push -01
"Prison Architect.exe"+2FDFD5: 68 B0 18 82 00           -  push "Prison Architect.exe"+4218B0
"Prison Architect.exe"+2FDFDA: 64 A1 00 00 00 00        -  mov eax,fs:[00000000]
"Prison Architect.exe"+2FDFE0: 50                       -  push eax
"Prison Architect.exe"+2FDFE1: 64 89 25 00 00 00 00     -  mov fs:[00000000],esp
"Prison Architect.exe"+2FDFE8: 83 EC 60                 -  sub esp,60
"Prison Architect.exe"+2FDFEB: 56                       -  push esi
"Prison Architect.exe"+2FDFEC: 57                       -  push edi
//AOB
"Prison Architect.exe"+2FDFED: 8B F9                    -  mov edi,ecx
"Prison Architect.exe"+2FDFEF: F3 0F 11 55 EC           -  movss [ebp-14],xmm2
// ---------- INJECTING HERE ----------
"Prison Architect.exe"+2FDFF4: F3 0F 10 47 4C           -  movss xmm0,[edi+4C]
// ---------- DONE INJECTING  ----------
"Prison Architect.exe"+2FDFF9: E8 02 F1 D5 FF           -  call "Prison Architect.exe"+5D100
"Prison Architect.exe"+2FDFFE: F3 0F 10 0D 9C A4 89 00  -  movss xmm1,["Prison Architect.exe"+49A49C]
"Prison Architect.exe"+2FE006: 0F 2F C8                 -  comiss xmm1,xmm0
"Prison Architect.exe"+2FE009: 0F 86 2C 02 00 00        -  jbe "Prison Architect.exe"+2FE23B
//AOB
"Prison Architect.exe"+2FE00F: C7 45 C4 0F 00 00 00     -  mov [ebp-3C],0000000F
"Prison Architect.exe"+2FE016: C7 45 C0 00 00 00 00     -  mov [ebp-40],00000000
"Prison Architect.exe"+2FE01D: C6 45 B0 00              -  mov byte ptr [ebp-50],00
"Prison Architect.exe"+2FE021: C7 45 FC 00 00 00 00     -  mov [ebp-04],00000000
"Prison Architect.exe"+2FE028: C7 45 DC 0F 00 00 00     -  mov [ebp-24],0000000F
"Prison Architect.exe"+2FE02F: C7 45 D8 00 00 00 00     -  mov [ebp-28],00000000
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>49</ID>
          <Description>"instab inject"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>instab</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"instabaob+7"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Array of byte</VariableType>
          <ByteLength>16</ByteLength>
          <Address>instabaob+7</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Project time (instabindi+4C)"</Description>
          <VariableType>Float</VariableType>
          <Address>instabindi</Address>
          <Offsets>
            <Offset>4C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Full Time (instabindi+50)"</Description>
          <VariableType>Float</VariableType>
          <Address>instabindi</Address>
          <Offsets>
            <Offset>50</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>51</ID>
      <Description>"Insta Research Aob"</Description>
      <LastState/>
      <Color>800080</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Author : Emmote

  This script makes research instantly complete, even without someone to do the research.

  The value for a research is a float where not started is 0, completed is 1, and it
  increases linearly (i.e. 0.5... is ~50%). Pretty easy to find when you know what you're looking for.

  Besy way to get instant research to work, "find out what accesses ...etc" the value while paused and spam
  click the research you're looking for, use the one that counts only when you click the button.
}

[ENABLE]
aobscanmodule(instaraob,Prison Architect.exe,0F 84 B8 00 00 00 F3 xx xx xx xx 0F XX XX E8 XX XX XX XX F3 XX XX XX XX XX XX XX 0F XX XX 0F 86 83 00 00 00 80) //
alloc(instar,$1000,instaraob)
//
label(instarindi)
//
registersymbol(instarindi)
registersymbol(instar)
registersymbol(instaraob)
//
instar:
  mov [esi+60],(float)1
  movss xmm1,[esi+60]
  mov [instarindi],esi
  jmp instaraob+B
//

//
instarindi:
 dq 0
//

//
instaraob+6:
  jmp instar
//


[DISABLE]
instaraob+6:
  db F3 0F 10 4E 60

unregistersymbol(instarindi)
unregistersymbol(instar)
unregistersymbol(instaraob)
dealloc(instar)

{
//AOB   +6 HEX // RETURN   +B
//0F 84 B8 00 00 00 F3 xx xx xx xx 0F XX XX E8 XX XX XX XX F3 XX XX XX XX XX XX XX 0F XX XX 0F 86 83 00 00 00 80
//0F 84 B8 00 00 00 F3 0F 10 4E 60 0F 28 C1 E8 05 7B EE FF F3 0F 10 15 9C A4 89 00 0F 2F D0 0F 86 83 00 00 00 80
// ORIGINAL CODE - INJECTION POINT: "Prison Architect.exe"+1755EE

"Prison Architect.exe"+1755C6: 3B D0                    -  cmp edx,eax
"Prison Architect.exe"+1755C8: 0F 8F F2 00 00 00        -  jg "Prison Architect.exe"+1756C0
"Prison Architect.exe"+1755CE: 8B 45 CC                 -  mov eax,[ebp-34]
"Prison Architect.exe"+1755D1: 3B C8                    -  cmp ecx,eax
"Prison Architect.exe"+1755D3: 0F 8C E7 00 00 00        -  jl "Prison Architect.exe"+1756C0
"Prison Architect.exe"+1755D9: 03 45 E8                 -  add eax,[ebp-18]
"Prison Architect.exe"+1755DC: 3B C8                    -  cmp ecx,eax
"Prison Architect.exe"+1755DE: 0F 8F DC 00 00 00        -  jg "Prison Architect.exe"+1756C0
"Prison Architect.exe"+1755E4: 80 7D C1 00              -  cmp byte ptr [ebp-3F],00
//AOB
"Prison Architect.exe"+1755E8: 0F 84 B8 00 00 00        -  je "Prison Architect.exe"+1756A6
// ---------- INJECTING HERE ----------
"Prison Architect.exe"+1755EE: F3 0F 10 4E 60           -  movss xmm1,[esi+60]
// ---------- DONE INJECTING  ----------
"Prison Architect.exe"+1755F3: 0F 28 C1                 -  movaps xmm0,xmm1
"Prison Architect.exe"+1755F6: E8 05 7B EE FF           -  call "Prison Architect.exe"+5D100
"Prison Architect.exe"+1755FB: F3 0F 10 15 9C A4 89 00  -  movss xmm2,["Prison Architect.exe"+49A49C]
"Prison Architect.exe"+175603: 0F 2F D0                 -  comiss xmm2,xmm0
"Prison Architect.exe"+175606: 0F 86 83 00 00 00        -  jbe "Prison Architect.exe"+17568F
//AOB
"Prison Architect.exe"+17560C: 80 7E 5C 00              -  cmp byte ptr [esi+5C],00
"Prison Architect.exe"+175610: 0F 85 90 00 00 00        -  jne "Prison Architect.exe"+1756A6
"Prison Architect.exe"+175616: A1 E4 7C 8E 00           -  mov eax,["Prison Architect.exe"+4E7CE4]
"Prison Architect.exe"+17561B: FF 76 40                 -  push [esi+40]
"Prison Architect.exe"+17561E: 8B 88 10 01 00 00        -  mov ecx,[eax+00000110]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>52</ID>
          <Description>"instar inject"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>instar</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"instaraob+6"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Array of byte</VariableType>
          <ByteLength>16</ByteLength>
          <Address>instaraob+6</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Project time (instarindi+60)"</Description>
          <VariableType>Float</VariableType>
          <Address>instarindi</Address>
          <Offsets>
            <Offset>60</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>58</ID>
      <Description>"Max Intake Aob 100"</Description>
      <LastState/>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
 Author : Emmote

  This script sets the intake of each prisoner type available to 100.

  Probably easiest value to find. It's a 4byte and only one instruction will access
  it typically.
}

[ENABLE]
aobscanmodule(maxintakeaob,Prison Architect.exe,72 13 XX 8D XX XX XX XX XX XX FF XX XX XX XX XX E8 XX XX XX XX F3 XX XX XX XX XX XX XX 8D XX XX F3 XX XX XX XX FF xx xx F3 xx xx xx xx 68) //
alloc(maxintake,$1000,maxintakeaob)
//
label(maxintakeindi)
//
registersymbol(maxintakeindi)
registersymbol(maxintake)
registersymbol(maxintakeaob)
//
maxintake:
  push [edi+08]
  mov [edi+08],64                             // 100 (DO NOT MAKE HIGHER - WEIRD THINGS CAN HAPPEN)
  addss xmm0,[ebp-20]
  mov [maxintakeindi],ebp
  jmp maxintakeaob+2D
//

//
maxintakeindi:
 dq 0
//

//
maxintakeaob+25:
  jmp maxintake
  nop
  nop
  nop
//


[DISABLE]
maxintakeaob+25:
  db FF 77 08 F3 0F 58 45 E0

unregistersymbol(maxintakeindi)
unregistersymbol(maxintake)
unregistersymbol(maxintakeaob)
dealloc(maxintake)

{
//AOB   +25 HEX // RETURN +2D
//72 13 XX 8D XX XX XX XX XX XX FF XX XX XX XX XX E8 XX XX XX XX F3 XX XX XX XX XX XX XX 8D XX XX F3 XX XX XX XX FF xx xx F3 xx xx xx xx 68
//72 13 40 8D 8D 3C FF FF FF 50 FF B5 3C FF FF FF E8 56 24 F0 FF F3 0F 10 05 BC BA 8D 00 8D 45 BC F3 0F 59 45 08 FF 77 08 F3 0F 58 45 E0 68
// ORIGINAL CODE - INJECTION POINT: "Prison Architect.exe"+1572FA

"Prison Architect.exe"+1572D2: 83 F8 10                 -  cmp eax,10
//AOB
"Prison Architect.exe"+1572D5: 72 13                    -  jb "Prison Architect.exe"+1572EA
"Prison Architect.exe"+1572D7: 40                       -  inc eax
"Prison Architect.exe"+1572D8: 8D 8D 3C FF FF FF        -  lea ecx,[ebp-000000C4]
"Prison Architect.exe"+1572DE: 50                       -  push eax
"Prison Architect.exe"+1572DF: FF B5 3C FF FF FF        -  push [ebp-000000C4]
"Prison Architect.exe"+1572E5: E8 56 24 F0 FF           -  call "Prison Architect.exe"+59740
"Prison Architect.exe"+1572EA: F3 0F 10 05 BC BA 8D 00  -  movss xmm0,["Prison Architect.exe"+4DBABC]
"Prison Architect.exe"+1572F2: 8D 45 BC                 -  lea eax,[ebp-44]
"Prison Architect.exe"+1572F5: F3 0F 59 45 08           -  mulss xmm0,[ebp+08]
// ---------- INJECTING HERE ----------
"Prison Architect.exe"+1572FA: FF 77 08                 -  push [edi+08]
"Prison Architect.exe"+1572FD: F3 0F 58 45 E0           -  addss xmm0,[ebp-20]
// ---------- DONE INJECTING  ----------
//AOB
"Prison Architect.exe"+157302: 68 A4 96 87 00           -  push "Prison Architect.exe"+4796A4
"Prison Architect.exe"+157307: 50                       -  push eax
"Prison Architect.exe"+157308: F3 0F 11 45 E0           -  movss [ebp-20],xmm0
"Prison Architect.exe"+15730D: E8 DE 6A F4 FF           -  call "Prison Architect.exe"+9DDF0
"Prison Architect.exe"+157312: 83 C4 0C                 -  add esp,0C
"Prison Architect.exe"+157315: 8B F0                    -  mov esi,eax
"Prison Architect.exe"+157317: F3 0F 10 5D E4           -  movss xmm3,[ebp-1C]
"Prison Architect.exe"+15731C: C7 45 FC 06 00 00 00     -  mov [ebp-04],00000006
"Prison Architect.exe"+157323: 0F 28 D3                 -  movaps xmm2,xmm3
"Prison Architect.exe"+157326: F3 0F 10 05 C0 BA 8D 00  -  movss xmm0,["Prison Architect.exe"+4DBAC0]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>57</ID>
          <Description>"maxintake inject"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>maxintake</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"maxintakeaob+25"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Array of byte</VariableType>
          <ByteLength>16</ByteLength>
          <Address>maxintakeaob+25</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"maxintakeindi+8"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>maxintakeindi</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>64</ID>
      <Description>"No Needs Prisoners Aob"</Description>
      <LastState/>
      <Color>0061C1</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Author : Emmote

  This script sets all prisoner needs to 0.

  They're floats and like Staff Energy, it's easier to find these values by saving and
  using notepad or w/e.
}

[ENABLE]
aobscanmodule(noneedsaob,Prison Architect.exe,85 XX 74 4C F3 xx xx xx xx 0F XX XX 72 1D 8B) //
alloc(noneeds,$1000,noneedsaob)
//
label(noneedsindi)
//
registersymbol(noneedsindi)
registersymbol(noneeds)
registersymbol(noneedsaob)
//
noneeds:

  movss xmm1,[esi+24]
  mov [noneedsindi],esi
  jmp noneedsaob+9
//

//
noneedsindi:
 dq 0
//

//
noneedsaob+4:
  jmp noneeds
//


[DISABLE]
noneedsaob+4:
  db F3 0F 10 4E 24

unregistersymbol(noneedsindi)
unregistersymbol(noneeds)
unregistersymbol(noneedsaob)
dealloc(noneeds)

{
//AOB   +4 HEX // RETURN +9 HEX
//85 XX 74 4C F3 xx xx xx xx 0F XX XX 72 1D 8B
//85 F6 74 4C F3 0F 10 4E 24 0F 2F CB 72 1D 8B
// ORIGINAL CODE - INJECTION POINT: "Prison Architect.exe"+2D0857

"Prison Architect.exe"+2D0831: 89 4D FC                 -  mov [ebp-04],ecx
"Prison Architect.exe"+2D0834: 89 55 F8                 -  mov [ebp-08],edx
"Prison Architect.exe"+2D0837: 85 D2                    -  test edx,edx
"Prison Architect.exe"+2D0839: 7E DB                    -  jle "Prison Architect.exe"+2D0816
"Prison Architect.exe"+2D083B: 8B BE F0 02 00 00        -  mov edi,[esi+000002F0]
"Prison Architect.exe"+2D0841: F3 0F 10 1D 18 AC 89 00  -  movss xmm3,["Prison Architect.exe"+49AC18]
"Prison Architect.exe"+2D0849: F3 0F 10 25 98 A6 89 00  -  movss xmm4,["Prison Architect.exe"+49A698]
"Prison Architect.exe"+2D0851: 8B 37                    -  mov esi,[edi]
//AOB
"Prison Architect.exe"+2D0853: 85 F6                    -  test esi,esi
"Prison Architect.exe"+2D0855: 74 4C                    -  je "Prison Architect.exe"+2D08A3
// ---------- INJECTING HERE ----------
"Prison Architect.exe"+2D0857: F3 0F 10 4E 24           -  movss xmm1,[esi+24]
// ---------- DONE INJECTING  ----------
"Prison Architect.exe"+2D085C: 0F 2F CB                 -  comiss xmm1,xmm3
"Prison Architect.exe"+2D085F: 72 1D                    -  jb "Prison Architect.exe"+2D087E
//AOB
"Prison Architect.exe"+2D0861: 8B 4E 14                 -  mov ecx,[esi+14]
"Prison Architect.exe"+2D0864: E8 F7 15 FA FF           -  call "Prison Architect.exe"+271E60
"Prison Architect.exe"+2D0869: 8B 4D FC                 -  mov ecx,[ebp-04]
"Prison Architect.exe"+2D086C: 8B 55 F8                 -  mov edx,[ebp-08]
"Prison Architect.exe"+2D086F: F6 40 3C 04              -  test byte ptr [eax+3C],04
"Prison Architect.exe"+2D0873: 74 06                    -  je "Prison Architect.exe"+2D087B
"Prison Architect.exe"+2D0875: 41                       -  inc ecx
"Prison Architect.exe"+2D0876: 89 4D FC                 -  mov [ebp-04],ecx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>66</ID>
          <Description>"noneeds inject"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>noneeds</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"noneedsaob+4"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Array of byte</VariableType>
          <ByteLength>16</ByteLength>
          <Address>noneedsaob+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"noneedsindi+24"</Description>
          <Color>0061C1</Color>
          <VariableType>Float</VariableType>
          <Address>noneedsindi</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>69</ID>
      <Description>"Reputation Points"</Description>
      <LastState/>
      <Color>FF80FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Author : Emmote

  This script gives you infinite reputation points in escape mode.

  Simple 4byte value exactly as you see it.
}

[ENABLE]
aobscanmodule(repapointsaob,Prison Architect.exe,74 08 8D XX XX E8 XX XX XX XX A1 XX XX XX XX 8B XX XX 8B XX XX XX XX XX 83 XX XX XX XX XX XX 8B xx xx xx xx xx 89 XX XX 75 09 2B) //
alloc(repapoints,$1000,repapointsaob)
//
label(repapointsindi)
//
registersymbol(repapointsindi)
registersymbol(repapoints)
registersymbol(repapointsaob)
//
repapoints:
  mov [eax+14C0],64
  mov ecx,[eax+000014C0]
  mov [repapointsindi],eax
  jmp repapointsaob+25
//

//
repapointsindi:
 dq 0
//

//
repapointsaob+1F:
  jmp repapoints
  nop
//


[DISABLE]
repapointsaob+1F:
  db 8B 88 C0 14 00 00

unregistersymbol(repapointsindi)
unregistersymbol(repapoints)
unregistersymbol(repapointsaob)
dealloc(repapoints)

{
//AOB   +1F // RETURN +25 HEX
//74 08 8D XX XX E8 XX XX XX XX A1 XX XX XX XX 8B XX XX 8B XX XX XX XX XX 83 XX XX XX XX XX XX 8B xx xx xx xx xx 89 XX XX 75 09 2B
//74 08 8D 4D 8C E8 61 9F F2 FF A1 E4 7C 8E 00 8B 5D DC 8B 80 10 01 00 00 83 B8 B8 14 00 00 00 8B 88 C0 14 00 00 89 4D 08 75 09 2B
// ORIGINAL CODE - INJECTION POINT: "Prison Architect.exe"+12F344

"Prison Architect.exe"+12F316: E8 D5 ED F2 FF           -  call "Prison Architect.exe"+5E0F0
"Prison Architect.exe"+12F31B: C7 45 FC FF FF FF FF     -  mov [ebp-04],FFFFFFFF
"Prison Architect.exe"+12F322: F6 C3 01                 -  test bl,01
//AOB
"Prison Architect.exe"+12F325: 74 08                    -  je "Prison Architect.exe"+12F32F
"Prison Architect.exe"+12F327: 8D 4D 8C                 -  lea ecx,[ebp-74]
"Prison Architect.exe"+12F32A: E8 61 9F F2 FF           -  call "Prison Architect.exe"+59290
"Prison Architect.exe"+12F32F: A1 E4 7C 8E 00           -  mov eax,["Prison Architect.exe"+4E7CE4]
"Prison Architect.exe"+12F334: 8B 5D DC                 -  mov ebx,[ebp-24]
"Prison Architect.exe"+12F337: 8B 80 10 01 00 00        -  mov eax,[eax+00000110]
"Prison Architect.exe"+12F33D: 83 B8 B8 14 00 00 00     -  cmp dword ptr [eax+000014B8],00
// ---------- INJECTING HERE ----------
"Prison Architect.exe"+12F344: 8B 88 C0 14 00 00        -  mov ecx,[eax+000014C0]
// ---------- DONE INJECTING  ----------
"Prison Architect.exe"+12F34A: 89 4D 08                 -  mov [ebp+08],ecx
"Prison Architect.exe"+12F34D: 75 09                    -  jne "Prison Architect.exe"+12F358
//AOB
"Prison Architect.exe"+12F34F: 2B 8B B0 00 00 00        -  sub ecx,[ebx+000000B0]
"Prison Architect.exe"+12F355: 89 4D 08                 -  mov [ebp+08],ecx
"Prison Architect.exe"+12F358: 85 C9                    -  test ecx,ecx
"Prison Architect.exe"+12F35A: C7 45 D4 00 00 00 00     -  mov [ebp-2C],00000000
"Prison Architect.exe"+12F361: 8D 55 08                 -  lea edx,[ebp+08]
"Prison Architect.exe"+12F364: 8D 45 D4                 -  lea eax,[ebp-2C]
"Prison Architect.exe"+12F367: 0F 49 C2                 -  cmovns eax,edx
"Prison Architect.exe"+12F36A: FF 30                    -  push [eax]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>70</ID>
          <Description>"Group 2"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"repapoints inject"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>repapoints</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>72</ID>
          <Description>"repapointsaob+1F"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Array of byte</VariableType>
          <ByteLength>16</ByteLength>
          <Address>repapointsaob+1f</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"repapointsindi+14C0"</Description>
          <Color>FF80FF</Color>
          <VariableType>Float</VariableType>
          <Address>repapointsindi</Address>
          <Offsets>
            <Offset>14C0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>globals</Name>
      <Address>1CBF0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_MONEY</Name>
      <Address>007585C5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_BUILD</Name>
      <Address>006AB155</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_RESEARCH</Name>
      <Address>005F1E8A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_INTAKE</Name>
      <Address>005D09B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_ENERGY</Name>
      <Address>00676B67</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_PRISONER_NEEDS</Name>
      <Address>006C7E68</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_REP</Name>
      <Address>006376FA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gamespeed</Name>
      <Address>08570000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address>0053F464</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>repapointsindi</Name>
      <Address>00AD001B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>repapointsaob</Name>
      <Address>0052F325</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>noneedsindi</Name>
      <Address>02A70010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>noneedsaob</Name>
      <Address>006D0853</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>maxintakeindi</Name>
      <Address>02C5001A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>maxintakeaob</Name>
      <Address>005572D5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>instarindi</Name>
      <Address>04410017</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>instaraob</Name>
      <Address>005755E8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>staffenergyindi</Name>
      <Address>0443001C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>staffenergyaob</Name>
      <Address>005AD9BD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>moneyindi</Name>
      <Address>0444001D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>moneyaob</Name>
      <Address>005817A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>instabindi</Name>
      <Address>0435001A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>instabaob</Name>
      <Address>006FDFED</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
