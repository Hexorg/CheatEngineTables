<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Auto Assemble script"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem, 4096)
label(backin)
label(skipit)

newmem:
  call ROTTR.exe+34E45E0
  cmp bx, [rax]
  jl skipit
  mov [rax],bx
skipit:
  mov rcx,[rbp+000003A8]
  jmp backin

{
ROTTR.exe+357276B:
  nop
  nop
  nop
  nop
  nop
  nop
}

ROTTR.exe+35727A6:
  jmp newmem
  nop
backin:

[DISABLE]
{
ROTTR.exe+357276B:
  db 0F 84 41 02 00 00
}

ROTTR.exe+35727A6:
  call ROTTR.exe+34E45E0
  mov [rax],bx
  mov rcx,[rbp+000003A8]

dealloc(newmem)
{

ROTTR.exe+3572763 - E8 781EF7FF           - call ROTTR.exe+34E45E0
ROTTR.exe+3572768 - 66 3B 18              - cmp bx,[rax]
ROTTR.exe+357276B - 0F84 41020000         - je ROTTR.exe+35729B2
ROTTR.exe+3572771 - 48 8B 0D 905427FF     - mov rcx,[ROTTR.exe+27E7C08]
ROTTR.exe+3572778 - 48 89 7C 24 60        - mov [rsp+60],rdi

ROTTR.exe+357279F - 4C 89 FA              - mov rdx,r15
ROTTR.exe+35727A2 - 48 83 C1 28           - add rcx,28
ROTTR.exe+35727A6 - E8 351EF7FF           - call ROTTR.exe+34E45E0
ROTTR.exe+35727AB - 66 89 18              - mov [rax],bx
ROTTR.exe+35727AE - 48 8B 8D A8030000     - mov rcx,[rbp+000003A8]
ROTTR.exe+35727B5 - E8 4682BDFF           - call ROTTR.exe+314AA00
ROTTR.exe+35727BA - 66 85 DB              - test bx,bx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Script"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(injcode, 8192, "ROTTR.exe")

label(DataBlockLocation)
registersymbol(DataBlockLocation)
label(InventoryLocations)
registersymbol(InventoryLocations)

injcode:
getdatablock:
  mov [DataBlockLocation], rcx
  call UpdateInventory
  sub rsp,28
  mov edx,[rcx+00000350]
  call ROTTR.exe+388CBB0
  jmp datablockbackin

UpdateInventory:
  push rax
  push rcx
  mov rax, [DataBlockLocation]
  cmp rax, 0
  je endit
  mov rax, [rax+3A8]
  cmp rax, 0
  je endit
  mov rcx, [rax+40]
  mov rax, [rax+28]
  cmp rax, 0
  je endit
invloop:
  cmp rcx, 0
  jle endit
  cmp qword ptr [rax], 0
  je skipinvloop
  push rax
  mov rax, [rax]
  call LoopHash
  pop rax
skipinvloop:
  lea rax, [rax+8]
  dec rcx
  jmp invloop
endit:
  pop rcx
  pop rax
  ret

LoopHash:
starthashloop:
  cmp rax, 0
  je endhashloop

  cmp dword ptr [rax+8], 4D826A39
  jne next1
  mov [InventoryLocations+0], rax
next1:

  cmp dword ptr [rax+8], 5F2885E7
  jne next2
  mov [InventoryLocations+8], rax
next2:

  cmp dword ptr [rax+8], 5F28F125
  jne next3
  mov [InventoryLocations+10], rax
next3:

  cmp dword ptr [rax+8], 045EC57E
  jne next4
  mov [InventoryLocations+18], rax
next4:

  cmp dword ptr [rax+8], 6EE65E59
  jne next5
  mov [InventoryLocations+20], rax
next5:

  cmp dword ptr [rax+8], 1EC99446
  jne next6
  mov [InventoryLocations+28], rax
next6:

  cmp dword ptr [rax+8], 90F8019C
  jne next7
  mov [InventoryLocations+30], rax
next7:

  cmp dword ptr [rax+8], FA60F478
  jne next8
  mov [InventoryLocations+38], rax
next8:

  cmp dword ptr [rax+8], C50146F2
  jne next9
  mov [InventoryLocations+40], rax
next9:

  cmp dword ptr [rax+8], EF21C8DA
  jne next10
  mov [InventoryLocations+48], rax
next10:

  cmp dword ptr [rax+8], 50B025C6
  jne next11
  mov [InventoryLocations+50], rax
next11:

  cmp dword ptr [rax+8], 50F3E958
  jne next12
  mov [InventoryLocations+58], rax
next12:

  cmp dword ptr [rax+8], 104D7CDF
  jne next13
  mov [InventoryLocations+60], rax
next13:

  cmp dword ptr [rax+8], 55C9ED57
  jne next14
  mov [InventoryLocations+68], rax
next14:

  cmp dword ptr [rax+8], E42682B1
  jne next15
  mov [InventoryLocations+70], rax
next15:

  cmp dword ptr [rax+8], 0
  jne next16
  mov [InventoryLocations+78], rax
next16:

  cmp dword ptr [rax+8], 8863BA99
  jne next17
  mov [InventoryLocations+80], rax
next17:

  cmp dword ptr [rax+8], 9CDA8C92
  jne next18
  mov [InventoryLocations+88], rax
next18:

  cmp dword ptr [rax+8], B62B6E6C
  jne next19
  mov [InventoryLocations+90], rax
next19:

  cmp dword ptr [rax+8], 8CE197A7
  jne next20
  mov [InventoryLocations+98], rax
next20:

  cmp dword ptr [rax+8], A230E397
  jne next21
  mov [InventoryLocations+A0], rax
next21:

  cmp dword ptr [rax+8], 5C522579
  jne next22
  mov [InventoryLocations+A8], rax
next22:

  cmp dword ptr [rax+8], AA96C1D1
  jne next23
  mov [InventoryLocations+B0], rax
next23:

  cmp dword ptr [rax+8], 540F3C56
  jne next24
  mov [InventoryLocations+B8], rax
next24:

  cmp dword ptr [rax+8], EFB08959
  jne next25
  mov [InventoryLocations+C0], rax
next25:

  cmp dword ptr [rax+8], 3C7C95A2
  jne next26
  mov [InventoryLocations+C8], rax
next26:

// Hashes
//  Cloth           - 4D826A39
//  Herbs           - 5F2885E7
//  Hide            - 5F28F125
//  Salvage         - 045EC57E
//  Mushrooms       - 6EE65E59
//  Hardwood        - 1EC99446
//  Feathers        - 90F8019C
//  Oil             - FA60F478
//  Boar Fat        -
//  Deer Antler     - EF21C8DA
//  Exotic Hide     - 50B025C6
//  Magnesite Ore   - 50F3E958
//  Bear Hide       - 104D7CDF
//  Technical Parts - 55C9ED57
//  Byzantine Coins - E42682B1
//  Chromite Ore    -
//
// Arrows            - 8863BA99
// Poison Arrows     - 9CDA8C92
// Pistol Ammo       - B62B6E6C
// Hollow Points     - 8CE197A7
// Shotgun Shells    - A230E397
// Riffle Ammo       - 5C522579
// Grenades          - AA96C1D1
// Fire Arrows       - 540F3C56
// Dragonfire Shells - EFB08959
// Grenade Arrows    - 3C7C95A2

nexthashloop:
  mov rax, [rax]
  jmp starthashloop
endhashloop:
  ret

DataBlockLocation:
  dq 0

InventoryLocations:
  dq 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
  dq 0 0 0 0 0 0 0 0 0 0

ROTTR.exe+38958A0:
  jmp getdatablock
ROTTR.exe+38958AF:
datablockbackin:

[DISABLE]
ROTTR.exe+38958A0:
  db 48 83 EC 28           // sub rsp,28
  db 8B 91 50 03 00 00     // mov edx,[rcx+00000350]
  db E8 01 73 FF FF        // call ROTTR.exe+388CBB0
//ROTTR.exe+38958AF - 48 85 C0              - test rax,rax

unregistersymbol(InventoryLocations)
unregistersymbol(DataBlockLocation)

dealloc(injcode)

{
ROTTR.exe+38958A0 - 48 83 EC 28           - sub rsp,28
ROTTR.exe+38958A4 - 8B 91 50030000        - mov edx,[rcx+00000350]
ROTTR.exe+38958AA - E8 0173FFFF           - call ROTTR.exe+388CBB0
ROTTR.exe+38958AF - 48 85 C0              - test rax,rax
ROTTR.exe+38958B2 - 74 1E                 - je ROTTR.exe+38958D2
ROTTR.exe+38958B4 - 8B 0D 36F87CFD        - mov ecx,[ROTTR.exe+10650F0]
ROTTR.exe+38958BA - 39 88 D0000000        - cmp [rax+000000D0],ecx
ROTTR.exe+38958C0 - 76 10                 - jna ROTTR.exe+38958D2
ROTTR.exe+38958C2 - 89 CA                 - mov edx,ecx
ROTTR.exe+38958C4 - 48 8B 88 D8000000     - mov rcx,[rax+000000D8]
ROTTR.exe+38958CB - 48 83 3C D1  00       - cmp qword ptr [rcx+rdx*8],00
ROTTR.exe+38958D0 - 75 02                 - jne ROTTR.exe+38958D4
ROTTR.exe+38958D2 - 31 C0                 - xor eax,eax
ROTTR.exe+38958D4 - 48 83 C4 28           - add rsp,28
ROTTR.exe+38958D8 - C3                    - ret
}

{
ROTTR.exe+3350FA4 - E8 07F8FDFF           - call ROTTR.exe+33307B0
ROTTR.exe+3350FA9 - 0F28 F0               - movaps xmm6,xmm0
ROTTR.exe+3350FAC - 0F57 35 FD0594FD      - xorps xmm6,[ROTTR.exe+C915B0]
ROTTR.exe+3350FB3 - EB 11                 - jmp ROTTR.exe+3350FC6
ROTTR.exe+3350FB5 - 5C                    - pop rsp
ROTTR.exe+3350FB6 - 76 0E                 - jna ROTTR.exe+3350FC6
ROTTR.exe+3350FB8 - 0F28 CE               - movaps xmm1,xmm6
ROTTR.exe+3350FBB - 48 89 D9              - mov rcx,rbx
ROTTR.exe+3350FBE - E8 9DFAFDFF           - call ROTTR.exe+3330A60
ROTTR.exe+3350FC3 - 0F28 F0               - movaps xmm6,xmm0
ROTTR.exe+3350FC6 - 48 8B 83 A8020000     - mov rax,[rbx+000002A8]
ROTTR.exe+3350FCD - F3 0F58 70 2C         - addss xmm6,[rax+2C]
ROTTR.exe+3350FD2 - 0F2F F7               - comiss xmm6,xmm7
ROTTR.exe+3350FD5 - 76 0C                 - jna ROTTR.exe+3350FE3
ROTTR.exe+3350FD7 - 0F2F 35 BE7F93FD      - comiss xmm6,[ROTTR.exe+C88F9C]
ROTTR.exe+3350FDE - 73 03                 - jae ROTTR.exe+3350FE3
ROTTR.exe+3350FE0 - 0F28 F7               - movaps xmm6,xmm7
ROTTR.exe+3350FE3 - 66 0F6E 83 B4020000   - movd xmm0,[rbx+000002B4]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"DataBlockLocation"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>DataBlockLocation</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"DataBlockLocation?"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>ROTTR.exe+2851CA8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"Health"</Description>
          <VariableType>Float</VariableType>
          <Address>ROTTR.exe+17F8AD0</Address>
          <Offsets>
            <Offset>2C</Offset>
            <Offset>2A8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"InfoBlock"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>ROTTR.exe+F50300</Address>
          <Offsets>
            <Offset>61D0</Offset>
            <Offset>10</Offset>
            <Offset>78</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>59</ID>
              <Description>"Skill Points"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>ROTTR.exe+F50300</Address>
              <Offsets>
                <Offset>44</Offset>
                <Offset>61D0</Offset>
                <Offset>10</Offset>
                <Offset>78</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Inventory Hash Location"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>DataBlockLocation</Address>
          <Offsets>
            <Offset>28</Offset>
            <Offset>3A8</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>29</ID>
              <Description>"Cloth"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>30</ID>
              <Description>"Herbs"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+8</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>31</ID>
              <Description>"Hide"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+10</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>44</ID>
              <Description>"Salvage"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+18</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>43</ID>
              <Description>"Mushrooms"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+20</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>42</ID>
              <Description>"Hardwood"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+28</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>41</ID>
              <Description>"Feathers"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+30</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>40</ID>
              <Description>"Oil"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+38</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"Boar Fat"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+40</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Deer Antler"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+48</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"Exotic Hide"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+50</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>36</ID>
              <Description>"Magnesite Ore"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+58</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>35</ID>
              <Description>"Bear Hide"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+60</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"Technical Parts"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+68</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Byzantine Coins"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+70</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>32</ID>
              <Description>"Chromite Ore"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+78</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>49</ID>
              <Description>"Arrows"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+80</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>51</ID>
              <Description>"Poison Arrows"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+88</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>82</ID>
              <Description>"Bullets"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+90</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>84</ID>
              <Description>"Hollow Point Rounds"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+98</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>90</ID>
              <Description>"Shotgun Shells"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+A0</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>92</ID>
              <Description>"Riffle Ammo"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+A8</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>95</ID>
              <Description>"Grenades"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+B0</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>96</ID>
              <Description>"Fire Arrows"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+B8</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>98</ID>
              <Description>"Dragonfire Shells"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+C0</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>99</ID>
              <Description>"Grenade Arrows"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>InventoryLocations+C8</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>147</ID>
      <Description>"Auto Assemble script"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(aobinj,ROTTR.exe,48 8B 9B F0 03 00 00) // should be unique
alloc(newmem,$1000,ROTTR.exe+38C79DE)

label(GlobalBlock)
label(code)
label(return)

newmem:

code:
  mov [GlobalBlock], rbx
  mov rbx,[rbx+000003F0]
  jmp return

GlobalBlock:
  dq 0

aobinj:
  jmp code
  nop
  nop
return:
registersymbol(aobinj)
registersymbol(GlobalBlock)

[DISABLE]

aobinj:
  db 48 8B 9B F0 03 00 00

unregistersymbol(aobinj)
unregistersymbol(GlobalBlock)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: ROTTR.exe+38C79DE

RBX + 250 ?? 49F 1183
RBX + 2B8 ?? (hash bucket address??)
RBX + 2D0 ?? 11  17 (number of buckets?)

"ROTTR.exe"+38C79B2: CC                                      -  int 3 
"ROTTR.exe"+38C79B3: 66 66 66 66 2E 0F 1F 84 00 00 00 00 00  -  nop cs:[rax+rax+00000000]
"ROTTR.exe"+38C79C0: 53                                      -  push rbx
"ROTTR.exe"+38C79C1: 48 83 EC 20                             -  sub rsp,20
"ROTTR.exe"+38C79C5: E8 86 40 00 00                          -  call ROTTR.exe+38CBA50
"ROTTR.exe"+38C79CA: 48 8B 1D 7F 95 0B FF                    -  mov rbx,[ROTTR.exe+2980F50]
"ROTTR.exe"+38C79D1: 48 85 DB                                -  test rbx,rbx
"ROTTR.exe"+38C79D4: 74 14                                   -  je ROTTR.exe+38C79EA
"ROTTR.exe"+38C79D6: 48 89 D9                                -  mov rcx,rbx
"ROTTR.exe"+38C79D9: E8 12 FD FF FF                          -  call ROTTR.exe+38C76F0
// ---------- INJECTING HERE ----------
"ROTTR.exe"+38C79DE: 48 8B 9B F0 03 00 00                    -  mov rbx,[rbx+000003F0]
// ---------- DONE INJECTING  ----------
"ROTTR.exe"+38C79E5: 48 85 DB                                -  test rbx,rbx
"ROTTR.exe"+38C79E8: 75 EC                                   -  jne ROTTR.exe+38C79D6
"ROTTR.exe"+38C79EA: 48 83 C4 20                             -  add rsp,20
"ROTTR.exe"+38C79EE: 5B                                      -  pop rbx
"ROTTR.exe"+38C79EF: C3                                      -  ret 
"ROTTR.exe"+38C79F0: CC                                      -  int 3 
"ROTTR.exe"+38C79F1: CC                                      -  int 3 
"ROTTR.exe"+38C79F2: CC                                      -  int 3 
"ROTTR.exe"+38C79F3: CC                                      -  int 3 
"ROTTR.exe"+38C79F4: CC                                      -  int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>148</ID>
          <Description>"GlobalBlock"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>GlobalBlock</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>149</ID>
          <Description>"Pistol"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>GlobalBlock</Address>
          <Offsets>
            <Offset>C</Offset>
            <Offset>C0</Offset>
            <Offset>28</Offset>
            <Offset>3A8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>150</ID>
          <Description>"Arrows"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>GlobalBlock</Address>
          <Offsets>
            <Offset>C</Offset>
            <Offset>0</Offset>
            <Offset>108</Offset>
            <Offset>28</Offset>
            <Offset>3A8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>201</ID>
      <Description>"Run Script"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
autoAssemble([[
alloc(data, $1000)
label(Flags)
data:
Flags:
  dq 0

registersymbol(Flags)
]])
idtoname = {
  [0x4D826A39] = "Cloth",
  [0x5F2885E7] = "Herbs",
  [0x5F28F125] = "Hides",
  [0x045EC57E] = "Salvage",
  [0x6EE65E59] = "Mushrooms",
  [0x1EC99446] = "Hardwood",
  [0x90F8019C] = "Feathers",
  [0xFA60F478] = "Oil",
  [0xC50146F2] = "BoarFat",
  [0xEF21C8DA] = "DeerAntlers",
  [0x50B025C6] = "ExoticHides",
  [0x50F3E958] = "MagnesiteOre",
  [0x104D7CDF] = "BearHides",
  [0x55C9ED57] = "TechnicalParts",
  [0xE42682B1] = "ByzantineCoins",
  [0x97C8C7FB] = "ChromiteOre",
  [0x8863BA99] = "Arrows",
  [0x9CDA8C92] = "PoisonArrows",
  [0xB62B6E6C] = "PistolAmmo",
  [0x8CE197A7] = "HollowPoints",
  [0xA230E397] = "ShotgunShells",
  [0x5C522579] = "RifleAmmo",
  [0xAA96C1D1] = "Grenades",
  [0x540F3C56] = "FireArrows",
  [0xEFB08959] = "DragonfireShells",
  [0x3C7C95A2] = "GrenadeArrows"
}

function hex(addr)
  if addr ~= nil then
    return string.format("%X", addr)
  end
  return "nil"
end

function processItem(addr, isMax)
  type = readInteger(addr+0x8)
  symbolname = nil
  for i,v in pairs(idtoname) do
    if i == type then
      symbolname = v .. "Location"
    end
  end
  if symbolname ~= nil then
    if isMax then
      symbolname = "Max" .. symbolname
      data = readBytes(getAddress("Flags"),1)
      if data ~= 0 then
        writeInteger(addr+0xc, 999)
      end
    end
    registerSymbol(symbolname, addr+0xc)
  else
    value = readInteger(addr+0xc)
    --print("Unknown Type: ".. hex(addr) .. " -- " .. hex(type) .. " = " .. value)
  end
end

function processItemList(addr)
  while addr ~= 0 do
    processItem(addr, false)
    addr = readPointer(addr)
  end
end

function processMaxItemList(addr)
  while addr ~= 0 do
    processItem(addr, true)
    addr = readPointer(addr)
  end
end

function Run()
  print("Iteration")
  unregisterSymbol('InventoryLocation')
  unregisterSymbol('MaxLocation')

  for i,v in pairs(idtoname) do
    unregisterSymbol(v .. "Location")
    unregisterSymbol("Max" .. v .. "Location")
  end
  if InvLocations == nil  then
    InvLocations = AOBScan("48 83 EC ?? E8 ?? ?? ?? ?? 48 8B 1D ?? ?? ?? ?? 48 85 DB 74", "+W-C+X")
  end
  if InvLocations ~= nil then
    count = stringlist_getCount(InvLocations)
    if count == 1 then
      address = getAddress(stringlist_getString(InvLocations,0))
  --    print("Locations - "..hex(address))
      offset = readInteger(address+12)
      address = address + 15
      if offset &gt;= 0x80000000 then
        address = address - bAnd(bNot(offset),0xFFFFFFFF)
      else
        address = address + offset
      end
      address = readPointer(address)
      currentinv = readPointer(address + 0x3A8)
      if currentinv ~= nil and currentinv ~= 0 then
        registerSymbol('InventoryLocation', currentinv)
        count = readInteger(currentinv+0x40)
        hashaddr = readPointer(currentinv + 0x28)
        for i=0,count-1 do
          paddr = readPointer(hashaddr + (i*8))
          if paddr ~= 0 then
            processItemList(paddr)
          end
        end
      end
      maxinv = readPointer(address + 0x318)
      count = readInteger(address + 0x330)
      if maxinv ~= nil and maxinv ~= 0 then
        registerSymbol('MaxLocation', maxinv)
        for i=0,count-1 do
          paddr = readPointer(maxinv + (i*8))
          if paddr ~= 0 then
            processMaxItemList(paddr)
          end
        end
      end
    end
  end
  unregisterSymbol('SkillPointsLocation')
  if InfoLocations == nil then
    InfoLocations = AOBScan("0F 85 ?? ?? ?? ?? 48 8B 35 ?? ?? ?? ?? 4C 89 FB","+W-C+X")
  end
  if InfoLocations ~= nil then
    count = stringlist_getCount(InfoLocations)
    if count == 1 then
      address = getAddress(stringlist_getString(InfoLocations,0))
  --    print("InfoLocations - "..hex(address))
      offset = readInteger(address+9)
      address = address + 12
      if offset &gt;= 0x80000000 then
        address = address - bAnd(bNot(offset),0xFFFFFFFF)
      else
        address = address + offset
      end
      address = readPointer(address)
      address = readPointer(address)
      address = readPointer(address+0x10)
      address = readPointer(address+0x61D0)
      if address ~= 0 then
        registerSymbol('SkillPointsLocation', address + 0x44)
      end
    end
  end
  unregisterSymbol('HealthLocation')
  unregisterSymbol('MaxHealthLocation')
  if HealthLocation == nil then
    HealthLocation = AOBScan("48 8B 0D ?? ?? ?? ?? 30 DB 45 30 ED","+W-C+X")
    HealthLocation2 = AOBScan("45 30 FF FF 50 ?? 48 8B 0D ?? ?? ?? ?? 48 89 C2 45 31 C0","+W-C+X")
  end
  if HealthLocation ~= nil and HealthLocation2 ~= nil then
    count = stringlist_getCount(HealthLocation)
    count2 = stringlist_getCount(HealthLocation2)
    if count == 1 and count2 == 1 then
      address = getAddress(stringlist_getString(HealthLocation,0))
      offset = readInteger(address+3)
      address = address + 6
      if offset &gt;= 0x80000000 then
        address = address - bAnd(bNot(offset),0xFFFFFFFF)
      else
        address = address + offset
      end
      address = readPointer(address)
      local id = readQword(address+0x348)
      address = getAddress(stringlist_getString(HealthLocation2,0))
      offset = readInteger(address+9)
      address = address + 12
      if offset &gt;= 0x80000000 then
        address = address - bAnd(bNot(offset),0xFFFFFFFF)
      else
        address = address + offset
      end
      address = readPointer(address)
      local count = readInteger(address + 0x328)
      address = readPointer(address + 0x330)
      local addr = 0
      for i=0,count-1 do
        local tempaddr = readPointer(address + (i*0x8))
        if tempaddr ~= 0 then
          local tempaddr2 = readPointer(tempaddr + 0x338)
          if tempaddr2 ~= 0 then
            local tempid = readQword(tempaddr2+0x28)
            if id == tempid then
              addr = tempaddr
            end
          end
        end
      end
      if addr ~= 0 then
        address = readPointer(addr+0x60E8)
        if address ~= 0 then
          address = readPointer(address+0x3198)
          address = readPointer(address+0xD8)
          local healthpos = 0x20
          local healthloc = readPointer(address + (healthpos * 0x8))
          registerSymbol("MaxHealthLocation", healthloc + 0x2C4)
          address = readPointer(healthloc + 0x2A8)
          registerSymbol("HealthLocation", address + 0x2C)
          data = readBytes(getAddress("Flags")+1,1)
          if data ~= 0 then
            value = readInteger(healthloc+0x2C4)
            writeFloat(address + 0x2C, value)
          end
        end
      end
    end
  end
end

if myTimer == nil then
  myTimer = createTimer()
end
print("Startup")
myTimer.Interval = 1000
myTimer.onTimer = Run
myTimer.Enabled = true

reinitializeSymbolhandler(true)

[DISABLE]
{$lua}
if syntaxcheck then return end
InvLocations = nil
InfoLocations = nil
HealthLocation = nil
HealthLocation2 = nil
if myTimer ~= nil then
   myTimer.Enabled = false
end
autoAssemble([[
unregistersymbol(Flags)
dealloc(data)
]])
unregisterSymbol('MaxLocation')
unregisterSymbol('InventoryLocation')
for i,v in pairs(idtoname) do
  unregisterSymbol(v .. "Location")
  unregisterSymbol("Max" .. v .. "Location")
end
unregisterSymbol('SkillPointsLocation')
unregisterSymbol('HealthLocation')
unregisterSymbol('MaxHealthLocation')
reinitializeSymbolhandler(true)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>245</ID>
          <Description>"Force Max Inventory"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <VariableType>Byte</VariableType>
          <Address>Flags</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>474</ID>
          <Description>"Freeze Health"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <VariableType>Byte</VariableType>
          <Address>Flags+1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>473</ID>
          <Description>"Skill Points"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>SkillPointsLocation</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>471</ID>
          <Description>"Health"</Description>
          <VariableType>Float</VariableType>
          <Address>HealthLocation</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>472</ID>
          <Description>"Max Health"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>MaxHealthLocation</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>300</ID>
          <Description>"Inventory"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>301</ID>
              <Description>"InventoryLocation"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>8 Bytes</VariableType>
              <Address>InventoryLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>302</ID>
              <Description>"MaxLocation"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>8 Bytes</VariableType>
              <Address>MaxLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>303</ID>
              <Description>"Cloth"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>ClothLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>304</ID>
              <Description>"MaxCloth"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxClothLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>305</ID>
              <Description>"Herbs"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>HerbsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>306</ID>
              <Description>"Max Herbs"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxHerbsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>307</ID>
              <Description>"Hides"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>HidesLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>308</ID>
              <Description>"Max Hides"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxHidesLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>309</ID>
              <Description>"Salvage"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>SalvageLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>310</ID>
              <Description>"Max Salvage"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxSalvageLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>311</ID>
              <Description>"Mushrooms"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MushroomsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>312</ID>
              <Description>"Max Mushrooms"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxMushroomsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>313</ID>
              <Description>"Hardwood"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>HardwoodLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>314</ID>
              <Description>"Max Hardwood"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxHardwoodLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>315</ID>
              <Description>"Feathers"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>FeathersLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>316</ID>
              <Description>"Max Feathers"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxFeathersLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>317</ID>
              <Description>"Oil"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>OilLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>318</ID>
              <Description>"Max Oil"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxOilLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>319</ID>
              <Description>"Boar Fat"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>BoarFatLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>320</ID>
              <Description>"Max Boar Fat"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxBoarFatLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>321</ID>
              <Description>"Deer Antlers"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>DeerAntlersLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>322</ID>
              <Description>"Max Deer Antlers"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxDeerAntlersLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>323</ID>
              <Description>"Exotic Hides"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>ExoticHidesLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>324</ID>
              <Description>"Max Exotic Hides"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxExoticHidesLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>325</ID>
              <Description>"Magnesite Ore"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MagnesiteOreLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>326</ID>
              <Description>"Max Magnesite Ore"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxMagnesiteOreLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>327</ID>
              <Description>"Bear Hides"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>BearHidesLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>328</ID>
              <Description>"Max Bear Hides"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxBearHidesLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>329</ID>
              <Description>"Technical Parts"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>TechnicalPartsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>330</ID>
              <Description>"Max Technical Parts"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxTechnicalPartsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>331</ID>
              <Description>"Byzantine Coins"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>ByzantineCoinsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>332</ID>
              <Description>"Max Byzantine Coins"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxByzantineCoinsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>333</ID>
              <Description>"Chromite Ore"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>ChromiteOreLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>334</ID>
              <Description>"Max Chromite Ore"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxChromiteOreLocation</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>400</ID>
          <Description>"Ammo"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>401</ID>
              <Description>"Arrows"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>ArrowsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>402</ID>
              <Description>"Max Arrows"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxArrowsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>403</ID>
              <Description>"Poison Arrows"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>PoisonArrowsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>404</ID>
              <Description>"Max Poison Arrows"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxPoisonArrowsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>405</ID>
              <Description>"Pistol Ammo"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>PistolAmmoLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>406</ID>
              <Description>"Max Pistol Ammo"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxPistolAmmoLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>407</ID>
              <Description>"Hollow Points"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>HollowPointsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>408</ID>
              <Description>"Max Hollow Points"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxHollowPointsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>409</ID>
              <Description>"Shotgun Shells"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>ShotgunShellsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>410</ID>
              <Description>"Max Shotgun Shells"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxShotgunShellsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>411</ID>
              <Description>"Rifle Ammo"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>RifleAmmoLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>412</ID>
              <Description>"Max Rifle Ammo"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxRifleAmmoLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>413</ID>
              <Description>"Grenades"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>GrenadesLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>414</ID>
              <Description>"Max Grenades"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxGrenadesLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>415</ID>
              <Description>"Fire Arrows"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>FireArrowsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>416</ID>
              <Description>"Max Fire Arrows"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxFireArrowsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>417</ID>
              <Description>"Dragonfire Shells"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>DragonfireShellsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>418</ID>
              <Description>"Max Dragonfire Shells"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxDragonfireShellsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>419</ID>
              <Description>"Grenade Arrows"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>GrenadeArrowsLocation</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>420</ID>
              <Description>"Max Grenade Arrows"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>MaxGrenadeArrowsLocation</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov rcx,[ROTTR.exe+29805C0]</Description>
      <Address>14371C9B4</Address>
      <ModuleName>ROTTR.exe</ModuleName>
      <ModuleNameOffset>371C9B4</ModuleNameOffset>
      <Before>
        <Byte>05</Byte>
        <Byte>74</Byte>
        <Byte>F7</Byte>
        <Byte>22</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>0D</Byte>
        <Byte>05</Byte>
        <Byte>3C</Byte>
        <Byte>26</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>30</Byte>
        <Byte>DB</Byte>
        <Byte>45</Byte>
        <Byte>30</Byte>
        <Byte>ED</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
