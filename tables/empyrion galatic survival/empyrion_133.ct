<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>1040</ID>
      <Description>"Open"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(player,F3 0F 10 86 F8 00 00 00 F3 0F 5A C0 F2)
alloc(newmem,$1000,player)

label(code)
label(return)
label(player_ptr)

newmem:

code:
  mov qword ptr [player_ptr],rsi
  movss xmm0,[rsi+000000F8]
  jmp return

player_ptr:
  dq 0

player:
  jmp code
  nop
  nop
  nop
return:
registersymbol(player)
registersymbol(player_ptr)

[DISABLE]
{$asm}
player:
  db F3 0F 10 86 F8 00 00 00
unregistersymbol(player_ptr)
unregistersymbol(player)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 998F9B43

998F9B10: 66 0F 57 C9                    -  xorpd xmm1,xmm1
998F9B14: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
998F9B18: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
998F9B1C: 48 83 EC 20                    -  sub rsp,20
998F9B20: 49 BB 30 E7 B7 12 00 00 00 00  -  mov r11,0000000012B7E730
998F9B2A: 41 FF D3                       -  call r11d
998F9B2D: 48 83 C4 20                    -  add rsp,20
998F9B31: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9B35: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
998F9B3A: F3 44 0F 11 BD 78 FF FF FF     -  movss [rbp-00000088],xmm15
// ---------- INJECTING HERE ----------
998F9B43: F3 0F 10 86 F8 00 00 00        -  movss xmm0,[rsi+000000F8]
// ---------- DONE INJECTING  ----------
998F9B4B: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9B4F: F2 0F 11 85 58 FF FF FF        -  movsd [rbp-000000A8],xmm0
998F9B57: 48 8B 46 40                    -  mov rax,[rsi+40]
998F9B5B: 48 8B C8                       -  mov rcx,rax
998F9B5E: 48 83 EC 20                    -  sub rsp,20
998F9B62: 48 8B 00                       -  mov rax,[rax]
998F9B65: 90                             -  nop
998F9B66: 90                             -  nop
998F9B67: 90                             -  nop
998F9B68: FF 90 70 05 00 00              -  call qword ptr [rax+00000570]
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1275</ID>
          <Description>"Custom Type"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1008</ID>
              <Description>"Enable "Custom Type" 4byte"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$lua}
local XORAlgoritm=[[
alloc(TypeName,256)
alloc(ByteSize,4)
alloc(ConvertRoutine,1024)
alloc(ConvertBackRoutine,1024)
define(XOR_KEY,0e59d3a5)

TypeName:
db 'XOR Algoritm',0

ByteSize:
dd 4  //4 byte real value and 4 byte encryption key right after it

//stdcall int ConvertRoutine(unsigned char *input);
ConvertRoutine:
[64-bit]
//rcx=address of input
mov eax,dword [rcx] //eax now contains the bytes 'input' pointed to
xor eax,XOR_KEY
ret
[/64-bit]

[32-bit]
mov eax,dword [esp+4]
mov eax,dword [eax]
xor eax,XOR_KEY
ret 4
[/32-bit]

//stdcall void ConvertBackRoutine(int i, unsigned char *output);
ConvertBackRoutine:
[64-bit]
//ecx=input
//rdx=address of output

xor ecx,XOR_KEY
mov [rdx],ecx
ret
[/64-bit]

[32-bit]
//[ebp+8]=input
//[ebp+c]=address of output
push eax
push edi
mov eax,dword [esp+C]
mov edi,dword [esp+10]
xor eax,XOR_KEY
mov dword [edi],eax
pop edi
pop eax
ret 8
[/32-bit]
]]
registerCustomTypeAutoAssembler(XORAlgoritm)
[DISABLE]

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1024</ID>
              <Description>"Enable "Custom Type" Float"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$lua}
local custom=[[
alloc(TypeName,256)
alloc(ByteSize,4)
alloc(UsesFloat,1)
alloc(ConvertRoutine,1024)
alloc(ConvertBackRoutine,1024)
define(XOR_FLOAT,069C5B7D)

TypeName:
db 'Z Float',0

ByteSize:
dd 4  //4 byte real value and 4 byte encryption key right after it

UsesFloat:
db 1

//stdcall int ConvertRoutine(unsigned char *input);
ConvertRoutine:
[64-bit]
//rcx=address of input
mov eax,dword [rcx] //eax now contains the bytes 'input' pointed to
xor eax,XOR_FLOAT
ret
[/64-bit]

[32-bit]
mov eax,dword [esp+4]
mov eax,dword [eax]
xor eax,XOR_FLOAT
ret 4
[/32-bit]

//stdcall void ConvertBackRoutine(int i, unsigned char *output);
ConvertBackRoutine:
[64-bit]
//ecx=input
//rdx=address of output

xor ecx,XOR_FLOAT
mov [rdx],ecx
ret
[/64-bit]

[32-bit]
//[ebp+8]=input
//[ebp+c]=address of output
push eax
push edi
mov eax,dword [esp+C]
mov edi,dword [esp+10]
xor eax,XOR_FLOAT
mov dword [edi],eax
pop edi
pop eax
ret 8
[/32-bit]
]]
registerCustomTypeAutoAssembler(custom)
[DISABLE]

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1050</ID>
          <Description>"Stats"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1041</ID>
              <Description>"Max Health"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>40</Offset>
                <Offset>28</Offset>
                <Offset>428</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1048</ID>
              <Description>"Max Oxygen"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>40</Offset>
                <Offset>30</Offset>
                <Offset>428</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1047</ID>
              <Description>"Max Food"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>40</Offset>
                <Offset>18</Offset>
                <Offset>428</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1046</ID>
              <Description>"Max Stamina"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>40</Offset>
                <Offset>20</Offset>
                <Offset>428</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1042</ID>
              <Description>"Current HP"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>Custom</VariableType>
              <CustomType>Z Float</CustomType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>20</Offset>
                <Offset>18</Offset>
                <Offset>28</Offset>
                <Offset>428</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1045</ID>
              <Description>"Current Oxygen"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>Custom</VariableType>
              <CustomType>Z Float</CustomType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>20</Offset>
                <Offset>18</Offset>
                <Offset>30</Offset>
                <Offset>428</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1044</ID>
              <Description>"Current Food"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>Custom</VariableType>
              <CustomType>Z Float</CustomType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>20</Offset>
                <Offset>18</Offset>
                <Offset>18</Offset>
                <Offset>428</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1043</ID>
              <Description>"Current Stamina"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000000</Color>
              <VariableType>Custom</VariableType>
              <CustomType>Z Float</CustomType>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>20</Offset>
                <Offset>18</Offset>
                <Offset>20</Offset>
                <Offset>428</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1051</ID>
          <Description>"Scripts"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1167</ID>
              <Description>"No collision (F1 - Toggle)"</Description>
              <LastState/>
              <Color>0080FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(CollisionAOB,Empyrion.exe,F3 44 0F 58 79 14 F3 44 0F)
registersymbol(CollisionAOB)

CollisionAOB:
 db 90 90 90 90 90 90

[DISABLE]

CollisionAOB:
  db F3 44 0F 58 79 14

unregistersymbol(CollisionAOB)
{
// ORIGINAL CODE - INJECTION POINT: "Empyrion.exe"+90E53D

"Empyrion.exe"+90E507: F3 44 0F 11 94 24 20 01 00 00  -  movss [rsp+00000120],xmm10
"Empyrion.exe"+90E511: F3 44 0F 59 E4                 -  mulss xmm12,xmm4
"Empyrion.exe"+90E516: F3 0F 59 EB                    -  mulss xmm5,xmm3
"Empyrion.exe"+90E51A: F3 41 0F 59 C5                 -  mulss xmm0,xmm13
"Empyrion.exe"+90E51F: F3 44 0F 58 F8                 -  addss xmm15,xmm0
"Empyrion.exe"+90E524: F3 44 0F 58 E6                 -  addss xmm12,xmm6
"Empyrion.exe"+90E529: F3 44 0F 58 E5                 -  addss xmm12,xmm5
"Empyrion.exe"+90E52E: F3 0F 59 CB                    -  mulss xmm1,xmm3
"Empyrion.exe"+90E532: F3 44 0F 58 61 18              -  addss xmm12,[rcx+18]
"Empyrion.exe"+90E538: F3 44 0F 58 F9                 -  addss xmm15,xmm1
// ---------- INJECTING HERE ----------
"Empyrion.exe"+90E53D: F3 44 0F 58 79 14              -  addss xmm15,[rcx+14]
// ---------- DONE INJECTING  ----------
"Empyrion.exe"+90E543: F3 44 0F 11 A4 24 30 01 00 00  -  movss [rsp+00000130],xmm12
"Empyrion.exe"+90E54D: E8 5E 24 AC FF                 -  call Empyrion.exe+3D09B0
"Empyrion.exe"+90E552: F3 0F 10 05 E6 32 4C 00        -  movss xmm0,[Empyrion.exe+DD1840]
"Empyrion.exe"+90E55A: F3 44 0F 10 40 0C              -  movss xmm8,[rax+0C]
"Empyrion.exe"+90E560: F3 0F 10 67 30                 -  movss xmm4,[rdi+30]
"Empyrion.exe"+90E565: F3 0F 59 E0                    -  mulss xmm4,xmm0
"Empyrion.exe"+90E569: 41 0F 28 D8                    -  movaps xmm3,xmm8
"Empyrion.exe"+90E56D: F3 41 0F 59 D8                 -  mulss xmm3,xmm8
"Empyrion.exe"+90E572: F3 44 0F 10 48 04              -  movss xmm9,[rax+04]
"Empyrion.exe"+90E578: F3 0F 10 38                    -  movss xmm7,[rax]
}
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>112</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>1274</ID>
              <Description>"Instant Blueprint Craft"</Description>
              <LastState/>
              <Color>0080FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscan(FastCraftforBluePrints,EC F3 0F 10 46 58) // should be unique
alloc(newmem,$1000,FastCraftforBluePrints)

label(code)
label(return)

newmem:
  mov dword ptr [rsi+58],(float)0
code:
  movss xmm0,[rsi+58]
  jmp return

FastCraftforBluePrints+01:
  jmp newmem
return:
registersymbol(FastCraftforBluePrints)

[DISABLE]

FastCraftforBluePrints+01:
  db F3 0F 10 46 58

unregistersymbol(FastCraftforBluePrints)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1F81E456

1F81E426: F3 0F 10 0D B2 00 00 00        -  movss xmm1,[1F81E4E0]
1F81E42E: F3 0F 5A C9                    -  cvtss2sd xmm1,xmm1
1F81E432: F2 0F 5E C1                    -  divsd xmm0,xmm1
1F81E436: F2 0F 11 45 E0                 -  movsd [rbp-20],xmm0
1F81E43B: EB 09                          -  jmp 1F81E446
1F81E43D: 66 0F 57 C0                    -  xorpd xmm0,xmm0
1F81E441: F2 0F 11 45 E0                 -  movsd [rbp-20],xmm0
1F81E446: F2 0F 10 45 E0                 -  movsd xmm0,[rbp-20]
1F81E44B: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
1F81E450: F3 44 0F 11 7D EC              -  movss [rbp-14],xmm15
// ---------- INJECTING HERE ----------
1F81E456: F3 0F 10 46 58                 -  movss xmm0,[rsi+58]
// ---------- DONE INJECTING  ----------
1F81E45B: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
1F81E45F: F3 0F 10 4D EC                 -  movss xmm1,[rbp-14]
1F81E464: F3 0F 5A C9                    -  cvtss2sd xmm1,xmm1
1F81E468: F2 0F 5C C1                    -  subsd xmm0,xmm1
1F81E46C: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
1F81E471: F3 44 0F 11 7E 58              -  movss [rsi+58],xmm15
1F81E477: 48 8B 04 25 30 B6 83 03        -  mov rax,[0383B630]
1F81E47F: 48 8B 40 10                    -  mov rax,[rax+10]
1F81E483: 48 89 46 50                    -  mov [rsi+50],rax
1F81E487: F3 0F 10 46 58                 -  movss xmm0,[rsi+58]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1260</ID>
              <Description>"Weapon Data"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>0080FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscan(WeaponData,48 8B 86 98 00 00 00 48 85 C0 74 22) // should be unique
alloc(newmem,$1000,WeaponData)
alloc(current_weapon,8)
label(code)
label(return)

newmem:

code:
  mov rax,[rsi+00000098]
  mov [current_weapon],rax
  jmp return

WeaponData:
  jmp code
  nop
  nop
return:
registersymbol(WeaponData)
registersymbol(current_weapon)
[DISABLE]

WeaponData:
  db 48 8B 86 98 00 00 00
unregistersymbol(current_weapon)
unregistersymbol(WeaponData)
dealloc(newmem)
dealloc(current_weapon)
{
// ORIGINAL CODE - INJECTION POINT: 22114CC5

22114C8E: 48 89 72 20                    -  mov [rdx+20],rsi
22114C92: 48 C7 42 28 68 76 56 20        -  mov [rdx+28],20567668
22114C9A: 48 C7 42 38 20 A6 4A 41        -  mov [rdx+38],414AA620
22114CA2: 48 C7 42 18 1E 4B 11 22        -  mov [rdx+18],22114B1E
22114CAA: 48 8B C8                       -  mov rcx,rax
22114CAD: 48 83 EC 20                    -  sub rsp,20
22114CB1: 83 38 00                       -  cmp dword ptr [rax],00
22114CB4: 49 BB 30 4E 11 22 00 00 00 00  -  mov r11,0000000022114E30
22114CBE: 41 FF D3                       -  call r11d
22114CC1: 48 83 C4 20                    -  add rsp,20
// ---------- INJECTING HERE ----------
22114CC5: 48 8B 86 98 00 00 00           -  mov rax,[rsi+00000098]
// ---------- DONE INJECTING  ----------
22114CCC: 48 85 C0                       -  test rax,rax
22114CCF: 74 22                          -  je 22114CF3
22114CD1: B8 05 00 00 00                 -  mov eax,00000005
22114CD6: 83 F8 01                       -  cmp eax,01
22114CD9: 48 8B CE                       -  mov rcx,rsi
22114CDC: 33 D2                          -  xor edx,edx
22114CDE: 48 83 EC 20                    -  sub rsp,20
22114CE2: 49 BB 30 1A 76 4A 00 00 00 00  -  mov r11,000000004A761A30
22114CEC: 41 FF D3                       -  call r11d
22114CEF: 48 83 C4 20                    -  add rsp,20
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1261</ID>
                  <Description>"Structure_start"</Description>
                  <LastState RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1272</ID>
                  <Description>"Fire Delay"</Description>
                  <VariableType>Float</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>30</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1271</ID>
                  <Description>"Clipsize"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>90</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1263</ID>
                  <Description>"Weapon Type?"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>A0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1264</ID>
                  <Description>"Reload Speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>A4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1266</ID>
                  <Description>"Damage"</Description>
                  <VariableType>Float</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>A8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1265</ID>
                  <Description>"Damage too?"</Description>
                  <VariableType>Float</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>AC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1268</ID>
                  <Description>"Weapon Range"</Description>
                  <VariableType>Float</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>B4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1267</ID>
                  <Description>"Amount of Bullet Fired"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>B8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1269</ID>
                  <Description>"Something"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>C0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1270</ID>
                  <Description>"Something"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>current_weapon</Address>
                  <Offsets>
                    <Offset>C4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1082</ID>
              <Description>"XP &amp; Upgrade Points"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>0080FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(StatPtr,00 4C 8B FE 4C 8B F6 48 85 F6 74 1B 49 8B 07 48 8B 00) // should be unique
alloc(newmem,$1000,StatPtr)
alloc(stat_ptr,8)
label(code)
label(return)
registersymbol(stat_ptr)
newmem:

code:
  mov rax,[r15]
  mov [stat_ptr],r15
  mov rax,[rax]
  jmp return


StatPtr+0C:
  jmp code
  nop
return:
registersymbol(StatPtr)

[DISABLE]

StatPtr+0C:
  db 49 8B 07 48 8B 00 48 8B 40 10 48 8B 48 18

unregistersymbol(stat_ptr)
unregistersymbol(StatPtr)
dealloc(newmem)
dealloc(stat_ptr)

{
// ORIGINAL CODE - INJECTION POINT: A5E3F74E

A5E3F725: 48 83 EC 20                    -  sub rsp,20
A5E3F729: 83 38 00                       -  cmp dword ptr [rax],00
A5E3F72C: 49 BB E0 4E 03 1F 00 00 00 00  -  mov r11,Assembly-CSharp:ConditionLayout:ClearConfig
A5E3F736: 41 FF D3                       -  call r11d
A5E3F739: 48 83 C4 20                    -  add rsp,20
A5E3F73D: 89 86 B8 01 00 00              -  mov [rsi+000001B8],eax
A5E3F743: 4C 8B FE                       -  mov r15,rsi
A5E3F746: 4C 8B F6                       -  mov r14,rsi
A5E3F749: 48 85 F6                       -  test rsi,rsi
A5E3F74C: 74 1B                          -  je Assembly-CSharp:MenuItemQueue:SearchTreeNode+3e9
// ---------- INJECTING HERE ----------
A5E3F74E: 49 8B 07                       -  mov rax,[r15]
A5E3F751: 48 8B 00                       -  mov rax,[rax]
// ---------- DONE INJECTING  ----------
A5E3F754: 48 8B 40 10                    -  mov rax,[rax+10]
A5E3F758: 48 8B 48 18                    -  mov rcx,[rax+18]
A5E3F75C: 33 C0                          -  xor eax,eax
A5E3F75E: 48 81 F9 18 39 1D 1F           -  cmp rcx,1F1D3918
A5E3F765: 4C 0F 45 F0                    -  cmovne r14,rax
A5E3F769: 4D 85 F6                       -  test r14,r14
A5E3F76C: 0F 84 8F 00 00 00              -  je Assembly-CSharp:MenuItemQueue:SearchTreeNode+481
A5E3F772: 48 63 86 B8 01 00 00           -  movsxd  rax,dword ptr [rsi+000001B8]
A5E3F779: 85 C0                          -  test eax,eax
A5E3F77B: 0F 8E 80 00 00 00              -  jng Assembly-CSharp:MenuItemQueue:SearchTreeNode+481
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1083</ID>
                  <Description>"XP"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <VariableType>Custom</VariableType>
                  <CustomType>XOR Algoritm</CustomType>
                  <Address>stat_ptr</Address>
                  <Offsets>
                    <Offset>678</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1084</ID>
                  <Description>"Upgrade Points"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <VariableType>Custom</VariableType>
                  <CustomType>XOR Algoritm</CustomType>
                  <Address>stat_ptr</Address>
                  <Offsets>
                    <Offset>688</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1138</ID>
              <Description>"Highlighted Item Editor"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(InventoryItemPointer,A0 48 8B 0C 25 * * * * 48 8b)
alloc(InventoryItemPTR,8)
InventoryItemPTR:
readmem(InventoryItemPointer+05,4)
registersymbol(InventoryItemPTR)
[DISABLE]
dealloc(InventoryItemPTR)
unregistersymbol(InventoryItemPTR)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1139</ID>
                  <Description>"Quanity"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <VariableType>Custom</VariableType>
                  <CustomType>XOR Algoritm</CustomType>
                  <Address>InventoryItemPTR</Address>
                  <Offsets>
                    <Offset>1C</Offset>
                    <Offset>58</Offset>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1141</ID>
                  <Description>"Item ID"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>InventoryItemPTR</Address>
                  <Offsets>
                    <Offset>20</Offset>
                    <Offset>10</Offset>
                    <Offset>58</Offset>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1049</ID>
              <Description>"Godmode"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(health,00 F3 0F 10 86 F8 00 00 00)
alloc(newmem,$1000,health)

label(code)
label(return)

newmem:

code:
  push rsi
  mov rsi,[rsi+40]
  mov rsi,[rsi+428]
  mov rsi,[rsi+28]
  mov r11d,dword ptr [rsi+40]
  xor r11d,069C5B7D
  mov rsi,[rsi+18]
  mov dword ptr [rsi+20],r11d
  pop rsi
  movss xmm0,[rsi+000000F8]
  jmp return

health+01:
  jmp code
  nop
  nop
  nop
return:
registersymbol(health)

[DISABLE]
health+01:
  db F3 0F 10 86 F8 00 00 00
unregistersymbol(health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 998F9B04

998F9AD1: F2 0F 5A D2                    -  cvtsd2ss xmm2,xmm2
998F9AD5: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
998F9AD9: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
998F9ADD: 48 83 EC 20                    -  sub rsp,20
998F9AE1: 49 BB 60 49 B7 07 00 00 00 00  -  mov r11,0000000007B74960
998F9AEB: 41 FF D3                       -  call r11d
998F9AEE: 48 83 C4 20                    -  add rsp,20
998F9AF2: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9AF6: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
998F9AFB: F3 44 0F 11 BE FC 00 00 00     -  movss [rsi+000000FC],xmm15
// ---------- INJECTING HERE ----------
998F9B04: F3 0F 10 86 F8 00 00 00        -  movss xmm0,[rsi+000000F8]
// ---------- DONE INJECTING  ----------
998F9B0C: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9B10: 66 0F 57 C9                    -  xorpd xmm1,xmm1
998F9B14: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
998F9B18: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
998F9B1C: 48 83 EC 20                    -  sub rsp,20
998F9B20: 49 BB 30 E7 B7 12 00 00 00 00  -  mov r11,0000000012B7E730
998F9B2A: 41 FF D3                       -  call r11d
998F9B2D: 48 83 C4 20                    -  add rsp,20
998F9B31: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9B35: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
}

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1237</ID>
              <Description>"Get Name Address"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscan(NickNameAOB,48 8B 46 40 48 85 C0 0F 84 xx xx xx xx 48 8B 46 40 48 8B 80 28 04 00 00) // should be unique
alloc(newmem,$1000,NickNameAOB)
alloc(nicknick,8)
label(code)
label(return)

newmem:

code:
  mov [nicknick],rsi
  mov rax,[rsi+40]
  test rax,rax
  jmp return

NickNameAOB:
  jmp code
  nop
  nop
return:
registersymbol(NickNameAOB)
registersymbol(nicknick)
[DISABLE]

NickNameAOB:
  db 48 8B 46 40 48 85 C0

unregistersymbol(nicknick)
unregistersymbol(NickNameAOB)
dealloc(newmem)
dealloc(nicknick)
{
// ORIGINAL CODE - INJECTION POINT: 13D9BF58

13D9BF36: 41 54                          -  push r12
13D9BF38: 41 55                          -  push r13
13D9BF3A: 41 56                          -  push r14
13D9BF3C: 41 57                          -  push r15
13D9BF3E: 48 81 EC E0 00 00 00           -  sub rsp,000000E0
13D9BF45: 48 8B F1                       -  mov rsi,rcx
13D9BF48: C6 45 80 00                    -  mov byte ptr [rbp-80],00
13D9BF4C: C6 45 81 00                    -  mov byte ptr [rbp-7F],00
13D9BF50: C6 45 88 00                    -  mov byte ptr [rbp-78],00
13D9BF54: C6 45 89 00                    -  mov byte ptr [rbp-77],00
// ---------- INJECTING HERE ----------
13D9BF58: 48 8B 46 40                    -  mov rax,[rsi+40]
13D9BF5C: 48 85 C0                       -  test rax,rax
// ---------- DONE INJECTING  ----------
13D9BF5F: 75 05                          -  jne 13D9BF66
13D9BF61: E9 AE 12 00 00                 -  jmp 13D9D214
13D9BF66: 48 8B 46 40                    -  mov rax,[rsi+40]
13D9BF6A: 48 8B 80 28 04 00 00           -  mov rax,[rax+00000428]
13D9BF71: 48 8B 40 30                    -  mov rax,[rax+30]
13D9BF75: 48 8B C8                       -  mov rcx,rax
13D9BF78: 48 83 EC 20                    -  sub rsp,20
13D9BF7C: 83 38 00                       -  cmp dword ptr [rax],00
13D9BF7F: 49 BB 10 8A E5 13 00 00 00 00  -  mov r11,0000000013E58A10
13D9BF89: 41 FF D3                       -  call r11d
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1238</ID>
                  <Description>"Current Name"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>String</VariableType>
                  <Length>22</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>nicknick</Address>
                  <Offsets>
                    <Offset>14</Offset>
                    <Offset>420</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1240</ID>
                  <Description>"Symbols"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>nicknick</Address>
                  <Offsets>
                    <Offset>10</Offset>
                    <Offset>420</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1081</ID>
              <Description>"Unlimited Jetpack"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscan(JetPack5,48 89 08 48 8B 8D 30 FE FF FF 48 89 48 08 * * * * * 48 8D 86 00 08 00 00)
registersymbol(JetPack5)

JetPack5:
nop
nop
nop

[DISABLE]

JetPack5:
  db 48 89 08 48 8B 8D 30 FE FF FF

unregistersymbol(JetPack5)


{
// ORIGINAL CODE - INJECTION POINT: 1EFC5255

1EFC5222: 48 8B D0                       -  mov rdx,rax
1EFC5225: 83 EA 05                       -  sub edx,05
1EFC5228: 48 8B CD                       -  mov rcx,rbp
1EFC522B: 48 81 C1 28 FE FF FF           -  add rcx,FFFFFE28
1EFC5232: 48 83 EC 20                    -  sub rsp,20
1EFC5236: 49 BB C0 AC D5 44 00 00 00 00  -  mov r11,0000000044D5ACC0
1EFC5240: 41 FF D3                       -  call r11d
1EFC5243: 48 83 C4 20                    -  add rsp,20
1EFC5247: 48 8D 86 0C 08 00 00           -  lea rax,[rsi+0000080C]
1EFC524E: 48 8B 8D 28 FE FF FF           -  mov rcx,[rbp-000001D8]
// ---------- INJECTING HERE ----------
1EFC5255: 48 89 08                       -  mov [rax],rcx
1EFC5258: 48 8B 8D 30 FE FF FF           -  mov rcx,[rbp-000001D0]
// ---------- DONE INJECTING  ----------
1EFC525F: 48 89 48 08                    -  mov [rax+08],rcx
1EFC5263: E9 72 00 00 00                 -  jmp 1EFC52DA
1EFC5268: 48 8D 86 0C 08 00 00           -  lea rax,[rsi+0000080C]
1EFC526F: 48 8B 08                       -  mov rcx,[rax]
1EFC5272: 48 89 8D 38 FE FF FF           -  mov [rbp-000001C8],rcx
1EFC5279: 48 8B 40 08                    -  mov rax,[rax+08]
1EFC527D: 48 89 85 40 FE FF FF           -  mov [rbp-000001C0],rax
1EFC5284: 48 8B CD                       -  mov rcx,rbp
1EFC5287: 48 81 C1 48 FE FF FF           -  add rcx,FFFFFE48
1EFC528E: 48 83 EC 10                    -  sub rsp,10
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1080</ID>
              <Description>"Unlimited Usable items"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscan(UnlimitedItems13,48 89 08 48 8B 4D * 48 89 48 * 48 8B 47 * 48 63) // should be unique
registersymbol(UnlimitedItems13)


UnlimitedItems13:
nop
nop
nop

[DISABLE]

UnlimitedItems13:
  mov [rax],rcx

unregistersymbol(UnlimitedItems13)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 57E1F58B

57E1F560: 2B 55 90                       -  sub edx,[rbp-70]
57E1F563: 48 8B CD                       -  mov rcx,rbp
57E1F566: 48 83 C1 A8                    -  add rcx,-58
57E1F56A: 48 83 EC 20                    -  sub rsp,20
57E1F56E: 49 BB A0 CE 5C 45 00 00 00 00  -  mov r11,00000000455CCEA0
57E1F578: 41 FF D3                       -  call r11d
57E1F57B: 48 83 C4 20                    -  add rsp,20
57E1F57F: 48 8B 45 88                    -  mov rax,[rbp-78]
57E1F583: 48 83 C0 18                    -  add rax,18
57E1F587: 48 8B 4D A8                    -  mov rcx,[rbp-58]
// ---------- INJECTING HERE ----------
57E1F58B: 48 89 08                       -  mov [rax],rcx
57E1F58E: 48 8B 4D B0                    -  mov rcx,[rbp-50]
// ---------- DONE INJECTING  ----------
57E1F592: 48 89 48 08                    -  mov [rax+08],rcx
57E1F596: 48 8B 47 10                    -  mov rax,[rdi+10]
57E1F59A: 48 63 8F 94 00 00 00           -  movsxd  rcx,dword ptr [rdi+00000094]
57E1F5A1: 48 63 C9                       -  movsxd  rcx,ecx
57E1F5A4: 39 48 18                       -  cmp [rax+18],ecx
57E1F5A7: 0F 86 0C 01 00 00              -  jbe 57E1F6B9
57E1F5AD: 48 8D 44 C8 20                 -  lea rax,[rax+rcx*8+20]
57E1F5B2: 48 8B 00                       -  mov rax,[rax]
57E1F5B5: 48 8B 40 18                    -  mov rax,[rax+18]
57E1F5B9: 48 83 C0 18                    -  add rax,18
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1079</ID>
              <Description>"Unlimited Ammo"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(Clip5,48 89 08 48 8B 8D * * * * 48 89 48 08 49 8B 46 10)
registersymbol(Clip5)

Clip5:
nop
nop
nop

[DISABLE]

Clip5:
  db 48 89 08 48 8B 8D F8 FE FF FF

unregistersymbol(Clip5)
{
// ORIGINAL CODE - INJECTION POINT: 1F01A566

1F01A52F: 48 89 04 24                    -  mov [rsp],rax
1F01A533: 48 8B 85 E8 FE FF FF           -  mov rax,[rbp-00000118]
1F01A53A: 48 89 44 24 08                 -  mov [rsp+08],rax
1F01A53F: 48 83 EC 20                    -  sub rsp,20
1F01A543: 49 BB 20 AE 01 1F 00 00 00 00  -  mov r11,000000001F01AE20
1F01A54D: 41 FF D3                       -  call r11d
1F01A550: 48 83 C4 30                    -  add rsp,30
1F01A554: 48 8B 85 10 FE FF FF           -  mov rax,[rbp-000001F0]
1F01A55B: 48 83 C0 44                    -  add rax,44
1F01A55F: 48 8B 8D F0 FE FF FF           -  mov rcx,[rbp-00000110]
// ---------- INJECTING HERE ----------
1F01A566: 48 89 08                       -  mov [rax],rcx
1F01A569: 48 8B 8D F8 FE FF FF           -  mov rcx,[rbp-00000108]
// ---------- DONE INJECTING  ----------
1F01A570: 48 89 48 08                    -  mov [rax+08],rcx
1F01A574: 49 8B 46 10                    -  mov rax,[r14+10]
1F01A578: 48 8B C8                       -  mov rcx,rax
1F01A57B: 48 83 EC 20                    -  sub rsp,20
1F01A57F: 83 38 00                       -  cmp dword ptr [rax],00
1F01A582: 49 BB E0 73 E3 A5 00 00 00 00  -  mov r11,00000000A5E373E0
1F01A58C: 41 FF D3                       -  call r11d
1F01A58F: 48 83 C4 20                    -  add rsp,20
1F01A593: 48 63 48 20                    -  movsxd  rcx,dword ptr [rax+20]
1F01A597: 48 8B 04 25 F8 FC 68 04        -  mov rax,[0468FCF8]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1205</ID>
              <Description>"Speed Modifiers"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscan(GetWalkSpeed,F3 0F 10 86 98 00 00 00 F3 0F 5A C0 F3 0F 10 9D) // should be unique
alloc(newmem,$1000,GetWalkSpeed)
alloc(GetWalkSpeed_ptr,8)
label(code)
label(return)

newmem:

code:
  movss xmm0,[rsi+00000098]
  mov [GetWalkSpeed_ptr], rsi
  jmp return

GetWalkSpeed:
  jmp code
  nop
  nop
  nop
return:
registersymbol(GetWalkSpeed)
registersymbol(GetWalkSpeed_ptr)
[DISABLE]

GetWalkSpeed:
  db F3 0F 10 86 98 00 00 00
dealloc(GetWalkSpeed_ptr)
unregistersymbol(GetWalkSpeed_ptr)
unregistersymbol(GetWalkSpeed)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: A660D8D7

A660D896: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
A660D89A: F3 0F 10 9D B8 FE FF FF        -  movss xmm3,[rbp-00000148]
A660D8A2: F3 0F 5A DB                    -  cvtss2sd xmm3,xmm3
A660D8A6: F2 0F 59 C3                    -  mulsd xmm0,xmm3
A660D8AA: F2 0F 11 95 D0 FE FF FF        -  movsd [rbp-00000130],xmm2
A660D8B2: F2 0F 11 8D C8 FE FF FF        -  movsd [rbp-00000138],xmm1
A660D8BA: F2 0F 11 85 C0 FE FF FF        -  movsd [rbp-00000140],xmm0
A660D8C2: E9 44 00 00 00                 -  jmp A660D90B
A660D8C7: F2 0F 10 95 D0 FE FF FF        -  movsd xmm2,[rbp-00000130]
A660D8CF: F2 0F 10 8D C8 FE FF FF        -  movsd xmm1,[rbp-00000138]
// ---------- INJECTING HERE ----------
A660D8D7: F3 0F 10 86 98 00 00 00        -  movss xmm0,[rsi+00000098]
// ---------- DONE INJECTING  ----------
A660D8DF: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
A660D8E3: F3 0F 10 9D B8 FE FF FF        -  movss xmm3,[rbp-00000148]
A660D8EB: F3 0F 5A DB                    -  cvtss2sd xmm3,xmm3
A660D8EF: F2 0F 59 C3                    -  mulsd xmm0,xmm3
A660D8F3: F2 0F 11 95 D0 FE FF FF        -  movsd [rbp-00000130],xmm2
A660D8FB: F2 0F 11 8D C8 FE FF FF        -  movsd [rbp-00000138],xmm1
A660D903: F2 0F 11 85 C0 FE FF FF        -  movsd [rbp-00000140],xmm0
A660D90B: F2 0F 10 85 D0 FE FF FF        -  movsd xmm0,[rbp-00000130]
A660D913: F2 0F 10 8D C8 FE FF FF        -  movsd xmm1,[rbp-00000138]
A660D91B: F2 0F 10 95 C0 FE FF FF        -  movsd xmm2,[rbp-00000140]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1206</ID>
                  <Description>"Structure_Start"</Description>
                  <LastState RealAddress="00000000"/>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>GetWalkSpeed_ptr</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1241</ID>
                  <Description>"Walk Speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>GetWalkSpeed_ptr</Address>
                  <Offsets>
                    <Offset>98</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1242</ID>
                  <Description>"Run Speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>GetWalkSpeed_ptr</Address>
                  <Offsets>
                    <Offset>9C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1228</ID>
                  <Description>"Jump Height"</Description>
                  <VariableType>Float</VariableType>
                  <Address>GetWalkSpeed_ptr</Address>
                  <Offsets>
                    <Offset>C8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1230</ID>
                  <Description>"Jump Distance"</Description>
                  <VariableType>Float</VariableType>
                  <Address>GetWalkSpeed_ptr</Address>
                  <Offsets>
                    <Offset>CC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1254</ID>
                  <Description>"Jetpack Fly Speed Modifier"</Description>
                  <VariableType>Float</VariableType>
                  <Address>GetWalkSpeed_ptr</Address>
                  <Offsets>
                    <Offset>F4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>927</ID>
              <Description>"Teleport"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(Teleport502,Empyrion.exe,48 8B 01 80 B8 68 10 00 00 00 75 20 8B 02) // should be unique
alloc(newmem,$1000,"Teleport502)
alloc(teleptr,8)
label(code)
label(return)

newmem:

code:
  mov rax,[rcx]
  mov [teleptr],rcx
  cmp byte ptr [rax+00001068],00
  jmp return

Teleport502:
  jmp code
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(Teleport502)
registersymbol(teleptr)
[DISABLE]

Teleport502:
  db 48 8B 01 80 B8 68 10 00 00 00
unregistersymbol(teleptr)
unregistersymbol(Teleport502)
dealloc(newmem)
dealloc(teleptr)
{
// ORIGINAL CODE - INJECTION POINT: "Empyrion.exe"+8C0BD3

"Empyrion.exe"+8C0BB1: 8B 42 04                       -  mov eax,[rdx+04]
"Empyrion.exe"+8C0BB4: 89 81 0C 01 00 00              -  mov [rcx+0000010C],eax
"Empyrion.exe"+8C0BBA: 8B 42 08                       -  mov eax,[rdx+08]
"Empyrion.exe"+8C0BBD: 89 81 10 01 00 00              -  mov [rcx+00000110],eax
"Empyrion.exe"+8C0BC3: 8B 41 08                       -  mov eax,[rcx+08]
"Empyrion.exe"+8C0BC6: C1 E8 1E                       -  shr eax,1E
"Empyrion.exe"+8C0BC9: 83 F8 03                       -  cmp eax,03
"Empyrion.exe"+8C0BCC: 74 31                          -  je Empyrion.exe+8C0BFF
"Empyrion.exe"+8C0BCE: 83 F8 02                       -  cmp eax,02
"Empyrion.exe"+8C0BD1: 75 0C                          -  jne Empyrion.exe+8C0BDF
// ---------- INJECTING HERE ----------
"Empyrion.exe"+8C0BD3: 48 8B 01                       -  mov rax,[rcx]
"Empyrion.exe"+8C0BD6: 80 B8 68 10 00 00 00          -  cmp byte ptr [rax+00001068],00
// ---------- DONE INJECTING  ----------
"Empyrion.exe"+8C0BDD: 75 20                          -  jne Empyrion.exe+8C0BFF
"Empyrion.exe"+8C0BDF: 8B 02                          -  mov eax,[rdx]
"Empyrion.exe"+8C0BE1: 89 81 90 00 00 00              -  mov [rcx+00000090],eax
"Empyrion.exe"+8C0BE7: 8B 42 04                       -  mov eax,[rdx+04]
"Empyrion.exe"+8C0BEA: 89 81 94 00 00 00              -  mov [rcx+00000094],eax
"Empyrion.exe"+8C0BF0: 8B 42 08                       -  mov eax,[rdx+08]
"Empyrion.exe"+8C0BF3: 89 81 98 00 00 00              -  mov [rcx+00000098],eax
"Empyrion.exe"+8C0BF9: 48 83 C4 20                    -  add rsp,20
"Empyrion.exe"+8C0BFD: 5B                             -  pop rbx
"Empyrion.exe"+8C0BFE: C3                             -  ret
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>932</ID>
                  <Description>""</Description>
                  <LastState RealAddress="00000000"/>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>teleptr</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>928</ID>
                      <Description>"AOB Teleport"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Array of byte</VariableType>
                      <ByteLength>12</ByteLength>
                      <Address>teleptr</Address>
                      <Offsets>
                        <Offset>50</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>930</ID>
                      <Description>"X"</Description>
                      <VariableType>Float</VariableType>
                      <Address>teleptr</Address>
                      <Offsets>
                        <Offset>50</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>929</ID>
                      <Description>"Z"</Description>
                      <VariableType>Float</VariableType>
                      <Address>teleptr</Address>
                      <Offsets>
                        <Offset>54</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>931</ID>
                      <Description>"Y"</Description>
                      <VariableType>Float</VariableType>
                      <Address>teleptr</Address>
                      <Offsets>
                        <Offset>58</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1010</ID>
              <Description>"Misc"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1194</ID>
                  <Description>""</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1092</ID>
                      <Description>"Don't touch"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>0000FF</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1094</ID>
                          <Description>"Outdated XZY"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>0000FF</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//Current Planet: 48 89 08 48 63 8D B8 FE FF FF 89 48 08 48 8B 46 30 48 8B 40 40
aobscanmodule(SuperSuperScript,Empyrion.exe,F3 41 0F 11 55 10)
alloc(newmem,$1000,SuperSuperScript)

label(code)
label(return)
label(top)
label(allplayers)

newmem:
  push rax
  push rbx
  mov rax,teleptr
  mov rax,[rax]
  add rax,40
  cmp rax,r13
  je code
  or rax,-1
  mov rbx,allplayers
top:
  inc rax
  cmp rax,A
  jge code
  cmp qword ptr [rbx+rax*8],r13
  je code
  cmp qword ptr [rbx+rax*8],0
  jne top
  mov qword ptr [rbx+rax*8],r13
code:
  pop rbx
  pop rax
  movss [r13+10],xmm2
  jmp return

allplayers:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0

SuperSuperScript:
  jmp newmem
  nop
return:
registersymbol(SuperSuperScript)
registersymbol(allplayers)

[DISABLE]
SuperSuperScript:
  db F3 41 0F 11 55 10
unregistersymbol(SuperSuperScript)
unregistersymbol(allplayers)
dealloc(newmem)

</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1105</ID>
                              <Description>"Enable Control+Numpad Hotkeys"</Description>
                              <LastState/>
                              <Color>FF0000</Color>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+0]+10", 12))
end, VK_CONTROL, VK_NUMPAD1)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+8]+10", 12))
end, VK_CONTROL, VK_NUMPAD2)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+10]+10", 12))
end, VK_CONTROL, VK_NUMPAD3)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+18]+10", 12))
end, VK_CONTROL, VK_NUMPAD4)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+20]+10", 12))
end, VK_CONTROL, VK_NUMPAD5)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+28]+10", 12))
end, VK_CONTROL, VK_NUMPAD6)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+30]+10", 12))
end, VK_CONTROL, VK_NUMPAD7)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+38]+10", 12))
end, VK_CONTROL, VK_NUMPAD8)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+40]+10", 12))
end, VK_CONTROL, VK_NUMPAD9)

createHotkey(function()
  writeBytes("[teleptr]+50", readBytes("[allplayers+48]+10", 12))
end, VK_CONTROL, VK_NUMPAD0)

[DISABLE]

</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1095</ID>
                              <Description>"Slot 01"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+0]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1096</ID>
                              <Description>"Slot 02"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+8]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1097</ID>
                              <Description>"Slot 03"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+10]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1098</ID>
                              <Description>"Slot 04"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+18]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1099</ID>
                              <Description>"Slot 05"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+20]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1100</ID>
                              <Description>"Slot 06"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+28]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1101</ID>
                              <Description>"Slot 07"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+30]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1102</ID>
                              <Description>"Slot 08"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+38]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1103</ID>
                              <Description>"Slot 09"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+40]+10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1104</ID>
                              <Description>"Slot 10"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>Array of byte</VariableType>
                              <ByteLength>12</ByteLength>
                              <Address>[allplayers+48]+10</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1165</ID>
                          <Description>"Get Last Death Position"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Empyrion.exe
  Version: 
  Date   : 2016-02-11
  Author : Admin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(lastdeathlocation,Empyrion.exe,48 8B 1A 48 3B DA 0F 84 C2) // should be unique
alloc(newmem,$1000,"Empyrion.exe"+A56F5)
alloc(death_ptr,8)
label(code)
label(return)

newmem:

code:
  mov rbx,[rdx]
  mov [death_ptr],rdx
  cmp rbx,rdx
  jmp return

lastdeathlocation:
  jmp code
  nop
return:
registersymbol(lastdeathlocation)
registersymbol(death_ptr)
[DISABLE]

lastdeathlocation:
  db 48 8B 1A 48 3B DA
unregistersymbol(death_ptr)
unregistersymbol(lastdeathlocation)
dealloc(newmem)
dealloc(death_ptr)
{
// ORIGINAL CODE - INJECTION POINT: "Empyrion.exe"+A56F5

"Empyrion.exe"+A56CF: CC                       -  int 3 
"Empyrion.exe"+A56D0: 48 89 5C 24 10           -  mov [rsp+10],rbx
"Empyrion.exe"+A56D5: 48 89 6C 24 18           -  mov [rsp+18],rbp
"Empyrion.exe"+A56DA: 56                       -  push rsi
"Empyrion.exe"+A56DB: 48 81 EC D0 07 00 00     -  sub rsp,000007D0
"Empyrion.exe"+A56E2: 48 8B F1                 -  mov rsi,rcx
"Empyrion.exe"+A56E5: C6 41 68 01              -  mov byte ptr [rcx+68],01
"Empyrion.exe"+A56E9: E8 02 DF FF FF           -  call Empyrion.exe+A35F0
"Empyrion.exe"+A56EE: 48 8B 56 08              -  mov rdx,[rsi+08]
"Empyrion.exe"+A56F2: 48 8B E8                 -  mov rbp,rax
// ---------- INJECTING HERE ----------
"Empyrion.exe"+A56F5: 48 8B 1A                 -  mov rbx,[rdx]
"Empyrion.exe"+A56F8: 48 3B DA                 -  cmp rbx,rdx
// ---------- DONE INJECTING  ----------
"Empyrion.exe"+A56FB: 0F 84 C2 00 00 00        -  je Empyrion.exe+A57C3
"Empyrion.exe"+A5701: 48 89 BC 24 E0 07 00 00  -  mov [rsp+000007E0],rdi
"Empyrion.exe"+A5709: 0F 1F 80 00 00 00 00     -  nop [rax+00000000]
"Empyrion.exe"+A5710: 48 8D 4B 10              -  lea rcx,[rbx+10]
"Empyrion.exe"+A5714: E8 57 0B 3D 00           -  call Empyrion.exe+476270
"Empyrion.exe"+A5719: 48 8B F8                 -  mov rdi,rax
"Empyrion.exe"+A571C: 8B 88 F8 01 00 00        -  mov ecx,[rax+000001F8]
"Empyrion.exe"+A5722: 85 C9                    -  test ecx,ecx
"Empyrion.exe"+A5724: 74 09                    -  je Empyrion.exe+A572F
"Empyrion.exe"+A5726: E8 95 C5 23 00           -  call Empyrion.exe+2E1CC0
}
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1039</ID>
                          <Description>"Trace it"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Empyrion.exe
  Version: 
  Date   : 2015-12-12
  Author : Admin

  This script does blah blah blah
}

[ENABLE]

aobscan(DDDDDDDDDDD,F3 0F 10 86 F8 00 00 00 F3 0F 5A C0 66 0F 57 C9 F2 0F 5A C9 F2 0F 5A C0 48 83 EC 20) // should be unique
alloc(newmem,$1000,998F9B43)

label(code)
label(return)

newmem:

code:
  movss xmm0,[rsi+000000F8]
  jmp return

DDDDDDDDDDD:
  jmp code
  nop
  nop
  nop
return:
registersymbol(DDDDDDDDDDD)

[DISABLE]

DDDDDDDDDDD:
  db F3 0F 10 86 F8 00 00 00

unregistersymbol(DDDDDDDDDDD)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 998F9B43

998F9B10: 66 0F 57 C9                    -  xorpd xmm1,xmm1
998F9B14: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
998F9B18: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
998F9B1C: 48 83 EC 20                    -  sub rsp,20
998F9B20: 49 BB 30 E7 B7 12 00 00 00 00  -  mov r11,0000000012B7E730
998F9B2A: 41 FF D3                       -  call r11d
998F9B2D: 48 83 C4 20                    -  add rsp,20
998F9B31: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9B35: F2 44 0F 5A F8                 -  cvtsd2ss xmm15,xmm0
998F9B3A: F3 44 0F 11 BD 78 FF FF FF     -  movss [rbp-00000088],xmm15
// ---------- INJECTING HERE ----------
998F9B43: F3 0F 10 86 F8 00 00 00        -  movss xmm0,[rsi+000000F8]
// ---------- DONE INJECTING  ----------
998F9B4B: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
998F9B4F: F2 0F 11 85 58 FF FF FF        -  movsd [rbp-000000A8],xmm0
998F9B57: 48 8B 46 40                    -  mov rax,[rsi+40]
998F9B5B: 48 8B C8                       -  mov rcx,rax
998F9B5E: 48 83 EC 20                    -  sub rsp,20
998F9B62: 48 8B 00                       -  mov rax,[rax]
998F9B65: 90                             -  nop 
998F9B66: 90                             -  nop 
998F9B67: 90                             -  nop 
998F9B68: FF 90 70 05 00 00              -  call qword ptr [rax+00000570]
}
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1027</ID>
                          <Description>"Max Health"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]

aobscan(MaxHealth,F3 0F 10 4E 40 F3 0F 5A C9 F3) // should be unique
alloc(newmem,$1000,200BC5FA)

label(code)
label(return)

newmem:

code:
  movss xmm1,[rsi+40]
  jmp return

MaxHealth:
  jmp code
return:
registersymbol(MaxHealth)

[DISABLE]

MaxHealth:
  db F3 0F 10 4E 40

unregistersymbol(MaxHealth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 200BC5FA

200BC5D3: 74 21                          -  je 200BC5F6
200BC5D5: B8 04 00 00 00                 -  mov eax,00000004
200BC5DA: 83 F8 01                       -  cmp eax,01
200BC5DD: B8 01 00 00 00                 -  mov eax,00000001
200BC5E2: 85 C0                          -  test eax,eax
200BC5E4: F3 0F 10 46 4C                 -  movss xmm0,[rsi+4C]
200BC5E9: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
200BC5ED: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
200BC5F1: E9 3F 00 00 00                 -  jmp 200BC635
200BC5F6: 66 0F 57 C0                    -  xorpd xmm0,xmm0
// ---------- INJECTING HERE ----------
200BC5FA: F3 0F 10 4E 40                 -  movss xmm1,[rsi+40]
// ---------- DONE INJECTING  ----------
200BC5FF: F3 0F 5A C9                    -  cvtss2sd xmm1,xmm1
200BC603: F3 0F 10 56 44                 -  movss xmm2,[rsi+44]
200BC608: F3 0F 5A D2                    -  cvtss2sd xmm2,xmm2
200BC60C: F2 0F 58 CA                    -  addsd xmm1,xmm2
200BC610: F2 0F 5A C9                    -  cvtsd2ss xmm1,xmm1
200BC614: F2 0F 5A C0                    -  cvtsd2ss xmm0,xmm0
200BC618: 48 83 EC 20                    -  sub rsp,20
200BC61C: 49 BB B0 4E 98 07 00 00 00 00  -  mov r11,0000000007984EB0
200BC626: 41 FF D3                       -  call r11d
200BC629: 48 83 C4 20                    -  add rsp,20
}
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1093</ID>
                          <Description>"Positions"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Empyrion.exe
  Version: 
  Date   : 2016-01-01
  Author : Admin

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(GetPositions,Empyrion.exe,F3 41 0F 11 55 10) // should be unique
alloc(newmem,$1000,"Empyrion.exe"+930447)

label(code)
label(return)

newmem:

code:
  movss [r13+10],xmm2
  jmp return

GetPositions:
  jmp code
  nop
return:
registersymbol(GetPositions)

[DISABLE]

GetPositions:
  db F3 41 0F 11 55 10

unregistersymbol(GetPositions)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Empyrion.exe"+930447

"Empyrion.exe"+930413: F3 0F 59 5C 3B 04           -  mulss xmm3,[rbx+rdi+04]
"Empyrion.exe"+930419: F3 0F 59 C0                 -  mulss xmm0,xmm0
"Empyrion.exe"+93041D: 41 0F 28 E0                 -  movaps xmm4,xmm8
"Empyrion.exe"+930421: F3 0F 10 4C 3B 18           -  movss xmm1,[rbx+rdi+18]
"Empyrion.exe"+930427: F3 41 0F 58 55 10           -  addss xmm2,[r13+10]
"Empyrion.exe"+93042D: F3 41 0F 58 5D 14           -  addss xmm3,[r13+14]
"Empyrion.exe"+930433: F3 0F 58 E8                 -  addss xmm5,xmm0
"Empyrion.exe"+930437: F3 0F 59 64 3B 08           -  mulss xmm4,[rbx+rdi+08]
"Empyrion.exe"+93043D: F3 0F 59 C9                 -  mulss xmm1,xmm1
"Empyrion.exe"+930441: F3 41 0F 58 65 18           -  addss xmm4,[r13+18]
// ---------- INJECTING HERE ----------
"Empyrion.exe"+930447: F3 41 0F 11 55 10           -  movss [r13+10],xmm2
// ---------- DONE INJECTING  ----------
"Empyrion.exe"+93044D: F3 41 0F 11 5D 14           -  movss [r13+14],xmm3
"Empyrion.exe"+930453: F3 41 0F 11 65 18           -  movss [r13+18],xmm4
"Empyrion.exe"+930459: F3 0F 58 E9                 -  addss xmm5,xmm1
"Empyrion.exe"+93045D: 8B 04 3B                    -  mov eax,[rbx+rdi]
"Empyrion.exe"+930460: 89 02                       -  mov [rdx],eax
"Empyrion.exe"+930462: 8B 44 3B 04                 -  mov eax,[rbx+rdi+04]
"Empyrion.exe"+930466: 89 42 04                    -  mov [rdx+04],eax
"Empyrion.exe"+930469: 8B 44 3B 08                 -  mov eax,[rbx+rdi+08]
"Empyrion.exe"+93046D: 44 89 52 0C                 -  mov [rdx+0C],r10d
"Empyrion.exe"+930471: F3 0F 51 FD                 -  sqrtss xmm7,xmm5
}
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1193</ID>
                          <Description>"Other people"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : Empyrion.exe
  Version: 
  Date   : 2016-02-15
  Author : Admin

  This script does blah blah blah
}

[ENABLE]

aobscan(peopleonyourplanet,48 89 08 48 63 8D B8 FE FF FF 89 48 08 48 8B 46 30 48 8B 40 40 48 89 85 F0 FC FF FF 48 8D 46 70 48 8B 08 48 89 8D C0 FE FF FF 48 63 40 08) // should be unique
alloc(newmem,$1000,493E370C)

label(code)
label(return)

newmem:

code:
  mov [rax],rcx
  movsxd  rcx,dword ptr [rbp-00000148]
  jmp return

peopleonyourplanet:
  jmp code
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(peopleonyourplanet)

[DISABLE]

peopleonyourplanet:
  db 48 89 08 48 63 8D B8 FE FF FF

unregistersymbol(peopleonyourplanet)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 493E370C

493E36DA: 48 89 88 80 00 00 00           -  mov [rax+00000080],rcx
493E36E1: 48 8B 46 28                    -  mov rax,[rsi+28]
493E36E5: 48 8B 40 40                    -  mov rax,[rax+40]
493E36E9: 48 8D 4E 70                    -  lea rcx,[rsi+70]
493E36ED: 48 8B 11                       -  mov rdx,[rcx]
493E36F0: 48 89 95 B0 FE FF FF           -  mov [rbp-00000150],rdx
493E36F7: 48 63 49 08                    -  movsxd  rcx,dword ptr [rcx+08]
493E36FB: 89 8D B8 FE FF FF              -  mov [rbp-00000148],ecx
493E3701: 48 83 C0 38                    -  add rax,38
493E3705: 48 8B 8D B0 FE FF FF           -  mov rcx,[rbp-00000150]
// ---------- INJECTING HERE ----------
493E370C: 48 89 08                       -  mov [rax],rcx
493E370F: 48 63 8D B8 FE FF FF           -  movsxd  rcx,dword ptr [rbp-00000148]
// ---------- DONE INJECTING  ----------
493E3716: 89 48 08                       -  mov [rax+08],ecx
493E3719: 48 8B 46 30                    -  mov rax,[rsi+30]
493E371D: 48 8B 40 40                    -  mov rax,[rax+40]
493E3721: 48 89 85 F0 FC FF FF           -  mov [rbp-00000310],rax
493E3728: 48 8D 46 70                    -  lea rax,[rsi+70]
493E372C: 48 8B 08                       -  mov rcx,[rax]
493E372F: 48 89 8D C0 FE FF FF           -  mov [rbp-00000140],rcx
493E3736: 48 63 40 08                    -  movsxd  rax,dword ptr [rax+08]
493E373A: 89 85 C8 FE FF FF              -  mov [rbp-00000138],eax
493E3740: F3 0F 10 05 78 01 00 00        -  movss xmm0,[493E38C0]
}
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>bonefirst</Name>
      <Address>7FFEB3BBD94</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>name1</Name>
      <Address>7FFEAE7B4F3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bullet_param</Name>
      <Address>7FFEAE4F5D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MoveOpcode1</Name>
      <Address>13F397119</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MoveOpcode2</Name>
      <Address>13F397121</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>independ</Name>
      <Address>CC5DA4C218</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nokickaddress</Name>
      <Address>CC5DA40410</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wintherclothes</Name>
      <Address>E19F3CE060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>imbored</Name>
      <Address>7FF7A4C71E0D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GettingPointer</Name>
      <Address>7FF7A4C71E26</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SkipLegal</Name>
      <Address>13FEB8B83</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetPTR</Name>
      <Address>140561E29</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>get_ptr</Name>
      <Address>13F39BC9F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem2</Name>
      <Address>06770020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem1</Name>
      <Address>07510000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem5</Name>
      <Address>05EF0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem4</Name>
      <Address>05FE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stone</Name>
      <Address>7FFEDBCBD48</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bongregion</Name>
      <Address>7FFEDC5A03C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>chrph</Name>
      <Address>7FFED6B7004</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healingdaggeraob</Name>
      <Address>7FFEDDDD374</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Imported3</Name>
      <Address>7FFEDBBFEF4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetOnlineBase</Name>
      <Address>13FF41817</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>LockOnParamMemoryRegion</Name>
      <Address>7FFEDBDA24C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>REWR</Name>
      <Address>7FFEDC6E220</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CarPrayerAOB</Name>
      <Address>7FFECC045B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DisableGravityDeathAOB</Name>
      <Address>13F5CC01E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>banditaob</Name>
      <Address>7FFEDDDD4BC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>morningstaraob</Name>
      <Address>7FFEDDE1C28</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem6</Name>
      <Address>05EF0040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CCRE</Name>
      <Address>7FFEDBBC3E4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addressB</Name>
      <Address>062A0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NoHollow</Name>
      <Address>13FE25196</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addressR</Name>
      <Address>05C20000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PreventSoulLost</Name>
      <Address>1400462D6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>soulswriteaob</Name>
      <Address>13FC562D6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ArenaItemsAOB</Name>
      <Address>13FA078C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>myaob</Name>
      <Address>140CEB8D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>myaob2</Name>
      <Address>140CEDCD8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>statuseffect01</Name>
      <Address>13FAB3D88</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>warmthp</Name>
      <Address>7FFEB5E8E8C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>look</Name>
      <Address>13F359703</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bulletregion01</Name>
      <Address>7FFEAE53ADC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>effectregion01</Name>
      <Address>7FFEB46BDC0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NameCrashProtectionAOB</Name>
      <Address>140F8A63B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>facestabmytha01</Name>
      <Address>7FFEB5A0E66</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>snipermytha01</Name>
      <Address>7FFEB5DD514</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NoclipAOB</Name>
      <Address>1402C8D04</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>target_inj</Name>
      <Address>140405FA2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTarget</Name>
      <Address>05FA0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>soundSpecialEquipmentParam</Name>
      <Address>7FFEB50822C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ChugChug</Name>
      <Address>13F71A952</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>yearnlights</Name>
      <Address>7FFEAE6DB78</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addressip</Name>
      <Address>05EF0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NoInventoryStandingStateAOB</Name>
      <Address>13FD36846</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lockregion</Name>
      <Address>7FFEB3DA24C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>attunement_inj</Name>
      <Address>13F250998</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAttune1</Name>
      <Address>060D0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAttune2</Name>
      <Address>060D0008</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addressE</Name>
      <Address>06770020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>effect0</Name>
      <Address>7FFEB4BDB10</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>RingDurabilityAOB</Name>
      <Address>1401754CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>backstablock01</Name>
      <Address>7FFEB55D170</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addresshp</Name>
      <Address>05EF0040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hdp</Name>
      <Address>7FFEB494694</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CopyOpponentsData</Name>
      <Address>141B84665</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mosseffect01</Name>
      <Address>7FFEB509144</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mosseffect02</Name>
      <Address>7FFEB3CE258</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FreezeEffectsAOB</Name>
      <Address>13F9BD92F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DisableCheckForAntiBackGearAOB</Name>
      <Address>13FBC608A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addressw</Name>
      <Address>05FE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>atk</Name>
      <Address>7FFEB5AB8C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemswap</Name>
      <Address>13F6D0642</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>address</Name>
      <Address>07510000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bullet0</Name>
      <Address>7FFEB095393</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetStatus</Name>
      <Address>1400B6E46</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BscPTR</Name>
      <Address>13FDC008C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetCoop</Name>
      <Address>140061B16</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetBase</Name>
      <Address>1401DE400</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DisableFallDamageAOB</Name>
      <Address>14015C078</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteItemsAOB</Name>
      <Address>13FF9BB5D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>LockCameraStateAOB</Name>
      <Address>14027E9D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NoDeathFromGravity</Name>
      <Address>14015C0DE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NoItemsRestriction</Name>
      <Address>13FF978C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>StatusEffectImmunity</Name>
      <Address>13FF33777</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>advdmgfilter</Name>
      <Address>13FF5727A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>customscript32</Name>
      <Address>140A17643</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>equipload2</Name>
      <Address>1401315E3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>equipload1</Name>
      <Address>14013435E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteStaminaAOB</Name>
      <Address>14011D2EE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteSpellsAOB</Name>
      <Address>13FF9B790</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>WeaponDurabilityAOB</Name>
      <Address>14013516D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GearDurability</Name>
      <Address>1401322EA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteDurabilityAOB</Name>
      <Address>13FF9A6BE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>new</Name>
      <Address>13FD71169</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fuckeleonunlimitedammo</Name>
      <Address>119E2B06</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>QuickSlotItems</Name>
      <Address>81127B5B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedJetPack</Name>
      <Address>70537F1A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Consumables5</Name>
      <Address>0F14710B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>314545</Name>
      <Address>2009C007</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedItems13</Name>
      <Address>46E892CB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Clip5</Name>
      <Address>E9207C0E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FastCraftforBluePrints</Name>
      <Address>AB166BF5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player</Name>
      <Address>A6AD3DE8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player_ptr</Name>
      <Address>A6BC001D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Teleport502</Name>
      <Address>1407B0B53</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
