<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Health &amp; Stasis"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pHero)
registersymbol(pHero)
label(bInfStasisSwitch)
registersymbol(bInfStasisSwitch)

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp dword ptr [ecx+f4],(float)40.0
jl originalcode2
mov [pHero],ecx

cmp byte ptr [bInfStasisSwitch],1
jne originalcode2
cmp dword ptr [ecx+f0],(float)20.0
jge originalcode2
mov dword ptr [ecx+f0],(float)20.0

originalcode2:
popfd
comiss xmm0,[ecx+000000E8]

exit2:
jmp returnhere2

"deadspace2.exe"+B55C7D:
jmp newmem2
nop
nop
returnhere2:

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp dword ptr [eax+f4],(float)40.0
jl originalcode
mov [pHero],eax

cmp byte ptr [bInfStasisSwitch],1
jne originalcode
cmp dword ptr [eax+f0],(float)20.0
jge originalcode
mov dword ptr [eax+f0],(float)20.0

originalcode:
popfd
fld dword ptr [eax+000000E4]

exit:
jmp returnhere

///
pHero:
dd 0
bInfStasisSwitch:
db 1
///

"deadspace2.exe"+4A78C5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"deadspace2.exe"+B55C7D:
comiss xmm0,[ecx+000000E8]
//Alt: db 0F 2F 81 E8 00 00 00
dealloc(newmem)
"deadspace2.exe"+4A78C5:
//Alt: fld dword ptr [eax+000000E4]
db D9 80 E4 00 00 00
unregistersymbol(pHero)
unregistersymbol(bInfStasisSwitch)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Undead"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [edi+000000E8],xmm0

pushfd
cmp [pHero],edi
jne originalcode
cmp dword ptr [edi+000000E8],(float)1.0
jge originalcode
mov dword ptr [edi+000000E8],(float)1.0
movss xmm0,[edi+000000E8]

originalcode:
popfd
//movss [edi+000000E8],xmm0

exit:
jmp returnhere

"deadspace2.exe"+B84D5C:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"deadspace2.exe"+B84D5C:
db F3 0F 11 87 E8 00 00 00
//Alt: movss [edi+000000E8],xmm0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>113</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Inf. Stasis Switch"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>bInfStasisSwitch</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>E8</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>6</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>E4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Bar"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>EC</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Stasis"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>F0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>10</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>F4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Oxygen"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pOxygen)
registersymbol(pOxygen)
label(bInfOxygenSwitch)
registersymbol(bInfOxygenSwitch)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pOxygen],esi
cmp byte ptr [bInfOxygenSwitch],1
jne originalcode
cmp dword ptr [esi+74],(float)40.0
jge originalcode
mov dword ptr [esi+74],(float)40.0

originalcode:
comiss xmm0,[esi+74]
xorps xmm1,xmm1

exit:
jmp returnhere

///
pOxygen:
dd 0
bInfOxygenSwitch:
db 1
///

"deadspace2.exe"+496998:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"deadspace2.exe"+496998:
db 0F 2F 46 74 0F 57 C9
//Alt: comiss xmm0,[esi+74]
//Alt: xorps xmm1,xmm1
unregistersymbol(pOxygen)
unregistersymbol(bInfOxygenSwitch)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Inf. Oxygen Switch"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>bInfOxygenSwitch</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Amount"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pOxygen</Address>
          <Offsets>
            <Offset>74</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>27</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pOxygen</Address>
              <Offsets>
                <Offset>70</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Inf. Ammo"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pAmmoClip)
registersymbol(pAmmoClip)
label(vMaxGunClip)
registersymbol(vMaxGunClip)

alloc(newmem17,2048) //2kb should be enough
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[edx+000003E4]
mov [vMaxGunClip],eax

originalcode17:
//mov eax,[edx+000003E4]

exit17:
jmp returnhere17

alloc(newmem11,2048) //2kb should be enough
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+00000260],edi

pushfd
mov edi,[pAmmoClip]
cmp [esp+1C],edi
jne originalcode11
cmp [esi+00000260],#10
jge originalcode11
mov [esi+00000260],#10

originalcode11:
popfd
//mov [esi+00000260],edi

exit11:
jmp returnhere11

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)
label(setPulseRifle6)
label(setRivetGun6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+0000039C],00000001

mov eax,[vMaxGunClip]
cmp eax,00000010
je setRivetGun6
cmp eax,00000012
je setRivetGun6
cmp eax,00000014
je setRivetGun6
cmp eax,00000016
je setRivetGun6
cmp eax,00000018
je setRivetGun6
cmp eax,00000032
je setPulseRifle6
cmp eax,0000004B
je setPulseRifle6
cmp eax,00000064
je setPulseRifle6
cmp eax,0000007D
je setPulseRifle6
cmp eax,00000096
je setPulseRifle6
cmp eax,000000AF
je setPulseRifle6
jmp originalcode6

setRivetGun6:
mov [esi+0000039C],5
jmp originalcode6

setPulseRifle6:
mov [esi+0000039C],#25
jmp originalcode6

originalcode6:
//mov [esi+0000039C],00000000

exit6:
jmp returnhere6

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
label(setPulseRifle2)
label(setRivetGun2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
cmp [pAmmoClip],esi
jne originalcode2

mov [esi+0000039C],ebp
mov ecx,[vMaxGunClip]

cmp ecx,00000010
je setRivetGun2
cmp ecx,00000012
je setRivetGun2
cmp ecx,00000014
je setRivetGun2
cmp ecx,00000016
je setRivetGun2
cmp ecx,00000018
je setRivetGun2
cmp ecx,00000032
je setPulseRifle2
cmp ecx,0000004B
je setPulseRifle2
cmp ecx,00000064
je setPulseRifle2
cmp ecx,0000007D
je setPulseRifle2
cmp ecx,00000096
je setPulseRifle2
cmp ecx,000000AF
je setPulseRifle2

cmp [esi+0000039C],1
jge originalcode2
mov [esi+0000039C],1
mov ebp,[esi+0000039C]
jmp originalcode2

setRivetGun2:
cmp [esi+0000039C],#5
jge originalcode2
mov [esi+0000039C],#5
mov ebp,[esi+0000039C]
jmp originalcode2

setPulseRifle2:
cmp [esi+0000039C],#25
jge originalcode2
mov [esi+0000039C],#25
mov ebp,[esi+0000039C]
jmp originalcode2


originalcode2:
pop ecx
//mov [esi+0000039C],ebp

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAmmoClip],ecx

originalcode:
mov edx,[ecx+0000039C]

exit:
jmp returnhere

///
pAmmoClip:
dd 0
vMaxGunClip:
dd 0
///

"deadspace2.exe"+48C401:
jmp newmem17
nop
returnhere17:

"deadspace2.exe"+9A8C43:
jmp newmem11
nop
returnhere11:

"deadspace2.exe"+9BAF5F:
jmp newmem6
nop
nop
nop
nop
nop
returnhere6:

"deadspace2.exe"+9BAF57:
jmp newmem2
nop
returnhere2:

"deadspace2.exe"+9B0DE4:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
"deadspace2.exe"+48C401:
db 8B 82 E4 03 00 00
//Alt: mov eax,[edx+000003E4]
dealloc(newmem11)
"deadspace2.exe"+9A8C43:
db 89 BE 60 02 00 00
//Alt: mov [esi+00000260],edi
dealloc(newmem6)
"deadspace2.exe"+9BAF5F:
db C7 86 9C 03 00 00 00 00 00 00
//Alt: mov [esi+0000039C],00000000
dealloc(newmem2)
"deadspace2.exe"+9BAF57:
db 89 AE 9C 03 00 00
//Alt: mov [esi+0000039C],ebp
dealloc(newmem)
"deadspace2.exe"+9B0DE4:
db 8B 91 9C 03 00 00
//Alt: mov edx,[ecx+0000039C]
unregistersymbol(pAmmoClip)
unregistersymbol(vMaxGunClip)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Ammo Control (one slot for each ammo type only)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp ecx,1
je originalcode
cmp ecx,3
je originalcode
mov edx,ecx
sub edx,edi
cmp [esi+00000260],edx
jle originalcode
mov [esi+00000260],edx

originalcode:
mov edx,[esi+00000260]

exit:
jmp returnhere

"deadspace2.exe"+9ECA88:
jmp newmem
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"deadspace2.exe"+9ECA88:
db 8B 96 60 02 00 00
//Alt: mov edx,[esi+00000260]
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>113</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"Max Reload (reload to max regardless of remaining ammo)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pAmmoClip],esi
jne originalcode
mov [esi+0000039C],ecx
jmp exit

originalcode:
mov [esi+0000039C],eax

exit:
jmp returnhere

"deadspace2.exe"+9A7129:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"deadspace2.exe"+9A7129:
db 89 86 9C 03 00 00
//Alt: mov [esi+0000039C],eax
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>113</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Ammo"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pAmmoClip</Address>
          <Offsets>
            <Offset>39C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Credits"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pCredits)
registersymbol(pCredits)

alloc(newmem11,2048) //2kb should be enough
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCredits],ecx

originalcode11:
cmp eax,[ecx+00000BF8]

exit11:
jmp returnhere11

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCredits],ecx

originalcode6:
mov edx,[ecx+00000BF8]

exit6:
jmp returnhere6

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCredits],eax

originalcode2:
mov edx,[eax+00000BF8]

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCredits],eax

originalcode:
mov ecx,[eax+00000BF8]

exit:
jmp returnhere

///
pCredits:
dd 0
///

"deadspace2.exe"+A9FB9D:
jmp newmem11
nop
returnhere11:

"deadspace2.exe"+AD5ADD:
jmp newmem6
nop
returnhere6:

"deadspace2.exe"+AB3805:
jmp newmem2
nop
returnhere2:

"deadspace2.exe"+49014A:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
"deadspace2.exe"+A9FB9D:
db 3B 81 F8 0B 00 00
//Alt: cmp eax,[ecx+00000BF8]
dealloc(newmem6)
"deadspace2.exe"+AD5ADD:
db 8B 91 F8 0B 00 00
//Alt: mov edx,[ecx+00000BF8]
dealloc(newmem2)
"deadspace2.exe"+AB3805:
db 8B 90 F8 0B 00 00
//Alt: mov edx,[eax+00000BF8]
dealloc(newmem)
"deadspace2.exe"+49014A:
db 8B 88 F8 0B 00 00
//Alt: mov ecx,[eax+00000BF8]
unregistersymbol(pCredits)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Inf. Credits"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[pCredits]
add eax,bf8
sub eax,28
cmp ecx,eax
mov eax,[ecx+28]
jne originalcode
cmp esi,0
jge exit

originalcode:
sub eax,esi
//mov [ecx+28],eax

exit:
mov [ecx+28],eax
jmp returnhere

"deadspace2.exe"+9CDB7F:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"deadspace2.exe"+9CDB7F:
db 2B C6 89 41 28
//Alt: sub eax,esi
//Alt: mov [ecx+28],eax
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>113</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Amount"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pCredits</Address>
          <Offsets>
            <Offset>BF8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Power Nodes"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pNodes)
registersymbol(pNodes)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pNodes],ecx

originalcode:
mov eax,[ecx+0000042C]

exit:
jmp returnhere

///
pNodes:
dd 0
///

"deadspace2.exe"+4A7930:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"deadspace2.exe"+4A7930:
db 8B 81 2C 04 00 00
//Alt: mov eax,[ecx+0000042C]
unregistersymbol(pNodes)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Inf. Power Nodes"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pNodes],ecx
jne originalcode
cmp [ecx+0000042C],eax
jl originalcode
mov eax,[ecx+0000042C]
mov [esp+04],eax

originalcode:
mov [ecx+0000042C],eax

exit:
jmp returnhere

"deadspace2.exe"+4A7944:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"deadspace2.exe"+4A7944:
db 89 81 2C 04 00 00
//Alt: mov [ecx+0000042C],eax
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>113</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Quantity"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pNodes</Address>
          <Offsets>
            <Offset>42C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Items"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(pItem,2048)
registersymbol(pItem)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pItem+edx*4],eax

originalcode:
mov ecx,[eax+00000260]

exit:
jmp returnhere

"deadspace2.exe"+48FA32:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"deadspace2.exe"+48FA32:
db 8B 88 60 02 00 00
//Alt: mov ecx,[eax+00000260]
unregistersymbol(pItem)
dealloc(pItem)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>56</ID>
          <Description>"set ALL items' stack size to..."</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(vCustomMaxStack)
registersymbol(vCustomMaxStack)

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
mov ebx,[vCustomMaxStack]
mov [ecx+000000B0],ebx
pop ebx

originalcode2:
mov ecx,[ecx+000000B0]

exit2:
jmp returnhere2

"deadspace2.exe"+9A8DBA:
jmp newmem2
nop
returnhere2:

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ebp,[vCustomMaxStack]
mov [ecx+000000B0],ebp

originalcode:
mov ecx,[ecx+000000B0]

exit:
jmp returnhere

///
vCustomMaxStack:
dd #800

"deadspace2.exe"+9ECA82:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"deadspace2.exe"+9A8DBA:
mov ecx,[ecx+000000B0]
//Alt: db 8B 89 B0 00 00 00
dealloc(newmem)
"deadspace2.exe"+9ECA82:
db 8B 89 B0 00 00 00
//Alt: mov ecx,[ecx+000000B0]
unregistersymbol(vCustomMaxStack)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>113</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>59</ID>
              <Description>"this value"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>vCustomMaxStack</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"Slots"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>34</ID>
              <Description>"Slot 1-1"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>35</ID>
              <Description>"Slot 1-2"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+4</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>36</ID>
              <Description>"Slot 1-3"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+8</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"Slot 1-4"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+c</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Slot 1-5"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+10</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"Slot 2-1"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+14</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>40</ID>
              <Description>"Slot 2-2"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+18</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>41</ID>
              <Description>"Slot 2-3"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+1c</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>42</ID>
              <Description>"Slot 2-4"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+20</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>43</ID>
              <Description>"Slot 2-5"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+24</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>44</ID>
              <Description>"Slot 3-1"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+28</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"Slot 3-2"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+2c</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>46</ID>
              <Description>"Slot 3-3"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+30</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>47</ID>
              <Description>"Slot 3-4"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+34</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>48</ID>
              <Description>"Slot 3-5"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+38</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>49</ID>
              <Description>"Slot 4-1"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+3C</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"Slot 4-2"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+40</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>51</ID>
              <Description>"Slot 4-3"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+44</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>52</ID>
              <Description>"Slot 4-4"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+48</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>53</ID>
              <Description>"Slot 4-5"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem+4C</Address>
              <Offsets>
                <Offset>260</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>57</ID>
      <Description>"[old / testing]"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Ammo Control V2 (set ALL items' stack size to 80)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,#80

originalcode:
mov edx,[esi+00000260]

exit:
jmp returnhere

"deadspace2.exe"+9ECA88:
jmp newmem
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"deadspace2.exe"+9ECA88:
db 8B 96 60 02 00 00
//Alt: mov edx,[esi+00000260]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>10B307D4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>10F9C948</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>10F9C980</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>10F9CF44</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>111BBD70</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>111BBD90</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>111D8160</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1188D9F0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1188DED8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1C9FB074</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1C9FB5B8</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>0FFF084A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfStasisSwitch</Name>
      <Address>0FFF084E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pOxygen</Name>
      <Address>11EC0033</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfOxygenSwitch</Name>
      <Address>11EC0037</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCredits</Name>
      <Address>137F1811</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pNodes</Name>
      <Address>13800011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vCustomMaxStack</Name>
      <Address>14DA0817</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoClip</Name>
      <Address>07632011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vMaxGunClip</Name>
      <Address>07632015</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>- scripts have NO AOB scan, tested only on FLT update1.
- ammo control info
edi	ground
edx	owned
ecx	stack size
</Comments>
</CheatTable>
