<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="13">
  <CheatEntries>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Infinite Time"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//fsubr dword ptr [esi+48]
fld dword ptr [esi+44]
fst dword ptr [esi+48]

exit:
jmp returnhere

"4 Elements.exe"+D3B57:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"4 Elements.exe"+D3B57:
fsubr dword ptr [esi+48]
fst dword ptr [esi+48]
//Alt: db D8 6E 48 D9 56 48
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"Always Power Up"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov byte ptr [esi+20],1
mov al,[esi+20]
test al,al

exit:
jmp returnhere

"4 Elements.exe"+961C0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"4 Elements.exe"+961C0:
mov al,[esi+20]
test al,al
//Alt: db 8A 46 20 84 C0
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>46</ID>
      <Description>"Instant Hint"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

//*********************
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
alloc(zero,4)
zero:
dd 0
newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
fstp st
fld dword ptr [zero]
fst dword ptr [esi+000002D4]

exit2:
jmp returnhere2

"4 Elements.exe"+2C2A2:
jmp newmem2
nop
returnhere2:

//************
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fstp st
fld dword ptr [zero]
fst dword ptr [esi+000001E4]

exit:
jmp returnhere

"4 Elements.exe"+19BE9D:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"4 Elements.exe"+19BE9D:
fst dword ptr [esi+000001E4]
//Alt: db D9 96 E4 01 00 00

dealloc(newmem2)
"4 Elements.exe"+2C2A2:
fst dword ptr [esi+000002D4]
//Alt: db D9 96 D4 02 00 00
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>32</Key>
          </Keys>
          <Description>instant hint</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>openProcess([[4 Elements.exe]])
addresslist = getAddressList()
description= [[Instant Hint]]
memoryrec = addresslist_getMemoryRecordByDescription(addresslist, description)
local t=createTimer(nil)
function stopping()
if memoryrecord_isActive(memoryrec) then
memoryrecord_unfreeze(memoryrec)
end
end


function beeping(memoryrecord, before, currentstate)



  timer_onTimer(t, stopping)
  timer_setInterval(t,1000) --really short wait (setting the speed on open won't work)
  timer_setEnabled(t, true)

return true

end

memoryrecord_onActivate(memoryrec, beeping)

describeA = [[Infinite Time]]
describeC = [[Always Power Up]]


memoryA=addresslist_getMemoryRecordByDescription(addresslist, describeA)
memoryC=addresslist_getMemoryRecordByDescription(addresslist, describeC)

memoryrecord_freeze(memoryA)
memoryrecord_freeze(memoryC)
</LuaScript>
</CheatTable>
