<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>121630</ID>
      <Description>"Stuff I want Enabled"</Description>
      <Options moHideChildren="1" moBindActivation="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>121628</ID>
          <Description>"No SP Cost"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
//aobscanmodule(NoSPCost,FairyFencer.exe,89 4A 08 8B 80 1C 01 00 00) // should be unique
aobscan(NoSPCost,89 4A 08 8B 80 1C 01 00 00)
alloc(newmem,2048)

label(code)
label(return)

newmem:

code:
  //mov [edx+08],ecx
  mov eax,[eax+0000011C]
  jmp return

NoSPCost:
  jmp code
  nop
  nop
  nop
  nop
return:
registersymbol(NoSPCost)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
NoSPCost:
  db 89 4A 08 8B 80 1C 01 00 00

unregistersymbol(NoSPCost)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FairyFencer.exe"+20BFB

"FairyFencer.exe"+20BDD: EB 11                          -  jmp FairyFencer.exe+20BF0
"FairyFencer.exe"+20BDF: F6 06 04                       -  test byte ptr [esi],04
"FairyFencer.exe"+20BE2: 74 0C                          -  je FairyFencer.exe+20BF0
"FairyFencer.exe"+20BE4: 3D 0F 27 00 00                 -  cmp eax,0000270F
"FairyFencer.exe"+20BE9: 7E 05                          -  jle FairyFencer.exe+20BF0
"FairyFencer.exe"+20BEB: B8 0F 27 00 00                 -  mov eax,0000270F
"FairyFencer.exe"+20BF0: 3B C8                          -  cmp ecx,eax
"FairyFencer.exe"+20BF2: 76 02                          -  jna FairyFencer.exe+20BF6
"FairyFencer.exe"+20BF4: 8B C8                          -  mov ecx,eax
"FairyFencer.exe"+20BF6: A1 7C 0A D2 00                 -  mov eax,[FairyFencer.exe+370A7C]
// ---------- INJECTING HERE ----------
"FairyFencer.exe"+20BFB: 89 4A 08                       -  mov [edx+08],ecx
"FairyFencer.exe"+20BFE: 8B 80 1C 01 00 00              -  mov eax,[eax+0000011C]
// ---------- DONE INJECTING  ----------
"FairyFencer.exe"+20C04: 8B 55 08                       -  mov edx,[ebp+08]
"FairyFencer.exe"+20C07: 0F B7 4A 10                    -  movzx ecx,word ptr [edx+10]
"FairyFencer.exe"+20C0B: 83 F8 08                       -  cmp eax,08
"FairyFencer.exe"+20C0E: 74 05                          -  je FairyFencer.exe+20C15
"FairyFencer.exe"+20C10: 83 F8 07                       -  cmp eax,07
"FairyFencer.exe"+20C13: 75 13                          -  jne FairyFencer.exe+20C28
"FairyFencer.exe"+20C15: A1 68 0A D2 00                 -  mov eax,[FairyFencer.exe+370A68]
"FairyFencer.exe"+20C1A: F7 80 1C B0 02 00 00 02 00 00  -  test [eax+0002B01C],0200
"FairyFencer.exe"+20C24: 74 02                          -  je FairyFencer.exe+20C28
"FairyFencer.exe"+20C26: 03 C9                          -  add ecx,ecx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>121862</ID>
          <Description>"Tension is set to 999 if lower than 1000"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]


aobscan(tension_aob,8B 01 8B 51 04 5B) // should be unique
alloc(newmem,2048)
alloc(settension,2048)

label(code)
label(return)

settension:
mov [ecx+10], #999
jmp code

newmem:
cmp [ecx+10],#999
jl settension

//jmp return
code:
  db 8B 01 8B 51 04
  //mov eax,[ecx]
  //mov edx,[ecx+04]
  jmp return

tension_aob:
  jmp newmem
return:
registersymbol(tension_aob)

[DISABLE]

tension_aob:
  db 8B 01 8B 51 04

unregistersymbol(tension_aob)
dealloc(newmem)
dealloc(settension)

{
// ORIGINAL CODE - INJECTION POINT: "FairyFencer.exe"+22AC8

"FairyFencer.exe"+22AAA: 0F AF C7              -  imul eax,edi
"FairyFencer.exe"+22AAD: 5F                    -  pop edi
"FairyFencer.exe"+22AAE: 85 C0                 -  test eax,eax
"FairyFencer.exe"+22AB0: 74 1D                 -  je FairyFencer.exe+22ACF
"FairyFencer.exe"+22AB2: 83 F8 10              -  cmp eax,10
"FairyFencer.exe"+22AB5: 77 18                 -  ja FairyFencer.exe+22ACF
"FairyFencer.exe"+22AB7: 69 C0 F0 00 00 00     -  imul eax,eax,000000F0
"FairyFencer.exe"+22ABD: 8D 8C 18 08 11 00 00  -  lea ecx,[eax+ebx+00001108]
"FairyFencer.exe"+22AC4: 85 C9                 -  test ecx,ecx
"FairyFencer.exe"+22AC6: 74 07                 -  je FairyFencer.exe+22ACF
// ---------- INJECTING HERE ----------
"FairyFencer.exe"+22AC8: 8B 01                 -  mov eax,[ecx]
"FairyFencer.exe"+22ACA: 8B 51 04              -  mov edx,[ecx+04]
// ---------- DONE INJECTING  ----------
"FairyFencer.exe"+22ACD: 5B                    -  pop ebx
"FairyFencer.exe"+22ACE: C3                    -  ret 
"FairyFencer.exe"+22ACF: 8B 46 18              -  mov eax,[esi+18]
"FairyFencer.exe"+22AD2: 8B 56 1C              -  mov edx,[esi+1C]
"FairyFencer.exe"+22AD5: 5B                    -  pop ebx
"FairyFencer.exe"+22AD6: C3                    -  ret 
"FairyFencer.exe"+22AD7: CC                    -  int 3 
"FairyFencer.exe"+22AD8: CC                    -  int 3 
"FairyFencer.exe"+22AD9: CC                    -  int 3 
"FairyFencer.exe"+22ADA: CC                    -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>121873</ID>
          <Description>"Item Found set to 99 for each (treasure crystals)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

//aobscanmodule(itemfound_aob,FairyFencer.exe,8B 50 04 89 57 04) // should be unique
aobscan(itemfound_aob,8B 50 04 89 57 04 46) // should be unique
alloc(newmem,2048)

label(code)
label(return)

newmem:

code:
  //mov edx,[eax+04]
  mov edx,#99
  mov [edi+04],edx
  jmp return

itemfound_aob:
  jmp code
  nop
return:
registersymbol(itemfound_aob)

[DISABLE]

itemfound_aob:
  db 8B 50 04 89 57 04

unregistersymbol(itemfound_aob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FairyFencer.exe"+152F18

"FairyFencer.exe"+152EFD: 74 4F                 -  je FairyFencer.exe+152F4E
"FairyFencer.exe"+152EFF: 8B 4B 04              -  mov ecx,[ebx+04]
"FairyFencer.exe"+152F02: 85 C9                 -  test ecx,ecx
"FairyFencer.exe"+152F04: 74 48                 -  je FairyFencer.exe+152F4E
"FairyFencer.exe"+152F06: 8D 43 08              -  lea eax,[ebx+08]
"FairyFencer.exe"+152F09: 8D A4 24 00 00 00 00  -  lea esp,[esp+00000000]
"FairyFencer.exe"+152F10: 3B F1                 -  cmp esi,ecx
"FairyFencer.exe"+152F12: 73 16                 -  jae FairyFencer.exe+152F2A
"FairyFencer.exe"+152F14: 8B 10                 -  mov edx,[eax]
"FairyFencer.exe"+152F16: 89 17                 -  mov [edi],edx
// ---------- INJECTING HERE ----------
"FairyFencer.exe"+152F18: 8B 50 04              -  mov edx,[eax+04]
"FairyFencer.exe"+152F1B: 89 57 04              -  mov [edi+04],edx
// ---------- DONE INJECTING  ----------
"FairyFencer.exe"+152F1E: 46                    -  inc esi
"FairyFencer.exe"+152F1F: 83 C0 08              -  add eax,08
"FairyFencer.exe"+152F22: 83 C7 08              -  add edi,08
"FairyFencer.exe"+152F25: 83 FE 03              -  cmp esi,03
"FairyFencer.exe"+152F28: 72 E6                 -  jb FairyFencer.exe+152F10
"FairyFencer.exe"+152F2A: 8B 45 08              -  mov eax,[ebp+08]
"FairyFencer.exe"+152F2D: 8B 40 08              -  mov eax,[eax+08]
"FairyFencer.exe"+152F30: 85 C0                 -  test eax,eax
"FairyFencer.exe"+152F32: 74 13                 -  je FairyFencer.exe+152F47
"FairyFencer.exe"+152F34: 8B 0D 90 2A 46 00     -  mov ecx,[FairyFencer.exe+372A90]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>121635</ID>
          <Description>"Item Drop set to 99 for each"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(dropitem_1_aob,FairyFencer.exe,8B 72 04 89 75 F4) // should be unique
alloc(newmem,2048)

label(code)
label(return)

newmem:

code:
  mov esi,[edx+04]
  //imul esi,esi,20
  mov esi,#99
  mov [ebp-0C],esi
  jmp return

dropitem_1_aob:
  jmp code
  nop
return:
registersymbol(dropitem_1_aob)

[DISABLE]

dropitem_1_aob:
  db 8B 72 04 89 75 F4

unregistersymbol(dropitem_1_aob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FairyFencer.exe"+116AD7

"FairyFencer.exe"+116ABB: 89 45 F0              -  mov [ebp-10],eax
"FairyFencer.exe"+116ABE: 89 4D EC              -  mov [ebp-14],ecx
"FairyFencer.exe"+116AC1: 85 C0                 -  test eax,eax
"FairyFencer.exe"+116AC3: 0F 84 C9 00 00 00     -  je FairyFencer.exe+116B92
"FairyFencer.exe"+116AC9: 8D 56 20              -  lea edx,[esi+20]
"FairyFencer.exe"+116ACC: 89 55 E4              -  mov [ebp-1C],edx
"FairyFencer.exe"+116ACF: 90                    -  nop 
"FairyFencer.exe"+116AD0: 8B 46 1C              -  mov eax,[esi+1C]
"FairyFencer.exe"+116AD3: 3B C8                 -  cmp ecx,eax
"FairyFencer.exe"+116AD5: 73 08                 -  jae FairyFencer.exe+116ADF
// ---------- INJECTING HERE ----------
"FairyFencer.exe"+116AD7: 8B 72 04              -  mov esi,[edx+04]
"FairyFencer.exe"+116ADA: 89 75 F4              -  mov [ebp-0C],esi
// ---------- DONE INJECTING  ----------
"FairyFencer.exe"+116ADD: EB 07                 -  jmp FairyFencer.exe+116AE6
"FairyFencer.exe"+116ADF: C7 45 F4 00 00 00 00  -  mov [ebp-0C],00000000
"FairyFencer.exe"+116AE6: 3B C8                 -  cmp ecx,eax
"FairyFencer.exe"+116AE8: 73 04                 -  jae FairyFencer.exe+116AEE
"FairyFencer.exe"+116AEA: 8B 12                 -  mov edx,[edx]
"FairyFencer.exe"+116AEC: EB 02                 -  jmp FairyFencer.exe+116AF0
"FairyFencer.exe"+116AEE: 33 D2                 -  xor edx,edx
"FairyFencer.exe"+116AF0: 8B 45 F4              -  mov eax,[ebp-0C]
"FairyFencer.exe"+116AF3: 89 45 FC              -  mov [ebp-04],eax
"FairyFencer.exe"+116AF6: 85 D2                 -  test edx,edx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>121640</ID>
          <Description>"Battle Result Initializer - Must Enabled for sub features to work"</Description>
          <Options moHideChildren="1" moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
registersymbol(battle_multiplier)
alloc(battle_multiplier,4)

alloc(setdefault,2048)
setdefault:
mov [battle_multiplier],#100

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(battle_multiplier)

dealloc(battle_multiplier,4)
dealloc(setdefault)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>121639</ID>
              <Description>"Multiplier - Select or enter desired number"</Description>
              <DropDownList DisplayValueAsItem="1">0:Disabled - number greater than 1000 will become fixded
10:x10
100:x100
1000:x1000
</DropDownList>
              <LastState Value="0" Activated="0" RealAddress="06CF0000"/>
              <Color>FF8080</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>battle_multiplier</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>121638</ID>
              <Description>"Earned EXP Mult"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]


//aobscanmodule(earnedexp_aob,FairyFencer.exe,01 86 A0 2B 00 00) // should be unique
aobscan(earnedexp_aob,01 86 A0 2B 00 00 * * * * * 39 9E A0 2B 00 00) // should be unique

alloc(earnedexp_newmem,2048)
alloc(earnedexp_mult,2048)

label(earnedexp_original_code)
label(earnedexp_return)

earnedexp_mult:
imul eax,dword ptr [battle_multiplier]
jmp earnedexp_original_code

earnedexp_newmem:
cmp dword ptr [battle_multiplier], #0 // disable if 0
je earnedexp_original_code
cmp dword ptr [battle_multiplier], #1001  // jump to multiplier if amount is &gt; 0, but &lt; 1001
jl earnedexp_mult
mov eax,#1  // set to fix value per kill if amount is greater than 1000
imul eax, dword ptr [battle_multiplier]
mov [esi+2BA0], eax
jmp earnedexp_return

earnedexp_original_code:
  db 01 86 A0 2B 00 00
  //add [esi+00002BA0],eax
  jmp earnedexp_return

earnedexp_aob:
  jmp earnedexp_newmem
  nop

earnedexp_return:
registersymbol(earnedexp_aob)

[DISABLE]

earnedexp_aob:
  db 01 86 A0 2B 00 00

unregistersymbol(earnedexp_aob)
dealloc(earnedexp_newmem)
dealloc(earnedexp_mult)

{
// ORIGINAL CODE - INJECTION POINT: "FairyFencer.exe"+14B0FD

"FairyFencer.exe"+14B0D2: 0F 84 A8 01 00 00  -  je FairyFencer.exe+14B280
"FairyFencer.exe"+14B0D8: 8B 08              -  mov ecx,[eax]
"FairyFencer.exe"+14B0DA: 0B 48 04           -  or ecx,[eax+04]
"FairyFencer.exe"+14B0DD: 0F 85 9D 01 00 00  -  jne FairyFencer.exe+14B280
"FairyFencer.exe"+14B0E3: 8B 17              -  mov edx,[edi]
"FairyFencer.exe"+14B0E5: C1 EA 02           -  shr edx,02
"FairyFencer.exe"+14B0E8: F6 C2 01           -  test dl,01
"FairyFencer.exe"+14B0EB: 0F 85 86 01 00 00  -  jne FairyFencer.exe+14B277
"FairyFencer.exe"+14B0F1: 8B 35 9C 0A 66 00  -  mov esi,[FairyFencer.exe+370A9C]
"FairyFencer.exe"+14B0F7: 8B 87 9C 00 00 00  -  mov eax,[edi+0000009C]
// ---------- INJECTING HERE ----------
"FairyFencer.exe"+14B0FD: 01 86 A0 2B 00 00  -  add [esi+00002BA0],eax
// ---------- DONE INJECTING  ----------
"FairyFencer.exe"+14B103: BB FF C9 9A 3B     -  mov ebx,3B9AC9FF
"FairyFencer.exe"+14B108: 39 9E A0 2B 00 00  -  cmp [esi+00002BA0],ebx
"FairyFencer.exe"+14B10E: 76 06              -  jna FairyFencer.exe+14B116
"FairyFencer.exe"+14B110: 89 9E A0 2B 00 00  -  mov [esi+00002BA0],ebx
"FairyFencer.exe"+14B116: 8B 4D 08           -  mov ecx,[ebp+08]
"FairyFencer.exe"+14B119: D9 EE              -  fldz 
"FairyFencer.exe"+14B11B: 85 C9              -  test ecx,ecx
"FairyFencer.exe"+14B11D: 74 38              -  je FairyFencer.exe+14B157
"FairyFencer.exe"+14B11F: 6A 45              -  push 45
"FairyFencer.exe"+14B121: DD D8              -  fstp st(0)
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>121625</ID>
              <Description>"Earned Money Mult"</Description>
              <LastState Activated="0"/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]


//aobscanmodule(earnedmoney_aob,FairyFencer.exe,01 86 A4 2B 00 00) // should be unique
aobscan(earnedmoney_aob,01 86 A4 2B 00 00 * * * 39 9E A4 2B 00 00)  // scan for where earned money is modified after each kill

alloc(earnedmoney_newmem,2048))
alloc(earnedmoney_mult,2048)

label(earnedmoney_original_code)
label(earnedmoney_return)

earnedmoney_mult:  //multiply the earned amount by specified multiplier
imul eax,dword ptr [battle_multiplier]
jmp earnedmoney_original_code

earnedmoney_newmem:
cmp dword ptr [battle_multiplier], #0 // disable if 0
je earnedmoney_original_code
cmp dword ptr [battle_multiplier], #1001  // jump to multiplier if amount is &gt; 0, but &lt; 1001
jl earnedmoney_mult
mov eax,#1  // set to fix value per kill if amount is greater than 1000
imul eax, dword ptr [battle_multiplier]
mov [esi+2ba4], eax
jmp earnedmoney_return

earnedmoney_original_code:
  db 01 86 A4 2B 00 00
  //add [esi+00002BA4],eax
  jmp earnedmoney_return

earnedmoney_aob:
  jmp earnedmoney_newmem
  nop

earnedmoney_return:
registersymbol(earnedmoney_aob)

[DISABLE]

earnedmoney_aob:
  db 01 86 A4 2B 00 00

unregistersymbol(earnedmoney_aob)
dealloc(earnedmoney_newmem)
dealloc(earnedmoney_mult)

{
// ORIGINAL CODE - INJECTION POINT: "FairyFencer.exe"+14B18D

"FairyFencer.exe"+14B16A: 79 06                 -  jns FairyFencer.exe+14B172
"FairyFencer.exe"+14B16C: D8 05 A8 52 FC 00     -  fadd dword ptr [FairyFencer.exe+2D52A8]
"FairyFencer.exe"+14B172: D8 4D F8              -  fmul dword ptr [ebp-08]
"FairyFencer.exe"+14B175: D9 7D FA              -  fnstcw [ebp-06]
"FairyFencer.exe"+14B178: 0F B7 45 FA           -  movzx eax,word ptr [ebp-06]
"FairyFencer.exe"+14B17C: 0D 00 0C 00 00        -  or eax,0C00
"FairyFencer.exe"+14B181: 89 45 F0              -  mov [ebp-10],eax
"FairyFencer.exe"+14B184: D9 6D F0              -  fldcw [ebp-10]
"FairyFencer.exe"+14B187: DF 7D EC              -  fistp qword ptr [ebp-14]
"FairyFencer.exe"+14B18A: 8B 45 EC              -  mov eax,[ebp-14]
// ---------- INJECTING HERE ----------
"FairyFencer.exe"+14B18D: 01 86 A4 2B 00 00     -  add [esi+00002BA4],eax
// ---------- DONE INJECTING  ----------
"FairyFencer.exe"+14B193: D9 6D FA              -  fldcw [ebp-06]
"FairyFencer.exe"+14B196: 39 9E A4 2B 00 00     -  cmp [esi+00002BA4],ebx
"FairyFencer.exe"+14B19C: 76 06                 -  jna FairyFencer.exe+14B1A4
"FairyFencer.exe"+14B19E: 89 9E A4 2B 00 00     -  mov [esi+00002BA4],ebx
"FairyFencer.exe"+14B1A4: 8B 15 68 0A 06 01     -  mov edx,[FairyFencer.exe+370A68]
"FairyFencer.exe"+14B1AA: F6 82 60 02 00 00 08  -  test byte ptr [edx+00000260],08
"FairyFencer.exe"+14B1B1: 74 45                 -  je FairyFencer.exe+14B1F8
"FairyFencer.exe"+14B1B3: 8B 87 A4 00 00 00     -  mov eax,[edi+000000A4]
"FairyFencer.exe"+14B1B9: DB 87 A4 00 00 00     -  fild dword ptr [edi+000000A4]
"FairyFencer.exe"+14B1BF: 85 C0                 -  test eax,eax
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>121627</ID>
              <Description>"Earned WP Mult"</Description>
              <LastState Activated="0"/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

//aobscanmodule(INJECT,FairyFencer.exe,01 96 A8 2B 00 00) // should be unique
aobscan(earnedwp_aob,01 96 A8 2B 00 00 * * * 39 9E A8 2B 00 00) // scan for where earned wp is modified after each kill
alloc(earnedwp_newmem,2048)
alloc(earnedwp_mult,2048)

label(earnedwp_original_code)
label(earnedwp_return)

earnedwp_mult:  //multiply the earned amount by specified multiplier
imul edx,dword ptr [battle_multiplier]
jmp earnedwp_original_code

earnedwp_newmem:
cmp dword ptr [battle_multiplier], #0 // disable if 0
je earnedwp_original_code
cmp dword ptr [battle_multiplier], #1001 // jump to multiplier if amount is &gt; 0, but &lt; 1001
jl earnedwp_mult
mov edx,#1 // set to fix value per kill if amount is greater than 1000
imul edx, dword ptr [battle_multiplier]
mov [esi+00002BA8],edx
jmp earnedwp_return


earnedwp_original_code:
  db 01 96 A8 2B 00 00
  //add [esi+00002BA8],edx
  jmp earnedwp_return

earnedwp_aob:
  jmp earnedwp_newmem
  nop

earnedwp_return:

registersymbol(earnedwp_aob)

[DISABLE]

earnedwp_aob:
  db 01 96 A8 2B 00 00

unregistersymbol(earnedwp_aob)
dealloc(earnedwp_newmem)
dealloc(earnedwp_mult)
{
// ORIGINAL CODE - INJECTION POINT: "FairyFencer.exe"+14B1E1

"FairyFencer.exe"+14B1BF: 85 C0                 -  test eax,eax
"FairyFencer.exe"+14B1C1: 79 06                 -  jns FairyFencer.exe+14B1C9
"FairyFencer.exe"+14B1C3: D8 05 A8 52 FC 00     -  fadd dword ptr [FairyFencer.exe+2D52A8]
"FairyFencer.exe"+14B1C9: D9 7D FA              -  fnstcw [ebp-06]
"FairyFencer.exe"+14B1CC: 0F B7 45 FA           -  movzx eax,word ptr [ebp-06]
"FairyFencer.exe"+14B1D0: 0D 00 0C 00 00        -  or eax,0C00
"FairyFencer.exe"+14B1D5: 89 45 F0              -  mov [ebp-10],eax
"FairyFencer.exe"+14B1D8: D9 6D F0              -  fldcw [ebp-10]
"FairyFencer.exe"+14B1DB: DF 7D EC              -  fistp qword ptr [ebp-14]
"FairyFencer.exe"+14B1DE: 8B 55 EC              -  mov edx,[ebp-14]
// ---------- INJECTING HERE ----------
"FairyFencer.exe"+14B1E1: 01 96 A8 2B 00 00     -  add [esi+00002BA8],edx
// ---------- DONE INJECTING  ----------
"FairyFencer.exe"+14B1E7: D9 6D FA              -  fldcw [ebp-06]
"FairyFencer.exe"+14B1EA: 39 9E A8 2B 00 00     -  cmp [esi+00002BA8],ebx
"FairyFencer.exe"+14B1F0: 76 06                 -  jna FairyFencer.exe+14B1F8
"FairyFencer.exe"+14B1F2: 89 9E A8 2B 00 00     -  mov [esi+00002BA8],ebx
"FairyFencer.exe"+14B1F8: 85 C9                 -  test ecx,ecx
"FairyFencer.exe"+14B1FA: 74 1B                 -  je FairyFencer.exe+14B217
"FairyFencer.exe"+14B1FC: 6A 44                 -  push 44
"FairyFencer.exe"+14B1FE: DD D8                 -  fstp st(0)
"FairyFencer.exe"+14B200: 6A 00                 -  push 00
"FairyFencer.exe"+14B202: 51                    -  push ecx
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>121863</ID>
          <Description>"Fairy - Auto add exp and battle count as you equip or detail view"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(fairy_base)
alloc(fairy_base,4)
registersymbol(farydebuger_flag)
alloc(farydebuger_flag,4)


//aobscan(fairy_aob, 0F B7 56 02 85 D2 74 10 E8 A6) //Fairy browse
aobscan(fairy_aob, 0F B7 57 02 85 D2 74 57) // Fairy Detail screen

alloc(fairyexp_add,2048)
alloc(fairybattlecount_add,2048)
alloc(debugger_flag,2048)




label(code)
label(original_code)
label(return)

fairybattlecount_add:
cmp [edi+0c],#2000
jg original_code
add [edi+0c],#2000
jmp original_code

fairyexp_add:
add [edi+08],#70000
jmp fairybattlecount_add

original_code:
db 0F B7 57 02 85 D2
jmp return

code:
  cmp [edi+08], #70000
  jl fairyexp_add
  jmp fairybattlecount_add

debugger_flag:
  cmp dword ptr [farydebuger_flag], #0
  je code
  mov [fairy_base],edi
  jmp code

fairy_aob:
  jmp debugger_flag
  nop

return:
registersymbol(fairy_aob)

[DISABLE]

fairy_aob:
  db 0F B7 57 02 85 D2

unregistersymbol(fairy_aob)
unregistersymbol(fairy_base)
unregistersymbol(farydebuger_flag)
dealloc(fairyexp_add)
dealloc(fairybattlecount_add)
dealloc(fairy_base)
dealloc(farydebuger_flag)
dealloc(debugger_flag)
{
// ORIGINAL CODE - INJECTION POINT: "FairyFencer.exe"+2FACD

"FairyFencer.exe"+2FAB6: 8D 04 C0           -  lea eax,[eax+eax*8]
"FairyFencer.exe"+2FAB9: 57                 -  push edi
"FairyFencer.exe"+2FABA: 8D 1C 86           -  lea ebx,[esi+eax*4]
"FairyFencer.exe"+2FABD: 33 FF              -  xor edi,edi
"FairyFencer.exe"+2FABF: 3B F3              -  cmp esi,ebx
"FairyFencer.exe"+2FAC1: 73 29              -  jae FairyFencer.exe+2FAEC
"FairyFencer.exe"+2FAC3: 3B 7D 0C           -  cmp edi,[ebp+0C]
"FairyFencer.exe"+2FAC6: 73 24              -  jae FairyFencer.exe+2FAEC
"FairyFencer.exe"+2FAC8: F6 06 01           -  test byte ptr [esi],01
"FairyFencer.exe"+2FACB: 75 18              -  jne FairyFencer.exe+2FAE5
// ---------- INJECTING HERE ----------
"FairyFencer.exe"+2FACD: 0F B7 56 02        -  movzx edx,word ptr [esi+02]
"FairyFencer.exe"+2FAD1: 85 D2              -  test edx,edx
// ---------- DONE INJECTING  ----------
"FairyFencer.exe"+2FAD3: 74 10              -  je FairyFencer.exe+2FAE5
"FairyFencer.exe"+2FAD5: E8 A6 29 00 00     -  call FairyFencer.exe+32480
"FairyFencer.exe"+2FADA: 85 C0              -  test eax,eax
"FairyFencer.exe"+2FADC: 74 07              -  je FairyFencer.exe+2FAE5
"FairyFencer.exe"+2FADE: 8B 4D 08           -  mov ecx,[ebp+08]
"FairyFencer.exe"+2FAE1: 89 34 B9           -  mov [ecx+edi*4],esi
"FairyFencer.exe"+2FAE4: 47                 -  inc edi
"FairyFencer.exe"+2FAE5: 83 C6 24           -  add esi,24
"FairyFencer.exe"+2FAE8: 3B F3              -  cmp esi,ebx
"FairyFencer.exe"+2FAEA: 72 D7              -  jb FairyFencer.exe+2FAC3
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>121869</ID>
              <Description>"Debugger Flag"</Description>
              <Options moHideChildren="1"/>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
              <LastState Value="??" Activated="0" RealAddress="06FA0004"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>farydebuger_flag</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>121864</ID>
                  <Description>"Current Fairy"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>fairy_base</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>121866</ID>
                  <Description>"Level"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>fairy_base</Address>
                  <Offsets>
                    <Offset>1</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>121868</ID>
                  <Description>"EXP"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>fairy_base</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>121867</ID>
                  <Description>"Battle Count"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>fairy_base</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>121636</ID>
      <Description>"Optional"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>121629</ID>
          <Description>"No WP Cost"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
//aobscanmodule(NoWPCost,FairyFencer.exe,89 4F 38 8B C1 5E 8B E5 5D C3 8B) // should be unique
aobscan(NoWPCost,89 4F 38 8B C1 5E 8B E5 5D C3 8B)
alloc(newmem,2048)

//registersymbol(temp1)
//alloc(temp1,4)

label(code)
label(return)

newmem:

  //move [temp1],edi+38
  //add [temp1],10000
  //move [edi+38],temp1
  //dealloc(temp1)

code:
  //mov [edi+38],ecx
  mov eax,ecx
  jmp return

NoWPCost:
  //cmp [edi+38],10000
  //jl newmem
  jmp code

return:
registersymbol(NoWPCost)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
NoWPCost:
  db 89 4F 38 8B C1

unregistersymbol(NoWPCost)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FairyFencer.exe"+7D116

"FairyFencer.exe"+7D103: 8B E5                 -  mov esp,ebp
"FairyFencer.exe"+7D105: 5D                    -  pop ebp
"FairyFencer.exe"+7D106: C3                    -  ret 
"FairyFencer.exe"+7D107: 85 F6                 -  test esi,esi
"FairyFencer.exe"+7D109: 7F 0B                 -  jg FairyFencer.exe+7D116
"FairyFencer.exe"+7D10B: 7C 04                 -  jnge FairyFencer.exe+7D111
"FairyFencer.exe"+7D10D: 85 C9                 -  test ecx,ecx
"FairyFencer.exe"+7D10F: 73 05                 -  jae FairyFencer.exe+7D116
"FairyFencer.exe"+7D111: 33 C9                 -  xor ecx,ecx
"FairyFencer.exe"+7D113: 89 4D FC              -  mov [ebp-04],ecx
// ---------- INJECTING HERE ----------
"FairyFencer.exe"+7D116: 89 4F 38              -  mov [edi+38],ecx
"FairyFencer.exe"+7D119: 8B C1                 -  mov eax,ecx
// ---------- DONE INJECTING  ----------
"FairyFencer.exe"+7D11B: 5E                    -  pop esi
"FairyFencer.exe"+7D11C: 8B E5                 -  mov esp,ebp
"FairyFencer.exe"+7D11E: 5D                    -  pop ebp
"FairyFencer.exe"+7D11F: C3                    -  ret 
"FairyFencer.exe"+7D120: 8B 47 38              -  mov eax,[edi+38]
"FairyFencer.exe"+7D123: 5E                    -  pop esi
"FairyFencer.exe"+7D124: 8B E5                 -  mov esp,ebp
"FairyFencer.exe"+7D126: 5D                    -  pop ebp
"FairyFencer.exe"+7D127: C3                    -  ret 
"FairyFencer.exe"+7D128: CC                    -  int 3 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>itemstats_savedAOB</Name>
      <Address>0005B718</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fairystats_savedAOB</Name>
      <Address>00324C7B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>tension_guage_aob</Name>
      <Address>002A50C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>battlestats_select_savedAOB</Name>
      <Address>00B62AC8</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
