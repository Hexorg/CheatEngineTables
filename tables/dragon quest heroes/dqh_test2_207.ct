<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>825</ID>
      <Description>"Enable Base"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(somepointers,2048,"DQH.exe")
label(bInfYggdrasilLeaves)
registersymbol(bInfYggdrasilLeaves)
label(pSomeBattleStats2)
registersymbol(pSomeBattleStats2)
label(pCPlayer)
registersymbol(pCPlayer)
label(pSomeStats1)
registersymbol(pSomeStats1)
label(pSomeStats2)
registersymbol(pSomeStats2)
label(pPlayers)
registersymbol(pPlayers)
label(pSomeBattleStats1)
registersymbol(pSomeBattleStats1)

somepointers:
db 90
bInfYggdrasilLeaves:
db 0
pSomeBattleStats2:
dq 0
pCPlayer:
dq 0
pSomeStats1:
dq 0
pSomeStats2:
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
pPlayers:
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
dq 0
pSomeBattleStats1:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat

dealloc(somepointers)
unregistersymbol(bInfYggdrasilLeaves)
unregistersymbol(pYggdrasilLeaves)
unregistersymbol(pCPlayer)
unregistersymbol(pSomeStats1)
unregistersymbol(pSomeStats2)
unregistersymbol(pPlayers)
unregistersymbol(pSomeBattleStats1)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>826</ID>
          <Description>"MPRead2AOB"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(MPRead2AOB,DQH.exe,F3 0F 2C 81 00 02 00 00 C3)
registersymbol(MPRead2AOB)

alloc(newmem,2048,MPRead2AOB) //"DQH.exe"+2C4C50)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp r8d,ffffffff
jne @f
mov [pCPlayer],rcx

@@:
push rax
push rbx
mov rax,pPlayers
mov rbx,[rsp+98]
cmp rbx,10
jg @f
mov [rax+rbx*8],rcx

@@:
pop rbx
pop rax

originalcode:
cvttss2si eax,[rcx+00000200]

exit:
jmp returnhere

///

MPRead2AOB: //"DQH.exe"+2C4C50:
jmp newmem
nop
nop
nop
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
MPRead2AOB: //"DQH.exe"+2C4C50:
db F3 0F 2C 81 00 02 00 00
//Alt: cvttss2si eax,[rcx+00000200]
unregistersymbol(MPRead2AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>827</ID>
          <Description>"goldReadAOB"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(goldReadAOB,DQH.exe,8B 81 C0 DF 00 00 89 02)
registersymbol(goldReadAOB)

alloc(newmem2,2048,goldReadAOB) //"DQH.exe"+2C2900)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2:
mov [pSomeStats1],rcx

originalcode2:
mov eax,[rcx+0000DFC0]

exit2:
jmp returnhere2

///

goldReadAOB: //"DQH.exe"+2C2900:
jmp newmem2
nop
returnhere2:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
goldReadAOB: //"DQH.exe"+2C2900:
db 8B 81 C0 DF 00 00
//Alt: mov eax,[rcx+0000DFC0]
unregistersymbol(goldReadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>828</ID>
          <Description>"someAOB1"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(someAOB1,DQH.exe,0F BF 41 08 8D 0C 80)
registersymbol(someAOB1)

alloc(newmem6,2048,someAOB1) //"DQH.exe"+343100)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6:
//just a cave

originalcode6:
movsx eax,word ptr [rcx+08]
nop //
lea ecx,[rax+rax*4]

exit6:
jmp returnhere6

///

someAOB1: //"DQH.exe"+343100:
jmp newmem6
nop
nop
returnhere6:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
someAOB1: //"DQH.exe"+343100:
db 0F BF 41 08 8D 0C 80
//Alt: movsx eax,word ptr [rcx+08]
//Alt: lea ecx,[rax+rax*4]
unregistersymbol(someAOB1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>829</ID>
          <Description>"SPReadInMenuAOB"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(SPReadInMenuAOB,DQH.exe,0F B7 41 70 66 89 02)
registersymbol(SPReadInMenuAOB)

alloc(newmem11,2048,SPReadInMenuAOB) //"DQH.exe"+2C5AC0)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11:
push rax
push rbx
movzx rbx,byte ptr [rcx+38]
cmp rbx,10
jg @f
mov rax,pSomeStats2
mov [rax+rbx*8],rcx
@@:
pop rbx
pop rax

originalcode11:
movzx eax,word ptr [rcx+70]
mov [rdx],ax

exit11:
jmp returnhere11

///

SPReadInMenuAOB: //"DQH.exe"+2C5AC0:
jmp newmem11
nop
nop
returnhere11:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
SPReadInMenuAOB: //"DQH.exe"+2C5AC0:
db 0F B7 41 70 66 89 02
//Alt: movzx eax,word ptr [rcx+70]
//Alt: mov [rdx],ax
unregistersymbol(SPReadInMenuAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>830</ID>
          <Description>"yggdrasilLeavesQuantityChkZeroAOB"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(yggdrasilLeavesQuantityChkZeroAOB,DQH.exe,39 AA 8C 00 00 00 ** ** ** ** ** ** 48)
registersymbol(yggdrasilLeavesQuantityChkZeroAOB)

alloc(newmem17,2048,yggdrasilLeavesQuantityChkZeroAOB) //"DQH.exe"+205DE6)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17:
mov [pSomeBattleStats2],rdx
cmp byte ptr [bInfYggdrasilLeaves],1
je yggdrasilLeavesQuantityChkZeroAOB+c
jne originalcode17
cmp dword ptr [rdx+8c],1
jge originalcode17
mov dword ptr [rdx+8c],1

originalcode17:
cmp [rdx+0000008C],ebp

exit17:
jmp returnhere17

///

yggdrasilLeavesQuantityChkZeroAOB: //"DQH.exe"+205DE6:
jmp newmem17
nop
returnhere17:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
yggdrasilLeavesQuantityChkZeroAOB: //"DQH.exe"+205DE6:
db 39 AA 8C 00 00 00
//Alt: cmp [rdx+0000008C],ebp
unregistersymbol(yggdrasilLeavesQuantityChkZeroAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>831</ID>
          <Description>"EXPReadInAttributesMenuAOB"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(EXPReadInAttributesMenuAOB,DQH.exe,8B 41 68 89 02 48 8B C2 C3)
registersymbol(EXPReadInAttributesMenuAOB)

alloc(newmem24,2048,EXPReadInAttributesMenuAOB) //"DQH.exe"+2C2530)
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24:
push rax
push rbx
mov rax,pSomeStats2
movzx rbx,byte ptr [rcx+38]
mov [rax+rbx*8],rcx
pop rbx
pop rax

originalcode24:
mov eax,[rcx+68]
mov [rdx],eax

exit24:
jmp returnhere24

///

EXPReadInAttributesMenuAOB: //"DQH.exe"+2C2530:
jmp newmem24
returnhere24:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem24)
EXPReadInAttributesMenuAOB: //"DQH.exe"+2C2530:
db 8B 41 68 89 02
//Alt: mov eax,[rcx+68]
//Alt: mov [rdx],eax
unregistersymbol(EXPReadInAttributesMenuAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>832</ID>
          <Description>"EXPReadInBattleAOB"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(EXPReadInBattleAOB,DQH.exe,8B 81 E8 01 00 00 89 02 48 8B C2 C3)
registersymbol(EXPReadInBattleAOB)

alloc(newmem32,2048,EXPReadInBattleAOB) //"DQH.exe"+2C2640)
label(returnhere32)
label(originalcode32)
label(exit32)

newmem32:
push rax
push rbx
mov rax,pSomeBattleStats1
movzx rbx,byte ptr [rcx+220]
cmp rbx,10
jg @f
mov [rax+rbx*8],rcx
@@:
pop rbx
pop rax

originalcode32:
mov eax,[rcx+000001E8]

exit32:
jmp returnhere32

///

EXPReadInBattleAOB: //"DQH.exe"+2C2640:
jmp newmem32
nop
returnhere32:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem32)
EXPReadInBattleAOB: //"DQH.exe"+2C2640:
db 8B 81 E8 01 00 00
//Alt: mov eax,[rcx+000001E8]
unregistersymbol(EXPReadInBattleAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>833</ID>
          <Description>"goldEarnedInBattleReadAOB"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(goldEarnedInBattleReadAOB,DQH.exe,8B 41 14 89 02 48 8B C2 C3)
registersymbol(goldEarnedInBattleReadAOB)

alloc(newmem41,2048,goldEarnedInBattleReadAOB) //"DQH.exe"+2C28E0)
label(returnhere41)
label(originalcode41)
label(exit41)

newmem41:
mov [pSomeBattleStats2],rcx

originalcode41:
mov eax,[rcx+14]
mov [rdx],eax

exit41:
jmp returnhere41

///

goldEarnedInBattleReadAOB: //"DQH.exe"+2C28E0:
jmp newmem41
returnhere41:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem41)
goldEarnedInBattleReadAOB: //"DQH.exe"+2C28E0:
db 8B 41 14 89 02
//Alt: mov eax,[rcx+14]
//Alt: mov [rdx],eax
unregistersymbol(goldEarnedInBattleReadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>834</ID>
          <Description>"someAOB2"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(someAOB2,DQH.exe,0F BF 41 06 8D 0C 80)
registersymbol(someAOB2)

alloc(newmem51,2048,someAOB2) //"DQH.exe"+3430D0)
label(returnhere51)
label(originalcode51)
label(exit51)

newmem51:
//just a cave

originalcode51:
movsx eax,word ptr [rcx+06]
nop //
lea ecx,[rax+rax*4]

exit51:
jmp returnhere51

///

someAOB2: //"DQH.exe"+3430D0:
jmp newmem51
nop
nop
returnhere51:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem51)
someAOB2: //"DQH.exe"+3430D0:
db 0F BF 41 06 8D 0C 80
//Alt: movsx eax,word ptr [rcx+06]
//Alt: lea ecx,[rax+rax*4]
unregistersymbol(someAOB2)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
