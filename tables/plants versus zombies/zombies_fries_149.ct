<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>75</ID>
      <Description>"zombie fries"</Description>
      <Options moHideChildren="1" moBindActivation="1" moRecursiveSetValue="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>40</ID>
          <Description>"1"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(planta_moarta)
label(nu_e_cartof)
label(xx)
label(yy)
label(randul)
label(baza)

registersymbol(xx)
registersymbol(yy)
registersymbol(randul)
registersymbol(baza)


newmem: //this is allocated memory, you have read,write,execute access
//place your code here
jmp originalcode

xx:
db 0 0 0 0
yy:
db 0 0 0 0
randul:
db 0 0 0 0
baza:
db 0 0 0 0

originalcode:

cmp dword ptr [ebx+40],00
jle planta_moarta
cmp dword ptr [ebx+24],4
jne nu_e_cartof
mov [ebx+54],0 // cartof instant

push ebx
pop [baza]
push [ebx+8]
pop [xx]
push [ebx+0c]
pop [yy]
push [ebx+1c]
pop [randul]
planta_moarta:
nu_e_cartof:

cmp dword ptr [ebx+40],0
jnl 00467923

exit:
jmp returnhere

"PlantsVsZombies.exe"+67917:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
unregistersymbol(xx)
unregistersymbol(yy)
unregistersymbol(randul)
unregistersymbol(baza)
"PlantsVsZombies.exe"+67917:
cmp dword ptr [ebx+40],00
jnl 00467923
//Alt: db 83 7B 40 00 7D 06
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"2"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,128) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(nu_omoram_cartofu)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp [ebx+24],4
je nu_omoram_cartofu
call 0046B470
jmp exit
nu_omoram_cartofu:
pop ebx

exit:
jmp returnhere

"PlantsVsZombies.exe"+6A583:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"PlantsVsZombies.exe"+6A583:
call 0046B470
//Alt: db E8 E8 0E 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"3"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,1024) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(cat_scadem)
label(adunam)
label(gata)
label(skip_rand)
label(marim_rand)


newmem: //this is allocated memory, you have read,write,execute access
//place your code here
jmp originalcode

cat_scadem:
db 00 00 80 3f // 1 float


originalcode:
pushad
pushfd

push [baza]
pop eax
cmp eax,0
je exit
mov ebx,FFFF0000
test [eax+148],ebx
je exit
cmp [eax+24],4
jne exit
cmp byte ptr [eax+141],0
jne exit


cmp [esi+24],14 // verificam bungee
je exit
cmp [esi+24],17
je exit // verificam gargantua



//mov [esi+28],3 asta e pt instant death

inc [esi+100]
cmp [esi+100],(int)100
jne skip_rand
mov [esi+100],0
mov eax, [randul]
cmp eax, [esi+1c]
je skip_rand
jg marim_rand
dec [esi+1c]
jmp skip_rand
marim_rand:
inc [esi+1c]

skip_rand:


fld [esi+2c]
fild [xx]

fcomp st,st(1)
FNSTSW AX
fwait
sahf
fstp st

fld [cat_scadem]
fld [esi+2c]
ja adunam
mov [esi+28],25 // pt schimbarea fetei
fsub st,st(1)
jmp gata
adunam:
mov [esi+28],36 // tot pt fata
fadd st,st(1)
gata:
fstp [esi+2c]
fstp st


exit:
popfd
popad
lea esi,[esp+14]
mov edx,ebx

jmp returnhere

"PlantsVsZombies.exe"+13C80E:
nop // ca sa-i putem intoarce de pe o parte pe alta
nop

"PlantsVsZombies.exe"+15850:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)


"PlantsVsZombies.exe"+13C80E:
db 75 2C

"PlantsVsZombies.exe"+15850:
lea esi,[esp+14]
mov edx,ebx
//Alt: db 8D 74 24 14 8B D3
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"4"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,128) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add [esi+00000D3C],eax
mov [baza],0
exit:
jmp returnhere

"PlantsVsZombies.exe"+90CC1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"PlantsVsZombies.exe"+90CC1:
add [esi+00000D3C],eax
//Alt: db 01 86 3C 0D 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>xx</Name>
      <Address>011F0005</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>yy</Name>
      <Address>011F0009</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>randul</Name>
      <Address>011F000D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>baza</Name>
      <Address>011F0011</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
