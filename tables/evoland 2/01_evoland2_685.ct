<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>157</ID>
      <Description>"**Speed Hack Zero"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
luacall(speedhack_setSpeed(0.05))
[DISABLE]
luacall(speedhack_setSpeed(1))

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>159</ID>
      <Description>"Option (select only one of similar)"</Description>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>163</ID>
          <Description>"[B]weaponTime x~50 &amp; level max@S(shot?)"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function wptime(skip)
  if skip==true then return '' end
--                          00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f
  weaponTime_aob = AOBScan('2d ?? 75 2a d6 68 ?? ?? d2 68 ?? ?? 60 ?? 24 00','-X')
  local aob = weaponTime_aob
  if aob~= nil then
    script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+00:
      db 25 80 7d 75 2a
      %s+08:
      db 02
      %s+0f:
      db 02
      ]],a,a,a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return wptime(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>175</ID>
          <Description>"[A]time scale @DD (fight?) x2"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
  local aob = AOBScan('d0 30 57 30 28 d7 28 63 ?? 28 63 ?? 20 82 63 ?? 20 86 ?? ?? 63 ?? 20 86 ?? 63','-X')
  if aob~= nil then --             d1 d1 a0 d5 02
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+04:
      db d1 d1 a0 d5 02
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>176</ID>
          <Description>"[A]time scale @DD (fight?) x1.33"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
  local aob = AOBScan('d0 30 57 30 28 d7 28 63 ?? 28 63 ?? 20 82 63 ?? 20 86 ?? ?? 63 ?? 20 86 ?? 63','-X')
  if aob~= nil then --             d1 d1 a0 2a a0 24 03 75 a3 d5 02 02
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+04:
      db d1 d1 a0 2a a0 24 03 75 a3 d5 02 02
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>177</ID>
          <Description>"[C]rapid @Z(2D arpg) x4"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('d0 30 57 30 28 d6 28 63 ?? 27 63 ?? 20 82 63 ?? 20 82 63','-X')
  --                               d1 d1 a0 2a a0 d6 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      local r = aobOne('d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46',a,a..'+100','-X')
      script[i]=string.format([[
      %s+04:
      db d1 d1 a0 2a a0 d6 02 02
      %X:
      db d2
      ]],a,r)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>161</ID>
      <Description>"EvoLand 2 (click 1st)"</Description>
      <Options moBindActivation="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
tostr = tostring

function hx(n)
  assert(type(n)=='number',"hx need (num)"..tostr(n))
  return string.format("%02X",n)
end
function define(sym,addr)
  assert(type(sym)=='string' and type(addr)=='number',string.format("define need (str)%s and (num)%s",tostr(sym),tostr(addr)))
  return 'define('..sym..','..hx(addr)..')'
end
function luareturn(s,sc)
  if s=='TEST' or sc==true then return '//TEST' end
  local olds,s,ok = s,'return '..s:gsub("@([_%a]%w*)",function(a)
    if _G[a]~= nil then return "_G."..a else return "@"..a end
  end)
  print(s)
  ok,s = pcall(loadstring,s)
  if not ok or type(s)~='function' then return nil, "not parse-&gt;"..olds end
  local r = s()
--  print(r)
  return type(r)=='string' and r or nil
end

local cmds={luareturn=luareturn}
for cmd,func in pairs(cmds) do
  if autoAssemble(cmd.."(TEST)") then unregisterAutoAssemblerCommand(cmd) end
  registerAutoAssemblerCommand(cmd,func)
end

function aobOne(aob,addr0,addr1,protect)
  local result
  assert(type(aob)=='string' and aob:len()&gt;4)
  addr0=type(addr0)=='number' and addr0 or 0
  if type(addr1)=='string' and addr1:len() &gt; 0 and addr1:sub(1,1):match('[+-]') then-- if second addr is actually an offset
    local sign,num = addr1:sub(1,1), tonumber(addr1:sub(2,-1),16)
    if num~=nil then
      num = sign=='-' and -num or num
      addr1 = addr0+num
    end
  end
  addr1=type(addr1)=='number' and addr1 or 0x7fffffffffffffff
  if addr0&gt;addr1 then addr0,addr1=addr1,addr0 end
  protect = protect or ''

--  print(aob,addr0,addr1,protect)
  local ms = createMemScan()
  ms.OnlyOneResult = true
  ms.firstScan(soExactValue,vtByteArray,nil,aob,nil,addr0,addr1,protect,fsmNotAligned,'0',true,false,false,false)
  ms.waitTillDone()

  result = ms.Result
  ms.Destroy()
  return result
end

{$asm}
[ENABLE]
globalalloc(__,$4000)
__:
dq __


__+30:
db 00


[DISABLE]
{$lua}
--if type(ally_aob)=='userdata' and ally_aob.Destroy then ally_aob.Destroy() end
--ally_aob = nil
idx=nil




{$asm}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>199</ID>
          <Description>"[C]timescale @Z(2D arpg) x2"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('d0 30 57 30 28 d6 28 63 ?? 27 63 ?? 20 82 63 ?? 20 82 63','-X')
  --                               d1 d1 a0 2a a0 d6 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      local r = aobOne('d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46',a,a..'+100','-X')
      script[i]=string.format([[
      %s+04:
      db d1 d1 a0 02 02 d5 02 02
      %X:
      db d1
      ]],a,r)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
  assert(false)
end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>200</ID>
          <Description>"energy charge time  x2"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('76 12 ?? 00 00 62 ?? 73 63 ?? 5e ?? ?? 66 ?? ?? 2a 66 ?? ?? 75 d1 a0 75 68','-X')
  --                               d1 d1 a0 2a a0 d6 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+14:
      db d1 a0 d1 a0
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
    assert(false)

end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>198</ID>
          <Description>"multi jump @P???"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('d3 60 ?? ?? b3 12 0b 00 00 29 5e ?? ?? d3 46 ?? ?? 01 76 76 12','-X')
  --                            26 02 02 02 02 02 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+00:
      db 26 02 02 02 02
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
    assert(false)

end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>191</ID>
          <Description>"rapid @P(platformer) v3"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function rapidS(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('d0 30 28 d6 28 d7 28 63 ?? 28 63 ?? 28 63 ?? 28 63 ?? 20 86 ?? ?? 63 ?? 5d ?? ?? d1 45 ?? ?? 01 82 29 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 5e ?? ?? 66 ?? ?? d1 a1 68','-X')
  --                         d1 d0 60 ?? ?? b3 12 05 00 00 2a a0 2a a0 02 d6
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local aob2 = AOBScan('d0 30 20 86 ?? ?? d6 20 86 ?? ?? d7 24 00 63','-X')
    if aob2==nil or aob2.Count&lt;1 then return nil end
    local b = aob2[0]
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+02:
      db d1 d0 60
      %s+05:
      readmem(%s+04,2)
      %s+07:
      db b3 12 05 00 00 2a a0 2a a0 02 d6
      %s+1b:
      db d2
      %s+33:
      db d2
      ]],a,a,b,a,a,a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
  assert(false)
end

{$asm}

[ENABLE]
{$lua}
return rapidS(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>189</ID>
          <Description>"quick cooldown @UI(???)"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('66 ?? ?? 5e ?? ?? 66 ?? ?? d1 a2 24 3c a3 a1 68','-X')
  --                               d1 d1 a0 2a a0 d6 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+0d:
      db 29
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
    assert(false)

end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>195</ID>
          <Description>"no hurt reaction anim effect @P (*check note in script)"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
================ NOTE ==============================================
original intension for this cheat is to prevent lose control
when falling into platformer lava zone;
but it turn out ignore hero dead_stat too, turn hero into a zombie ;)

The hero will return normal if reach a save point.

In this zombie stat, the multi-jump cheat is deactivate (no effect).


}



{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('5e ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 13 ?? 00 00 5e ?? ?? 60 ?? ?? d1','-X')
  --                               d1 d1 a0 2a a0 d6 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+09:
      db 29 2a 02
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
    assert(false)

end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>196</ID>
          <Description>"dmg to hero /10000 (all?)"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('14 0e 00 00 62 ?? 5e ?? ?? 46 ?? ?? 00 75 a2 75','-X')
  --                                     25 90 4e 75 02 02 02 02 a3
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+06:
      db 25 90 4e 75 02 02 02 02 a3
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
    assert(false)

end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>192</ID>
          <Description>"allow negative dmg and heal 10 if dmg &lt; 0"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('63 ?? 62 ?? 24 00 0d 05 00 00 24 01 73 63 ?? 62 ?? 48','-X')
  --                               d1 d1 a0 2a a0 d6 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+05:
      db 0
      %s+0b:
      db f6
      ]],a,a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
    assert(false)

end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>193</ID>
              <Description>"hero is merman @P(heal when no air)"</Description>
              <Options moBindActivation="1"/>
              <LastState Activated="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local script={}
  local aob = AOBScan('5d ?? ?? 24 14 5e ?? ?? 66','-X')
  --                               d1 d1 a0 2a a0 d6 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    for i=1,aob.Count do
      local a = aob[i-1]
      script[1+#script]=string.format([[
      %s+04:
      db c0
      ]],a)
    end
    aob.Destroy()
  end
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
        aob = AOBScan('03 82 29 5e ?? ?? 66 ?? ?? 66 ?? ?? 4f ?? ?? 00','-X')
  --                               d1 d1 a0 2a a0 d6 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    for i=1,aob.Count do
      local a = aob[i-1]
      script[1+#script]=string.format([[
      %s+0c:
      db 29 02 02 02
      ]],a)
    end
    aob.Destroy()
  end
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    assert(aob ~= nil)
    return aob
end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>164</ID>
          <Description>"ally &amp; hero haste &amp; iceArmor&lt;~dmg only&gt; @L(atb/jrpg?)"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function ally(skip)
  if skip==true then return '' end
--                        00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
  local script={}
  local b,aob1,aob2,idx
  aob1 = AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
  if aob1~=nil then
--    print('aob1')
    aob2 = AOBScan('d0 60 ?? ?? 87 66 ?? ?? 24 00 0e ?? 00 00 d2','-X')
    if aob2~= nil then --             b3 02 02 02 02 02 12
  --    print('aob2')
      for i=1,aob2.Count do
        local a = aob2[i-1]
        script[1+#script]=string.format([[
        %s+04:
        db b3 02 02 02 02 02 12
        ]],a)
      end
      for i=0,aob1.Count-1 do
        local x,y = readBytes(aob1[i].."+0f",2,true),readBytes(aob2[0].."+02",2,true)
    --    print(i,hx(x[1]),hx(y[1]),hx(x[2]),hx(y[2]))
        if x[1]==y[1] and x[2]==y[2] then
          idx=i
          break
        end
      end
      aob2.Destroy()
    end
  end
--  print(idx)
  if aob1~=nil and idx ~= nil then b = aob1[idx] end
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24
  if b == nil then return nil end
  aob2 = AOBScan('29 5e ?? ?? 66 ?? ?? 5e ?? ?? 66 ?? ?? 66 ?? ?? 73 24 04 a3 ad 76 12 0a 00 00 5e ?? ?? 2c ?? ?? 4f ?? ?? 01','-X')
--                        02 02 02 02 02 02 02 d0 60 00 00 b3 11 00 00 00 d0
--                                                                        00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24
--                                                                                                   02 02 02 02 d1 d1 a0 2a a0 d5
  if aob2~= nil and b~=nil then

    for i=1,aob2.Count do
      local a = aob2[i-1]
      script[1+#script]=string.format([[
      %s+01:
      db 02 02 02 02 02 02 02 d0
      %s+09:
      readmem(%s+00,4)
      %s+0d:
      db 11 09 00 00 d0
      %s+12:
      readmem(%s+0e,4)
      %s+1a:
      db 02 02 02 02 d1 d1 a0 2a a0 d5
      ]],a,a,b,a,a,b,a)
    end
    aob2.Destroy()
    aob1.Destroy()
    aob1 = b~=nil and #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
--    print(aob1)
    return aob1
  end
  assert(false)
end

{$asm}

[ENABLE]
{$lua}
return ally(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>173</ID>
          <Description>"[B]weaponTime x~4 &amp; level max @S(shot?)"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function wptime(skip)
  if skip==true then return '' end
--                          00 01 02 03 04 05 06 07 08
  weaponTime_aob = AOBScan('2d ?? 75 2a d6 68 ?? ?? d2 68 ?? ?? 60 ?? 24 00','-X')
  local aob = weaponTime_aob
  if aob~= nil then
    script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+00:
      db 25 b0 09 75 2a
      %s+08:
      db 02
      %s+0f:
      db 02
      ]],a,a,a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
  assert(false)
end

{$asm}

[ENABLE]
{$lua}
return wptime(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>186</ID>
          <Description>"rapid @S(shot?) x4"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function rapidS(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('d0 30 20 86 ?? ?? d6 24 00 d7 5d ?? ?? d1 45','-X')
  --                         d1 d1 a0 2a a0 d6 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+02:
      db d1 d1 a0 2a a0 d6 02 02
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
    assert(false)
end

{$asm}

[ENABLE]
{$lua}
return rapidS(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>174</ID>
          <Description>"[A]time scale @DD (fight?) x1.5"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
  local aob = AOBScan('d0 30 57 30 28 d7 28 63 ?? 28 63 ?? 20 82 63 ?? 20 86 ?? ?? 63 ?? 20 86 ?? 63','-X')
  if aob~= nil then --             d1 d1 a0 d1 a0 24 02 75 a3 d5 02 02
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+04:
      db d1 d1 a0 d1 a0 24 02 75 a3 d5 02 02
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
    assert(false)
end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>165</ID>
      <Description>"IGNORE"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>162</ID>
          <Description>"start game with [Artificer]"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]


aobscan(high,2c ?? ?? 2c ?? ?? 2c ?? ?? 2c ?? ?? 56 0e 68 ?? ?? 5e ?? ?? 24 00 68)
aobscan(low1, 11 0e 00 00 d0 5d ?? ?? 2c ?? ?? 46 ?? ?? 01 68)
aobscan(low2, 10 07 00 00 d0 2c ?? ?? 68 ?? ?? d0 5d)
low1+08:
readmem(high+09,3)
low2+05:
readmem(high+09,3)
high-1e:
readmem(high+09,3)

//assert(__+30,00)
{
  fullaccess(EA2F874,256)
  EA2F874+08:
  readmem(EA2F530,3)
  __+30:
  db 4
}
//luaReturn(@class1st(3))
// 2c ?? ?? 2c ?? ?? 2c ?? ?? 2c ?? ?? 56 0e 68 ?? ?? 5e ?? ?? 24 00 68
[DISABLE]


</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"GuildDung"</Description>
          <Options moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>0</ID>
              <Description>"default hero"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f 60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76
aobscan(_team,    39 ?? 00 00 00 02 28 ?? ?? ?? ?? 17 40 ?? 00 00 00 1F)
aobscan(_addsub,  7E ?? ?? ?? ?? 28 ?? ?? ?? ?? 28 ?? ?? ?? ?? 7D ?? ?? ?? ?? 38 30 00 00 00 02 7B ?? ?? ?? ?? 6F ?? ?? ?? ?? 3A 20 00 00 00 02 25 7B ?? ?? ?? ?? 7E ?? ?? ?? ?? 7E ?? ?? ?? ?? 28 ?? ?? ?? ?? 28 ?? ?? ?? ?? 7D )
_addsub:
db                00 00 00 00 00 00 00 00 00 00
_addsub+0b:
readmem(_addsub+40,4)
aobscan(_stamina, 02 7B ?? ?? ?? ?? 6F ?? ?? ?? ?? 39 64 00 00 00 02 25 7B ?? ?? ?? ?? 7E ?? ?? ?? ?? 02 )
_stamina+01:
readmem(_team+06,5)
_stamina+06:
db                                  00 00 00 00 17 40




[DISABLE]
//_cheatVMT+04,yesthisisleechedfromhaena,nowbanandneutertheleech:

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>158</ID>
              <Description>"ignore Idle"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f 60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76
aobscan(_idle,    7E ?? ?? ?? ?? 39 06 00 00 00 22 00 00 00 00 2A 28)
_idle+06:
db 00




[DISABLE]
//_cheatVMT+04,yesthisisleechedfromhaena,nowbanandneutertheleech:

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>166</ID>
          <Description>"hero rapid @action?"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function ally(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24
  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('d0 30 28 d6 28 d7 28 63 ?? 28 63 ?? 28 63 ?? 28 63 ?? 20 86 ?? ?? 63 ?? 5d','-X')
--                           d0 60 ?? ?? b3
--                                                                        00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24
--                                                                                                   02 02 02 02 d1 d1 a0 2a a0 d5
  if aob~= nil then
    script={}
    local b = ally_aob[0]
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+01:
      db 02 02 02 02 02 02 02 d0
      %s+09:
      readmem(%s+00,4)
      %s+0d:
      db 11 09 00 00 d0
      %s+12:
      readmem(%s+0e,4)
      %s+1a:
      db 02 02 02 02 d1 d1 a0 2a a0 d5
      ]],a,a,b,a,a,b,a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return ally(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>188</ID>
          <Description>"ally &amp; hero haste &amp; iceArmor&lt;~dmg only&gt; @L(atb/jrpg?)"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function ally(skip)
  if skip==true then return '' end
--                        00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
  local script={}
  local b
  if ally_aob == nil or ally_idx==nil then
    local aob1 = AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
    if aob1~=nil then
      local aob2 = AOBScan('d0 60 ?? ?? 87 66 ?? ?? 24 00 0e ?? 00 00 d2','-X')
      if aob2~= nil then --             b3 02 02 02 02 02 12
        for i=1,aob2.Count do
          local a = aob2[i-1]
          script[1+#script]=string.format([[
          %s+04:
          db b3 02 02 02 02 02 12
          ]],a)
        end
        for i=0,aob1-1 do if readWord(aob1[i].."+0f")==readWord(aob2[0].."+02") then ally_idx=i break end end
        aob2.Destroy()
      end
      ally_aob = aob1
    end
  end

  if ally_idx~=nil then b = ally_aob[ally_idx] end
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24
  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('29 5e ?? ?? 66 ?? ?? 5e ?? ?? 66 ?? ?? 66 ?? ?? 73 24 04 a3 ad 76 12 0a 00 00 5e ?? ?? 2c ?? ?? 4f ?? ?? 01','-X')
--                        02 02 02 02 02 02 02 d0 60 00 00 b3 11 00 00 00 d0
--                                                                        00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24
--                                                                                                   02 02 02 02 d1 d1 a0 2a a0 d5
  if aob~= nil and b~=nil then

    for i=1,aob.Count do
      local a = aob[i-1]
      script[1+#script]=string.format([[
      %s+01:
      db 02 02 02 02 02 02 02 d0
      %s+09:
      readmem(%s+00,4)
      %s+0d:
      db 11 09 00 00 d0
      %s+12:
      readmem(%s+0e,4)
      %s+1a:
      db 02 02 02 02 d1 d1 a0 2a a0 d5
      ]],a,a,b,a,a,b,a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return ally(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>194</ID>
          <Description>"can jump?"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('d0 30 5e ?? ?? 66 ?? ?? 66 ?? ?? d1 5e ?? ?? 66','-X')
  --                               d1 d1 a0 2a a0 d6 02 02
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+02:
      db 26 48
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>187</ID>
          <Description>"rapid @P(platformer?)"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function rapidS(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('d0 30 28 d6 28 d7 28 63 ?? 28 63 ?? 28 63 ?? 28 63 ?? 20 86 ?? ?? 63 ?? 5d ?? ?? d1 45 ?? ?? 01 82 29 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 5e ?? ?? 66 ?? ?? d1 a1 68','-X')
  --                         d1 d0 60 ?? ?? b3 12 05 00 00 d1 2a a0 2a a0 d6
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local aob2 = AOBScan('d0 30 20 86 ?? ?? d6 20 86 ?? ?? d7 24 00 63','-X')
    if aob2==nil or aob2.Count&lt;1 then return nil end
    local b = aob2[0]
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+02:
      db d1 d0 60
      %s+05:
      readmem(%s+04,2)
      %s+07:
      db b3 12 05 00 00 2a a0 2a a0 02 d6
      %s+33:
      db d2
      ]],a,a,b,a,a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return rapidS(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>190</ID>
          <Description>"rapid @P(platformer?) v2"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function rapidS(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('d0 30 28 d6 28 d7 28 63 ?? 28 63 ?? 28 63 ?? 28 63 ?? 20 86 ?? ?? 63 ?? 5d ?? ?? d1 45 ?? ?? 01 82 29 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 5e ?? ?? 66 ?? ?? d1 a1 68','-X')
  --                         d1 d0 60 ?? ?? b3 12 05 00 00 2a a0 2a a0 02 d6
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local aob2 = AOBScan('d0 30 20 86 ?? ?? d6 20 86 ?? ?? d7 24 00 63','-X')
    if aob2==nil or aob2.Count&lt;1 then return nil end
    local b = aob2[0]
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+02:
      db d1 d0 60
      %s+05:
      readmem(%s+04,2)
      %s+07:
      db b3 12 05 00 00 2a a0 2a a0 02 d5
      %s+33:
      db d1
      ]],a,a,b,a,a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return rapidS(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>172</ID>
          <Description>"loot magnet? @Z(???)"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('60 ?? ?? ad 76 12 ?? 00 00 62 ?? 4f ?? ?? 00 62 ?? 60 ?? ?? 87','-X')
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+00:
      db 29 26 02 02 02
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"loot magnet? @P(platformer?)"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('24 02 ad 76 12 ?? 00 00 62 ?? 60 ?? ?? 87 80 ?? ?? 63 ?? 27 62 ?? 20 80 ?? ?? 13 ?? 00 00 29 62 ?? 66 ?? ?? 62 ?? ad 76 12 ?? 00 00 62','-X')
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+00:
      db 29 26 02 02
      %s+24:
      db 29 26 02 02
      ]],a,a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>197</ID>
          <Description>"multi jump (part1) @P?"</Description>
          <Options moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function run(skip)
  if skip==true then return '' end
--                                00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e
--  ally_aob = ally_aob or AOBScan('60 ?? ?? b3 12 ?? 00 00 10 ?? 00 00 62 ?? 60 ?? ?? b3 12 ?? 00 00 10','-X')
--                     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26
--  if ally_aob == nil or ally_aob.Count &lt;1 then return nil end
  local aob = AOBScan('66 ?? ?? 66 ?? ?? a5 73 a8 24 00 ab 96 76 12 ?? 00 00 5e ?? ?? 66 ?? ?? 66 ?? ?? 27 68','-X')
  --                                     25 90 4e 75 02 02 02 02 a3
  -- d1 a1 68 ?? ?? 5e ?? ?? d1 4f ?? ?? 01 5e ?? ?? 46
  if aob~= nil then
    local script={}
    for i=1,aob.Count do
      local a = aob[i-1]
      script[i]=string.format([[
      %s+0e:
      db 11 00
      ]],a)
    end
    aob.Destroy()
    aob = #script&gt;0 and table.concat(script,"\n") or nil
--    print(tostring(aob))
    return aob
  end
end

{$asm}

[ENABLE]
{$lua}
return run(syntaxcheck)
{$asm}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>__</Name>
      <Address>00440000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
