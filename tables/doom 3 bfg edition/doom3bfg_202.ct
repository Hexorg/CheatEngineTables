<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Infinite Health"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(ih_1,16,Doom3BFG.exe) //Infinite Health
aobscanmodule(ih_aob1,Doom3BFG.exe,01 89 86 D8 00 00 00)
registersymbol(ih_aob1)
label(returnhere_ih_1)

//--------------------------------------------------//
ih_1:
mov [esi+000000D8],#100
jmp returnhere_ih_1
//--------------------------------------------------//

ih_aob1+1:
jmp ih_1
nop
returnhere_ih_1:

[Disable]

ih_aob1+1:
db 89 86 D8 00 00 00
unregistersymbol(ih_aob1)
dealloc(ih_1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>64</ID>
      <Description>"Instant Kill"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

//Instant Kill
aobscanmodule(ik_aob1,Doom3BFG.exe,2B C1 89 86 D8 00 00 00)
registersymbol(ik_aob1)

ik_aob1:
db 29 C0

[Disable]

ik_aob1:
db 2B C1
unregistersymbol(ik_aob1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Infinite Clip Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(ica_1,16,Doom3BFG.exe) //Infinite Clip Ammo
aobscanmodule(ica_aob1,Doom3BFG.exe,8B 81 44 0D 00 00)
registersymbol(ica_aob1)
label(returnhere_ica_1)

//--------------------------------------------------//
ica_1:
mov eax,[ecx+00000D44]
push [ecx+D40]
pop [ecx+D44]
add [ecx+D44],1
jmp returnhere_ica_1
//--------------------------------------------------//

ica_aob1:
jmp ica_1
nop
returnhere_ica_1:

[Disable]

ica_aob1:
db 8B 81 44 0D 00 00
unregistersymbol(ica_aob1)
dealloc(ica_1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Infinite Spare Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

//Infinite Spare Ammo
aobscanmodule(isa_aob1,Doom3BFG.exe,2B C1 B9 * * * * 89 84)
registersymbol(isa_aob1)

isa_aob1:
db 90 90

[Disable]

isa_aob1:
db 2B C1
unregistersymbol(isa_aob1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Infinite Stamina"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

//Infinite Stamina
aobscanmodule(is_aob1,Doom3BFG.exe,DE E9 D9 9E 98 23 00 00)
registersymbol(is_aob1)

is_aob1:
db DE C1

[Disable]

is_aob1:
db DE E9
unregistersymbol(is_aob1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Infinite Flashlight"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

//Infinite Flashlight
aobscanmodule(if_aob1,Doom3BFG.exe,01 97 14 23 00 00 79)
registersymbol(if_aob1)

if_aob1:
db 29 97 14 23 00 00

[Disable]

if_aob1:
db 01 97 14 23 00 00
unregistersymbol(if_aob1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>69</ID>
      <Description>"----&gt; Cycle All Weapons"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(caw_1,16,Doom3BFG.exe) //Cycle All Weapons
aobscanmodule(caw_aob1,Doom3BFG.exe,8B 86 44 29 00 00 57)
registersymbol(caw_aob1)
label(returnhere_caw_1)

label(v_weapon) //Weapon Index
registersymbol(v_weapon)

//--------------------------------------------------//
caw_1:
push [v_weapon]
pop [esi+2944]
jmp returnhere_caw_1

v_weapon:
dd 0
//--------------------------------------------------//
resetIndex:
mov [v_weapon],0
jmp returnhere_caw_1
//--------------------------------------------------//

caw_aob1:
jmp caw_1
nop
returnhere_caw_1:

[Disable]

caw_aob1:
db 8B 86 44 29 00 00
unregistersymbol(caw_aob1)
dealloc(caw_1)

unregistersymbol(v_weapon)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>72</ID>
          <Description>"Weapon Index"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>v_weapon</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>48</Key>
              </Keys>
              <Value>12</Value>
              <Description>Soul Cube</Description>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>49</Key>
              </Keys>
              <Value>1</Value>
              <Description>Chainsaw</Description>
              <ID>1</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>50</Key>
              </Keys>
              <Value>2</Value>
              <Description>Pistol</Description>
              <ID>2</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>51</Key>
              </Keys>
              <Value>3</Value>
              <Description>Shotgun</Description>
              <ID>3</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>53</Key>
              </Keys>
              <Value>5</Value>
              <Description>Machine Gun</Description>
              <ID>4</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>54</Key>
              </Keys>
              <Value>6</Value>
              <Description>Chain Gun</Description>
              <ID>5</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>55</Key>
              </Keys>
              <Value>7</Value>
              <Description>Grenade</Description>
              <ID>6</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>56</Key>
              </Keys>
              <Value>8</Value>
              <Description>Plasma Gun</Description>
              <ID>7</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>57</Key>
              </Keys>
              <Value>9</Value>
              <Description>Rockets</Description>
              <ID>8</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>52</Key>
              </Keys>
              <Value>10</Value>
              <Description>BFG</Description>
              <ID>9</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>77</Key>
              </Keys>
              <Value>0</Value>
              <Description>Melee</Description>
              <ID>10</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"----&gt; FOV Override"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(fovo_1,16,Doom3BFG.exe) //FOV Override
aobscanmodule(fovo_aob1,Doom3BFG.exe,D9 40 28 8B 11)
registersymbol(fovo_aob1)
label(returnhere_fovo_1)

label(v_fov) //FOV Value
registersymbol(v_fov)

//--------------------------------------------------//
fovo_1:
fld dword ptr [eax+28]
fld [v_fov]
fstp [eax+28]
mov edx,[ecx]
jmp returnhere_fovo_1

v_fov:
dd (float)80
//--------------------------------------------------//

fovo_aob1:
jmp fovo_1
returnhere_fovo_1:

[Disable]

fovo_aob1:
db D9 40 28 8B 11
unregistersymbol(fovo_aob1)
dealloc(fovo_1)

unregistersymbol(v_fov)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Value"</Description>
          <VariableType>Float</VariableType>
          <Address>v_fov</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
