<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>503</ID>
      <Description>"COORDINATES"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Target:  Bully.exe
//Author:  ++METHOS

[ENABLE]

{====================  coordinates_id  ====================}

aobscanmodule(aob_coordinates_id,Bully.exe,8B 51 30 83 C1 30)
alloc(newmem_coordinates_id,1024,Bully.exe)

label(return_coordinates_id)
label(originalcode_coordinates_id)
label(coordinates_id_address)

registersymbol(aob_coordinates_id)
registersymbol(coordinates_id_address)


newmem_coordinates_id:
push edi
lea edi,[ecx+30]
mov [coordinates_id_address],edi
pop edi

originalcode_coordinates_id:
mov edx,[ecx+30]
add ecx,30
jmp return_coordinates_id

coordinates_id_address:
dd 0

aob_coordinates_id:
jmp newmem_coordinates_id
db 90
return_coordinates_id:




{====================  teleport_vac  ====================}

aobscanmodule(aob_teleport_vac,Bully.exe,D9 02 8D 44 24 04)
alloc(newmem_teleport_vac,1024,Bully.exe)

label(return_teleport_vac)
label(originalcode_teleport_vac)
label(save_c1)
label(save_coordinates1)
label(load_c1)
label(load_coordinates1)
label(x_c1)
label(y_c1)
label(z_c1)
label(save_c2)
label(save_coordinates2)
label(load_c2)
label(load_coordinates2)
label(x_c2)
label(y_c2)
label(z_c2)
label(x_cv)
label(y_cv)
label(z_cv)
label(enemy)
label(load_coordinatesv)
label(enemyvac)
label(save_coordinatesv)
label(save_cv)
label(teleport_vac_address)


registersymbol(aob_teleport_vac)
registersymbol(save_coordinates1)
registersymbol(load_coordinates1)
registersymbol(x_c1)
registersymbol(y_c1)
registersymbol(z_c1)
registersymbol(save_coordinates2)
registersymbol(load_coordinates2)
registersymbol(x_c2)
registersymbol(y_c2)
registersymbol(z_c2)
registersymbol(save_coordinatesv)
registersymbol(load_coordinatesv)
registersymbol(x_cv)
registersymbol(y_cv)
registersymbol(z_cv)
registersymbol(teleport_vac_address)


newmem_teleport_vac:

push eax
push edi
lea eax,dword ptr [edx]
mov edi,[coordinates_id_address]    //Rename xxxxxxxx_address
cmp eax,edi
pop edi
pop eax
jne enemy

push edx
lea edx,dword ptr [edx]
mov [teleport_vac_address],edx
pop edx

cmp byte ptr [save_coordinates1],1
je save_c1
cmp byte ptr [save_coordinates2],1
je save_c2
cmp byte ptr [save_coordinatesv],1
je save_cv
cmp byte ptr [load_coordinates1],1
je load_c1
cmp byte ptr [load_coordinates2],1
je load_c2

fld dword ptr [edx]
lea eax,[esp+04]
jmp return_teleport_vac

enemy:
cmp byte ptr [load_coordinatesv],1
je enemyvac
jmp originalcode_teleport_vac

enemyvac:
cmp [x_cv],0
je originalcode_teleport_vac
push eax
mov eax,[x_cv]
mov [edx],eax
mov eax,[y_cv]
mov [edx+4],eax
mov eax,[z_cv]
mov [edx+8],eax
pop eax
fld dword ptr [edx]
lea eax,[esp+04]
jmp return_teleport_vac

save_c1:
mov byte ptr [save_coordinates1],0
push eax
mov eax,[edx]
mov [x_c1],eax
mov eax,[edx+4]
mov [y_c1],eax
mov eax,[edx+8]
mov [z_c1],eax
pop eax
jmp originalcode_teleport_vac

save_c2:
mov byte ptr [save_coordinates2],0
push eax
mov eax,[edx]
mov [x_c2],eax
mov eax,[edx+4]
mov [y_c2],eax
mov eax,[edx+8]
mov [z_c2],eax
pop eax
jmp originalcode_teleport_vac

save_cv:
mov byte ptr [save_coordinatesv],0
push eax
mov eax,[edx]
mov [x_cv],eax
mov eax,[edx+4]
mov [y_cv],eax
mov eax,[edx+8]
mov [z_cv],eax
pop eax
jmp originalcode_teleport_vac

load_c1:
cmp [x_c1],0
je originalcode_teleport_vac
mov byte ptr [load_coordinates1],0
push eax
mov eax,[x_c1]
mov [edx],eax
mov eax,[y_c1]
mov [edx+4],eax
mov eax,[z_c1]
mov [edx+8],eax
pop eax
jmp originalcode_teleport_vac

load_c2:
cmp [x_c2],0
je originalcode_teleport_vac
mov byte ptr [load_coordinates2],0
push eax
mov eax,[x_c2]
mov [edx],eax
mov eax,[y_c2]
mov [edx+4],eax
mov eax,[z_c2]
mov [edx+8],eax
pop eax
jmp originalcode_teleport_vac

originalcode_teleport_vac:
fld dword ptr [edx]
lea eax,[esp+04]
jmp return_teleport_vac

teleport_vac_address:
dd 0

save_coordinates1:
db 0
save_coordinates2:
db 0
load_coordinates1:
db 0
load_coordinates2:
db 0
save_coordinatesv:
db 0
load_coordinatesv:
db 0

x_cv:
dd 0
y_cv:
dd 0
z_cv:
dd 0

x_c1:
dd 0
y_c1:
dd 0
z_c1:
dd 0
x_c2:
dd 0
y_c2:
dd 0
z_c2:
dd 0

aob_teleport_vac:
jmp newmem_teleport_vac
db 90
return_teleport_vac:




{====================  speedx  ====================}

aobscanmodule(aob_speedx,Bully.exe,D8 C9 D8 00 D9 18)
alloc(newmem_speedx,1024,Bully.exe)

label(return_speedx)
label(originalcode_speedx)

registersymbol(aob_speedx)


newmem_speedx:
push edx
push edi
lea edx,dword ptr [eax]
mov edi,[coordinates_id_address]    //Rename xxxxxxxx_address
cmp edx,edi
pop edi
pop edx
jne originalcode_speedx

fmul st(0),st(1)
fmul st(0),st(1)
fmul st(0),st(1)

originalcode_speedx:
fmul st(0),st(1)
fadd dword ptr [eax]
fstp dword ptr [eax]
jmp return_speedx

aob_speedx:
jmp newmem_speedx
db 90
return_speedx:




{====================  speedz  ====================}

aobscanmodule(aob_speedz,Bully.exe,D8 C9 D8 40 04 D9 58 04 F6 86 BC 01 00 00 02 0F 85)
alloc(newmem_speedz,1024,Bully.exe)

label(return_speedz)
label(originalcode_speedz)

registersymbol(aob_speedz)


newmem_speedz:
push edx
push edi
lea edx,dword ptr [eax]
mov edi,[coordinates_id_address]    //Rename xxxxxxxx_address
cmp edx,edi
pop edi
pop edx
jne originalcode_speedz

fmul st(0),st(1)
fmul st(0),st(1)
fmul st(0),st(1)

originalcode_speedz:
fmul st(0),st(1)
fadd dword ptr [eax+04]
jmp return_speedz

aob_speedz:
jmp newmem_speedz
return_speedz:




{====================  speedy  ====================}

aobscanmodule(aob_speedy,Bully.exe,D8 C9 83 C0 30)
alloc(newmem_speedy,1024,Bully.exe)

label(return_speedy)
label(originalcode_speedy)

registersymbol(aob_speedy)


newmem_speedy:
push edx
push edi
lea edx,dword ptr [eax+30]
mov edi,[coordinates_id_address]    //Rename xxxxxxxx_address
cmp edx,edi
pop edi
pop edx
jne originalcode_speedy

fmul st(0),st(1)
fmul st(0),st(1)
fmul st(0),st(1)

originalcode_speedy:
fmul st(0),st(1)
add eax,30
jmp return_speedy

aob_speedy:
jmp newmem_speedy
return_speedy:


[DISABLE]
dealloc(newmem_coordinates_id)
aob_coordinates_id:
db 8B 51 30 83 C1 30

unregistersymbol(aob_coordinates_id)
unregistersymbol(coordinates_id_address)

dealloc(newmem_teleport_vac)
aob_teleport_vac:
db D9 02 8D 44 24 04

unregistersymbol(aob_teleport_vac)
unregistersymbol(save_coordinates1)
unregistersymbol(load_coordinates1)
unregistersymbol(x_c1)
unregistersymbol(y_c1)
unregistersymbol(z_c1)
unregistersymbol(save_coordinates2)
unregistersymbol(load_coordinates2)
unregistersymbol(x_c2)
unregistersymbol(y_c2)
unregistersymbol(z_c2)
unregistersymbol(save_coordinatesv)
unregistersymbol(load_coordinatesv)
unregistersymbol(x_cv)
unregistersymbol(y_cv)
unregistersymbol(z_cv)
unregistersymbol(teleport_vac_address)

dealloc(newmem_speedx)
aob_speedx:
db D8 C9 D8 00 D9 18

unregistersymbol(aob_speedx)

dealloc(newmem_speedz)
aob_speedz:
db D8 C9 D8 40 04

unregistersymbol(aob_speedz)

dealloc(newmem_speedy)
aob_speedy:
db D8 C9 83 C0 30

unregistersymbol(aob_speedy)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>507</ID>
          <Description>"X"</Description>
          <VariableType>Float</VariableType>
          <Address>teleport_vac_address</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>509</ID>
          <Description>"Z"</Description>
          <VariableType>Float</VariableType>
          <Address>teleport_vac_address</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>508</ID>
          <Description>"Y"</Description>
          <VariableType>Float</VariableType>
          <Address>teleport_vac_address</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>510</ID>
      <Description>"SAVE SLOT 1"</Description>
      <VariableType>Byte</VariableType>
      <Address>save_coordinates1</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>512</ID>
      <Description>"LOAD SLOT 1"</Description>
      <VariableType>Byte</VariableType>
      <Address>load_coordinates1</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>113</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>511</ID>
      <Description>"SAVE SLOT 2"</Description>
      <VariableType>Byte</VariableType>
      <Address>save_coordinates2</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>114</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>513</ID>
      <Description>"LOAD SLOT 2"</Description>
      <VariableType>Byte</VariableType>
      <Address>load_coordinates2</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>115</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>514</ID>
      <Description>"SAVE VAC"</Description>
      <VariableType>Byte</VariableType>
      <Address>save_coordinatesv</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>116</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>515</ID>
      <Description>"LOAD VAC"</Description>
      <VariableType>Byte</VariableType>
      <Address>load_coordinatesv</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>117</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>122</Key>
          </Keys>
          <Value>0</Value>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>aob_sefe</Name>
      <Address>0047D8B8</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
