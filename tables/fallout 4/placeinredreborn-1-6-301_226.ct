<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>52</ID>
      <Description>"Place In Red - Reborn -- [check this box for diagnostics]"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

{$LUA}

    if(getCEVersion() &lt; 6.51) then
      ShowMessage('You need to update Cheat Engine to 6.51 or higher.')
    elseif (process == nil) then
      ShowMessage('You need to attach Cheat Engine to Fallout4.exe first.')
    elseif(process ~= "Fallout4.exe") then
      ShowMessage('Cheat Engine is currently attached to the wrong process. Attach it to Fallout4.exe instead.')
    elseif (readQword("Fallout4.exe+0")) ~= 12894362189 then
      ShowMessage('Did you re-launch Fallout 4 recently? If so, re-attach Cheat Engine to the new Fallout4.exe process.')
    elseif (readQword("Fallout4.exe+2B17E48")) ~= 13561596235623985 then
      ShowMessage('Everything looks good, but this table was tested on Fallout4.exe version 1.6.3.0.1. You dont seem to be running that version. Most of the time this table is forward compatible, but I may need to update the table if a new version just came out.')
    else
      ShowMessage('Everything looks good, you passed all the checks! If you still have issues, Im not sure what the problem is. Sorry!')
    end

[DISABLE]
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"[shift+1] Toggle place in red"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$LUA}
errorOnLookupFailure(FALSE)

    if(getCEVersion() &lt; 6.51) then
      ShowMessage('You need to update Cheat Engine to 6.51 or higher.')
    elseif (process == nil) then
      ShowMessage('You need to attach Cheat Engine to Fallout4.exe first.')
    elseif(process ~= "Fallout4.exe") then
      ShowMessage('Cheat Engine is currently attached to the wrong process. Attach it to Fallout4.exe instead.')
    elseif(readBytes("Fallout4.exe",1) ~= 77) then
      ShowMessage('Please re-attach Cheat Engine to Fallout4.exe.')
    end
{$ASM}
[ENABLE]
//PTR01:

{$LUA}
 autoAssemble([[
  aobscanmodule(PTR01_A,Fallout4.exe+1E0000, C6 05 x x x x 01 84 C0 75 A9 B1 02 EB 9F 40 84 FF)
  registersymbol(PTR01_A)
  ]])
 a,b,c,d = splitDisassembledString(disassemble(getAddress("PTR01_A")))
 first = b:match("%[(.-)%]")
 unregisterSymbol("base")
 registerSymbol("base",first,true)

{$asm}

//PTR02:
aobscanmodule(PTR02_A,Fallout4.exe+1E0000, 40 88 35 x x x x C6 05 x x x x 01 40 88 35 x x x x 48 85 DB)
registersymbol(PTR02_A)
aobscanmodule(PTR02_B,Fallout4.exe+1E0000, 88 15 x x x x EB 04 84 D2 74 07 C6 85 x x x x 00 84 D2 F3)
registersymbol(PTR02_B)
aobscanmodule(PTR02_C,Fallout4.exe+1E0000, 45 84 F6 74 11 40 84 F6 74 0C B0 01 B1 03 88 05 x x x x EB 0F 32 C0)
registersymbol(PTR02_C)
aobscanmodule(PTR02_D,Fallout4.exe+1E0000, 88 05 x x x x 0F B6 0D x x x x 0F B6 15 x x x x 0F B6 C9 41 B8 x x x x 84 D2)
registersymbol(PTR02_D)
aobscanmodule(PTR02_E,Fallout4.exe+1E0000, EB 05 E8 x x x x 83 BD x x x x 00 48 8D 8D x x x x 0F 95 05 x x x x E8)
registersymbol(PTR02_E)

//PTR03:
aobscanmodule(PTR03_A,Fallout4.exe+1E0000, 88 0D x x x x 45 84 F6 0F 85 x x x x 84 D2 0F 84 x x x x 45 84 ED)
registersymbol(PTR03_A)
aobscanmodule(PTR03_B,Fallout4.exe+1E0000, 88 0D x x x x F3 0F 10 05 x x x x 41 0F 2F C2 76 4D C6 05 x x x x 0D 40 32 FF E9)
registersymbol(PTR03_B)
aobscanmodule(PTR03_C,Fallout4.exe+1E0000, 88 05 x x x x 48 85 ED 0F 84 x x x x 48 8B CD E8 x x x x 84 C0 0F 84 x x x x 40 38 35)
registersymbol(PTR03_C)
aobscanmodule(PTR03_D,Fallout4.exe+1E0000, 88 0D x x x x 48 8B 0D x x x x F3 41 0F 10 06 F3 41 0F 10 4E 04 F3 0F 11 44 24 60)
registersymbol(PTR03_D)
aobscanmodule(PTR03_E,Fallout4.exe+1E0000, 88 05 x x x x 48 8B B4 24 x x x x 48 8D 95 x x x x 48 8D 0D x x x x 48 C7 85)
registersymbol(PTR03_E)
aobscanmodule(PTR03_F,Fallout4.exe+1E0000, C6 05 x x x x 00 48 C7 45 C7 x x x x E8 x x x x 48 8B 5D C7 83 CE FF 48 85 DB 0F 84)
registersymbol(PTR03_F)
aobscanmodule(PTR03_G,Fallout4.exe+1E0000, C6 05 x x x x 02 48 85 C9 74 2A 48 83 C1 20 8B C7 F0 0F C1 41 08 FF C8 A9 x x x x 75 06)
registersymbol(PTR03_G)
aobscanmodule(PTR03_H,Fallout4.exe+1E0000, C6 05 x x x x 03 B9 x x x x B8 x x x x 40 84 FF 0F 45 C8 E8 x x x x 83 3D x x x x 00)
registersymbol(PTR03_H)
aobscanmodule(PTR03_I,Fallout4.exe+1E0000, C6 05 x x x x 05 E9 x x x x 48 8B 0D x x x x 40 32 FF 48 8B 71 58 48 85 F6 0F 95 C0 88 85)
registersymbol(PTR03_I)
aobscanmodule(PTR03_J,Fallout4.exe+1E0000, C6 05 x x x x 06 E9 x x x x 45 84 F6 0F 84 x x x x 48 8D 94 24 x x x x 48 8D 0D)
registersymbol(PTR03_J)
aobscanmodule(PTR03_K,Fallout4.exe+1E0000, C6 05 x x x x 08 E9 x x x x 45 32 F6 48 8B 8D x x x x 4C 8D 4C 24 38 45 33 C0 33 D2 48)
registersymbol(PTR03_K)
aobscanmodule(PTR03_L,Fallout4.exe+1E0000, C6 05 x x x x 0A E9 x x x x 45 84 ED 75 3D 44 38 2D x x x x 74 0F 40 32 FF)
registersymbol(PTR03_L)
aobscanmodule(PTR03_M,Fallout4.exe+1E0000, C6 05 x x x x 0B E9 x x x x 45 84 ED 75 20 48 8D 54 24 40 48 8B CB E8 x x x x 84 C0)
registersymbol(PTR03_M)
aobscanmodule(PTR03_N,Fallout4.exe+1E0000, C6 05 x x x x 0C E9 x x x x C6 05 x x x x 01 45 84 ED 74 0D)
registersymbol(PTR03_N)
aobscanmodule(PTR03_O,Fallout4.exe+1E0000, C6 05 x x x x 0D 40 32 FF E9 x x x x 0F B6 05 x x x x 0F B6 B5 x x x x 84 C0)
registersymbol(PTR03_O)

//PTR04:
aobscanmodule(PTR04_A,Fallout4.exe+1E0000, 88 05 x x x x 88 44 24 70 E8 x x x x 48 8D 54 24 70 48 8B C8 E8 x x x x 48 85 DB)
registersymbol(PTR04_A)

//Red to green
aobscanmodule(RED,Fallout4.exe+2000000, C6 05 x x x x 01 F3 0F 11 05 x x x x 0F 28 74 24 40 44 0F 28 44 24 30)
registersymbol(RED)

//Allow movement of temporary yellow scrap only objects
aobscanmodule(YELLOW,Fallout4.exe+1E0000, 48 8B 81 x x x x 8B 58 14 48 8D 4C 24 30 45 33 C0 8B D3 E8 x x x x 48 8B 15 x x x x 48 85 D2 74 31)
registersymbol(YELLOW)

//Sanity check on the instructions
assert(PTR01_A,C6 05 x x x x 01)
assert(PTR02_A,40 88 35 x x x x)
assert(PTR02_B,88 15 x x x x)
assert(PTR02_C+E,88 05 x x x x)
assert(PTR02_D,88 05 x x x x)
assert(PTR02_E+15,0F 95 x x x x)
assert(PTR03_A,88 0D x x x x)
assert(PTR03_B,88 0D x x x x)
assert(PTR03_C,88 05 x x x x)
assert(PTR03_D,88 0D x x x x)
assert(PTR03_E,88 05 x x x x)
assert(PTR03_F,C6 05 x x x x 00)
assert(PTR03_G,C6 05 x x x x 02)
assert(PTR03_H,C6 05 x x x x 03)
assert(PTR03_I,C6 05 x x x x 05)
assert(PTR03_J,C6 05 x x x x 06)
assert(PTR03_K,C6 05 x x x x 08)
assert(PTR03_L,C6 05 x x x x 0A)
assert(PTR03_M,C6 05 x x x x 0B)
assert(PTR03_N,C6 05 x x x x 0C)
assert(PTR03_O,C6 05 x x x x 0D)
assert(PTR04_A,88 05 x x x x)
assert(RED,C6 05 x x x x 01)
assert(YELLOW+7,8B 58 14)

//Change bytes
PTR01_A+6:
 db 00
PTR02_A:
 db EB 05
PTR02_B:
 db EB 04
PTR02_C+E:
 db EB 04
PTR02_D:
 db EB 04
PTR02_E+15:
 db EB 05
PTR03_A:
 db EB 04
PTR03_B:
 db EB 04
PTR03_C:
 db EB 04
PTR03_D:
 db EB 04
PTR03_E:
 db EB 04
PTR03_F+6:
 db 01
PTR03_G+6:
 db 01
PTR03_H+6:
 db 01
PTR03_I+6:
 db 01
PTR03_J+6:
 db 01
PTR03_K+6:
 db 01
PTR03_L+6:
 db 01
PTR03_M+6:
 db 01
PTR03_N+6:
 db 01
PTR03_O+6:
 db 01
PTR04_A:
 db EB 04
RED+6:
 db 00
YELLOW+7:
 db 90 90 90
base:
 db 00 00
base+6:
 db 01 01

[DISABLE]

//Revert changes
PTR01_A+6:
 db 01
PTR02_A:
 db 40 88
PTR02_B:
 db 88 15
PTR02_C+E:
 db 88 05
PTR02_D:
 db 88 05
PTR02_E+15:
 db 0F 95
PTR03_A:
 db 88 0D
PTR03_B:
 db 88 0D
PTR03_C:
 db 88 05
PTR03_D:
 db 88 0D
PTR03_E:
 db 88 05
PTR03_F+6:
 db 00
PTR03_G+6:
 db 02
PTR03_H+6:
 db 03
PTR03_I+6:
 db 05
PTR03_J+6:
 db 06
PTR03_K+6:
 db 08
PTR03_L+6:
 db 0A
PTR03_M+6:
 db 0B
PTR03_N+6:
 db 0C
PTR03_O+6:
 db 0D
PTR04_A:
 db 88 05
RED+6:
 db 01
YELLOW+7:
 db 8B 58 14
base:
 db 00 00
base+6:
 db 01 01

//Unregister symbols
unregistersymbol(PTR01_A)
unregistersymbol(PTR02_A)
unregistersymbol(PTR02_B)
unregistersymbol(PTR02_C)
unregistersymbol(PTR02_D)
unregistersymbol(PTR02_E)
unregistersymbol(PTR03_A)
unregistersymbol(PTR03_B)
unregistersymbol(PTR03_C)
unregistersymbol(PTR03_D)
unregistersymbol(PTR03_E)
unregistersymbol(PTR03_F)
unregistersymbol(PTR03_G)
unregistersymbol(PTR03_H)
unregistersymbol(PTR03_I)
unregistersymbol(PTR03_J)
unregistersymbol(PTR03_K)
unregistersymbol(PTR03_L)
unregistersymbol(PTR03_M)
unregistersymbol(PTR03_N)
unregistersymbol(PTR03_O)
unregistersymbol(PTR04_A)
unregistersymbol(RED)
unregistersymbol(YELLOW)
unregistersymbol(base)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>97</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>189</Key>
                <Key>97</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>53</ID>
              <Description>"Should be 0"</Description>
              <LastState Value="0" Activated="1" RealAddress="7FF7229BDE62"/>
              <VariableType>Byte</VariableType>
              <Address>base+0</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys/>
                  <Value>0</Value>
                  <ID>0</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>56</ID>
              <Description>"Should be 0"</Description>
              <LastState Value="0" Activated="1" RealAddress="7FF7229BDE63"/>
              <VariableType>Byte</VariableType>
              <Address>base+1</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys/>
                  <Value>0</Value>
                  <ID>1</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>54</ID>
              <Description>"Should be 1"</Description>
              <LastState Value="1" Activated="1" RealAddress="7FF7229BDE68"/>
              <VariableType>Byte</VariableType>
              <Address>base+6</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys/>
                  <Value>1</Value>
                  <ID>0</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>55</ID>
              <Description>"Should be 1"</Description>
              <LastState Value="1" Activated="1" RealAddress="7FF7229BDE69"/>
              <VariableType>Byte</VariableType>
              <Address>base+7</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys/>
                  <Value>1</Value>
                  <ID>0</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"[shift+2] Disable object snapping"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//Find ini value and change to 0
aobscanmodule(_aob_snap,Fallout4.exe, F3 0F 10 05 x x x x 89 A9 x x x x 66 89 A9)
registersymbol(_aob_snap)
luacall(writeFloat(((getAddress("_aob_snap")) + (readInteger("_aob_snap+4")+8)),0))

// Skips use of actor value 33E on certain objects (concrete) and forces ini value
aobscanmodule(_aob_snapavskip,Fallout4.exe, 41 0F 2F C0 F3 0F 11 87 x x x x 77 10 F3 0F 10 05)
registersymbol(_aob_snapavskip)

_aob_snapavskip+0C:
 db EB 01


[DISABLE]
//Revert snapping to default ini value of 48
luacall(writeFloat(((getAddress("_aob_snap")) + (readInteger("_aob_snap+4")+8)),48))

//Use actor value 33E again when game prefers it
_aob_snapavskip+0C:
 db 77 10

unregistersymbol(_aob_snap)
unregistersymbol(_aob_snapavskip)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>189</Key>
                <Key>98</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"[shift+3] Disable Ground Snap"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_aob_groundsnap,Fallout4.exe, 0F 86 x x x x 49 8B 8E x x x x 4C 8D 4C 24 60 45 33 C0 49 8B D5 E8)
registersymbol(_aob_groundsnap)

assert(_aob_groundsnap,0F 86)

_aob_groundsnap:
 db 0F 85


[DISABLE]

_aob_groundsnap:
 db 0F 86

unregistersymbol(_aob_groundsnap)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>99</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>189</Key>
                <Key>99</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"[shift+4] Slow object rotation and zoom speed"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

//Lower zoom speed from 10 to 1
aobscanmodule(_aob_zoom,Fallout4.exe, F3 0F 10 05 x x x x 0F 29 74 24 20 F3 0F 10 35)
registersymbol(_aob_zoom)
luacall(writeFloat(((getAddress("_aob_zoom")) + (readInteger("_aob_zoom+4")+8)),1))

//Lower rotate speed from 5 to 0.5
aobscanmodule(_aob_rotate,Fallout4.exe, F3 0F 10 0D x x x x F3 0F 59 0D x x x x 84 C9 75 07)
registersymbol(_aob_rotate)
luacall(writeFloat(((getAddress("_aob_rotate")) + (readInteger("_aob_rotate+4")+8)),0.5))


[DISABLE]

//Revert values back to their defaults
luacall(writeFloat(((getAddress("_aob_zoom")) + (readInteger("_aob_zoom+4")+8)),10))
luacall(writeFloat(((getAddress("_aob_rotate")) + (readInteger("_aob_rotate+4")+8)),5))
unregistersymbol(_aob_zoom)
unregistersymbol(_aob_rotate)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>100</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>189</Key>
                <Key>100</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"[shift+5] Keep settlement size at 0"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

//Find where the game modifies workshop size and jump over the instructions
aobscanmodule(_aob_size,Fallout4.exe, 01 05 x x x x 8B 44 24 58 01 05 x x x x E8)
registersymbol(_aob_size)
_aob_size:
 db EB 0E

//Reset size (workbench actor values 00000348 and 0000034A) to zero
luacall(writeQword(((getAddress("_aob_size")) + (readInteger("_aob_size+2")+6)),0))

[DISABLE]

_aob_size:
 db 01 05

unregistersymbol(_aob_size)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>101</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>189</Key>
                <Key>101</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"[shift+6] Disable 5 second timeout"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_aob_timeout,Fallout4.exe, F3 0F 11 05 x x x x 0F 87 81 00 00 00 48 8B 0D)
registersymbol(_aob_timeout)
_aob_timeout:
 db EB 06

[DISABLE]
_aob_timeout:
 db F3 0F
unregistersymbol(_aob_timeout)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>102</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>189</Key>
                <Key>102</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"[shift+7] Disable Outlines"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(_aob_outlines,Fallout4.exe, C6 05 x x x x 01 88 15 x x x x 76 13 48 8B 05)
registersymbol(_aob_outlines)
_aob_outlines+6:
 db 00

[DISABLE]
_aob_outlines+6:
 db 01
unregistersymbol(_aob_outlines)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>103</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>189</Key>
                <Key>103</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"[Shift+8] Toggle noclip (TCL)"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//Find the instructions for noclip
aobscanmodule(_aob_noclip,Fallout4.exe, 88 1D x x x x 48 8B 48 58 48 85 C9 74 0A E8)
registersymbol(_aob_noclip)

//enable noclip
luacall(writeBytes((getAddress("_aob_noclip")) + (readInteger("_aob_noclip+2")+6),1))

[DISABLE]

//disable noclip
luacall(writeBytes((getAddress("_aob_noclip")) + (readInteger("_aob_noclip+2")+6),0))
unregistersymbol(_aob_noclip)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>104</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>189</Key>
                <Key>104</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"[Shift+9] Enable console in survival"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//Find where bEnableConsoleMrnuDuringSurvival is checked

aobscanmodule(_aob_console,Fallout4.exe, 0F 85 x x x x 45 84 FF 75 09 45 84 E4 0F 84 x x x x E8 x x x x 83 F8 06 75 0D 80 3D x x x x 00 0F 84)
registersymbol(_aob_console)

//make sure original instructions match or there is a problem
assert(_aob_console+1C,75 0D)

//JMP instead of JNE
_aob_console+1C:
 db EB


[DISABLE]

assert(_aob_console+1C,x 0D)

_aob_console+1C:
 db 75

unregistersymbol(_aob_console)

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>105</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>189</Key>
                <Key>105</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"[Shift+0] Unlimited crafting supplies"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(_aob_tgm,Fallout4.exe, 80 3D x x x x 00 74 34 48 83 3D x x x x 00 74 27)
registersymbol(_aob_tgm)

//make sure the opcode is the original
assert(_aob_tgm+11,74)

//JMP instead of JE
_aob_tgm+11:
 db EB

//godmode byte is stored here 1 on / 0 off. Set this after we pass the check above
luacall(writeBytes(((getAddress("_aob_tgm")) + (readInteger("_aob_tgm+2")+7)),1))

[DISABLE]
//Make sure we changed it from before
assert(_aob_tgm+11,EB)

//Revert opcode back to JE
_aob_tgm+11:
 db 74

//Disable godmode
luacall(writeBytes(((getAddress("_aob_tgm")) + (readInteger("_aob_tgm+2")+7)),0))
unregistersymbol(_aob_tgm)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>189</Key>
                <Key>96</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_aob_tgm</Name>
      <Address> 7FF71E0E49D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR01_A</Name>
      <Address> 7FF71D479AC3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR02_A</Name>
      <Address> 7FF71D476945</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR02_B</Name>
      <Address> 7FF71D4789D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR02_C</Name>
      <Address> 7FF71D4799D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR02_D</Name>
      <Address> 7FF71D4799F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR02_E</Name>
      <Address> 7FF71D4788F7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_A</Name>
      <Address> 7FF71D479A13</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_B</Name>
      <Address> 7FF71D479A71</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_C</Name>
      <Address> 7FF71D4830E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_D</Name>
      <Address> 7FF71D48FF4D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_E</Name>
      <Address> 7FF71D490605</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_F</Name>
      <Address> 7FF71D492976</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_G</Name>
      <Address> 7FF71D48325C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_H</Name>
      <Address> 7FF71D479C37</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_I</Name>
      <Address> 7FF71D49040A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_J</Name>
      <Address> 7FF71D4831FE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_K</Name>
      <Address> 7FF71D483195</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_L</Name>
      <Address> 7FF71D479B16</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_M</Name>
      <Address> 7FF71D479B33</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_N</Name>
      <Address> 7FF71D479B58</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR03_O</Name>
      <Address> 7FF71D479A85</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PTR04_A</Name>
      <Address> 7FF71D479E0B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>RED</Name>
      <Address> 7FF71F98CE28</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>YELLOW</Name>
      <Address> 7FF71D47BC3C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_aob_noclip</Name>
      <Address> 7FF71D3888E7</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
