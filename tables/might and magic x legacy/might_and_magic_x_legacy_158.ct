<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>290</ID>
      <Description>"Might &amp; Magic X: Legacy AOB script, part 1"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobFoodReader1,8B 80 A4 00 00 00 85 C0 7E ?? 83 EC 0C FF 75 08)
aobscan(aobPartyBuffExpirationUpdater,0F B6 47 28 85 C0 75)
aobscan(aobTurnEnder,57 83 EC 04 8B 7D 08 C6 87 BD 00 00 00 01)

alloc(newmemFoodReader1,4096,aobFoodReader1)

label(aobFoodReader1_r)
label(aobFoodReader1_i)
registersymbol(aobFoodReader1_r)
registersymbol(aobFoodReader1_i)

label(lblFoodReader1)
label(lblFoodReader1SkipGold)
label(lblFoodReader1Skip)
label(lblFoodReader1Ret)

label(bEnableMinGold)
label(iMinGold)
label(bEnableMinFood)
label(iMinFood)
registersymbol(bEnableMinGold)
registersymbol(iMinGold)
registersymbol(bEnableMinFood)
registersymbol(iMinFood)

label(pParty)
registersymbol(pParty)

label(aobPartyBuffExpirationUpdater_r)
label(aobPartyBuffExpirationUpdater_i)
registersymbol(aobPartyBuffExpirationUpdater_r)
registersymbol(aobPartyBuffExpirationUpdater_i)

label(lblPartyBuffExpirationUpdater)
label(lblPartyBuffExpirationUpdaterSkip)
label(lblPartyBuffExpirationUpdaterRet)

label(bEnableInfinitePartyBuffs)
registersymbol(bEnableInfinitePartyBuffs)

label(aobTurnEnder_r)
label(aobTurnEnder_i)
registersymbol(aobTurnEnder_r)
registersymbol(aobTurnEnder_i)

label(lblTurnEnder)
label(lblTurnEnderSkip)
label(lblTurnEnderRet)

label(bEnableInfiniteTurns)
registersymbol(bEnableInfiniteTurns)

newmemFoodReader1:
bEnableInfiniteTurns:
dd 1
bEnableInfinitePartyBuffs:
dd 1
bEnableMinGold:
dd 1
iMinGold:
dd (int)20000
bEnableMinFood:
dd 1
iMinFood:
dd (int)16

lblFoodReader1:
push ebx
mov dword ptr [pParty],eax
cmp dword ptr [bEnableMinGold],1
jne short lblFoodReader1SkipGold
mov ebx,[iMinGold]
cmp dword ptr [eax+000000A0],ebx
jge short lblFoodReader1SkipGold
mov dword ptr [eax+000000A0],ebx
lblFoodReader1SkipGold:
cmp dword ptr [bEnableMinFood],1
jne short lblFoodReader1Skip
mov ebx,[iMinFood]
cmp dword ptr [eax+000000A4],ebx
jge short lblFoodReader1Skip
mov dword ptr [eax+000000A4],ebx
lblFoodReader1Skip:
pop ebx
readmem(aobFoodReader1,6)
jmp lblFoodReader1Ret
aobFoodReader1_i:
readmem(aobFoodReader1,6)
pParty:
dd 0

lblPartyBuffExpirationUpdater:
readmem(aobPartyBuffExpirationUpdater,6)
jne short lblPartyBuffExpirationUpdaterSkip
cmp dword ptr [bEnableInfinitePartyBuffs],0
lblPartyBuffExpirationUpdaterSkip:
jmp lblPartyBuffExpirationUpdaterRet
aobPartyBuffExpirationUpdater_i:
readmem(aobPartyBuffExpirationUpdater,6)

lblTurnEnder:
pushad
push 12
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblTurnEnderSkip
cmp dword ptr [bEnableInfiniteTurns],1
jne short lblTurnEnderSkip
leave
ret
lblTurnEnderSkip:
readmem(aobTurnEnder,7)
jmp lblTurnEnderRet
aobTurnEnder_i:
readmem(aobTurnEnder,7)

aobTurnEnder:
aobTurnEnder_r:
jmp lblTurnEnder
nop
nop
lblTurnEnderRet:

aobPartyBuffExpirationUpdater:
aobPartyBuffExpirationUpdater_r:
jmp lblPartyBuffExpirationUpdater
nop
lblPartyBuffExpirationUpdaterRet:

aobFoodReader1:
aobFoodReader1_r:
jmp lblFoodReader1
nop
lblFoodReader1Ret:

[DISABLE]
aobFoodReader1_r:
readmem(aobFoodReader1_i,6)

unregistersymbol(aobFoodReader1_r)
unregistersymbol(aobFoodReader1_i)

unregistersymbol(bEnableMinGold)
unregistersymbol(iMinGold)
unregistersymbol(bEnableMinFood)
unregistersymbol(iMinFood)

unregistersymbol(pParty)

aobPartyBuffExpirationUpdater_r:
readmem(aobPartyBuffExpirationUpdater_i,6)

unregistersymbol(aobPartyBuffExpirationUpdater_r)
unregistersymbol(aobPartyBuffExpirationUpdater_i)

unregistersymbol(bEnableInfinitePartyBuffs)

aobTurnEnder_r:
readmem(aobTurnEnder_i,7)

unregistersymbol(aobTurnEnder_r)
unregistersymbol(aobTurnEnder_i)

unregistersymbol(bEnableInfiniteTurns)

dealloc(newmemFoodReader1)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>296</ID>
          <Description>"bEnableInfiniteTurns (on ALT)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteTurns</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>295</ID>
          <Description>"bEnableInfinitePartyBuffs"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfinitePartyBuffs</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>291</ID>
          <Description>"bEnableMinGold"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMinGold</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>292</ID>
              <Description>"iMinGold"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinGold</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>293</ID>
          <Description>"bEnableMinFood"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMinFood</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>294</ID>
              <Description>"iMinFood"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinFood</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>297</ID>
      <Description>"Might &amp; Magic X: Legacy AOB script, part 2"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobEnemyHealthReader,8B 88 A4 00 00 00 03 4D 0C 89 88 A4 00 00 00 8B 80 C0 00 00 00 85 C0)
aobscan(aobRelicXPUpdater,8B 46 1C 03 45 0C 89 46 1C 89 45 F8 83 EC 0C 56 8B 06)

alloc(newmemEnemyHealthReader,4096,aobEnemyHealthReader)

label(aobEnemyHealthReader_r)
label(aobEnemyHealthReader_i)
registersymbol(aobEnemyHealthReader_r)
registersymbol(aobEnemyHealthReader_i)

label(lblEnemyHealthReader)
label(lblEnemyHealthReaderSkip)
label(lblEnemyHealthReaderRet)

label(bEnableOneHitKill)
registersymbol(bEnableOneHitKill)

label(aobRelicXPUpdater_r)
label(aobRelicXPUpdater_i)
registersymbol(aobRelicXPUpdater_r)
registersymbol(aobRelicXPUpdater_i)

label(lblRelicXPUpdater)
label(lblRelicXPUpdaterSkip)
label(lblRelicXPUpdaterRet)

label(bEnableRelicLeveler)
registersymbol(bEnableRelicLeveler)

newmemEnemyHealthReader:
bEnableOneHitKill:
dd 1
bEnableRelicLeveler:
dd 1

lblEnemyHealthReader:
cmp dword ptr [bEnableOneHitKill],1
jne short lblEnemyHealthReaderSkip
cmp dword ptr [eax+000000A4],1
jle short lblEnemyHealthReaderSkip
mov dword ptr [eax+000000A4],1
lblEnemyHealthReaderSkip:
readmem(aobEnemyHealthReader,6)
jmp lblEnemyHealthReaderRet
aobEnemyHealthReader_i:
readmem(aobEnemyHealthReader,6)

lblRelicXPUpdater:
readmem(aobRelicXPUpdater,6)
cmp dword ptr [bEnableRelicLeveler],1
jne short lblRelicXPUpdaterSkip
mov eax,[esi+30]
mov eax,[eax+38]
lblRelicXPUpdaterSkip:
jmp lblRelicXPUpdaterRet
aobRelicXPUpdater_i:
readmem(aobRelicXPUpdater,6)

aobRelicXPUpdater:
aobRelicXPUpdater_r:
jmp lblRelicXPUpdater
nop
lblRelicXPUpdaterRet:

aobEnemyHealthReader:
aobEnemyHealthReader_r:
jmp lblEnemyHealthReader
nop
lblEnemyHealthReaderRet:

[DISABLE]
aobEnemyHealthReader_r:
readmem(aobEnemyHealthReader_i,6)

unregistersymbol(aobEnemyHealthReader_r)
unregistersymbol(aobEnemyHealthReader_i)

unregistersymbol(bEnableOneHitKill)

aobRelicXPUpdater_r:
readmem(aobRelicXPUpdater_i,6)

unregistersymbol(aobRelicXPUpdater_r)
unregistersymbol(aobRelicXPUpdater_i)

unregistersymbol(bEnableRelicLeveler)

dealloc(newmemEnemyHealthReader)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>298</ID>
          <Description>"bEnableOneHitKill"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableOneHitKill</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>299</ID>
          <Description>"bEnableRelicLeveler"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableRelicLeveler</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>300</ID>
      <Description>"Might &amp; Magic X: Legacy AOB script, part 3"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobHUDNameReader,8B 40 08 89 45 B0 83 EC 0C 56 E8 ?? ?? ?? ?? 83 C4 10 8D 4D BC 83 EC 08 50 51 39 00)

alloc(newmemHUDNameReader,4096,aobHUDNameReader)

label(aobHUDNameReader_r)
label(aobHUDNameReader_i)
registersymbol(aobHUDNameReader_r)
registersymbol(aobHUDNameReader_i)

label(lblHUDNameReader)
label(lblHUDNameReaderSkipAtts)
label(lblHUDNameReaderSkipSkills)
label(lblHUDNameReaderSkip)
label(lblHUDNameReaderRet)

label(bEnableMinAttPoints)
label(iMinAttPoints)
label(bEnableMinSkillPoints)
label(iMinSkillPoints)
registersymbol(bEnableMinAttPoints)
registersymbol(iMinAttPoints)
registersymbol(bEnableMinSkillPoints)
registersymbol(iMinSkillPoints)

label(pCharLastHint)
registersymbol(pCharLastHint)

newmemHUDNameReader:
bEnableMinAttPoints:
dd 0
iMinAttPoints:
dd (int)32
bEnableMinSkillPoints:
dd 0
iMinSkillPoints:
dd (int)48

lblHUDNameReader:
push ebx
mov dword ptr [pCharLastHint],eax
pushad
push 11
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblHUDNameReaderSkip
cmp dword ptr [bEnableMinSkillPoints],1
jne short lblHUDNameReaderSkipSkills
mov ebx,[iMinSkillPoints]
cmp dword ptr [eax+00000D4],ebx
jge short lblHUDNameReaderSkipSkills
mov dword ptr [eax+00000D4],ebx
lblHUDNameReaderSkipSkills:
cmp dword ptr [bEnableMinAttPoints],1
jne short lblHUDNameReaderSkipAtts
mov ebx,[iMinAttPoints]
cmp dword ptr [eax+00000D8],ebx
jge short lblHUDNameReaderSkipAtts
mov dword ptr [eax+00000D8],ebx
lblHUDNameReaderSkipAtts:
lblHUDNameReaderSkip:
pop ebx
readmem(aobHUDNameReader,6)
jmp lblHUDNameReaderRet
aobHUDNameReader_i:
readmem(aobHUDNameReader,6)
pCharLastHint:
dd 0

aobHUDNameReader:
aobHUDNameReader_r:
jmp lblHUDNameReader
nop
lblHUDNameReaderRet:

[DISABLE]
aobHUDNameReader_r:
readmem(aobHUDNameReader_i,6)

unregistersymbol(aobHUDNameReader_r)
unregistersymbol(aobHUDNameReader_i)

unregistersymbol(bEnableMinAttPoints)
unregistersymbol(iMinAttPoints)
unregistersymbol(bEnableMinSkillPoints)
unregistersymbol(iMinSkillPoints)

unregistersymbol(pCharLastHint)

dealloc(newmemHUDNameReader)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>301</ID>
          <Description>"pCharLastHint"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pCharLastHint</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>316</ID>
              <Description>"Name"</Description>
              <Color>0000FF</Color>
              <VariableType>String</VariableType>
              <Length>32</Length>
              <Unicode>1</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pCharLastHint</Address>
              <Offsets>
                <Offset>c</Offset>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>302</ID>
              <Description>"iHealth"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCharLastHint</Address>
              <Offsets>
                <Offset>A4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>303</ID>
              <Description>"iMana"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCharLastHint</Address>
              <Offsets>
                <Offset>A8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>304</ID>
              <Description>"iXPLevel"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCharLastHint</Address>
              <Offsets>
                <Offset>B0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>305</ID>
              <Description>"iXP"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCharLastHint</Address>
              <Offsets>
                <Offset>B4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>306</ID>
              <Description>"iXPNextLevel"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCharLastHint</Address>
              <Offsets>
                <Offset>B8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>310</ID>
              <Description>"iAttributePoints"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCharLastHint</Address>
              <Offsets>
                <Offset>D8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>311</ID>
              <Description>"iSkillPoints"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCharLastHint</Address>
              <Offsets>
                <Offset>D4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>312</ID>
          <Description>"bEnableMinAttPoints (hold CTRL)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMinAttPoints</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>313</ID>
              <Description>"iMinAttPoints"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinAttPoints</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>314</ID>
          <Description>"bEnableMinSkillPoints (hold CTRL)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMinSkillPoints</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>315</ID>
              <Description>"iMinSkillPoints"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinSkillPoints</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
