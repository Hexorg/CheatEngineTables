<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Doubled Mana cost (please activate)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(DRUNTER)
aobscan(MPSub_AOB,8B D0 F7 DA 3B CA ** ** 03 C8 89 8D 84 00 00 00)
label(MPSubJMP)
registersymbol(MPSubJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//mov ecx,[ebp+00000074]
push eax
mov eax,[ebp+00000084]
sub eax,ecx
add eax,eax
cmp [ebp+00000084],eax
jbe DRUNTER
sub [ebp+00000084],eax
pop eax
jmp returnhere
DRUNTER:
mov [ebp+00000084],0
pop eax

//cmp ecx,0
//ja
originalcode:
//mov [ebp+00000084],ecx

//DRUNTER:
//mov [ebp+00000084],0
//pop eax
//jmp returnhere

exit:
jmp returnhere

MPSub_AOB+A:          //"Reckoning.exe"+39A6A1:
MPSubJMP:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
MPSubJMP:             //"Reckoning.exe"+39A6A1:
mov [ebp+00000084],ecx
//Alt: db 89 8D 84 00 00 00
unregistersymbol(MPSubJMP)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Hero damage halfed, enemy damage doubled (please activate)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)
globalalloc(pHeroHealth,4)
aobscan(hHRead_AOB,8B 4B 48 89 4C 24 14 85 C9)
label(hHReadJMP)
registersymbol(hHReadJMP)
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
label(MonsterHP)
aobscan(hHSubA_AOB,03 CE 89 4F 48 ** ** 89 5F 48 B1 40)
label(hHSubAJMP)
registersymbol(hHSubAJMP)
alloc(newmem3,2048) //2kb should be enough
label(returnhere3)
label(originalcode3)
label(exit3)
aobscan(hHSubB_AOB,8B 47 4C 03 CE 83 F8 01 89 4F 48)
label(hHSubBJMP)
registersymbol(hHSubBJMP)
alloc(newmem4,2048) //2kb should be enough
label(returnhere4)
label(originalcode4)
label(exit4)
aobscan(hHSubC_AOB,8B C6 F7 D8 3B C8)
label(hHSubCJMP)
registersymbol(hHSubCJMP)
//alloc(newmem5,2048) //2kb should be enough
//label(returnhere5)
//label(originalcode5)
//label(exit5)
//label(hHSubDJMP)
//registersymbol(hHSubDJMP)


newmem1: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHeroHealth],ebx
//pushad
//push 0D      //key Enter
//call GetAsyncKeyState
//shr ax,#15
//cmp ax,1
//popad
//jne originalcode1
//mov ecx,[ebx+4C]
//mov [ebx+48],ecx

originalcode1:
mov ecx,[ebx+48]
mov [esp+14],ecx

exit1:
jmp returnhere1

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
//add ecx,esi
cmp [pHeroHealth],edi
jne MonsterHP
//cmp ecx,(int)1
//jge originalcode2
//mov ecx,(int)1
//mov esi,0
//mov ecx,[edi+4C]
add ecx,esi
add ecx,esi
cmp ecx,0
jg originalcode2
mov ecx,0
jmp originalcode2

MonsterHP:
push esi
sar esi,1
add ecx,esi
pop esi
cmp ecx,0
jg originalcode2
mov ecx,0
jmp originalcode2

originalcode2:
//add ecx,esi
mov [edi+48],ecx

exit2:
jmp returnhere2

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
//mov eax,[edi+4C]
//add ecx,esi
//cmp [pHeroHealth],edi
//jne originalcode3
//cmp ecx,(int)1
//jge originalcode3
//mov ecx,(int)1
//mov esi,0

originalcode3:
mov eax,[edi+4C]
add ecx,esi

exit3:
jmp returnhere3

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
//cmp [pHeroHealth],edi
//jne originalcode4
//mov ebx,(int)1

originalcode4:
mov eax,esi
neg eax
cmp ecx,eax

exit4:
jmp returnhere4


//newmem5: //this is allocated memory, you have read,write,execute access
//place your code here
//push ecx
//push ebx
//pop esi
//add ecx,ecx

//push ebx
//push ecx
//sub ecx,[eax+18]
//sar ecx,1
//mov ebx,ecx
//pop ecx
//sub ecx,ebx
//pop ebx

//originalcode5:
//pop esi
//mov [eax+18],ecx
//mov edx,[edi+1C]

//exit5:
//jmp returnhere5


hHRead_AOB:                     //"Reckoning.exe"+3A18E5:
hHReadJMP:
jmp newmem1
nop
nop
returnhere1:

hHSubA_AOB:                     //"Reckoning.exe"+3A1059:
hHSubAJMP:
jmp newmem2
returnhere2:

hHSubB_AOB:                     //"Reckoning.exe"+3A0FC9:
hHSubBJMP:
jmp newmem3
returnhere3:

hHSubC_AOB:                     //"Reckoning.exe"+3A1051:
hHSubCJMP:
jmp newmem4
nop
returnhere4:

//0089D7A9:
//hHSubDJMP:
//jmp newmem5
//nop
//nop
//returnhere5:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem1)
dealloc(newmem2)
dealloc(newmem3)
dealloc(newmem4)
//dealloc(newmem5)
hHReadJMP:                    //"Reckoning.exe"+3A18E5:
db 8B 4B 48 89 4C 24 14
//Alt: mov ecx,[ebx+48]
//Alt: mov [esp+14],ecx
dealloc(pHeroHealth)
unregistersymbol(hHReadJMP)
hHSubAJMP:                    //"Reckoning.exe"+3A1059:
db 03 CE 89 4F 48
//Alt: add ecx,esi
//Alt: mov [edi+48],ecx
unregistersymbol(hHSubAJMP)
hHSubBJMP:                    //"Reckoning.exe"+3A0FC9:
db 8B 47 4C 03 CE
//Alt: mov eax,[edi+4C]
//Alt: add ecx,esi
unregistersymbol(hHSubBJMP)
hHSubCJMP:                    //"Reckoning.exe"+3A1051:
db 8B C6 F7 D8 3B C8
//Alt: mov eax,esi
//Alt: neg eax
//Alt: cmp ecx,eax
unregistersymbol(hHSubCJMP)
//hHSubDJMP:                    //"Reckoning.exe"+3A1051:
//db 5E 89 48 18 8B 57 1C
//Alt: mov eax,esi
//Alt: neg eax
//Alt: cmp ecx,eax
//unregistersymbol(hHSubDJMP)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Health (leave unactivated)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pHeroHealth</Address>
          <Offsets>
            <Offset>48</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Sell value set to one quarter (please activate)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(pMoney,4)
aobscan(moneyRead_AOB,85 C0 74 08 8B 80 64 03 00 00 EB 02 33 C0 33 C9 33 D2 89 44 24 20)
label(moneyReadJMP)
registersymbol(moneyReadJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMoney],eax

originalcode:
mov eax,[eax+00000364]

exit:
jmp returnhere

moneyRead_AOB+4:            //"Reckoning.exe"+7020EC:
moneyReadJMP:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
moneyReadJMP:               //"Reckoning.exe"+7020EC:
db 8B 80 64 03 00 00
//Alt: mov eax,[eax+00000364]
dealloc(pMoney)
unregistersymbol(moneyReadJMP)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Money (leave unactivated)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pMoney</Address>
          <Offsets>
            <Offset>364</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Sell value set to one quarter (please activate)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(moneySub_AOB,CC CC 01 86 64 03 00 00 8B 86 64 03 00 00 8B 15 ** ** ** ** 33 C9 85 C0)
label(moneySubJMP)
registersymbol(moneySubJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pMoney],esi
jne originalcode
cmp eax,(int)0
jbe originalcode
push ebx
push ecx
mov ebx,[esi+00000364]
mov ecx,ebx
add ecx,eax
cmp ecx,ebx
jbe originalcode
sar eax,2
//mov eax,(int)0
//add eax,eax
//add eax,eax

originalcode:
pop ecx
pop ebx
add [esi+00000364],eax

exit:
jmp returnhere

moneySub_AOB+2:             //"Reckoning.exe"+63C490:
moneySubJMP:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
moneySubJMP:                //"Reckoning.exe"+63C490:
db 01 86 64 03 00 00
//Alt: add [esi+00000364],eax
unregistersymbol(moneySubJMP)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"EXP adjustment script (please activate, see readme for usage)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(lvlPtSub_AOB,89 48 18 8B 57 1C 5D 89 50 1C 5B C2 08 00 CC CC CC CC CC CC CC CC 50 8B 44 24 08 83 C0 30)
label(lvlPtSubJMP)
registersymbol(lvlPtSubJMP)
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
globalalloc(pLvlUpPt,4)
globalalloc(pExp,4)
aobscan(lvlPtRead_AOB,8B 50 18 89 53 18 8B 40 1C 5F 89 43 1C 5E B8 01 00 00 00)
label(lvlPtReadJMP)
registersymbol(lvlPtReadJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//pushad
//push 'R'      //key R
//call GetAsyncKeyState
//shr ax,#15
//cmp ax,1
//popad
//jne originalcode
//mov ecx,[eax+18]

originalcode:
mov [eax+18],ecx
mov edx,[edi+1C]

exit:
jmp returnhere

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
//mov [pLvlUpPt],eax

//cmp [eax+18],1
//jne originalcode2
mov [pExp],eax
sub [pExp],308


originalcode2:
mov edx,[eax+18]
mov [ebx+18],edx

exit2:
jmp returnhere2

lvlPtSub_AOB:               //"Reckoning.exe"+49CFBA:
lvlPtSubJMP:
jmp newmem
nop
returnhere:

lvlPtRead_AOB:              //"Reckoning.exe"+8C76E:
lvlPtReadJMP:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(newmem2)
lvlPtSubJMP:                //"Reckoning.exe"+49CFBA:
db 89 48 18 8B 57 1C
//Alt: mov [eax+18],ecx
//Alt: mov edx,[edi+1C]
unregistersymbol(lvlPtSubJMP)
lvlPtReadJMP:               //"Reckoning.exe"+8C76E:
db 8B 50 18 89 53 18
//Alt: mov edx,[eax+18]
//Alt: mov [ebx+18],edx
dealloc(pLvlUpPt)
dealloc(pExp)
unregistersymbol(lvlPtReadJMP)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>36</ID>
          <Description>"EXP current sum (leave unactivated, see readme for usage)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pExp</Address>
          <Offsets>
            <Offset>50</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>hp +- 1 Code :mov [edi+48],ecx</Description>
      <Address>007A105B</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>3A105B</ModuleNameOffset>
      <Before>
        <Byte>C8</Byte>
        <Byte>76</Byte>
        <Byte>07</Byte>
        <Byte>03</Byte>
        <Byte>CE</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>48</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>03</Byte>
        <Byte>89</Byte>
        <Byte>5F</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp access 1 Code :mov ecx,[ebx+48]</Description>
      <Address>007A18E5</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>3A18E5</ModuleNameOffset>
      <Before>
        <Byte>8E</Byte>
        <Byte>98</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>4B</Byte>
        <Byte>48</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
        <Byte>85</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>arrow - Code :mov [ebp+00000084],eax</Description>
      <Address>008C16DB</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>4C16DB</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>3B</Byte>
        <Byte>C3</Byte>
        <Byte>7C</Byte>
        <Byte>06</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>85</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>38</Byte>
        <Byte>9C</Byte>
        <Byte>24</Byte>
        <Byte>F4</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>arrow + 1 Code :mov [esi+00000084],eax</Description>
      <Address>008866C0</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>4866C0</ModuleNameOffset>
      <Before>
        <Byte>5E</Byte>
        <Byte>6C</Byte>
        <Byte>89</Byte>
        <Byte>5E</Byte>
        <Byte>60</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>arrow + 2 Code :mov [esi+00000084],ebx</Description>
      <Address>008C4A6C</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>4C4A6C</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>03</Byte>
        <Byte>D8</Byte>
        <Byte>78</Byte>
        <Byte>06</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>9E</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>DB</Byte>
        <Byte>EB</Byte>
        <Byte>12</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>arrow + 3 Code :mov [ecx+00000084],eax</Description>
      <Address>008B9C03</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>4B9C03</ModuleNameOffset>
      <Before>
        <Byte>0A</Byte>
        <Byte>8B</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>2C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>81</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>7D</Byte>
        <Byte>0C</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>arrow access Code :mov eax,[eax+00000084]</Description>
      <Address>0088AFE5</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>48AFE5</ModuleNameOffset>
      <Before>
        <Byte>40</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>74</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>01</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>18</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>repair - Code :movss [esi+00000088],xmm0</Description>
      <Address>008BC1CF</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>4BC1CF</ModuleNameOffset>
      <Before>
        <Byte>28</Byte>
        <Byte>C2</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>D0</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>88</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>82</Byte>
        <Byte>3B</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>mp - Code :mov [ebp+00000084],ecx</Description>
      <Address>0079A6A1</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>39A6A1</ModuleNameOffset>
      <Before>
        <Byte>CA</Byte>
        <Byte>76</Byte>
        <Byte>0A</Byte>
        <Byte>03</Byte>
        <Byte>C8</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>8D</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>0A</Byte>
        <Byte>C7</Byte>
        <Byte>85</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>mp + Code :add [ebp+00000084],eax</Description>
      <Address>0079A602</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>39A602</ModuleNameOffset>
      <Before>
        <Byte>8C</Byte>
        <Byte>8F</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>85</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>B5</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp +- 2 Code :mov [edi+48],ecx</Description>
      <Address>007A0FD1</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>3A0FD1</ModuleNameOffset>
      <Before>
        <Byte>03</Byte>
        <Byte>CE</Byte>
        <Byte>83</Byte>
        <Byte>F8</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>48</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>53</Byte>
        <Byte>01</Byte>
        <Byte>7C</Byte>
        <Byte>02</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp +- 3 Code :mov [edi+48],ebx</Description>
      <Address>007A1060</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>3A1060</ModuleNameOffset>
      <Before>
        <Byte>F7</Byte>
        <Byte>10</Byte>
        <Byte>01</Byte>
        <Byte>EB</Byte>
        <Byte>03</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>5F</Byte>
        <Byte>48</Byte>
      </Actual>
      <After>
        <Byte>B1</Byte>
        <Byte>40</Byte>
        <Byte>84</Byte>
        <Byte>8F</Byte>
        <Byte>DC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>fate + 1 Code :mov [edx+00000204],eax</Description>
      <Address>0082D30E</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>42D30E</ModuleNameOffset>
      <Before>
        <Byte>0C</Byte>
        <Byte>3B</Byte>
        <Byte>C1</Byte>
        <Byte>73</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>82</Byte>
        <Byte>04</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>08</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>fate + 2 Code :mov [edx+00000204],ecx</Description>
      <Address>0082D31A</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>42D31A</ModuleNameOffset>
      <Before>
        <Byte>C4</Byte>
        <Byte>08</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>8A</Byte>
        <Byte>04</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>08</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>fate - Code :mov [eax+00000204],esi</Description>
      <Address>00AF7D00</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>6F7D00</ModuleNameOffset>
      <Before>
        <Byte>F1</Byte>
        <Byte>72</Byte>
        <Byte>02</Byte>
        <Byte>8B</Byte>
        <Byte>F1</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>B0</Byte>
        <Byte>04</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>5E</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>skill point - Code :mov [eax+18],ecx</Description>
      <Address>0089CFBA</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>49CFBA</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
        <Byte>18</Byte>
        <Byte>5E</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>57</Byte>
        <Byte>1C</Byte>
        <Byte>5D</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ +- 1 Code :add [esi+00000364],eax</Description>
      <Address>00A3C490</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>63C490</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>5B</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>86</Byte>
        <Byte>64</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>64</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ +- 2 Code :mov [esi+00000364],eax</Description>
      <Address>00A3C4AC</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>63C4AC</ModuleNameOffset>
      <Before>
        <Byte>9C</Byte>
        <Byte>C1</Byte>
        <Byte>49</Byte>
        <Byte>23</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>64</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8A</Byte>
        <Byte>DC</Byte>
        <Byte>32</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ +- 3 Code :mov [esi+00000364],eax</Description>
      <Address>00A3C4C4</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>63C4C4</ModuleNameOffset>
      <Before>
        <Byte>0D</Byte>
        <Byte>8C</Byte>
        <Byte>5A</Byte>
        <Byte>BF</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>64</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>49</Byte>
        <Byte>24</Byte>
        <Byte>8B</Byte>
        <Byte>11</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ access Code :mov eax,[eax+00000364]</Description>
      <Address>00B020EC</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>7020EC</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>64</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>02</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>33</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>cool down start Code :mov [ecx+esi+04],edx</Description>
      <Address>00892ED0</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>492ED0</ModuleNameOffset>
      <Before>
        <Byte>04</Byte>
        <Byte>8B</Byte>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>1C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>54</Byte>
        <Byte>31</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>04</Byte>
        <Byte>80</Byte>
        <Byte>4C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>cooling down Code :sub [esi+04],eax</Description>
      <Address>00886D6B</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>486D6B</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>EB</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>46</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>0C</Byte>
        <Byte>45</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>cool down set zero Code :mov [esi+04],00000000</Description>
      <Address>00886D49</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>486D49</ModuleNameOffset>
      <Before>
        <Byte>02</Byte>
        <Byte>C6</Byte>
        <Byte>46</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
        <Byte>46</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>7C</Byte>
        <Byte>11</Byte>
        <Byte>8B</Byte>
        <Byte>0D</Byte>
        <Byte>54</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Heal HPCode :mov [edi+48],ecx</Description>
      <Address>007A14F1</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>3A14F1</ModuleNameOffset>
      <Before>
        <Byte>94</Byte>
        <Byte>07</Byte>
        <Byte>83</Byte>
        <Byte>F8</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>48</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>53</Byte>
        <Byte>01</Byte>
        <Byte>7C</Byte>
        <Byte>02</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Raise EXP Code :mov [eax+18],ecx</Description>
      <Address>0089D7AA</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>49D7AA</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
        <Byte>18</Byte>
        <Byte>5E</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>57</Byte>
        <Byte>1C</Byte>
        <Byte>5D</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Gain Level Code :mov eax,[eax+000001F4]</Description>
      <Address>00B0454C</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>70454C</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>F4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>02</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>33</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Real get level 1 Code :mov [edi+000001F4],eax</Description>
      <Address>00847E0E</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>447E0E</ModuleNameOffset>
      <Before>
        <Byte>C6</Byte>
        <Byte>50</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>87</Byte>
        <Byte>F4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>87</Byte>
        <Byte>01</Byte>
        <Byte>1D</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Real Get Level 2 Code :mov eax,[edi+000001F4]</Description>
      <Address>00847E2C</Address>
      <ModuleName>Reckoning.exe</ModuleName>
      <ModuleNameOffset>447E2C</ModuleNameOffset>
      <Before>
        <Byte>BF</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>49</Byte>
        <Byte>24</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>87</Byte>
        <Byte>F4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>11</Byte>
        <Byte>8B</Byte>
        <Byte>52</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>DepleteFatebarCode :mov [eax+00000204],esi</Description>
      <Address>09DA0000</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before/>
      <Actual>
        <Byte>89</Byte>
        <Byte>B0</Byte>
        <Byte>04</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E9</Byte>
        <Byte>DB</Byte>
        <Byte>83</Byte>
        <Byte>D5</Byte>
        <Byte>F6</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pSkillPt</Name>
      <Address>01870000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHeroHealth</Name>
      <Address>0E810000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMoney</Name>
      <Address>0E830000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cooldownJMP</Name>
      <Address>00888EDE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>repairJMP</Name>
      <Address>008BE36F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hHSubEJMP</Name>
      <Address>0089D7A9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hHSubDJMP</Name>
      <Address>0089D7A9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fateBJMP</Name>
      <Address>0082DA0C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pLvlUpPt</Name>
      <Address>0C030000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pExp</Name>
      <Address>0C040000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>moneyReadJMP</Name>
      <Address>00B027CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>moneySubJMP</Name>
      <Address>00A3BE30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lvlPtSubJMP</Name>
      <Address>0089D7AA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lvlPtReadJMP</Name>
      <Address>0048C3AE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MPSubJMP</Name>
      <Address>0079ABC1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hHReadJMP</Name>
      <Address>007A1E05</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hHSubAJMP</Name>
      <Address>007A1579</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hHSubBJMP</Name>
      <Address>007A14E9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hHSubCJMP</Name>
      <Address>007A1571</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
