<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"GameManager"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
label(blaexit)

alloc(bla, 2048)

alloc(GameManager.Static,4)
registersymbol(GameManager.Static)

alloc(SkillsManager.Static,4)
registersymbol(SkillsManager.Static)

alloc(assemblyname, 64)
assemblyname:
db 'Assembly-CSharp',0

alloc(namespace, 64)
namespace:
db '',0

alloc(gm_classname, 64)
gm_classname:
db 'GameManager',0

alloc(im_classname, 64)
im_classname:
db 'SkillsManager',0

alloc(status, 4)
alloc(assembly, 4)
alloc(domain, 4)

bla:
PUSHAD
mov [GameManager.Static],0
mov [SkillsManager.Static],0
call mono.mono_get_root_domain
cmp eax,0
je blaexit
mov [domain],eax // save domain

push [domain]
call mono.mono_thread_attach
add esp,4

push status
push assemblyname
call mono.mono_assembly_load_with_partial_name
add esp,8
cmp eax,0
je blaexit

push eax
call mono.mono_assembly_get_image
add esp,4
cmp eax,0
je blaexit
mov [assembly],eax // save assembly

// find the GameManager
push gm_classname
push namespace
push [assembly]
call mono.mono_class_from_name_case
add esp,C
cmp eax,0
je blaexit

push eax // class
push [domain] // domain
call mono.mono_class_vtable
add esp,8
cmp eax,0
je blaexit


push eax // class
call mono.mono_vtable_get_static_field_data
add esp,4
cmp eax,0
je blaexit
mov [GameManager.Static],eax

// find the InterfaceManager
push im_classname
push namespace
push [assembly] // assembly
call mono.mono_class_from_name_case
add esp,C
cmp eax,0
je blaexit

push eax // class
push [domain] // domain
call mono.mono_class_vtable
add esp,8
cmp eax,0
je blaexit

push eax // vtable
call mono.mono_vtable_get_static_field_data
add esp,4
cmp eax,0
je blaexit
mov [SkillsManager.Static],eax

blaexit:
POPAD
ret

createthread(bla)

[DISABLE]
unregistersymbol(GameManager.Static)
unregistersymbol(SkillsManager.Static)

dealloc(assembly)
dealloc(domain)
dealloc(assemblyname)
dealloc(gm_classname)
dealloc(im_classname)
dealloc(namespace)
dealloc(GameManager.Static)
dealloc(SkillsManager.Static)
dealloc(status)
dealloc(bla)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>592</ID>
          <Description>"Main Stats"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>808000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>10285</ID>
              <Description>"Max Reserve Calories"</Description>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>GameManager.Static</Address>
              <Offsets>
                <Offset>5C</Offset>
                <Offset>FC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>10284</ID>
              <Description>"Current Reserve Calories"</Description>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>GameManager.Static</Address>
              <Offsets>
                <Offset>20</Offset>
                <Offset>FC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>10287</ID>
              <Description>"Current HP"</Description>
              <VariableType>Float</VariableType>
              <Address>GameManager.Static</Address>
              <Offsets>
                <Offset>28</Offset>
                <Offset>C0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>10286</ID>
              <Description>"Sprint Count"</Description>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>GameManager.Static</Address>
              <Offsets>
                <Offset>68</Offset>
                <Offset>160</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Enable mono features first before activating"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>83</ID>
          <Description>"Max Condition"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//aobscan(condition,D9 80 20 01 00 00 DE)
aobscanregion(condition,GearItem:GetRoundedCondition,GearItem:GetRoundedCondition+28,D9 80 20 01 00 00 DE)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fld dword ptr [eax+00000120]
  fst dword ptr [eax+00000124]
  jmp return

condition:
  jmp code
  nop
return:
registersymbol(condition)

[DISABLE]

condition:
  db D9 80 20 01 00 00

unregistersymbol(condition)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2F8211E7

2F8211CF: 8D 65 FC              -  lea esp,[ebp-04]
2F8211D2: 5E                    -  pop esi
2F8211D3: C9                    -  leave 
2F8211D4: C3                    -  ret 
2F8211D5: 00 00                 -  add [eax],al
2F8211D7: 00 55 8B              -  add [ebp-75],dl
2F8211DA: EC                    -  in al,dx
2F8211DB: 83 EC 08              -  sub esp,08
2F8211DE: D9 05 88 36 38 19     -  fld dword ptr [19383688]
2F8211E4: 8B 45 08              -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
2F8211E7: D9 80 0C 01 00 00     -  fld dword ptr [eax+0000010C]
// ---------- DONE INJECTING  ----------
2F8211ED: DE C9                 -  fmulp st(1),st(0)
2F8211EF: D9 80 10 01 00 00     -  fld dword ptr [eax+00000110]
2F8211F5: DE F9                 -  fdivp st(1),st(0)
2F8211F7: 83 EC 0C              -  sub esp,0C
2F8211FA: 83 EC 04              -  sub esp,04
2F8211FD: D9 1C 24              -  fstp dword ptr [esp]
2F821200: E8 0B 00 00 00        -  call UnityEngine:Mathf:CeilToInt
2F821205: 83 C4 10              -  add esp,10
2F821208: C9                    -  leave 
2F821209: C3                    -  ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>85</ID>
          <Description>"No Weight"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(weight,FF D9 45 F0 8D 65 F4)
weight+01:
  db D9 EE 90
registersymbol(weight)
[DISABLE]
weight+01:
  db D9 45 F0
unregistersymbol(weight)

{
// ORIGINAL CODE - INJECTION POINT: 27F84F6A

27F84F50: D9 C9                          -  fxch st(1)
27F84F52: DE C1                          -  faddp 
27F84F54: D9 5D F0                       -  fstp dword ptr [ebp-10]
27F84F57: 43                             -  inc ebx
27F84F58: 8B 47 14                       -  mov eax,[edi+14]
27F84F5B: 8B C8                          -  mov ecx,eax
27F84F5D: 39 09                          -  cmp [ecx],ecx
27F84F5F: 8B 40 0C                       -  mov eax,[eax+0C]
27F84F62: 3B D8                          -  cmp ebx,eax
27F84F64: 0F 8C 6E FF FF FF              -  jl Inventory:GetTotalWeightKG+20
// ---------- INJECTING HERE ----------
27F84F6A: D9 45 F0                       -  fld dword ptr [ebp-10]
27F84F6D: 8D 65 F4                       -  lea esp,[ebp-0C]
// ---------- DONE INJECTING  ----------
27F84F70: 5E                             -  pop esi
27F84F71: 5F                             -  pop edi
27F84F72: 5B                             -  pop ebx
27F84F73: C9                             -  leave 
27F84F74: C3                             -  ret 
27F84F75: 00 00                          -  add [eax],al
27F84F77: 00 68 70                       -  add [eax+70],ch
27F84F7A: D5 22                          -  aad 22
27F84F7C: 0F E9 A6 B0 1B DE 00           -  psubsw mm4,[esi+tld.exe+51BB0]
27F84F83: 00 00                          -  add [eax],al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"No Fatigue"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//aobscan(fatigue,D9 87 B8 00 00 00 D9 45 F8)
//aobscanregion(fatigue,Hunger:UpdateFatiguePenalty+4d,Hunger:UpdateFatiguePenalty+73,D9 87 B8 00 00 00 D9 45 F8)
aobscanregion(fatigue,Fatigue:AddFatigue+a3,Fatigue:AddFatigue+c1,D9 87 88 00 00 00 D9 45 *)
fatigue:
  db D9 EE 90 90 90 90
registersymbol(fatigue)

[DISABLE]
fatigue:
  db D9 87 88 00 00 00
unregistersymbol(fatigue)

{
// ORIGINAL CODE - INJECTION POINT: 2F87B359

2F87B335: D9 45 0C           -  fld dword ptr [ebp+0C]
2F87B338: DE C1              -  faddp 
2F87B33A: D9 9F 88 00 00 00  -  fstp dword ptr [edi+00000088]
2F87B340: 8B 05 38 A7 06 15  -  mov eax,[1506A738]
2F87B346: 8B C8              -  mov ecx,eax
2F87B348: 39 09              -  cmp [ecx],ecx
2F87B34A: D9 80 B4 00 00 00  -  fld dword ptr [eax+000000B4]
2F87B350: D9 5D F4           -  fstp dword ptr [ebp-0C]
2F87B353: D9 45 F4           -  fld dword ptr [ebp-0C]
2F87B356: D9 5D F8           -  fstp dword ptr [ebp-08]
// ---------- INJECTING HERE ----------
2F87B359: D9 87 88 00 00 00  -  fld dword ptr [edi+00000088]
// ---------- DONE INJECTING  ----------
2F87B35F: D9 45 F8           -  fld dword ptr [ebp-08]
2F87B362: D9 87 8C 00 00 00  -  fld dword ptr [edi+0000008C]
2F87B368: 83 EC 04           -  sub esp,04
2F87B36B: 83 EC 04           -  sub esp,04
2F87B36E: D9 1C 24           -  fstp dword ptr [esp]
2F87B371: 83 EC 04           -  sub esp,04
2F87B374: D9 1C 24           -  fstp dword ptr [esp]
2F87B377: 83 EC 04           -  sub esp,04
2F87B37A: D9 1C 24           -  fstp dword ptr [esp]
2F87B37D: E8 EE E5 B9 D6     -  call UnityEngine:Mathf:Clamp
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"No Cold"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//aobscan(cold,D9 47 20 D9 EE D9)
//aobscanregion(cold,HeatSource:Update+af,HeatSource:Update+cd,D9 47 20 D9 EE D9)
aobscanregion(cold,Freezing:AddFreezing+10,Freezing:AddFreezing+23,D9 47 1c d9 EE d9)
cold:
  db D9 EE 90
registersymbol(cold)

[DISABLE]
cold:
  db D9 47 1c
unregistersymbol(cold)

{
// ORIGINAL CODE - INJECTION POINT: 2F87C4BF

2F87C4A0: D9 47 20           -  fld dword ptr [edi+20]
2F87C4A3: D9 45 DC           -  fld dword ptr [ebp-24]
2F87C4A6: DE C1              -  faddp 
2F87C4A8: D9 5F 20           -  fstp dword ptr [edi+20]
2F87C4AB: 8B 05 3C A7 06 15  -  mov eax,[1506A73C]
2F87C4B1: 39 00              -  cmp [eax],eax
2F87C4B3: 83 EC 0C           -  sub esp,0C
2F87C4B6: 57                 -  push edi
2F87C4B7: E8 3C 02 00 00     -  call Freezing:MaybeAdjustFreezingDueToNearbyFire
2F87C4BC: 83 C4 10           -  add esp,10
// ---------- INJECTING HERE ----------
2F87C4BF: D9 47 20           -  fld dword ptr [edi+20]
2F87C4C2: D9 EE              -  fldz 
// ---------- DONE INJECTING  ----------
2F87C4C4: D9 05 70 4C 7C 36  -  fld dword ptr [367C4C70]
2F87C4CA: 83 EC 04           -  sub esp,04
2F87C4CD: 83 EC 04           -  sub esp,04
2F87C4D0: D9 1C 24           -  fstp dword ptr [esp]
2F87C4D3: 83 EC 04           -  sub esp,04
2F87C4D6: D9 1C 24           -  fstp dword ptr [esp]
2F87C4D9: 83 EC 04           -  sub esp,04
2F87C4DC: D9 1C 24           -  fstp dword ptr [esp]
2F87C4DF: E8 8C D4 B9 D6     -  call UnityEngine:Mathf:Clamp
2F87C4E4: 83 C4 10           -  add esp,10
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"No Thirst"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//aobscan(thirst,D9 47 24 D9 EE D9 47 28)
aobscanregion(thirst,Thirst:Update+bd,Thirst:Update+d3,D9 47 20 D9 EE D9 47 *)
thirst:
  db D9 EE 90
registersymbol(thirst)

[DISABLE]
thirst:
  db D9 47 20
unregistersymbol(thirst)

{
// ORIGINAL CODE - INJECTION POINT: 2F86F8F2

2F86F8D5: E8 EE E0 00 00     -  call ExperienceModeManager:GetThirstRateScale
2F86F8DA: 83 C4 10           -  add esp,10
2F86F8DD: DD 45 E8           -  fld qword ptr [ebp-18]
2F86F8E0: D9 C9              -  fxch st(1)
2F86F8E2: DE C9              -  fmulp st(1),st(0)
2F86F8E4: D9 5D F4           -  fstp dword ptr [ebp-0C]
2F86F8E7: D9 47 24           -  fld dword ptr [edi+24]
2F86F8EA: D9 45 F4           -  fld dword ptr [ebp-0C]
2F86F8ED: DE C1              -  faddp 
2F86F8EF: D9 5F 24           -  fstp dword ptr [edi+24]
// ---------- INJECTING HERE ----------
2F86F8F2: D9 47 24           -  fld dword ptr [edi+24]
2F86F8F5: D9 EE              -  fldz 
// ---------- DONE INJECTING  ----------
2F86F8F7: D9 47 28           -  fld dword ptr [edi+28]
2F86F8FA: 83 EC 04           -  sub esp,04
2F86F8FD: 83 EC 04           -  sub esp,04
2F86F900: D9 1C 24           -  fstp dword ptr [esp]
2F86F903: 83 EC 04           -  sub esp,04
2F86F906: D9 1C 24           -  fstp dword ptr [esp]
2F86F909: 83 EC 04           -  sub esp,04
2F86F90C: D9 1C 24           -  fstp dword ptr [esp]
2F86F90F: E8 5C A0 BA D6     -  call UnityEngine:Mathf:Clamp
2F86F914: 83 C4 10           -  add esp,10
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Set Inventory Stacks to 10"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(inventory_int,8B 40 1c 85 C0 75 * 8B 47 * 83 EC 08)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+1C],#10
  mov eax,[eax+1C]
  test eax,eax
  jmp return

inventory_int:
  jmp code
return:
registersymbol(inventory_int)

[DISABLE]
inventory_int:
  db 8B 40 1c 85 C0
unregistersymbol(inventory_int)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2F8196B7

2F819693: 83 C4 10              -  add esp,10
2F819696: E9 3C 01 00 00        -  jmp Inventory:ProcessItems+207
2F81969B: 8B 86 A8 00 00 00     -  mov eax,[esi+000000A8]
2F8196A1: 83 EC 0C              -  sub esp,0C
2F8196A4: 50                    -  push eax
2F8196A5: E8 AE 47 BF D6        -  call UnityEngine:Object:op_Implicit
2F8196AA: 83 C4 10              -  add esp,10
2F8196AD: 85 C0                 -  test eax,eax
2F8196AF: 74 24                 -  je Inventory:ProcessItems+105
2F8196B1: 8B 86 A8 00 00 00     -  mov eax,[esi+000000A8]
// ---------- INJECTING HERE ----------
2F8196B7: 8B 40 20              -  mov eax,[eax+20]
2F8196BA: 85 C0                 -  test eax,eax
// ---------- DONE INJECTING  ----------
2F8196BC: 75 17                 -  jne Inventory:ProcessItems+105
2F8196BE: 8B 47 18              -  mov eax,[edi+18]
2F8196C1: 83 EC 08              -  sub esp,08
2F8196C4: 56                    -  push esi
2F8196C5: 50                    -  push eax
2F8196C6: 39 00                 -  cmp [eax],eax
2F8196C8: E8 4B 11 FB FF        -  call 2F7CA818
2F8196CD: 83 C4 10              -  add esp,10
2F8196D0: E9 02 01 00 00        -  jmp Inventory:ProcessItems+207
2F8196D5: 8B 46 30              -  mov eax,[esi+30]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>88</ID>
      <Description>"Encumber Pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//aobscan(encumber,D9 EE D9 5D F8 D9 EE D9 5D F4 D9 47 1C)
aobscanregion(encumber,Encumber:GetEffectiveCarryCapacityKG+4,Encumber:GetEffectiveCarryCapacityKG+1a,D9 EE D9 5D F8 D9 EE D9 5D F4 D9 47 *)
alloc(newmem,$1000)

label(code)
label(return)
label(encumber_ptr)

newmem:

code:
  mov [encumber_ptr],edi
  fldz 
  fstp dword ptr [ebp-08]
  jmp return

encumber_ptr:
  dd 0

encumber:
  jmp code
return:
registersymbol(encumber)
registersymbol(encumber_ptr)

[DISABLE]
encumber:
  db D9 EE D9 5D F8
unregistersymbol(encumber)
unregistersymbol(encumber_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 27FDC432

27FDC41F: C9                 -  leave 
27FDC420: C3                 -  ret 
27FDC421: 00 00              -  add [eax],al
27FDC423: 00 00              -  add [eax],al
27FDC425: 00 00              -  add [eax],al
27FDC427: 00 55 8B           -  add [ebp-75],dl
27FDC42A: EC                 -  in al,dx
27FDC42B: 57                 -  push edi
27FDC42C: 83 EC 14           -  sub esp,14
27FDC42F: 8B 7D 08           -  mov edi,[ebp+08]
// ---------- INJECTING HERE ----------
27FDC432: D9 EE              -  fldz 
27FDC434: D9 5D F8           -  fstp dword ptr [ebp-08]
// ---------- DONE INJECTING  ----------
27FDC437: D9 EE              -  fldz 
27FDC439: D9 5D F4           -  fstp dword ptr [ebp-0C]
27FDC43C: D9 47 1C           -  fld dword ptr [edi+1C]
27FDC43F: D9 5D F8           -  fstp dword ptr [ebp-08]
27FDC442: 8B 05 1C 87 88 14  -  mov eax,[1488871C]
27FDC448: D9 80 88 00 00 00  -  fld dword ptr [eax+00000088]
27FDC44E: D9 47 24           -  fld dword ptr [edi+24]
27FDC451: DF F1              -  fcomip st(0),st(1)
27FDC453: DD D8              -  fstp st(0)
27FDC455: 0F 8A 7D 00 00 00  -  jp Encumber:GetEffectiveCarryCapacityKG+b0
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>89</ID>
          <Description>"Base Address"</Description>
          <LastState RealAddress="00000000"/>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>encumber_ptr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>90</ID>
              <Description>"m_MaxCarryCapacityKG"</Description>
              <VariableType>Float</VariableType>
              <Address>+18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>91</ID>
              <Description>"m_MaxCarryCapacityWhenExhaustedKG"</Description>
              <VariableType>Float</VariableType>
              <Address>+1c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>92</ID>
              <Description>"m_ReduceCarryCapacityAtFatigue"</Description>
              <VariableType>Float</VariableType>
              <Address>+20</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>93</ID>
              <Description>"m_NoSprintCarryCapacityKG"</Description>
              <VariableType>Float</VariableType>
              <Address>+24</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>94</ID>
              <Description>"m_NoStrideCarryCapacityKG"</Description>
              <VariableType>Float</VariableType>
              <Address>+28</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>95</ID>
              <Description>"m_NoWalkCarryCapacityKG"</Description>
              <VariableType>Float</VariableType>
              <Address>+2c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>96</ID>
              <Description>"m_HourlyCalorieBurnPerKG"</Description>
              <VariableType>Float</VariableType>
              <Address>+30</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>97</ID>
              <Description>"m_EncumberLowThresholdKG"</Description>
              <VariableType>Float</VariableType>
              <Address>+34</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>98</ID>
              <Description>"m_EncumberMedThresholdKG"</Description>
              <VariableType>Float</VariableType>
              <Address>+38</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>99</ID>
              <Description>"m_EncumberHighThresholdKG"</Description>
              <VariableType>Float</VariableType>
              <Address>+3c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>106</ID>
              <Description>"m_GearWeightKG"</Description>
              <VariableType>Float</VariableType>
              <Address>+4c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>107</ID>
              <Description>"m_EncumberedInLog"</Description>
              <VariableType>Byte</VariableType>
              <Address>+50</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>10422</ID>
      <Description>"Skills Manager"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
label(classname)
label(namespace)
label(assemblyname)
label(fieldname)
label(status)
label(domain)
label(assembly)
label(field)
label(GameManager.m_SkillsManager)
label(GameManager.m_SkillsManager.threadexit)
alloc(GameManager.m_SkillsManager.threadstart, 2048)

registersymbol(GameManager.m_SkillsManager)

GameManager.m_SkillsManager.threadstart:
mov [GameManager.m_SkillsManager],0

call mono.mono_get_root_domain
cmp eax,0
je GameManager.m_SkillsManager.threadexit
mov [domain],eax

push [domain]
call mono.mono_thread_attach
add esp,4

push status
push assemblyname
call mono.mono_assembly_load_with_partial_name
add esp,8
cmp eax,0
je GameManager.m_SkillsManager.threadexit

push eax
call mono.mono_assembly_get_image
add esp,4
cmp eax,0
je GameManager.m_SkillsManager.threadexit
mov [assembly], eax

push classname
push namespace
push eax
call mono.mono_class_from_name_case
add esp,C
cmp eax,0
je GameManager.m_SkillsManager.threadexit
push fieldname
push eax
call mono.mono_class_get_field_from_name
add esp,8
cmp eax,0
je GameManager.m_SkillsManager.threadexit
mov [field], eax
push eax
call mono.mono_field_get_parent
add esp,4
cmp eax,0
je GameManager.m_SkillsManager.threadexit
push eax
push [domain]
call mono.mono_class_vtable
add esp,8
cmp eax,0
je GameManager.m_SkillsManager.threadexit
push eax
call mono.mono_vtable_get_static_field_data
add esp,4
cmp eax,0
je GameManager.m_SkillsManager.threadexit
push eax // save data on stack
push [field]
call mono.mono_field_get_offset
add esp,4
pop ebx // restore data
add eax,ebx
mov [GameManager.m_SkillsManager],eax
jmp GameManager.m_SkillsManager.threadexit
///////////////////////////////////////////////////////
// Data section
GameManager.m_SkillsManager:
dd 0
assemblyname:
db 'Assembly-CSharp',0
namespace:
db '',0
classname:
db 'GameManager',0
fieldname:
db 'm_SkillsManager',0
status:
dd 0
domain:
dd 0
assembly:
dd 0
field:
dd 0
GameManager.m_SkillsManager.threadexit:
ret
createthread(GameManager.m_SkillsManager.threadstart)

[DISABLE]
unregistersymbol(GameManager.m_SkillsManager)
dealloc(GameManager.m_SkillsManager.threadstart)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>10424</ID>
          <Description>"Fire starting Skills"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>GameManager.m_SkillsManager</Address>
          <Offsets>
            <Offset>2C</Offset>
            <Offset>2C</Offset>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10425</ID>
          <Description>"Carcass Harvesting"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>GameManager.m_SkillsManager</Address>
          <Offsets>
            <Offset>2c</Offset>
            <Offset>30</Offset>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10426</ID>
          <Description>"Cooking Skills"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>GameManager.m_SkillsManager</Address>
          <Offsets>
            <Offset>2c</Offset>
            <Offset>34</Offset>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10427</ID>
          <Description>"Ice Fishing Skill"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>GameManager.m_SkillsManager</Address>
          <Offsets>
            <Offset>2c</Offset>
            <Offset>38</Offset>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10428</ID>
          <Description>"Rife Skill"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>GameManager.m_SkillsManager</Address>
          <Offsets>
            <Offset>2c</Offset>
            <Offset>3c</Offset>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10429</ID>
          <Description>"Archery Skill"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>GameManager.m_SkillsManager</Address>
          <Offsets>
            <Offset>2c</Offset>
            <Offset>40</Offset>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10430</ID>
          <Description>"Clothing Repair Skill"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>GameManager.m_SkillsManager</Address>
          <Offsets>
            <Offset>2c</Offset>
            <Offset>44</Offset>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>get_player</Name>
      <Address>04209A79</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player</Name>
      <Address>09A60000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>get_cold</Name>
      <Address>04209AC1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address>27826EB5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infection</Name>
      <Address>20EFB6F1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infection_ptr</Name>
      <Address>08E40000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>durability</Name>
      <Address>20E913B3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weight_int</Name>
      <Address>20E6223B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weight_float</Name>
      <Address>20E623D1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weight_nostack</Name>
      <Address>20E622E1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory_float</Name>
      <Address>20E62359</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>invisibility</Name>
      <Address>20E70488</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SkillsManager.Class</Name>
      <Address>018200B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GameManager.Class</Name>
      <Address>088900B7</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
