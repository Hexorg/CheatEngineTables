<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>157</ID>
      <Description>"**Speed Hack Zero"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
luacall(speedhack_setSpeed(0))
[DISABLE]
luacall(speedhack_setSpeed(1))

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>64</ID>
      <Description>"BioDigit"</Description>
      <Options moBindActivation="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>183</ID>
          <Description>"crystal drop x100"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//           00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f
Aobscan(_cry,24 01 60 ?? 66 ?? ?? 24 04 66 ?? 74 24 14)
_cry:
db           24 64
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>235</ID>
          <Description>"overactive children"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//           00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f
//Aobscan(_sht,24 01 2f ?? 60 ?? 66 ?? ?? 24 07 66 ?? 74 24 0a a3)
//_sht+02:
//db                 24 01 24 07 02 02 02 02 02 02 02
Aobscan(_spn,24 08 60 ?? 66 ?? ?? 24 05 66 ?? 74 24 02)
_spn+02:
db                 24 07 02 02 02 02 02 02 02 74 24 01

//Aobscan(_cst,24 00 24 64 46 ?? ?? 02 75 d2 ad 12 ?? 00 00 60 ?? ?? 66 ?? ?? 46)
//_cst+03:
//db 1e

//Aobscan(_fqz,03 5e ?? ?? 66 ?? ?? 24 05 40)
//_fqz+08:
//db 03


Aobscan(_off,60 ?? ?? 24 00 68 ?? ?? 60 ?? ?? 60 ?? ?? 24 88 24 78 46)
_off:
db           24 78 24 03 a2 90 d5 02
_off+0e:
db  d1 2a 90 02


[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>236</ID>
          <Description>"charge x3"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function Chargex3(skip)
  if skip == true then return end
  local aob,ok = AOBScan('5e ?? ?? 5e ?? ?? 66 ?? ?? 91 68','-X'),false
  if aob ~= nil then
    for i=0,aob.Count-1 do
      local addy = tonumber(aob[i],16)
      writeBytes(addy+03,0x2a,0x66,0,0,0x91,0x91)
      writeBytes(addy+05,readBytes(addy+01,2))
      ok = true
    end
    aob.Destroy()
  end
  return assert(ok) and ''
end
{$asm}

[ENABLE]
//           00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f
{$lua}
return Chargex3(syntaxcheck)
{$asm}
[DISABLE]

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <LuaScript>
</LuaScript>
</CheatTable>
