<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>9</ID>
      <Description>"INF HEALTH"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>

[ENABLE]

aobscan(HEALTH,D9 5A 04 D9 42 04 D9 EE) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fstp dword ptr [edx+04]
  mov [edx+04],(float)200
  fld dword ptr [edx+04]
  jmp return

HEALTH:
  jmp newmem
  nop
return:
registersymbol(HEALTH)

[DISABLE]

HEALTH:
  db D9 5A 04 D9 42 04

unregistersymbol(HEALTH)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 05427CB5

""+5427C9A: D9 42 04              -  fld dword ptr [edx+04]
""+5427C9D: D9 05 E8 7C 42 05     -  fld dword ptr [05427CE8]
""+5427CA3: DF F1                 -  fcomip st(0),st(1)
""+5427CA5: DD D8                 -  fstp st(0)
""+5427CA7: 7A 06                 -  jp 05427CAF
""+5427CA9: 75 04                 -  jne 05427CAF
""+5427CAB: 5D                    -  pop ebp
""+5427CAC: C2 04 00              -  ret 0004
""+5427CAF: D9 45 08              -  fld dword ptr [ebp+08]
""+5427CB2: D8 6A 04              -  fsubr dword ptr [edx+04]
// ---------- INJECTING HERE ----------
""+5427CB5: D9 5A 04              -  fstp dword ptr [edx+04]
""+5427CB8: D9 42 04              -  fld dword ptr [edx+04]
// ---------- DONE INJECTING  ----------
""+5427CBB: D9 EE                 -  fldz 
""+5427CBD: DF F1                 -  fcomip st(0),st(1)
""+5427CBF: DD D8                 -  fstp st(0)
""+5427CC1: 7A 07                 -  jp 05427CCA
""+5427CC3: 76 05                 -  jna 05427CCA
""+5427CC5: D9 EE                 -  fldz 
""+5427CC7: D9 5A 04              -  fstp dword ptr [edx+04]
""+5427CCA: D9 42 04              -  fld dword ptr [edx+04]
""+5427CCD: D9 05 F0 7C 42 05     -  fld dword ptr [05427CF0]
""+5427CD3: DF F1                 -  fcomip st(0),st(1)
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"INF PRIMARY AMMO"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscan(Ammo,C4 F3 FF FF FF 08 8B 85 B8 E4 FF FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  dec [eax]
  mov [eax],63
  mov eax,[ebp-00001B48]
  jmp return

Ammo+04:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Ammo)

[DISABLE]

Ammo+04:
  db FF 08 8B 85 B8 E4 FF FF

unregistersymbol(Ammo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 124B99C0

""+124B998C: 8B 80 4C 03 00 00     -  mov eax,[eax+0000034C]
""+124B9992: 8B 40 0C              -  mov eax,[eax+0C]
""+124B9995: 8B 95 B8 E4 FF FF     -  mov edx,[ebp-00001B48]
""+124B999B: 8B 92 4C 03 00 00     -  mov edx,[edx+0000034C]
""+124B99A1: 8B 92 B0 00 00 00     -  mov edx,[edx+000000B0]
""+124B99A7: 3B 50 04              -  cmp edx,[eax+04]
""+124B99AA: 0F 83 11 3B 00 00     -  jae 124BD4C1
""+124B99B0: 8D 44 90 08           -  lea eax,[eax+edx*4+08]
""+124B99B4: 89 85 C4 F3 FF FF     -  mov [ebp-00000C3C],eax
""+124B99BA: 8B 85 C4 F3 FF FF     -  mov eax,[ebp-00000C3C]
// ---------- INJECTING HERE ----------
""+124B99C0: FF 08                 -  dec [eax]
""+124B99C2: 8B 85 B8 E4 FF FF     -  mov eax,[ebp-00001B48]
// ---------- DONE INJECTING  ----------
""+124B99C8: 8B 80 4C 03 00 00     -  mov eax,[eax+0000034C]
""+124B99CE: 8B 40 0C              -  mov eax,[eax+0C]
""+124B99D1: 89 85 C0 F3 FF FF     -  mov [ebp-00000C40],eax
""+124B99D7: 8B 85 B8 E4 FF FF     -  mov eax,[ebp-00001B48]
""+124B99DD: 8B 80 4C 03 00 00     -  mov eax,[eax+0000034C]
""+124B99E3: 8B 80 B0 00 00 00     -  mov eax,[eax+000000B0]
""+124B99E9: 89 85 BC F3 FF FF     -  mov [ebp-00000C44],eax
""+124B99EF: 8B 85 B8 E4 FF FF     -  mov eax,[ebp-00001B48]
""+124B99F5: 8B 80 4C 03 00 00     -  mov eax,[eax+0000034C]
""+124B99FB: 8B 40 0C              -  mov eax,[eax+0C]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>90</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"INF SECONDARY AMMO"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscan(ammoak,FF 08 8B 85 B8 E4 FF FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  dec [eax]
  mov [eax],63
  mov eax,[ebp-00001B48]
  jmp return

ammoak:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(ammoak)

[DISABLE]

ammoak:
  db FF 08 8B 85 B8 E4 FF FF

unregistersymbol(ammoak)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 124A9DF2

""+124A9DBE: 8B 80 4C 03 00 00     -  mov eax,[eax+0000034C]
""+124A9DC4: 8B 40 0C              -  mov eax,[eax+0C]
""+124A9DC7: 8B 95 B8 E4 FF FF     -  mov edx,[ebp-00001B48]
""+124A9DCD: 8B 92 4C 03 00 00     -  mov edx,[edx+0000034C]
""+124A9DD3: 8B 92 B0 00 00 00     -  mov edx,[edx+000000B0]
""+124A9DD9: 3B 50 04              -  cmp edx,[eax+04]
""+124A9DDC: 0F 83 DF 36 00 00     -  jae 124AD4C1
""+124A9DE2: 8D 44 90 08           -  lea eax,[eax+edx*4+08]
""+124A9DE6: 89 85 E8 F3 FF FF     -  mov [ebp-00000C18],eax
""+124A9DEC: 8B 85 E8 F3 FF FF     -  mov eax,[ebp-00000C18]
// ---------- INJECTING HERE ----------
""+124A9DF2: FF 08                 -  dec [eax]
""+124A9DF4: 8B 85 B8 E4 FF FF     -  mov eax,[ebp-00001B48]
// ---------- DONE INJECTING  ----------
""+124A9DFA: 8B 80 4C 03 00 00     -  mov eax,[eax+0000034C]
""+124A9E00: 8B 40 0C              -  mov eax,[eax+0C]
""+124A9E03: 89 85 E4 F3 FF FF     -  mov [ebp-00000C1C],eax
""+124A9E09: 8B 85 B8 E4 FF FF     -  mov eax,[ebp-00001B48]
""+124A9E0F: 8B 80 4C 03 00 00     -  mov eax,[eax+0000034C]
""+124A9E15: 8B 80 B0 00 00 00     -  mov eax,[eax+000000B0]
""+124A9E1B: 89 85 E0 F3 FF FF     -  mov [ebp-00000C20],eax
""+124A9E21: 8B 85 B8 E4 FF FF     -  mov eax,[ebp-00001B48]
""+124A9E27: 8B 80 4C 03 00 00     -  mov eax,[eax+0000034C]
""+124A9E2D: 8B 40 0C              -  mov eax,[eax+0C]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>90</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"INF GRENADES"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>

[ENABLE]

aobscan(Gernades,24 F7 FF FF FF 88 C8 04 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  dec [eax+000004C8]
  mov [eax+000004C8],63
  jmp return

Gernades+04:
  jmp newmem
  nop
return:
registersymbol(Gernades)

[DISABLE]

Gernades+04:
  db FF 88 C8 04 00 00

unregistersymbol(Gernades)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 14963459

""+1496341D: 8B 80 4C 03 00 00     -  mov eax,[eax+0000034C]
""+14963423: 8B 95 38 F3 FF FF     -  mov edx,[ebp-00000CC8]
""+14963429: 8B 92 4C 03 00 00     -  mov edx,[edx+0000034C]
""+1496342F: 8A 92 C0 01 00 00     -  mov dl,[edx+000001C0]
""+14963435: 88 90 BF 01 00 00     -  mov [eax+000001BF],dl
""+1496343B: 8B 05 64 FD 29 04     -  mov eax,[0429FD64]
""+14963441: 89 85 34 F3 FF FF     -  mov [ebp-00000CCC],eax
""+14963447: 8B 85 38 F3 FF FF     -  mov eax,[ebp-00000CC8]
""+1496344D: 8B 80 90 00 00 00     -  mov eax,[eax+00000090]
""+14963453: 89 85 24 F7 FF FF     -  mov [ebp-000008DC],eax
// ---------- INJECTING HERE ----------
""+14963459: FF 88 C8 04 00 00     -  dec [eax+000004C8]
// ---------- DONE INJECTING  ----------
""+1496345F: 8B 85 38 F3 FF FF     -  mov eax,[ebp-00000CC8]
""+14963465: 8B 90 90 00 00 00     -  mov edx,[eax+00000090]
""+1496346B: 83 BA C8 04 00 00 00  -  cmp dword ptr [edx+000004C8],00
""+14963472: 7D 14                 -  jnl 14963488
""+14963474: 8B 85 38 F3 FF FF     -  mov eax,[ebp-00000CC8]
""+1496347A: 8B 80 90 00 00 00     -  mov eax,[eax+00000090]
""+14963480: 33 D2                 -  xor edx,edx
""+14963482: 89 90 C8 04 00 00     -  mov [eax+000004C8],edx
""+14963488: 8B 85 38 F3 FF FF     -  mov eax,[ebp-00000CC8]
""+1496348E: 8B 80 4C 03 00 00     -  mov eax,[eax+0000034C]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"INF MILK"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>

[ENABLE]

aobscan(Milk,FF 88 CC 04 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  dec [eax+000004CC]
  mov [eax+000004CC],63
  jmp return

Milk:
  jmp newmem
  nop
return:
registersymbol(Milk)

[DISABLE]

Milk:
  db FF 88 CC 04 00 00

unregistersymbol(Milk)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0F801F27

""+F801EEC: 8B 90 AC 00 00 00              -  mov edx,[eax+000000AC]
""+F801EF2: 83 FA 17                       -  cmp edx,17
""+F801EF5: 75 53                          -  jne 0F801F4A
""+F801EF7: 8B 83 4C 03 00 00              -  mov eax,[ebx+0000034C]
""+F801EFD: C7 80 BC 00 00 00 D0 07 00 00  -  mov [eax+000000BC],000007D0
""+F801F07: 8B 83 4C 03 00 00              -  mov eax,[ebx+0000034C]
""+F801F0D: C6 80 A4 01 00 00 01           -  mov byte ptr [eax+000001A4],01
""+F801F14: 8B 83 48 03 00 00              -  mov eax,[ebx+00000348]
""+F801F1A: C6 80 D8 01 00 00 01           -  mov byte ptr [eax+000001D8],01
""+F801F21: 8B 83 90 00 00 00              -  mov eax,[ebx+00000090]
// ---------- INJECTING HERE ----------
""+F801F27: FF 88 CC 04 00 00              -  dec [eax+000004CC]
// ---------- DONE INJECTING  ----------
""+F801F2D: 8B 83 90 00 00 00              -  mov eax,[ebx+00000090]
""+F801F33: 83 B8 CC 04 00 00 00           -  cmp dword ptr [eax+000004CC],00
""+F801F3A: 7D 0E                          -  jnl 0F801F4A
""+F801F3C: 8B 83 90 00 00 00              -  mov eax,[ebx+00000090]
""+F801F42: 33 D2                          -  xor edx,edx
""+F801F44: 89 90 CC 04 00 00              -  mov [eax+000004CC],edx
""+F801F4A: 8B 83 4C 03 00 00              -  mov eax,[ebx+0000034C]
""+F801F50: 8B 90 AC 00 00 00              -  mov edx,[eax+000000AC]
""+F801F56: 83 FA 18                       -  cmp edx,18
""+F801F59: 0F 85 11 01 00 00              -  jne 0F802070
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"INF BULKIFY"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>

[ENABLE]

aobscan(bulk,FF 88 D0 04 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  dec [eax+000004D0]
  mov [eax+000004D0],63
  jmp return

bulk:
  jmp newmem
  nop
return:
registersymbol(bulk)

[DISABLE]

bulk:
  db FF 88 D0 04 00 00

unregistersymbol(bulk)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0F801FBC

""+F801F88: FF B0 04 06 00 00              -  push [eax+00000604]
""+F801F8E: 6A 00                          -  push 00
""+F801F90: 6A 00                          -  push 00
""+F801F92: 39 09                          -  cmp [ecx],ecx
""+F801F94: E8 87 68 9C 02                 -  call 121C8820
""+F801F99: 8B 83 4C 03 00 00              -  mov eax,[ebx+0000034C]
""+F801F9F: C7 80 C0 00 00 00 D0 07 00 00  -  mov [eax+000000C0],000007D0
""+F801FA9: 8B 83 4C 03 00 00              -  mov eax,[ebx+0000034C]
""+F801FAF: C6 80 A5 01 00 00 01           -  mov byte ptr [eax+000001A5],01
""+F801FB6: 8B 83 90 00 00 00              -  mov eax,[ebx+00000090]
// ---------- INJECTING HERE ----------
""+F801FBC: FF 88 D0 04 00 00              -  dec [eax+000004D0]
// ---------- DONE INJECTING  ----------
""+F801FC2: 8B 83 90 00 00 00              -  mov eax,[ebx+00000090]
""+F801FC8: 83 B8 D0 04 00 00 00           -  cmp dword ptr [eax+000004D0],00
""+F801FCF: 7D 0E                          -  jnl 0F801FDF
""+F801FD1: 8B 83 90 00 00 00              -  mov eax,[ebx+00000090]
""+F801FD7: 33 D2                          -  xor edx,edx
""+F801FD9: 89 90 D0 04 00 00              -  mov [eax+000004D0],edx
""+F801FDF: 83 BB 9C 06 00 00 00           -  cmp dword ptr [ebx+0000069C],00
""+F801FE6: 75 17                          -  jne 0F801FFF
""+F801FE8: 8B 83 90 00 00 00              -  mov eax,[ebx+00000090]
""+F801FEE: 8B 80 88 03 00 00              -  mov eax,[eax+00000388]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"INF BULK TIME"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscan(bulktime,FF 8E C0 00 00 00 8B) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  dec [esi+000000C0]
  mov [esi+000000C0],(float)2.47329179E-42
  jmp return

bulktime:
  jmp newmem
  nop
return:
registersymbol(bulktime)

[DISABLE]

bulktime:
  db FF 8E C0 00 00 00

unregistersymbol(bulktime)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 13B901E0

""+13B901A4: 8B 88 4C 03 00 00     -  mov ecx,[eax+0000034C]
""+13B901AA: 89 8D 74 FC FF FF     -  mov [ebp-0000038C],ecx
""+13B901B0: D9 05 A0 BB B9 13     -  fld dword ptr [13B9BBA0]
""+13B901B6: D8 A9 F0 00 00 00     -  fsubr dword ptr [ecx+000000F0]
""+13B901BC: D9 99 F0 00 00 00     -  fstp dword ptr [ecx+000000F0]
""+13B901C2: 8B 98 4C 03 00 00     -  mov ebx,[eax+0000034C]
""+13B901C8: 89 9D 70 FC FF FF     -  mov [ebp-00000390],ebx
""+13B901CE: FF 8B BC 00 00 00     -  dec [ebx+000000BC]
""+13B901D4: 8B B0 4C 03 00 00     -  mov esi,[eax+0000034C]
""+13B901DA: 89 B5 6C FC FF FF     -  mov [ebp-00000394],esi
// ---------- INJECTING HERE ----------
""+13B901E0: FF 8E C0 00 00 00     -  dec [esi+000000C0]
// ---------- DONE INJECTING  ----------
""+13B901E6: 8B B8 4C 03 00 00     -  mov edi,[eax+0000034C]
""+13B901EC: 83 BF BC 00 00 00 00  -  cmp dword ptr [edi+000000BC],00
""+13B901F3: 7F 4D                 -  jg 13B90242
""+13B901F5: 8B 85 38 F3 FF FF     -  mov eax,[ebp-00000CC8]
""+13B901FB: 8B 90 4C 03 00 00     -  mov edx,[eax+0000034C]
""+13B90201: 80 BA A4 01 00 00 00  -  cmp byte ptr [edx+000001A4],00
""+13B90208: 74 38                 -  je 13B90242
""+13B9020A: 8B 85 38 F3 FF FF     -  mov eax,[ebp-00000CC8]
""+13B90210: 8B 90 4C 03 00 00     -  mov edx,[eax+0000034C]
""+13B90216: 33 C9                 -  xor ecx,ecx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"INF MILK SPEED TIME"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>

[ENABLE]

aobscan(speed,FF 8B BC 00 00 00 8B) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  dec [ebx+000000BC]
  mov [ebx+000000BC],(float)2.47329179E-42
  jmp return

speed:
  jmp newmem
  nop
return:
registersymbol(speed)

[DISABLE]

speed:
  db FF 8B BC 00 00 00

unregistersymbol(speed)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 13B901CE

""+13B90192: D9 05 9C BB B9 13     -  fld dword ptr [13B9BB9C]
""+13B90198: D8 AA EC 00 00 00     -  fsubr dword ptr [edx+000000EC]
""+13B9019E: D9 9A EC 00 00 00     -  fstp dword ptr [edx+000000EC]
""+13B901A4: 8B 88 4C 03 00 00     -  mov ecx,[eax+0000034C]
""+13B901AA: 89 8D 74 FC FF FF     -  mov [ebp-0000038C],ecx
""+13B901B0: D9 05 A0 BB B9 13     -  fld dword ptr [13B9BBA0]
""+13B901B6: D8 A9 F0 00 00 00     -  fsubr dword ptr [ecx+000000F0]
""+13B901BC: D9 99 F0 00 00 00     -  fstp dword ptr [ecx+000000F0]
""+13B901C2: 8B 98 4C 03 00 00     -  mov ebx,[eax+0000034C]
""+13B901C8: 89 9D 70 FC FF FF     -  mov [ebp-00000390],ebx
// ---------- INJECTING HERE ----------
""+13B901CE: FF 8B BC 00 00 00     -  dec [ebx+000000BC]
// ---------- DONE INJECTING  ----------
""+13B901D4: 8B B0 4C 03 00 00     -  mov esi,[eax+0000034C]
""+13B901DA: 89 B5 6C FC FF FF     -  mov [ebp-00000394],esi
""+13B901E0: E9 1B FE 4D F4        -  jmp 08070000
""+13B901E5: 90                    -  nop 
""+13B901E6: 8B B8 4C 03 00 00     -  mov edi,[eax+0000034C]
""+13B901EC: 83 BF BC 00 00 00 00  -  cmp dword ptr [edi+000000BC],00
""+13B901F3: 7F 4D                 -  jg 13B90242
""+13B901F5: 8B 85 38 F3 FF FF     -  mov eax,[ebp-00000CC8]
""+13B901FB: 8B 90 4C 03 00 00     -  mov edx,[eax+0000034C]
""+13B90201: 80 BA A4 01 00 00 00  -  cmp byte ptr [edx+000001A4],00
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>1hit</Name>
      <Address> 029CAB41</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Ammo</Name>
      <Address> 1049A8F4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoak</Name>
      <Address> 1049AD2A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Gernades</Name>
      <Address> 13B9344E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Milk</Name>
      <Address> 0FFD659F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bulk</Name>
      <Address> 0FFD6634</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HEALTH</Name>
      <Address> 1421DFE5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bulktime</Name>
      <Address> 13B901E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fireworks</Name>
      <Address> 14297994</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speed</Name>
      <Address> 13B901CE</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
