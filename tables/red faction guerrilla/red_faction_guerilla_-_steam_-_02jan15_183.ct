<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>79</ID>
      <Description>"Car Options (Use Only One at a Time)"</Description>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>67</ID>
          <Description>"CARMAGEDDON!"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(set_inf_health)

alloc(edi_add,4)
registersymbol(edi_add)

newmem: //this is allocated memory, you have read,write,execute access
//cmp [edi+00003d10],#99919
//mov [edi_add],edi
cmp byte ptr [edi+00004031],1
je set_inf_health
mov [edi+00003D10],1
jmp originalcode

set_inf_health:
mov [edi_add],edi
mov [edi+00003D10],#99999 //added code to make the car im in infinite
jmp originalcode

originalcode:
mov ecx,[edi+00003D10]

exit:
jmp returnhere

"rfg.exe"+287C06:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(edi_add)
"rfg.exe"+287C06:
mov ecx,[edi+00003D10]
//Alt: db 8B 8F 10 3D 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Infinite Car Health"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:
originalcode:
sub eax,[ecx+00003D10]
cmp byte ptr [ecx+00004031],1
jne exit
mov [ecx+00003D10],#99919
jmp exit

exit:
jmp returnhere

"rfg.exe"+28F8BD:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+28F8BD:
sub eax,[ecx+00003D10]
//Alt: db 2B 81 10 3D 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>83</ID>
          <Description>"Infinite Car Health for All Cars (Useful for turret sections)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:
originalcode:
sub eax,[ecx+00003D10]
//cmp byte ptr [ecx+00004031],1
//jne exit
mov [ecx+00003D10],#99919
jmp exit

exit:
jmp returnhere

"rfg.exe"+28F8BD:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+28F8BD:
sub eax,[ecx+00003D10]
//Alt: db 2B 81 10 3D 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>59</ID>
      <Description>"Infinite Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [ecx+00000904],(float)999999

originalcode:
fdivr dword ptr [ecx+00000904]

exit:
jmp returnhere

"rfg.exe"+422D9D:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+422D9D:
fdivr dword ptr [ecx+00000904]
//Alt: db D8 B9 04 09 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>232</ID>
      <Description>"Infinite Health for Everyone (because hostages are dumb)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem:
fld dword ptr [ebx+00000AD0] //load max health
fst dword ptr [ebx+00000904]
jmp exit

exit:
jmp returnhere

"rfg.exe"+3CB7A1:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+3CB7A1:
fld dword ptr [esp+0C]
fst dword ptr [ebx+00000904]
//Alt: db D9 44 24 0C D9 93 04 09 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Infinite Clip"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov dword ptr [ebx+00000204],#99

exit:
jmp returnhere

"rfg.exe"+32DFE5:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+32DFE5:
add dword ptr [ebx+00000204],FF
//Alt: db 83 83 04 02 00 00 FF
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>122</ID>
      <Description>"Infinite Jetpack"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//fsub dword ptr [esp+14]
fldz 

exit:
jmp returnhere

"rfg.exe"+3FB908:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+3FB908:
fsub dword ptr [esp+14]
fldz 
//Alt: db D8 64 24 14 D9 EE
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>256</ID>
      <Description>"Infinite Specialty Packs"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [ebx+00000150],(float)1

originalcode:
fld dword ptr [ebx+00000150]

exit:
jmp returnhere

"rfg.exe"+23115D:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+23115D:
fld dword ptr [ebx+00000150]
//Alt: db D9 83 50 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Infinite Bombs"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [ebx+00000208],#99

exit:
jmp returnhere

"rfg.exe"+32BCF2:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+32BCF2:
mov [ebx+00000208],eax
//Alt: db 89 83 08 02 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>231</ID>
      <Description>"Missions"</Description>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>221</ID>
          <Description>"Demolitions Master: Instant Win &amp; Fast Destruction &amp; Guerilla Raid: Instant Win"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [esp+0C],(float)1

originalcode:
fld dword ptr [esp+0C]
fst dword ptr [ebp+000000F4]

exit:
jmp returnhere

"rfg.exe"+2DEBE3:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+2DEBE3:
fld dword ptr [esp+0C]
fst dword ptr [ebp+000000F4]
//Alt: db D9 44 24 0C D9 95 F4 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>224</ID>
          <Description>"Collateral Damage: Max Destruction"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [esi+00000D2C], (float)999

originalcode:
fld dword ptr [esi+00000D2C]

exit:
jmp returnhere

"rfg.exe"+1012F4:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+1012F4:
fld dword ptr [esi+00000D2C]
//Alt: db D9 86 2C 0D 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>227</ID>
          <Description>"Transporter: Fuck Your Timer, Sam."</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

//Search Notes: Find distance remaining as float, see what writes to it.

newmem:
mov dword ptr [esp+10],0

originalcode:
fld dword ptr [esp+10]
fst dword ptr [edi+00000470]

exit:
jmp returnhere

"rfg.exe"+ED152:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+ED152:
fld dword ptr [esp+10]
fst dword ptr [edi+00000470]
//Alt: db D9 44 24 10 D9 97 70 04 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>230</ID>
          <Description>"Heavy Metal (Soldier): Instant Win"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov ecx,#999

originalcode:
add [esi+00000464],ecx

exit:
jmp returnhere

"rfg.exe"+E3C15:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+E3C15:
add [esi+00000464],ecx
//Alt: db 01 8E 64 04 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>61</ID>
      <Description>"One Shot Kill (explosions will kill you dead)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)
label(enemy_exit)


alloc(zero_space,4)
registersymbol(zero_space)

newmem:
test esi,esi //enemy check
jne enemy_exit
jmp exit

enemy_exit:
fld dword ptr [zero_space]
fst dword ptr [ebx+00000904]
jmp exit


exit:
jmp returnhere

"rfg.exe"+3CB7A1:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(zero_space)
"rfg.exe"+3CB7A1:
fld dword ptr [esp+0C]
fst dword ptr [ebx+00000904]
//Alt: db D9 44 24 0C D9 93 04 09 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>241</ID>
      <Description>"Set Zone Morale to 100"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [ecx+00000098],(float)100

originalcode:
fld dword ptr [ecx+00000098]

exit:
jmp returnhere

"rfg.exe"+8537:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+8537:
fld dword ptr [ecx+00000098]
//Alt: db D9 81 98 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>82</ID>
      <Description>"No Weapon Overheat"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fstp dword ptr [ebx+00000218]
mov dword ptr [ebx+00000218],0

exit:
jmp returnhere

"rfg.exe"+32DD87:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+32DD87:
fstp dword ptr [ebx+00000218]
//Alt: db D9 9B 18 02 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>131</ID>
      <Description>"Keep Alarm Green"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

alloc(zero_space,4)
registersymbol(zero_space)

newmem:
cmp dword ptr [rfg.exe+DA92A0],0
je originalcode
fstp dword ptr [zero_space]
mov dword ptr [rfg.exe+DA9298],0
jmp exit


originalcode:
fld dword ptr [rfg.exe+DA9298]
jmp exit

exit:
jmp returnhere

"rfg.exe"+10E160:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(zero_space)
"rfg.exe"+10E160:
fld dword ptr [rfg.exe+DA9298]
//Alt: db D9 05 98 92 1A 01
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>104</ID>
          <Description>"Freeze Alert to Green During Mission"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//Being forced into yellow alert at 250 by mission.
//trying to set to 0 at start of function

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [rfg.exe+DA9298],0
mov [rfg.exe+10e8578],0
originalcode:
fld dword ptr [rfg.exe+DA9298]

exit:
jmp returnhere

"rfg.exe"+10E160:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"rfg.exe"+10E160:
fld dword ptr [rfg.exe+DA9298]
//Alt: db D9 05 98 92 1A 01
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of jle rfg.exe+3A9A10</Description>
      <Address>007A99FD</Address>
      <ModuleName>rfg.exe</ModuleName>
      <ModuleNameOffset>3A99FD</ModuleNameOffset>
      <Before>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>7E</Byte>
        <Byte>11</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
        <Byte>63</Byte>
        <Byte>A8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jle rfg.exe+3A9A7C</Description>
      <Address>007A9A14</Address>
      <ModuleName>rfg.exe</ModuleName>
      <ModuleNameOffset>3A9A14</ModuleNameOffset>
      <Before>
        <Byte>90</Byte>
        <Byte>33</Byte>
        <Byte>F6</Byte>
        <Byte>85</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>7E</Byte>
        <Byte>66</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>78</Byte>
        <Byte>64</Byte>
        <Byte>FF</Byte>
        <Byte>74</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jle rfg.exe+437989</Description>
      <Address>00837975</Address>
      <ModuleName>rfg.exe</ModuleName>
      <ModuleNameOffset>437975</ModuleNameOffset>
      <Before>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>7E</Byte>
        <Byte>12</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
        <Byte>63</Byte>
        <Byte>A8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jng rfg.exe+437A2D</Description>
      <Address>0083798F</Address>
      <ModuleName>rfg.exe</ModuleName>
      <ModuleNameOffset>43798F</ModuleNameOffset>
      <Before>
        <Byte>F8</Byte>
        <Byte>33</Byte>
        <Byte>F6</Byte>
        <Byte>85</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>8E</Byte>
        <Byte>98</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>09</Byte>
        <Byte>8D</Byte>
        <Byte>A4</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [edi+000003A0],ebx</Description>
      <Address>007FEB86</Address>
      <ModuleName>rfg.exe</ModuleName>
      <ModuleNameOffset>3FEB86</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>5A</Byte>
        <Byte>5B</Byte>
        <Byte>F1</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>9F</Byte>
        <Byte>A0</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>89</Byte>
        <Byte>9F</Byte>
        <Byte>50</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
