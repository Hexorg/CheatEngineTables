<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Unlimited Health"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [edi+10],(float)725

originalcode:
//movss [edi+10],xmm0

exit:
jmp returnhere

"Dunia.dll"+103749:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dunia.dll"+103749:
movss [edi+10],xmm0
//Alt: db F3 0F 11 47 10
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Unlimited Syringes"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ecx+14],(int)6
add eax,edx
originalcode:
//mov [ecx+14],esi
//add eax,edx

exit:
jmp returnhere

"Dunia.dll"+14453A:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dunia.dll"+14453A:
mov [ecx+14],esi
add eax,edx
//Alt: db 89 71 14 01 D0
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Unlimited Ammo"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ecx+14],(int)999
add eax,edx

originalcode:
//mov [ecx+14],esi
//add eax,edx

exit:
jmp returnhere

"Dunia.dll"+14453A:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dunia.dll"+14453A:
mov [ecx+14],esi
add eax,edx
//Alt: db 89 71 14 03 C2
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Unlimited Grenade &amp; Molotov"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [edx+7C],(int)4
ret 0004

originalcode:
//mov [edx+7C],ecx
//ret 0004

exit:
jmp returnhere

"Dunia.dll"+148B2B:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dunia.dll"+148B2B:
mov [edx+7C],ecx
ret 0004
//Alt: db 89 4A 7C C2 04 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"No Reload"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [edx+20],(int)99
ret 0004
originalcode:
//mov [edx+20],ecx
//ret 0004

exit:
jmp returnhere

"Dunia.dll"+12E4C5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dunia.dll"+12E4C5:
mov [edx+20],ecx
ret 0004
//Alt: db 89 4A 20 C2 04 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Diamonds"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ebx+10],(int)999
jmp originalcode

originalcode:
//mov [ebx+10],eax
pop ebx
ret 0004

exit:
jmp returnhere

"Dunia.dll"+655CB1:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dunia.dll"+655CB1:
mov [ebx+10],eax
pop ebx
ret 0004
//Alt: db 89 43 10 5B C2 04 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Diamonds"</Description>
      <LastState Value="985" Activated="0" RealAddress="18F67600"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>11593B00</Address>
      <Offsets>
        <Offset>310</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov [ebx+10],eax _Diamonds</Description>
      <Address>10655CB1</Address>
      <ModuleName>Dunia.dll</ModuleName>
      <ModuleNameOffset>655CB1</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>F8</Byte>
        <Byte>2B</Byte>
        <Byte>C7</Byte>
        <Byte>5F</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>43</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>5B</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
