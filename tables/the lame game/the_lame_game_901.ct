<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Sinus"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{
Cheat for Cheatengine 6.2 32-bit (The Lame Game)
CE version used: 6.2
Made by Labtox
}

//============================================
//            Allocation &amp; labels
//============================================

alloc(code,1024)

// - - - - - - - - variables - - - - - - - - -

label(x)
registersymbol(x)
label(y)
registersymbol(y)
label(xDimension)
registersymbol(xDimension)
label(yDimension)
registersymbol(yDimension)
label(debug)
registersymbol(debug)
label(step)
registersymbol(step)
label(speed)
registersymbol(speed)

//- - - - - - - - - labels - - - - - - - - - -

label(writeY)
label(writeX)
label(writeYb)
label(writeXb)
label(contx)
label(writeTimer)
label(writeTimerb)


//============================================
//                Code hooks
//============================================

cheatengine-i386.exe+293E0:
jmp writeY
nop
writeYb:

cheatengine-i386.exe+293D4:
jmp writeX
nop
writeXb:

cheatengine-i386.exe+2D69EC:
jmp writeTimer
nop
writeTimerb:


//============================================
//                 Codecave
//============================================

code:
//--------------------------------------------

writeY:
fldpi
fld1
fld1
faddp
fmulp //2 pi

fidiv [xDimension] //... divide by total width

fimul [x] //... times current x

fsin //... take the sinus of the result

fimul [yDimension] //... multiply by half the field height ...

fiadd [yDimension] //... and align vertical in the center

fistp dword ptr [y]

mov eax,[y]
mov [edx+00000224],eax
jmp writeYb

//--------------------------------------------

writeX:
cmp [x],#500
jb contx

push eax
mov eax,#-1
mov [x],eax
pop eax

contx:
mov edx,[step]
add [x],edx
mov edx,[x]
mov [eax+0000011C],edx
jmp writeXb

//--------------------------------------------

writeTimer:
mov edx,[speed]
mov [eax+2C],edx
jmp writeTimerb


//============================================
//                 Variables
//============================================

x:
dd 0

y:
dd 0

xDimension:
dd #485

yDimension: //Half of the total height
dd #175

debug:
dd 0

step:
dd #2

speed:
dd #20






[DISABLE]
//============================================
//               Original code
//============================================

cheatengine-i386.exe+293E0: //write Y
mov [edx+00000224],eax  // 89 82 24020000

cheatengine-i386.exe+293D4: //write X
mov [eax+0000011C],edx  // 89 90 1C010000

cheatengine-i386.exe+2D69EC:
mov edx,[ebp-04]  // 8B 55 FC
mov [eax+2C],edx  // 89 50 2C


//============================================
//                  Cleanup
//============================================

unregistersymbol(x)
unregistersymbol(y)
unregistersymbol(xDimension)
unregistersymbol(yDimension)
unregistersymbol(debug)
unregistersymbol(step)
unregistersymbol(speed)
dealloc(code)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"x"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>x</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"y"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>y</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"debug"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>debug</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"X-axis size"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>xdimension</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Y-axis size /2"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>ydimension</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Step"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>step</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Speed"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>speed</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov [edx+00000224],eax || Write Y</Description>
      <Address>004293E0</Address>
      <ModuleName>cheatengine-i386.exe</ModuleName>
      <ModuleNameOffset>293E0</ModuleNameOffset>
      <Before>
        <Byte>55</Byte>
        <Byte>F4</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>F8</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>82</Byte>
        <Byte>24</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>F4</Byte>
        <Byte>8B</Byte>
        <Byte>55</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [eax+0000011C],edx || Write X</Description>
      <Address>004293D4</Address>
      <ModuleName>cheatengine-i386.exe</ModuleName>
      <ModuleNameOffset>293D4</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>F4</Byte>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>90</Byte>
        <Byte>1C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>F4</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [eax+2C],edx || delay instellen</Description>
      <Address>006D69EF</Address>
      <ModuleName>cheatengine-i386.exe</ModuleName>
      <ModuleNameOffset>2D69EF</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>F8</Byte>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>50</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>F8</Byte>
        <Byte>8B</Byte>
        <Byte>55</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>x</Name>
      <Address>05030082</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>y</Name>
      <Address>05030086</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>xDimension</Name>
      <Address>0503008A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>yDimension</Name>
      <Address>0503008E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>debug</Name>
      <Address>05030092</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>step</Name>
      <Address>05030096</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speed</Name>
      <Address>0503009A</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
