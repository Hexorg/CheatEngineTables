<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>63</ID>
      <Description>"Right click -&gt; change script for info"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
If you enable or disable a code, you will have to reload a
savegame for the change to take effect.

Deactivating a script has a chance of crashing your game.

The praxis scripts MIGHT need you to spend at least one point
while in game. You can then load your old savegame and
the scripts should work.

"Unlimited item uses (increase inventory count)" doesn't really
give you unlimited items or stops taking them away, it just
gives you an absurd amount of said item - every time you use
the item since activation of the script.
This option also works on grenades, which "Unlimited item
uses" DOES NOT.

Aaaand... I've got some hints for you, if you want to hack the
game for yourself:

Health is saved as a double, 100 compares to "5.53552857091405E-315"
this time, however. God mode (always 100 health) does NOT
make you completely invulnerable, it just resets your health to
100 when you're hit. A great blast (rocket, grenade or any
other powerful attack) will still kill you.
WARNING: The default god mode will behave faulty if your health
is above 100, since the game seems to add another entry to
the register for every health point ABOVE 100 resulting in
the comparison not making sense for cheat engine and thus
disabling god mode.

Stamina is saved as a double value, the value INCREASES the more
exhausted you are and then slowly decreases again until you're
fully reinvigorated, which means the value is then set to
"0" in memory.

One bar of energy is saved as a float value of "30", two full
bars as "60", three bars as "90" and so on.

Thanks for reading! - Dami0N/CyberD3m0n
}

[ENABLE]
[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"AOB scripts:"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>145</ID>
          <Description>"True god mode (for player)"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,D9 5E 5C D9 41 68 D9) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(fuckyouinparticular)
label(butyoureok)

newmem:

code:
  cmp [esi+00B0],7
  jne fuckyouinparticular
  cmp [esi+00B0],7
  je butyoureok

fuckyouinparticular:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
  jmp return

butyoureok:
  nop
  fld dword ptr [ecx+68]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 5E 5C D9 41 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+2666C7:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>146</ID>
          <Description>"God mode (always 100 health)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,D9 5E 5C D9 41 68 D9) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(fuckyouinparticular)
label(butyoureok)

newmem:

code:
  cmp [esi+00B0],7
  jne fuckyouinparticular
  cmp [esi+00B0],7
  je butyoureok

fuckyouinparticular:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
  jmp return

butyoureok:
  mov [esi+5C],(double)5.53552857091405E-315
  fstp dword ptr [esi+5C]
  mov [esi+5C],(double)5.53552857091405E-315
  fld dword ptr [ecx+68]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 5E 5C D9 41 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+2666C7:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>118</ID>
          <Description>"Unlimited ammo"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,66 FF 48 14 8B 4E 70) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  mov ecx,[esi+70]
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 FF 48 14 8B 4E 70

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+3472F8:
  dec word ptr [eax+14]
  mov ecx,[esi+70]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>141</ID>
          <Description>"Unlimited stamina"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,D9 41 30 C3 CC) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+30],0
  fld dword ptr [ecx+30]
  mov [ecx+30],0
  ret 
  int 3 
  jmp return

INJECT:
  jmp code
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 41 30 C3 CC

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+29BF80:
  fld dword ptr [ecx+30]
  ret
  int 3
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>123</ID>
          <Description>"Unlimited energy"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,D9 59 04 D9 59 08 C2) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fstp dword ptr [ecx+04]
  mov [ecx+04],(float)60
  fstp dword ptr [ecx+08]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 59 04 D9 59 08

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+25DB9F:
  fstp dword ptr [ecx+04]
  fstp dword ptr [ecx+08]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>154</ID>
          <Description>"Unlimited item uses"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,66 89 48 06 8B C5) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  mov eax,ebp
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 89 48 06 8B C5

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+36900A:
  mov [eax+06],cx
  mov eax,ebp
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>153</ID>
          <Description>"Unlimited item uses (increase inventory count)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,0F B7 48 06 0F B7 D9) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  movzx ebx,cx
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 0F B7 48 06 0F B7 D9

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+368FFC:
  movzx ecx,word ptr [eax+06]
  movzx ebx,cx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"Opening inventory grants 5000 credits"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,8B 70 60 8B 44 24 68) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add [eax+60],1388
  mov esi,[eax+60]
  mov eax,[esp+68]
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 70 60 8B 44 24 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+3DB16B:
  mov esi,[eax+60]
  mov eax,[esp+68]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>134</ID>
          <Description>"Opening inventory sets credits to 100.000"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,8B 70 60 8B 44 24 68) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+60],186A0
  mov esi,[eax+60]
  mov eax,[esp+68]
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 70 60 8B 44 24 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+3DB16B:
  mov esi,[eax+60]
  mov eax,[esp+68]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>136</ID>
          <Description>"Praxis points don't decrease"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,29 41 10 6A 01) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,0
  sub [ecx+10],eax
  push 01
  jmp return

INJECT:
  jmp code
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 29 41 10 6A 01

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+25B664:
  sub [ecx+10],eax
  push 01
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>137</ID>
          <Description>"Spending praxis increases praxis"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,29 41 10 6A 01) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add [ecx+10],eax
  push 01
  jmp return

INJECT:
  jmp code
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 29 41 10 6A 01

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+25B664:
  sub [ecx+10],eax
  push 01
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>144</ID>
      <Description>"Possibly useless:"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>143</ID>
          <Description>"God mode (for all entities)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhrml.exe,D9 5E 5C D9 41 68 D9) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  fld dword ptr [ecx+68]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 5E 5C D9 41 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhrml.exe+2666C7:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
