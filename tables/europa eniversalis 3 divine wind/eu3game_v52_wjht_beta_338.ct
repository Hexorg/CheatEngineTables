<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>37</ID>
      <Description>"[X] &lt;== EU3 Devine Wind V5.2 (WJHT) Script"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Europa Universalis 3 - Divine Wind
 Game Version  : 5.2 (WJHT)
 Script Version: 1.0
 CE Version    : 6.2
 GM, Gold, Stability, Manpower, City, Technology, SpecialUnits and more
 14-Dec-2010 Release for version 5.0
 11-May-2011 Adapted to version  5.1
 14-May-2011 Adapted to version  5.1 (NHQH)
 17-Oct-2011 Adapted to version  5.1 (BJLT)
 17-Jul-2012 Adapted to version  5.2 (WJHT) Beta
 By Recifense
===========================================
}

[ENABLE]
//=========================================
assert(eu3game.exe+003fa3cf,8b 89 5c 16 00 00 8b 45 08 89 48 04 8b 4d f4) //_MP
assert(eu3game.exe+001bce23,8b 89 f4 04 00 00 8b 45 08 89 08 5d c2 04 00) //_MDucs
assert(eu3game.exe+002cd687,8b 46 34 39 46 64 7e 03 89 46 64 8b 46 64 29) //_GM
assert(eu3game.exe+002cd762,89 77 34 5f 5e 8b e5 5d c2 04 00)             //_GM1
assert(eu3game.exe+002cd7bb,89 4e 38 5e 8b e5 5d c2 04 00)                //_MTM
assert(eu3game.exe+004b1800,39 81 d8 04 00 00 68 ?? ?? ?? ?? 8d 4d d8)    //_MC
assert(eu3game.exe+004c0d34,8d 4d bc 89 5e 58 e8 ?? ?? ?? ?? 8b 4e 4c)    //_MSC
assert(eu3game.exe+0022cff5,e8 e6 5f f2 ff 53 8b cf)                //_MCol
assert(eu3game.exe+0022dc67,e8 74 53 f2 ff 8b 55 f0 52 8b cb)       //_MRec
assert(eu3game.exe+0022ebbb,e8 20 44 f2 ff 8b 4d e0 56)             //_MBC
assert(eu3game.exe+00226328,8b 09 3b 4d 08 ?? ?? 8b 57 38 2b 57 34) //_MRT
assert(eu3game.exe+001c3359,8b 4d 0c 8b 0c 88 56 8b 75 08 56)       //_MSU
assert(eu3game.exe+002e079f,39 b7 cc 00 00 00 ?? ?? 8b 87 08 01 00 00) //_MM
assert(eu3game.exe+002e0b00,39 b7 cc 00 00 00) //_MM1
assert(eu3game.exe+002b3fd2,e8 19 0a da ff 8b 55 fc 8b 4d f8 50 57) //_MB
assert(eu3game.exe+001768d8,89 8f bc 04 00 00 5f 5e 8b e5 5d c2 04) //_GM2
assert(eu3game.exe+002d0869,8b 49 34 8b c4 c7 45 fc 00 00 00 00 89) //_MB1

//=========================================
alloc(MyCode,2048,eu3game.exe)
//=========================================
// Declaration section
label(_MonPlayer)
label(_BackMP)
label(_MonDucats)
label(_BackMD)
label(_ExitMD)
label(_MonD0)
label(_MonD1)
label(_MonD10)
label(_MonD11)
label(_MonD2)
label(_MonD20)
label(_MonD21)
label(_MonD3)
label(_GodMode)
label(_BackGM)
label(_ExitGM)
label(_GodM0)
label(_GodM1)
label(_TroopMorale)
label(_BackTM)
label(_ExitTM)
label(_GodMode1)
label(_BackGM1)
label(_ExitGM1)
label(_MonCity)
label(_BackMC)
label(_ExitMC)
label(_MonC0)
label(_MonC1)
label(_MonC2)
label(_MonC20)
label(_MonC21)
label(_MonSelCity)
label(_BackMSC)
label(_MonColonization)
label(_BackMCo)
label(_ExitMCo)
label(_MonCo0)
label(_MonRecruitment)
label(_BackMRe)
label(_ExitMRe)
label(_MonBuildingConstruction)
label(_BackMBC)
label(_ExitMBC)
label(_MonResearchTech)
label(_BackMRT)
label(_ExitMRT)
label(_MonSpecialUnits)
label(_BackMSU)
label(_ExitMSU)
label(_MonMovement)
label(_BackMM)
label(_ExitMM)
label(_MonMovement1)
label(_BackMM1)
label(_ExitMM1)
label(_MonBattle)
label(_BackMB)
label(_ExitMB)
label(_GodMode2)
label(_BackGM2)
label(_ExitGM2)
label(_GodM20)
label(_MonBattle1)
label(_BackMB1)
label(_ExitMB1)
label(iPlayerID)
label(pPlayer)
label(pLastOne)
label(pSelCity)
label(pLastCity)
label(pBattleCity)
label(pBattleCity1)
label(iEnableMD)
label(iEnableMMP)
label(iEnableMS)
label(iEnableGM)
label(iEnableTM)
label(iEnableTO)
label(iEnableGA)
label(iEnableQC)
label(iEnableEC)
label(iEnableQR)
label(iEnableQBC)
label(iEnableMRT)
label(iEnableMSU)
label(iEnableMMT)
label(iEnablePOP)
label(iEnableMM)
label(iEnableMMo)
label(iArmyMorale)
label(iNavalMorale)
label(iEnableQB)
label(iEnableMRR)

registersymbol(MyCode)
registersymbol(iPlayerID)
registersymbol(pPlayer)
registersymbol(pLastOne)
registersymbol(pSelCity)
registersymbol(pLastCity)
registersymbol(pBattleCity)
registersymbol(pBattleCity1)
registersymbol(iEnableMD)
registersymbol(iEnableMMP)
registersymbol(iEnableMS)
registersymbol(iEnableGM)
registersymbol(iEnableTM)
registersymbol(iEnableTO)
registersymbol(iEnableGA)
registersymbol(iEnableQC)
registersymbol(iEnableEC)
registersymbol(iEnableQR)
registersymbol(iEnableQBC)
registersymbol(iEnableMRT)
registersymbol(iEnableMSU)
registersymbol(iEnableMMT)
registersymbol(iEnablePOP)
registersymbol(iEnableMM)
registersymbol(iEnableMMo)
registersymbol(iEnableQB)
registersymbol(iEnableMRR)

//=========================================
MyCode:
//========================================= V52
// This code finds out Player ID
_MonPlayer:
 mov ecx,[ecx+0000165c]       // Get player ID

 mov [iPlayerID],ecx          // Save it for further use
 jmp _BackMP                  // Back to main code

//========================================= V52
// Minimum Ducats = 1000, Manpower = Maximum and Stability = 10
_MonDucats:
 mov eax,[ecx+1c]             // Get Owner ID

 cmp eax,[iPlayerID]          // Is it the playerÂ´s resource?
 jne _ExitMD                  // jump if false

 mov [pPlayer],ecx            // Save pointer for debugging

// Ducats
 cmp dword ptr [iEnableMD],0
 je _MonD0                    // Jump if feature is disabled

 mov eax,#50000000            // Get minimum value (50000)

 cmp eax,[ecx+000004f4]       // Currrent Ducats &gt;= 50000?
 jle _MonD0                   // Jump if true

 mov [ecx+000004f4],eax       // Make Ducats = 50000

// Man Power
_MonD0:
 cmp dword ptr [iEnableMMP],0
 je _MonD1                    // Jump if feature is disabled

 mov eax,[ecx+00000918]       // Get maximum Manpower
 mov [ecx+00000914],eax       // Make Manpower = Max

// Traditions
_MonD1:
 cmp dword ptr [iEnableMMT],0
 je _MonD2                    // Jump if feature is disabled

 mov eax,#250                 // Minimum Tradition

 cmp eax,[ecx+00000c20]       // Army Tradition &gt;= 25%?
 jle _MonD10                  // Jump if true

 mov [ecx+00000c20],eax       // Update tradition

_MonD10:
 cmp eax,[ecx+00000c24]       // Naval Tradition &gt;= 25%?
 jle _MonD11                  // Jump if true

 mov [ecx+00000c24],eax       // Update tradition

_MonD11:
 cmp eax,[ecx+00000c28]       // Army Tradition &gt;= 25%?
 jle _MonD2                   // Jump if true

 mov [ecx+00000c28],eax       // Update tradition

// Morale
_MonD2:
 cmp dword ptr [iEnableMMo],0
 je _MonD3                    // Jump if feature is disabled

 mov eax,[ecx+000009f0]       // Get pointer to Army basic Morale?
 cmp dword ptr [eax+00000128],#2500
 jge _MonD20

 mov dword ptr [eax+00000128],#2500

_MonD20:
 mov eax,[eax+00000128]
 mov [iArmyMorale],eax        // Update general army morale

 mov eax,[ecx+00000a38]       // Get pointer to Naval basic Morale?
 cmp dword ptr [eax+00000130],#2500
 jge _MonD21

 mov dword ptr [eax+00000130],#2500

_MonD21:
 mov eax,[eax+00000130]
 mov [iNavalMorale],eax       // Update general Naval morale

// Stability
_MonD3:
 cmp dword ptr [iEnableMS],0
 je _ExitMD                   // Jump if feature is disabled

 mov eax,#10000               // Get minimum value (10)

 cmp eax,[ecx+00000620]       // Stability &gt;= 10 ?
 jle _ExitMD                  // Jump if true

 mov [ecx+00000620],eax       // Stability = 10

_ExitMD:
 mov ecx,[ecx+000004f4]       // Original code (Get Ducats)
 jmp _BackMD                  // Back to main code

//========================================= V52
// God Mode for player's troops on Combat
_GodMode:
 mov eax,[esi+60]             // Read troop's owner ID
 cmp eax,[iPlayerID]          // Is it the player's? ...
 jne _GodM1                   // ... Jump if false

 cmp dword ptr [iEnableGM],0
 je _GodM0                    // Jump if feature is disabled

 xor eax,eax
 mov [esi+64],eax             // Value_to_decrease = 0

_GodM0:
 cmp dword ptr [iEnableTM],0  // Morale
 je _ExitGM                   // Jump if feature is disabled

 xor eax,eax
 mov [esi+68],eax             // Value_to_decrease = 0
 jmp _ExitGM

// Quick Battle
_GodM1:
 cmp dword ptr [iEnableQB],0
 je _ExitGM                   // Jump if feature is disabled

 mov eax,[esi+6c]             // Get Army address
 mov eax,[eax+000000b0]       // Get Army current location (province)
 cmp eax,[pBattleCity]        // Is it from last selected battle?
 jne _ExitGM                  // Jump if false

 mov eax,[esi+38]             // Get troop Morale
 shr eax,1                    // Devide it by 2
 mov [esi+68],eax             // Make value2decrease = troop_morale/2

 mov eax,[esi+34]             // Get troop size
 shr eax,1                    // Devide it by 2
 cmp eax,[esi+64]             // Value2decrease &gt;= troop_size/2?
 jle _ExitGM                  // Jump if true

 mov [esi+64],eax             // Make value2decrease = troop_size/2

_ExitGM:
 mov eax,[esi+34]             // Original code (get troop size) &lt;=== Prob
 cmp [esi+64],eax             // Original code (compare it to value2decrease)
 jmp _BackGM                  // Back to main code

//========================================= V52
// God Mode for player's troops on Combat
_GodMode1:
 cmp dword ptr [iEnableGM],0
 je _ExitGM1                  // Jump if feature is disabled

 push ecx                     // Save ECX
 mov ecx,[edi+60]             // Read troop's owner ID
 cmp ecx,[iPlayerID]          // Is it the player's? ...
 pop ecx                      // Restore ECX
 jne _ExitGM1                 // ... Jump if false

 mov esi,#1000                // Size = 10000

_ExitGM1:
 mov [edi+34],esi             // Original code
 pop edi                      // Original code
 pop esi                      // Original code
 jmp _BackGM1                 // Back to main code

//========================================= V52
// Player's troop morale = 100% on Combat
_TroopMorale:
 cmp dword ptr [iEnableTM],0
 je _ExitTM                   // Jump if feature is disabled

 push ebx                     // Save EBX context
 mov ebx,[esi+60]             // Read troop's owner ID
 cmp ebx,[iPlayerID]          // Is it the player's? ...
 pop ebx                      // Restore EBX context
 jne _ExitTM                  // ... Jump if false

 cmp ecx,[esi+38]             // Next &gt;= current (morale)?
 jge _ExitTM                  // Jump if true

 mov ecx,[esi+38]             // Next = current

_ExitTM:
 mov [esi+38],ecx             // Original code
 pop esi                      // Original code
 mov esp,ebp                  // Original code
 jmp _BackTM                  // Back to main code

//========================================= V51 BJLT
// Ownership, Revolt Risk
// Population = 2000 and Garrison = 1000 (updated when city is selected)
_MonCity:
 push eax
 push ebx

 cmp dword ptr [iEnableTO],0  // Take ownership
 je _MonC0                    // Jump if feature is disabled

 mov eax,[ecx+000004e0]       // Get controller iID
 cmp eax,[iPlayerID]          // Is it the player?
 jne _MonC0                   // jump if false

 mov [ecx+000004d8],eax       // Change iOwner
 mov eax,[ecx+000004dc]       // Get controller aID
 mov [ecx+000004d4],eax       // Change aOwner

_MonC0:
 mov [pLastCity],ecx          // Save ptr to city for debugging

 mov eax,[ecx+000004d8]       // Read city's owner ID
 cmp eax,[iPlayerID]          // Is it one of the playerÂ´s?
 jne _ExitMC                  // jump if false

// Garrison
 cmp dword ptr [iEnableGA],0
 je _MonC1                    // Jump if feature is disabled

 mov eax,[ecx+00000130]       // Get ptr to general info list
 mov eax,[eax+00000280]       // Get Fort Level
 imul eax,eax,#1000           // Multiply it by 1000

 mov [ecx+000004bc],eax       // Garrison = Maximum

// Population
_MonC1:
 cmp dword ptr [iEnablePOP],0
 je _MonC2                    // Jump if feature is disabled

 mov eax,#2000000
 cmp eax,[ecx+000004b8]       // Population &gt;= 2000?
 jle _MonC2                   // jump if true

 mov [ecx+000004b8],eax       // Population = 2000

// Revolt Risk
_MonC2:
 cmp dword ptr [iEnableMRR],0
 je _ExitMC                   // Jump if feature is disabled

 mov dword ptr [ecx+000004c0],0 // Make BaseRevoltRisk = 0

 mov ebx,[ecx+00000358]       // Get ptr to list related2nationalism
 mov eax,[ebx+10]             // Get LocalRevoltRisk
 test eax,eax                 // Negative value?
 js _MonC20                   // Jump if true

 mov dword ptr [ebx+08],0     // Make MinimumRevoltRisk = 0
 mov dword ptr [ebx+10],0     // Make LocalRevoltRisk   = 0

_MonC20:
 mov ebx,[ecx+000003a0]       // Get ptr to list related2occupied
 mov eax,[ebx+10]             // Get LocalRevoltRisk
 test eax,eax                 // Negative value?
 js _MonC21                   // Jump if true

 mov dword ptr [ebx+08],0     // Make MinimumRevoltRisk = 0
 mov dword ptr [ebx+10],0     // Make LocalRevoltRisk   = 0

_MonC21:
 mov ebx,[ecx+00000130]       // Get ptr to list related2general
 mov eax,[ebx+10]             // Get LocalRevoltRisk
 test eax,eax                 // Negative value?
 js _ExitMC                   // Jump if true

 mov dword ptr [ebx+08],0     // Make MinimumRevoltRisk = 0
 mov dword ptr [ebx+10],0     // Make LocalRevoltRisk   = 0

_ExitMC:
 pop ebx
 pop eax

 cmp [ecx+000004d8],eax       // Original code (Check iOwner)
 jmp _BackMC                  // Back to main code

//========================================= V51 BJLT
// Just for debugging
_MonSelCity:
 mov [pSelCity],ebx           // Save pointer for debugging

 mov [esi+58],ebx             // Original code (Update Selected City)
 lea ecx,[ebp-44]             // Original code
 jmp _BackMSC                 // Back to main code

//========================================= V51 BJLT
// Colonization in 1 day
// EBX = Colonization Structure OK
// EDI = Colony-to-be OK
_MonColonization:
 call eu3game.exe+152fe0      // Original code (Update dates and days)

 mov ecx,[ebx+30]             // Get colonizer ID
 cmp ecx,[iPlayerID]          // Is it the player?
 jne _ExitMCo                 // jump if false

 cmp dword ptr [iEnableQC],0  // Quick Colonization
 je _ExitMCo                  // Jump if feature is disabled

 mov ecx,[ebx+10]             // Get starting date (current date)
 lea ecx,[ecx+18]             // Add 1 day (24 hours)
 mov [ebx+14],ecx             // Save finishing date (just 1 day)
 mov dword ptr [ebx+18],1     // Make remaining_days = 1

_MonCo0:
 cmp dword ptr [iEnableEC],0  // Easy Colonization
 je _ExitMCo                  // Jump if feature is disabled

 mov dword ptr [edi+00000524],0  // Natives = 0
 mov dword ptr [edi+00000528],0  // Ferocity = 0
 mov dword ptr [edi+0000052c],0  // Agressiveness = 0

 mov ecx,[edi+000002c8]             // Get pointer to agressiveness factor list
 mov dword ptr [ecx+000000f8],#100  // LocalColonistChance = +1%
 mov dword ptr [ecx+00000338],#100  // LocalColonialGrowth = +1%

_ExitMCo:
 jmp _BackMCo                 // Back to main code

//========================================= V51 BJLT
// Recruitment/Mercenaries or Ship production in 1 day
// EBX = Recruitment Structure or Ship Production Structure
_MonRecruitment:
 call eu3game.exe+152fe0      // Original code (Update dates and days)

 mov ecx,[ebx+30]             // Get recruitment ID
 cmp ecx,[iPlayerID]          // Is it the player?
 jne _ExitMRe                 // jump if false

 cmp dword ptr [iEnableQR],0  // Quick Recruitment
 je _ExitMRe                  // Jump if feature is disabled

 mov ecx,[ebx+10]             // Get starting date (current date)
 lea ecx,[ecx+18]             // Add 1 day (24 hours)
 mov [ebx+14],ecx             // Save finishing date (just 1 day)
 mov dword ptr [ebx+18],1     // Make remaining_days = 1

_ExitMRe:
 jmp _BackMRe                 // Back to main code

//========================================= V51 BJLT
// Construction of Buildings in 1 day
// ESI = Construction Structure, EDI = pOwnerInfo
_MonBuildingConstruction:
 call eu3game.exe+152fe0      // Original code (Update dates and days)

 mov ecx,[edi+1c]             // Get player ID
 cmp ecx,[iPlayerID]          // Is it the player?
 jne _ExitMBC                 // jump if false

 cmp dword ptr [iEnableQBC],0 // Quick Construction
 je _ExitMBC                  // Jump if feature is disabled

 mov ecx,[esi+10]             // Get starting date (current date)
 lea ecx,[ecx+18]             // Add 1 day (24 hours)
 mov [esi+14],ecx             // Save finishing date (just 1 day)
 mov dword ptr [esi+18],1     // Make remaining_days = 1

_ExitMBC:
 jmp _BackMBC                 // Back to main code

//========================================= V51 BJLT
// Quick Technology Advance
_MonResearchTech:
 push edx                     // Save EDX context

 cmp dword ptr [iEnableMRT],0
 je _ExitMRT                  // Jump if feature is disabled

 mov edx,[esi+000000cc]       // Get pPlayer
 mov edx,[edx+1c]             // Get OwnerID
 cmp edx,[iPlayerID]          // Is it a player research?
 jne _ExitMRT                 // Jump if false

 mov edx,[ebp+08]             // Get value to complete research
 mov [ecx],edx                // make it complete

_ExitMRT:
 pop edx                      // Restore EDX context

 mov ecx,[ecx]                // Original code (get research value)
 cmp ecx,[ebp+08]             // Original code (check if complete)
 jmp _BackMRT                 // Back to main code

//========================================= V51 BJLT
// Special Unit = Maximum (5)
// Merchants, colonists, diplomats, missionaries, spies, magistrates
_MonSpecialUnits:
 push edx                     // Save EDX context
 mov edx,ecx                  // EDX = Player Structure

 mov ecx,[ebp+0c]             // Original Code (Get Special Unit Index)
 mov ecx,[eax+ecx*4]          // Original Code (Get pointer to Special Unit)

 cmp dword ptr [iEnableMSU],0
 je _ExitMSU                  // Jump if feature is disabled

 mov edx,[edx+1c]             // Get OwnerID
 cmp edx,[iPlayerID]          // Is it the player?
 jne _ExitMSU                 // Jump if false

 mov dword ptr [ecx+08],#5000 // Make available units = maximum

_ExitMSU:
 pop edx                      // Restore EDX context
 jmp _BackMSU                 // Back to main code

//========================================= V51 BJLT *
// Troop Movement between adjacent province in 1 Day
_MonMovement:
 push edx                     // Save EDX context

 cmp dword ptr [iEnableMM],0
 je _ExitMM                   // Jump if feature is disabled

 mov edx,[edi+000000a0]       // Get OwnerID
 cmp edx,[iPlayerID]          // Is it a player research?
 jne _ExitMM                  // Jump if false

 cmp esi,[edi+000000cc]       // Movement progress = 100% ?
 jle _ExitMM                  // Jump if false

 mov [edi+000000cc],esi       // Make progress = 100%

_ExitMM:
 pop edx                      // Restore EDX context
 cmp [edi+000000cc],esi       // Original code
 jmp _BackMM                  // Back to main code

//========================================= V51 BJLT *
// Troop Movement between adjacent province in 1 Day
_MonMovement1:
 push edx                     // Save EDX context

 cmp dword ptr [iEnableMM],0
 je _ExitMM1                  // Jump if feature is disabled

 mov edx,[edi+000000a0]       // Get OwnerID
 cmp edx,[iPlayerID]          // Is it a player research?
 jne _ExitMM1                 // Jump if false

 cmp esi,[edi+000000cc]       // Movement progress = 100% ?
 jle _ExitMM1                 // Jump if false

 mov [edi+000000cc],esi       // Make progress = 100%

_ExitMM1:
 pop edx                      // Restore EDX context
 cmp [edi+000000cc],esi       // Original code
 jmp _BackMM1                 // Back to main code

//========================================= V51 BJLT
// This identifies the province where the battle takes place (Not siege)
_MonBattle:
 push edx                     // Save EDX context

 mov edx,[esi+60]             // Get ownerID
 cmp edx,[iPlayerID]          // Is it the player?
 je _ExitMB                   // Jump if true

 mov edx,[esi+6c]             // Get enemy's army address
 mov edx,[edx+000000b0]       // Get ptr to current province (city)
 mov [pBattleCity],edx        // Save pointer for further use

_ExitMB:
 pop edx                      // Restore EDX context
 call eu3game.exe+0549f0      // Original code
 jmp _BackMB                  // Back to main code

//========================================= V51 BJLT
// God Mode for Garrison soldiers (siege)
_GodMode2:
 mov esi,[edi+000004d8]       // Get OwnerID
 cmp esi,[iPlayerID]          // Is it the player?
 je _GodM20                   // Jump if true

 cmp dword ptr [iEnableQB],0
 je _ExitGM2                  // Jump if feature is disabled

 cmp edi,[pBattleCity1]       // Is it the enemy city of last select siege?
 jne _ExitGM2                 // Jump if false

 mov esi,[edi+000004bc]       // Get Garrison troop_size
 shr esi,2                    // Devide it by 4
 cmp ecx,esi                  // new value &lt;= troop_size/4?
 jle _ExitGM2                 // Jump if true

 mov ecx,esi                  // Make new value = troop_size/4
 jmp _ExitGM2

_GodM20:
 cmp dword ptr [iEnableGM],0
 je _ExitGM2                  // Jump if feature is disabled

 cmp ecx,[edi+000004bc]       // New value &gt;= current value?
 jge _ExitGM2                 // Jump if true

 mov ecx,[edi+000004bc]       // Make New value = current value

_ExitGM2:
 mov [edi+000004bc],ecx       // Original code (update garrison soldiers)
 jmp _BackGM2                 // Back to main code

//========================================= V51 BJLT
// This identifies the province where the battle takes place (Siege)
_MonBattle1:
 push edx                     // Save EDX context

 mov edx,[ecx+60]             // Get ownerID
 cmp edx,[iPlayerID]          // Is it the player?
 jne _ExitMB1                 // Jump if false

 mov edx,[ecx+6c]             // Get ptr to army
 mov edx,[edx+000000b0]       // Get ptr to current province (city)**

 mov eax,[edx+000004d8]       // Get OwnerID
 cmp eax,[iPlayerID]          // Is it the player?
 je _ExitMB1                  // Jump if true

 mov [pBattleCity1],edx       // Save it for further use

_ExitMB1:
 pop edx                      // Restore EDX context

 mov ecx,[ecx+34]             // Original code (get troop size)
 mov eax,esp                  // Original code
 jmp _BackMB1                 // Back to main code

//=========================================
 db '===============================&gt;'
 db 'CE6.1 Script by Recifense 101711'
//=========================================
// Variables
iEnableMD:
 dd 1
iEnableMMP:
 dd 1
iEnableGM:
 dd 1
iEnableTM:
 dd 1
iEnableTO:
 dd 1
iEnableMS:
 dd 1
iEnableMRT:
 dd 1
iEnableGA:
 dd 1
iEnableQC:
 dd 1
iEnableEC:
 dd 1
iEnableQR:
 dd 1
iEnableQBC:
 dd 1
iEnableMSU:
 dd 1
iEnableMMT:
 dd 1
iEnablePOP:
 dd 1
iEnableMM:
 dd 1
iEnableMMo:
 dd 1
iEnableQB:
 dd 1
iEnableMRR:
 dd 1
iPlayerID:
 dd 0
pPlayer:
 dd 0
pLastOne:
 dd 0
pSelCity:
 dd 0
pLastCity:
 dd 0
pBattleCity:
 dd 0
pBattleCity1:
 dd 0
iArmyMorale:
 dd #2500
iNavalMorale:
 dd #2500

//=========================================
// Hacking Points
//eu3game.exe+2bcd7f:
//eu3game.exe+2fffdf: //BJLT
eu3game.exe+003fa3cf:
 jmp _MonPlayer
 nop
_BackMP:

//eu3game.exe+0b7363:
//eu3game.exe+0bba53: //BJLT
eu3game.exe+001bce23:
 jmp _MonDucats
 nop
_BackMD:

//eu3game.exe+1cea27:
//eu3game.exe+1d3a47: //BJLT
eu3game.exe+002cd687:
 jmp _GodMode
 nop
_BackGM:

//eu3game.exe+1ceb02:
//eu3game.exe+1d3b22: //BJLT
eu3game.exe+002cd762:
 jmp _GodMode1
_BackGM1:

//eu3game.exe+1ceb5b:
//eu3game.exe+1d3b7b: //BJLT
eu3game.exe+002cd7bb:
 jmp _TroopMorale
 nop
_BackTM:

//eu3game.exe+3b0d30:
//eu3game.exe+3b2fd0: //BJLT
eu3game.exe+004b1800:
 jmp _MonCity
 nop
_BackMC:

//eu3game.exe+3c0214:
//eu3game.exe+3c24e4: //BJLT
eu3game.exe+004c0d34:
 jmp _MonSelCity
 nop
_BackMSC:

//eu3game.exe+127635:
//eu3game.exe+12bdf5: //BJLT
eu3game.exe+0022cff5:
 jmp _MonColonization
_BackMCo:

//eu3game.exe+1282a7:
//eu3game.exe+12ca67: //BJLT
eu3game.exe+0022dc67:
 jmp _MonRecruitment
_BackMRe:

//eu3game.exe+1291fb:
//eu3game.exe+12d9bb: //BJLT
eu3game.exe+0022ebbb:
 jmp _MonBuildingConstruction
_BackMBC:

//eu3game.exe+1208d8:
//eu3game.exe+125118: //BJLT
eu3game.exe+00226328:
 jmp _MonResearchTech
_BackMRT:

//eu3game.exe+0bd8e9:
//eu3game.exe+0c1f19: //BJLT
eu3game.exe+001c3359:
 jmp _MonSpecialUnits
 nop
_BackMSU:

//eu3game.exe+1e117a:
//eu3game.exe+1e6176: //BJLT
eu3game.exe+002e079f:
 jmp _MonMovement
 nop
_BackMM:

//eu3game.exe+1e1250:
//eu3game.exe+1e6253: //BJLT
eu3game.exe+002e0b00:
 jmp _MonMovement1
 nop
_BackMM1:

//eu3game.exe+1ae732:
//eu3game.exe+1b5292: //BJLT
eu3game.exe+002b3fd2:
 jmp _MonBattle
_BackMB:

//eu3game.exe+06efd8:
//eu3game.exe+070a48: //BJLT
eu3game.exe+001768d8:
 jmp _GodMode2
 nop
_BackGM2:

//eu3game.exe+1d1ae9:
//eu3game.exe+1d6b69: //BJLT
eu3game.exe+002d0869:
 jmp _MonBattle1
_BackMB1:

//=========================================
// Original Codes
[DISABLE]
//eu3game.exe+2bcd7f:
//eu3game.exe+2fffdf: //BJLT
eu3game.exe+003fa3cf:
 mov ecx,[ecx+0000165c]

//eu3game.exe+0b7363:
//eu3game.exe+0bba53: //BJLT
eu3game.exe+001bce23:
 mov ecx,[ecx+000004f4]

//eu3game.exe+1cea27:
//eu3game.exe+1d3a47: //BJLT
eu3game.exe+002cd687:
 mov eax,[esi+34]
 cmp [esi+64],eax

//eu3game.exe+1ceb02:
//eu3game.exe+1d3b22: //BJLT
eu3game.exe+002cd762:
 mov [edi+34],esi
 pop edi
 pop esi

//eu3game.exe+1ceb5b:
//eu3game.exe+1d3b7b: //BJLT
eu3game.exe+002cd7bb:
 mov [esi+38],ecx
 pop esi
 mov esp,ebp

//eu3game.exe+3b0d30:
//eu3game.exe+3b2fd0: //BJLT
eu3game.exe+004b1800:
 cmp [ecx+000004d8],eax

//eu3game.exe+3c0214:
//eu3game.exe+3c24e4: //BJLT
eu3game.exe+004c0d34:
 lea ecx,[ebp-44]
 mov [esi+58],ebx

//eu3game.exe+127635:
//eu3game.exe+12bdf5: //BJLT
eu3game.exe+0022cff5:
 call eu3game.exe+152fe0

//eu3game.exe+1282a7:
//eu3game.exe+12ca67: //BJLT
eu3game.exe+0022dc67:
 call eu3game.exe+152fe0

//eu3game.exe+1291fb:
//eu3game.exe+12d9bb: //BJLT
eu3game.exe+0022ebbb:
 call eu3game.exe+152fe0

//eu3game.exe+1208d8:
//eu3game.exe+125118: //BJLT
eu3game.exe+00226328:
 mov ecx,[ecx]
 cmp ecx,[ebp+08]

//eu3game.exe+0bd8e9:
//eu3game.exe+0c1f19: //BJLT
eu3game.exe+001c3359:
 mov ecx,[ebp+0c]
 mov ecx,[eax+ecx*4]

//eu3game.exe+1e117a:
//eu3game.exe+1e6176: //BJLT
eu3game.exe+002e079f:
 cmp [edi+000000cc],esi

//eu3game.exe+1e1250:
//eu3game.exe+1e6253: //BJLT
eu3game.exe+002e0b00:
 cmp [edi+000000cc],esi

//eu3game.exe+1ae732:
//eu3game.exe+1b5292: //BJLT
eu3game.exe+002b3fd2:
 call eu3game.exe+0549f0

//eu3game.exe+06efd8:
//eu3game.exe+070a48: //BJLT
eu3game.exe+001768d8:
 mov [edi+000004bc],ecx

//eu3game.exe+1d1ae9:
//eu3game.exe+1d6b69: //BJLT
eu3game.exe+002d0869:
 mov ecx,[ecx+34]
 mov eax,esp

unregistersymbol(MyCode)
unregistersymbol(iPlayerID)
unregistersymbol(pPlayer)
unregistersymbol(pLastOne)
unregistersymbol(pSelCity)
unregistersymbol(pLastCity)
unregistersymbol(pBattleCity)
unregistersymbol(pBattleCity1)
unregistersymbol(iEnableMD)
unregistersymbol(iEnableMMP)
unregistersymbol(iEnableMS)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableTM)
unregistersymbol(iEnableTO)
unregistersymbol(iEnableGA)
unregistersymbol(iEnableQC)
unregistersymbol(iEnableEC)
unregistersymbol(iEnableQR)
unregistersymbol(iEnableQBC)
unregistersymbol(iEnableMRT)
unregistersymbol(iEnableMSU)
unregistersymbol(iEnableMMT)
unregistersymbol(iEnablePOP)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableMMo)
unregistersymbol(iEnableQB)
unregistersymbol(iEnableMRR)

dealloc(MyCode)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Enable/Disable Minimum Ducats"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMD</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Enable/Disable Maximum Man Power"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMMP</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Enable/Disable Minimum Traditions"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMMT</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Enable/Disable Minimum Basic Army/Naval Morale"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMMo</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Enable/Disable Minimum Stability"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMS</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Enable/Disable God Mode"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Enable/Disable Troop Morale"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableTM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Enable/Disable Quick Battle"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableQB</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Enable/Disable Province Ownership"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableTO</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Enable/Disable Province Full Garrison"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGA</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Enable/Disable Minimum Province Population"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnablePOP</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Enable/Disable Minimum Province Revolt Risk"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMRR</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Enable/Disable Colonization in 1Day"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableQC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Enable/Disable Easy Colonization"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableEC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Enable/Disable Recruitment in 1Day"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableQR</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Enable/Disable Building Construction in 1Day"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableQBC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Enable/Disable Quick Technology Research"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMRT</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Enable/Disable Full of Special Units"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMSU</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Enable/Disable Army/Fleet Travel in 1 Day"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Current Player Prestigy (*1000)"</Description>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>700</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Current Player Legitimacy (*10)"</Description>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>C7C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Europa Universalis 3 - Divine Wind
 Game Version  : 5.2 (WJHT)
 Script Version: 1.0
 CE Version    : 6.2
 GM, Gold, Stability, Manpower, City, Technology, SpecialUnits and more
 14-Dec-2010 Release for version 5.0
 11-May-2011 Adapted to version  5.1
 14-May-2011 Adapted to version  5.1 (NHQH)
 17-Oct-2011 Adapted to version  5.1 (BJLT)
 17-Jul-2012 Adapted to version  5.2 (WJHT) Beta
 By Recifense
===========================================
</Comments>
</CheatTable>
