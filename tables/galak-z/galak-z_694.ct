<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Get Ship Missile"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Galak-Z.exe
  Version: 
  Date   : 2016-01-01
  Author : OmegaHawk

  This script does blah blah blah
}

[ENABLE]

aobscan(missile,70 8B C6 8D 65 F8) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(missileR)
registersymbol(missileR)

newmem:

code:
  mov [missileR],edi
  fld dword ptr [edi+6C]
  fstp dword ptr [edi+64]
  mov eax,esi
  lea esp,[ebp-08]
  jmp return

missileR:
dd 0
missile+01:
  jmp code
return:
registersymbol(missile)

[DISABLE]

missile+01:
  db 8B C6 8D 65 F8

unregistersymbol(missile)
unregistersymbol(missileR)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 6D2D16E5

6D2D16C8: 0F B6 87 CD 00 00 00           -  movzx eax,byte ptr [edi+000000CD]
6D2D16CF: 85 C0                          -  test eax,eax
6D2D16D1: 75 08                          -  jne 6D2D16DB
6D2D16D3: 0F B6 47 68                    -  movzx eax,byte ptr [edi+68]
6D2D16D7: 85 C0                          -  test eax,eax
6D2D16D9: 74 05                          -  je 6D2D16E0
6D2D16DB: 8B 77 64                       -  mov esi,[edi+64]
6D2D16DE: EB 05                          -  jmp 6D2D16E5
6D2D16E0: 39 3F                          -  cmp [edi],edi
6D2D16E2: 8B 77 70                       -  mov esi,[edi+70]
// ---------- INJECTING HERE ----------
6D2D16E5: 8B C6                          -  mov eax,esi
6D2D16E7: 8D 65 F8                       -  lea esp,[ebp-08]
// ---------- DONE INJECTING  ----------
6D2D16EA: 5E                             -  pop esi
6D2D16EB: 5F                             -  pop edi
6D2D16EC: C9                             -  leave 
6D2D16ED: C3                             -  ret 
6D2D16EE: 00 00                          -  add [eax],al
6D2D16F0: 55                             -  push ebp
6D2D16F1: 8B EC                          -  mov ebp,esp
6D2D16F3: 53                             -  push ebx
6D2D16F4: 57                             -  push edi
6D2D16F5: 56                             -  push esi
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>8</ID>
          <Description>"missile ammo"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>missileR</Address>
          <Offsets>
            <Offset>64</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Get Salvage"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Galak-Z.exe
  Version: 
  Date   : 2016-01-01
  Author : OmegaHawk

  This script does blah blah blah
}

[ENABLE]

aobscan(money,8B 40 14 89 45 E0 83) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(moneyR)
registersymbol(moneyR)

newmem:

code:
  mov [moneyR],eax
  mov eax,[eax+14]
  mov [ebp-20],eax
  jmp return

moneyR:
 dd 0
money:
  jmp code
  nop
return:
registersymbol(money)

[DISABLE]

money:
  db 8B 40 14 89 45 E0

unregistersymbol(money)
unregistersymbol(moneyR)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 71E93E97

71E93E7A: 8B 40 1C              -  mov eax,[eax+1C]
71E93E7D: 3D 28 56 F7 0A        -  cmp eax,0AF75628
71E93E82: 74 02                 -  je 71E93E86
71E93E84: 33 F6                 -  xor esi,esi
71E93E86: 39 36                 -  cmp [esi],esi
71E93E88: 8B 46 4C              -  mov eax,[esi+4C]
71E93E8B: 39 00                 -  cmp [eax],eax
71E93E8D: 8B 05 B4 6F 8B 08     -  mov eax,[088B6FB4]
71E93E93: 8B C8                 -  mov ecx,eax
71E93E95: 39 09                 -  cmp [ecx],ecx
// ---------- INJECTING HERE ----------
71E93E97: 8B 40 14              -  mov eax,[eax+14]
71E93E9A: 89 45 E0              -  mov [ebp-20],eax
// ---------- DONE INJECTING  ----------
71E93E9D: 83 EC 0C              -  sub esp,0C
71E93EA0: 68 E4 61 C0 0A        -  push 0AC061E4
71E93EA5: E8 86 D1 CA 92        -  call 04B41030
71E93EAA: 83 C4 10              -  add esp,10
71E93EAD: 8B 4D E0              -  mov ecx,[ebp-20]
71E93EB0: 89 48 08              -  mov [eax+08],ecx
71E93EB3: 83 EC 08              -  sub esp,08
71E93EB6: 50                    -  push eax
71E93EB7: FF 75 E8              -  push [ebp-18]
71E93EBA: E8 99 EF CA 92        -  call 04B42E58
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Salvage"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>moneyR</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Ship HP"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Galak-Z.exe
  Version: 
  Date   : 2016-01-01
  Author : OmegaHawk

  This script does blah blah blah
}

[ENABLE]

aobscan(hp,D9 80 8C 00 00 00 C9) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(hpR)
registersymbol(hpR)

newmem:

code:
  mov [hpR],eax
  fld dword ptr [eax+00000090]
  fstp dword ptr [eax+0000008C]
  fld dword ptr [eax+0000008C]
  jmp return
hpR:
dd 0
hp:
  jmp code
  nop
return:
registersymbol(hp)

[DISABLE]

hp:
  db D9 80 8C 00 00 00

unregistersymbol(hp)
unregistersymbol(hpR)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 6D2EFE81

6D2EFE64: 75 06              -  jne 6D2EFE6C
6D2EFE66: FF 25 08 AF EF 28  -  jmp dword ptr [28EFAF08]
6D2EFE6C: FF 25 48 AF EF 28  -  jmp dword ptr [28EFAF48]
6D2EFE72: 00 00              -  add [eax],al
6D2EFE74: 00 00              -  add [eax],al
6D2EFE76: 00 00              -  add [eax],al
6D2EFE78: 55                 -  push ebp
6D2EFE79: 8B EC              -  mov ebp,esp
6D2EFE7B: 83 EC 08           -  sub esp,08
6D2EFE7E: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
6D2EFE81: D9 80 8C 00 00 00  -  fld dword ptr [eax+0000008C]
// ---------- DONE INJECTING  ----------
6D2EFE87: C9                 -  leave 
6D2EFE88: C3                 -  ret 
6D2EFE89: 00 00              -  add [eax],al
6D2EFE8B: 00 00              -  add [eax],al
6D2EFE8D: 00 00              -  add [eax],al
6D2EFE8F: 00 81 FA 88 FD C9  -  add [ecx-36027706],al
6D2EFE95: 0A 75 06           -  or dh,[ebp+06]
6D2EFE98: FF 25 C4 AE EF 28  -  jmp dword ptr [28EFAEC4]
6D2EFE9E: 81 FA 88 FF C9 0A  -  cmp edx,0AC9FF88
6D2EFEA4: 75 06              -  jne 6D2EFEAC
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>28</ID>
          <Description>"HP"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>hpR</Address>
          <Offsets>
            <Offset>8C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Ship Armor"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Galak-Z.exe
  Version: 
  Date   : 2016-01-01
  Author : OmegaHawk

  This script does blah blah blah
}

[ENABLE]

aobscan(armor,D9 80 98 00 00 00 DD 5D F8 EB) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(nothero)
label(armorR)
registersymbol(armorR)

newmem:

code:
  cmp [eax+84],0
  je nothero
  mov [armorR],eax
  fld dword ptr [eax+00000038]
  fstp dword ptr [eax+00000098]
  nothero:
  fld dword ptr [eax+00000098]
  jmp return
armorR:
 dd 0
armor:
  jmp code
  nop
return:
registersymbol(armor)

[DISABLE]

armor:
  db D9 80 98 00 00 00

unregistersymbol(armor)
unregistersymbol(armorR)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 6D2F1244

6D2F1229: 8B 40 60           -  mov eax,[eax+60]
6D2F122C: 83 EC 08           -  sub esp,08
6D2F122F: 6A 00              -  push 00
6D2F1231: 50                 -  push eax
6D2F1232: E8 B9 20 87 97     -  call 04B632F0
6D2F1237: 83 C4 10           -  add esp,10
6D2F123A: 85 C0              -  test eax,eax
6D2F123C: 74 11              -  je 6D2F124F
6D2F123E: 8B 45 08           -  mov eax,[ebp+08]
6D2F1241: 8B 40 60           -  mov eax,[eax+60]
// ---------- INJECTING HERE ----------
6D2F1244: D9 80 98 00 00 00  -  fld dword ptr [eax+00000098]
// ---------- DONE INJECTING  ----------
6D2F124A: DD 5D F8           -  fstp qword ptr [ebp-08]
6D2F124D: EB 05              -  jmp 6D2F1254
6D2F124F: D9 EE              -  fldz 
6D2F1251: DD 5D F8           -  fstp qword ptr [ebp-08]
6D2F1254: DD 45 F8           -  fld qword ptr [ebp-08]
6D2F1257: C9                 -  leave 
6D2F1258: C3                 -  ret 
6D2F1259: 00 00              -  add [eax],al
6D2F125B: 00 00              -  add [eax],al
6D2F125D: 00 00              -  add [eax],al
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Armor"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>armorR</Address>
          <Offsets>
            <Offset>98</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Get CrashCoin"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Galak-Z.exe
  Version: 
  Date   : 2016-01-01
  Author : OmegaHawk

  This script does blah blah blah
}

[ENABLE]

aobscan(crashcoin,8B 00 89 45 F8 83 EC 0C 68 E4) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(crashcoinR)
registersymbol(crashcoinR)

newmem:

code:
  mov [eax],#99
  mov [crashcoinR],eax
  mov eax,[eax]
  mov [ebp-08],eax
  jmp return
crashcoinR:
dd 0
crashcoin:
  jmp code
return:
registersymbol(crashcoin)

[DISABLE]

crashcoin:
  db 8B 00 89 45 F8

unregistersymbol(crashcoin)
unregistersymbol(crashcoinR)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 6D31874E

6D318728: 8B 80 28 01 00 00  -  mov eax,[eax+00000128]
6D31872E: 89 45 FC           -  mov [ebp-04],eax
6D318731: 8B 0D 9C 6F F9 04  -  mov ecx,[04F96F9C]
6D318737: 8B C1              -  mov eax,ecx
6D318739: 39 00              -  cmp [eax],eax
6D31873B: 8B 41 08           -  mov eax,[ecx+08]
6D31873E: 8B 49 54           -  mov ecx,[ecx+54]
6D318741: 39 48 0C           -  cmp [eax+0C],ecx
6D318744: 0F 86 46 00 00 00  -  jbe 6D318790
6D31874A: 8D 44 88 10        -  lea eax,[eax+ecx*4+10]
// ---------- INJECTING HERE ----------
6D31874E: 8B 00              -  mov eax,[eax]
6D318750: 89 45 F8           -  mov [ebp-08],eax
// ---------- DONE INJECTING  ----------
6D318753: 83 EC 0C           -  sub esp,0C
6D318756: 68 E4 61 97 0A     -  push 0A9761E4
6D31875B: E8 D0 88 83 97     -  call 04B51030
6D318760: 83 C4 10           -  add esp,10
6D318763: 8B 4D F8           -  mov ecx,[ebp-08]
6D318766: 89 48 08           -  mov [eax+08],ecx
6D318769: 83 EC 08           -  sub esp,08
6D31876C: 50                 -  push eax
6D31876D: 68 E0 7B AD 28     -  push 28AD7BE0
6D318772: E8 E1 A6 83 97     -  call 04B52E58
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>30</ID>
          <Description>"CrashCoin"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>crashcoinR</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
