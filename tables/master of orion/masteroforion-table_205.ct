<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>33</ID>
      <Description>"PLAYER-po"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,35BC11CA)
GLOBALALLOC(player_ecx,4)
label(returnhere)
label(originalcode)
registersymbol(playerpo)
aobscan(playerpo,49 8B 84 24 F0 00 00 00 4C 8B 68 38 49 8B DD 4D 85 ED 74 1C)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
push edx
mov ecx,player_ecx
mov edx,[r12+000000F0]
mov [ecx],edx
pop edx
pop ecx
originalcode:
mov rax,[r12+000000F0]

exit:
jmp returnhere

playerpo:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
unregistersymbol(playerpo)
playerpo:
mov rax,[r12+000000F0]
//Alt: db 49 8B 84 24 F0 00 00 00
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>27</ID>
          <Description>"NO-COOLDOWM"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,35BABFAE)
alloc(cooler,4)
label(returnhere)
label(originalcode)
registersymbol(cooldown)
aobscan(cooldown,F3 44 0F 11 7E 44 48 8B 46 18 0F B6 40 3C 85 C0 0F 84 C5 01 00 00)
label(exit)

cooler:
dd (float)-1

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rdx
push rax
mov rdx,[rcx+20]
mov rax,[player_ecx]
cmp rdx,rax
pop rax
pop rdx
jne originalcode
cmp rdi,5
jge originalcode
movss xmm15,[cooler]
originalcode:
movss [rsi+44],xmm15

exit:
jmp returnhere

cooldown:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(cooler)
unregistersymbol(cooldown)
cooldown:
movss [rsi+44],xmm15
//Alt: db F3 44 0F 11 7E 44
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>111802</ID>
      <Description>"FOOD2"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,665D0F11)
alloc(value2,4)
label(returnhere)
registersymbol(food2)
aobscan(food2,F3 44 0F 11 BE C0 00 00 00 F3 0F 10 86 C0 00 00 00 F3 0F 5A C0 66 0F 57 C9 66 0F 2F C8 0F 87 8B 00 00 00)
label(originalcode)
label(exit)

value2:
dd (float)120
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//push ecx
//mov ecx,[player_ptr]
//cmp dword ptr [rsi+20],ecx
//pop ecx
cmp byte [r12+84],81 //human?

jne originalcode
movss xmm15,[value2]

originalcode:
movss [rsi+000000C0],xmm15

exit:
jmp returnhere

food2:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(value2)
unregistersymbol(food2)
food2:
movss [rsi+000000C0],xmm15
//Alt: db F3 44 0F 11 BE C0 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>111803</ID>
      <Description>"No Description"</Description>
      <VariableType>Float</VariableType>
      <Address>980147C0</Address>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :movss xmm0,[rsi+00000100]</Description>
      <Address>27F5F801</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>D3</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C0</Byte>
        <Byte>F2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movsxd  rax,dword ptr [rax+000000BC]</Description>
      <Address>552EC0EF</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>38</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>63</Byte>
        <Byte>80</Byte>
        <Byte>BC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>2A</Byte>
        <Byte>D0</Byte>
        <Byte>F2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss xmm0,[rsi+000000FC]</Description>
      <Address>27F5F861</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>D3</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>FC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C0</Byte>
        <Byte>F2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss xmm0,[rsi+00000100]</Description>
      <Address>38BA0021</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>D3</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C0</Byte>
        <Byte>F2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss [rsi+0000016C],xmm15</Description>
      <Address>35BAC7FB</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>F2</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>F8</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>BE</Byte>
        <Byte>6C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>6C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss [rsi+44],xmm15</Description>
      <Address>35BABFAE</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>F2</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>F8</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>7E</Byte>
        <Byte>44</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>18</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov rax,[rsi+000000F0]</Description>
      <Address>35B7E0A4</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>83</Byte>
        <Byte>3E</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>38</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov rax,[r14+000000F0]</Description>
      <Address>35BC1166</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>41</Byte>
        <Byte>83</Byte>
        <Byte>3E</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>8B</Byte>
        <Byte>68</Byte>
        <Byte>38</Byte>
        <Byte>4D</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov rax,[r12+000000F0]</Description>
      <Address>35BC11CA</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>83</Byte>
        <Byte>3C</Byte>
        <Byte>24</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>84</Byte>
        <Byte>24</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>8B</Byte>
        <Byte>68</Byte>
        <Byte>38</Byte>
        <Byte>49</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>player_ecx</Name>
      <Address>19D30000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>playerpo</Name>
      <Address>3896CC5A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cooldown</Name>
      <Address>3895550E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>food2</Name>
      <Address>67259E81</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
