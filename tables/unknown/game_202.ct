<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>9</ID>
      <Description>"---------- README (double-click on &lt;script&gt;) ----------&gt;"</Description>
      <Color>FF00FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
-------------------------------------------------------------------------------
Info:
-------------------------------------------------------------------------------
  You must be hovering over a tile, even for the increase money cheat to work.
  Hovering over a tile means the mouse cursor is over the visible top of a
  tile, and the tile is highlighted in either white or red.

  Click on the box by the blue "&lt;--------- Freeze Timer: 90 Seconds (enable me)"
  entry to enable a script that freezes the turn timer at 90 seconds so you
  can take your time.

  Click on the box by the blue "&lt;----------Cheat Script, enable me" entry
  to enable the script and expand it's children.  Make sure you have NUMLOCK
  off to use these cheats, or use CTRL+H to set your own hotkey for each one.

  NUMPAD1 - Adds 100 to your money
  NUMPAD2 - Reset Movement On Tile Under Cursor - makes all units able to move
  NUMPAD3 - Add Unit to Tile Under Cursor - adds 1 unit to the tile
  NUMPAD4 - 3 Useable Carriers
  NUMPAD+ - Raise Tile Under Cursor
  NUMPAD- - Lower Tile Under Cursor
  Money - Edit Value ----------&gt; - just double-click on the value and enter a new one
  "&lt;----------Enable Middle Mouse Button" - Enable this blue entry to expand a list
    of possible cheats.  All that are checked will be executed on the active
    tile under the mouse pointer


-------------------------------------------------------------------------------
Notes:
-------------------------------------------------------------------------------
  NUMPAD1 - You still need to have your cursor hovering over a tile
  NUMPAD2 - Works immediately as you can see the unit change, but tile highlight
    will not change to white unless you click on it or move off and back on.
  NUMPAD3 - Change in units will not be immediately visible, but you can
    click on the tile and right-click to deselect and the visible count will update
  NUMPAD4 - You still need to have your cursor hovering over a tile and they
    will not immediately be visable, but you can use them to move your walkers
  NUMPAD+/NUMPAD- - Change will be immediately visible on mouse cursor, but
    the actual tile will not look  higher or lower until it is captured or
    the height gets changes by a cannon or harvester.
  Middle Mouse Button - Any cheats selected will be executed on the tile under
    the mouse cursor.  The tile must be controlled by you, and any cheats that
    work with walkers (units) need to have at least one unit on the tile to
    work.  If you disable the main script, you will have to disable/
    re-enable this script or each cheat individually to make them active as the
    main script sets them to 0.
      16 Units - Changes the unit count to 16 if you have at least 1
      Unit Movement - Makes all units on the tile moveable
      Barracks Useable - Makes a new barracks useable the first turn
      Barracks Count 0 - Sets soldier created count to 0, letting you create more than 8 a turn
      Cannon Useable - Makes a new cannon useable the first turn
      Cannon Ammo - Gives you 9 ammo ready to shoot
      Tile Height: 6 - Raises the tile to the max, will not be visible until
        it changes hands or is raised or lowered by a cannon blast or harvester

-------------------------------------------------------------------------------
CHANGE HISTORY:
-------------------------------------------------------------------------------
Update 1: Freeze timer, middle mouse button cheats
}

[ENABLE]
[DISABLE]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"&lt;--------- Freeze Timer: 90 Seconds (enable me)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address5,Game.exe+35BC1)
define(bytes5,DC 6C 24 08 D9 5E 68)

[ENABLE]
assert(address5,bytes5)

alloc(newmem5,$1000)

label(temp)
label(code5)
label(return5)
label(PTR_TIMER)
registersymbol(PTR_TIMER)

newmem5:
temp:
  dd 0
  dd #90
PTR_TIMER:
  dq 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

code5:
  push eax
  mov eax,esi
  add eax,68
  mov [PTR_TIMER],eax
  mov [PTR_TIMER+4],esi
  pop eax
  fsubr qword ptr [esp+08]
  fstp [temp]
  fild [temp+4]
  fstp dword ptr [esi+68]
  jmp return5


label(inject5)
registersymbol(inject5)
address5:
inject5:
  jmp code5
  nop
  nop
return5:

[disable]
address5:
  db bytes5
dealloc(newmem5)

unregistersymbol(PTR_TIMER)

{
Game.exe+35BA3 - D9 5C 24 04           - fstp dword ptr [esp+04]
Game.exe+35BA7 - 8B 50 44              - mov edx,[eax+44]
Game.exe+35BAA - FF D2                 - call edx
Game.exe+35BAC - 83 F8 02              - cmp eax,02
Game.exe+35BAF - 74 17                 - je Game.exe+35BC8
Game.exe+35BB1 - 8B 0E                 - mov ecx,[esi]
Game.exe+35BB3 - D9 46 68              - fld dword ptr [esi+68]
Game.exe+35BB6 - 8B 01                 - mov eax,[ecx]
Game.exe+35BB8 - DD 5C 24 08           - fstp qword ptr [esp+08]
Game.exe+35BBC - 8B 50 38              - mov edx,[eax+38]
Game.exe+35BBF - FF D2                 - call edx
Game.exe+35BC1 - DC 6C 24 08           - fsubr qword ptr [esp+08]
Game.exe+35BC5 - D9 5E 68              - fstp dword ptr [esi+68] // stores timer value
Game.exe+35BC8 - 8B 0E                 - mov ecx,[esi]
Game.exe+35BCA - 8B 46 04              - mov eax,[esi+04]
Game.exe+35BCD - 8B 11                 - mov edx,[ecx]
Game.exe+35BCF - 50                    - push eax
Game.exe+35BD0 - 8B 42 2C              - mov eax,[edx+2C]
Game.exe+35BD3 - FF D0                 - call eax
Game.exe+35BD5 - 50                    - push eax
Game.exe+35BD6 - E8 C5080500           - call Game.exe+864A0
Game.exe+35BDB - 83 C4 08              - add esp,08
Game.exe+35BDE - 84 C0                 - test al,al
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>51</ID>
          <Description>"(debug)"</Description>
          <Options moHideChildren="1"/>
          <Color>C0C0C0</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>48</ID>
              <Description>"pointerscan result"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>"Game.exe"+0041AA7C</Address>
              <Offsets>
                <Offset>68</Offset>
                <Offset>0</Offset>
                <Offset>14</Offset>
                <Offset>6C8</Offset>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>49</ID>
              <Description>"pointerscan result"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>"Game.exe"+0041BCD8</Address>
              <Offsets>
                <Offset>68</Offset>
                <Offset>0</Offset>
                <Offset>14</Offset>
                <Offset>3B8</Offset>
                <Offset>84</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"pointerscan result"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>"Game.exe"+0041C4D0</Address>
              <Offsets>
                <Offset>68</Offset>
                <Offset>0</Offset>
                <Offset>14</Offset>
                <Offset>34</Offset>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>46</ID>
              <Description>"PTR_TIMER"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>PTR_TIMER</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>47</ID>
              <Description>"PTR_TIMER (BASE)"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>PTR_TIMER+4</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"&lt;---------- Cheat Script, enable me"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Game: Greed Corp
  Version: Steam current 2012-10-18
  Author: jgoemat
}

define(bytes4,83 c4 04 8b c8)

[ENABLE]
aobscan(aob4,83 c4 04 84 c0 74 23 56 e8 * * * * 83 c4 04 8b c8 e8)

alloc(newmem,$1000)
newmem:

// Flags for cheating
label(PTR_MAIN)
label(PTR_HOVERTILE)
label(FLAG_IncreaseMoney)
label(FLAG_RaiseTile)
label(FLAG_LowerTile)
label(FLAG_ResetMovement)
label(FLAG_AddUnit)
label(FLAG_Carriers)

label(FLAG_Magic)
label(FLAG_MagicUnitCount)
label(FLAG_MagicUnitMovement)
label(FLAG_MagicBarracksUseable)
label(FLAG_MagicBarracksCount)
label(FLAG_MagicCannonUseable)
label(FLAG_MagicCannonBullets)
label(FLAG_MagicTileHeight)

registersymbol(PTR_MAIN)
registersymbol(PTR_HOVERTILE)
registersymbol(FLAG_IncreaseMoney)
registersymbol(FLAG_RaiseTile)
registersymbol(FLAG_LowerTile)
registersymbol(FLAG_ResetMovement)
registersymbol(FLAG_AddUnit)
registersymbol(FLAG_Carriers)

registersymbol(FLAG_Magic)
registersymbol(FLAG_MagicUnitCount)
registersymbol(FLAG_MagicUnitMovement)
registersymbol(FLAG_MagicBarracksUseable)
registersymbol(FLAG_MagicBarracksCount)
registersymbol(FLAG_MagicCannonUseable)
registersymbol(FLAG_MagicCannonBullets)
registersymbol(FLAG_MagicTileHeight)

PTR_MAIN:
  dd 0

PTR_HOVERTILE:
  dd 0

FLAG_IncreaseMoney:
  dd 0

FLAG_RaiseTile:
  dd 0

FLAG_LowerTile:
  dd 0

FLAG_ResetMovement:
  dd 0

FLAG_AddUnit:
  dd 0

FLAG_Carriers:
  dd 0


FLAG_Magic:
  dd 1

FLAG_MagicUnitCount:
  dd 0

FLAG_MagicUnitMovement:
  dd 0

FLAG_MagicBarracksUseable:
  dd 0

FLAG_MagicBarracksCount:
  dd 0

FLAG_MagicCannonUseable:
  dd 0

FLAG_MagicCannonBullets:
  dd 0

FLAG_MagicTileHeight:
  dd 0


label(KEYSTATE)
registersymbol(KEYSTATE)
KEYSTATE:
  dd 0 0 0 0

// pushad is: http://faydoc.tripod.com/cpu/pushad.htm
// push eax, ecx, edx, ebx, esp, ebp, esi, edi
// in mem: edi, esi, ebp, esp, ebx, edx, ecx, eax

{ structure: main
  0014: Money
  0028: Hover Tile (tile mouse pointer is over)
  002C: Selected Tile
  0030: Selected Tile (same, maybe this is dest and other source when moving?)

  structure: tile
  0004: Level (1-6)
  0008: ??  0 for player or unkept, 1 for computer maybe
  0010: Tile ID
  001C: Total Units
  0020: Moveable Units
  0024: Barracks Pointer
  0024: Barracks units built this turn (up to 8)
  0038: Barracks Pointer
  0040: Cannon Pointer

  structure: barracks
  0004: 1 == built and ready

  structure: cannon
  0000: (BYTE!) 1 == built and ready
  0004: Total ammo
  0008: Ready ammo
  000C: Pending ammo
}

define(MAIN_MONEY,0014)
define(MAIN_MONEY,0014)
define(MAIN_TOTALCARRIERS,0020)
define(MAIN_USEABLECARRIERS,0024)
define(MAIN_HOVERTILE,0028)
define(MAIN_PENDINGCARRIERS,0050)
define(TILE_HEIGHT,0004)
define(TILE_TOTALUNITS,001C)
define(TILE_MOVEABLEUNITS,0020)
define(TILE_BARRACKSBUILT,0024)
define(TILE_BARRACKSPOINTER,0038)
define(TILE_CANNONPOINTER,0040)
define(BARRACKS_BUILT,0004)
define(CANNON_BUILT,0000)
define(CANNON_AMMOTOTAL,0004)
define(CANNON_AMMOREADY,0008)
define(CANNON_AMMOPENDING,000C)

newmem+800:
label(code4)
label(done)
label(return4)
code4:
  pushfd
  pushad
  // ecx is pointer to MAIN struct, eax is pointer to hovered tile
  mov [PTR_MAIN],ecx
  mov [PTR_HOVERTILE],eax

  cmp dword ptr [FLAG_IncreaseMoney],00000000
  label(skipmoney)
  je skipmoney
  mov dword ptr [FLAG_IncreaseMoney],00000000
  add [ecx+MAIN_MONEY],#100
  skipmoney:

  mov ebx,[ecx+MAIN_HOVERTILE]
  test ebx,ebx
  jz done // if no hover tile, skip all

  cmp dword ptr [FLAG_RaiseTile],00000000
  label(skipraise)
  je skipraise
  mov dword ptr [FLAG_RaiseTile],00000000
  cmp dword ptr [ebx+TILE_HEIGHT],6
  jnb skipraise
  inc dword ptr [ebx+TILE_HEIGHT]
  skipraise:

  cmp dword ptr [FLAG_LowerTile],00000000
  label(skiplower)
  je skiplower
  mov dword ptr [FLAG_LowerTile],00000000
  cmp dword ptr [ebx+TILE_HEIGHT],0
  jna skiplower
  dec dword ptr [ebx+TILE_HEIGHT]
  skiplower:

  cmp dword ptr [FLAG_ResetMovement],00000000
  label(skipresetmovement)
  je skipresetmovement
  mov dword ptr [FLAG_ResetMovement],00000000
  mov eax,dword ptr [ebx+TILE_TOTALUNITS]
  mov dword ptr [ebx+TILE_MOVEABLEUNITS],eax
  skipresetmovement:

  cmp dword ptr [FLAG_AddUnit],00000000
  label(skipaddunit)
  je skipaddunit
  mov dword ptr [FLAG_AddUnit],00000000
  cmp dword ptr [ebx+TILE_TOTALUNITS],10
  jae skipaddunit
  inc [ebx+TILE_TOTALUNITS]
  mov eax,dword ptr [ebx+TILE_TOTALUNITS]
  mov dword ptr [ebx+TILE_MOVEABLEUNITS],eax
  skipaddunit:

  cmp dword ptr [FLAG_Carriers],00000000
  label(skipcarriers)
  je skipcarriers
  mov eax,00000003
  mov [ecx+MAIN_TOTALCARRIERS],eax
  mov [ecx+MAIN_USEABLECARRIERS],eax
  xor eax,eax
  mov [ecx+MAIN_PENDINGCARRIERS],eax
  skipcarriers:

  cmp [FLAG_Magic],1
  label(skipmagic)
  jne skipmagic
  push ecx
  push ebx
  push 00000004 // VK_MBUTTON
  call GetAsyncKeyState
  pop ebx
  pop ecx
  mov [KEYSTATE],eax
  inc [KEYSTATE+4]
  test eax,eax
  label(skipmagic)
  jz skipmagic

  mov [KEYSTATE+8],ebx
  inc [KEYSTATE+C]
  mov [KEYSTATE+10],ecx

  // must be player controlled
  mov eax,[ecx+80] // I THINK it's team of player
  cmp [ebx+8],eax
  jne skipmagic

  test [ebx+c],00000001
  jz skipmagic

  // unit count
  cmp [FLAG_MagicUnitCount],1
  label(skipmagicunitcount)
  jne skipmagicunitcount
  cmp [ebx+TILE_TOTALUNITS],0
  jna skipmagicunitcount
  mov [ebx+TILE_TOTALUNITS],10
  skipmagicunitcount:

  // unit movement
  cmp [FLAG_MagicUnitMovement],1
  label(skipmagicunitmovement)
  mov eax,[ebx+TILE_TOTALUNITS]
  mov [ebx+TILE_MOVEABLEUNITS],eax
  jne skipmagicunitmovement
  skipmagicunitmovement:

  // barracks - useable (on turn created) and zero units created so you can create more
  label(skipmagicbarracksuseable)
  label(skipmagicbarrackscount)
  mov ecx,[ebx+TILE_BARRACKSPOINTER]
  cmp ecx,00000000
  jna skipmagicbarrackscount
  cmp [FLAG_MagicBarracksUseable],1
  jne skipmagicbarracksuseable
  mov eax,[ecx+BARRACKS_BUILT]
  or eax,00000001
  mov [ecx+BARRACKS_BUILT],eax
  skipmagicbarracksuseable:
  cmp [FLAG_MagicBarracksCount],1
  jne skipmagicbarrackscount
  xor eax,eax
  mov [ebx+TILE_BARRACKSBUILT],eax
  skipmagicbarrackscount:

  // cannon - make sure we have one
  label(skipmagiccannonuseable)
  label(skipmagiccannonbullets)
  mov ecx,[ebx+TILE_CANNONPOINTER]
  cmp ecx,00000000
  jna skipmagiccannonbullets

  // see if we should make it useable the turn it is created
  cmp [FLAG_MagicCannonUseable],1
  jne skipmagiccannonuseable
  mov eax,[ecx+CANNON_BUILT]
  or eax,1
  mov [ecx+CANNON_BUILT],eax
  skipmagiccannonuseable:

  // see if we should fill its useable bullets
  cmp [FLAG_MagicCannonBullets],1
  jne skipmagiccannonbullets
  mov eax,00000009
  mov [ecx+CANNON_AMMOTOTAL],eax // set current ammo
  mov [ecx+CANNON_AMMOREADY],eax // set ready ammo
  xor eax,eax
  mov [ecx+CANNON_AMMOPENDING],eax // clear pending ammo
  skipmagiccannonbullets:

  label(skipmagictileheight)
  cmp [FLAG_MagicTileHeight],1
  jne skipmagictileheight

  mov [ebx+TILE_HEIGHT],6
  skipmagictileheight:
  skipmagic:

done:
  popad
  popfd

  add esp,04 // original code
  mov ecx,eax // original code
  jmp return4


{------------------------------------------------------------------------------
 - Hook into game code to call our code
 ------------------------------------------------------------------------------}
label(inject4)
registersymbol(inject4)
aob4+d:
inject4:
  jmp code4
return4:

{------------------------------------------------------------------------------
 - Disable will restore original code
 ------------------------------------------------------------------------------}
[DISABLE]
inject4:
  db bytes4
unregistersymbol(inject4)

unregistersymbol(PTR_MAIN)
unregistersymbol(PTR_HOVERTILE)
unregistersymbol(FLAG_IncreaseMoney)
unregistersymbol(FLAG_RaiseTile)
unregistersymbol(FLAG_LowerTile)
unregistersymbol(FLAG_ResetMovement)
unregistersymbol(FLAG_AddUnit)
unregistersymbol(FLAG_Carriers)

unregistersymbol(FLAG_Magic)
unregistersymbol(FLAG_MagicUnitCount)
unregistersymbol(FLAG_MagicUnitMovement)
unregistersymbol(FLAG_MagicBarracksUseable)
unregistersymbol(FLAG_MagicBarracksCount)
unregistersymbol(FLAG_MagicCannonUseable)
unregistersymbol(FLAG_MagicCannonBullets)
unregistersymbol(FLAG_MagicTileHeight)

unregistersymbol(KEYSTATE)
{
- selected tile id, right where
Game.exe+9BFF7 - E8 54280500           - call Game.exe+EE850
Game.exe+9BFFC - 56                    - push esi
Game.exe+9BFFD - E8 8E26FEFF           - call Game.exe+7E690
Game.exe+9C002 - 83 C4 04              - add esp,04
Game.exe+9C005 - 84 C0                 - test al,al
Game.exe+9C007 - 74 23                 - je Game.exe+9C02C
Game.exe+9C009 - 56                    - push esi
Game.exe+9C00A - E8 B126FEFF           - call Game.exe+7E6C0 -- this calls next
*Game.exe+9C00F - 83 C4 04              - add esp,04 // ecx is main, eax is hover
*Game.exe+9C012 - 8B C8                 - mov ecx,eax
Game.exe+9C014 - E8 B70DFCFF           - call Game.exe+5CDD0
Game.exe+9C019 - 8B 4C 24 18           - mov ecx,[esp+18]
Game.exe+9C01D - 8B F0                 - mov esi,eax
Game.exe+9C01F - E8 AC0DFCFF           - call Game.exe+5CDD0
Game.exe+9C024 - 3B C6                 - cmp eax,esi
Game.exe+9C026 - 0F84 9C000000         - je Game.exe+9C0C8
Game.exe+9C02C - 8B 4C 24 18           - mov ecx,[esp+18]

9C00A calls this:
0045A9E7 - 8B 4C 24 04 CC        - int 3 ecx,[esp+04]
Game.exe+7E6C4- 8B 01                 - mov eax,[ecx]
Game.exe+7E6C6- 8B 50 2C              - mov edx,[eax+2C]
Game.exe+7E6C9- 56                    - push esi
Game.exe+7E6CA- FF D2                 - call edx
Game.exe+7E6CC- 8B F0                 - mov esi,eax
Game.exe+7E6CE- 8B CE                 - mov ecx,esi
Game.exe+7E6D0- E8 6B64FBFF           - call Game.exe+34B40
Game.exe+7E6D5- 50                    - push eax
Game.exe+7E6D6- 8B CE                 - mov ecx,esi
Game.exe+7E6D8- E8 0368FBFF           - call Game.exe+34EE0
Game.exe+7E6DD- 8B C8                 - mov ecx,eax
Game.exe+7E6DF- 5E                    - pop esi
Game.exe+7E6E0- E9 6BC3FDFF           - jmp Game.exe+5AA50 -- jumps to next

// 7E6E0 jumps here, along with many others
Game.exe+5AA50 - 8B 41 28              - mov eax,[ecx+28]
Game.exe+5AA53 - C3                    - ret
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>13</ID>
          <Description>"NUMPAD1 - Increase Money by 100"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>FLAG_IncreaseMoney</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>97</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"NUMPAD2 - Reset Movement On Tile Under Cursor"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>FLAG_ResetMovement</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>98</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"NUMPAD3 - Add Unit to Tile Under Cursor"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>FLAG_AddUnit</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>99</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"NUMPAD4 - 3 Useable Carriers"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>FLAG_Carriers</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>100</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"NUMPAD+ - Raise Tile Under Cursor"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>FLAG_RaiseTile</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>107</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"NUMPAD- - Lower Tile Under Cursor"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>FLAG_LowerTile</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>109</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Money - Edit Value ----------&gt;"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>PTR_MAIN</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"&lt;---------- Enable Middle Mouse Button"</Description>
          <Options moHideChildren="1" moBindActivation="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  You must be hovering over a tile, even for the increase money cheat to work.
  Hovering over a tile means the mouse cursor is over the visible top of a
  tile, and the tile is highlighted in either white or red.

  Click on the box by the blue "&lt;----------Cheat Script, enable me" entry
  to enable the script and expand it's children.  Make sure you have NUMLOCK
  off to use these cheats, or use CTRL+H to set your own hotkey for each one.

  NUMPAD1 - Adds 100 to your money
  NUMPAD2 - Reset Movement On Tile Under Cursor - makes all units able to move
  NUMPAD3 - Add Unit to Tile Under Cursor - adds 1 unit to the tile
  NUMPAD+ - Raise Tile Under Cursor
  NUMPAD- - Lower Tile Under Cursor
  Middle Button - Magic (units,barracks,cannon)
  Money - Edit Value ----------&gt; - just double-click on the value and enter a new one

Notes:
  NUMPAD2 - Works immediately as you can see the unit change, but tile highlight
    will not change to white unless you click on it or move off and back on.
  NUMPAD3 - Change in units will not be immediately visible, but you can
    click on the tile and right-click to deselect and the visible count will update
  NUMPAD+/NUMPAD- - Change will be immediately visible on mouse cursor, but
    the actual tile will not look  higher or lower until it is captured or
    the height gets changes by a cannon or harvester.
  Middle Mouse Button - Sets your soldiers to 16 if you have at least one, all
    of which can move.  If you have a barracks, finish it's construction and
    make it think you haven't used it yet this turn.  If you have a cannon,
    fill it with ammo, ready to use.
}

[ENABLE]
FLAG_Magic:
  dd 1

[DISABLE]
FLAG_Magic:
  dd 0

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>27</ID>
              <Description>"&lt;---------- Middle Mouse Button: 16 Units"</Description>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
  Checking this just sets flag value to 1, unchecking to 0
}

[ENABLE]
FLAG_MagicUnitCount:
  dd 1

[DISABLE]
FLAG_MagicUnitCount:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"&lt;---------- Middle Mouse Button: Unit Movement"</Description>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
  Checking this just sets flag value to 1, unchecking to 0
}

[ENABLE]
FLAG_MagicUnitMovement:
  dd 1

[DISABLE]
FLAG_MagicUnitMovement:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>32</ID>
              <Description>"&lt;---------- Middle Mouse Button: Barracks Useable"</Description>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
  Checking this just sets flag value to 1, unchecking to 0
}

[ENABLE]
FLAG_MagicBarracksUseable:
  dd 1

[DISABLE]
FLAG_MagicBarracksUseable:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>31</ID>
              <Description>"&lt;---------- Middle Mouse Button: Barracks Count 0"</Description>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
  Checking this just sets flag value to 1, unchecking to 0
}

[ENABLE]
FLAG_MagicBarracksCount:
  dd 1

[DISABLE]
FLAG_MagicBarracksCount:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>30</ID>
              <Description>"&lt;---------- Middle Mouse Button: Cannon Useable"</Description>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
  Checking this just sets flag value to 1, unchecking to 0
}

[ENABLE]
FLAG_MagicCannonUseable:
  dd 1

[DISABLE]
FLAG_MagicCannonUseable:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>29</ID>
              <Description>"&lt;---------- Middle Mouse Button: Cannon Ammo"</Description>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
  Checking this just sets flag value to 1, unchecking to 0
}

[ENABLE]
FLAG_MagicCannonBullets:
  dd 1

[DISABLE]
FLAG_MagicCannonBullets:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"&lt;---------- Middle Mouse Button: Tile Height: 6"</Description>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{
  Checking this just sets flag value to 1, unchecking to 0
}

[ENABLE]
FLAG_MagicTileHeight:
  dd 1

[DISABLE]
FLAG_MagicTileHeight:
  dd 0

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"(debug) enable me to expand and see debug variables"</Description>
          <Options moHideChildren="1"/>
          <Color>C0C0C0</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>10</ID>
              <Description>"PTR_MAIN"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>PTR_MAIN</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>12</ID>
              <Description>"PTR_HOVERTILE"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>PTR_HOVERTILE</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"FLAG_Magic"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>FLAG_Magic</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>41</ID>
              <Description>"FLAG_MagicUnitCount"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>FLAG_MagicUnitCount</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>40</ID>
              <Description>"FLAG_MagicUnitMovement"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>FLAG_MagicUnitMovement</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"FLAG_MagicBarracksUseable"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>FLAG_MagicBarracksUseable</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>38</ID>
              <Description>"FLAG_MagicBarracksCount"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>FLAG_MagicBarracksCount</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"FLAG_MagicCannonUseable"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>FLAG_MagicCannonUseable</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>36</ID>
              <Description>"FLAG_MagicCannonBullets"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>FLAG_MagicCannonBullets</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>35</ID>
              <Description>"FLAG_MagicTileHeight"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>FLAG_MagicTileHeight</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"HOLD CTRL - Don't lose men when moving"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(bytes3,2B 44 24 10 8B CE)

[ENABLE]
aobscan(aob3,8b ce e8 * * * * 2b 44 24 10 8b ce 50)

alloc(newmem,$1000)
label(data3)
registersymbol(data3)
newmem:
data3:
  dq 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

// pushad is: http://faydoc.tripod.com/cpu/pushad.htm
// push eax, ecx, edx, ebx, esp, ebp, esi, edi
// in mem: edi, esi, ebp, esp, ebx, edx, ecx, eax

newmem+800:
label(code3)
label(return3)
code3:
  pushfd
  pushad
  mov edi,newmem
  mov esi,esp
  mov ecx,8
  rep movsd

  push 11 // VK_CONTROL
  call GetAsyncKeyState
  test eax,ffffffff
  label(dontchange)
  jnz dontchange // should be js, but not working, any press will do

  popad
  popfd
  sub eax,[esp+10] // original code
  mov ecx,esi // original code
  jmp return3

dontchange:
  // copy total men to moveable men
  popad // refresh registers in case GetAsyncKeyState messed them up
  pushad
  mov eax,[ecx+1c] // load total men
  mov [ecx+20],eax // store moveable men
  popad
  popfd
  mov ecx,esi // original code
  jmp return3


{------------------------------------------------------------------------------
 - Hook into game code to call our code
 ------------------------------------------------------------------------------}
label(inject3)
registersymbol(inject3)
aob3+7:
inject3:
  jmp code3
  nop
return3:

{------------------------------------------------------------------------------
 - Disable will restore original code
 ------------------------------------------------------------------------------}
[DISABLE]
inject3:
  db bytes3
unregistersymbol(inject3)

dealloc(newmem)

{
// aob: 8b ce e8 * * * * 2b 44 24 10 8b ce 50 -
-- updated when moved from
Game.exe+EA12 - 8B CE                 - mov ecx,esi
Game.exe+EA14 - 89 44 24 10           - mov [esp+10],eax
Game.exe+EA18 - E8 83E40400           - call Game.exe+5CEA0
Game.exe+EA1D - 2B 44 24 10           - sub eax,[esp+10] -- sub moveable men
Game.exe+EA21 - 8B CE                 - mov ecx,esi
Game.exe+EA23 - 50                    - push eax
Game.exe+EA24 - E8 87E40400           - call Game.exe+5CEB0
                                        0045CEB0 - 8B 44 24 04  - mov eax,[esp+04]
                                        0045CEB4 - 89 41 20  - mov [ecx+20],eax &lt;&lt;
                                        0045CEB7 - C2 0400 - ret 0004
Game.exe+EA29 - 8B CE                 - mov ecx,esi
Game.exe+EA2B - E8 30E40400           - call Game.exe+5CE60
*Game.exe+EA30 - 2B 44 24 10           - sub eax,[esp+10] -- sub total men
*Game.exe+EA34 - 8B CE                 - mov ecx,esi
Game.exe+EA36 - 50                    - push eax
Game.exe+EA37 - E8 34E40400           - call Game.exe+5CE70
										0045CE70 - 8B 44 24 04  - mov eax,[esp+04]
										0045CE74 - 89 41 1C  - mov [ecx+1C],eax &lt;&lt;
										0045CE77 - C2 0400 - ret 0004
										EAX=00000004
										EBX=0F36AC10
										ECX=14843300
										EDX=00000000
										ESI=14843300
										EDI=0F3876E8
										ESP=0018FCFC
										EBP=2660F100
										EIP=0045CE77
Game.exe+EA3C - 8B 07                 - mov eax,[edi]
Game.exe+EA3E - 8B 50 3C              - mov edx,[eax+3C]
Game.exe+EA41 - 8B CF                 - mov ecx,edi
Game.exe+EA43 - FF D2                 - call edx
Game.exe+EA45 - 8B C8                 - mov ecx,eax
Game.exe+EA47 - E8 14540100           - call Game.exe+23E60
Game.exe+EA4C - 8B CE                 - mov ecx,esi
Game.exe+EA4E - 89 44 24 10           - mov [esp+10],eax
Game.exe+EA52 - E8 49E40400           - call Game.exe+5CEA0
Game.exe+EA57 - 50                    - push eax
Game.exe+EA58 - 8B CE                 - mov ecx,esi
Game.exe+EA5A - E8 71E30400           - call Game.exe+5CDD0
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>3</ID>
              <Description>"Original Test"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(bytes1,3B B7 18 01 00 00)
define(bytes2,89 b7 18 01 00 00)

[ENABLE]
aobscan(aob1,bytes1)
aobscan(aob2,bytes2)

alloc(newmem,$1000)
label(data1)
registersymbol(data1)
newmem:
data1:
  dq 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

// pushad is: http://faydoc.tripod.com/cpu/pushad.htm
// push eax, ecx, edx, ebx, esp, ebp, esi, edi
// in mem: edi, esi, ebp, esp, ebx, edx, ecx, eax

newmem+800:
label(code1)
label(return1)
code1:
  pushfd
  pushad
  mov edi,newmem
  mov esi,esp
  mov ecx,8
  rep movsd
  popad
  popfd
  db bytes1 // original code
  jmp return1

label(code2)
label(return2)
code2:
  pushfd
  pushad
  mov edi,newmem+20
  mov esi,esp
  mov ecx,8
  rep movsd
  popad
  popfd
  db bytes2 // original code
  jmp return2



{------------------------------------------------------------------------------
 - Hook into game code to call our code
 ------------------------------------------------------------------------------}
label(inject1)
registersymbol(inject1)
aob1:
inject1:
  jmp code1
  nop
return1:

label(inject2)
registersymbol(inject2)
aob2:
inject2:
  jmp code2
  nop
return2:

{------------------------------------------------------------------------------
 - Disable will restore original code
 ------------------------------------------------------------------------------}
[DISABLE]
inject1:
  db bytes1
unregistersymbol(inject1)

inject2:
  db bytes2
unregistersymbol(inject2)

{
- selected tile id, right where
Game.exe+D1CFB - 89 74 24 20           - mov [esp+20],esi
Game.exe+D1CFF - E8 7C8DF8FF           - call Game.exe+5AA80 // return true if tile is slected?
										0045AA80 - 33 C0  - xor eax,eax
										0045AA82 - 39 41 2C  - cmp [ecx+2C],eax &lt;&lt;
										0045AA85 - 0F95 C0  - setnc al
										0045AA88 - C3 - ret
Game.exe+D1D04 - 84 C0                 - test al,al
Game.exe+D1D06 - 74 14                 - je Game.exe+D1D1C
Game.exe+D1D08 - 8B CB                 - mov ecx,ebx
Game.exe+D1D0A - E8 918DF8FF           - call Game.exe+5AAA0 // get pointer
										0045AAA0 - 8B 41 2C  - mov eax,[ecx+2C] &lt;&lt;
										0045AAA3 - C3 - ret
Game.exe+D1D0F - 8B C8                 - mov ecx,eax
Game.exe+D1D11 - E8 BAB0F8FF           - call Game.exe+5CDD0
Game.exe+D1D16 - 8B F0                 - mov esi,eax
Game.exe+D1D18 - 89 44 24 20           - mov [esp+20],eax
*Game.exe+D1D1C - 3B B7 18010000        - cmp esi,[edi+00000118]
Game.exe+D1D22 - 74 2E                 - je Game.exe+D1D52
Game.exe+D1D24 - DB 44 24 20           - fild dword ptr [esp+20]
Game.exe+D1D28 - 8B 4F 24              - mov ecx,[edi+24]
Game.exe+D1D2B - 6A 01                 - push 01
Game.exe+D1D2D - 8D 54 24 10           - lea edx,[esp+10]
Game.exe+D1D31 - 52                    - push edx
Game.exe+D1D32 - DD 5C 24 1C           - fstp qword ptr [esp+1C]
*Game.exe+D1D36 - 89 B7 18010000        - mov [edi+00000118],esi // sets selected tile id
Game.exe+D1D3C - C7 44 24 14 03000000  - mov [esp+14],00000003
Game.exe+D1D44 - 8B 01                 - mov eax,[ecx]
Game.exe+D1D46 - 8B 40 48              - mov eax,[eax+48]
Game.exe+D1D49 - 6A 00                 - push 00
Game.exe+D1D4B - 68 E8BC7700           - push Game.exe+37BCE8
Game.exe+D1D50 - FF D0                 - call eax
Game.exe+D1D52 - 5F                    - pop edi
Game.exe+D1D53 - 5E                    - pop esi
Game.exe+D1D54 - 5B                    - pop ebx
Game.exe+D1D55 - 83 C4 10              - add esp,10
Game.exe+D1D58 - C2 0400               - ret 0004
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Test"</Description>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>20</ID>
                  <Description>"PTR_MAIN-Team"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>PTR_MAIN</Address>
                  <Offsets>
                    <Offset>80</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>25</ID>
                  <Description>"PTR_HOVERTILE-Team"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>PTR_HOVERTILE</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>44</ID>
                  <Description>"PTR_HOVERTILE-Level"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>PTR_HOVERTILE</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>24</ID>
                  <Description>"PTR_HOVERTILE-Control flag"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>PTR_HOVERTILE</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>data1</Name>
      <Address>06F60000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>data3</Name>
      <Address>00940000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inject5</Name>
      <Address>00435BC1</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Structures StructVersion="2">
    <Structure Name="PUSHAD" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="1" DoNotSaveLocal="1" AutoCreateStructsize="512">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" Description="EDI" DisplayMethod="Hexadecimal"/>
        <Element Offset="4" Vartype="4 Bytes" Bytesize="4" Description="ESI" DisplayMethod="Hexadecimal"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" Description="EBP" DisplayMethod="Hexadecimal"/>
        <Element Offset="12" Vartype="4 Bytes" Bytesize="4" Description="ESP" DisplayMethod="Hexadecimal"/>
        <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="EBX" DisplayMethod="Hexadecimal"/>
        <Element Offset="20" Vartype="4 Bytes" Bytesize="4" Description="EDX" DisplayMethod="Hexadecimal"/>
        <Element Offset="24" Vartype="4 Bytes" Bytesize="4" Description="ECX" DisplayMethod="Hexadecimal"/>
        <Element Offset="28" Vartype="4 Bytes" Bytesize="4" Description="EAX" DisplayMethod="Hexadecimal"/>
      </Elements>
    </Structure>
    <Structure Name="Main" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="1" DoNotSaveLocal="1" AutoCreateStructsize="512">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" Description="Team?" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4" Vartype="Pointer" Bytesize="4" Description="Steam Account Name" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="Team?" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20" Vartype="4 Bytes" Bytesize="4" Description="Money" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="28" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="4 Bytes" Bytesize="4" Description="Total Carriers" DisplayMethod="Unsigned Integer"/>
        <Element Offset="36" Vartype="4 Bytes" Bytesize="4" Description="Useable Carriers" DisplayMethod="Unsigned Integer"/>
        <Element Offset="40" Vartype="4 Bytes" Bytesize="4" Description="Hover Tile" DisplayMethod="Hexadecimal"/>
        <Element Offset="44" Vartype="4 Bytes" Bytesize="4" Description="Source Tile" DisplayMethod="Hexadecimal"/>
        <Element Offset="48" Vartype="4 Bytes" Bytesize="4" Description="Destination Tile" DisplayMethod="Hexadecimal"/>
        <Element Offset="52" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="60" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="64" Vartype="4 Bytes" Bytesize="4" Description="FLAG: 1 if selected tile and can move to hover tile" DisplayMethod="Unsigned Integer"/>
        <Element Offset="68" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="72" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="76" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="80" Vartype="4 Bytes" Bytesize="4" Description="PENDING carriers" DisplayMethod="Unsigned Integer"/>
        <Element Offset="84" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="88" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="92" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="96" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="100" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="104" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="108" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="112" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="116" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="120" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="124" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="128" Vartype="4 Bytes" Bytesize="4" Description="Current Team" DisplayMethod="Unsigned Integer"/>
        <Element Offset="132" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="136" Vartype="4 Bytes" Bytesize="4" Description="0 if hovering over tile, 5 if not" DisplayMethod="Unsigned Integer"/>
        <Element Offset="140" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="144" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="148" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="152" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="156" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="160" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="164" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="168" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="172" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="176" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="180" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="184" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="188" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="192" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="196" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="200" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="201" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="205" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="206" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="207" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="208" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="212" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="216" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="220" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="224" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="228" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="232" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="236" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="240" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="244" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="248" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="252" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="256" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="260" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="264" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="268" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="272" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="276" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="280" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="284" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="288" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="292" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="296" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="300" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="304" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="308" Vartype="Unicode String" Bytesize="68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="376" Vartype="Unicode String" Bytesize="34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="410" Vartype="Unicode String" Bytesize="17" DisplayMethod="Unsigned Integer"/>
        <Element Offset="427" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="428" Vartype="Unicode String" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="436" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="440" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="444" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="448" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="452" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="456" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="460" Vartype="Unicode String" Bytesize="68" DisplayMethod="Unsigned Integer"/>
        <Element Offset="528" Vartype="Unicode String" Bytesize="34" DisplayMethod="Unsigned Integer"/>
        <Element Offset="562" Vartype="Unicode String" Bytesize="17" DisplayMethod="Unsigned Integer"/>
        <Element Offset="579" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="580" Vartype="Unicode String" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="588" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="592" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="596" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="600" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="604" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="608" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="612" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="616" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="620" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="624" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="628" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="632" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="636" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="640" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="644" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="648" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="652" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="656" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="657" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="661" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="662" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="663" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="664" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="668" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="672" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="676" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="680" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="684" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="688" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="692" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="696" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="700" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="704" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="708" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="712" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="716" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="720" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="724" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="728" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="732" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="736" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="740" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="744" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="748" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="752" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="756" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="760" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="764" Vartype="Unicode String" Bytesize="50" DisplayMethod="Unsigned Integer"/>
        <Element Offset="814" Vartype="Unicode String" Bytesize="25" DisplayMethod="Unsigned Integer"/>
        <Element Offset="839" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="841" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="842" Vartype="Unicode String" Bytesize="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="853" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="854" Vartype="Unicode String" Bytesize="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="859" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="860" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="864" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="868" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="872" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="876" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="880" Vartype="Unicode String" Bytesize="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="892" Vartype="Unicode String" Bytesize="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="898" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="899" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="900" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="904" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="908" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="912" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="916" Vartype="Unicode String" Bytesize="26" DisplayMethod="Unsigned Integer"/>
        <Element Offset="942" Vartype="Unicode String" Bytesize="13" DisplayMethod="Unsigned Integer"/>
        <Element Offset="955" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="956" Vartype="Unicode String" Bytesize="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="962" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="963" Vartype="2 Bytes" Bytesize="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="965" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="966" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="967" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="968" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="972" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="976" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="980" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="984" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="988" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="992" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="996" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1000" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1004" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1008" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1012" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1016" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1020" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="unnamed structure" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="1" DoNotSaveLocal="1" AutoCreateStructsize="512">
      <Elements/>
    </Structure>
    <Structure Name="Tile" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="1" DoNotSaveLocal="1" AutoCreateStructsize="512">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4" Vartype="4 Bytes" Bytesize="4" Description="Level?" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" Description="Team: 0 == player" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12" Vartype="Byte" Bytesize="1" Description="Flag: 1 == controlled" DisplayMethod="Hexadecimal"/>
        <Element Offset="13" Vartype="Byte" Bytesize="1" DisplayMethod="Hexadecimal"/>
        <Element Offset="14" Vartype="Byte" Bytesize="1" DisplayMethod="Hexadecimal"/>
        <Element Offset="15" Vartype="Byte" Bytesize="1" DisplayMethod="Hexadecimal"/>
        <Element Offset="16" Vartype="4 Bytes" Bytesize="4" Description="Tile ID" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="28" Vartype="4 Bytes" Bytesize="4" Description="Total Men?" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="4 Bytes" Bytesize="4" Description="Moveable Men?" DisplayMethod="Unsigned Integer"/>
        <Element Offset="36" Vartype="4 Bytes" Bytesize="4" Description="Barracks Built This Turn" DisplayMethod="Unsigned Integer"/>
        <Element Offset="40" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="44" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="52" Vartype="Pointer" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="Pointer" Bytesize="4" ChildStruct="Barracks" Description="Barracks" DisplayMethod="Unsigned Integer"/>
        <Element Offset="60" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="64" Vartype="Pointer" Bytesize="4" ChildStruct="Cannon" Description="Cannon" DisplayMethod="Unsigned Integer"/>
        <Element Offset="68" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="72" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="76" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
      </Elements>
    </Structure>
    <Structure Name="Barracks" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="1" DoNotSaveLocal="1" AutoCreateStructsize="512">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4" Vartype="4 Bytes" Bytesize="4" Description="Barracks Built == 1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
      </Elements>
    </Structure>
    <Structure Name="Cannon" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="1" DoNotSaveLocal="1" AutoCreateStructsize="512">
      <Elements>
        <Element Offset="0" Vartype="Byte" Bytesize="1" Description="Built?  1== yes" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3" Vartype="Byte" Bytesize="1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4" Vartype="4 Bytes" Bytesize="4" Description="Ammo1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" Description="Ready Ammo" DisplayMethod="Unsigned Integer"/>
        <Element Offset="12" Vartype="4 Bytes" Bytesize="4" Description="Preparing Ammo" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
      </Elements>
    </Structure>
  </Structures>
</CheatTable>
