<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <Files>
    <MRAA.lua Encoding="Ascii85">=LB^U,qkj*H/])IVCC}rj3Gu,l51Wrbe]j,cbT4)yx9FUIweDil,6:GG9*G2(+Oa9[etLF.s+hcvXkp_rqiB#u{NaFSS%L1i@T%^zv6eli{HJS2ZN+cFXKhHPV3^iu9NK437poaymYQkE^izW*CcQ2Kd7pBHB002yW?G86m=LC?aE6,Y#!GAD_hnh(B2QwUrk-,PF{t}:Fiux[fyvMuJ7Ib$],67625%L^^(aZ$@XW_?EY+kyPM_oFm*E_Y,fgM/@aU1U(ZNyMM;%1yX!c}!hy#isLOTi*Ms)#lySW-GY6rbuEKhL*@_VbR];h/!28CfI(oUXvfd)um,cj=7F6!2m=i10=U@-oNGHysdw1zqtCLk,?ID@DddK36x)o;ghbmdc5+D%/?bv1M!G9z8-)VzoQ3FT(P_phjH)Re{ap?A3SnN0pV0sda7{1*;S;MApoG5q7$!Kq/oCZ]/t!Mp(C3^dd7/rsjtPc2z9481I#cy8J.NB?YzGNC*RWzdh=6Qvg[:PC-t]$P^AUIPJtN2GGEHL]RvAIr_MN_q6g8U(YX9v-}NU^hku!NX*ewL*M6Mm-Q!s$S+iOx3SB*S^_bsmSQ5T:=6tXK=/h[VD4n;l.Vh])-cU35jX:V-[hDZIo]ou7(qs/wD%l?b^IpAwgOye@]C(I.!HzBd;,XTYFKZO-Hl0EBf6kj{b[OLz[,oUW638djAqH-,})aA}Hy1{V8D1.:;FHcpZ]MVOQo*KE.7NH#cB8WJfVTzrc-UIHKT$#ROSi5KBpz$t*Ytv-%4=.aMgjfZ1y0LuPsf!*Z}sR@=fTK?(8a3UK;H-.#SKfnwa;UduF-5r/4B=yMyJQeS96cJX9vl[#sI)pyFJqb+7:WU^M^{9LYO{L7o=Bpn3/;lr3c%GM$ODHvj2S0v2!h/L)/El!Ns(.J;VRnu_/Mb.{7pcltL]n)D^sa2BtoseLnC7e{FgoW,edc7m3A7wZR.:r%J;Rc$^sro38Zuw9c}+mv74Vk!;zp@w6k%Cj1CSCW07khth}#5xVM[BbVy;Xy[5I3Ik]L(RT=!v]Lo(vk1r_z#-6B7}l++;RZ1k/6g?oX;NtH-R=g16F3F?+fg.iXG7[Leoq;_xbd0IKaRTfwxkH4-)Z%BYwrAKXG1wY##3eNCua9mMbhoGs@wwWf2+HPL:;65U.u45[K7g=qh8kBBPM[tMcq0xA8B4}0qCQ7qbf-f4=KmxDizl/yLn1ElVUW^xL7I6y/Y^0iwsaF,[MC2JXgT}TeoG;lp5Hvl)G9Wy2YiADH_5RzHHc/hMtknzjX+lFt0.*bM[eSx^1ZX-eK0G{_v+vyW7MZ!8c-x2Psd^@c-lFT;(@r2qP1D%lRe0(l);N?h96psOg5+7#Qm^eOD*f)r%G2awqfZ)90fuw.v-zY_1%!%G[Q;OdO{WsF(S$E)mHd3MfF8)RJh$c5M5YT2ABsB}?d79=;j*T4YAph[esv1}QFxfIK?WUYXBr]GaYb^MThuf=L3(8Wi!$EC(@(yM;+u$Qv[_o51FnH}jJw_T8-]!/3?FXwm{@o8Rz?2zV:xn+cXL!SQ_Vrl99s;WrTfmX!]B]%6KXKh*MJ_h)2pI^]gYDjJx;Q$ywyKy;.-s0wJ{R:j3$FEk##z=u7zZaBy(FsY!nCf/ag:lfSb*fsXC(B7J[Y=m(NB]xyn4R1xDNWp_LuRYazrxf?^;+ilO=dL/5!jbI^gxtovjfkXuy)w40EI6PxFzfFtz7q5wiq?;f{1Uh-no$]e=-H;c8qw;yN,cmc]:TrufZfxTwxg(O(ij[cN5[xM)(wuBZ[V4HUc;[SpCUcI/^^Sqs5/1p1E%{rd2L7UD?7*Z1ly7eTlvW(s?+L4g^[R-.rFTy$e^/IF$q]vet@_(gzxwidyC7#e@yejHT9j9/u!{L77tfZX:hj,b-k$PAIlx1ED0R^eYj;-WyzT,RRN6CXq)MiK@ia/=JP(:T1--wO9NXHVNYdT$Jh!BHlZjuZ{*25IVdzY7D4_HkH/yI_PB!di(7_zCyy0T]63P7a]^8#_#5p)Lesu4e+S{625.xw_tk)B/z@XFTP=N.{(nMiW{U,Hets:T(mYnP^;hk49d[}P/iSc8iPI6,+[Y-Gw2=xvL-NDcx,Dv],e){QnZ=rC;L-GtU]^O5]S6NMs0xN8p^=197f!1d?=6HM8mI;K$G:L!EbZDt5K)L7;U!W7/cN4!#zq@*;Hx1nH7IEvE]tJ6BZ0Ns.B7fijd]ML!2xJ5guhMNHgcs2JVDW1Ln88co;n:UAKYdsJ,11Ve?0RqRMFGvQXj+/YdbVz!eq-5Ik)6jtePRwVeAdGecPCNJq]cwmW#-pFQ4+SPu+B8w#(QYDhy%AF,8v01W,]tKD%ecoqGnlp:h.(7SOJ.$tga6yw7P77pAUfM;[U1,f9tkW4rNPQQmD@NF8J]^.@yjOH!M{x,?K6ikW1.W(]d+I:Ls!wstK$/aCh1sbfD.IaOJgJ8Fkh]eu(_1!MJce:(w4EU:Bk^@=yjuDW(8$2E^@^6mwwGK=xshQx*/[X3oNAyTMFH@;rZz5De5mD[1CU1mz[fOET!IA!ayu/)p/_+3xIdj9@F]%S;bbDwH,4alf7:m)wD6n!TXEABF,P=m;xP7E+niiA+7]*/PA?u+}xNhM{7I%.Oe?_7E8s%fx6}RCxyslMdKC/5k{K}TY^@$+hK49aWYFmVyZaKSh]@[f$CKr#lpLeGigQfS=ese4V{zO0y1T-ffB](diuGw:fhb/*?UOeNjG_(4%-,aj(!3L-BJa)1nNM{b]Ahd@VJyco_GWhuH)4SHLo*WUpGN]vFKnJkXkmr]@GcX@AbsvJ}O%mp!An(@J=.OH:M$,@C_9L8PbZZbSJJBdR:/H=?ryeIr?UlfRa^masW4S0Kpm/Ln!ACfLoIXS1h:/Qj{BNq4fO;h)X?_lp(4y1uDU{:H0z@mCzcNdJ85ET*B2yJ*?(}bWir,v$ivdqvG}{641KvSD!WAts]hxcvvoG@-bBLWG.h#cI,O6.qms!Et8),6@3is*pgez(Wy$GP^h^]#iC5ANNlr#I^6Sx[q=F+-^.${a=@+eHJ7Xhm3q3U8bO=^h:pM(gxf5w#a17j(;bASjA!dpeYcpCA!Sft%fvrgpLiD6RTNxB7}1@*Xe^$9R=Vd=t3Xb.Qo#*sFueR[-m!!2l7tKf.E9tj:9.dr2z{FTF:5x.,x:kFvXZpSSk+kbi9ley82uejb@E5TBtG.eA9}aKJyZl;-moa3ax{AJHW,L6jkmHY17m?M(;,pQgb*rA[;f_IgF8C7CkYNExNzXZ?n}9}yGx$AxHW}5ugYs9Vl3C_dMQyl0z)Y@zVE7FW{4?PgA-JbL2,SlFF]NWxs$AlG,xCS2%4,eSK7*qe+hn;X[HM7t(sy3R(DyNvm%?=$(,Mb($9wvw,OHj3oa5F4o8XZI_dQJZ%Z,VI:jRz/,#j%koaOAlhgToR_u(XqOcG#=yJeeF/5%U^@u.21K{bG!!:Sf82^r[X2$sOWBD%Xkmxc!xH:MV^xBF]%-La^:CB}Uc:BWjKQ5#F^V![hE0Mm-VF2UuCalA*I2FdlqQQuJopS/pWi*$l(IJ0G:eV/}.AUYJYhX^/FQEd[U9-uzkN*Z7GJ5pez/lk%T,2DMsc{.r+Bw[?%2Y5KF,o8vhNl.oHKN[rf5k6Y[CHkiP=Q}%Wq27pfw%9:d_ku/@9Wv!fuuAJ?X-^3KOpve4NV1*ne0RGEj%8st2$o:Bf@_yVR.$,7d%SdkH)66S{;uhCug#8B{K1D+Domr27K}h$u$s{e?4(:2VZhXQEMXqE}l!FWfk*+_5YrbX%W$-kd7Fd9%$u^Nt^O2%dig7*iw9xRcH=@d}XH7u-ZVzIo#?yX}Mn!UfbTXC8k5f6+FvUV{cv:JJw89XC:!3@S:,LG7ux(Bdn;[@Zr%sw6fF*-x;aQU2DU!WxIc:-Tnfr^gpQRc8hJAXztSrI-Y@oPU8mL,.:@huhnq:v?9xix^NQ]EUDoMd(^75UMBS:/4F^8#1/sND$TD3(pNJOSKmH+k/?*2-u=CwPLYRW:DLhS.hff}:^W/ZC,LZ[gcb3jS?Q*uQ*^iq:?Njrp0uj.v5u$GDowwhSEkmP+_.eL7Si3;vwcAZ4v@%9lhpC5vNAt[Wx%$*YL-y(iXXaY1uFZ9,_$xPwW+2ov5bA6(^-:KF=oB:XXs0zY8GPR7pjqGh/pDV3@.w*w4fGE1x=IJ0jr}Fkm!p**lHzHy@wCPsPAbkl5,EFv8eC.Gg-9Tr=gn[MkZ-9TXM@A;m_EHVdtK/g260K?r._!g%JmHEL.Gfpl^oZR+W_Xtu/]jYOE@ad4iE1oF-0u;O15HJiv^L2S0=;+-:/LN5H=oIzg;Ai:Ed.=_yuB@y/yYtC!_5SA^SsdXr/!w0*Z9:W+HBSJV/Xa6?d,ZN+bahk=tpE+uVFC^Y6g/pJJ:fB-x?dRfo2nvqY2]5$}OGC?@1ow(-YbEixexzdGmtq;.QX],Y))G?PxhtKMP/DLPlZ_njB03nts!Oh-g;sG6?(X!qzo+Co(*QFb{W$3kb8o?x*^tL(/oS)rdLDO5]7:RKYP_ln2Z%/ruP_CU5$TMTi0+oIPF#D58/.[FPO_ftzu?LYd+J17d3121,^8V3!H:i3iF-+k6@{pwVdg=!VkYI8trDh*1v5rL}crGfjCu2BzeS:g?P7vOX4oF/eJH4pO^+rB2(E{q(x{vg5Ls(oXe0*{2u7CvEJww_I_J5*b5,3=/1M+zm9oIyJBFmxL+*xu8K.=0Y:r0TtC^NZbUUvWHvW=GkuPjQ/faX]BMXX0{-?JADb8uUp^x@v1#;cVn;@7P$0drfR$%O6do!I6OiVB?;oZ2V)U(8W*.-?{-tM#NkD=Le6m1[)[HML/eWJrKrG(IF93Tj#8Zh[@^iY)L=$e?oWe{DJt/MGM,+KfYxTGNr_By9C(tmNEjSKY2byb-7DM;jS-6XUifWCMnb@!bu}w+s.29G?,XaQBrm][*cndsu6fF(tJOapQ_n37AIeeCMd-QMD/t;rd}yOwQZ;c=Ug%f!qe10G4M8$1a^%,IPLKzDrXowB?/JX:wh*FmN(1sfuYQHw.y(Pk-tlcZPZ(UMBNe=z)by,i/{XsaW+f$zPFqoM(_vZerSQ6DDT%9$XkOh7sR.:.)ypz5,GIwVE}Lz1]{.Znawh:u;C6VlSbUV]wFSrG#wJ[j=SAcB;v:pCYa$BZ4)e:^d_/UfUG3I?BeR!lKU4.yJ_{0NqoU8M_7_Gq(h.upO.j#wsns!Pm!xI_C6LI4.xA5p;XIelQ{nVq8y!QrRKJFW/T{OKbBEjFVq@hSzJE9kETu*i+E![d1vh*3MXu-KK},y_DPinW:e8cWf^T!*I@17#6YUT.tzqfHby%[?K6Ga@7147p;DGP0-#*(q3mx-M]]Qo;({9d(ibI#(/e_;CP^0Skyq5OKTXVzTLQ%3//WkMamaRPN(:izf5kDUm!Qhf1:zVcSrw5!eg(UjZl:)o5+0$m(E8M=nAGgDJaSl(dUhaj2EqCTR^.3zUZA=Odd[m*mULf]-TiY7(ME5i@+upB[3VnF(]O}DRMCxtF7bRi#-ezh)k/PxB1q0m6vs(!fDDMXijNrlObdo]Zc@}VY[[BvY9HMS+r(,=wZfc(}f,-YIOB451-^TjbN]a7QC?[5zzvd!9(W@%ZBXgx,Ar{E2(=M6,bv{c$TCQOyiE6To.3LeJzv2bG]QRPKo5gV=AeoA12Ngv=fm$(9YksP!=MvF$m6GL4.?;8_FWfDbO$ZxHoEnAiDsI6F6.]axl.,;4Z;JK(gRSPbXJE-3O;UaXEX/](Uj]Z5fVYyd}9)bY=PzDc2nbGc}gA0=8x]iQ)bYyNM)-tmooTfC]Z#LIN{ig2{zRIH;C2^Jpy)+1W(JuVr$]YC$m695oeR,uxDO#AE6sQy/Bx@r$6$p97aVsTQbi+,q#-bMuzW9k?n?$?cTilBC.fH?@l0.J/$MQ0qC)k(Zr[+0U]HcW#z}JKbW=w#jxXiXjMhx}!lTF8g)8*H#B:3Suq.#gtz6;v!OewKt;oLr!szwR,k!45Kz9RWMFFB{Bh=rmc)dfK{/Tj?=XB@%6^gn8mV=zLxx4b[ZDNMu@RL+^?adAB^py+]_{*,*a;*VS.A.aP}nI?uQmkyr=UdWadF[^HSLIlC^H,f$M4,RQRQd:1)Y@Kb2X6REl/V8/4S_3iIGJ$v{%RI=#/3v7fm5CJON!smJ6epqGEquEHSymYYt,7lpOC=IEt_^*M:n2C7tS1891HY70uVI{PX/c2kSWX^$gt3VIU=/fas!2}S6CviG2Xx,jt.Tch[fPX9AUPi]r5uIl5reF+GP^*a{v9ETsm;fdG?eg(!54o,@+QYBB!xaww)]8.nI3(tNXt9W:ZpFbKt8Zw#Xqu,3XAt3TfkKXs8N+Web%/D=-)}EI0jr@oMLE,^pNbTky397oHyM)-+(t2{ItS7pm@/7fQ3.E,]t$_z4P_8)6n6[2^GJAs]D%CBAl6E=-$WOPcBqw;QSkH9_@mX81AW!lOnOo(QBvDLkFXPN?:U)CpMevd^0^({#gi+%t@xWzGOHAnf,vl9,xngzafMLg*66Q]!YNxI?7{y]#DnCfm^QM{**=s:mhUFlOUR?Nx9Vq4^^8g4uU5lDSd)d?9M-6t%k;NF_Fj7*@r,cknMMG@CG^*dI7C7y%H{,/,xOv-qOG2u4F%gPs%YWgAvTK%m=Kl;;,Fj:b/jp4:@I963uyu2t4=ePuN87Tsy0e4,Nd?F,xv$M3%yrVQSW*H$n/H}X-hxQcQAbAXynZ!3jK%dgeDhMfQ_VM/g$8hv1DZeP/w^)#LMQ6+z297EbZR(C?%xF)A.C[aPVurO@p-hdx/Bojqo,q_*PKXbQ+NRCgF+b^1O9ahJI7#H2i{{iKXVZr02d#-#Xll1MWU1{XCwB:*32Z5qjgFYdz$o_TDIZO++n04eIU!s)bA%Uo)zM0c$Vi=,)+G,;hRmbjzg%3Xbk#0TBw,*iWzx:6vX4;R{r{BxZH:MXy5NcAsK/,oFw{FM%aLLh=hql41{yF403gruYvWmnDc[+CDeeZHEuy7=09fwVPqUEJQ0K9d]S3ZK_2U7k9yFjz*-%?xcB8+2x2lwoD04I9j32y5C-JG;lybc$Q/+Fj4fb;+Nlg[us-HHHXfg$2Z)r71),Oj7NVYZ:4qY?MOdrTV5+%aWCM+?$GYfSI}l{YJyABo75:=8Mol-tJ9X:dGrAJP9L62_wvU{Q8l);aFKuUbB[a=?l:w+(#TNjav]A6y]k8%C2z,v$IjUXCkW5wy)4167iWj!z;3WrkoDe_^RO%Qp3}K+1iRv=l[LwiSXMyvW8W{wv=mZsfr]o]kN9dgCwSI[]):!{p6eOtigla+h?#Fi6xKL^Rc(IlPMoGyc[:TsOs[3Aa12uH+7rbHIQM]8EOM#WOkP?OXWjq48aa!Ki0[P}IDwoUc15)KB$[VWphWvcL%XJISAy,?dpFnYn?ty_[6HM=!FwAus0]XOFb)Cbh]gk}G?FME_.qkRu:;;)MkL${c4%{IVo+Ky,dzV*Ur;*3:Maw!b4rAK-XUAvx]RnW=td:jr5_#b_T^)f(8?S)Qhbi/bP@xdSviE=5mWWUk7b]#A[@/1D@%^lKf/y[9F7_[A[lA,!.OCfBgug*v3ySDs;I.T?7Ns.?]+f[IGzUISg%ZN(Yn$%Qq:pXlbui0I;qO6%BnBZx9q9_u2@fI7%rE.k8WJ,:YMVx#(ci;Jv55]Z*yMyuUD53(AW[]bf+Gj8vNq}mx#?.d1@/%7:e7jn(q11.W(t=4X#x[$5R41drg_S2zyS6;4x[hOddbg-9M4PeO:n=Q1yzNo8D4.rXZS!O])s$uhone2c(oi+KuPNj5WSQ5q6UeCFE5iaCNT=Wy5lE-Wz/ITK0iOEK%i]+1?Sg{Il}@2cc3J:%A(F;PXoXE==Ui-;!)8O]*xRj]]QSko9,AuAQQwE9zEmX,8$36+ic-ct,8)loFj+g:2n_RsDaIeAlL8Qf%n5Gl6}ageH[9HG;9R]IB@4O,6s83^;U1,R[RfA!7W4p]n/[SMEf*uPPJT2c/a1w%4$Waa8bdt,Y;4i,Iu]}:RR*3mV5}w%f@cQ9{v.kq[D@rq+pS[xJ]++,P-6LZaRt,1*!k=9)5/0ywhkRuuq?O*T5xm)_wMS=sGJkb8*F4(8ZLcM*qG%0csoyPaJfR,FSH/LpfK,;*GojZ5()w8Co{[Oi?6w3dB44S;Nk]=[Ei@*rM$nwoSs,@STdS3sA}[b#Fez,YHn;4)B1ph2n[K:W}@fX=PjnK$5b@E1w=Cdt-3Y.Mcx)xeW%sNbk![RGdBM,o7^BA/:JCX@+g!na5Ri1pmU+xKdM)$QkYR?nP2*4e7]6WSj-KHbi$?FE]S[M7xifXtZ(4@lodPWd)2rMHQ]ZvGB{GD6o$?BE7HU1[gJd7hShi/Y}put2O1oE)9D1XY)YL7aQug/v[KreXk+g?,u=HrQ#x?75cMB7+MilGFuxy/}_QrU[c5%HakVQJmdru#)hVE+zp=mowvPhb4d]XGgDWz9rsqq^EXAMM*#9C-RIuxU=A4BS6A-bWsgQ9Fhy=YvWE{H[%y=);,44CpmUVeD@{C}E=ZTnB5hC/.BpK9jHjN_F+g!mUG_!yeE0DeND[/E6#f^_Zc*=/c#H3)7AP)wKZw8bSb]Q2:gVW;gpH1W:57[or?rt98:vqznK)SfV//fEnW[+g@#2^7zx1s#..z,{uxr6k(6+b,;_X47^-8hE4L=rxlQW]566x-5)d4rftxVhA=(HXL.Osv7TaQ6K^O8H#FJG#ThJ*k+Dhz,f3QRlCuGO;[%q8j0BufODa-?vOOv-#T4aDEU+eDo[g7MV%-TSUKj_KNlg*bIfP:tXH:/QJ,ty55nO)%34vqO,)[L?Kq[Jx8[Ru[bDbgVV)evCSbA5H@}z*lgBOG]OED+Gtfb3Hrxoo?L0s!J:*SWsmy8[=@*QFUp;2TNbz75oN5.WsAIx-]1A:7*(Xm70gCG(i[I7x49(ZdlrSLC#Ms#X2H%,Oe0c:[jcg-0IA}zw5@rusEfSap2fs!2U?zb#07Sl:?!uE4G2Pi,:BBj?.4X6zZTy3NvkK%,XB}-ceT.34:[25{:-FB}wnIDq2prTzu1c?41./Pp3INW4}!+UuY=-YL]+-=%^9o_3YABzKUU}ypnnM1L(snkJCNRW!QP?]kZkT@8x)jR,;9NbJ}QF6Y}o(b;gyaOzF7n3#0]Xut*Fvi!uihiB_/,j9Gkv%hTh[*hti7?m#6P?WgRttYzL;DsBU1:1tnHgW/UCu]Y3CC}sP3?:D%q-^l8s_5l}kP%}=@!p:1(!)Yl%yn2Z_0B55xZgS$mTD/4]HAwm=rYAzRz2U^(kl?+R5q85pG2m7m[?Ju5rym?*Ez;x1:pUFSB#I#;hIKs@xe/{;%s7@ZZ}H@mdz0f+0gPe6kE;KY(pZ[kz8$MU2uL9cR:DW*xYt)nRfx*sw,rGLO2Bm]*v+O#RwO}p3yaW?lbql8o=37AVQ1qSBfQ6Gqgf2-5vC--A3F5b6ks;81pkr(+szb@PZrbbn^Jwy^h{eXS7,jgmp!ha9s0;(/lTP,Ps5ARP)KNZb?uTiE;60P]6ndJmID{nI%^z*uG!t59F57*0-C0]+Kz}Kj96f}0is8!cZ7B*e+KKLoqh7!ptSN8Amgc#-_IM@kkOy$zUi+i$b?}GKyi0gBwA:3CanEw])5yuRt/w{WmThb5A3^N,*m3:zWG2Aj^t:vnRZ_]t@Qbk^6f25ugv=D@..i%r*fS5Q]{;j[j_stt6V)Q@ThipYkhW}^++/Z?J2FjtUX6[6=A98T/%yZpAI=yrt@PIolhu%CBNzZ-+o=Py8k!b_1YWgQ8;lfXBZ:S+E?VX7CX8O=-b,L!JE0S1!$J0N?z3yfBqi</MRAA.lua>
    <monojunk160117.lua Encoding="Ascii85">/vnY2,sKjkRjJB/K/FqSRzpVgCVLmzkgb*x8)-{8+4nAsDw/Y-ASl5i00sbQDL)1f-VeEc%p0JrO*mH4[92loJv{]:^hFSK^];CV^[WSl.)zmHaDIN4E%P#4y#DD]b#WKB@)G72%d8AWqhLW+!F+MvR_p==.6WT9JXZlwvI/VtNqQAvMKWJyWBOLrf%=7Nlxdq,/#0S6M_IY2;N5CT#!a?$)smd:3I$f,kK3$V7[?(a34:nrDHTHgWB_^yRdSOpPLtK?TW/0B+3[PE;N,di+FW,2Rk5Nfs5j.7n-lu^W1S6*S[EbGscDloix5087!b2vf6MiZaGf9!fE4xkNBYdQz.Fd0#LT:PDHjs^E-v$x@=iJnHEEr%k)^F/Y17N$.KTlO]eA:I8_{^qkqvuVZOZm_LUYHRDPoE(Ux+?WZ]K)R@zux:(v*;3G!hqCd$L(6S/{4An_2tfra-A_5@vj,O/SEbO.!N!;s/skoB8mucpTlu.cr5cAcZSXs78PK*1P!H%rDAVcAc(@i!5M70m8ZDCt=na=CB8XaN#hd]6?mh+dv%TM^Sk[J)(8?/9H?w9+xJqEvv$!UwvGHAm.I+u%{]*2@N+/mB+4@:BtJ7Zko;w0FX/yFg=LtOp]^OR/ppBIBVW]0@lNJZ!eQJNAwDj4FmwIS0Hya3]%QZBtcQ,w.,/iGFdel4lOcmt%2%}?]IzJy.?X)P*Rj.3t{(VW_O8[w#ZZu,.*+b:br9PNmgfUh@Qt:QZoa/Fyzc_kwkGEl3fTL+6@%6S_nm3dS];MiY4@S/@?o{lvpFD=?$dw/V,OxyToqQm[wQ=rU$V]px$A+Ddt%ncIL{Wg]?!VQ78ua^CUU;@vpq873-:2D#b,/NJG1fwSl=VWsH{?3.G)7eroJh]8q3p%2Ke3FRrt61NIB$Om?/)H6qqyLlp.IYwNO.49I:v+l/EpZr4iAL;{:VjEedm.!SOb]hL.v8wViy!ayvIAX.s[y9VX.=,)w+xt6OEWC}{_R/TyBanyAN5byE:pdvxudT1cq?yin0Zvh.nUX^Hm2[DUZ.!9gZZGl#=t+aX[Bg;(wp+1MmdR#[PM=f^1.BvGV9ctk.j/wrjRb7y6U:Av,aYhG;l5SNgv*2vC]^!G4.vTNTx}izL(8ErfMbait1sJPnht[{D$Psx8d/RSn7!)MYrpW::wpq+{m(cTy%m,z*Q?(M#qzw;=06LOj8RSi1i?z@MYtQ-.t9A=/1/n[-3;:IegzO#RCW5}*ye,/3C.G+{qII[o1#*#@Y:T@4Vwc$7m+GC68^Na#=}.7Ask8r:T*q2W/ErNAS%([83t9}t42p+@7=.+EUa:/96xu-yHqeIj+T3?dpV-*=;bUqBQ;O#![RIK{Kjv%lz$@$7^Y9+UQtg/?+#.Im+_f)(UksP+prMJJPQTyNn^/[)R.#Mk5,XzCM5L*BJ%Wu6he^LiC]lkr)qfoUJmiUCkfvyQ)i9C6L6{g%(}N0(k?GZPT#FP+E2}c:pTJilm7z2tK(J]VFg8x1BZz]kQ;Fy40g@n{53s;OFbU?1-;y1QQV@)a(.[PbY(gSW(*G@T#B#{0xk}X?!gBR_a(o?fBtKE{+jj7,]d3W6S]AuD+LzpQ!7o?6Z?#o7Mo=5-0HI(#V+av9nkN2yD[{WS.P11lNb*isO}enN#[^LBmU).gqP(37V(OED;%N:O;D$YsUWYTUm;RsL#SzurTFdRMu3uMW@,VPElqHKBAS5i^dr)#[j1*?3p2#(T+6qzZ9MiCkNFc7nd61V72VJ,KMfq%{S2N-@(W;bRyJIo)=sQd@h;FW]?Dl0PMcN=Jt(OrVcK#Z/c-/N_ecg]F-?ShE]pqd-:r0.T69AQMkrfpf0%bXIjmCC9?=wkyA}-}e12)k}byb?dg*iBxT3e5nsYp;4ozACA8Aph!8K+3(+u.eZ]/OanuO$$y!zxQ@,q[eOPF1,Z9jcR/7Dud(emB5qbW3jeG_?9;xrx+tN6#Xg2M*Rq6BpCyAb@FYfYBm(aePRO,=r$xnv3ILJDtp!(aI$ESTB=i0mCJ=EnM5c8lJy,1m?8}9;?qJHDG]ifmmZ04wIckk.5x!Fnv5Dityvtv%cg,pr]{f043o6]/H:w7OerZ0T@z?+J29{7iB]PVEY#C;pI+1]0?/8Jal6kR8dr5*/)yWS64!EfQI]jfku{Idj=?KSXwk+Rc,#JRQZa]6EtH{sXiY%zEBH=vvvW}oh*QB(#nM#R$!V9IzG:pk*(D5vu0?eMj+qTNBH(luqRc3^txkWGX*8Df@_.HhU.:o0IWD)7Rg2SU0o=cZiYz[]7KJ[B1dp,cU}q%Hq32UwAo]c*6:pbbxMjjDMVhxc[GRoE^j[OJQ{U+yljVMA.MsE9E8Hc/z:dDb4s0^/#z?RJTtw6RqPd1-BcQ5OHM*SJrrZ$)p}Jdxfh{ISypo!lEnd_5dMVVR{V.,Xo-.RKnl/kv-sb_Fb^9mS)z//tgAF?nwMw8$R/,#R=H6TtjXHEya*{ejq?V/$:@n/3A?5FH9!KeX9t7;CTE?Gbu-i*iC{t0BNR{n3HEHM@dE[pWX%pSb!5t6stnH;S29thPLV;.C(XZhr-^?WhZ;CvZF/?OCE$vzF/KC%;WlzT4Zho}RzIL7q-o?2%m_OFMZ{Kez;E?8r*jyvs:6?a1nof}p{[V#_M29dr3jyg!fpdv7r97n3yLzRfPE.gKqx;n9+4gP$72A4CNez1s.IwJ:^ESBrg55z1Py;l%Q!7;]]a/NqnKu.+gxj+bycI6Ps-ryKv{ThGTDNR2MuzbW-35q[3T.b5$w2hcS,i%;kGqhaP_8:/F*$q*)iiob8%I!yNU.O:74xu^*?dGgvPKu@8#d.:wq1ZwrX0KkBcERh^WTl;kl2D#{wNR(-Ql8*p46Cg]FjC)%50:qk?8jr!jn;kO^v(0:Gi{T*{c:xM^ku@-L4h:++jBX5nlr@:YVb7u=]3X5F.Q5V/QBXqM]B:tn8SV]{up*VZF1r2Z@xll0PJ/_3PKF3!]W^1%s%5arpFo1n$yVQ]FqXbmg*zM-nR?j[*!H3Mah=M;C^hPGKd0UUlBja2aQpLzSTTvkJGRNrSU@5b;ZUgB0CTDGDTO?2]dz;,_bn?I(YV7ArDYT-a*Q[zbB*,RVR0BPh7zsXRXO=+_X@Hp_@//),^zudqS/21n6/ycPH5v:P=,%YL1@VW+O6eFy$NlXCO=.s=fp=.iJi_o8/le#?HU-Q3b^RYXga,);}@Dep5oiVf)j$1jLBDu/t.lqNJrzpnw*!WZ58qt!::2{0SQ/zv+!pADfTwo_mjgD5.C*@A.y1+UJaQZ;a4nmUv^1g:!Xce;gleI618KP#2r5$c@ITHFAqSf2mZi13(]5Q)n1gpybh8[Klnqte^3zh{AOw9;vG0#y],eCWU80+n8ZX%6fGu77hDw?TgKjXR)*?3f8c0l$KIC/rSIC5ig,uc[+xtaWLn:Ce3YZ[kS#B9A+L=}!a(TChg8l;tYaCbYsl%Ma7RtCodk(BPwQkceK5D$cD-w7_6NR::3YblX-zk[$b!U+KB][$A5f3q8kQ{rx;+BjYh=[/;046{uwX;gBc*+x;=Y:kL;E[N)hNc1JZXTW+e7aa9Pcqpy1p${lh[EU#nqfx$e3pra=XGOKmV2Peb9!t4{V^1kul0)a$a7nH.WHeHg;q/{wJ3Y,=LZ;w=OOsw@;D5}[H58vgkZUZxv;JtqZN},z98^vb/I3eygR-(^t$}Qnjz_jcm/pjH]uZl#w{fiZGo88];DT}=FY?$@mE_hxYAi(x,M.xpI9tjOHaO2sGmBYH$534*pn5@D_9BDXHv:V;LW+hRX$beu0,3c@3XOr@.rlX-]ZxP:n6tiI7.[kT1=HgGG[7k_Q=U?{7RbEogG0=%!}Mlq)e)HGqhR)7K9BV0:=DC/znFc,pJt.7z/:u:ra8kv$UjU(L$V=RtI+{r?p15Uzp.J^gx2@pGM@XL:O(6Gg_vqYY8@h991$^!N20+iMv,hqB]d-YJna3(K@W/=Zbh.{y)xk.X*-{l7eG+vm*m5OTQfqujl*pTe-2gZ3$1+QR#]cWWC*Zxp$.d27Y?Y2gP]eiAR6VUHKcI^k]Ip]#D{!I0fnhhoJ3rJ?Y3Wrp+tqzpE+8}I[gZSHci3gPW-T+/kUc+(7REc+a]98[2FIg#c9%mVA@^yfEBTH9SheIeB^]NJH5J@c{BpP8;_E$0.)!Sqlx-52hJd5lZodBI[]4U3f2/acQ4,*d-:ongT6!@5DEQSGsO$W!D(+4Z9vop,4Xvrr!A;?0]r)10Z-(K5,i@$5Vt;$dO{bq5QUx$/8io8W1Lrx-XTz2T,ha_EMUn*b?8-(_M6iH=ElBlWCm3eOcMyZz5b#N2GOIVU.e+u.nH1#,=SkAI}g^Ul%Y*xDDlNhC-tZ^bT;iR[4RotRp(Vmvy@JwBo^8(U)+@0*RfvfsV*/]Q]5fKQm*Sk0AqMwQT4zfNhPPtG%!zz!64,Kf,%E6xPW?AB#IYmx1Rc[K}D:pxI5PJ0V%Y/y,2DNBc!}f*xD2F6wxot6In5gK}}P3.A6L}ablSV#xs@=nc#}0[GGv-0v*Xxo%urcV$aqVl:nQPMSdxgw#CKoUZ1M$IayjuO@]3[RA_qATrC?W6HFIj(J8hsmuIU+gIO?pP-$oGYcB@#a6kkni7l%SO.Y15[aquKJ$q.)[RRFm)OKi%9+W,C+dE*uJ!^!k6lUGFXHWIKla6M7)ir6-:@=F}1=lXb35_(M]JGDcAyt5E^:[/suqWrvrbzxm4A[E?zz2.-*}f^nLM6hSRGDI)ohyTpjwZUbZpR.vV.OR2SjBA9l@nqr+/o-TT1;$.j2wy4E5k07Of)s8g[eG7s7u+C=72$GA{HO%o8[^{S{E]%B-6cTX*6Htkm2/g93Y%kYvwF*:Z],_Z}keYYwW7T7Zq?atJ;?LRC_sE29o3M(}zPI,Z,#hr1%3+KHPdD(p?7g.sMy,Y0q.]+vwKNjSX-=6;UCwRVaNGS#WQ1#)8sEl{,279X+V33T7$B=%dpm@4CWY:D6WVxIa4l8e*.3Ls0/,ln=l?#BoLAacK+Pj6snO7VrBAY3=PY+,qz/qObQIedYJ_mHz^Mxe]rT0wdO)cG$CBmm/ZN[]VoTDj]H@RVnb2!o5*%-C}I8mswMUd5Cu8oxT9[kH;PZc//25FBk{Ji^gwF(20OHRd?EukR5tZm9wsOtBl1}Gv%7#j:i}e%K^8B=(pH{Ge/jd1FE}mvv,UgE;IkYEJM5tRO/Dn+=gh;c-pZ8m#I.xUR9qutE7)0RdiI(oRw3odHurVZS=]E;ytO%zD/+I+xVE%speu]S8bNI5wFW)A-;uqfdmRR%=4$OtkKDdyf/V@44(}+7.S8N@z_-z.XS@3dZ=qr,MIFsc4R[65.#OXyumG60iU1[K1Jb_4q.})Cnu-HVwe@SvBV!Gkl3]5S)*,S!qY#$IQ?%#%vGvC0@@:6=g_)7wE@CH%)OjKnO@8IZ]!POZgQPgMFI1UROr#kO+P!WOe_Q0fsqY}${kdxO-Yjgyj@GY;V}?r2278gO5gK#QRM},Z:}8=2*7I4;#8exXbPL(S!Z%;oxF!xX7nD+tPt#hJlgwTWl{e!a4shxP_sD8FHlMH/VwUnys0yJvelEMUDt}KoLzUf#xJvL%ABcLb@MYD)G8bI])Qe}/gaYc+5}Qu8;Uc{#@E8+rn:}!dy[Q{x*k-U]hhmRhmDwfS3w%w5=98s[dFV9dDOwpxqonT^xtsj8}y}VLHdnmee#WyXlbj]C14k(O_}93+:i{=zW7mO+KM6ROs[;Fa:_wvA,(?4CbXz:#^[M6-62q,9QMI^$DYt]+O:w5XED^[j$khG1E=EKA{;EhWZ}-0+2qpGqh[S{EdDIzVt()RLo6YZquc(vyBY*!9*;Zms#TVh=)E2.j(.-^8MT-4!U4t)XKd$)wU^y!)s)m-i3?bm6emJ$*[l6mL9G+ZBPK[qSQl8lOJIaL=}Ez/F^jo_f^C^k;^f{EPGAGBBk@RrHqiIbWj2[ZlE5a#2t2XWKGS.-Hx0OT7eX/)yQ3]^CmiUL;_}jJ(zFwv^ds-m0E[$@2NFBhb=qdzc!:]K69*2P=+x1KZQnI5uxMz)sW*ZP?KBu=NUUJMHKNBT!Xk9=h0/XWbqW+oHc(hmc*HTpp;F47o.:%Wv%%]fVTHH+X![B%NR@4nH[]q3yPb}uW:VH)Pj1fM)y:Zg)VYQwCx90yq=GrY?;Nw]ZPw}.6@UUav=,Hfmt!-x,HD!?#b.eg/ufMk$zUq8[GQ;z0evQhRGmt=cOLgpXF}kzIxt)0Ax]BL5[{,nWQf5MUd@pp6:7bkH!YnpOJpAYC@Va92yJcNHg$@k)(=B8M#CI?!zUex1B5#JvH#XN];}FwB@nd?FpJmv42U-HjNCnEvgSMPZKDsOu4NbF?iVJ}xqmixer-$Uys;2xXhurl7aF#=wPi8CRynQt[0z_Hlz#YHrNKIP%+;Qjb6(Fq-tn6?pXYi3v8/}C[$%@.h;Uuy,9ifX(cdosHT,GJ!@b{l1g1@Vvg!}*(SM$b[o{4d$61qP$Y[p3/7DwIc-7[:8=f4x(^P5a:n5;$i$([b8-DgzL_WOaUG^[t0-2]=vt8W(0c_y3A4J9}G93OS%cv$83hWtX/zkk#xQZsq52(!KRu,wS9;1xvJzjwEP7-PN.V73;Xwr[3UaF:(x,$L?z],?I?:*#1!HBA#9$rrl.UBm3[*rX9?@(+)0MnST5yO2wN53H.zUDc@9Z*/o3g2Oj5og}yxK_*T+J(+iwOCf061So2]B2KYBqI/gS4ueMozoo(:JFnq/}V]g9NI%2UcxgWk=O?h38l7Z0oc2AfExaBb^q%H8UA[}(![pp$C0_eqfn9}c.emn@Fv4mW+r308BKyG^Wk/%yTFf{*Ca@5m7USCx:ND(@}+Q#OrGZCT-%gJG@yfm1HwajFTK5w)gZHlwH#sS8UoCeD6[:UDr2]]NJ_F,ZX$^TM.:smWpFg$wu7UmBv@FpSP[KS^3*-@QJ%EtbQd}5Dbd{-eiUl-Skq^SHrKnBEd4fAW={XlvHx?Qz8nY}W!-ZNUe2CQy?ZOWP+](l@}S6)Kq/,L5DQH{AszpYkXBnriXnQVTa,=fQd7Bq99FgT(j5rk?K/2b73d[=bNe72VRg3u=KD@TzU*h3sctck@{Y/f1FLO,LMyxeDN9rq1S1Z;2dhd@/R$*EG[4orb4Ay.SlJ=u0d/?wQB4k2.*DzE7{UnHx7Z4p!/BAg1=d7xgl:fh8(pQZE/l:^0!gw[g+tV%HdRt6Ux@[6HdzER0u9}O6ySB5)RV]DQ3b.!TVA.I7,W{{?71XI!wBkkXqZIn]%EwtFoaFPnN?)ezylx9rcR1:wE^u$-erQ{o#o3VQ-6%)pkqpPI;OI?1AZAYbcBs/jt^T?eaZi?4?[#jJlA}lhi})C:pVw-L!11e_Jbz#[}Y(}+XH@t4h5s)L!nM:?OmEVo:Qx^FA+==o%CTAhqV!O(:$(vRi6${e5{lG5b+VO^CR,?k)VXN]G%C]ZT_O6x7jg8tUfzKFP_nykD.MdWl5Y%+h3nhFS0Z+l9jNniHFHBR/hGM+GPqYw9(C3RKEM:D1Kb-=M+SSR%C3qp554XLhCI?YR+R3(mlDIa(;E]2_zv-tF2:HP,a(?ueB(JJ3]MJ,ib!1c-}5Eo#JieFaLTs47Qr1yE1^]oPNqwqW8tmCV2Qq!UrdgOU[{5mK06Q+,#*DYd5O/gRKhOtiGUkA7o=erlF3g;kE)3P^K)?e^}%:h{]RHyHvQ;y[f)/BNP,yN5?*s9cfc-;NHbPHqCOg2GL+U+/$S3ZSK.-!3F3?(w/OYvNBXR$v3c=lXvzJ3S],[n/9#hyBhZRH=t,$/9?g?QWl$(0K8[9N}])DW3,_Gj8572]9;dcJ,j4D[7=TdfOi_tcK,fE(fi;(/6tjqJE:Pu*yECYXjbI/:;zrt1^k5h7,]-)(bJ:e]yWv]!3;SZJ,,pp3$=Jw!J4:kiM%%q;T0Zh6vS3n4-Cd!KqNP8B42?a=nQ+po.]DH4-O8=y64=wnwWFM.r=[y,MgZKiD%m#-+tA0Ly9FSwK,ea^JfK$Xm.JG^zZm{4v:Q6CFKeo-KO)$qE0=Fa)9DHCJQwVf$0T)?zfguzTt40*fv9Egd4]$@%}WhUgAN+Zpt;f/]a4Lsphozz6w)kJDlhbJ^k!$p/MrN;$R(dD#y/H4k6MpaEE07!kJ_2m#k*u(pN?nN2K+=DUwyo2h8oAiRu2Q@VwIpJMnxteez-UEOPcMkiRf7)%Gt;pP5}C+?H1_s;C?}.0yct[tOwGhBnU]eAc[]$#rOMU1.wxxx#6X-F1+?%LpKW,(T;]l/3Z-QFOe3v#d1*]EP6RxfEb==[EZhP2JfxL:1-082[2#egjMxl,37LChUAr/3+mXfJjnY[e)^^$_qVKsU+EjYN2iJ6PK]1QWG+YoX.g]qA)9:kkp0uJ-(e2!kOTwM-Tyh4%NNGqht7bYpFKVXswi[yE8H/7lH:m^[u!WkMm(@0XF?9+8W6y10Z)IFfs){V.f2o%hLy*kO;?LN;gq(g[sgp?hMFN;uI*wyv=BA9eu=u54n9Pqi@R($-2b3Ys+I,/_-EM]y4$mV4LZ?%{p?R+ad$_O1xdL$bxLS%,mG(H).f1y(=xVJl8K.QTY,FNBKP?95oG77HIH$Os9ppgI6l3W#u1(^R..Kz[gsuGX96EeR!meg_:nyChhd+7T=$qxCP!(CP]-Ra4jmj:6F0iK/g]^A:bOb[a}m?LR%?1,z!B)Jul;jS:2qTFBz/2VZ}m]W?2,naQCcNf(QJytZa6tDU_75r_V}5(G?IYITZEnHRynO-rYGct[Qy8jUf1Z,+x/f4B#?DKFneOvV;S)tcmp{YXjbucOTDavh#UExtUG}W6W^*u@+*2GQp+Y=wSyX^gF7yOSZ5s8k:-HHgn)5V[Ngs9Z;1,8/9^P/Pg8y#R^r)4U?X,UKe)5KJ_t?s.TXKwVKHky?DZ8;1;@bUs?uY4DCO?Jl-9Z%B+is#FU*RSWmyQ[0(G#q4$.j#ivq@:SX]%#.dVL^vZ^P]yve27WLpcV,a410@)B*E?i6HKjC9rkzYW%C#3*C47kaDKOJ=[-^b;*0^;NMa1g_IAUi,ucFRBOK0I/crIs}mvd-kOuQm=fx1lIwjKFR_en(x*rrDZOar8/L[)yJlp]Cn#NkvQV-w(s4xxbj/t;E9-mN!,8jdJ5?O79BFEE^412)*VY$%rTK%lEbSY:oa@w4aaAR+I8^#!B(uo15yV+gb3D?ZRj[XwK7yj^X,8Q0G+u+XLd;hZpyPXv0NN]kM!pZ84:[878mZ(dLy,T?ZC^LRt@gcw)ib:]J3iGz}a!lsd2R=peu}(TBU6g%/N%jefJ]q^SZfvr2LA18JR.xcYq=d2)7lyy2A(Bj-Yb]{9rU!PuS_f33L@3d14*Rdmc8?Qq8Hhi]Ap-9{W9W{T#(pj!m]Ze,EfkNR4zpapo{BRK}5KaH3F.70ca9p@7.sQZDtUexIZxqCf*[?]+ybI)6$0Q-c{Kt,$bcEBz5[jvF?-c^y^%VbCfPX,?1=YkaDBgPTXYjk}7N9xWLuZrm1J!@^#3:Wm.d}R}jp4w^B#P=m:bvu)SuseAUgkI0$)x.Q1^W,I=0o2@7lET1}fF4+vs4Kj#)#a[00XKOi3jXL@VWjD0O7,DmEW*g=A!R%s^Fgm%?ck(+Hi5c$=kcssDyttDl6UO(q_5SX$34If!N2rEUXq,_noPby#]i=nc/#wK2{@$QYHp8m!,i!*A=]DizTBznyD{$amS;?Q#Ol1Rs]i^OScXyeK931nX%m1+!NeTBu$-*M?sJ:JM9@I2YttF4Esedina0Jjm0Kb)J#b4,sw:X(4_o%A(((K^Gh}PUs7K}rK+QAUAf?+X?-lCEVE9*Tf;dE2Sd%ZWooY]K?49p;pOob-X9*hTV_iD$PbQXmtyc=nlL-@6p0MznfsyEIHR@39UufB%PDX#4^dN#[,nIX/W/p?%t8#V2xowy%i1-%y1?MVM13*GxUFIInc03wriA8qi8L^l[;BLq}Yia@HH*xf=Vcp34#O^;nGkRt*o;jJLf}Ud6D;=:WyeP*z3o[J{oWMaBBmJt%xoYVQ1E1KgmTD7=FEr/fU@p3pT;}6o:AytkglCVZ+Az*/*DKEZ^nGDC,6WA7^m(/6XHyG(hM9QPiM2l7;xq!G]3r=?3=t]g8g;d1::U$*y=+n/o44/N]s=YtA=:{NZB^oz=wpW2K#9_TC(AG*deUCCiQ}b+Eit,w/5ayPqw)%q0?-W,R8UxAVig=.FjT4@XTtp:YY-e*]0wASr#}p$NrK#7:1pKdSc}^$gNF-s[njI_POP=M@lLBQ)dmR;qMm!v6?(/cOGYtHo#[d0jajiy2Ltyi)a.we2%CJ;Xhfrf_B{FE-jPO*b}-VCWXq?i?j$.NL^v#]WAtWA%tQpK-VC$EVh4D701Y0Ql1NSZeG[@#Fp:_,pNMb_4jHcOq;[o$=;1;;Kb%fKBWMf2lP,RkUaT#K_1*[_T?o7n!44:G+!PnLq*oav^b=tx;C.G6KdhzA6p]/Y=E]m!G_w]Iw]bZ87v5c{H.V0%W0-353%*{Pu}^uBDw$]TgB/kb80pe?e9sFBnluT?atPLK[),xPqV][.WEPll44hk4:6XBc9(cj%MbO.7n-NG7=B[7K1cPdBe(=meCDN%6H.YXPzvHlbKc%VaHd}Mnjm.ySsd:7Hc4D6AbKd.1nu843+ESdo;un)C(?NvSjt6_,PKg0/@nE$-:an9HmGk$:Lg.K(YtYz(m]-M,!zW60WuN;Dy4n)+M[4^b3as9oM26dn2$abSJ%LuA-W=m{p,gj(#WJQ-o[Iv^Rg*@GvX@SfrlVkBvP)AZgGtZZ;ix[=+b);DwUF9MVT:qRY-Zj,GuS40$X=cWETzx5E{soI[22X9/2Y0]8g4XdE}])kVZD{I.K=L{iBvo1z22Tc3xYGW5iE3@jq+b)?%qKs0h5[@8hy7._7Be#nT6:_iJ_[-HOwg?={jVid@LZS!2he6;Y**zD[WN%pR2[o=SJS=kM=6v-A02?K3a%nBRW3ArCn5yqwet}eu^L9B-6V-ovjyeCr88S^*gWkJ$fF]o/,myhohN*wN{10wEGnzb1Z]1-No+[lM.9_g8WItufy.qK0j6AzP*v2Qbg9tlr8?q+DyBc,.V+QM)IfpPU}eAW^7#ys_WEBt+6wt56-vWh2C)yjEZ)2jeKicJq%}iS,Mldk@}=(I-6o2[J.xPTMwVn:luxhC3;c(X3u+]O*nofSLAS=;g_-7]P*3,z,9%$lYxe1qMMrvdRmytGp(T=$WFdLH?uZXLUu=UD{9i),(^CAcJ%N_MaO+_YxgrVYCC#;:7wUVtFro3QkD/zlgPWfoxi7da-KBBtGvkDhu)48nQZ)0?4XvOHEw!@EMS7STSL3^LKImcR,o)@?]b4J-9:=FFi$C.XSwHteeD+SlhLp*/jH^%53H,n9{DmrHQ8)L4g)!3/4PJQF9=B1dU}-=duP9!LH{v8m4[=rtx5M-JHB@ZR9oOZUUmYpN^hAm@6=[0FVB{A*br.?KIrN]P@TmaW.3C9OH4*vt3h*KvYS5CohmB9rtrnNil(a#,8e4.nogSHoH(iI[!xn+Z+HB*GTJy)0CLkz2g(}f</monojunk160117.lua>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>598</ID>
      <Description>"========="</Description>
      <LastState/>
      <Color>28A028</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
0:
db 0
[DISABLE]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Master of Orion   (click 1st: load Scripts)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
bReleased = true
local useCompact = true
--
if syntaxcheck==true then return '' end

-- Thanks mgr.inz.Player's compact mode : http://forum.cheatengine.org/viewtopic.php?t=570055
if useCompact and not compactmenualreadyexists then
  if bReleased then--
    local al = getAddressList()
    local tv,hd = al.Component[0],al.Component[1]
    setMethodProperty(hd,"OnSectionClick",nil)
    setMethodProperty(tv,"OnDragOver"    ,nil)
    setMethodProperty(tv,"OnDragDrop"    ,nil)
    setMethodProperty(tv,"OnEndDrag"     ,nil)
  end
  local mf = getMainForm()
  local md = {'[Compact View]','[Full View]','[Mem View]','[Process]','[on top]','[ON TOP]'}

  if mf.pstat==nil then
    local np = createPanel(mf)
    np.Name = 'pstat'
    np.Align = alBottom
    np.Caption = ''
    np.Height = 25
    local lbl = createLabel(np)
    lbl.Name = 'msg'
    lbl.Caption = ''
    lbl.Align = alClient
    lbl.BorderSpacing.Around=3
    lbl.BorderSpacing.Right=10
    lbl.BorderSpacing.Left=10

    function PStat() return getMainForm().pstat.msg end
    function PMsg(m) PStat().Caption = tostring(m) end
  end

  function cycleFullCompact(sender,force)
    local state = not(compactmenuitem.Caption == md[1]);
    if force~=nil then state = not force end;
    compactmenuitem.Caption = state and md[1] or md[2];
    mf.Splitter1.Visible = state;
    mf.Panel4.Visible    = state;
    mf.Panel5.Visible    = state;
    mf.pstat.Visible = not state;
  end;

  local onTopStat = md[5]

  function addCompactMenu()
    if compactmenualreadyexists then return end;

    local parent = mf.Menu.Items;
    compactmenuitem,mv,op,onTop = createMenuItem(parent),createMenuItem(parent),createMenuItem(parent),createMenuItem(parent)

    parent.add(mv)
    mv.Caption = md[3];
    mv.OnClick = function()return mf.btnMemoryView:OnClick() end

    parent.add(op)
    op.Caption = md[4];
    op.OnClick = function()return mf.sbOpenProcess:OnClick() end

    parent.add(onTop)
    onTop.Caption = md[5];
    onTop.OnClick = function(mn)
      if onTopStat == md[5] then
        onTopStat = md[6]
        mf.FormStyle = 'fsStayOnTop'
      else
        onTopStat = md[5]
        mf.FormStyle = 'fsNormal'
      end
      mn.Caption = onTopStat
--      return mf.sbOpenProcess:OnClick()
    end
    -- fsSystemStayOnTop fsNormal


    parent.add(compactmenuitem);
    compactmenuitem.Caption = md[1];
    compactmenuitem.OnClick = cycleFullCompact;

    compactmenualreadyexists = 'yes';

  end;
  addCompactMenu();
  cycleFullCompact(nil,true)
end
--

-- common function
local Apack,Unpack = table.pack or pack,table.unpack or unpack
if loadTableFile == nil then
  local loaded = {}
  function getLoadedChunks(p)
    p = type(p)=='string' and {p} or p
    local r,c = {},0
    for i=1,#p do
      local v = loaded[p[i]]
      if v~=nil then
        r[p[i]]=v
        c = c + 1
      end
    end
    return c, r
  end
  function loadChunks(t)
    for i,m in ipairs(t) do
      loadTableFile(t[i],true)
    end
  end
  function loadTableFile(n,mode)
    local hdr = 'loadTableFile: '
    assert(type(n)=='string',hdr.."input should be a string -"..tostring(n).." of "..type(n))
    local m = assert(findTableFile(n),hdr.."can't find table file -"..n).Stream
    m = assert(readStringLocal(m.Memory,m.Size),hdr.."can't read content -"..n)
    if type(mode)~='boolean' then return m end
    m = assert(loadstring(m,n),hdr.."lua script load fail -"..n)
    if type(m)=='function' then loaded[n]=m end
    return mode and m() or m or nil
  end
end

local target= {"monojunk160117.lua","MRAA.lua"}

local skip_Print = AA_CHECK~=true and ( false )
-- suppress informative or warning message, not error throw

if getLoadedChunks(target)==0 then
  local original_print = _G['print']

  if skip_Print then _G['print'] = function()end end
  loadChunks(target)
  _G['print'] = original_print
end

Bit64 = getOpenedProcessID()==0 and 0 or targetIs64Bit() and 1 or 2

{$asm}

[ENABLE]


useDomain()

[DISABLE]

monoDetach()

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>225</ID>
          <Description>"Start Setup &amp; Tools (click 2nd: Global Storage)"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

//LuaRet(AddAssm('BBI.Game'))

globalalloc(__,$4000,7ff00000)
__:
dq __

__+200:
dd (float)1,(float)100

__+08:
{$lua}
if getOpenedProcessID()==0 then
  return "db 0"
elseif targetIs64Bit() then
  autoAssemble("define(PSIZE,8)\nregistersymbol(PSIZE)")
  PSIZE = 8

  return "db 8\nMR(64,Color=0xff)\nMR(32,Color=0x00)"
else
  autoAssemble("define(PSIZE,4)\nregistersymbol(PSIZE)")
  PSIZE = 4
  return "db 4\nMR(32,Color=0xff)\nMR(64,Color=0x00)"
end
{$asm}


//alloc(CivBonus,$4000,7ff00000)
//alloc(ColonyBonus,$4000,7ff00000)

//registerSymbol(CivBonus)
//registerSymbol(ColonyBonus)



[DISABLE]
//dealloc(CivBonus)
//dealloc(ColonyBonus)

//unregistersymbol(CivBonus)
//unregistersymbol(ColonyBonus)

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>3765</ID>
      <Description>"32 (empty)"</Description>
      <Options moHideChildren="1"/>
      <LastState RealAddress="00000000"/>
      <Color>000000</Color>
      <VariableType>String</VariableType>
      <Length>0</Length>
      <Unicode>0</Unicode>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>0</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>4264</ID>
          <Description>"attrib adder"</Description>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
function tmpl(name,idx)
  local fmt=string.format
  local t = {Name=name;Cave=fmt('cave+%X',idx*0x80+0x280),Pop=fmt('cave+%X',idx*0x80+0x27c),Len='_Len'..idx}
  return string.gsub([[
^Cave:
push  eax
mov   eax,[esp+08]
sub   esp,0c
push  eax
call  party
add   esp,10
test  eax,eax
pop   eax
je    @f
ReassembleEX(^Name,X^Len)
jmp   ^Name+X^Len
@@:
pop   dword ptr [^Pop]
call  cave+0200
push  @f
ReassembleEX(^Name,^Len)
jmp   ^Name+^Len
@@:
push  dword ptr [^Pop]
add   eax,[cave+140]
ret

^Name:
jmp  ^Cave

  ]],'%^([_%a][_%w]*)',function(k)return t[k] or '^'..k end)
end
{$asm}


define(cave,AddAttrib)
define(hack,might)

[ENABLE]

eval(party,$MONO'CharacterStats:get_IsPartyMember')

eval(might,$MONO'CharacterStats::get_Might')
eval(const,$MONO'CharacterStats::get_Constitution')
eval(dexty,$MONO'CharacterStats::get_Dexterity')
eval(perce,$MONO'CharacterStats::get_Perception')
eval(intel,$MONO'CharacterStats::get_Intellect')
eval(resov,$MONO'CharacterStats::get_Resolve')

alloc(AddAttrib,$1000,hack)
registersymbol(AddAttrib)

assert(hack,55)

cave:
dq cave,might,const,dexty,perce,intel,resov


cave+060:
readmem(might,24)
cave+080:
readmem(const,24)
cave+0a0:
readmem(dexty,24)
cave+0c0:
readmem(perce,24)
cave+0e0:
readmem(intel,24)
cave+100:
readmem(resov,24)

cave+0200:
push  eax
{$lua}
--return Asm_Limit('eax,[&amp;+140],(float)0.1,(float)10,(float)100',syntaxcheck)
return Asm_Limit('eax,[&amp;+140],1,#10,#400',syntaxcheck)
{$asm}
pop   eax
ret


{$lua}
local s = {}
s[1+#s]=tmpl('might',1)
s[1+#s]=tmpl('const',2)
s[1+#s]=tmpl('dexty',3)
s[1+#s]=tmpl('perce',4)
s[1+#s]=tmpl('intel',5)
s[1+#s]=tmpl('resov',6)
s = table.concat(s,'\n')
--print(s)
return s
{$asm}

[DISABLE]

[cave+08]:
readmem(cave+060,24)
[cave+10]:
readmem(cave+080,24)
[cave+18]:
readmem(cave+0a0,24)
[cave+20]:
readmem(cave+0c0,24)
[cave+28]:
readmem(cave+0e0,24)
[cave+30]:
readmem(cave+100,24)


unregistersymbol(AddAttrib)
dealloc(AddAttrib)



</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>4265</ID>
              <Description>"add amount"</Description>
              <Color>000000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>AddAttrib</Address>
              <Offsets>
                <Offset>140</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>3766</ID>
      <Description>"64"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <VariableType>String</VariableType>
      <Length>0</Length>
      <Unicode>0</Unicode>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>0</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>4266</ID>
          <Description>"** Local Player Check (Click before others or CRASH!)"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1"/>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

eval(AIAw,$MONO'AI.Awareness::GetReadyToMoveFleets')

//==================== Client::GetLocalPlayerCivilization

eval(universe,$MONO'Backend.Core.Client:=universe')
eval(pciv,$MONO'Backend.Core.Client::GetLocalPlayerCivilization')
eval(client,$MONO'Backend.Core.Client:@self')
globalalloc(getLocalPlayerCivilization,$100,pciv)

globalalloc(pLocalPlayerCivilization,8)
globalalloc(pClient,8)
globalalloc(pUniverse,8)

assert(pciv,55)

getLocalPlayerCivilization+0c0:
dq pciv
getLocalPlayerCivilization+0c8:
readmem(pciv,24)

getLocalPlayerCivilization:
pop   qword ptr [getLocalPlayerCivilization+0f0]
push  @f
ReassembleEX(pciv,pcivLen)
jmp   pciv+pcivLen
@@:
push  qword ptr [getLocalPlayerCivilization+0f0]
push  rax
push  rcx
mov   [pLocalPlayerCivilization],rax
mov   rcx,client
cmp   rcx,10000
jle   short @f
mov   rcx,[rcx]
cmp   rcx,10000
jle   short @f
mov   [pClient],rcx
mov   rax,[rcx+universe]
mov   [pUniverse],rax
@@:
pop   rcx
pop   rax
ret
getLocalPlayerCivilization+0f0:
dq    0
pciv:
jmp   getLocalPlayerCivilization


__+110:
dq AIAw

[DISABLE]

[getLocalPlayerCivilization+0c0]:
readmem(getLocalPlayerCivilization+0c8,24)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>4274</ID>
              <Description>"(Should be auto-activated)"</Description>
              <LastState Activated="1"/>
              <Color>28A028</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

{$lua}
if syntaxcheck then return end
function checkOwner(ps)
  local ns,cn,fn = ps:match('^%s*(.-)%s*;%s*(.-)%s*;%s*(.-)%s*$')
  local fmt=string.format
  local t = {NS=ns,CN=cn,FN=fn}
  return string.gsub([[

eval(owner^CN,$MONO'Backend.^NS.^CN:=^FN')

globalalloc(check^CN,$40,__)

check^CN:
push  rax
mov   rax,[rax+owner^CN]
cmp   rax,[pLocalPlayerCivilization]
pop   rax
ret

  ]],'%^(%u+)',function(k)return t[k] or '^'..k end)
end



local s = {}
s[1+#s]=checkOwner'Research    ; ResearchComponent ; owner'
s[1+#s]=checkOwner'Settlements ; Settlement        ; owner'
s[1+#s]=checkOwner'Fleets      ; Fleet             ; owner'
s[1+#s]=checkOwner'Fleets      ; Ship              ; owner'
s[1+#s]=checkOwner'Fleets      ; ShipBlueprint     ; owner'


s = table.concat(s,'\n')
return s
{$asm}


[DISABLE]

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>5645</ID>
          <Description>"========="</Description>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
0:
db 0
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4746</ID>
          <Description>"Colony ProductionPoints"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,ColonyProductionPoints)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Settlements.Colony::GetProductionPoints')

alloc(ColonyProductionPoints,$1000,hack)
registersymbol(ColonyProductionPoints)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
cave+200:
pop   qword ptr [cave+1f0]
push  rax
mov   rax,rcx
call  checkSettlement
pop   rax
push  qword ptr [cave+1f0]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)4,(float)100',syntaxcheck)
{$asm}
{$lua}
return Asm_Limit('eax,[cave+1c8],(float)0.01,(float)10,(float)1000',syntaxcheck)
{$asm}


movss [cave+1e0],xmm0
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:
movss xmm0,[cave+1e0]


mulss xmm0,[cave+1c0]
addss xmm0,[cave+1c8]

pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(ColonyProductionPoints)
dealloc(ColonyProductionPoints)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4747</ID>
          <Description>"Colony ResearchPoints"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,ColonyResearchPoints)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Settlements.Colony::GetResearchPoints')

alloc(ColonyResearchPoints,$1000,hack)
registersymbol(ColonyResearchPoints)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
cave+200:
pop   qword ptr [cave+1f0]
push  rax
mov   rax,rcx
call  checkSettlement
pop   rax
push  qword ptr [cave+1f0]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)4,(float)100',syntaxcheck)
{$asm}
{$lua}
return Asm_Limit('eax,[cave+1c8],(float)0.01,(float)10,(float)1000',syntaxcheck)
{$asm}


movss [cave+1e0],xmm0
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:
movss xmm0,[cave+1e0]


mulss xmm0,[cave+1c0]
addss xmm0,[cave+1c8]

pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(ColonyResearchPoints)
dealloc(ColonyResearchPoints)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4749</ID>
          <Description>"Colony CreditOutput"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,ColonyCreditOutput)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Settlements.Colony::GetCreditOutput')

alloc(ColonyCreditOutput,$1000,hack)
registersymbol(ColonyCreditOutput)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
cave+200:
pop   qword ptr [cave+1f0]
push  rax
mov   rax,rcx
call  checkSettlement
pop   rax
push  qword ptr [cave+1f0]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)4,(float)100',syntaxcheck)
{$asm}
{$lua}
return Asm_Limit('eax,[cave+1c8],(float)0.01,(float)10,(float)1000',syntaxcheck)
{$asm}


movss [cave+1e0],xmm0
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:
movss xmm0,[cave+1e0]


mulss xmm0,[cave+1c0]
addss xmm0,[cave+1c8]

pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(ColonyCreditOutput)
dealloc(ColonyCreditOutput)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4748</ID>
          <Description>"Colony LifeProduction"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,ColonyLifeProduction)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Settlements.Colony::GetLifeProduction')

alloc(ColonyLifeProduction,$1000,hack)
registersymbol(ColonyLifeProduction)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
cave+200:
pop   qword ptr [cave+1f0]
push  rax
mov   rax,rcx
call  checkSettlement
pop   rax
push  qword ptr [cave+1f0]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)4,(float)100',syntaxcheck)
{$asm}
{$lua}
return Asm_Limit('eax,[cave+1c8],(float)0.01,(float)10,(float)1000',syntaxcheck)
{$asm}


movss [cave+1e0],xmm0
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:
movss xmm0,[cave+1e0]


mulss xmm0,[cave+1c0]
addss xmm0,[cave+1c8]

pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(ColonyLifeProduction)
dealloc(ColonyLifeProduction)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5195</ID>
          <Description>"Colony Morale"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,ColonyMorale)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Settlements.Colony::get_Morale')

alloc(ColonyMorale,$1000,hack)
registersymbol(ColonyMorale)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
cave+200:
pop   qword ptr [cave+1f0]
push  rax
mov   rax,rcx
call  checkSettlement
pop   rax
push  qword ptr [cave+1f0]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)0.5,(float)1',syntaxcheck)
{$asm}




addss xmm0,[cave+1c0]


movss [cave+1e0],xmm0
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:
mov   eax,[__+200]
cmp   eax,[cave+1e0]
jge   short @f
mov   [cave+1e0],eax
@@:
movss xmm0,[cave+1e0]

pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(ColonyMorale)
dealloc(ColonyMorale)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5197</ID>
          <Description>"Colony FleetSupport/CommandPoint"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,ColonyFleetSupport)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Settlements.Settlement::GetFleetSupport')

alloc(ColonyFleetSupport,$1000,hack)
registersymbol(ColonyFleetSupport)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
cave+200:
pop   qword ptr [cave+1f0]
push  rax
mov   rax,rcx
call  checkSettlement
pop   rax
push  qword ptr [cave+1f0]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)4,(float)100',syntaxcheck)
{$asm}
{$lua}
return Asm_Limit('eax,[cave+1c8],(float)0.01,(float)10,(float)1000',syntaxcheck)
{$asm}


movss [cave+1e0],xmm0
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:
movss xmm0,[cave+1e0]


mulss xmm0,[cave+1c0]
addss xmm0,[cave+1c8]

pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(ColonyFleetSupport)
dealloc(ColonyFleetSupport)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5643</ID>
          <Description>"Colony RequiredLifePoints (work?)"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,ColonyRequiredLifePoints)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Settlements.Colony::GetRequiredLifePoints')

alloc(ColonyRequiredLifePoints,$1000,hack)
registersymbol(ColonyRequiredLifePoints)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
cave+200:
pop   qword ptr [cave+1f0]
push  rax
mov   rax,rcx
call  checkSettlement
pop   rax
push  qword ptr [cave+1f0]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)4,(float)100',syntaxcheck)
{$asm}

label(nxt)

movss [cave+1e0],xmm0
mov   eax,[cave+1e0]
cmp   eax,(float)1
jle   short nxt

fld   dword ptr [cave+1e0]
fdiv  dword ptr [cave+1c0]
fstp  dword ptr [cave+1e0]
//divss xmm0,[cave+1c0]

//movss [cave+1e0],xmm0

mov   eax,[cave+1c8]    // minimum required, instance grow?
test  eax,eax
jne   short @f
mov   eax,(float)1
mov   [cave+1e0],eax
@@:
mov   eax,(float)1
cmp   eax,[cave+1e0]
jle   short @f
mov   eax,(float)1
mov   [cave+1e0],eax
@@:
nxt:
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:

fld   dword ptr[cave+1e0]
fistp dword ptr[cave+1e0]
fild  dword ptr[cave+1e0]
fstp  dword ptr[cave+1e0]

movss xmm0,[cave+1e0]


pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(ColonyRequiredLifePoints)
dealloc(ColonyRequiredLifePoints)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5651</ID>
          <Description>"Colony PollutionProduced (div/mul)"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,ColonyPollutionProduced)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Settlements.Colony::GetPollutionProduced')

alloc(ColonyPollutionProduced,$1000,hack)
registersymbol(ColonyPollutionProduced)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
label(nxt)
label(done)
cave+200:
mov   [cave+1b0],edx
pop   qword ptr [cave+1f0]
push  rax
mov   rax,rcx
call  checkSettlement
pop   rax
push  qword ptr [cave+1f0]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)4,(float)100',syntaxcheck)
{$asm}
{$lua}
return Asm_Limit('eax,[cave+1c8],(float)0.01,(float)10,(float)1000',syntaxcheck)
{$asm}

movss [cave+1e0],xmm0

mov   eax,[cave+1e0]
test  eax,eax
jge   nxt

mulss xmm0,[cave+1c0]
//subss xmm0,[cave+1c8]
jmp   short done
nxt:
divss xmm0,[cave+1c0]
done:
//subss xmm0,[cave+1c8]

{
movss [cave+1e0],xmm0
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:
movss xmm0,[cave+1e0]
}



pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(ColonyPollutionProduced)
dealloc(ColonyPollutionProduced)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5644</ID>
          <Description>"========="</Description>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
0:
db 0
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5191</ID>
          <Description>"Civ ShipSpaceMultiplier"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,CivShipSpaceMultiplier)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Civilizations.Civilization::GetShipSpaceMultiplier')

alloc(CivShipSpaceMultiplier,$1000,hack)
registersymbol(CivShipSpaceMultiplier)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
cave+200:
cmp   rcx,[pLocalPlayerCivilization]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)4,(float)100',syntaxcheck)
{$asm}


movss [cave+1e0],xmm0
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:
movss xmm0,[cave+1e0]


addss xmm0,[cave+1c0]

pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(CivShipSpaceMultiplier)
dealloc(CivShipSpaceMultiplier)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5192</ID>
          <Description>"Civ MiniaturizationSpaceModifier"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,CivMiniaturizationSpaceModifier)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Civilizations.Civilization::GetMiniaturizationSpaceModifier')

alloc(CivMiniaturizationSpaceModifier,$1000,hack)
registersymbol(CivMiniaturizationSpaceModifier)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
cave+200:
cmp   rcx,[pLocalPlayerCivilization]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)4,(float)100',syntaxcheck)
{$asm}


movss [cave+1e0],xmm0
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:
movss xmm0,[cave+1e0]


divss xmm0,[cave+1c0]

pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(CivMiniaturizationSpaceModifier)
dealloc(CivMiniaturizationSpaceModifier)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5193</ID>
          <Description>"Civ MiniaturizationCostModifier"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,CivMiniaturizationCostModifier)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Civilizations.Civilization::GetMiniaturizationCostModifier')

alloc(CivMiniaturizationCostModifier,$1000,hack)
registersymbol(CivMiniaturizationCostModifier)

assert(hack,55)

cave:
dq cave,hack


cave+060:
readmem(hack,24)


label(skip)
label(cont)
cave+200:
cmp   rcx,[pLocalPlayerCivilization]
jne   short skip
pop   qword ptr [cave+1f0]
push  cont
skip:
ReassembleEX(hack,hLen)
jmp   hack+hLen
cont:
push  qword ptr [cave+1f0]

push  rax

{$lua}
return Asm_Limit('eax,[cave+1c0],(float)0.01,(float)4,(float)100',syntaxcheck)
{$asm}


movss [cave+1e0],xmm0
xor   eax,eax
cmp   eax,[cave+1e0]
jle   short @f
mov   [cave+1e0],eax
@@:
movss xmm0,[cave+1e0]


divss xmm0,[cave+1c0]

pop   rax
ret


hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(CivMiniaturizationCostModifier)
dealloc(CivMiniaturizationCostModifier)



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5654</ID>
          <Description>"========="</Description>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
0:
db 0
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5655</ID>
          <Description>"AutoBuild to TriggerEvent"</Description>
          <LastState Activated="1"/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,AutoBuild2TerraForm)
define(hack,pp)

[ENABLE]

eval(pp,$MONO'Backend.Settlements.Colony::DoGovernorManagement')
eval(cpn,$MONO'Backend.Settlements.Colony::get_ColonizedPlanet')
eval(trf,$MONO'Backend.Galaxy.Planet::Terraform')

eval(ocv,$MONO'Backend.Settlements.Settlement:=owner')
eval(rac,$MONO'Backend.Civilizations.Civilization:=race')

eval(rew,$MONO'Backend.Civilizations.Civilization::Reward')


eval(cid,$MONO'Backend.Core.ObjectBase::get_ID')

eval(incpop,$MONO'Backend.Settlements.Colony::IncreasePopulation')

//eval(up,$MONO'Backend.Settlements.Colony::UpdatePopulation')

globalalloc(evtTerraform,8)
globalalloc(evtIncPop,8)

alloc(AutoBuild2TerraForm,$1000,hack)
registersymbol(AutoBuild2TerraForm)

assert(hack,55)

cave:
dq cave,hack//,up

evtIncPop:
dd 1


cave+060:
readmem(hack,24)

label(done)
cave+200:
push  rcx
push  rdx
push  r8
push  r9
push  rax

mov   [cave+180],rcx
mov   rax,rcx
call  checkSettlement
jne   done

mov   eax,[evtIncPop]
test  eax,eax
je    short @f

{
sub   rsp,20
call  cid
add   rsp,20

mov   r9,rax
mov   r8,3
mov   rcx,[cave+180]
mov   rcx,[rcx+ocv]
xor   rdx,rdx
push  rdx
inc   rdx
inc   rdx

sub   rsp,20
call  rew
add   rsp,30
}



{
mov   r8,[rcx+ocv]
mov   [cave+190],r8
test  r8,r8
je    short @f
mov   r8,[r8+rac]    // add pop of race of self civ
mov   [cave+198],r8
test  r8,r8
je    short @f

xor   rdx,rdx       // no notify

sub   rsp,20
call  incpop
add   rsp,20
}


@@:

mov   rcx,[cave+180]

mov   eax,[evtTerraform]
test  eax,eax
je    short @f

sub   rsp,20
call  cpn
add   rsp,20

mov   rcx,rax

sub   rsp,20
call  trf           // do terraform
add   rsp,20
@@:



done:
pop   rax
pop   r9
pop   r8
pop   rdx
pop   rcx
ReassembleEX(hack,hLen)
jmp   hack+hLen

hack:
jmp  cave+200


[DISABLE]

[cave+08]:
readmem(cave+060,24)


unregistersymbol(AutoBuild2TerraForm)
dealloc(AutoBuild2TerraForm)



</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>5656</ID>
              <Description>"event Terraforming"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:ON
0:off
</DropDownList>
              <LastState Value="1" RealAddress="7FFF4270"/>
              <Color>000000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>evtTerraform</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4751</ID>
      <Description>"[ScriptSetting]=&gt;[ConlonyBonus]=&gt;RequiredLifePoint to +1 pop"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <VariableType>String</VariableType>
      <Length>0</Length>
      <Unicode>0</Unicode>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>pIndependentCiv</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
      <CheatEntries>
        <CheatEntry>
          <ID>5649</ID>
          <Description>"** set preset value  ( edit script to config, then save &lt;other&gt; table )"</Description>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
local UNPACK = table.unpack or unpack
function configValue(t)
  local intOrFloat = {writeInteger,writeFloat}
  for i=1,#t do
    local addy,wtype,desc,value = UNPACK(t[i])
    local wt = intOrFloat[wtype==1 and 1 or 2]
    pcall(wtype[wt],addy,value) -- no error notify if not an addr or else~
  end
end
local I,F = 1,2

[ENABLE]
--------------------------------------------------------- only edit the numbers ---
configValue {

{'ColonyMorale+1c0',            F,'Morale Add Value',               0.5}, --range(0.1-1.0)-- result max is 1.0

{'ColonyRequiredLifePoints+1c0',         F,'Pop +1 consume value divisor ',   20}, --
{'ColonyRequiredLifePoints+1c8',         I,'^ mode ',                          0}, --mode minimum (0) or use divisor

{'ColonyFleetSupport+1c0',               F,'Command Points Mul'           ,    4},
{'ColonyFleetSupport+1c8',               F,'Command Points Add'           ,   10},

{'ColonyProductionPoints+1c0',           F,'Production Mul'               ,    4},
{'ColonyProductionPoints+1c8',           F,'Production Add'               ,   10},

{'ColonyResearchPoints+1c0',             F,'Research Mul'                 ,    4},
{'ColonyResearchPoints+1c8',             F,'Research Add'                 ,   10},

{'ColonyLifeProduction+1c0',             F,'Life/Food Mul'                ,    4},
{'ColonyLifeProduction+1c8',             F,'Life/Food Add'                ,   10},

{'ColonyCreditOutput+1c0',               F,'Credit Mul'                   ,    4},
{'ColonyCreditOutput+1c8',               F,'Credit Add'                   ,   10},

{'ColonyPollutionProduced+1c0',          F,'Pollution Div'                ,    4},
{'ColonyPollutionProduced+1c8',          F,'Pollution Sub'                ,   10},

{'CivShipSpaceMultiplier+1c0',           F,'ShipSpaceMultiplier +1MUL'    ,    4}, -- 1.5 is +150% =&gt; 2.5x
{'CivMiniaturizationSpaceModifier+1c0',  F,'ShipSpaceMultiplier +1MUL'    ,    4}, -- 1.5 is +150% =&gt; 2.5x
{'CivMiniaturizationCostModifier+1c0',   F,'ShipSpaceMultiplier +1MUL'    ,    4}, -- 1.5 is +150% =&gt; 2.5x

}
[DISABLE]



</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5650</ID>
          <Description>"========="</Description>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
0:
db 0
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4750</ID>
          <Description>"[ConlonyBonus]=&gt;RequiredLifePoint to +1 pop"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pIndependentCiv</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>5196</ID>
              <Description>"Morale Add, 0.5=&gt;+50%, cap result 1"</Description>
              <LastState Value="0.5" RealAddress="1C7201C0"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>ColonyMorale+1c0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5646</ID>
              <Description>"RequiredLifePoint to +1 pop (work?)"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="1" RealAddress="1C7401C0"/>
              <Color>FF0000</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>ColonyRequiredLifePoints</Address>
              <Offsets>
                <Offset>1C0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>5647</ID>
                  <Description>"minimum or divisor mode"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Divisor Mode
0:Zero Mode
</DropDownList>
                  <LastState Value="0" RealAddress="1C7401C8"/>
                  <Color>000000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>5648</ID>
                  <Description>"Divisor in Divisor Mode"</Description>
                  <LastState Value="4" RealAddress="1C7401C0"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>5200</ID>
              <Description>"FleetSupport/CommandPoint"</Description>
              <Options moHideChildren="1"/>
              <LastState RealAddress="1C7301C0"/>
              <Color>FF0000</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>ColonyFleetSupport</Address>
              <Offsets>
                <Offset>1C0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>4738</ID>
                  <Description>"MUL"</Description>
                  <LastState Value="4" RealAddress="1C7301C0"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>4742</ID>
                  <Description>"ADD"</Description>
                  <LastState Value="10" RealAddress="1C7301C8"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>5210</ID>
              <Description>"Production"</Description>
              <Options moHideChildren="1"/>
              <LastState RealAddress="1C6E01C0"/>
              <Color>FF0000</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>ColonyProductionPoints</Address>
              <Offsets>
                <Offset>1C0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>5211</ID>
                  <Description>"MUL"</Description>
                  <LastState Value="4" RealAddress="1C6E01C0"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>5212</ID>
                  <Description>"ADD"</Description>
                  <LastState Value="10" RealAddress="1C6E01C8"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>5201</ID>
              <Description>"Research"</Description>
              <Options moHideChildren="1"/>
              <LastState RealAddress="1C6F01C0"/>
              <Color>FF0000</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>ColonyResearchPoints</Address>
              <Offsets>
                <Offset>1C0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>5202</ID>
                  <Description>"MUL"</Description>
                  <LastState Value="4" RealAddress="1C6F01C0"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>5203</ID>
                  <Description>"ADD"</Description>
                  <LastState Value="10" RealAddress="1C6F01C8"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>5204</ID>
              <Description>"Life"</Description>
              <Options moHideChildren="1"/>
              <LastState RealAddress="1C7101C0"/>
              <Color>FF0000</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>ColonyLifeProduction</Address>
              <Offsets>
                <Offset>1C0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>5205</ID>
                  <Description>"MUL"</Description>
                  <LastState Value="4" RealAddress="1C7101C0"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>5206</ID>
                  <Description>"ADD"</Description>
                  <LastState Value="10" RealAddress="1C7101C8"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>5207</ID>
              <Description>"Credit"</Description>
              <Options moHideChildren="1"/>
              <LastState RealAddress="1C7001C0"/>
              <Color>FF0000</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>ColonyCreditOutput</Address>
              <Offsets>
                <Offset>1C0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>5208</ID>
                  <Description>"MUL"</Description>
                  <LastState Value="4" RealAddress="1C7001C0"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>5209</ID>
                  <Description>"ADD"</Description>
                  <LastState Value="10" RealAddress="1C7001C8"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>5652</ID>
              <Description>"Pollution"</Description>
              <Options moHideChildren="1"/>
              <LastState RealAddress="1C7501C0"/>
              <Color>FF0000</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>ColonyPollutionProduced</Address>
              <Offsets>
                <Offset>1C0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>5653</ID>
                  <Description>"DIV/MUL depend on cleaning state"</Description>
                  <LastState Value="4" RealAddress="1C7501C0"/>
                  <Color>000000</Color>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>4752</ID>
          <Description>"CivilazationBonus"</Description>
          <Options moHideChildren="1"/>
          <LastState RealAddress="00000000"/>
          <Color>FF0000</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pIndependentCiv</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>4753</ID>
              <Description>"ShipSpaceMultiplier, 1 =&gt; +100%"</Description>
              <LastState Value="4" RealAddress="1C7601C0"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>CivShipSpaceMultiplier+1c0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4754</ID>
              <Description>"MiniaturizationSpaceModifier, divisor"</Description>
              <LastState Value="4" RealAddress="1C7701C0"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>CivMiniaturizationSpaceModifier+1c0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5194</ID>
              <Description>"MiniaturizationCostModifier,divisor"</Description>
              <LastState Value="4" RealAddress="1C8001C0"/>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>CivMiniaturizationCostModifier+1c0</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>546</ID>
      <Description>"[PTRs]=&gt;** Update Master of Orion Pointers &lt;ONLY CLICK when game LOADED&gt;"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
[DISABLE]

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3649</ID>
          <Description>"** Update Master of Orion Pointers &lt;ONLY CLICK when game LOADED&gt;"</Description>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}

function XP2PNS(ns)
  if type(ns)=='string' and ns:len()&gt;0 then ns=ns..'.' else ns = '' end
  return function (pn,fn,cn)
    local ok,ret = pcall(function()
--      print('p'..pn)
--      print(ns..(cn or pn)..':='..fn)
      return readPointer(readPointer('p'..pn)+MONO(ns..(cn or pn)..':='..fn))
    end)
--    if not ok then print("&gt;&gt;",tostring(ret)) end
    return ok and ret or nil
  end
end

XP2P = XP2PNS('Backend.Core')

function setUpPtrs()

  local ptrClient = readPointer(MONO'Backend.Core.Client:@self')
  writeQword('pClient',ptrClient)

  local ptrUniverse = XP2P('Client','universe')
  writeQword('pUniverse',ptrUniverse)

  writeQword('pMajorCiv',readPointer('pLocalPlayerCivilization'))

--[[
  local ptrMainGame = readPointer(MONO'MainGame:@me')
  writeQword('pMainGame',ptrMainGame)

  local ptrGameSave = readPointer(MONO'MainGame:@save')
  writeQword('pGameSave',ptrGameSave)

  local ptrCharacterPlayer = XP2P('GameSave','ch')
  writeQword('pCharacterPlayer',ptrCharacterPlayer)

  local ptrGameRes = XP2P('CharacterPlayer','_char_res','CharacterBase')
  writeQword('pGameRes',ptrGameRes)
  --]]
end

{$asm}


[ENABLE]
//define(dBStat,experience;level;cap;levelModifier)

define(NSCore,Backend.Core)
define(NSCiv1,Backend.Civilizations)
define(NSCiv2,Backend.Civilizations)

define(dPtype1,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)

globalalloc(pLocalPlayerCivilization,8)
globalalloc(pClient,8)
globalalloc(pUniverse,8)


// pPartyMemberAI



//  eval(ptrclient,$readQword(MONO'Backend.Core.Client:@self'))


  monomr(NSCore!Client,PTRs/pClient,Address=pClient,dPtype1)
//pClient:
//dq ptrclient

//  eval(ptrUniverse,$readQword(MONO'Backend.Core.Client:@self'))


  monomr(NSCore!Universe,PTRs/pUniverse,Address=pUniverse,dPtype1)

//pUniverse:
//dq ptrUniverse

  monomr(NSCore!Universe,PTRs/pUniverse,Address=pUniverse,dPtype1)


globalalloc(pMajorCiv,8)
globalalloc(pOrionCiv,8)
globalalloc(pPirateCiv,8)
globalalloc(pMonsterCiv,8)
globalalloc(pIndependentCiv,8)



  monomr(NSCiv1!MajorCivilization/NSCiv2!Civilization,PTRs/pMajorCiv,Address=pMajorCiv,dPtype1)

  monomr(NSCiv1!OrionCivilization,PTRs/pOrionCiv,Address=pOrionCiv,dPtype1)
  monomr(NSCiv1!PirateCivilization,PTRs/pPirateCiv,Address=pPirateCiv,dPtype1)
  monomr(NSCiv1!MonsterCivilization,PTRs/pMonsterCiv,Address=pMonsterCiv,dPtype1)
  monomr(NSCiv1!IndependentCivilization,PTRs/pIndependentCiv,Address=pIndependentCiv,dPtype1)








LuaRet(runOnSucceeded(setUpPtrs))

//pPartyMemberAI:
//dq ptrPartyMemberAI
{
// =m_stats   : CharacterStats


// pCharacterStats
  globalalloc(pCharacterStats,8)

//  eval(ptrPartyMemberAI,$readPointer(MONO'PartyMemberAI:'))

  monomr(CharacterStats,PTRs/pCharacterStats,Address=pCharacterStats,dPtype1)






{

// pGameSave
  globalalloc(pGameSave,8)


  monomr(GameSave,PTRs/pGameSave,Address=pGameSave,dPtype1)

// CharacterPlayer

  globalalloc(pCharacterPlayer,8)

  monomr(CharacterPlayer/CharacterBase,PTRs/pCharacterPlayer,Address=pCharacterPlayer,dPtype1)


// pGameRes
  globalalloc(pGameRes,8)


  monomr(GameRes,PTRs/pGameRes,Address=pGameRes,dPtype1)



luacall(runOnSucceeded(setUpPtrs))

{
  monomr(=BaseStat&lt;dBStat&gt;,PTRs/pBaseStats/strength)
  monomr(=BaseStat&lt;dBStat&gt;,PTRs/pBaseStats/dexterity)
  monomr(=BaseStat&lt;dBStat&gt;,PTRs/pBaseStats/intelligence)
  monomr(=BaseStat&lt;dBStat&gt;,PTRs/pBaseStats/charisma)
  monomr(=BaseStat&lt;dBStat&gt;,PTRs/pBaseStats/perception)
//  monomr(=BaseStat,PTRs/pBaseStats/strength)


// BehaviourStats
  globalalloc(pBehaviourStats,8)

  monomr(BehaviourStats,PTRs/pBehaviourStats,Address=pBehaviourStats,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)

define(dBehv,value;max_value)
//;increase_interval;increaseIntervalMultiplier;increase_amount;stat_increase_threshold/stat_decrease_threshold/stat_change_min/stat_change_max/stat_change_interval)

  monomr(=BehaviourStat&lt;dBehv&gt;,PTRs/pBehaviourStats/fatigue)
  monomr(=BehaviourStat&lt;dBehv&gt;,PTRs/pBehaviourStats/dirtiness)
  monomr(=BehaviourStat&lt;dBehv&gt;,PTRs/pBehaviourStats/hunger)
  monomr(=BehaviourStat&lt;dBehv&gt;,PTRs/pBehaviourStats/thirst)
  monomr(=BehaviourStat&lt;dBehv&gt;,PTRs/pBehaviourStats/toilet)
  monomr(=BehaviourStat&lt;dBehv&gt;,PTRs/pBehaviourStats/stress)

  monomr(=TraumaStat&lt;m_value;m_maxValue;m_locked&gt;,PTRs/pBehaviourStats/trauma)
  monomr(=LoyaltyStat&lt;m_value;m_maxValue&gt;,PTRs/pBehaviourStats/loyalty)


// FamilyMember
  globalalloc(pFamilyMember,8)

  monomr(FamilyMember/BaseCharacter(m_firstName;m_lastName;base_stats;stats;m_traits),PTRs/pFamilyMember,Address=pFamilyMember,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)

// InventoryManager
  globalalloc(pInventoryManager,8)

  monomr(InventoryManager,PTRs/pInventoryManager,Address=pInventoryManager,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)
  eval(gInventoryManager,$MONO'InventoryManager::InitialiseInventory')
  eval(iInventoryManager,$readInteger(MONO'InventoryManager:@m_theInstance') or 0)
  pInventoryManager:
  dd iInventoryManager

// EncounterManager
  globalalloc(pEncounterManager,8)

  monomr(EncounterManager,PTRs/pEncounterManager,Address=pEncounterManager,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)
  eval(gEncounterManager,$MONO'EncounterManager::StartTrade')
  eval(iEncounterManager,$readInteger(MONO'EncounterManager:@m_theInstance') or 0)
  pEncounterManager:
  dd iEncounterManager

// FamilyManager
  globalalloc(pFamilyManager,8)

  monomr(FamilyManager,PTRs/pFamilyManager,Address=pFamilyManager,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)
  eval(gFamilyManager,$MONO'FamilyManager::OnNewDay')
  eval(iFamilyManager,$readInteger(MONO'FamilyManager:@m_theInstance') or 0)
  pFamilyManager:
  dd iFamilyManager


// CraftingManager
  globalalloc(pCraftingManager,8)

  monomr(CraftingManager,PTRs/pCraftingManager,Address=pCraftingManager,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)
  eval(gCraftingManager,$MONO'CraftingManager::get_Instance')
  eval(iCraftingManager,$readInteger(MONO'CraftingManager:@m_theInstance') or 0)
  pCraftingManager:
  dd iCraftingManager



// CraftingManager+Recipe
  globalalloc(pCraftingRecipe,8)

  monomr(CraftingManager+Recipe,PTRs/pCraftingRecipe,Address=pCraftingRecipe,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)

  monomr(CraftingManager+Recipe+Ingredient,PTRs/pCraftingRecipe/=Input/0,Address=+10,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)
  monomr(CraftingManager+Recipe+Ingredient,PTRs/pCraftingRecipe/=Input/1,Address=+14,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)
  monomr(CraftingManager+Recipe+Ingredient,PTRs/pCraftingRecipe/=Input/2,Address=+18,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)
  monomr(CraftingManager+Recipe+Ingredient,PTRs/pCraftingRecipe/=Input/3,Address=+1c,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)
  monomr(CraftingManager+Recipe+Ingredient,PTRs/pCraftingRecipe/=Input/4,Address=+20,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)

// CraftingManager+Recipe+Ingredient
//  globalalloc(pRecipeIngredient,8)

//  monomr(CraftingManager+Recipe+Ingredient,PTRs/pRecipeIngredient,Address=pRecipeIngredient,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)


// CraftingManager+Recipe
  globalalloc(pIllnessState,8)

  monomr(IllnessState,PTRs/pIllnessState,Address=pIllnessState,OffsetCount=1,Offset.0=0, Type=vtString,String.Size=0,Options=&lt;moHideChildren&gt;,Color=0xff0000)

  monomr(Illness_Radiation/Illness_Base,PTRs/pIllnessState/radiation)
  monomr(Illness_Malnourishment/Illness_Base,PTRs/pIllnessState/malnourishment)
  monomr(Illness_Infection/Illness_Base,PTRs/pIllnessState/infection)
  monomr(Illness_FoodPoisoning/Illness_Base,PTRs/pIllnessState/foodPoisoning)
  monomr(Illness_Bleeding/Illness_Base,PTRs/pIllnessState/bleeding)
  monomr(Illness_Suffocation/Illness_Base,PTRs/pIllnessState/suffocation)





  {
CraftingManager
CraftingManager+Recipe
CraftingManager+Recipe+Ingredient
}

{

  eval(gBaseStat,$MONO'BaseStat::get_NormalizedExp')
  eval(sBaseStat,$MONO'BaseStat::get_NormalizedExp')


  eval(Fu,$MONO'FamilyManager::UpdateManager')
  eval(FM,$MONO'FamilyManager:@m_theInstance')
  eval(Fb,$MONO'FamilyManager:=familyMembers')
  eval(nm,$MONO'BaseCharacter:=avatarSpriteName')
  eval(hp,$MONO'BaseCharacter:=m_health')

  eval(IM,$MONO'InventoryManager:@m_theInstance')

  eval(fn,$MONO'BaseCharacter:=m_firstName')



  eval(cx,$MONO'FamilyMember:=catatonicDurationMax')

  eval(Ml,$MONO'FamilyManager:=m_leaveStrings')
  eval(Mx,$MONO'FamilyMember:=catatonicDurationMax')


//  monoMR(FamilyManager,monoMRTest/Base,Type=vtString,String.Size=0,Address=FM,OffsetCount=1,Offset.0=0)
//  monoMR(FamilyMember/BaseCharacter,monoMRTest/Base/&lt;=familyMembers&gt;,Type=vtString,String.Size=0,Address=+Fb,OffsetCount=1,Offset.0=0)
//  monoMR(FamilyMember,monoMRTest/Base/&lt;=leaveStrings&gt;,Type=vtString,String.Size=0,Address=+Ml,OffsetCount=1,Offset.0=0)

  monomr(InventoryManager,monoMRTest/InvManager,Type=vtString,String.Size=0,Address=[IM],Options=&lt;moHideChildren;moAllowManualCollapseAndExpand;moManualExpandCollapse&gt;)
  monomr(FamilyMember/BaseCharacter(m_firstName;m_lastName;base_stats;stats;m_traits)&lt;m_avatarSprite;avatarSpriteName&gt;,monoMRTest/BaseMember,Type=vtString,String.Size=0,Address=pFamilyMember,OffsetCount=1,Offset.0=0,Options=&lt;moHideChildren;moAllowManualCollapseAndExpand;moManualExpandCollapse&gt;)

  monomr(FamilyManager,monoMRTest/FamilyManager,Type=vtString,String.Size=0,Address=[FM],Options=&lt;moHideChildren;moAllowManualCollapseAndExpand;moManualExpandCollapse&gt;)

}

LuaRet(checkChildMR())

[DISABLE]


</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>599</ID>
          <Description>"========="</Description>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
0:
db 0
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4276</ID>
          <Description>"pClient"</Description>
          <Options moHideChildren="1"/>
          <LastState RealAddress="060F2C40"/>
          <Color>FF0000</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pClient</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries/>
        </CheatEntry>
        <CheatEntry>
          <ID>4293</ID>
          <Description>"pUniverse"</Description>
          <Options moHideChildren="1"/>
          <LastState RealAddress="1F2C6CF0"/>
          <Color>FF0000</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pUniverse</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries/>
        </CheatEntry>
        <CheatEntry>
          <ID>4421</ID>
          <Description>"pMajorCiv"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pMajorCiv</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries/>
        </CheatEntry>
        <CheatEntry>
          <ID>4610</ID>
          <Description>"pOrionCiv"</Description>
          <Options moHideChildren="1"/>
          <LastState RealAddress="00000000"/>
          <Color>FF0000</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pOrionCiv</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries/>
        </CheatEntry>
        <CheatEntry>
          <ID>4615</ID>
          <Description>"pPirateCiv"</Description>
          <Options moHideChildren="1"/>
          <LastState RealAddress="00000000"/>
          <Color>FF0000</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pPirateCiv</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries/>
        </CheatEntry>
        <CheatEntry>
          <ID>4643</ID>
          <Description>"pMonsterCiv"</Description>
          <Options moHideChildren="1"/>
          <LastState RealAddress="00000000"/>
          <Color>FF0000</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pMonsterCiv</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries/>
        </CheatEntry>
        <CheatEntry>
          <ID>4648</ID>
          <Description>"pIndependentCiv"</Description>
          <Options moHideChildren="1"/>
          <LastState RealAddress="00000000"/>
          <Color>FF0000</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pIndependentCiv</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries/>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6091</ID>
      <Description>"IGNORE"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>5657</ID>
          <Description>"event IncreasePop"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:ON
0:off
</DropDownList>
          <LastState Value="1" RealAddress="7FFF4280"/>
          <Color>000000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>evtIncPop</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>__</Name>
      <Address>7FFF0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pLocalPlayerCivilization</Name>
      <Address>7FFF4100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pClient</Name>
      <Address>7FFF4110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUniverse</Name>
      <Address>7FFF4120</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMajorCiv</Name>
      <Address>7FFF4290</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pOrionCiv</Name>
      <Address>7FFF42A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPirateCiv</Name>
      <Address>7FFF42B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonsterCiv</Name>
      <Address>7FFF42C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pIndependentCiv</Name>
      <Address>7FFF42D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>getLocalPlayerCivilization</Name>
      <Address>7FFF4000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>checkResearchComponent</Name>
      <Address>7FFF4130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>checkSettlement</Name>
      <Address>7FFF4170</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>checkFleet</Name>
      <Address>7FFF41B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>checkShip</Name>
      <Address>7FFF41F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>checkShipBlueprint</Name>
      <Address>7FFF4230</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>evtTerraform</Name>
      <Address>7FFF4270</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>evtIncPop</Name>
      <Address>7FFF4280</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PSIZE</Name>
      <Address>8</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>
</LuaScript>
</CheatTable>
