<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Infinite Health"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [12A637CC],(float)5000

originalcode:
//movss [esi+0C],xmm0

exit:
jmp returnhere

"prototype2engine.dll"+712CA0:
jmp newmem
returnhere:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"prototype2engine.dll"+712CA0:
movss [esi+0C],xmm0
//Alt: db F3 0F 11 46 0C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"One Hit Kill"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+34],1
jne originalcode
mov [12A637CC],(float)5000
jmp exit

originalcode:
//movss [esi+0C],xmm0
sub [esi+0C],(float)9999

exit:
jmp returnhere

"prototype2engine.dll"+712CA0:
jmp newmem
returnhere:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"prototype2engine.dll"+712CA0:
movss [esi+0C],xmm0
//Alt: db F3 0F 11 46 0C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>99</ID>
      <Description>"No Alarm"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+eax*8+00000414],0

originalcode:
//fld dword ptr [esi+eax*8+00000414]

exit:
jmp returnhere

"prototype2engine.dll"+40363B:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"prototype2engine.dll"+40363B:
fld dword ptr [esi+eax*8+00000414]
//Alt: db D9 84 C6 14 04 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Infinite Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ecx+1C],#99

originalcode:
//mov [ecx+1C],eax
cmp byte ptr [esi+14],00

exit:
jmp returnhere

"prototype2engine.dll"+1237ED:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"prototype2engine.dll"+1237ED:
mov [ecx+1C],eax
cmp byte ptr [esi+14],00
//Alt: db 89 41 1C 80 7E 14 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Experience Point"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+000001E4],#2530000

originalcode:
//mov [esi+000001E4],edx

exit:
jmp returnhere

"prototype2engine.dll"+41F51D:
jmp newmem
nop
returnhere:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"prototype2engine.dll"+41F51D:
mov [esi+000001E4],edx
//Alt: db 89 96 E4 01 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :movss [esi+0C],xmm0 _Health</Description>
      <Address>10712CA0</Address>
      <ModuleName>prototype2engine.dll</ModuleName>
      <ModuleNameOffset>712CA0</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>C8</Byte>
        <Byte>33</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4F</Byte>
        <Byte>14</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss [esi+0000041C],xmm0 _Alarm</Description>
      <Address>1009E28B</Address>
      <ModuleName>prototype2engine.dll</ModuleName>
      <ModuleNameOffset>9E28B</ModuleNameOffset>
      <Before>
        <Byte>28</Byte>
        <Byte>C2</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C3</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>1C</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>76</Byte>
        <Byte>10</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
