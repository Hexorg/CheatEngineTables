<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Nexus - The Jupiter Incident DX9 AOB script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobHullDamageUpdater,nexus_DX9.exe,D9 9A D0 02 00 00 C6 81 50 9A 00 00 01)
aobscanmodule(aobSubsystemDamageUpdater,nexus_DX9.exe,D9 9A 88 01 00 00 C6 81 1B 02 00 00 01)
aobscanmodule(aobSubsystemChargeUpdater,nexus_DX9.exe,D9 9A 84 01 00 00 5E C6 81 1C 02 00 00 01)
aobscanmodule(aobWeaponChargeReseter,nexus_DX9.exe,8B 96 40 01 00 00 89 AA 54 02 00 00)
aobscanmodule(aobMissileTaker,nexus_DX9.exe,8B 80 74 01 00 00 29 98 80 01 00 00)
aobscanmodule(aobResourceUpdater,nexus_DX9.exe,89 47 04 8B 44 24 28 8B 8B C4 00 00 00)

alloc(newmem,4096)

label(aobHullDamageUpdater_r)
registersymbol(aobHullDamageUpdater_r)

label(lblHullDamageUpdater)
label(lblHullDamageUpdaterSkip)
label(lblHullDamageUpdaterRet)

label(bEnableHullDamageFixer)
registersymbol(bEnableHullDamageFixer)

label(aobSubsystemDamageUpdater_r)
registersymbol(aobSubsystemDamageUpdater_r)

label(lblSubsystemDamageUpdater)
label(lblSubsystemDamageUpdaterSkip)
label(lblSubsystemDamageUpdaterRet)

label(bEnableSubsystemDamageFixer)
registersymbol(bEnableSubsystemDamageFixer)

label(aobSubsystemChargeUpdater_r)
registersymbol(aobSubsystemChargeUpdater_r)

label(lblSubsystemChargeUpdater)
label(lblSubsystemChargeUpdaterSkip)
label(lblSubsystemChargeUpdaterRet)

label(bEnableSubsystemChargeFixer)
registersymbol(bEnableSubsystemChargeFixer)

label(aobWeaponChargeReseter_r)
registersymbol(aobWeaponChargeReseter_r)

label(lblWeaponChargeReseter)
label(lblWeaponChargeReseterSkip)
label(lblWeaponChargeReseterRet)

label(bEnableInstantWeaponCycles)
registersymbol(bEnableInstantWeaponCycles)

label(aobMissileTaker_r)
registersymbol(aobMissileTaker_r)

label(lblMissileTaker)
label(lblMissileTakerSkip)
label(lblMissileTakerFix)
label(lblMissileTakerRet)

label(bEnableInfiniteMissiles)
registersymbol(bEnableInfiniteMissiles)

label(aobResourceUpdater_r)
registersymbol(aobResourceUpdater_r)

label(lblResourceUpdater)
label(lblResourceUpdaterSkip)
label(lblResourceUpdaterRet)

label(bEnableResourceFreezer)
registersymbol(bEnableResourceFreezer)

label(pShipPilot)
registersymbol(pShipPilot)

newmem:
bEnableResourceFreezer:
dd 0
bEnableHullDamageFixer:
dd 1
bEnableSubsystemDamageFixer:
dd 1
bEnableSubsystemChargeFixer:
dd 1
bEnableInstantWeaponCycles:
dd 0
bEnableInfiniteMissiles:
dd 1

lblHullDamageUpdater:
fstp dword ptr [edx+000002D0]
push eax
cmp dword ptr [bEnableHullDamageFixer],1
jne short lblHullDamageUpdaterSkip
mov eax,[edx+128]
cmp dword ptr [eax+8],'_Pla'
jne short lblHullDamageUpdaterSkip
mov dword ptr [edx+2D0],0
lblHullDamageUpdaterSkip:
pop eax
jmp lblHullDamageUpdaterRet

lblSubsystemDamageUpdater:
fstp dword ptr [edx+00000188]
push eax
cmp dword ptr [bEnableSubsystemDamageFixer],1
jne short lblSubsystemDamageUpdaterSkip
mov eax,[edx+EC]
mov eax,[eax+128]
cmp dword ptr [eax+8],'_Pla'
jne short lblSubsystemDamageUpdaterSkip
mov dword ptr [edx+188],0
lblSubsystemDamageUpdaterSkip:
pop eax
jmp lblSubsystemDamageUpdaterRet

lblSubsystemChargeUpdater:
fstp dword ptr [edx+00000184]
push eax
cmp dword ptr [bEnableSubsystemChargeFixer],1
jne short lblSubsystemChargeUpdaterSkip
mov eax,[edx+EC]
mov eax,[eax+128]
cmp dword ptr [eax+8],'_Pla'
jne short lblSubsystemChargeUpdaterSkip
mov eax,[esi+328]
mov dword ptr [edx+184],eax
lblSubsystemChargeUpdaterSkip:
pop eax
jmp lblSubsystemChargeUpdaterRet

lblWeaponChargeReseter:
mov edx,[esi+00000140]
mov [edx+00000254],ebp
push eax
cmp dword ptr [bEnableInstantWeaponCycles],1
jne short lblWeaponChargeReseterSkip
mov eax,[edx+174]
mov eax,[eax+EC]
mov eax,[eax+128]
cmp dword ptr [eax+8],'_Pla'
jne short lblWeaponChargeReseterSkip
mov eax,[edx+174]
mov eax,[eax+170]
mov eax,[eax+2B0]
mov dword ptr [edx+254],eax
lblWeaponChargeReseterSkip:
pop eax
jmp lblWeaponChargeReseterRet

lblMissileTaker:
mov eax,[eax+00000174]
push ecx
cmp dword ptr [bEnableInfiniteMissiles],1
jne short lblMissileTakerSkip
mov ecx,[eax+EC]
mov ecx,[ecx+128]
cmp dword ptr [ecx+8],'_Pla'
jne short lblMissileTakerSkip
mov ecx,[eax+170]
cmp dword ptr [ecx+c],'Miss'        // &lt;-- Subsystem checks start here.
je short lblMissileTakerFix         //     Add new ones as needed.
cmp dword ptr [ecx+9],'torp'
je short lblMissileTakerFix
cmp dword ptr [ecx+9],'miss'
je short lblMissileTakerFix
lblMissileTakerSkip:
pop ecx
sub [eax+00000180],ebx
jmp lblMissileTakerRet
lblMissileTakerFix:
xor ebx,ebx
jmp short lblMissileTakerSkip

lblResourceUpdater:
cmp dword ptr [bEnableResourceFreezer],1
jne short lblResourceUpdaterSkip
mov eax,edi
mov eax,[eax-60]
mov dword ptr [pShipPilot],eax
mov eax,[esp+28]
jmp lblResourceUpdaterRet
lblResourceUpdaterSkip:
mov [edi+04],eax
mov eax,[esp+28]
jmp lblResourceUpdaterRet
pShipPilot:
dd 0

aobResourceUpdater:
aobResourceUpdater_r:
jmp lblResourceUpdater
nop
nop
lblResourceUpdaterRet:

aobMissileTaker:
aobMissileTaker_r:
jmp lblMissileTaker
nop
nop
nop
nop
nop
nop
nop
lblMissileTakerRet:

aobWeaponChargeReseter:
aobWeaponChargeReseter_r:
jmp lblWeaponChargeReseter
nop
nop
nop
nop
nop
nop
nop
lblWeaponChargeReseterRet:

aobSubsystemChargeUpdater:
aobSubsystemChargeUpdater_r:
jmp lblSubsystemChargeUpdater
nop
lblSubsystemChargeUpdaterRet:

aobSubsystemDamageUpdater:
aobSubsystemDamageUpdater_r:
jmp lblSubsystemDamageUpdater
nop
lblSubsystemDamageUpdaterRet:

aobHullDamageUpdater:
aobHullDamageUpdater_r:
jmp lblHullDamageUpdater
nop
lblHullDamageUpdaterRet:

[DISABLE]
aobHullDamageUpdater_r:
db D9 9A D0 02 00 00

unregistersymbol(aobHullDamageUpdater_r)

unregistersymbol(bEnableHullDamageFixer)

aobSubsystemDamageUpdater_r:
db D9 9A 88 01 00 00

unregistersymbol(aobSubsystemDamageUpdater_r)

unregistersymbol(bEnableSubsystemDamageFixer)

aobSubsystemChargeUpdater_r:
db D9 9A 84 01 00 00

unregistersymbol(aobSubsystemChargeUpdater_r)

unregistersymbol(bEnableSubsystemChargeFixer)

aobWeaponChargeReseter_r:
db 8B 96 40 01 00 00 89 AA 54 02 00 00

unregistersymbol(aobWeaponChargeReseter_r)

unregistersymbol(bEnableInstantWeaponCycles)

aobMissileTaker_r:
db 8B 80 74 01 00 00 29 98 80 01 00 00

unregistersymbol(aobMissileTaker_r)

unregistersymbol(bEnableInfiniteMissiles)

aobResourceUpdater_r:
db 89 47 04 8B 44 24 28

unregistersymbol(aobResourceUpdater_r)

unregistersymbol(bEnableResourceFreezer)

unregistersymbol(pShipPilot)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>70</ID>
          <Description>"bEnableResourceFreezer"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableResourceFreezer</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>71</ID>
              <Description>"pShipPilot-&gt;iSkill_Military"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pShipPilot</Address>
              <Offsets>
                <Offset>15C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>72</ID>
              <Description>"pShipPilot-&gt;iSkill_Science"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pShipPilot</Address>
              <Offsets>
                <Offset>164</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>73</ID>
              <Description>"pShipPilot-&gt;iSkill_Engineering"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pShipPilot</Address>
              <Offsets>
                <Offset>160</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"bEnableHullDamageFixer"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableHullDamageFixer</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"bEnableSubsystemDamageFixer"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableSubsystemDamageFixer</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"bEnableSubsystemChargeFixer"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableSubsystemChargeFixer</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"bEnableInstantWeaponCycles"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInstantWeaponCycles</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"bEnableInfiniteMissiles"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteMissiles</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
