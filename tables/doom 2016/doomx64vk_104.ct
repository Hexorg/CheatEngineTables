<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>44</ID>
      <Description>"ENABLE (be patient, aobScan 64Bit)"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobGetPlayerPointer,DOOMx64vk.exe,48 8B 01 FF 90 30 01 00 00 48 8B 0D * * * * 0F) // should be unique
aobscanmodule(aobHPWrite,DOOMx64vk.exe,00 F3 0F 10 74 24 40 F3 0F 11 44 1E 1C) // should be unique
aobscanmodule(aobOnShotWrite,DOOMx64vk.exe,89 7B 38 89 F8) // should be unique
aobscanmodule(aobStopTimer,DOOMx64vk.exe,89 47 1C 29 5F 0C) // should be unique

alloc(newmem,1024,"DOOMx64vk.GetGameSystemInterface")

label(aobGetPlayerPointer_code)
label(aobGetPlayerPointer_return)
label(pPlayerPointer)
label(pHelperPointer)

label(aobHPWrite_code)
label(aobHPWrite_cheat)
label(aobHPWrite_exit)
label(aobHPWrite_return)

label(aobOnShotWrite_code)
label(aobOnShotWrite_exit)
label(aobOnShotWrite_return)

label(aobStopTimer_code)
label(aobStopTimer_exit)
label(aobStopTimer_return)

label(bGodmode)
label(bInfiniteAmmo)
label(bStopTimer)
label(bInfinitePoints)

registersymbol(bGodmode)
registersymbol(bInfiniteAmmo)
registersymbol(bStopTimer)
registersymbol(bInfinitePoints)

registersymbol(aobGetPlayerPointer)
registersymbol(aobHPWrite)
registersymbol(aobOnShotWrite)
registersymbol(pPlayerPointer)
registersymbol(pHelperPointer)
registersymbol(aobStopTimer)

newmem:
bGodmode:
  db 0
bInfiniteAmmo:
  db 0
bStopTimer:
  db 0
bInfinitePoints:
  db 0
pPlayerPointer:
  dq 0
pHelperPointer:
  dq 0

aobGetPlayerPointer_code:
  mov qword [pPlayerPointer],rcx // getPlayerPointer
  mov rax,[rcx] //original
  mov qword [pHelperPointer],rax // getHelperPointer
  call qword ptr [rax+00000130] //original
  jmp aobGetPlayerPointer_return

aobHPWrite_code:
  cmp byte [bGodmode],1
  jne aobHPWrite_exit
  cmp rbx,[pPlayerPointer]
  jne aobHPWrite_exit
  cmp rsi,0 //HP
  je aobHPWrite_cheat
  cmp rsi,4C //SHIELD
  je aobHPWrite_cheat
  jmp aobHPWrite_exit

aobHPWrite_cheat:
  movss xmm0,[rsi+rbx+14] // get max HP / Shield

aobHPWrite_exit:
  movss [rsi+rbx+1C],xmm0 // original (rsi+rbx = player pointer) (1C = current HP / 14 = max HP)
  jmp aobHPWrite_return

aobOnShotWrite_code:
  cmp byte [bInfiniteAmmo],1
  jne aobOnShotWrite_exit
  mov edi,eax ///get max ammo

aobOnShotWrite_exit:
  mov [rbx+38],edi //original
  mov eax,edi //original
  jmp aobOnShotWrite_return

aobStopTimer_code:
  mov [rdi+1C],eax //original
  cmp byte [bStopTimer],1
  je aobStopTimer_return

aobStopTimer_exit:
  sub [rdi+0C],ebx //original
  jmp aobStopTimer_return

// ============ INJECTS

aobGetPlayerPointer:
  jmp aobGetPlayerPointer_code
  nop
  nop
  nop
  nop
aobGetPlayerPointer_return:

aobHPWrite+07:
  jmp aobHPWrite_code
  nop
aobHPWrite_return:

aobOnShotWrite:
  jmp aobOnShotWrite_code
aobOnShotWrite_return:

aobStopTimer:
  jmp aobStopTimer_code
  nop
aobStopTimer_return:

[DISABLE]

aobGetPlayerPointer:
  db 48 8B 01 FF 90 30 01 00 00

aobHPWrite+07:
  db F3 0F 11 44 1E 1C

aobOnShotWrite:
  db 89 7B 38 89 F8

aobStopTimer:
  db 89 47 1C 29 5F 0C

unregistersymbol(aobGetPlayerPointer)
unregistersymbol(aobHPWrite)
unregistersymbol(aobOnShotWrite)
unregistersymbol(pPlayerPointer)
unregistersymbol(pHelperPointer)
unregistersymbol(aobStopTimer)

unregistersymbol(bGodmode)
unregistersymbol(bInfiniteAmmo)
unregistersymbol(bStopTimer)
unregistersymbol(bInfinitePoints)

dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Godmode (Life &amp; Shield)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
bGodmode:
  db 1
[DISABLE]
bGodmode:
  db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Infinite Ammo"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
bInfiniteAmmo:
  db 1
[DISABLE]
bInfiniteAmmo:
  db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Stop Timer (Rune Challenges)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
bStopTimer:
  db 1
[DISABLE]
bStopTimer:
  db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Weapon / Rune Challenge (Enable, select Weapon / Rune in Menu to inc. #)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(aobGetWeaponChallenge,DOOMx64.exe,41 8B 5C C3 08) // should be unique
alloc(newmem,$1000,"DOOMx64.exe"+1898B7D0)

label(code)
label(return)
label(pWeaponChallenge)
registersymbol(pWeaponChallenge)

newmem:
pWeaponChallenge:
  dq 0

code:
  lea rbx,[r11+rax*8+08] //get address to selected weapon challenge
  mov [pWeaponChallenge],rbx //save ptr
  mov rbx,0 //empty rbx
  mov ebx,[r11+rax*8+08] //original
  jmp return

aobGetWeaponChallenge:
  jmp code
return:
registersymbol(aobGetWeaponChallenge)

[DISABLE]

aobGetWeaponChallenge:
  db 41 8B 5C C3 08

unregistersymbol(aobGetWeaponChallenge)
unregistersymbol(pWeaponChallenge)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Challenge #"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pWeaponChallenge</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"Monster Kodex (Enable, select Monster in Kodex to change Kills / GloryKills)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(aobMonsterKodexKills,DOOMx64.exe,8B 84 81 6C 5C 04 00 89) // should be unique
aobscanmodule(aobMonsterKodexGloryKills,DOOMx64.exe,8B B4 88 6C 5C 04 00) // should be unique
alloc(newmem,$1000,"DOOMx64.GetGameSystemInterface")

label(aobMonsterKodexKills_code)
label(aobMonsterKodexKills_return)

label(aobMonsterKodexGloryKills_code)
label(aobMonsterKodexGloryKills_return)

label(pKills)
label(pGloryKills)

registersymbol(pKills)
registersymbol(pGloryKills)

registersymbol(aobMonsterKodexKills)
registersymbol(aobMonsterKodexGloryKills)

newmem:
pKills:
  dq 0
pGloryKills:
  dq 0

aobMonsterKodexKills_code:
  push rax
  lea rax,[rcx+rax*4+00045C6C]
  mov [pKills],rax
  pop rax
  mov eax,[rcx+rax*4+00045C6C]
  jmp aobMonsterKodexKills_return

aobMonsterKodexGloryKills_code:
  lea rsi,[rax+rcx*4+00045C6C]
  mov [pGloryKills],rsi
  xor rsi,rsi
  mov esi,[rax+rcx*4+00045C6C]
  jmp aobMonsterKodexGloryKills_return

aobMonsterKodexKills:
  jmp aobMonsterKodexKills_code
  nop
  nop
aobMonsterKodexKills_return:

aobMonsterKodexGloryKills:
  jmp aobMonsterKodexGloryKills_code
  nop
  nop
aobMonsterKodexGloryKills_return:

[DISABLE]

aobMonsterKodexKills:
  db 8B 84 81 6C 5C 04 00

aobMonsterKodexGloryKills:
  db 8B B4 88 6C 5C 04 00

unregistersymbol(aobMonsterKodexKills)
unregistersymbol(aobMonsterKodexGloryKills)
unregistersymbol(pKills)
unregistersymbol(pGloryKills)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>54</ID>
              <Description>"# of Kills"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pKills</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>55</ID>
              <Description>"# of Glory Kills"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pGloryKills</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"========== [ STATS ] =========="</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Current HP"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>pPlayerPointer</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>10</ID>
              <Description>"Max HP"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerPointer</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>17</ID>
              <Description>"Shield"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerPointer</Address>
              <Offsets>
                <Offset>68</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"Max Shield"</Description>
              <VariableType>Float</VariableType>
              <Address>pPlayerPointer</Address>
              <Offsets>
                <Offset>60</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Weapon Points"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerPointer</Address>
              <Offsets>
                <Offset>108E0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"========== [ DEBUG ] =========="</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>13</ID>
              <Description>"pPlayerPointer"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>8 Bytes</VariableType>
              <Address>pPlayerPointer</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>42</ID>
              <Description>"pHelperPointer"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>8 Bytes</VariableType>
              <Address>pHelperPointer</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"========== [ TODO ] ==========="</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>48</ID>
              <Description>"CLEAN Inifinte Armor &amp; Weapon Points"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
bInfinitePoints:
  db 1
[DISABLE]
bInfinitePoints:
  db 0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Unlimited Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(ammo,DOOMx64vk.exe,01 51 38 8B 71 38)
alloc(newmem,$1000,ammo)

label(code)
label(return)

newmem:
  cmp edx,#-1
  jle code
  add [rcx+38],edx
code:
  mov esi,[rcx+38]
  jmp return

ammo:
  jmp newmem
  nop
return:
registersymbol(ammo)

[DISABLE]
ammo:
  db 01 51 38 8B 71 38
unregistersymbol(ammo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DOOMx64.exe"+18A3A0C1

"DOOMx64.exe"+18A3A0A5: 48 89 74 24 10                                -  mov [rsp+10],rsi
"DOOMx64.exe"+18A3A0AA: 57                                            -  push rdi
"DOOMx64.exe"+18A3A0AB: 48 83 EC 20                                   -  sub rsp,20
"DOOMx64.exe"+18A3A0AF: 31 FF                                         -  xor edi,edi
"DOOMx64.exe"+18A3A0B1: 48 89 CB                                      -  mov rbx,rcx
"DOOMx64.exe"+18A3A0B4: 45 84 C0                                      -  test r8l,r8l
"DOOMx64.exe"+18A3A0B7: 74 08                                         -  je DOOMx64.exe+18A3A0C1
"DOOMx64.exe"+18A3A0B9: 39 79 38                                      -  cmp [rcx+38],edi
"DOOMx64.exe"+18A3A0BC: 7D 03                                         -  jnl DOOMx64.exe+18A3A0C1
"DOOMx64.exe"+18A3A0BE: 89 79 38                                      -  mov [rcx+38],edi
// ---------- INJECTING HERE ----------
"DOOMx64.exe"+18A3A0C1: 01 51 38                                      -  add [rcx+38],edx
"DOOMx64.exe"+18A3A0C4: 8B 71 38                                      -  mov esi,[rcx+38]
// ---------- DONE INJECTING  ----------
"DOOMx64.exe"+18A3A0C7: 45 84 C0                                      -  test r8l,r8l
"DOOMx64.exe"+18A3A0CA: 74 2A                                         -  je DOOMx64.exe+18A3A0F6
"DOOMx64.exe"+18A3A0CC: 48 8B 01                                      -  mov rax,[rcx]
"DOOMx64.exe"+18A3A0CF: FF 90 98 00 00 00                             -  call qword ptr [rax+00000098]
"DOOMx64.exe"+18A3A0D5: 85 F6                                         -  test esi,esi
"DOOMx64.exe"+18A3A0D7: 78 07                                         -  js DOOMx64.exe+18A3A0E0
"DOOMx64.exe"+18A3A0D9: 89 F7                                         -  mov edi,esi
"DOOMx64.exe"+18A3A0DB: 39 C6                                         -  cmp esi,eax
"DOOMx64.exe"+18A3A0DD: 0F 4F F8                                      -  cmovg edi,eax
"DOOMx64.exe"+18A3A0E0: 89 7B 38                                      -  mov [rbx+38],edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>157</ID>
      <Description>"Unlimited Chainsaw Only"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(ammo2,DOOMx64vk.exe,01 51 38 8B 71 38)
alloc(newmem,$1000,ammo2)

label(code)
label(return)

newmem:
  cmp [rcx+EC],'Fuel'
  jne @f
  cmp edx,#-1
  jle code
@@:
  add [rcx+38],edx
code:
  mov esi,[rcx+38]
  jmp return

ammo2:
  jmp newmem
  nop
return:
registersymbol(ammo2)

[DISABLE]
ammo2:
  db 01 51 38 8B 71 38
unregistersymbol(ammo2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DOOMx64.exe"+18A3A0C1

"DOOMx64.exe"+18A3A0A5: 48 89 74 24 10                                -  mov [rsp+10],rsi
"DOOMx64.exe"+18A3A0AA: 57                                            -  push rdi
"DOOMx64.exe"+18A3A0AB: 48 83 EC 20                                   -  sub rsp,20
"DOOMx64.exe"+18A3A0AF: 31 FF                                         -  xor edi,edi
"DOOMx64.exe"+18A3A0B1: 48 89 CB                                      -  mov rbx,rcx
"DOOMx64.exe"+18A3A0B4: 45 84 C0                                      -  test r8l,r8l
"DOOMx64.exe"+18A3A0B7: 74 08                                         -  je DOOMx64.exe+18A3A0C1
"DOOMx64.exe"+18A3A0B9: 39 79 38                                      -  cmp [rcx+38],edi
"DOOMx64.exe"+18A3A0BC: 7D 03                                         -  jnl DOOMx64.exe+18A3A0C1
"DOOMx64.exe"+18A3A0BE: 89 79 38                                      -  mov [rcx+38],edi
// ---------- INJECTING HERE ----------
"DOOMx64.exe"+18A3A0C1: 01 51 38                                      -  add [rcx+38],edx
"DOOMx64.exe"+18A3A0C4: 8B 71 38                                      -  mov esi,[rcx+38]
// ---------- DONE INJECTING  ----------
"DOOMx64.exe"+18A3A0C7: 45 84 C0                                      -  test r8l,r8l
"DOOMx64.exe"+18A3A0CA: 74 2A                                         -  je DOOMx64.exe+18A3A0F6
"DOOMx64.exe"+18A3A0CC: 48 8B 01                                      -  mov rax,[rcx]
"DOOMx64.exe"+18A3A0CF: FF 90 98 00 00 00                             -  call qword ptr [rax+00000098]
"DOOMx64.exe"+18A3A0D5: 85 F6                                         -  test esi,esi
"DOOMx64.exe"+18A3A0D7: 78 07                                         -  js DOOMx64.exe+18A3A0E0
"DOOMx64.exe"+18A3A0D9: 89 F7                                         -  mov edi,esi
"DOOMx64.exe"+18A3A0DB: 39 C6                                         -  cmp esi,eax
"DOOMx64.exe"+18A3A0DD: 0F 4F F8                                      -  cmovg edi,eax
"DOOMx64.exe"+18A3A0E0: 89 7B 38                                      -  mov [rbx+38],edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>105</ID>
      <Description>"Unlimited Grenades"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(grenades,DOOMx64vk.exe,01 75 06 FF 8F ?? ?? ?? ?? 48 8B 05)
alloc(grenades_bkp,6)

grenades_bkp:
  readmem(grenades+03,6)

grenades+03:
  db 90 90 90 90 90 90

registersymbol(grenades)
registersymbol(grenades_bkp)

[DISABLE]
grenades+03:
  readmem(grenades_bkp,6)
unregistersymbol(grenades)
unregistersymbol(grenades_bkp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DOOMx64.exe"+189796B6

"DOOMx64.exe"+1897968A: 48 8B 05 67 00 91 EA     -  mov rax,[DOOMx64.exe+32896F8]
"DOOMx64.exe"+18979691: 48 8D 49 08              -  lea rcx,[rcx+08]
"DOOMx64.exe"+18979695: 48 89 41 F8              -  mov [rcx-08],rax
"DOOMx64.exe"+18979699: 48 FF CA                 -  dec rdx
"DOOMx64.exe"+1897969C: 75 EC                    -  jne DOOMx64.exe+1897968A
"DOOMx64.exe"+1897969E: 48 8B 84 24 90 00 00 00  -  mov rax,[rsp+00000090]
"DOOMx64.exe"+189796A6: 4A 89 04 83              -  mov [rbx+r8*4],rax
"DOOMx64.exe"+189796AA: 83 3D 9F 30 96 EA 00     -  cmp dword ptr [DOOMx64.exe+32DC750],00
"DOOMx64.exe"+189796B1: 40 B5 01                 -  mov bpl,01
"DOOMx64.exe"+189796B4: 75 06                    -  jne DOOMx64.exe+189796BC
// ---------- INJECTING HERE ----------
"DOOMx64.exe"+189796B6: FF 8F 00 BE 00 00        -  dec [rdi+0000BE00]
// ---------- DONE INJECTING  ----------
"DOOMx64.exe"+189796BC: 48 8B 05 AD 30 71 EA     -  mov rax,[DOOMx64.exe+308C770]
"DOOMx64.exe"+189796C3: 48 8B 8F 20 C7 03 00     -  mov rcx,[rdi+0003C720]
"DOOMx64.exe"+189796CA: 48 8D 94 24 90 00 00 00  -  lea rdx,[rsp+00000090]
"DOOMx64.exe"+189796D2: 41 B8 01 00 00 00        -  mov r8d,00000001
"DOOMx64.exe"+189796D8: 66 0F 6E 40 10           -  movd xmm0,[rax+10]
"DOOMx64.exe"+189796DD: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"DOOMx64.exe"+189796E0: F3 0F 59 81 60 06 00 00  -  mulss xmm0,[rcx+00000660]
"DOOMx64.exe"+189796E8: 48 8B 0D C1 1D 86 EA     -  mov rcx,[DOOMx64.exe+31DB4B0]
"DOOMx64.exe"+189796EF: 48 8B 01                 -  mov rax,[rcx]
"DOOMx64.exe"+189796F2: F3 0F 2C D8              -  cvttss2si ebx,xmm0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>143</ID>
      <Description>"Unlimited Double Jump"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(jump,DOOMx64vk.exe,0F 4C C1 FE 83)
jump:
  db 90 31 C0
registersymbol(jump)

[DISABLE]
jump:
  db 0F 4C C1
unregistersymbol(jump)

{
// ORIGINAL CODE - INJECTION POINT: "DOOMx64.exe"+18293EDD

"DOOMx64.exe"+18293EA3: F3 0F 11 8B E0 1A 00 00  -  movss [rbx+00001AE0],xmm1
"DOOMx64.exe"+18293EAB: F3 0F 10 05 0D 97 F5 EA  -  movss xmm0,[DOOMx64.exe+31ED5C0]
"DOOMx64.exe"+18293EB3: F3 0F 11 83 E4 1A 00 00  -  movss [rbx+00001AE4],xmm0
"DOOMx64.exe"+18293EBB: 8B 83 D0 1D 00 00        -  mov eax,[rbx+00001DD0]
"DOOMx64.exe"+18293EC1: 44 0F 28 7C 24 70        -  movaps xmm15,[rsp+70]
"DOOMx64.exe"+18293EC7: B9 0F A2 47 C3           -  mov ecx,C347A20F
"DOOMx64.exe"+18293ECC: 8D 89 F3 5D B8 3C        -  lea ecx,[rcx+3CB85DF3]
"DOOMx64.exe"+18293ED2: FF C0                    -  inc eax
"DOOMx64.exe"+18293ED4: C6 83 E0 1D 00 00 00     -  mov byte ptr [rbx+00001DE0],00
"DOOMx64.exe"+18293EDB: 39 C8                    -  cmp eax,ecx
// ---------- INJECTING HERE ----------
"DOOMx64.exe"+18293EDD: 0F 4C C1                 -  cmovl eax,ecx
"DOOMx64.exe"+18293EE0: FE 83 85 20 00 00        -  inc byte ptr [rbx+00002085]
// ---------- DONE INJECTING  ----------
"DOOMx64.exe"+18293EE6: 89 83 D0 1D 00 00        -  mov [rbx+00001DD0],eax
"DOOMx64.exe"+18293EEC: 83 3D 2D 82 F5 EA 00     -  cmp dword ptr [DOOMx64.exe+31EC120],00
"DOOMx64.exe"+18293EF3: 0F 84 53 01 00 00        -  je DOOMx64.exe+1829404C
"DOOMx64.exe"+18293EF9: 83 3D 60 84 F5 EA 00     -  cmp dword ptr [DOOMx64.exe+31EC360],00
"DOOMx64.exe"+18293F00: 0F 84 46 01 00 00        -  je DOOMx64.exe+1829404C
"DOOMx64.exe"+18293F06: F3 0F 10 83 B8 1A 00 00  -  movss xmm0,[rbx+00001AB8]
"DOOMx64.exe"+18293F0E: F3 0F 10 8B BC 1A 00 00  -  movss xmm1,[rbx+00001ABC]
"DOOMx64.exe"+18293F16: 48 89 BC 24 18 01 00 00  -  mov [rsp+00000118],rdi
"DOOMx64.exe"+18293F1E: F3 0F 11 44 24 60        -  movss [rsp+60],xmm0
"DOOMx64.exe"+18293F24: F3 0F 10 83 C0 1A 00 00  -  movss xmm0,[rbx+00001AC0]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>82</ID>
      <Description>"Ignore Weapon Animation"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(rapid_fire,DOOMx64vk.exe,F3 0F 2C F8 89 F8)
rapid_fire:
  db 31 FF 90 90
registersymbol(rapid_fire)

[DISABLE]
rapid_fire:
  db F3 0F 2C F8
unregistersymbol(rapid_fire)

{
// ORIGINAL CODE - INJECTION POINT: "DOOMx64.exe"+18A2F532

"DOOMx64.exe"+18A2F50A: E8 D1 50 73 FF           -  call DOOMx64.exe+181645E0
"DOOMx64.exe"+18A2F50F: 66 0F 6E F7              -  movd xmm6,edi
"DOOMx64.exe"+18A2F513: 48 89 C1                 -  mov rcx,rax
"DOOMx64.exe"+18A2F516: 48 8B 10                 -  mov rdx,[rax]
"DOOMx64.exe"+18A2F519: 0F 5B F6                 -  cvtdq2ps xmm6,xmm6
"DOOMx64.exe"+18A2F51C: FF 92 A8 04 00 00        -  call qword ptr [rdx+000004A8]
"DOOMx64.exe"+18A2F522: 0F 28 CE                 -  movaps xmm1,xmm6
"DOOMx64.exe"+18A2F525: 48 89 C1                 -  mov rcx,rax
"DOOMx64.exe"+18A2F528: E8 E3 E1 F7 FF           -  call DOOMx64.exe+189AD710
"DOOMx64.exe"+18A2F52D: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
// ---------- INJECTING HERE ----------
"DOOMx64.exe"+18A2F532: F3 0F 2C F8              -  cvttss2si edi,xmm0
"DOOMx64.exe"+18A2F536: 89 F8                    -  mov eax,edi
// ---------- DONE INJECTING  ----------
"DOOMx64.exe"+18A2F538: 48 8B 7C 24 58           -  mov rdi,[rsp+58]
"DOOMx64.exe"+18A2F53D: E9 AA FE FF FF           -  jmp DOOMx64.exe+18A2F3EC
"DOOMx64.exe"+18A2F542: 00 31                    -  add [rcx],dh
"DOOMx64.exe"+18A2F544: C0 48 83 C4              -  ror byte ptr [rax-7D],-3C
"DOOMx64.exe"+18A2F548: 38 5D 5B                 -  cmp [rbp+5B],bl
"DOOMx64.exe"+18A2F54B: C3                       -  ret 
"DOOMx64.exe"+18A2F54C: CC                       -  int 3 
"DOOMx64.exe"+18A2F54D: CC                       -  int 3 
"DOOMx64.exe"+18A2F54E: CC                       -  int 3 
"DOOMx64.exe"+18A2F54F: CC                       -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>93</ID>
      <Description>"Instant Weapon Charge"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(instant_charge,DOOMx64vk.exe,8B 08 45 0F B6 F4 89)
instant_charge:
  db 31 C9
registersymbol(instant_charge)

[DISABLE]
instant_charge:
  db 8B 08
unregistersymbol(instant_charge)

{
// ORIGINAL CODE - INJECTION POINT: "DOOMx64.exe"+18A4A62E

"DOOMx64.exe"+18A4A605: 85 C0                 -  test eax,eax
"DOOMx64.exe"+18A4A607: 78 07                 -  js DOOMx64.exe+18A4A610
"DOOMx64.exe"+18A4A609: 44 89 BF 34 17 00 00  -  mov [rdi+00001734],r15d
"DOOMx64.exe"+18A4A610: 48 8B 0D 99 0E 79 EA  -  mov rcx,[DOOMx64.exe+31DB4B0]
"DOOMx64.exe"+18A4A617: 48 8D 55 67           -  lea rdx,[rbp+67]
"DOOMx64.exe"+18A4A61B: 45 89 E0              -  mov r8d,r12d
"DOOMx64.exe"+18A4A61E: 48 8B 01              -  mov rax,[rcx]
"DOOMx64.exe"+18A4A621: FF 90 00 08 00 00     -  call qword ptr [rax+00000800]
"DOOMx64.exe"+18A4A627: 48 8D 55 67           -  lea rdx,[rbp+67]
"DOOMx64.exe"+18A4A62B: 45 89 E0              -  mov r8d,r12d
// ---------- INJECTING HERE ----------
"DOOMx64.exe"+18A4A62E: 8B 08                 -  mov ecx,[rax]
"DOOMx64.exe"+18A4A630: 45 0F B6 F4           -  movzx r14d,r12l
// ---------- DONE INJECTING  ----------
"DOOMx64.exe"+18A4A634: 89 8F B8 16 00 00     -  mov [rdi+000016B8],ecx
"DOOMx64.exe"+18A4A63A: 44 89 BF 94 16 00 00  -  mov [rdi+00001694],r15d
"DOOMx64.exe"+18A4A641: 48 8B 0D 68 0E 79 EA  -  mov rcx,[DOOMx64.exe+31DB4B0]
"DOOMx64.exe"+18A4A648: 48 8B 01              -  mov rax,[rcx]
"DOOMx64.exe"+18A4A64B: FF 90 00 08 00 00     -  call qword ptr [rax+00000800]
"DOOMx64.exe"+18A4A651: 48 8D 97 4C 08 00 00  -  lea rdx,[rdi+0000084C]
"DOOMx64.exe"+18A4A658: 8B 30                 -  mov esi,[rax]
"DOOMx64.exe"+18A4A65A: 8B 02                 -  mov eax,[rdx]
"DOOMx64.exe"+18A4A65C: 39 87 48 08 00 00     -  cmp [rdi+00000848],eax
"DOOMx64.exe"+18A4A662: 74 0C                 -  je DOOMx64.exe+18A4A670
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>152</ID>
      <Description>"Armor Upgrades Pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(armor_upgrade,DOOMx64vk.exe,41 89 C0 48 8D 15 ?? ?? ?? ?? 48 8D 4C 24 60 E8 ?? ?? ?? ?? 48 89 C2 48 89 D9)
alloc(newmem,$1000,armor_upgrade)

label(code)
label(return)
label(armor_upgrade_ptr)

newmem:

code:
  push rcx
  mov rcx,armor_upgrade_ptr
  pop qword ptr [rcx]
  lea rcx,[rsp+60]
  jmp return

armor_upgrade_ptr:
  dq 0

armor_upgrade+A:
  jmp code
return:
registersymbol(armor_upgrade)
registersymbol(armor_upgrade_ptr)

[DISABLE]
armor_upgrade+A:
  db 48 8D 4C 24 60
unregistersymbol(armor_upgrade)
unregistersymbol(armor_upgrade_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DOOMx64.exe"+18F7492E

"DOOMx64.exe"+18F74904: 48 8D 4C 24 40              -  lea rcx,[rsp+40]
"DOOMx64.exe"+18F74909: E8 52 7A 17 FF              -  call DOOMx64.exe+180EC360
"DOOMx64.exe"+18F7490E: 48 85 DB                    -  test rbx,rbx
"DOOMx64.exe"+18F74911: 74 30                       -  je DOOMx64.exe+18F74943
"DOOMx64.exe"+18F74913: 48 8B 8F B0 31 05 00        -  mov rcx,[rdi+000531B0]
"DOOMx64.exe"+18F7491A: 48 85 C9                    -  test rcx,rcx
"DOOMx64.exe"+18F7491D: 74 24                       -  je DOOMx64.exe+18F74943
"DOOMx64.exe"+18F7491F: E8 AC 73 84 FF              -  call DOOMx64.exe+187BBCD0
"DOOMx64.exe"+18F74924: 41 89 C0                    -  mov r8d,eax
"DOOMx64.exe"+18F74927: 48 8D 15 D6 C1 CA E8        -  lea rdx,[DOOMx64.exe+1C20B04]
// ---------- INJECTING HERE ----------
"DOOMx64.exe"+18F7492E: 48 8D 4C 24 60              -  lea rcx,[rsp+60]
// ---------- DONE INJECTING  ----------
"DOOMx64.exe"+18F74933: E8 48 9B 14 FF              -  call DOOMx64.exe+180BE480
"DOOMx64.exe"+18F74938: 48 89 C2                    -  mov rdx,rax
"DOOMx64.exe"+18F7493B: 48 89 D9                    -  mov rcx,rbx
"DOOMx64.exe"+18F7493E: E8 DD C0 1A FF              -  call DOOMx64.exe+18120A20
"DOOMx64.exe"+18F74943: 48 8B 8C 24 60 40 00 00     -  mov rcx,[rsp+00004060]
"DOOMx64.exe"+18F7494B: 48 31 E1                    -  xor rcx,rsp
"DOOMx64.exe"+18F7494E: E8 AD D3 AB 00              -  call DOOMx64.exe+19A31D00
"DOOMx64.exe"+18F74953: 4C 8D 9C 24 70 40 00 00     -  lea r11,[rsp+00004070]
"DOOMx64.exe"+18F7495B: 49 8B 5B 28                 -  mov rbx,[r11+28]
"DOOMx64.exe"+18F7495F: 49 8B 6B 30                 -  mov rbp,[r11+30]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>153</ID>
          <Description>"Armor Upgrades"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>armor_upgrade_ptr</Address>
          <Offsets>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>184</ID>
      <Description>"No Heat For Chaingun"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOMx64vk.exe
  Version: 
  Date   : 2016-07-21
  Author : Dark

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ChainGunHeat,DOOMx64vk.exe,F3 41 0F 11 8E E8 14 00 00 49 8B 06) // should be unique
alloc(newmem,$1000,"DOOMx64vk.exe"+1A48A667)

label(code)
label(return)

newmem:

code:
//  movss [r14+000014E8],xmm1
  jmp return

ChainGunHeat:
  jmp code
  nop
  nop
  nop
  nop
return:
registersymbol(ChainGunHeat)

[DISABLE]

ChainGunHeat:
  db F3 41 0F 11 8E E8 14 00 00

unregistersymbol(ChainGunHeat)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DOOMx64vk.exe"+1A48A667

"DOOMx64vk.exe"+1A48A639: 0F 28 C7                       -  movaps xmm0,xmm7
"DOOMx64vk.exe"+1A48A63C: F3 41 0F 5C 86 E8 14 00 00     -  subss xmm0,[r14+000014E8]
"DOOMx64vk.exe"+1A48A645: F3 0F 59 C0                    -  mulss xmm0,xmm0
"DOOMx64vk.exe"+1A48A649: F3 0F 59 F0                    -  mulss xmm6,xmm0
"DOOMx64vk.exe"+1A48A64D: 41 0F 2F F3                    -  comiss xmm6,xmm11
"DOOMx64vk.exe"+1A48A651: 76 58                          -  jna DOOMx64vk.exe+1A48A6AB
"DOOMx64vk.exe"+1A48A653: F3 41 0F 58 B6 E8 14 00 00     -  addss xmm6,[r14+000014E8]
"DOOMx64vk.exe"+1A48A65C: F3 0F 10 C7                    -  movss xmm0,xmm7
"DOOMx64vk.exe"+1A48A660: 0F 28 CE                       -  movaps xmm1,xmm6
"DOOMx64vk.exe"+1A48A663: F3 0F 5D CF                    -  minss xmm1,xmm7
// ---------- INJECTING HERE ----------
"DOOMx64vk.exe"+1A48A667: F3 41 0F 11 8E E8 14 00 00     -  movss [r14+000014E8],xmm1
// ---------- DONE INJECTING  ----------
"DOOMx64vk.exe"+1A48A670: 49 8B 06                       -  mov rax,[r14]
"DOOMx64vk.exe"+1A48A673: 41 8B 97 38 02 00 00           -  mov edx,[r15+00000238]
"DOOMx64vk.exe"+1A48A67A: 4C 89 F1                       -  mov rcx,r14
"DOOMx64vk.exe"+1A48A67D: FF 90 30 04 00 00              -  call qword ptr [rax+00000430]
"DOOMx64vk.exe"+1A48A683: 01 C0                          -  add eax,eax
"DOOMx64vk.exe"+1A48A685: 41 8B 8E F0 14 00 00           -  mov ecx,[r14+000014F0]
"DOOMx64vk.exe"+1A48A68C: 39 C1                          -  cmp ecx,eax
"DOOMx64vk.exe"+1A48A68E: 0F 4F C1                       -  cmovg eax,ecx
"DOOMx64vk.exe"+1A48A691: 41 89 86 F0 14 00 00           -  mov [r14+000014F0],eax
"DOOMx64vk.exe"+1A48A698: 41 8B 8D B0 04 00 00           -  mov ecx,[r13+000004B0]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>175</ID>
      <Description>"Run Speed (500)"</Description>
      <VariableType>Float</VariableType>
      <Address>DOOMx64vk.exe+4ACE564</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>176</ID>
      <Description>"Walk Speed (190)"</Description>
      <VariableType>Float</VariableType>
      <Address>DOOMx64vk.exe+4ACE174</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>181</ID>
      <Description>"Jump Height (72)"</Description>
      <VariableType>Float</VariableType>
      <Address>DOOMx64vk.exe+4ACDBD4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>180</ID>
      <Description>"Double Jump Height (1066)"</Description>
      <VariableType>Float</VariableType>
      <Address>DOOMx64vk.exe+4ACB7D4</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>007C0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Health</Name>
      <Address>15890E4FE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pKills</Name>
      <Address>1629F0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGloryKills</Name>
      <Address>1629F0008</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMonsterKodexKills</Name>
      <Address>158329681</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMonsterKodexGloryKills</Name>
      <Address>1583296A2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pWeaponChallenge</Name>
      <Address>15E260000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobGetWeaponChallenge</Name>
      <Address>15898B7D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pickup_health</Name>
      <Address>1588F86E2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pickup_ammo</Name>
      <Address>15869DC3A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TimerAOB</Name>
      <Address>1587CDF9F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player</Name>
      <Address>15890A780</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player_ptr</Name>
      <Address>13DD40025</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player_bkp</Name>
      <Address>13DD4000F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cooldown</Name>
      <Address>158BEA824</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jump</Name>
      <Address>159CF579B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Ammo</Name>
      <Address>15A49C9A1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bGodmode</Name>
      <Address>13FFD0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfiniteAmmo</Name>
      <Address>13FFD0001</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bStopTimer</Name>
      <Address>13FFD0002</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfinitePoints</Name>
      <Address>13FFD0003</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobGetPlayerPointer</Name>
      <Address>15A377A24</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobHPWrite</Name>
      <Address>159EA5645</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobOnShotWrite</Name>
      <Address>15A49C9C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayerPointer</Name>
      <Address>13FFD0004</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHelperPointer</Name>
      <Address>13FFD000C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobStopTimer</Name>
      <Address>15A22F4DD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>grenades</Name>
      <Address>15A3DCB3D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>instant_charge</Name>
      <Address>15A4AFBA8</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
