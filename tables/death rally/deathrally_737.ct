<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Infinite Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(ammostart, 8B 84 9E 70 1D 00 00 85 C0 7E 08 48 89 84 9E 70 1D 00 00)
label(ammostartreplace)
registersymbol(ammostartreplace)

ammostart+C:
ammostartreplace:
//mov [esi+ebx*4+00001D70],eax // original opcode
nop
nop
nop
nop
nop
nop
nop

[DISABLE]

ammostartreplace:
mov [esi+ebx*4+00001D70],eax

unregistersymbol(ammostart)
unregistersymbol(ammostartreplace)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Infinite Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
// aobscans
aobscan(HealthReader, F3 0F 10 80 78 01 00 00 EB 4F F3 0F 10 80 54 01 00 00 F3 0F 58 80 50 01 00 00 F3 0F 58 80 4C 01 00 00 F3 0F 58 80 48 01 00 00 F3 0F 58 80 44 01 00 00 F3 0F 58 80 40 01 00 00 F3 0F 58 80 3C 01 00 00 F3 0F 58 80 38 01 00 00 F3 0F 11 80 78 01 00 00 C6 80 7C 01 00 00 01 F3 0F 10 1D 04 92 54 00)
aobscan(HealthWriter, 80 B8 7C 01 00 00 00 74 09 F3 0F 10 80 78 01 00 00 C3 F3 0F 10 80 54 01 00 00 F3 0F 58 80 50 01 00 00 F3 0F 58 80 4C 01 00 00 F3 0F 58 80 48 01 00 00 F3 0F 58 80 44 01 00 00 F3 0F 58 80 40 01 00 00 F3 0F 58 80 3C 01 00 00 F3 0F 58 80 38 01 00 00 F3 0F 11 80 78 01 00 00 C6 80 7C 01 00 00 01 C3)

//places
label(HealthReaderStart)
label(HealthReaderEnd)
label(HealthReaderHook)
registersymbol(HealthReaderStart)

label(HealthWriterStart)
label(HealthWriterEnd)
label(HealthWriterHook)
label(HealthWriterNormal)
registersymbol(HealthWriterStart)

//variables
label(PlayerPtr)

// code buffer
alloc(HealthCodeBuffer,512)

HealthReader:
HealthReaderStart:
jmp HealthReaderHook
nop
nop
nop
HealthReaderEnd:

HealthWriter:
cmp byte ptr [eax+0000017C],00
je short HealthWriterStart
movss xmm0,[eax+00000178]
ret
HealthWriterStart:
jmp HealthWriterHook
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
HealthWriterEnd:
mov byte ptr [eax+0000017C],01
ret

HealthCodeBuffer:

HealthReaderHook:
mov dword [PlayerPtr], eax // pointer to player's structure
movss xmm0,[eax+00000178] // original code
jmp HealthReaderEnd

HealthWriterHook:
cmp eax,dword [PlayerPtr]
jne short HealthWriterNormal
mov dword [eax+00000154],(float)0.125 // part 8
mov dword [eax+00000150],(float)0.125 // part 7
mov dword [eax+0000014C],(float)0.125 // part 6
mov dword [eax+00000148],(float)0.125 // part 5
mov dword [eax+00000144],(float)0.125 // part 4
mov dword [eax+00000140],(float)0.125 // part 3
mov dword [eax+0000013C],(float)0.125 // part 2
mov dword [eax+00000138],(float)0.125 // part 1
mov dword [eax+00000178],(float)1.0 // total health
jmp HealthWriterEnd

HealthWriterNormal:
movss xmm0,[eax+00000154] // part 8
addss xmm0,[eax+00000150] // part 7
addss xmm0,[eax+0000014C] // part 6
addss xmm0,[eax+00000148] // part 5
addss xmm0,[eax+00000144] // part 4
addss xmm0,[eax+00000140] // part 3
addss xmm0,[eax+0000013C] // part 2
addss xmm0,[eax+00000138] // part 1
movss [eax+00000178],xmm0 // total health
jmp HealthWriterEnd

PlayerPtr:
dd 0

[DISABLE]
HealthReaderStart:
movss xmm0,[eax+00000178]

HealthWriterStart:
movss xmm0,[eax+00000154] // part 8
addss xmm0,[eax+00000150] // part 7
addss xmm0,[eax+0000014C] // part 6
addss xmm0,[eax+00000148] // part 5
addss xmm0,[eax+00000144] // part 4
addss xmm0,[eax+00000140] // part 3
addss xmm0,[eax+0000013C] // part 2
addss xmm0,[eax+00000138] // part 1
movss [eax+00000178],xmm0 // total health

dealloc(HealthCodeBuffer)
unregistersymbol(HealthWriter)
unregistersymbol(HealthWriterStart)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Infinite Nitro"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(nitrowritestart, D9 81 C8 91 41 00 48 D9 9F 84 02 00 00 89 87 98 1D 00 00)
aobscan(NitroReader, 8B 5C 24 44 8B 8B 98 1D 00 00 F3 0F 10 44 24 60)

label(nitrowritestartreplace)
registersymbol(nitrowritestartreplace)

label(NitroReaderStart)
label(NitroReaderEnd)
label(NitroReaderNormal)
registersymbol(NitroReaderStart)

alloc(NitroReaderHook,512)

nitrowritestart+D:
nitrowritestartreplace:
//mov [edi+00001D98],eax // original opcode
nop
nop
nop
nop
nop
nop

NitroReader+4:
NitroReaderStart:
jmp NitroReaderHook
nop
NitroReaderEnd:

NitroReaderHook:
cmp [ebx+00001D98], 0
jne short NitroReaderNormal
mov dword [ebx+00001D98], 1
NitroReaderNormal:
mov ecx,[ebx+00001D98]
jmp NitroReaderEnd

[DISABLE]

nitrowritestartreplace:
mov [edi+00001D98],eax

NitroReaderStart:
mov ecx,[ebx+00001D98]

unregistersymbol(nitrowritestart)
unregistersymbol(nitrowritestartreplace)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Infinite Cash"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(cashstart, F3 0F 10 05 84 37 59 00 F3 0F 5C C7 F3 0F 11 05 84 37 59 00 C6 45 0B 00 83 F8 06)
label(cashstartreplace)
registersymbol(cashstartreplace)

cashstart+C:
cashstartreplace:
//movss [DeathRally.exe+193784],xmm0 // original opcode
nop
nop
nop
nop
nop
nop
nop
nop


[DISABLE]

cashstartreplace:
movss [DeathRally.exe+193784],xmm0

unregistersymbol(cashstart)
unregistersymbol(cashstartreplace)

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of movss [DeathRally.exe+193784],xmm0</Description>
      <Address>00438C91</Address>
      <ModuleName>DeathRally.exe</ModuleName>
      <ModuleNameOffset>38C91</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>C7</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>05</Byte>
        <Byte>84</Byte>
        <Byte>37</Byte>
        <Byte>59</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C6</Byte>
        <Byte>45</Byte>
        <Byte>0B</Byte>
        <Byte>00</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>ammostartreplace</Name>
      <Address>004DED58</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HealthReaderStart</Name>
      <Address>004CB954</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HealthWriterStart</Name>
      <Address>004A9692</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cashstartreplace</Name>
      <Address>00438C91</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nitrowritestartreplace</Name>
      <Address>004DFFEF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NitroReaderStart</Name>
      <Address>004CD5C7</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
