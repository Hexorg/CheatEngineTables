<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>11302</ID>
      <Description>"                       Must Have Weapon Hand Gun Already or SMG Already to See Unlock"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>DD1AFF</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>11300</ID>
      <Description>"Unlock Rattlesnake &amp; Goldenfang &amp; Harbinger"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ROTTR.exe
  Version:
  Date   : 2016-02-24
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Unlock_Gold,ROTTR.exe,0F B6 44 08 08) // should be unique
alloc(newmem,$1000,"ROTTR.exe"+38AAE83)

label(code)
label(return)


newmem:

code:
  mov [ecx+2b1],1
  mov [ecx+2b4],1
  mov [ecx+2b6],1
  mov [ecx+2b7],1
  movzx eax,byte ptr [rax+rcx+08]
  jmp return

Unlock_Gold:
  jmp code
return:
registersymbol(Unlock_Gold)

[DISABLE]

Unlock_Gold:
  db 0F B6 44 08 08

unregistersymbol(Unlock_Gold)
dealloc(newmem)



{
// ORIGINAL CODE - INJECTION POINT: "ROTTR.exe"+38AAE83

"ROTTR.exe"+38AAE6B: CC                                            -  int 3
"ROTTR.exe"+38AAE6C: CC                                            -  int 3
"ROTTR.exe"+38AAE6D: CC                                            -  int 3
"ROTTR.exe"+38AAE6E: CC                                            -  int 3
"ROTTR.exe"+38AAE6F: CC                                            -  int 3
"ROTTR.exe"+38AAE70: CC                                            -  int 3
"ROTTR.exe"+38AAE71: CC                                            -  int 3
"ROTTR.exe"+38AAE72: CC                                            -  int 3
"ROTTR.exe"+38AAE73: 66 66 66 66 2E 0F 1F 84 00 00 00 00 00        -  nop cs:[rax+rax+00000000]
"ROTTR.exe"+38AAE80: 0F B7 C2                                      -  movzx eax,dx
// ---------- INJECTING HERE ----------
"ROTTR.exe"+38AAE83: 0F B6 44 08 08                                -  movzx eax,byte ptr [rax+rcx+08]
// ---------- DONE INJECTING  ----------
"ROTTR.exe"+38AAE88: C3                                            -  ret
"ROTTR.exe"+38AAE89: 6B CC CC                                      -  imul ecx,esp,-34
"ROTTR.exe"+38AAE8C: CC                                            -  int 3
"ROTTR.exe"+38AAE8D: CC                                            -  int 3
"ROTTR.exe"+38AAE8E: CC                                            -  int 3
"ROTTR.exe"+38AAE8F: CC                                            -  int 3
"ROTTR.exe"+38AAE90: CC                                            -  int 3
"ROTTR.exe"+38AAE91: 66 66 66 66 66 66 2E 0F 1F 84 00 00 00 00 00  -  nop cs:[rax+rax+00000000]
"ROTTR.exe"+38AAEA0: 48 89 5C 24 08                                -  mov [rsp+08],rbx
"ROTTR.exe"+38AAEA5: 57                                            -  push rdi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11301</ID>
      <Description>"Relock Rattlesnake &amp; Goldenfang &amp; Harbinger"</Description>
      <LastState/>
      <Color>C0C0C0</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ROTTR.exe
  Version:
  Date   : 2016-02-24
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Unlock_Gold,ROTTR.exe,0F B6 44 08 08) // should be unique
alloc(newmem,$1000,"ROTTR.exe"+38AAE83)

label(code)
label(return)


newmem:

code:
  mov [ecx+2b1],0
  mov [ecx+2b4],0
  mov [ecx+2b6],0
  mov [ecx+2b7],0
  movzx eax,byte ptr [rax+rcx+08]
  jmp return

Unlock_Gold:
  jmp code
return:
registersymbol(Unlock_Gold)

[DISABLE]

Unlock_Gold:
  db 0F B6 44 08 08

unregistersymbol(Unlock_Gold)
dealloc(newmem)



{
// ORIGINAL CODE - INJECTION POINT: "ROTTR.exe"+38AAE83

"ROTTR.exe"+38AAE6B: CC                                            -  int 3
"ROTTR.exe"+38AAE6C: CC                                            -  int 3
"ROTTR.exe"+38AAE6D: CC                                            -  int 3
"ROTTR.exe"+38AAE6E: CC                                            -  int 3
"ROTTR.exe"+38AAE6F: CC                                            -  int 3
"ROTTR.exe"+38AAE70: CC                                            -  int 3
"ROTTR.exe"+38AAE71: CC                                            -  int 3
"ROTTR.exe"+38AAE72: CC                                            -  int 3
"ROTTR.exe"+38AAE73: 66 66 66 66 2E 0F 1F 84 00 00 00 00 00        -  nop cs:[rax+rax+00000000]
"ROTTR.exe"+38AAE80: 0F B7 C2                                      -  movzx eax,dx
// ---------- INJECTING HERE ----------
"ROTTR.exe"+38AAE83: 0F B6 44 08 08                                -  movzx eax,byte ptr [rax+rcx+08]
// ---------- DONE INJECTING  ----------
"ROTTR.exe"+38AAE88: C3                                            -  ret
"ROTTR.exe"+38AAE89: 6B CC CC                                      -  imul ecx,esp,-34
"ROTTR.exe"+38AAE8C: CC                                            -  int 3
"ROTTR.exe"+38AAE8D: CC                                            -  int 3
"ROTTR.exe"+38AAE8E: CC                                            -  int 3
"ROTTR.exe"+38AAE8F: CC                                            -  int 3
"ROTTR.exe"+38AAE90: CC                                            -  int 3
"ROTTR.exe"+38AAE91: 66 66 66 66 66 66 2E 0F 1F 84 00 00 00 00 00  -  nop cs:[rax+rax+00000000]
"ROTTR.exe"+38AAEA0: 48 89 5C 24 08                                -  mov [rsp+08],rbx
"ROTTR.exe"+38AAEA5: 57                                            -  push rdi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11303</ID>
      <Description>"Temp unlock"</Description>
      <LastState Activated="1"/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ROTTR.exe
  Version:
  Date   : 2016-02-24
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Unlock_Gold,ROTTR.exe,0F B6 44 08 08) // should be unique
alloc(newmem,$1000,"ROTTR.exe"+38AAE83)

label(code)
label(return)


newmem:

code:
  mov [ecx+2b6],1
  mov [ecx+2b7],1
  movzx eax,byte ptr [rax+rcx+08]
  jmp return

Unlock_Gold:
  jmp code
return:
registersymbol(Unlock_Gold)

[DISABLE]

Unlock_Gold:
  db 0F B6 44 08 08

unregistersymbol(Unlock_Gold)
dealloc(newmem)



{
// ORIGINAL CODE - INJECTION POINT: "ROTTR.exe"+38AAE83

"ROTTR.exe"+38AAE6B: CC                                            -  int 3
"ROTTR.exe"+38AAE6C: CC                                            -  int 3
"ROTTR.exe"+38AAE6D: CC                                            -  int 3
"ROTTR.exe"+38AAE6E: CC                                            -  int 3
"ROTTR.exe"+38AAE6F: CC                                            -  int 3
"ROTTR.exe"+38AAE70: CC                                            -  int 3
"ROTTR.exe"+38AAE71: CC                                            -  int 3
"ROTTR.exe"+38AAE72: CC                                            -  int 3
"ROTTR.exe"+38AAE73: 66 66 66 66 2E 0F 1F 84 00 00 00 00 00        -  nop cs:[rax+rax+00000000]
"ROTTR.exe"+38AAE80: 0F B7 C2                                      -  movzx eax,dx
// ---------- INJECTING HERE ----------
"ROTTR.exe"+38AAE83: 0F B6 44 08 08                                -  movzx eax,byte ptr [rax+rcx+08]
// ---------- DONE INJECTING  ----------
"ROTTR.exe"+38AAE88: C3                                            -  ret
"ROTTR.exe"+38AAE89: 6B CC CC                                      -  imul ecx,esp,-34
"ROTTR.exe"+38AAE8C: CC                                            -  int 3
"ROTTR.exe"+38AAE8D: CC                                            -  int 3
"ROTTR.exe"+38AAE8E: CC                                            -  int 3
"ROTTR.exe"+38AAE8F: CC                                            -  int 3
"ROTTR.exe"+38AAE90: CC                                            -  int 3
"ROTTR.exe"+38AAE91: 66 66 66 66 66 66 2E 0F 1F 84 00 00 00 00 00  -  nop cs:[rax+rax+00000000]
"ROTTR.exe"+38AAEA0: 48 89 5C 24 08                                -  mov [rsp+08],rbx
"ROTTR.exe"+38AAEA5: 57                                            -  push rdi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11304</ID>
      <Description>"Temp relock"</Description>
      <LastState/>
      <Color>C0C0C0</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : ROTTR.exe
  Version:
  Date   : 2016-02-24
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Unlock_Gold,ROTTR.exe,0F B6 44 08 08) // should be unique
alloc(newmem,$1000,"ROTTR.exe"+38AAE83)

label(code)
label(return)


newmem:

code:
  mov [ecx+2b6],0
  mov [ecx+2b7],0
  movzx eax,byte ptr [rax+rcx+08]
  jmp return

Unlock_Gold:
  jmp code
return:
registersymbol(Unlock_Gold)

[DISABLE]

Unlock_Gold:
  db 0F B6 44 08 08

unregistersymbol(Unlock_Gold)
dealloc(newmem)



{
// ORIGINAL CODE - INJECTION POINT: "ROTTR.exe"+38AAE83

"ROTTR.exe"+38AAE6B: CC                                            -  int 3
"ROTTR.exe"+38AAE6C: CC                                            -  int 3
"ROTTR.exe"+38AAE6D: CC                                            -  int 3
"ROTTR.exe"+38AAE6E: CC                                            -  int 3
"ROTTR.exe"+38AAE6F: CC                                            -  int 3
"ROTTR.exe"+38AAE70: CC                                            -  int 3
"ROTTR.exe"+38AAE71: CC                                            -  int 3
"ROTTR.exe"+38AAE72: CC                                            -  int 3
"ROTTR.exe"+38AAE73: 66 66 66 66 2E 0F 1F 84 00 00 00 00 00        -  nop cs:[rax+rax+00000000]
"ROTTR.exe"+38AAE80: 0F B7 C2                                      -  movzx eax,dx
// ---------- INJECTING HERE ----------
"ROTTR.exe"+38AAE83: 0F B6 44 08 08                                -  movzx eax,byte ptr [rax+rcx+08]
// ---------- DONE INJECTING  ----------
"ROTTR.exe"+38AAE88: C3                                            -  ret
"ROTTR.exe"+38AAE89: 6B CC CC                                      -  imul ecx,esp,-34
"ROTTR.exe"+38AAE8C: CC                                            -  int 3
"ROTTR.exe"+38AAE8D: CC                                            -  int 3
"ROTTR.exe"+38AAE8E: CC                                            -  int 3
"ROTTR.exe"+38AAE8F: CC                                            -  int 3
"ROTTR.exe"+38AAE90: CC                                            -  int 3
"ROTTR.exe"+38AAE91: 66 66 66 66 66 66 2E 0F 1F 84 00 00 00 00 00  -  nop cs:[rax+rax+00000000]
"ROTTR.exe"+38AAEA0: 48 89 5C 24 08                                -  mov [rsp+08],rbx
"ROTTR.exe"+38AAEA5: 57                                            -  push rdi
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>BAck_Input_ret</Name>
      <Address>7F92B51DB50</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Unlock_Gold</Name>
      <Address> 1438AAE83</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
