<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"gold"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>"mono.dll"+001F32C4</Address>
      <Offsets>
        <Offset>30</Offset>
        <Offset>58</Offset>
        <Offset>0</Offset>
        <Offset>11C</Offset>
        <Offset>50</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"cheats"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
    Pixel Piracy 0.5.0.6 Cheat Engine table by V3
    release r1 (30.3.2014)
    all rights reserved
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(inject_point)
label(bHealth)
label(bHunger)
label(bMorale)
label(hunger)
label(morale)
label(TP_min)
label(TP_min_exit)
label(iTP_min)

registersymbol(inject_point)
registersymbol(bHealth)
registersymbol(bHunger)
registersymbol(bMorale)
registersymbol(iTP_min)

// following unique code is executed every frame
{
    F2 0F2C C8            - cvttsd2si ecx,xmm0
    3B C1                 - cmp eax,ecx
    7D 25                 - jnl +25
}
// -2F upper is our inject point
aobscan(inject_point_aob,F2 0F 2C C8 3B C1 7D 25)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
    cmp dword ptr [eax+00000084],0  // our crew member?
    jne originalcode                // no - skip him

    cmp [bHealth],0                 // health flag clear?
    je hunger                       // yes - do not max health
    fld dword ptr [eax+0000008C]    // get max health value
    fstp dword ptr [eax+00000088]   // set max health value

hunger:
    cmp [bHunger],0                 // hunger flag clear?
    je morale                       // yes - do not max hunger
    fld dword ptr [eax+00000094]    // get max hunger value
    fstp dword ptr [eax+00000090]   // set max hunger value

morale:
    cmp [bMorale],0                 // morale flag clear?
    je TP_min                       // yes - do not max morale
    fld dword ptr [eax+0000009C]    // get max morale value
    fstp dword ptr [eax+00000098]   // set max morale value

TP_min:
    push ebx
    mov ebx,[iTP_min]
    cmp dword ptr [eax+000000c0],ebx   // actual TP greater than preset minimum?
    jg TP_min_exit                     // yes - skip setting minimum TP
    mov dword ptr [eax+000000c0],ebx   // set minimum TP
TP_min_exit:
    pop ebx

originalcode:
    fld dword ptr [eax+00000088]

exit:
    jmp returnhere

bHealth:
    dd 1          // health flag set by default

bHunger:
    dd 1          // hunger flag set by default

bMorale:
    dd 1          // morale flag set by default

iTP_min:
    dd #25        // minimum TP is set to 25 by default

inject_point_aob-2F:
inject_point:
    jmp newmem
    nop
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat

inject_point:
    fld dword ptr [eax+00000088]
//Alt: db D9 80 88 00 00 00

unregistersymbol(inject_point)
unregistersymbol(bHealth)
unregistersymbol(bHunger)
unregistersymbol(bMorale)
unregistersymbol(iTP_min)

dealloc(newmem)



// code injection original environment for future references
{
230B1129 - E8 AA7B34E2           - call 053F8CD8
230B112E - 83 C4 10              - add esp,10
230B1131 - 85 C0                 - test eax,eax
230B1133 - 75 07                 - jne 230B113C
230B1135 - C7 47 20 00000000     - mov [edi+20],00000000
230B113C - D9 87 D8000000        - fld dword ptr [edi+000000D8]
230B1142 - D9E8                  - fld1
230B1144 - DEC1                  - faddp
230B1146 - DD 9D C0F1FFFF        - fstp qword ptr [ebp-00000E40]
230B114C - E8 13302CE2           - call 05374164
230B1151 - DD 85 C0F1FFFF        - fld qword ptr [ebp-00000E40]
230B1157 - D9C9                  - fxch st(1)
230B1159 - DFF1                  - fcomip st(0),st(1)
230B115B - DDD8                  - fstp st(0)
230B115D - 76 1A                 - jna 230B1179
230B115F - E8 00302CE2           - call 05374164
230B1164 - D9 05 38BCB30D        - fld dword ptr [0DB3BC38] : [(float)0.5000]
230B116A - DEC1                  - faddp
230B116C - D9 9F D8000000        - fstp dword ptr [edi+000000D8]
230B1172 - C7 47 20 00000000     - mov [edi+20],00000000
230B1179 - 8B 47 50              - mov eax,[edi+50]
230B117C - 83 EC 0C              - sub esp,0C
230B117F - 50                    - push eax
230B1180 - 39 00                 - cmp [eax],eax
230B1182 - E8 A9732CE2           - call 05378530
230B1187 - 83 C4 10              - add esp,10
230B118A - 83 EC 08              - sub esp,08
230B118D - 68 A02D991F           - push 1F992DA0 : [04EE7A24]
230B1192 - 50                    - push eax
230B1193 - 39 00                 - cmp [eax],eax
230B1195 - E8 F6733AE2           - call 05458590
230B119A - 83 C4 10              - add esp,10
230B119D - 8B F0                 - mov esi,eax
230B119F - 8B 47 30              - mov eax,[edi+30]
230B11A2 - D9 80 88000000        - fld dword ptr [eax+00000088] // inject_point
230B11A8 - DD 9D C0FBFFFF        - fstp qword ptr [ebp-00000440]
230B11AE - F2 0F10 85 C0FBFFFF   - movsd xmm0,[ebp-00000440]
230B11B6 - F2 0F2C C0            - cvttsd2si eax,xmm0
230B11BA - 8B 4F 30              - mov ecx,[edi+30]
230B11BD - D9 81 8C000000        - fld dword ptr [ecx+0000008C]
230B11C3 - DD 9D C0FBFFFF        - fstp qword ptr [ebp-00000440]
230B11C9 - F2 0F10 85 C0FBFFFF   - movsd xmm0,[ebp-00000440]
230B11D1 - F2 0F2C C8            - cvttsd2si ecx,xmm0           // unique AOB scan
230B11D5 - 3B C1                 - cmp eax,ecx
230B11D7 - 7D 25                 - jnl 230B11FE
230B11D9 - 8B 47 30              - mov eax,[edi+30]
230B11DC - 8B 80 84000000        - mov eax,[eax+00000084]
230B11E2 - 85 C0                 - test eax,eax
230B11E4 - 0F84 25010000         - je 230B130F
230B11EA - 8B 47 30              - mov eax,[edi+30]
230B11ED - 8B 80 84000000        - mov eax,[eax+00000084]
230B11F3 - 3D 02000000           - cmp eax,00000002
230B11F8 - 0F84 11010000         - je 230B130F
230B11FE - 83 EC 0C              - sub esp,0C
230B1201 - 56                    - push esi
230B1202 - 39 36                 - cmp [esi],esi
230B1204 - E8 27732CE2           - call 05378530
230B1209 - 83 C4 10              - add esp,10
230B120C - 89 85 BCF1FFFF        - mov [ebp-00000E44],eax
230B1212 - 83 EC 0C              - sub esp,0C
230B1215 - 56                    - push esi
230B1216 - 39 36                 - cmp [esi],esi
230B1218 - E8 13732CE2           - call 05378530
230B121D - 83 C4 10              - add esp,10
230B1220 - 8D 8D D0F2FFFF        - lea ecx,[ebp-00000D30]
230B1226 - 83 EC 08              - sub esp,08
230B1229 - 50                    - push eax
230B122A - 51                    - push ecx
230B122B - 39 00                 - cmp [eax],eax
230B122D - E8 96732CE2           - call 053785C8
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>32</ID>
          <Description>"health"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bHealth</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"hunger"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bHunger</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"morale"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bMorale</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"minimum TP"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iTP_min</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>globals</Name>
      <Address>16890000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_MONEY</Name>
      <Address>006CBFBC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_BUILD</Name>
      <Address>005F905F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_RESEARCH</Name>
      <Address>0059B9AA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iMIN_TP</Name>
      <Address>0A7E0089</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Pixel Piracy 0.5.0.6 Cheat Engine table by V3
release r1 (30.3.2014)
all rights reserved
- gold
- cheats:
    - health
    - hunger
    - morale
    - minimum TP
- Script activation (cheats check box) enables health, hunger, morale and
  minimum TP cheats.
- Non-zero value next to cheat option enable that cheat option (default).
- Entering zero next to cheat option disables that particular cheat option.
- Option "minimum TP" sets each crew member's TP to specified value
  (default 25) if crew member does not already have higher or equal TP amount.
  Option is only active in non-paused main game screen, so re-entering
  "YOUR CREW" screen regenerates minimum TP for entire crew.
</Comments>
</CheatTable>
