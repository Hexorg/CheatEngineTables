<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"[X] &lt;== Warhammer 40000 Sanctus Reach v1.0.2 Steam (by mmlek) Script v2.0"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Warhammer 40000 Sanctus Reach
 Game Version  : 1.0.2
 Game Sponsor  : mmlek
 Process Name  : SanctusReach.EXE
 Relevant Info : 32bits/TBS
 Script Version: 2.0
 CE Version    : 6.6
 Release date  : 06-Feb-2017
 Author        : Recifense
 History:
 20-Jan-2017: First Release
 26-Jan-2017: Added XP (s2.0)
 26-Jan-2017: Release for version 1.0.1 (patch by ALI213)
 06-Feb-2017: Release for version 1.0.2 steam (script update by mmlek)
 Features:
 - Force Points
 - Unlimited Move Points
 - Unlimited Action Points
 - Full Morale
 - God Mode
 - Unlimited Reaction
 - Quick XP Level Up
 - Some Pointers
===========================================
}

//=========================================
// Checking CE version
{$lua}
  if(getCEVersion() &lt; 6.5) then
    ShowMessage('Sorry. CE version should be 6.5 or above')
  end
{$asm}

//=========================================
// Checking Selected Process
{$lua}
  if(process == nil) then
    ShowMessage('No process was selected')
  elseif (process ~= "SanctusReach.EXE") then
    ShowMessage('Error. Expected Process = SanctusReach.EXE')
  end
{$asm}

//=========================================
// Definitions
define(LUDO,"SanctusReach.EXE")
define(MOFP,SanctusReach.EXE+00158e9d) //==
define(MOUV,SanctusReach.EXE+00166285) //=#

define(MPIX,0000000b)
define(MOIX,00000014)
define(APIX,00000039)
define(RAIX,00000042)
define(H1IX,00000056)
define(H2IX,00000057)
define(H3IX,00000058)
define(H4IX,00000059)
define(HMIX,0000005A)
define(XPIX,00000075)

//=========================================
// Constants used in the script (that can be changed)
define(ctCE65,(float)6.6)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MOFP,89 8a 24 07 00 00 8b 4d d8 e8 ?? ?? ?? ?? 5e 8b e5 5d c2 08 00)
assert(MOUV,89 8c 90 94 03 00 00 ?? ?? 8b 55 08 69 d2 90 01 00 00 81 c2 ??)

//=========================================
alloc(MyCode,4096,$process)
//=========================================
// Declaration section
label(_MonForcePoints)
label(_BackMFP)
label(_ExitMFP)
label(_MonUnitValues)
label(_BackMUV)
label(_ExitMUV)

label(iEnableMFP)
label(iEnableMMP)
label(iEnableMMO)
label(iEnableMAP)
label(iEnableGMD)
label(iEnableMRA)
label(iEnableMXP)

label(pPlayer)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMFP)
registersymbol(iEnableMMP)
registersymbol(iEnableMMO)
registersymbol(iEnableMAP)
registersymbol(iEnableGMD)
registersymbol(iEnableMRA)
registersymbol(iEnableMXP)
registersymbol(pPlayer)

//=========================================
MyCode:
//=========================================
// When changing Force Points
_MonForcePoints:
 mov [pPlayer],edx

 cmp dword ptr [iEnableMFP],0
 je _ExitMFP                       // Jump if feature is disabled

 cmp ecx,[edx+00000724]
 jns _ExitMFP

 mov ecx,[edx+00000724]

_ExitMFP:
 mov [edx+00000724],ecx            // Original code (set pUnit)
 jmp _BackMFP                      // Back to main code

//=========================================
// When changing
_MonUnitValues:
 cmp byte ptr [eax+000007a8],00
 jne _ExitMUV

 cmp byte ptr [eax+000007a9],00
 jne _ExitMUV

 cmp rdx,MPIX
 je _MonUV00

 cmp rdx,MOIX
 je _MonUV01

 cmp rdx,APIX
 je _MonUV02

 cmp rdx,RAIX
 je _MonUV03

 cmp rdx,XPIX
 je _MonUV04

 cmp rdx,H1IX
 js _ExitMUV

 cmp rdx,HMIX
 jns _ExitMUV

 cmp dword ptr [iEnableGMD],0
 je _ExitMUV                       // Jump if feature is disabled

 mov [iEDX],edx
 mov edx,HMIX

 cmp ecx,[eax+edx*4+00000394]
 jns _MonUVZZ

 mov ecx,[eax+edx*4+00000394]

_MonUVZZ:
 mov edx,[iEDX]
 jmp _ExitMUV

_MonUV00:
 cmp dword ptr [iEnableMMP],0
 je _ExitMUV                       // Jump if feature is disabled

 jmp _MonUV0X

_MonUV01:
 cmp dword ptr [iEnableMMO],0
 je _ExitMUV                       // Jump if feature is disabled

 jmp _MonUV0X

_MonUV02:
 cmp dword ptr [iEnableMAP],0
 je _ExitMUV                       // Jump if feature is disabled

 jmp _MonUV0X

_MonUV03:
 cmp dword ptr [iEnableMRA],0
 je _ExitMUV                       // Jump if feature is disabled

 jmp _MonUV0X

_MonUV04:
 cmp dword ptr [iEnableMXP],0
 je _ExitMUV                       // Jump if feature is disabled

 cmp ecx,[eax+edx*4+00000394]
 js _ExitMUV

 mov ecx,#66000

 jmp _ExitMUV

_MonUV0X:
 cmp ecx,[eax+edx*4+00000394]
 jns _ExitMUV

 mov ecx,[eax+edx*4+00000394]

_ExitMUV:
 mov [eax+edx*4+00000394],ecx      // Original code (upd value)
 jmp _BackMUV                      // Back to main code

//=========================================
 db '==============================&gt;'
 db 'CE6.6 Script by Recifense 020617'
//=========================================
// Variables
iEnableMFP:
 dd 0
iEnableMMP:
 dd 0
iEnableMMO:
 dd 0
iEnableMAP:
 dd 0
iEnableGMD:
 dd 0
iEnableMRA:
 dd 0
iEnableMXP:
 dd 0
iEDX:
 dd 0
pPlayer:
 dd 0

//=========================================
// Hacking Points
MOFP:
 jmp _MonForcePoints
 nop
_BackMFP:

MOUV:
 jmp _MonUnitValues
 nop
 nop
_BackMUV:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MOFP:
// mov [edx+00000724],ecx
 db 89 8a 24 07 00 00

MOUV:
// mov [eax+edx*4+00000394],ecx
 db 89 8c 90 94 03 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMFP)
unregistersymbol(iEnableMMP)
unregistersymbol(iEnableMMO)
unregistersymbol(iEnableMAP)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMRA)
unregistersymbol(iEnableMXP)
unregistersymbol(pPlayer)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>98</ID>
          <Description>"[X] &lt;== Unlimted Force Points ----------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMFP",1)
getAddressList().getMemoryRecordByID(98).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMFP",0)
getAddressList().getMemoryRecordByID(98).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>99</ID>
          <Description>"[X] &lt;== Unlimted Move Points ----------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMMP",1)
getAddressList().getMemoryRecordByID(99).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMMP",0)
getAddressList().getMemoryRecordByID(99).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"[X] &lt;== Full Morale ----------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMMO",1)
getAddressList().getMemoryRecordByID(100).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMMO",0)
getAddressList().getMemoryRecordByID(100).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"[X] &lt;== Unlimted Action Points ---------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMAP",1)
getAddressList().getMemoryRecordByID(101).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMAP",0)
getAddressList().getMemoryRecordByID(101).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"[X] &lt;== God Mode ----------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableGMD",1)
getAddressList().getMemoryRecordByID(102).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableGMD",0)
getAddressList().getMemoryRecordByID(102).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>229</ID>
          <Description>"[X] &lt;== Unlimted ReAction Points ------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMRA",1)
getAddressList().getMemoryRecordByID(229).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMRA",0)
getAddressList().getMemoryRecordByID(229).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>230</ID>
          <Description>"[X] &lt;== Quick XP Level Up --------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMXP",1)
getAddressList().getMemoryRecordByID(230).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMXP",0)
getAddressList().getMemoryRecordByID(230).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"[X] &lt;== Table/Script Information"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
getMainForm().CommentButton.doClick()
{$ASM}

[disable]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Recifense</Name>
      <Address>20170206</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Warhammer 40000 Sanctus Reach
 Game Version  : 1.0.2
 Game Sponsor  : mmlek
 Process Name  : SanctusReach.EXE
 Relevant Info : 32bits/TBS
 Script Version: 2.0
 CE Version    : 6.6
 Release date  : 06-Feb-2017
 Author        : Recifense
 History:
 20-Jan-2017: First Release
 26-Jan-2017: Added XP (s2.0)
 26-Jan-2017: Release for version 1.0.1 (patch by ALI213)
 06-Feb-2017: Release for version 1.0.2 steam (script update by mmlek)
 Features:
 - Force Points              [1]
 - Unlimited Move Points     [2]
 - Unlimited Action Points   [3]
 - Full Morale               [4]
 - God Mode                  [5]
 - Unlimited Reaction        [6]
 - Quick XP Level Up         [7]
 - Some Pointers
===========================================
[1] It will not decrease;
[2] For human player's units;
[3] For human player's units;
[4] For human player's units;
[5] For human player's units;
[6] For human player's units;
[7] For human player's units;
===========================================
[USAGE]
 - Run CE 6.5 or greater;
 - Run the GAME;
 - Load game process "SanctusReach.EXE" via CE;
 - Load this Table;
 - Activate the first script  by clicking on its box [X];
 - Now Activate the script of each cheat you want to use;
 - Go back to the game and have fun.
===========================================
[HOTKEYS]:
- Already described at the table entries. 
===========================================
[WARNING]
- This table is meant to be used in single player games.
===========================================
[INFO]
Tested on Win10 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
