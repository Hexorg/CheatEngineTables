<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"No lose DNA"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//mov [edx+04],eax
pop ebp
ret 

exit:
jmp returnhere

"PlagueExternal.dll"+1666:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"PlagueExternal.dll"+1666:
mov [edx+04],eax
pop ebp
ret 
//Alt: db 89 42 04 5D C3
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"DNA"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>"PlagueIncEvolved.exe"+00A03478</Address>
      <Offsets>
        <Offset>C</Offset>
        <Offset>118</Offset>
        <Offset>10</Offset>
        <Offset>118</Offset>
        <Offset>1D4</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of mov [edx+04],eax</Description>
      <Address>5ADF1666</Address>
      <ModuleName>PlagueExternal.dll</ModuleName>
      <ModuleNameOffset>1666</ModuleNameOffset>
      <Before>
        <Byte>8A</Byte>
        <Byte>C4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>42</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>5D</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [edi+2C],eax</Description>
      <Address>25459EF3</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>65</Byte>
        <Byte>FC</Byte>
        <Byte>5F</Byte>
        <Byte>C9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [esi+2C],eax</Description>
      <Address>0649DB8C</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>EA</Byte>
        <Byte>8B</Byte>
        <Byte>CA</Byte>
        <Byte>0B</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>0C</Byte>
        <Byte>56</Byte>
        <Byte>E8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [esi+2C],ecx</Description>
      <Address>0649DB5F</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>1F</Byte>
        <Byte>D3</Byte>
        <Byte>E2</Byte>
        <Byte>8B</Byte>
        <Byte>CA</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>4E</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>C6</Byte>
        <Byte>45</Byte>
        <Byte>EF</Byte>
        <Byte>00</Byte>
        <Byte>3D</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [eax+2C],ecx</Description>
      <Address>0646353A</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>C8</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>65</Byte>
        <Byte>F8</Byte>
        <Byte>5F</Byte>
        <Byte>5B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [eax+2C],ecx</Description>
      <Address>253A08E2</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>C8</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>C9</Byte>
        <Byte>C3</Byte>
        <Byte>00</Byte>
        <Byte>55</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [esi+2C],00000000</Description>
      <Address>064280B4</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>30</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
        <Byte>46</Byte>
        <Byte>2C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C7</Byte>
        <Byte>46</Byte>
        <Byte>24</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
