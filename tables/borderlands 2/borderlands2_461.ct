<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>137</ID>
      <Description>"[Enable]"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>000080</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

alloc( EPhysicsHandler_Hook_0, 1024 )
registersymbol( EPhysicsHandler_Hook_0 )
label( p0 )
registersymbol( p0 )
label( p1 )
registersymbol( p1 )
label( p2 )
registersymbol( p2 )
label( back_0 )

EPhysicsHandler_Hook_0+100:
p0:
dd 0

EPhysicsHandler_Hook_0+104:
p1:
dd 0

EPhysicsHandler_Hook_0+108:
p2:
dd 0

EPhysicsHandler_Hook_0:
push ebx
mov [p1],eax
mov ebx,[eax+E0]
mov [p0],ebx
mov ebx,[eax+A4]
mov [p2],ebx
pop ebx
cmp byte ptr [eax+9C],01
jmp back_0

aobscan( dwEPhysicsHook_AOB_0, 80B8????????010F??????????F30F????????????F30F )
label( dwEPhysicsHook_0 )
registersymbol( dwEPhysicsHook_0 )
dwEPhysicsHook_AOB_0:
dwEPhysicsHook_0:
jmp EPhysicsHandler_Hook_0
db 90 90
back_0:

alloc( PlayersOnly_FreezeGFX_Hook, 1024 )
label( exit )
label( back_1 )
label( bPlayersOnly )
registersymbol( bPlayersOnly )

PlayersOnly_FreezeGFX_Hook+100:
bPlayersOnly:
dd 0

PlayersOnly_FreezeGFX_Hook:
push eax
mov eax,[esp+8]
cmp [eax-4],0040188C
pop eax
jne short exit
cmp [bPlayersOnly],1
jne short exit
mov eax,1
pop esi
ret
exit:
cmp dword ptr [esi+348],00
jmp back_1

aobscan( PlayersOnly_FreezeGFX_AOB, 83BE??????????7415F30F10??????????0F2F )
label( PlayersOnly_FreezeGFX )
registersymbol( PlayersOnly_FreezeGFX )
PlayersOnly_FreezeGFX_AOB:
PlayersOnly_FreezeGFX:
jmp PlayersOnly_FreezeGFX_Hook
db 90 90
back_1:

aobscan( GetIndex_AOB, 558BEC83EC148B4134565733FF )
label( GetIndex )
registersymbol( GetIndex )
GetIndex_AOB:
GetIndex:

aobscan( SetIndex_AOB, 558BEC5153568BF18B4614578975FC85C0 )
label( SetIndex )
registersymbol( SetIndex )
SetIndex_AOB:
SetIndex:

[DISABLE]

PlayersOnly_FreezeGFX:
cmp dword ptr [esi+348],00

dwEPhysicsHook_0:
cmp byte ptr [eax+9C],01

unregistersymbol( bPlayersOnly )
dealloc( PlayersOnly_FreezeGFX_Hook )
unregistersymbol( dwEPhysicsHook_0 )
unregistersymbol( p2 )
unregistersymbol( p1 )
unregistersymbol( p0 )
unregistersymbol( dwEPhysicsHook_0 )
unregistersymbol( EPhysicsHandler_Hook_0 )
dealloc( EPhysicsHandler_Hook_0 )

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>150</ID>
          <Description>"[Character]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>177</ID>
              <Description>"[Health]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>160</ID>
                  <Description>"Health"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>Float</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>384</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>152</ID>
                  <Description>"HealthSwitch( default = 0x5; god = 0x6 )"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>104</Offset>
                    <Offset>384</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>178</ID>
              <Description>"[Shield]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>161</ID>
                  <Description>"Shield"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>76C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>162</ID>
                  <Description>"ShieldSwitch( default = 0x5; god = 0x6 )"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>104</Offset>
                    <Offset>76C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>179</ID>
              <Description>"[Inventory]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>174</ID>
                  <Description>"Money"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>2A0</Offset>
                    <Offset>3EC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>175</ID>
                  <Description>"Eridium"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>2B4</Offset>
                    <Offset>3EC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>176</ID>
                  <Description>"Seraph Crystals"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>2C8</Offset>
                    <Offset>3EC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>180</ID>
                  <Description>"Torgue Tokens"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>2F0</Offset>
                    <Offset>3EC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>213</ID>
                  <Description>"Backpack Used"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>1D8</Offset>
                    <Offset>46C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>214</ID>
                  <Description>"Backpack Size"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>1B8</Offset>
                    <Offset>46C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>181</ID>
              <Description>"[Weapon]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>188</ID>
                  <Description>"Level"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>1E0</Offset>
                    <Offset>470</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>200</ID>
                  <Description>"Damage"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>190</ID>
                      <Description>"Calculated"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>8E8</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>191</ID>
                      <Description>"Base( higher for higher dmg )"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>8EC</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>201</ID>
                  <Description>"Accuracy"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>198</ID>
                      <Description>"Calculated"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>8D4</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>199</ID>
                      <Description>"Base( set to 0 for best accuracy )"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>8D8</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>202</ID>
                  <Description>"Fire Rate"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>194</ID>
                      <Description>"Calculated"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>8C0</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>195</ID>
                      <Description>"Base( set to 0 for fast fire rate )"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>8C4</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>203</ID>
                  <Description>"Reload Speed"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>204</ID>
                      <Description>"Calculated"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>A30</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>205</ID>
                      <Description>"Base( set to higher for fast reload )"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>A34</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>183</ID>
                  <Description>"Magazine Size"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>A0C</Offset>
                    <Offset>470</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>165</ID>
                  <Description>"Cost"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>1D0</Offset>
                    <Offset>470</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>182</ID>
                  <Description>"BulletsCurrent"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>A28</Offset>
                    <Offset>470</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>184</ID>
                      <Description>"BulletsDecAmount( default = 0x1; unlimited ammo = 0x0 )"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>9DC</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>168</ID>
                  <Description>"ClipAmmo"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>9D4</Offset>
                    <Offset>470</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>169</ID>
                      <Description>"InventoryAmmo"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>6C</Offset>
                        <Offset>9D0</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>170</ID>
                      <Description>"AmmoNoDecSwitch( default = 0x1; unlimited ammo = 0x2 )"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Byte</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>104</Offset>
                        <Offset>9D0</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>189</ID>
              <Description>"[Experience]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>208</ID>
                  <Description>"Level"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>258</Offset>
                    <Offset>3EC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>211</ID>
                  <Description>"Current XP"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>Float</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>B58</Offset>
                    <Offset>A4</Offset>
                    <Offset>3EC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>210</ID>
                  <Description>"Maximum XP"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>25C</Offset>
                    <Offset>3EC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>209</ID>
                  <Description>"Skill Points"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>274</Offset>
                    <Offset>3EC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>212</ID>
                  <Description>"Badass Tokens"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>1664</Offset>
                    <Offset>A4</Offset>
                    <Offset>3EC</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"[Scripts]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>144</ID>
              <Description>"Cheat Handler"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

alloc( KeyHandlerThread, 4096 )
registersymbol( KeyHandlerThread )
CreateThread( KeyHandlerThread )
label( Toggle )
label( Toggler )
registersymbol( Toggler )
label( KeyHandlerOff )
registersymbol( KeyHandlerOff )
label( ExitKeyHandler )
label( TogglePlayersOnly )
label( TogglePlayersOnly_exit )
label( ToggleFly )
label( bFly )
registersymbol( bFly )
label( ToggleFly_exit )
label( ToggleGhost )
label( bGhost )
registersymbol( bGhost )
label( ToggleGhost_exit )
label( ToggleGod )
label( bGod )
registersymbol( bGod )
label( ToggleGod_exit )
label( ToggleSloMo1 )
label( ToggleSloMo2 )
label( ToggleSloMo3 )
{
label( dwTable )
label( s )
label( string )
label( GetIndexes )
label( GetIndexes_exit )
label( GetIndexes_loop )
}

KeyHandlerThread+300:
Toggler:
dd 1

KeyHandlerThread+304:
KeyHandlerOff:
dd 0

KeyHandlerThread+30C:
bFly:
dd 0

KeyHandlerThread+310:
bGhost:
dd 0

KeyHandlerThread+314:
bGod:
dd 0

{
KeyHandlerThread+318:
dwTable:
dd 0

KeyHandlerThread+800:
string:
db '[Index]: %08X - %08X',0

KeyHandlerThread+900:
s:
dd 0
}

KeyHandlerThread:
push 0a
call kernel32.Sleep

cmp [KeyHandlerOff],1
je ExitKeyHandler

push 71 //F2
call GetAsyncKeyState
test ax,ax
jne Toggle

cmp [Toggler],1
jne KeyHandlerThread

push 61 //VK_NUMPAD1
call GetAsyncKeyState
test ax,ax
jne TogglePlayersOnly

push 62 //VK_NUMPAD2
call GetAsyncKeyState
test ax,ax
jne ToggleFly

push 63 //VK_NUMPAD3
call GetAsyncKeyState
test ax,ax
jne ToggleGhost

{
push 60 //VK_NUMPAD0
call GetAsyncKeyState
test ax,ax
jne GetIndexes
}

push 65 //VK_NUMPAD5
call GetAsyncKeyState
test ax,ax
jne ToggleGod

push 67 //VK_NUMPAD7
call GetAsyncKeyState
test ax,ax
jne ToggleSloMo1

push 68 //VK_NUMPAD8
call GetAsyncKeyState
test ax,ax
jne ToggleSloMo2

push 69 //VK_NUMPAD9
call GetAsyncKeyState
test ax,ax
jne ToggleSloMo3
jmp KeyHandlerThread

TogglePlayersOnly:
xor [bPlayersOnly],1
cmp [bPlayersOnly],0
je @f
mov ecx,[p0]
or dword ptr [ecx+284],200
jmp TogglePlayersOnly_exit
@@:
mov ecx,[p0]
and dword ptr [ecx+284],FFFFF1FF
TogglePlayersOnly_exit:
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleFly:
xor [bFly],1
cmp [bFly],0
je @f
push 0
push 397
mov ecx,[p2]
call GetIndex
mov ebx,[p1]
mov ecx,[ebx+A4]
mov ecx,[ecx+14]
mov [ecx+10],eax
mov [ecx+28],eax
mov byte ptr [ebx+9C],4
mov ecx,[ebx+100]
mov [ecx+1E8],(float)2.0
mov [ebx+310],(float)40.0
jmp ToggleFly_exit
@@:
push 0
push 393
mov ecx,[p2]
call GetIndex
mov ebx,[p1]
mov ecx,[ebx+A4]
mov ecx,[ecx+14]
mov [ecx+28],eax
push 0
push 64
mov ecx,[p2]
call SetIndex
mov ebx,[p1]
mov byte ptr [ebx+9C],1
mov ecx,[ebx+100]
mov [ecx+1E8],(float)0.3
mov [ebx+310],(float)1.0
ToggleFly_exit:
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleGhost:
xor [bGhost],1
cmp [bGhost],0
je @f
mov ebx,[p1]
mov byte ptr [ebx+BF],E1
jmp ToggleGhost_exit
@@:
mov ebx,[p1]
mov byte ptr [ebx+BF],D9
ToggleGhost_exit:
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleGod:
xor [bGod],1
cmp [bGod],0
je @f
mov ebx,[p2]
mov byte ptr [ebx+1A0],9B
jmp ToggleGod_exit
@@:
mov ebx,[p2]
mov byte ptr [ebx+1A0],83
ToggleGod_exit:
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleSloMo1:
mov ebx,[p0]
mov [ebx+328],(float)0.5
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleSloMo2:
mov ebx,[p0]
mov [ebx+328],(float)1.0
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ToggleSloMo3:
mov ebx,[p0]
mov [ebx+328],(float)1.5
push C8
call kernel32.Sleep
jmp KeyHandlerThread

{
GetIndexes:
mov eax,dwTable
GetIndexes_loop:
cmp [eax],0
je GetIndexes_exit
push eax // table address
mov edx,[eax]
push [edx+2C] // +2C
push edx // Index
push string
push 104 // MAX_PATH
push s // buffer
call sprintf_s
add esp,14
push s
call OutputDebugStringA
pop eax
add eax,4
jmp GetIndexes_loop
GetIndexes_exit:
push C8
call kernel32.Sleep
jmp KeyHandlerThread
}

Toggle:
xor [Toggler],1
push 96
call kernel32.Sleep
jmp KeyHandlerThread

ExitKeyHandler:
ret

[DISABLE]

KeyHandlerOff:
dd 1

unregistersymbol( bGod )
unregistersymbol( bGhost )
unregistersymbol( bFly )
unregistersymbol( KeyHandlerOff )
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>145</ID>
                  <Description>"SloMo"</Description>
                  <VariableType>Float</VariableType>
                  <Address>p0</Address>
                  <Offsets>
                    <Offset>328</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>146</ID>
                  <Description>"PlayersOnly"</Description>
                  <LastState Value="1818321747" RealAddress="29A80500"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bPlayersOnly</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>147</ID>
                  <Description>"Fly"</Description>
                  <LastState Value="907097603" RealAddress="0352030C"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bFly</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>148</ID>
                  <Description>"Ghost"</Description>
                  <LastState Value="909456931" RealAddress="03520310"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bGhost</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>246</ID>
                  <Description>"God"</Description>
                  <LastState Value="911160896" RealAddress="03520314"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bGod</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>173</ID>
              <Description>"God Mode"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

alloc( GodMode_Hook, 1024 )
label( dwStorage )
label( loop )
label( gotcha )
label( back )
label( exit )

GodMode_Hook+100:
dwStorage:
dd 0
dd 0

GodMode_Hook:
pushfd
pushad
mov edi,dwStorage
mov eax,[p1]
mov ecx,[eax+384] // get Pawn.Health
mov [edi],ecx
mov ecx,[eax+76C] // get Pawn.Shield
mov [edi+4],ecx
loop:
cmp [edi],0
je exit
mov eax,[edi]
cmp eax,esi
je gotcha
add edi,4
jmp loop
gotcha:
mov edi,[esi+D8] // get Item.Value
mov [esi+6C],edi // update Item.Current
mov [esi+104],6 // set switch so it never decreases
popad
popfd
jmp back
exit:
popad
popfd
movss xmm0,[esi+6C]
jmp back

aobscan( dwGodMode_AOB, D95DF8F30F1046??0F2E86????????0F57 )
label( dwGodMode )
registersymbol( dwGodMode )

dwGodMode_AOB+3:
dwGodMode:
jmp GodMode_Hook
back:

[DISABLE]

dwGodMode:
movss xmm0,[esi+6C]

dealloc( GodMode_Hook )
unregistersymbol( dwGodMode )
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>171</ID>
              <Description>"Unlimited Ammo"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

alloc( UnlimitedAmmo_Hook, 2048 )
label( back_0 )
label( exit_0 )
label( VariableBullets_Hook )
label( back_1 )
label( exit_1 )

UnlimitedAmmo_Hook:
pushfd
pushad
mov eax,[p1]
mov eax,[eax+470]
cmp eax,esi
jne exit_0

//********************
//** Unlimited Ammo **
//********************

mov [esi+9DC],0                        // subtract delta from magazine set to 0
mov eax,[eax+9D0]
mov [eax+104],2                        // flip ammo_decrease switch

//***********************
//** Weapon Attributes **
//***********************

mov [esi+8EC],(float)150000.0       	   // set Damage_base to 50.000
mov [esi+8D8],(float)0.05              // set Accuracy_base to 0.05
mov [esi+8C4],(float)0.05              // set FireRate_base to 0.05

//*******************
//** Remove Recoil **
//*******************

xor ecx,ecx
mov edi,[p2]
mov [edi+E0C],ecx
mov [edi+E10],ecx
mov [edi+E14],ecx
mov [edi+E18],ecx
mov [edi+E1C],ecx

exit_0:
popad
popfd
mov eax,[esi+A28]
jmp back_0

VariableBullets_Hook:
pushfd
pushad
mov ecx,[p1]
mov ecx,[ecx+470]
cmp eax,ecx
jne exit_1

//************************************************************
//** Rig stack value with 0, instead of 1 or -2 or whatever **
//************************************************************

mov [esp+2C],0

exit_1:
popad
popfd
push ebp
mov ebp,esp
push -1
jmp back_1

aobscan( dwUnlimitedAmmo_AOB, 885DFC8B86????????33C98B96????????3BC3 )
label( dwUnlimitedAmmo )
registersymbol( dwUnlimitedAmmo )

dwUnlimitedAmmo_AOB+3:
dwUnlimitedAmmo:
jmp UnlimitedAmmo_Hook
db 90
back_0:

// for variable increase/decrease bullets

aobscan( dwVariableBullets_AOB, 897D??897D??897D??8B068B55??8B80????????8D )
label( dwVariableBullets )
registersymbol( dwVariableBullets )

dwVariableBullets_AOB-2F:
dwVariableBullets:
jmp VariableBullets_Hook
back_1:

[DISABLE]

dwUnlimitedAmmo:
mov eax,[esi+A28]

dwVariableBullets:
push ebp
mov ebp,esp
push -1

unregistersymbol( dwVariableBullets )
unregistersymbol( dwUnlimitedAmmo )
dealloc( UnlimitedAmmo_Hook )
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>242</ID>
              <Description>"Day/Night Time &amp; Scale"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

alloc( DayNight_Hook, 1024 )
label( pTime )
registersymbol( pTime )
label( pScale )
registersymbol( pScale )
label( back )

DayNight_Hook+100:
pTime:
dd 0

DayNight_Hook+104:
pScale:
dd 0

DayNight_Hook:
mov [pScale],esi
mov [pTime],edi
fld dword ptr [edi+00000130]
jmp back

aobscan( dwDayNight_AOB, D987????????6A00D99E????????F30F10??????????8B )
label( dwDayNight )
registersymbol( dwDayNight )

dwDayNight_AOB:
dwDayNight:
jmp DayNight_Hook
db 90
back:

[DISABLE]

dwDayNight:
fld dword ptr [edi+00000130]

unregistersymbol( pScale )
unregistersymbol( pTime )
dealloc( DayNight_Hook)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>243</ID>
                  <Description>"DayNightMoment"</Description>
                  <VariableType>Float</VariableType>
                  <Address>pTime</Address>
                  <Offsets>
                    <Offset>130</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>244</ID>
                  <Description>"DayTimeScale"</Description>
                  <VariableType>Float</VariableType>
                  <Address>pScale</Address>
                  <Offsets>
                    <Offset>31C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>251</ID>
      <Description>"[Console] (optimized_code)"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>FF00FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>252</ID>
          <Description>"Get UE3 Pointers/Addresses"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule( GObjects_AOB, Borderlands2.exe, 8B??????????8B04??8B40??250002000033C90BC10F84 )
label( GObjects )
registersymbol( GObjects )
[GObjects_AOB+2]:
GObjects:

aobscanmodule( GNames_AOB, Borderlands2.exe, 8B0D????????833C810074 )
label( GNames )
registersymbol( GNames )
[GNames_AOB+2]:
GNames:

aobscanmodule( ProcessEvent_AOB, Borderlands2.exe, 8B7D08F787????????02040000 )
label( ProcessEvent )
registersymbol( ProcessEvent )
ProcessEvent_AOB-30:
ProcessEvent:

[DISABLE]

unregistersymbol( ProcessEvent )
unregistersymbol( GNames )
unregistersymbol( GObjects )
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>253</ID>
              <Description>"Enable Console / Patch "say" Appending"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

alloc( ConsoleHook, 64, Borderlands2.exe )
label( back )

ConsoleHook:
mov ecx,[esi+20]  // original code
cmp [esp+50],C0
jne @f
  push eax
  push ecx
  mov ecx,[ecx+24] // get Console in RGFxGameViewportClient UObject
  mov eax,[edi]
  mov [ecx+84],eax
  mov eax,[edi+28]
  mov [ecx+8C],eax
  pop ecx
  pop eax
@@:
mov ebx,[ebp-10] // original code
jmp back

// Borderlands2.exe+472BE3 - 8B 4E 20 - mov ecx,[esi+20]
// Borderlands2.exe+472BE6 - 8B 5D F0 - mov ebx,[ebp-10]

Borderlands2.exe+472BE3:
jmp ConsoleHook
nop
back:

// Borderlands2.exe+9EFB50 - 0F 84 84 00 00 00 - je Borderlands2.exe+9EFBDA

Borderlands2.exe+9EFB50:
db EB 04 90 90 90 90

[DISABLE]

Borderlands2.exe+472BE3:
mov ecx,[esi+20]
mov ebx,[ebp-10]

// Borderlands2.exe+9EFB50:
// db 0F 84 84 00 00 00

dealloc( ConsoleHook )
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>254</ID>
              <Description>"Set Hook &amp; Emulate WillowCheatManager UObject"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

alloc( pCave, 1024, Borderlands2.exe )
alloc( pObject, 64, Borderlands2.exe )
registersymbol( pObject )
label( back )

label( pWillowPlayerController )
registersymbol( pWillowPlayerController )
label( szWillowCheatManager )
label( szDefault_WillowCheatManager )
label( szNull_0 )
label( szInvalid_0 )
label( szSpace_0 )
label( szDot_0 )
label( szFunctionName_0 )

label( pCave_loop )
label( pCave_next )
label( pCave_continue )
label( pCave_exit )

label( GetName_0 )

label( GetFullName_0 )
label( GetFullName_0_null )
label( GetFullName_0_exit )

label( szFunctionName_0 )

pCave+500:
pWillowPlayerController:
dd 0
db 0,0
szWillowCheatManager:
db 'Class WillowGame.WillowCheatManager',0,0
szDefault_WillowCheatManager:
db 'WillowCheatManager WillowGame.Default__WillowCheatManager',0,0
szNull_0:
db '(null)',0,0
szInvalid_0:
db 'INVALID NAME INDEX',0,0
szSpace_0:
db 20,0,0
szDot_0:
db 2E,0,0
szFunctionName_0:
dd 0

pObject+8:
db 04 00 10 04 01 40 00 02

pCave:
mov [ebx+40],eax // original code
mov [pWillowPlayerController],eax
mov [pObject+28],eax
pushad
mov eax,GObjects
push esi
xor esi,esi
cmp [eax+4],esi
jna short pCave_exit
  push edi
  pCave_loop:
  mov ecx,[eax]
  lea ecx,[ecx+esi*4]
  cmp dword ptr [ecx],0
  je short pCave_continue
    mov edi,[ecx]
    push szWillowCheatManager         // "Class WillowGame.WillowCheatManager"
    call GetFullName_0
    push eax
    call msvcrt.strcmp
    pop ecx
    pop ecx
    test eax,eax
    jne short @f
	  mov [pObject+34],edi
      jmp short pCave_next
	@@:
    mov eax,GObjects
    mov eax,[eax]
    mov edi,[eax+esi*4]
    push szDefault_WillowCheatManager // "WillowCheatManager WillowGame.Default__WillowCheatManager"
    call GetFullName_0
    push eax
    call msvcrt.strcmp
    pop ecx
    pop ecx
    test eax,eax
    jne short @f
	  mov eax,[edi]
      mov [pObject],eax
	pCave_next:
    mov eax,GObjects
  pCave_continue:
  inc esi
  cmp esi,[eax+04]
  jb pCave_loop
mov eax,[pWillowPlayerController]
mov [eax+764],pObject
pop edi
pCave_exit:
pop esi
popad
mov eax,[ebp-50] // original code
jmp back

db CC CC

// *************
// ** GetName **
// *************

GetName_0:
mov ecx,[eax+2C]
mov eax,GNames
cmp ecx,[eax+4]
jle @f
  mov eax,szInvalid_0
  ret
@@:
mov eax,[eax]
mov eax,[eax+ecx*4]
add eax,10
ret

db CC CC

//*********************************
//********   GetFullName   ********
//*********************************

GetFullName_0:
mov eax,[edi+34]
test eax,eax
je GetFullName_0_null
  mov ecx,[edi+28]
  test ecx,ecx
  je GetFullName_0_null
    cmp dword ptr [ecx+28],0
    push esi
    je short @f
      push ebx
      call GetName_0
      push eax
      mov esi,szFunctionName_0
      push esi
      call msvcrt.strcpy
      push szSpace_0
      push esi
      call msvcrt.strcat
	  add esp,10
      mov eax,[edi+28]
      mov eax,[eax+28]
      call GetName_0
      push eax
      push esi
      call msvcrt.strcat
      mov ebx,szDot_0
      push ebx
      push esi
      call msvcrt.strcat
	  add esp,10
      mov eax,[edi+28]
      call GetName_0
      push eax
      push esi
      call msvcrt.strcat
      push ebx
      push esi
      call msvcrt.strcat
      add esp,10
      mov eax,edi
      call GetName_0
      push eax
      push esi
      call msvcrt.strcat
      pop ecx
      pop ecx
      pop ebx
      jmp short GetFullName_0_exit
	@@:
    call GetName_0
    push eax
    mov esi,szFunctionName_0
    push esi
    call msvcrt.strcpy
    push szSpace_0
    push esi
    call msvcrt.strcat
	add esp,10
    mov eax,[edi+28]
    call GetName_0
    push eax
    push esi
    call msvcrt.strcat
    push szDot_0
    push esi
    call msvcrt.strcat
    add esp,10
    mov eax,edi
    call GetName_0
    push eax
    push esi
    call msvcrt.strcat
    pop ecx
    pop ecx
    GetFullName_0_exit:
    mov eax,esi
    pop esi
    ret
GetFullName_0_null:
mov eax,szNull_0                // "(null)"
ret

db CC CC

// Borderlands2.exe+92309C - 89 43 40              - mov [ebx+40],eax
// Borderlands2.exe+92309F - 8B 45 B0              - mov eax,[ebp-50]

Borderlands2.exe+92309C:
jmp pCave
db 90
back:

[DISABLE]

[pWillowPlayerController]+764:
dd 0

Borderlands2.exe+92309C:
mov [ebx+40],eax
mov eax,[ebp-50]

unregistersymbol( pWillowPlayerController )
unregistersymbol( pObject )
dealloc( pObject )
dealloc( pCave )
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>255</ID>
              <Description>"GNames &amp; GObjects Dumper (ASCII)"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

alloc( DumpHandlerThread, 1024, Borderlands2.exe )
registersymbol( DumpHandlerThread )
CreateThread( DumpHandlerThread )
alloc( DumpHandlerOff, 4, Borderlands2.exe )
registersymbol( DumpHandlerOff )
label( ExitDumpHandler )

label( szWrite )
label( szNamesFile )
label( szObjectsFile )
label( szNamesFormat )
label( szObjectsFormat )
label( szInvalid )
label( szNull )
label( szSpace )
label( szDot )
label( szFunctionName )

label( DumpNames )
label( DumpNames_loop )
label( DumpNames_exit )

label( DumpObjects )
label( DumpObjects_loop )
label( DumpObjects_exit )

label( GetName )

label( GetFullName )
label( GetFullName_null )
label( GetFullName_exit )

DumpHandlerOff:
dd 0

DumpHandlerThread+500:
szWrite:
db 'w+',0,0
szNamesFile:
db 'NamesDump.txt',0,0
szObjectsFile:
db 'ObjectsDump.txt',0,0
szNamesFormat:
db 'Name[%06i] %s',0A,0,0
szObjectsFormat:
db 'UObject[%06i] %-50s 0x%08X ( %-50s )',0A,0,0
szInvalid:
db 'INVALID NAME INDEX',0,0
szNull:
db '(null)',0,0
szSpace:
db 20,0,0
szDot:
db 2E,0,0
szFunctionName:
dd 0

DumpHandlerThread:
push 0A
call kernel32.Sleep
cmp [DumpHandlerOff],1
je ExitDumpHandler
  push 6F //VK_NUMPAD /
  call GetAsyncKeyState
  test ax,ax
  jne @f
    jmp DumpHandlerThread
  @@:
  call DumpNames
  call DumpObjects
  push C8
  call kernel32.Sleep
  jmp DumpHandlerThread

// ***************
// ** DumpNames **
// ***************

DumpNames:
push ebp
mov ebp,esp
push ecx
and dword ptr [ebp-4],0
push esi
push szWrite                    // "w+"
lea eax,[ebp-4]
push szNamesFile                // "NamesDump.txt"
push eax
call msvcrt.fopen_s
add esp,C
mov eax,GNames
xor esi,esi
cmp [eax+4],esi
jna short DumpNames_exit
  DumpNames_loop:
  mov ecx,[eax]
  lea ecx,[ecx+esi*4]
  cmp dword ptr [ecx],0
  je short @f
    mov eax,[ecx]
    add eax,10
    push eax
    push esi
    push szNamesFormat          // "Name[%06i] %s"
    push [ebp-4]
    call msvcrt.fprintf
    add esp,10
    mov eax,GNames
  @@:
  inc esi
  cmp esi,[eax+4]
  jb short DumpNames_loop
DumpNames_exit:
push [ebp-4]
call msvcrt.fclose
pop ecx
pop esi
mov esp,ebp
pop ebp
ret

db CC CC

// *************
// ** GetName **
// *************

GetName:
mov ecx,[eax+2C]
mov eax,GNames
cmp ecx,[eax+4]
jle @f
  mov eax,szInvalid
  ret
@@:
mov eax,[eax]
mov eax,[eax+ecx*4]
add eax,10
ret

db CC CC

// *****************
// ** DumpObjects **
// *****************

DumpObjects:
push ebp
mov ebp,esp
push ecx
push esi
push szWrite                    // "w+"
lea eax,[ebp-4]
push szObjectsFile              // "ObjectsDump.txt"
xor esi,esi
push eax
mov [ebp-4],esi
call msvcrt.fopen_s
add esp,C
mov eax,GObjects
cmp [eax+4],esi
jna short DumpObjects_exit
  push ebx
  push edi
  DumpObjects_loop:
  mov ecx,[eax]
  lea ecx,[ecx+esi*4]
  cmp dword ptr [ecx],0
  je short @f
    mov eax,[eax]
    mov edi,[ecx]
    mov ebx,[eax+esi*4]
    call GetFullName
    push eax
    push ebx
    mov eax,ebx
    call GetName
    push eax
    push esi
    push szObjectsFormat        // "UObject[%06i] %-50s 0x%08X ( %-50s )"
    push [ebp-4]
    call msvcrt.fprintf
    add esp,18
    mov eax,GObjects
  @@:
  inc esi
  cmp esi,[eax+4]
  jb short DumpObjects_loop
  pop edi
  pop ebx
DumpObjects_exit:
push [ebp-4]
call msvcrt.fclose
pop ecx
pop esi
mov esp,ebp
pop ebp
ret

db CC CC

//*********************************
//********   GetFullName   ********
//*********************************

GetFullName:

mov eax,[edi+34]
test eax,eax
je GetFullName_null
  mov ecx,[edi+28]
  test ecx,ecx
  je GetFullName_null
    cmp dword ptr [ecx+28],0
    push esi
    je short @f
      push ebx
      call GetName
      push eax
      mov esi,szFunctionName
      push esi
      call msvcrt.strcpy
      push szSpace
      push esi
      call msvcrt.strcat
	  add esp,10
      mov eax,[edi+28]
      mov eax,[eax+28]
      call GetName
      push eax
      push esi
      call msvcrt.strcat
      mov ebx,szDot
      push ebx
      push esi
      call msvcrt.strcat
	  add esp,10
      mov eax,[edi+28]
      call GetName
      push eax
      push esi
      call msvcrt.strcat
      push ebx
      push esi
      call msvcrt.strcat
      add esp,10
      mov eax,edi
      call GetName
      push eax
      push esi
      call msvcrt.strcat
      pop ecx
      pop ecx
      pop ebx
      jmp short GetFullName_exit
	@@:
    call GetName
    push eax
    mov esi,szFunctionName
    push esi
    call msvcrt.strcpy
    push szSpace
    push esi
    call msvcrt.strcat
	add esp,10
    mov eax,[edi+28]
    call GetName
    push eax
    push esi
    call msvcrt.strcat
    push szDot
    push esi
    call msvcrt.strcat
    add esp,10
    mov eax,edi
    call GetName
    push eax
    push esi
    call msvcrt.strcat
    pop ecx
    pop ecx
    GetFullName_exit:
    mov eax,esi
    pop esi
    ret
GetFullName_null:
mov eax,szNull                  // "(null)"
ret

db CC CC

ExitDumpHandler:
mov [DumpHandlerOff],2
ret

[DISABLE]

{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "DumpHandlerOff" ) == 0 then --could be 2 already
  writeInteger( "DumpHandlerOff", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "DumpHandlerOff" ) ~= 2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}

unregistersymbol( DumpHandlerOff )
dealloc( DumpHandlerOff )
unregistersymbol( DumpHandlerThread )
dealloc( DumpHandlerThread )
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>136</ID>
      <Description>"[Debug]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>C0C0C0</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>215</ID>
          <Description>"PlayersOnly"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>p0</Address>
          <Offsets>
            <Offset>284</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>216</ID>
          <Description>"PlayersOnly_GFX"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

// default value is 0x00020115
// to freeze everything, change it to 0x00021115

// this freezes gfx


// checkers:
{
48347E -&gt; 483483 x
532C84 -&gt; 532C89 x
625A7D -&gt; 652A82 x
9FF8DD -&gt; 9FF8E2 x
9FFB30 -&gt; 9FFB35 x
9FFBAF -&gt; 9FFBB4 x
9FFBF6 -&gt; 9FFBFB x
9FFC7B -&gt; 9FFC80 &lt;- half-gfx
9FFEE8 -&gt; 9FFEED x
A0003F -&gt; A00044 x
A0008E -&gt; A00093 x
A0057A -&gt; A0057F x
A005FE -&gt; A00603 x
A00771 -&gt; A00776 x
A00819 -&gt; A0081E x
ECE4CC -&gt; ECE4D1 x
F6801F -&gt; F68024 x
10CCC0B -&gt; 10CCC10 x
122E054 -&gt; 122E059 x
}

alloc( cave, 512 )
label( back )
label( exit )
alloc( test0, 4 )
registersymbol( test0 )

test0:
db 15 11 02 00

cave:
pushfd
pushad
cmp dword ptr [esp+28],483483
je short exit
popad
popfd
test [test0],1000
jmp back
exit:
popad
popfd
test [esi+00000284],1000
jmp back

aobscan( aob0_AOB, F7 86 84 02 00 00 00 10 00 00 75 04 33 C0 5E C3 )
label( aob0 )
registersymbol( aob0 )

aob0_AOB:
aob0:
jmp cave
db 90 90 90 90 90
back:

[DISABLE]

aob0:
test [esi+00000284],1000

unregistersymbol( test0 )
dealloc( test0 )
dealloc( cave )
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>217</ID>
              <Description>"hook"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>4 Bytes</VariableType>
              <Address>test0</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>218</ID>
          <Description>"PlayersOnly_NoMove"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

// default value is 0x00020115
// to freeze everything, change it to 0x00021115

// this freezes player in spot

alloc( cave, 512 )
label( back )
alloc( test1, 4 )
registersymbol( test1 )

test1:
db 15 11 02 00

cave:
test [test1],1000
jmp back

aobscan( aob1_AOB, F7 80 84 02 00 00 00 10 00 00 75 17 8B 16 F3 0F 10 45 08 8B 82 84 02 00 00 51 8B CE F3 0F 11 04 24 FF D0 5E 8B E5 5D )
label( aob1 )
registersymbol( aob1 )

aob1_AOB:
aob1:
jmp cave
db 90 90 90 90 90
back:

[DISABLE]

aob1:
test [eax+00000284],1000

unregistersymbol( test1 )
dealloc( test1 )
dealloc( cave )
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>219</ID>
              <Description>"hook"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>4 Bytes</VariableType>
              <Address>test1</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>220</ID>
          <Description>"p0"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>p0</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>221</ID>
          <Description>"p1"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>p1</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>222</ID>
          <Description>"p2"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>p2</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>232</ID>
          <Description>"PlayersOnly_GFX_HOOK"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc( cave, 512 )
label( exit )
label( back )

cave:
pushfd
cmp ebx,17AA3498
je short exit
popfd
jmp F402FE
exit:
popfd
push 00
call 01247650
jmp back

aobscan( pat_AOB, 56 6A 00 E8 08 74 30 00 8B F0 83 BE 48 03 00 00 00 )
label( pat )
registersymbol( pat )

pat_AOB+1:
pat:
jmp cave
db 90 90
back:

[DISABLE]

pat:
push 00
call 01247650

unregistersymbol( pat )
dealloc( cave )
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>233</ID>
          <Description>"00F40240_Hook"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

9FFBAF:
call 133D220

{9FFC7B:
call 133D220}

[DISABLE]

9FFBAF:
call F40240

9FFC7B:
call F40240
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>237</ID>
          <Description>"PlayerModelScale( set to 0 to vanish )"</Description>
          <VariableType>Float</VariableType>
          <Address>p1</Address>
          <Offsets>
            <Offset>78</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>239</ID>
          <Description>"ASCII"</Description>
          <LastState RealAddress="02E1B608"/>
          <VariableType>String</VariableType>
          <Length>3</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>Borderlands2.exe+1ACB608</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>240</ID>
          <Description>"UNICODE"</Description>
          <LastState RealAddress="02DC4D04"/>
          <VariableType>String</VariableType>
          <Length>3</Length>
          <Unicode>1</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>Borderlands2.exe+1A74D04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>149</ID>
          <Description>"[Scripts]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>0</ID>
              <Description>"FetchStructs"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscan(pawn_aob,85DB0F84????????8A83????????0F????39)
label(hook)
registersymbol(hook)
alloc(cave,256)
label(back)
label(exit)

alloc(p0,4)
registersymbol(p0)
alloc(p1,4)
registersymbol(p1)
alloc(p2,4)
registersymbol(p2)
alloc(hp,4)
registersymbol(hp)
alloc(shield,4)
registersymbol(shield)

cave:
pushad
mov [p1],ebx
mov eax,[ebx+E0]
mov [p0],eax
mov eax,[ebx+A4]
mov [p2],eax
mov eax,[ebx+384]
mov [hp],eax
mov eax,[ebx+76C]
mov [shield],eax
popad
exit:
mov al,[ebx+9C]
jmp back

pawn_aob+8:
hook:
jmp cave
db 90
back:

[DISABLE]

hook:
mov al,[ebx+9C]

unregistersymbol(shield)
dealloc(shield)
unregistersymbol(hp)
dealloc(hp)
unregistersymbol(p2)
dealloc(p2)
unregistersymbol(p1)
dealloc(p1)
unregistersymbol(p0)
dealloc(p0)
dealloc(cave)
unregistersymbol(hook)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1</ID>
                  <Description>"p0"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p0</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>17</ID>
                      <Description>"PlayersOnly"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>4 Bytes</VariableType>
                      <Address>p0</Address>
                      <Offsets>
                        <Offset>284</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2</ID>
                      <Description>"SloMo"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p0</Address>
                      <Offsets>
                        <Offset>328</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>3</ID>
                      <Description>"Gravity"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p0</Address>
                      <Offsets>
                        <Offset>3A0</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4</ID>
                  <Description>"p1"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>18</ID>
                      <Description>"EPhysics"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Byte</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>9C</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>53</ID>
                          <Description>"FlyFriction"</Description>
                          <VariableType>Float</VariableType>
                          <Address>p1</Address>
                          <Offsets>
                            <Offset>1E8</Offset>
                            <Offset>100</Offset>
                          </Offsets>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>55</ID>
                              <Description>"FlySpeed"</Description>
                              <VariableType>Float</VariableType>
                              <Address>p1</Address>
                              <Offsets>
                                <Offset>2C0</Offset>
                              </Offsets>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>54</ID>
                          <Description>"WalkingFriction"</Description>
                          <VariableType>Float</VariableType>
                          <Address>p1</Address>
                          <Offsets>
                            <Offset>1CC</Offset>
                            <Offset>100</Offset>
                          </Offsets>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>56</ID>
                              <Description>"WalkSpeed"</Description>
                              <VariableType>Float</VariableType>
                              <Address>p1</Address>
                              <Offsets>
                                <Offset>2A8</Offset>
                              </Offsets>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>5</ID>
                      <Description>"WallHack"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Byte</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>BF</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>6</ID>
                      <Description>"PlayerX"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>60</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>8</ID>
                      <Description>"PlayerY"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>64</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>7</ID>
                      <Description>"PlayerZ"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>68</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>9</ID>
                      <Description>"Speed"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>310</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>34</ID>
                      <Description>"PlayerSpeedCurrent"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>2A8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>35</ID>
                      <Description>"PlayerSpeedBase"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>2AC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>37</ID>
                      <Description>"PlayerJumpHeightCurrent"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>2EC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>36</ID>
                      <Description>"PlayerJumpHeightBase"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>2F0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>38</ID>
                      <Description>"FrictionCurrent"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>2D8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>39</ID>
                      <Description>"FrictionBase"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>2DC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>40</ID>
                      <Description>"MoveVectorX"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>104</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>41</ID>
                      <Description>"MoveVectorY"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>108</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>42</ID>
                      <Description>"MoveVectorZ"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>10C</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>10</ID>
                  <Description>"p2"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p2</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>19</ID>
                      <Description>"BehindView"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Byte</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>AAC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>245</ID>
                      <Description>"God"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Byte</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>1A0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11</ID>
                      <Description>"Axis_0"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>4 Bytes</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>10</Offset>
                        <Offset>14</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12</ID>
                      <Description>"Axis_1"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>4 Bytes</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>28</Offset>
                        <Offset>14</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>28</ID>
                      <Description>"Recoil_0"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>E0C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>31</ID>
                      <Description>"Recoil_1"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>E10</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>30</ID>
                      <Description>"Recoil_2"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>E14</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>29</ID>
                      <Description>"Recoil_3"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>E18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>32</ID>
                      <Description>"Recoil_4"</Description>
                      <VariableType>Float</VariableType>
                      <Address>p2</Address>
                      <Offsets>
                        <Offset>E1C</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>13</ID>
                  <Description>"hp"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>hp</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>20</ID>
                      <Description>"HealthGod"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Byte</VariableType>
                      <Address>hp</Address>
                      <Offsets>
                        <Offset>104</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>14</ID>
                  <Description>"shield"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>shield</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>21</ID>
                      <Description>"ShieldGod"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Byte</VariableType>
                      <Address>shield</Address>
                      <Offsets>
                        <Offset>104</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>22</ID>
                  <Description>"Weapon"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>p1</Address>
                  <Offsets>
                    <Offset>470</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>23</ID>
                      <Description>"BulletsCurrent"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>A28</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>63</ID>
                          <Description>"BulletsMax"</Description>
                          <VariableType>4 Bytes</VariableType>
                          <Address>p1</Address>
                          <Offsets>
                            <Offset>A08</Offset>
                            <Offset>470</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>64</ID>
                          <Description>"BulletsDecAmount"</Description>
                          <ShowAsSigned>1</ShowAsSigned>
                          <VariableType>4 Bytes</VariableType>
                          <Address>p1</Address>
                          <Offsets>
                            <Offset>9DC</Offset>
                            <Offset>470</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>25</ID>
                      <Description>"Clip"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>p1</Address>
                      <Offsets>
                        <Offset>9D4</Offset>
                        <Offset>470</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>24</ID>
                          <Description>"InventoryClip"</Description>
                          <VariableType>Float</VariableType>
                          <Address>p1</Address>
                          <Offsets>
                            <Offset>6C</Offset>
                            <Offset>9D0</Offset>
                            <Offset>470</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>26</ID>
                          <Description>"InventoryClipSwitch"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <VariableType>Byte</VariableType>
                          <Address>p1</Address>
                          <Offsets>
                            <Offset>104</Offset>
                            <Offset>9D0</Offset>
                            <Offset>470</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>139</ID>
              <Description>"Cheat Handler - hook"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

{
aobscan( PlayersOnly_FreezeGFX_AOB, F30F1186????????E8????????85C075??F30F10????F30F )
label( PlayersOnly_FreezeGFX )
registersymbol( PlayersOnly_FreezeGFX )
PlayersOnly_FreezeGFX_AOB+0F:
PlayersOnly_FreezeGFX:
}

alloc( EPhysicsHandler_Hook, 1024 )
registersymbol( EPhysicsHandler_Hook )
label( lPlayersOnly )
label( bPlayersOnly )
registersymbol( bPlayersOnly )
label( lFly )
label( bFly )
registersymbol( bFly )
label( dwAxis )
registersymbol( dwAxis )
label( skip )
label( lGhost )
label( bGhost )
registersymbol( bGhost )
label( dwSloMo )
registersymbol( dwSloMo )
label( exit )
label( back )
alloc( KeyHandlerThread, 256 )
CreateThread( KeyHandlerThread )
label( ExitKeyHandler )
label( KeyHandlerOff )
registersymbol( KeyHandlerOff )
label( TogglePlayersOnly )
label( ToggleFly )
label( ToggleGhost )
label( Toggle )
label( Toggler )
label( ToggleSloMo1 )
label( ToggleSloMo2 )
label( ToggleSloMo3 )
label( below )
label( continue )
label( main )
label( Fly_1 )

EPhysicsHandler_Hook+200:
bPlayersOnly:
dd 0

EPhysicsHandler_Hook+204:
bFly:
dd 0

EPhysicsHandler_Hook+208:
bGhost:
dd 0

EPhysicsHandler_Hook+20C:
dwSloMo:
dd 0

EPhysicsHandler_Hook+210:
dwAxis:
dd 0
dd 0

EPhysicsHandler_Hook+300:
dd 0

EPhysicsHandler_Hook+304:
dd 0

EPhysicsHandler_Hook:
pushfd
pushad

{
cmp [EPhysicsHandler_Hook+300],1
je main

// time to deprotect some code..

push EPhysicsHandler_Hook+304
push 80 // PAGE_EXECUTE_WRITECOPY
push 1 // bytes to deprotect
push PlayersOnly_FreezeGFX
call VirtualProtect
mov [EPhysicsHandler_Hook+300],1

//
}

main:
mov ecx,[ebx+E0]
lea ecx,[ecx+328]
mov [dwSloMo],ecx

// ----[ PlayersOnly ]----
lPlayersOnly:
cmp [bPlayersOnly],0
je @f
mov ecx,[ebx+E0]
or dword ptr [ecx+284],200 // freezing AI
//mov byte ptr [PlayersOnly_FreezeGFX],EB
jmp lFly
@@:
mov ecx,[ebx+E0]
and dword ptr [ecx+284],FFFFF1FF
//mov byte ptr [PlayersOnly_FreezeGFX],75

// ----[ Fly ]----
lFly:
cmp [bFly],0
je Fly_1
cmp [dwAxis],0
jne lGhost
mov ecx,[ebx+A4]
mov ecx,[ecx+14]
mov edx,[ecx+10]
mov [dwAxis],edx
mov edx,[ecx+28]
mov [dwAxis+4],edx
mov edx,[dwAxis]
//
// seems structure shifts in memory at +/-0x400, not only at +0x400
// fixing it below..
//
mov eax,[edx]
cmp [edx+400],eax
jne below
lea edx,[edx+400]
jmp continue
below:
lea edx,[edx-400]
continue:
mov [ecx+28],edx
mov byte ptr [ebx+9C],4
mov ecx,[ebx+100]
mov [ecx+1E8],(float)2.0
mov [ebx+310],(float)10.0
jmp lGhost
Fly_1:
cmp [dwAxis],0
je skip
mov ecx,[ebx+A4]
mov ecx,[ecx+14]
mov eax,[dwAxis]
mov edx,[dwAxis+4]
mov [ecx+10],eax
mov [ecx+28],edx
mov [dwAxis],0
mov [dwAxis+4],0
skip:
cmp byte ptr [ebx+9C],4
jne lGhost
mov byte ptr [ebx+9C],1
mov ecx,[ebx+100]
mov [ebx+1E8],(float)0.3
mov [ebx+310],(float)1.0
mov [bGhost],0

// ----[ Ghost ]----
lGhost:
cmp [bGhost],0
je @f
cmp [bFly],0
je @f
mov byte ptr [ebx+BF],E1
jmp exit
@@:
mov byte ptr [ebx+BF],D9

exit:
popad
popfd
mov al,byte ptr [ebx+9C]
jmp back

// ----[ Keys Handler ]----

KeyHandlerThread:
push 0a
call Sleep

cmp [KeyHandlerOff],1
je ExitKeyHandler

push 71 //F2
call GetAsyncKeyState
test ax,ax
jne Toggle

cmp [Toggler],1
jne KeyHandlerThread

push 61 //VK_NUMPAD1
call GetAsyncKeyState
test ax,ax
jne TogglePlayersOnly

push 62 //VK_NUMPAD2
call GetAsyncKeyState
test ax,ax
jne ToggleFly

push 63 //VK_NUMPAD3
call GetAsyncKeyState
test ax,ax
jne ToggleGhost

push 67 //VK_NUMPAD7
call GetAsyncKeyState
test ax,ax
jne ToggleSloMo1

push 68 //VK_NUMPAD8
call GetAsyncKeyState
test ax,ax
jne ToggleSloMo2

push 69 //VK_NUMPAD9
call GetAsyncKeyState
test ax,ax
jne ToggleSloMo3
jmp KeyHandlerThread

TogglePlayersOnly:
xor [bPlayersOnly],1
push C8
call Sleep
jmp KeyHandlerThread

ToggleFly:
xor [bFly],1
push C8
call Sleep
jmp KeyHandlerThread

ToggleGhost:
xor [bGhost],1
push C8
call Sleep
jmp KeyHandlerThread

ToggleSloMo1:
push eax
mov eax,[dwSloMo]
mov [eax],(float)0.5
pop eax
push C8
call Sleep
jmp KeyHandlerThread

ToggleSloMo2:
push eax
mov eax,[dwSloMo]
mov [eax],(float)1.0
pop eax
push C8
call Sleep
jmp KeyHandlerThread

ToggleSloMo3:
push eax
mov eax,[dwSloMo]
mov [eax],(float)1.5
pop eax
push C8
call Sleep
jmp KeyHandlerThread

Toggle:
xor [Toggler],1
push 96
call Sleep
jmp KeyHandlerThread

ExitKeyHandler:
ret

Toggler:
dd 1

KeyHandlerOff:
dd 0

aobscan( dwEPhysicsHook_AOB, 85DB0F84????????8A83????????0F????39 )
label( dwEPhysicsHook )
registersymbol( dwEPhysicsHook )

dwEPhysicsHook_AOB+8:
dwEPhysicsHook:
jmp EPhysicsHandler_Hook
db 90
back:

[DISABLE]

dwEPhysicsHook:
mov al,byte ptr [ebx+9C]

KeyHandlerOff:
dd 1

//unregistersymbol( PlayersOnly_FreezeGFX )
unregistersymbol( dwEPhysicsHook )
unregistersymbol( KeyHandlerOff )
unregistersymbol( dwSloMo )
unregistersymbol( bGhost )
unregistersymbol( dwAxis )
unregistersymbol( bFly )
unregistersymbol( bPlayersOnly )
unregistersymbol( EPhysicsHandler_Hook )
dealloc( EPhysicsHandler_Hook )
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>140</ID>
                  <Description>"SloMo"</Description>
                  <VariableType>Float</VariableType>
                  <Address>dwSloMo</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>141</ID>
                  <Description>"PlayersOnly"</Description>
                  <LastState Value="1818321747" RealAddress="29A80500"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bPlayersOnly</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>142</ID>
                  <Description>"Fly"</Description>
                  <LastState Value="907097603" RealAddress="0352030C"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bFly</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>143</ID>
                  <Description>"Ghost"</Description>
                  <LastState Value="909456931" RealAddress="03520310"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>bGhost</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>231</ID>
              <Description>"Freeze Actors"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

alloc( cave, 4096 )
label( exit )
label( back )

cave:
pushfd
cmp esi,[p1]
je short exit
popfd
jmp back+10
exit:
popfd
db 8B 16 F3 0F 10 45 08
jmp back

aobscan( aobX_AOB, F7 80 84 02 00 00 00 10 00 00 75 17 8B 16 F3 0F 10 45 08 8B 82 84 02 00 00 51 8B CE F3 0F 11 04 24 FF D0 5E 8B E5 5D C2 04 00 )
label( aobX )
registersymbol( aobX )

aobX_AOB+C:
aobX:
jmp cave
db 90 90
back:

[DISABLE]

aobX:
db 8B 16 F3 0F 10 45 08

unregistersymbol( aobX )
dealloc( cave )
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>248</ID>
          <Description>"[Console]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>249</ID>
              <Description>"Fetch UE3 Pointers/Addresses"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule( GObjects_AOB, Borderlands2.exe, 8B??????????8B04??8B40??250002000033C90BC10F84 )
label( GObjects )
registersymbol( GObjects )
[GObjects_AOB+2]:
GObjects:

aobscanmodule( GNames_AOB, Borderlands2.exe, 8B0D????????833C810074 )
label( GNames )
registersymbol( GNames )
[GNames_AOB+2]:
GNames:

aobscanmodule( ProcessEvent_AOB, Borderlands2.exe, 8B7D08F787????????02040000 )
label( ProcessEvent )
registersymbol( ProcessEvent )
ProcessEvent_AOB-30:
ProcessEvent:

[DISABLE]

unregistersymbol( ProcessEvent )
unregistersymbol( GNames )
unregistersymbol( GObjects )
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>186</ID>
                  <Description>"Enable Console / Patch "say" Appending"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

alloc( oConsole, 64, Borderlands2.exe )
label( back )

oConsole:
mov ecx,[esi+20]
cmp [esp+50],C0
jne @f
  push eax
  push ecx
  lea ecx,[ecx+24] // get Console in RGFxGameViewportClient UObject
  mov ecx,[ecx]
  mov eax,[edi]
  mov [ecx+84],eax
  mov eax,[edi+28]
  mov [ecx+8C],eax
  pop ecx
  pop eax
@@:
mov ebx,[ebp-10]
jmp back

// Borderlands2.exe+472BE3 - 8B 4E 20              - mov ecx,[esi+20]
// Borderlands2.exe+472BE6 - 8B 5D F0              - mov ebx,[ebp-10]

Borderlands2.exe+472BE3:
jmp oConsole
nop
back:

Borderlands2.exe+9EFB50:
db EB 04 90 90 90 90

[DISABLE]

Borderlands2.exe+472BE3:
mov ecx,[esi+20]
mov ebx,[ebp-10]

// Borderlands2.exe+9EFB50 - 0F84 84000000         - je Borderlands2.exe+9EFBDA

/* if you want to restore "say" in console (who wants that?), uncomment the two lines below */

// Borderlands2.exe+9EFB50:
// db 0F 84 84 00 00 00

dealloc( oConsole )
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>250</ID>
                  <Description>"Set Hook &amp; Emulate WillowCheatManager UObject"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

alloc( pCave, 1024, Borderlands2.exe )
alloc( pObject, 64, Borderlands2.exe )
registersymbol( pObject )
label( back )

label( szNull )
label( szWillowCheatManager )
label( szDefault_WillowCheatManager )
label( pStore )
label( pWillowPlayerController )
registersymbol( pWillowPlayerController )
label( szName )

label( pCave_loop )
label( pCave_next )
label( pCave_continue )
label( pCave_exit )

label( GetFullName_0 )
label( GetFullName_00 )
label( GetFullName_NULL_0 )
label( szFunctionName_0 )

pCave+500:
szNull:
db '(null)',0
pCave+520:
szWillowCheatManager:
db 'Class WillowGame.WillowCheatManager',0
pCave+5C0:
szDefault_WillowCheatManager:
db 'WillowCheatManager WillowGame.Default__WillowCheatManager',0
pStore:
dd 0
pWillowPlayerController:
dd 0
szName:
db 0

pCave+700:
szFunctionName_0:
dd 0

pObject+8:
db 04 00 10 04 01 40 00 02

pCave:
mov [ebx+40],eax    // original code
mov [pWillowPlayerController],eax
mov [pObject+28],eax
push ebp
mov ebp,esp
pushad
mov eax,GObjects
xor esi,esi
cmp [eax+4],esi
jbe pCave_exit
  pCave_loop:
  mov ecx,[eax]
  lea ecx,[ecx+esi*4]
  cmp [ecx],0
  je pCave_continue
    mov edi,[ecx]
    call GetFullName_0
    mov [pStore],eax
    push [pStore]
    push szWillowCheatManager
    call lstrcmpA
    test eax,eax
    jne short @f
      mov [pObject+34],edi
      jmp short pCave_next
    @@:
    push [pStore]
    push szDefault_WillowCheatManager
    call lstrcmpA
    test eax,eax
    jne short @f
      mov eax,[edi]
      mov [pObject],eax
    @@:
    pCave_next:
	mov eax,GObjects
  pCave_continue:
  inc esi
  cmp esi,[eax+4]
  jb pCave_loop
mov eax,[pWillowPlayerController]
mov [eax+764],pObject
pCave_exit:
popad
mov esp,ebp
pop ebp
mov eax,[ebp-50]    // original code
jmp back

db CC CC

//*********************************
//********   GetFullName   ********
//*********************************

GetFullName_0:
mov eax,[edi+34]                   // Class
test eax,eax
je GetFullName_NULL_0
  mov ecx,[edi+28]                   // Outer
  test ecx,ecx
  je GetFullName_NULL_0
    cmp [ecx+28],0                     // Outer-&gt;Outer
    je GetFullName_00
      mov ebx,szFunctionName_0
      mov ecx,GNames                     // GNames pointer
      mov eax,[eax+2C]                   // FName_Index
      mov edx,[ecx]
      mov eax,[edx+eax*4]
      add eax,10                         // Class-&gt;GetName
      @@:
      cmp byte ptr [eax],0
      je short @f
        mov dl,[eax]
        mov [ebx],dl
        inc ebx
        inc eax
        jmp short @b
      @@:
      mov byte ptr [ebx],20              // space character
      inc ebx
      mov ecx,[edi+28]                   // Outer
      mov edx,[ecx+28]                   // Outer-&gt;Outer
      mov eax,[edx+2C]                   // FName_Index
      mov ecx,GNames                     // GNames pointer
      mov edx,[ecx]
      mov eax,[edx+eax*4]
      add eax,10                         // Outer-&gt;Outer-&gt;GetName
      @@:
      cmp byte ptr [eax],0
      je short @f
        mov dl,[eax]
        mov [ebx],dl
        inc ebx
        inc eax
        jmp short @b
      @@:
      mov byte ptr [ebx],2E              // . character
      inc ebx
      mov ecx,[edi+28]                   // Outer
      mov edx,[ecx+2C]                   // FName_Index
      mov eax,GNames                     // GNames pointer
      mov ecx,[eax]
      mov edx,[ecx+edx*4]
      add edx,10                         // Outer-&gt;GetName
      @@:
      cmp byte ptr [edx],0
      je short @f
        mov al,[edx]
        mov [ebx],al
        inc ebx
        inc edx
        jmp short @b
      @@:
      mov byte ptr [ebx],2E              // . character
      inc ebx
      mov ecx,GNames                     // GNames pointer
      mov edx,[ecx]
      mov eax,[edi+2C]                   // this - FName_Index
      mov eax,[edx+eax*4]
      add eax,10                         // this-&gt;GetName
      @@:
      cmp byte ptr [eax],0
      je short @f
        mov dl,[eax]
        mov [ebx],dl
        inc ebx
        inc eax
        jmp short @b
      @@:
      mov byte ptr [ebx],0
      mov eax,szFunctionName_0
      ret
      GetFullName_00:
      mov ebx,szFunctionName_0
      mov edx,GNames                     // GNames pointer
      mov ecx,[eax+2C]                   // FName_Index
      mov eax,[edx]
      mov ecx,[eax+ecx*4]
      add ecx,10                         // Class-&gt;GetName
      @@:
      cmp byte ptr [ecx],0
      je short @f
        mov al,[ecx]
        mov [ebx],al
        inc ebx
        inc ecx
        jmp short @b
      @@:
      mov byte ptr [ebx],20              // space character
      inc ebx
      mov edx,[edi+28]                   // Outer
      mov eax,[edx+2C]                   // FName_Index
      mov ecx,GNames                     // GNames pointer
      mov edx,[ecx]
      mov eax,[edx+eax*4]
      add eax,10                         // Outer-&gt;GetName
      @@:
      cmp byte ptr [eax],0
      je short @f
        mov cl,[eax]
        mov [ebx],cl
        inc ebx
        inc eax
        jmp short @b
      @@:
      mov byte ptr [ebx],2E              // . character
      inc ebx
      mov edx,GNames                     // GNames pointer
      mov eax,[edx]
      mov ecx,[edi+2C]                   // this - FName_Index
      mov ecx,[eax+ecx*4]
      add ecx,10                         // this-&gt;GetName
      @@:
      cmp byte ptr [ecx],0
      je short @f
        mov al,[ecx]
        mov [ebx],al
        inc ebx
        inc ecx
        jmp short @b
      @@:
      mov byte ptr [ebx],0
      mov eax,szFunctionName_0
      ret
GetFullName_NULL_0:
mov eax,szNull
ret

// Borderlands2.exe+92309C - 89 43 40              - mov [ebx+40],eax
// Borderlands2.exe+92309F - 8B 45 B0              - mov eax,[ebp-50]

Borderlands2.exe+92309C:
jmp pCave
db 90
back:

[DISABLE]

[pWillowPlayerController]+764:
dd 0

Borderlands2.exe+92309C:
mov [ebx+40],eax
mov eax,[ebp-50]

unregistersymbol( pWillowPlayerController )
unregistersymbol( pObject )
dealloc( pObject )
dealloc( pCave )
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>159</ID>
                  <Description>"GNames &amp; GObjects Dumper (ASCII)"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

alloc( DumpHandlerThread, 1024, Borderlands2.exe )
registersymbol( DumpHandlerThread )
CreateThread( DumpHandlerThread )
alloc( DumpHandlerOff, 4, Borderlands2.exe )
registersymbol( DumpHandlerOff )
label( ExitDumpHandler )

label( szWrite )
label( szNamesFile )
label( szObjectsFile )
label( szNamesFormat )
label( szObjectsFormat )
label( szInvalid )
label( szNull )
label( szFormat )
label( szSeparator )
label( szBuffer )
label( szFunctionName )
label( szOutputDebug )

label( DumpNames )
label( DumpNames_loop )
label( DumpNames_exit )

label( DumpObjects )
label( DumpObjects_loop )
label( DumpObjects_exit )

label( GetName )
label( GetObject )

label( FindObject )
label( FindObject_0 )
label( FindObject_1 )
label( FindObject_exit )

label( GetFullName )
label( GetFullName_0 )
label( GetFullName_NULL )

label( OutputDebug )

DumpHandlerOff:
dd 0

DumpHandlerThread+500:
szWrite:
db 'w+',0
szNamesFile:
db 'NamesDump.txt',0
szObjectsFile:
db 'ObjectsDump.txt',0
szNamesFormat:
db 'Name[%06i] %s',0A,0
szObjectsFormat:
db 'UObject[%06i] %-50s 0x%08X ( %-50s )',0A,0
szInvalid:
db 'INVALID NAME INDEX',0
szNull:
db '(null)',0
szFormat:
db '0x%08X',0
szSeparator:
db ' | ',0
szBuffer:
dd 0
dd 0
dd 0
szFunctionName:
dd 0

DumpHandlerThread+600:
szOutputDebug:
dd 0

DumpHandlerThread:
push 0A
call kernel32.Sleep
cmp [DumpHandlerOff],1
je ExitDumpHandler
  push 6F //VK_NUMPAD /
  call GetAsyncKeyState
  test ax,ax
  jne @f
    jmp DumpHandlerThread
  @@:
  call DumpNames
  call DumpObjects
  push C8
  call kernel32.Sleep
  jmp DumpHandlerThread

// ***************
// ** DumpNames **
// ***************

DumpNames:
push ebp
mov ebp,esp
push ecx
and [ebp-4],0
push esi
push szWrite    // "w+"
lea eax,[ebp-4]
push szNamesFile    // "NamesDump.txt"
push eax
call msvcrt.fopen_s
mov eax,GNames
xor esi,esi
add esp,C
cmp [eax+4],esi
jbe DumpNames_exit
DumpNames_loop:
  mov ecx,[eax]
  lea ecx,[ecx+esi*4]
  cmp [ecx],0
  je short @f
    mov eax,[ecx]
    add eax,10
	push eax
	push esi
	push szNamesFormat    // "Name[%06i] %s\0A\00"
	push [ebp-4]
	call msvcrt.fprintf
	mov eax,GNames
	add esp,10
  @@:
  inc esi
  cmp esi,[eax+4]
  jb DumpNames_loop
DumpNames_exit:
push [ebp-4]
call msvcrt.fclose
pop ecx
pop esi
mov esp,ebp
pop ebp
ret

db CC CC

// *****************
// ** DumpObjects **
// *****************

DumpObjects:
push ebp
mov ebp,esp
push ecx
and [ebp-4],0
push esi
push szWrite    // "w+"
lea eax,[ebp-4]
push szObjectsFile    // "ObjectsDump.txt"
push eax
call msvcrt.fopen_s
mov eax,GObjects
xor esi,esi
add esp,C
cmp [eax+4],esi
jbe DumpObjects_exit
DumpObjects_loop:
  mov ecx,[eax]
  lea ecx,[ecx+esi*4]
  cmp [ecx],0
  je short @f
    push 0
    push 0
    mov eax,[ecx]
    mov [esp],eax
	call GetObject
    mov [esp+4],eax
    mov eax,[esp]
	call GetName
    push eax
	push esi
	push szObjectsFormat    // "UObject[%06i] %-50s 0x%08X (%-50s)\0A\00"
	push [ebp-4]
	call msvcrt.fprintf
	mov eax,GObjects
	add esp,18
  @@:
  inc esi
  cmp esi,[eax+4]
  jb DumpObjects_loop
DumpObjects_exit:
push [ebp-4]
call msvcrt.fclose
mov esp,ebp
pop ebp
ret

db CC CC

// *************
// ** GetName **
// *************

GetName:
mov ecx,[eax+2C]    // FName_Index
mov eax,GNames
mov edx,[eax+4]
cmp ecx,edx
ja short @f
  mov eax,[eax]
  mov eax,[eax+ecx*4]
  add eax,10
  ret
@@:
mov eax,szInvalid    // "INVALID NAME INDEX"
ret

db CC CC

// ***************
// ** GetObject **
// ***************

GetObject:
mov edi,eax
test edi,edi
je short @f
  mov eax,[edi+34]
  test eax,eax
  je short @f
    call GetFullName
    ret
@@:
mov eax,szInvalid    // "INVALID NAME INDEX"
ret

db CC CC

// ****************
// ** FindObject **
// ****************

FindObject:
push ebp
mov ebp,esp
mov ecx,GObjects
push esi
push edi
xor esi,esi
cmp [ecx+4],esi
jle FindObject_exit
FindObject_0:
    mov eax,[ecx]
    mov edi,[eax+esi*4]
    test edi,edi
    je short @f
      mov eax,[edi+34]
      test eax,eax
      je short @f
        push [ebp+8]
        call GetFullName
        push eax
        call msvcrt.stricmp
        add esp,8
        test eax,eax
        je FindObject_1
          mov ecx,GObjects
    @@:
    inc esi
    cmp esi,[ecx+4]
    jl FindObject_0
FindObject_exit:
    pop edi
    pop esi
    mov esp,ebp
    pop ebp
    ret 4
FindObject_1:
    mov eax,edi
    pop edi
    pop esi
    mov esp,ebp
    pop ebp
    ret 4

db CC CC

//*********************************
//********   GetFullName   ********
//*********************************

GetFullName:
mov eax,[edi+34]                   // Class
test eax,eax
je GetFullName_NULL
  mov ecx,[edi+28]                   // Outer
  test ecx,ecx
  je GetFullName_NULL
    cmp [ecx+28],0                     // Outer-&gt;Outer
    je GetFullName_0
      mov ebx,szFunctionName
      mov ecx,GNames                     // GNames pointer
      mov eax,[eax+2C]                   // FName_Index
      mov edx,[ecx]
      mov eax,[edx+eax*4]
      add eax,10                         // Class-&gt;GetName
      @@:
      cmp byte ptr [eax],0
      je short @f
        mov dl,[eax]
        mov [ebx],dl
        inc ebx
        inc eax
        jmp short @b
      @@:
      mov byte ptr [ebx],20              // space character
      inc ebx
      mov ecx,[edi+28]                   // Outer
      mov edx,[ecx+28]                   // Outer-&gt;Outer
      mov eax,[edx+2C]                   // FName_Index
      mov ecx,GNames                     // GNames pointer
      mov edx,[ecx]
      mov eax,[edx+eax*4]
      add eax,10                         // Outer-&gt;Outer-&gt;GetName
      @@:
      cmp byte ptr [eax],0
      je short @f
        mov dl,[eax]
        mov [ebx],dl
        inc ebx
        inc eax
        jmp short @b
      @@:
      mov byte ptr [ebx],2E              // . character
      inc ebx
      mov ecx,[edi+28]                   // Outer
      mov edx,[ecx+2C]                   // FName_Index
      mov eax,GNames                     // GNames pointer
      mov ecx,[eax]
      mov edx,[ecx+edx*4]
      add edx,10                         // Outer-&gt;GetName
      @@:
      cmp byte ptr [edx],0
      je short @f
        mov al,[edx]
        mov [ebx],al
        inc ebx
        inc edx
        jmp short @b
      @@:
      mov byte ptr [ebx],2E              // . character
      inc ebx
      mov ecx,GNames                     // GNames pointer
      mov edx,[ecx]
      mov eax,[edi+2C]                   // this - FName_Index
      mov eax,[edx+eax*4]
      add eax,10                         // this-&gt;GetName
      @@:
      cmp byte ptr [eax],0
      je short @f
        mov dl,[eax]
        mov [ebx],dl
        inc ebx
        inc eax
        jmp short @b
      @@:
      mov byte ptr [ebx],0
      mov eax,szFunctionName
      ret
      GetFullName_0:
      mov ebx,szFunctionName
      mov edx,GNames                     // GNames pointer
      mov ecx,[eax+2C]                   // FName_Index
      mov eax,[edx]
      mov ecx,[eax+ecx*4]
      add ecx,10                         // Class-&gt;GetName
      @@:
      cmp byte ptr [ecx],0
      je short @f
        mov al,[ecx]
        mov [ebx],al
        inc ebx
        inc ecx
        jmp short @b
      @@:
      mov byte ptr [ebx],20              // space character
      inc ebx
      mov edx,[edi+28]                   // Outer
      mov eax,[edx+2C]                   // FName_Index
      mov ecx,GNames                     // GNames pointer
      mov edx,[ecx]
      mov eax,[edx+eax*4]
      add eax,10                         // Outer-&gt;GetName
      @@:
      cmp byte ptr [eax],0
      je short @f
        mov cl,[eax]
        mov [ebx],cl
        inc ebx
        inc eax
        jmp short @b
      @@:
      mov byte ptr [ebx],2E              // . character
      inc ebx
      mov edx,GNames                     // GNames pointer
      mov eax,[edx]
      mov ecx,[edi+2C]                   // this - FName_Index
      mov ecx,[eax+ecx*4]
      add ecx,10                         // this-&gt;GetName
      @@:
      cmp byte ptr [ecx],0
      je short @f
        mov al,[ecx]
        mov [ebx],al
        inc ebx
        inc ecx
        jmp short @b
      @@:
      mov byte ptr [ebx],0
      mov eax,szFunctionName
      ret
GetFullName_NULL:
mov eax,szNull
ret

db CC CC

//*********************
//**   OutputDebug   **
//*********************

OutputDebug:
push ebp
mov ebp,esp
mov eax,szOutputDebug
mov ecx,ebx
@@:
  cmp byte ptr [ecx],0
  je short @f
    mov dl,[ecx]
    mov [eax],dl
    inc ecx
    inc eax
    jmp short @b
  @@:
  mov byte ptr [eax],0
  push szSeparator
  push szOutputDebug
  call lstrcatA
  push [ebp+8]
  push szFormat
  push szBuffer
  call wsprintfA
  add esp,C
  push szBuffer
  push szOutputDebug
  call lstrcatA
  push szOutputDebug
  call OutputDebugStringA
  mov esp,ebp
  pop ebp
  ret 4

ExitDumpHandler:
mov [DumpHandlerOff],2
ret

[DISABLE]

{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "DumpHandlerOff" ) == 0 then --could be 2 already
  writeInteger( "DumpHandlerOff", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "DumpHandlerOff" ) ~= 2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}

unregistersymbol( DumpHandlerOff )
dealloc( DumpHandlerOff )
unregistersymbol( DumpHandlerThread )
dealloc( DumpHandlerThread )
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>dwEPhysicsHook_0</Name>
      <Address>00EB8A41</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bPlayersOnly</Name>
      <Address>29A80500</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PlayersOnly_FreezeGFX</Name>
      <Address>00B6F12A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetIndex</Name>
      <Address>00E3BD70</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SetIndex</Name>
      <Address>008B2B30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hook</Name>
      <Address>007D5DA9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Toggler</Name>
      <Address>03520300</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>KeyHandlerOff</Name>
      <Address>03520304</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFly</Name>
      <Address>0352030C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bGhost</Name>
      <Address>03520310</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bGod</Name>
      <Address>03520314</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>dwUnlimitedAmmo</Name>
      <Address>005BD8BA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>dwVariableBullets</Name>
      <Address>00609AC0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GObjects</Name>
      <Address>0321AFA8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GNames</Name>
      <Address>031D73C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ProcessEvent</Name>
      <Address>01570110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pWillowPlayerController</Name>
      <Address>1BA50500</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
