<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Inf. Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmemHHA,128)
label(returnhereHHA)
label(originalcodeHHA)
label(exitHHA)
label(pHeroHealth)
registersymbol(pHeroHealth)
alloc(newmemHAS,128)
label(returnhereHAS)
label(originalcodeHAS)
label(exitHAS)

newmemHHA:
mov [pHeroHealth],esi

originalcodeHHA:
movss xmm0,[esi+00001CC8]

exitHHA:
jmp returnhereHHA

///

newmemHAS:
cmp [pHeroHealth],esi
jne originalcodeHAS

push eax
mov eax,[esp+08]
cmp [esi+00001CC8],eax
pop eax
jle originalcodeHAS
movss xmm0,[esi+00001CC8]

originalcodeHAS:
movss [esi+00001CC8],xmm0

exitHAS:
jmp returnhereHAS

///
pHeroHealth:
dd 0
///

"SaintsRowTheThird.exe"+3A7BE4:
jmp newmemHHA
nop
nop
nop
returnhereHHA:

///

"SaintsRowTheThird.exe"+538C99:
jmp newmemHAS
nop
nop
nop
returnhereHAS:


 
 
[DISABLE]
dealloc(newmemHHA)
dealloc(newmemHAS)
"SaintsRowTheThird.exe"+3A7BE4:
db F3 0F 10 86 C8 1C 00 00
//Alt: movss xmm0,[esi+00001CC8]
"SaintsRowTheThird.exe"+538C99:
db F3 0F 11 86 C8 1C 00 00
//Alt: movss [esi+00001CC8],xmm0
unregistersymbol(pHeroHealth)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHeroHealth</Address>
          <Offsets>
            <Offset>1CC8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Inf. Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmemAPRS,128)
label(returnhereAPRS)
label(originalcodeAPRS)
label(exitAPRS)
label(pAmmoPouch)
registersymbol(pAmmoPouch)
alloc(newmemAS,128)
label(returnhereAS)
label(originalcodeAS)
label(exitAS)
label(pAmmoClip)
registersymbol(pAmmoClip)

newmemAPRS:
mov [pAmmoPouch],esi
cmp dword ptr [esi+04],edx
jle originalcodeAPRS
mov edx,[esi+04]

originalcodeAPRS:
mov [esi+04],edx
mov edx,[esi+08]

exitAPRS:
jmp returnhereAPRS

///

newmemAS:
movzx eax,word ptr [edx+0000011A]
mov [pAmmoClip],edi
push ebx
mov ebx,[edi]
sub ebx,eax
cmp ebx,0
pop ebx
jle exitAS

originalcodeAS:
//movzx eax,word ptr [edx+0000011A]
sub [edi],eax

exitAS:
jmp returnhereAS

///
pAmmoPouch:
dd 0
pAmmoClip:
dd 0

"SaintsRowTheThird.exe"+752F42:
jmp newmemAPRS
nop
returnhereAPRS:

///

"SaintsRowTheThird.exe"+5BBB50:
jmp newmemAS
nop
nop
nop
nop
returnhereAS:


 
 
[DISABLE]
dealloc(newmemAPRS)
dealloc(newmemAS)
"SaintsRowTheThird.exe"+752F42:
db 89 56 04 8B 56 08
//Alt: mov [esi+04],edx
//Alt: mov edx,[esi+08]
"SaintsRowTheThird.exe"+5BBB50:
db 0F B7 82 1A 01 00 00 29 07
//Alt: movzx eax,word ptr [edx+0000011A]
//Alt: sub [edi],eax
unregistersymbol(pAmmoPouch)
unregistersymbol(pAmmoClip)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Ammo Pouch (Current Weapon)"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pAmmoPouch</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Ammo Clip (Current Weapon)"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pAmmoClip</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Inf. Throw"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,128)
label(returnhere)
label(originalcode)
label(exit)

newmem:
cmp dword ptr [eax+04],ecx
jle originalcode
mov ecx,[eax+04]

originalcode:
mov [eax+04],ecx
mov ecx,[eax+08]

exit:
jmp returnhere

"SaintsRowTheThird.exe"+753B51:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
"SaintsRowTheThird.exe"+753B51:
db 89 48 04 8B 48 08
//Alt: mov [eax+04],ecx
//Alt: mov ecx,[eax+08]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Inf. Money"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmemMA,128)
label(returnhereMA)
label(originalcodeMA)
label(exitMA)
label(pMoney)
registersymbol(pMoney)
alloc(newmemMAS,128)
label(returnhereMAS)
label(originalcodeMAS)
label(exitMAS)

newmemMA:
mov [pMoney],ebx
add [pMoney],1CB0

originalcodeMA:
cvtsi2ss xmm0,[ebx+00001CB0]

exitMA:
jmp returnhereMA

///

newmemMAS:
cmp ecx,[pMoney]
jne originalcodeMAS

cmp [ecx],eax
jle originalcodeMAS
mov eax,[ecx]

originalcodeMAS:
mov [ecx],eax
ret 0004

exitMAS:
jmp returnhereMAS

///
pMoney:
dd 0
///

"SaintsRowTheThird.exe"+3E46C5:
jmp newmemMA
nop
nop
nop
returnhereMA:

///

"SaintsRowTheThird.exe"+54BA44:
jmp newmemMAS
returnhereMAS:


 
 
[DISABLE]
dealloc(newmemMA)
dealloc(newmemMAS)
"SaintsRowTheThird.exe"+54BA44:
db 89 01 C2 04 00
//Alt: mov [ecx],eax
//Alt: ret 0004
"SaintsRowTheThird.exe"+3E46C5:
db F3 0F 2A 83 B0 1C 00 00
//Alt: cvtsi2ss xmm0,[ebx+00001CB0]
unregistersymbol(pMoney)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Money"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pMoney</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Money gain multiplier"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmemMA,128)
label(returnhereMA)
label(originalcodeMA)
label(exitMA)
label(pMoney)
registersymbol(pMoney)
label(moneyMultiplier)
registersymbol(moneyMultiplier)
alloc(newmemMAS,128)
label(returnhereMAS)
label(originalcodeMAS)
label(exitMAS)

newmemMA:
mov [pMoney],ebx
add [pMoney],1CB0

originalcodeMA:
cvtsi2ss xmm0,[ebx+00001CB0]

exitMA:
jmp returnhereMA

///

newmemMAS:
cmp ecx,[pMoney]
jne originalcodeMAS

cmp [ecx],eax
jg originalcodeMAS
mul [moneyMultiplier]

originalcodeMAS:
mov [ecx],eax
ret 0004

exitMAS:
jmp returnhereMAS

///
pMoney:
dd 0
moneyMultiplier:
dd 2
///

"SaintsRowTheThird.exe"+3E46C5:
jmp newmemMA
nop
nop
nop
returnhereMA:

///

"SaintsRowTheThird.exe"+54BA44:
jmp newmemMAS
returnhereMAS:


 
 
[DISABLE]
dealloc(newmemMA)
dealloc(newmemMAS)
"SaintsRowTheThird.exe"+54BA44:
db 89 01 C2 04 00
//Alt: mov [ecx],eax
//Alt: ret 0004
"SaintsRowTheThird.exe"+3E46C5:
db F3 0F 2A 83 B0 1C 00 00
//Alt: cvtsi2ss xmm0,[ebx+00001CB0]
unregistersymbol(pMoney)
unregistersymbol(moneyMultiplier)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Money"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pMoney</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"x?"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>moneyMultiplier</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>ammo pouch reload - Code :mov [esi+04],edx</Description>
      <Address>00B52F42</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>752F42</ModuleNameOffset>
      <Before>
        <Byte>02</Byte>
        <Byte>8B</Byte>
        <Byte>C2</Byte>
        <Byte>2B</Byte>
        <Byte>D0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>56</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>56</Byte>
        <Byte>08</Byte>
        <Byte>85</Byte>
        <Byte>D2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo - Code :sub [edi],eax</Description>
      <Address>009BBB57</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>5BBB57</ModuleNameOffset>
      <Before>
        <Byte>82</Byte>
        <Byte>1A</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>FE</Byte>
        <Byte>E8</Byte>
        <Byte>30</Byte>
        <Byte>AB</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health +- Code :movss [esi+00001CC8],xmm0</Description>
      <Address>00938C99</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>538C99</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>94</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health access 1 Code :movss xmm0,[eax+00001CC8]</Description>
      <Address>005525FE</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>1525FE</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
        <Byte>7E</Byte>
        <Byte>19</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>80</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2A</Byte>
        <Byte>C9</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health access 2 Code :movss xmm0,[ecx+00001CC8]</Description>
      <Address>004D0BCD</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>D0BCD</ModuleNameOffset>
      <Before>
        <Byte>08</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>7E</Byte>
        <Byte>29</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>81</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2A</Byte>
        <Byte>C8</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>*health access 3 Code :movss xmm0,[esi+00001CC8]</Description>
      <Address>007A7BE4</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>3A7BE4</ModuleNameOffset>
      <Before>
        <Byte>F0</Byte>
        <Byte>85</Byte>
        <Byte>F6</Byte>
        <Byte>74</Byte>
        <Byte>77</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>0D</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>*health access 4 Code :movss xmm1,[esi+00001CC8]</Description>
      <Address>007A7C1D</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>3A7C1D</ModuleNameOffset>
      <Before>
        <Byte>05</Byte>
        <Byte>88</Byte>
        <Byte>B6</Byte>
        <Byte>24</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8E</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C0</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health access 5 (not in combat) Code :movss xmm0,[esi+00001CC8]</Description>
      <Address>00984881</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>584881</ModuleNameOffset>
      <Before>
        <Byte>15</Byte>
        <Byte>64</Byte>
        <Byte>F6</Byte>
        <Byte>47</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C9</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ +- Code :mov [ecx],eax</Description>
      <Address>0094BA44</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>54BA44</ModuleNameOffset>
      <Before>
        <Byte>CA</Byte>
        <Byte>88</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ access Code :cvtsi2ss xmm0,[ebx+00001CB0]</Description>
      <Address>007E46C5</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>3E46C5</ModuleNameOffset>
      <Before>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>1C</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2A</Byte>
        <Byte>83</Byte>
        <Byte>B0</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C0</Byte>
        <Byte>F2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>thorw +- Code :mov [eax+04],ecx</Description>
      <Address>00B53B51</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>753B51</ModuleNameOffset>
      <Before>
        <Byte>02</Byte>
        <Byte>8B</Byte>
        <Byte>F1</Byte>
        <Byte>2B</Byte>
        <Byte>CE</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>48</Byte>
        <Byte>08</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>throw access Code :mov eax,[eax+04]</Description>
      <Address>00B539C1</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>7539C1</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>03</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>C8</Byte>
        <Byte>84</Byte>
        <Byte>DB</Byte>
        <Byte>5B</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pHeroHealth</Name>
      <Address>2A4300B3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoPouch</Name>
      <Address>2A7000A3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoClip</Name>
      <Address>2A7000A7</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
