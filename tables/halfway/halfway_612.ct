<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Get Hero Pointer From AP (Use up AP to get Hero Pointer)"</Description>
      <LastState Activated="1"/>
      <Color>FF8000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//define(address,01F24DCF)
define(bytes,3B 00 8B 04 18)
{$lua}
local results=AOBScan("58 0F B7 5E 01 8B 4D EC C1 E3 02 8B 5C 99 18 3B 00 8B 04 18 0F B6 5E 03 83 C6 03")
if (results~=nil) then
  local count=stringlist_getCount(results)
  if (count&gt;1) then
    local address=stringlist_getString(results,1) --counts from 0, so 0 = first, 1=second, etc...
    return [[define(address,]]..address..[[)
    ]]
    --showMessage(string.format('%X',getAddress("begin1")))
  end
  object_destroy(results)
  results=nil
end
{$asm}

[ENABLE]
//aobscan(address,58 0F B7 5E 01 8B 4D EC C1 E3 02 8B 5C 99 18 3B 00 8B 04 18 0F B6 5E 03 83 C6 03)
assert(address+0F,bytes)
globalalloc(selected,4)
alloc(newmem,$1000)

label(begin1)
label(code)
label(nope)
label(return)
registersymbol(begin1)

newmem:

code:
  cmp eax,[eax]
  cmp ebx,90
  jne nope
  mov [selected],eax
nope:
  cmp eax,[eax]
  mov eax,[eax+ebx]
  jmp return

address+0F:
begin1:
  jmp code
return:

[DISABLE]
begin1:
  db bytes
  // cmp eax,[eax]
  // mov eax,[eax+ebx]

unregistersymbol(begin1)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 01F24DCF

""+1F24DB6: 00 00                 -  add [eax],al
""+1F24DB8: 00 00                 -  add [eax],al
""+1F24DBA: 00 00                 -  add [eax],al
""+1F24DBC: 00 00                 -  add [eax],al
""+1F24DBE: 00 00                 -  add [eax],al
""+1F24DC0: 58                    -  pop eax
""+1F24DC1: 0F B7 5E 01           -  movzx ebx,word ptr [esi+01]
""+1F24DC5: 8B 4D EC              -  mov ecx,[ebp-14]
""+1F24DC8: C1 E3 02              -  shl ebx,02
""+1F24DCB: 8B 5C 99 18           -  mov ebx,[ecx+ebx*4+18]
// ---------- INJECTING HERE ----------
""+1F24DCF: 3B 00                 -  cmp eax,[eax]
""+1F24DD1: 8B 04 18              -  mov eax,[eax+ebx]
// ---------- DONE INJECTING  ----------
""+1F24DD4: 0F B6 5E 03           -  movzx ebx,byte ptr [esi+03]
""+1F24DD8: 83 C6 03              -  add esi,03
""+1F24DDB: FF 24 9D 98 14 F3 66  -  jmp dword ptr [ebx*4+jvm.dll+501498]
""+1F24DE2: 66 90                 -  nop
""+1F24DE4: 00 00                 -  add [eax],al
""+1F24DE6: 00 00                 -  add [eax],al
""+1F24DE8: 00 00                 -  add [eax],al
""+1F24DEA: 00 00                 -  add [eax],al
""+1F24DEC: 00 00                 -  add [eax],al
""+1F24DEE: 00 00                 -  add [eax],al
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Selected Address"</Description>
          <LastState Value="0DD4AD30" Activated="0" RealAddress="00D80020"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>selected</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Selected Name"</Description>
          <LastState Activated="0" RealAddress="0D8E1F0C"/>
          <Color>80000008</Color>
          <VariableType>String</VariableType>
          <Length>20</Length>
          <Unicode>1</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>selected</Address>
          <Offsets>
            <Offset>24</Offset>
            <Offset>34</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Selected AP"</Description>
          <LastState Value="99" Activated="0" RealAddress="0DD4ADC0"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>selected</Address>
          <Offsets>
            <Offset>90</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Selected HP"</Description>
          <LastState Value="100" Activated="0" RealAddress="0DD4ADC4"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>selected</Address>
          <Offsets>
            <Offset>94</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Selected HPMAX"</Description>
          <LastState Value="100" Activated="0" RealAddress="0DD4AD84"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>selected</Address>
          <Offsets>
            <Offset>54</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Selected Agility"</Description>
          <LastState Value="10" Activated="0" RealAddress="0DD4ADA0"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>selected</Address>
          <Offsets>
            <Offset>70</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Selected Aiming"</Description>
          <LastState Value="15" Activated="0" RealAddress="0DD4AD9C"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>selected</Address>
          <Offsets>
            <Offset>6C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
