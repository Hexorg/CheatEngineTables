<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(playerhealthreadAOB,8B 4C 24 24 D9 01 E8)
registersymbol(playerhealthreadAOB)
aobscan(lifereadAOB,8B 40 08 39 46 18)
registersymbol(lifereadAOB)

label(pPlayer)
registersymbol(pPlayer)
label(pPStats1)
registersymbol(pPStats1)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[esp+24]
lea ecx,[ecx-000001DC]
mov [pPlayer],ecx

originalcode:
mov ecx,[esp+24]
fld dword ptr [ecx]

exit:
jmp returnhere

///

newmem2:
mov [pPStats1],eax

originalcode2:
mov eax,[eax+08]
cmp [esi+18],eax

exit2:
jmp returnhere2

///
pPlayer:
dd 0
pPStats1:
dd 0
///

playerhealthreadAOB: //"COI.exe"+A807C:
jmp newmem
nop
returnhere:

lifereadAOB: //"COI.exe"+A83CF:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
playerhealthreadAOB: //"COI.exe"+A807C:
db 8B 4C 24 24 D9 01
//Alt: mov ecx,[esp+24]
//Alt: fld dword ptr [ecx]
unregistersymbol(playerhealthreadAOB)
lifereadAOB: //"COI.exe"+A83CF:
db 8B 40 08 39 46 18
//Alt: mov eax,[eax+08]
//Alt: cmp [esi+18],eax
unregistersymbol(lifereadAOB)
unregistersymbol(pPlayer)
unregistersymbol(pPStats1)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Undead"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthsubAOB,D9 44 24 14 D9 96 DC 01 00 00)
registersymbol(healthsubAOB)
aobscan(healtheventsubAOB,D9 9D DC 01 00 00 8B CD)
registersymbol(healtheventsubAOB)

label(fMinHealth)
registersymbol(fMinHealth)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fstp dword ptr [esi+000001DC]
push eax
mov eax,[fMinHealth]
cmp [pPlayer],esi
jne originalcode
cmp dword ptr [esi+000001DC],eax
jge originalcode
mov dword ptr [esi+000001DC],eax

originalcode:
pop eax//
fld dword ptr [esi+000001DC]//
//fst dword ptr [esi+000001DC]

exit:
jmp returnhere

///

newmem2:
fstp dword ptr [ebp+000001DC]

push eax
mov eax,[fMinHealth]
cmp [pPlayer],ebp
jne originalcode2
cmp dword ptr [ebp+000001DC],eax
jge originalcode2
mov dword ptr [ebp+000001DC],eax

originalcode2:
pop eax//
//fstp dword ptr [ebp+000001DC]

exit2:
jmp returnhere2

///
fMinHealth:
dd (float)1.0
///

healthsubAOB+4: //"COI.exe"+119F30:
jmp newmem
nop
returnhere:

healtheventsubAOB: //"COI.exe"+118F3C:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthsubAOB+4: //"COI.exe"+119F30:
db D9 96 DC 01 00 00
//Alt: fst dword ptr [esi+000001DC]
unregistersymbol(healthsubAOB)
healtheventsubAOB: //"COI.exe"+118F3C:
db D9 9D DC 01 00 00
//Alt: fstp dword ptr [ebp+000001DC]
unregistersymbol(healtheventsubAOB)
unregistersymbol(fMinHealth)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Lock at 5"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
fMinHealth:
dd (float)5.0

//[pPlayer]+1dc:
//dd (float)5.0

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
fMinHealth:
dd (float)1.0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Inf. Throwing Object"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammosubAOB,89 8E D8 01 00 00 8B 86)
registersymbol(ammosubAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pPlayer],esi
jne originalcode
cmp ecx,1
jge originalcode
mov ecx,1

originalcode:
mov [esi+000001D8],ecx

exit:
jmp returnhere

ammosubAOB: //"COI.exe"+116A4A:
jmp newmem
nop
returnhere:

//[pPlayer]+1d8:
//dd #10


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammosubAOB: //"COI.exe"+116A4A:
db 89 8E D8 01 00 00
//Alt: mov [esi+000001D8],ecx
unregistersymbol(ammosubAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Inf. Life (won't drop below 2)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea ecx,[esp+18]
pushfd
cmp edx,2
jge originalcode
mov edx,2

originalcode:
popfd//
//lea ecx,[esp+18]
mov [edi],edx

exit:
jmp returnhere

"COI.exe"+1146C5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"COI.exe"+1146C5:
db 8D 4C 24 18 89 17
//Alt: lea ecx,[esp+18]
//Alt: mov [edi],edx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>1DC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Throwing Objects"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>1D8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Life"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPStats1</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"----------------------------------"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>045164F0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>04A3BE04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>07DA9F24</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>09E0C81C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>09E0C860</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0256009C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0958A078</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>2CE62768</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>44507D78</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>44B96508</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(lifereadAOB,8B 40 08 39 46 18)
registersymbol(lifereadAOB)

label(pPStats1)
registersymbol(pPStats1)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pPStats1],eax

originalcode2:
mov eax,[eax+08]
cmp [esi+18],eax

exit2:
jmp returnhere2

///
pPStats1:
dd 0
///

lifereadAOB: //"COI.exe"+A83CF:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
lifereadAOB: //"COI.exe"+A83CF:
db 8B 40 08 39 46 18
//Alt: mov eax,[eax+08]
//Alt: cmp [esi+18],eax
unregistersymbol(lifereadAOB)
unregistersymbol(pPStats1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(lifecheckzeroAOB,83 78 08 00 75 3C D9 EE)
registersymbol(lifecheckzeroAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [eax+08],01
jge originalcode
mov dword ptr [eax+08],01

originalcode:
cmp dword ptr [eax+08],00
jne lifecheckzeroAOB+42 //COI.exe+11A7F7

exit:
jmp returnhere

lifecheckzeroAOB: //"COI.exe"+11A7B5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
lifecheckzeroAOB: //"COI.exe"+11A7B5:
db 83 78 08 00 75 3C
//Alt: cmp dword ptr [eax+08],00
//Alt: jne COI.exe+11A7F7
unregistersymbol(lifecheckzeroAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Inf. Life (won't drop below 1)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(lifecheck2ondeadAOB,39 58 08 7F 25)
registersymbol(lifecheck2ondeadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [eax+08],02
jge originalcode
mov [eax+08],02

originalcode:
cmp [eax+08],ebx
jg lifecheck2ondeadAOB+2A //COI.exe+170C60

exit:
jmp returnhere

lifecheck2ondeadAOB: //"COI.exe"+170C36:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
lifecheck2ondeadAOB: //"COI.exe"+170C36:
db 39 58 08 7F 25
//Alt: cmp [eax+08],ebx
//Alt: jg COI.exe+170C60
unregistersymbol(lifecheck2ondeadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healtheventsubAOB,D9 9D DC 01 00 00 8B CD)
registersymbol(healtheventsubAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
fstp dword ptr [ebp+000001DC]

cmp [pPlayer],ebp
jne originalcode2
cmp dword ptr [ebp+000001DC],(float)1.0
jge originalcode2
mov dword ptr [ebp+000001DC],(float)1.0

originalcode2:
//fstp dword ptr [ebp+000001DC]

exit2:
jmp returnhere2

healtheventsubAOB: //"COI.exe"+118F3C:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
healtheventsubAOB: //"COI.exe"+118F3C:
db D9 9D DC 01 00 00
//Alt: fstp dword ptr [ebp+000001DC]
unregistersymbol(healtheventsubAOB)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>playerhealthreadAOB</Name>
      <Address>0141807C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lifereadAOB</Name>
      <Address>014183CF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>0132002C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPStats1</Name>
      <Address>01320030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthsubAOB</Name>
      <Address>01489F2C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healtheventsubAOB</Name>
      <Address>01488F3C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMinHealth</Name>
      <Address>01B80066</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammosubAOB</Name>
      <Address>01486A4A</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?t=567923#5501257</Comments>
</CheatTable>
