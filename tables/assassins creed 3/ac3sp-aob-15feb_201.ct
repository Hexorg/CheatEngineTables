<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>115</ID>
      <Description>"Daijobu's code"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Unlimited Health Max HP Fixed / NP1"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//Enable Part 1
alloc(connorhp,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(connorloc,4)
label(spring)
registersymbol(spring)
aobscan(connorhealth,66 89 4E 5C 85 FF * * 0C 01 * * 8B 4E 74)

connorhp: //this is allocated memory, you have read,write,execute access
//place your code here
mov [connorloc],esi //pointer display in table - not included @ table
mov cx,ff //set hp to 255
mov [esi+5C],cx //set current hp
mov [esi+5E],64 //always set max hp to 100
test edi,edi

originalcode:
//mov [esi+5C],cx
//test edi,edi

exit:
jmp returnhere

connorhealth: //aobscan
spring:
jmp connorhp
nop
returnhere:

//Enable Part 2
alloc(connorhp2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
label(lemmings)
registersymbol(lemmings)
aobscan(connorhealth2,57 8B 7D 08 85 FF 0F 9E C2 4A 23 D7 3B CA)

connorhp2: //this is allocated memory, you have read,write,execute access
//place your code here
push eax //go away!
mov eax,[esi+5E] //copy value from max health
push edi
mov edi,eax //put max health into bar every hit
pop eax //changed my mind, come back!
test edi,edi

originalcode2:
//push edi
//mov edi,[ebp+08]
//test edi,edi

exit2:
jmp returnhere2

connorhealth2: //aobscan
lemmings:
jmp connorhp2
nop
returnhere2:

[DISABLE]
//Disable Part 1
dealloc(connorhp)
spring: //aobscan return
mov [esi+5C],cx
test edi,edi
unregistersymbol(spring)

//Disable Part 2
dealloc(connorhp2)
lemmings: //aobscan return
push edi
mov edi,[ebp+08]
test edi,edi
unregistersymbol(lemmings)
//remove pointer allocation
dealloc(connorloc)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>97</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"Set active resource to 99999 if below 99999 / NP2"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(mirror,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(mirrorl)
label(setmoney)
label(continuem)
label(jump1)
registersymbol(mirrorl)
globalalloc(increaseX,4)
aobscan(mirroraob,** ** 89 41 0C B0 01 5D C2 04 00 32 C0)

mirror: //this is allocated memory, you have read,write,execute access
//place your code here
continuem:
cmp eax,1869F //check if 99999
jb setmoney //jump if below ^^
cmp eax,1869F //check if we can skip sub for funs
jbe jump1 //jump to avoid subtract
sub eax,edx //original (works on 99999+)
jump1:
mov [increaseX],ecx //pointer+c display, can be ignored
mov [ecx+0C],eax //move and loop-di-loop
mov al,01 //original
pop ebp //original
ret 0004 //original

setmoney:
mov eax,1869F //set 99999 when needed
jmp continuem


originalcode:
//sub eax,edx
//mov [ecx+0C],eax
//mov al,01
//pop ebp
//ret 0004

mirroraob:
mirrorl:
jmp mirror

exit:
jmp returnhere

returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
aobscan(mirroraob,E9 ** ** ** ** E9 ** ** ** ** 00 32 C0)
dealloc(mirror)
dealloc(increaseX)
mirrorl:
sub eax,edx
mov [ecx+0C],eax
mov al,01
pop ebp
ret 0004
unregistersymbol(mirrorl)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>98</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>124</ID>
              <Description>"PTR CURRENT ACTIVE RESOURCE (Gun, Bait, Throw Money etc.)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>increaseX</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>114</ID>
      <Description>"JohnT's code"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>110</ID>
          <Description>"Unlimited Ally Health / NP3"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(ally)
registersymbol(ally)
aobscan(allyhealth,0F BF 41 5C C3 CC CC CC CC CC CC CC CC CC CC CC 0F BF 41 5E)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

cmp dword ptr [ecx+F4],(int)1
je originalcode
mov eax,(int)255
mov [ecx+5C],eax
originalcode:
movsx eax,word ptr [ecx+5C]
ret 

exit:
jmp returnhere

allyhealth:
ally:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
aobscan(allyhealth,E9 XX XX XX XX CC CC CC CC CC CC CC CC CC CC CC 0F BF 41 5E)
dealloc(newmem)
ally:
movsx eax,word ptr [ecx+5C]
ret
unregistersymbol(ally)
//Alt: db 0F BF 41 5C C3
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>99</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"Kill Unlimited Civilians / NP9"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(kill)
registersymbol(kill)
aobscan(civilians,8B 45 08 79 04 85 C0 78 17 66 89 46 5C 85 C0 79 0F A1 *C ** ** 02 6A 00 50)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ebp+08],#0

originalcode:
mov eax,[ebp+08]
//OLD jns AC3SP.AK::MusicEngine::AddBackgroundMusicBus+1F82C6
jns AC3SP.AK::MusicEngine::GetDefaultInitSettings+698666

exit:
jmp returnhere
civilians:
kill:
jmp newmem
returnhere:

 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
aobscan(cibilians,E9 XX XX XX XX 85 C0 78 17 66 89 46 5C 85 C0 79 0F A1 *C ** ** 02 6A 00 50)
dealloc(newmem)
kill:
mov eax,[ebp+08]
//OLD jns AC3SP.AK::MusicEngine::AddBackgroundMusicBus+1F82C6
jns AC3SP.AK::MusicEngine::GetDefaultInitSettings+698666
unregistersymbol(kill)
//Alt: db 8B 45 08 79 04
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>105</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Freeze Stopwatch Timer 7.77 sec. / NP6"</Description>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(stopwatch,64)
label(returnhere)
label(exit)
//aobscan(RetCheck, e8 xx xx xx xx 8d 8b 08 01 00 00 e8 xx xx xx xx 51)

aobscan(RetCheck,8B C8 DE C1 25 FF FF FF 7F 89 45 FC)
aobscan(StopwatchAOB, 8B 51 1C 8B 02 8B 52 04 xx xx xx xx xx 89 45 F8 )

stopwatch:
cmp [ebp+4],RetCheck+28
jne short exit
mov [ecx],eax
sub [ecx],38E8C // 7.77 seconds * 30000 = 233100 = 38E8C(hex)

exit:
sub eax,[ecx] //original
sbb edx,[ecx+04] //original
jmp returnhere

StopwatchAOB+8:
jmp stopwatch
returnhere:

[DISABLE]
aobscan(StopwatchAOB, 8B 51 1C 8B 02 8B 52 04 xx xx xx xx xx 89 45 F8 )
StopwatchAOB+8:
sub eax,[ecx]
sbb edx,[ecx+04]
//Alt: db 2B 01 1B 51 04
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>102</Key>
              </Keys>
              <Description>Freeze Stopwatch Timer 7.77 sec.</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Freeze Countdown Timer 25 sec. / NP5"</Description>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
globalalloc(Countdown,128)
label(returnhere)
label(exit)
//label(timehack)

//aobscan(RetCheck1,D9 5D FC 80 BE FC 00 00 00 00 74 11 )
//aobscan(RetCheck2,D9 5D FC 0F B6 46 66 D9 45 FC 50 51 )
//aobscan(RetCheck3,8D 8E 38 02 00 00 E8 xx xx xx xx 51 D9 1C 24 E8 )
//aobscan(RetCheck4,6A 01 8b ce E8 xx xx xx xx 51 D9 1C 24 E8 )
aobscan(CountdownAOB,8B 41 1C 8B 38 8B 70 04 xx xx xx xx xx 08 )

Countdown:
//cmp [ebp+04],RetCheck1
//je short timehack
//cmp [ebp+04],RetCheck2
//je short timehack
//cmp [ebp+04],RetCheck3+0b
//je short timehack
//cmp [ebp+04],RetCheck4+09
//je short timehack
//jmp short exit

Countdown:
mov [ecx+08],edi
add [ecx+08],B71B0      // always 25 seconds left, (25 * 30000 = 750000 = B71B0 (hex)

exit:
mov eax,[ecx+0C] //original
mov edx,[ecx+08] //original
jmp returnhere

CountdownAOB+08:
jmp Countdown
db 08
returnhere:

[DISABLE]
dealloc(Countdown)
aobscan(CountdownAOB,8B 41 1C 8B 38 8B 70 04 xx xx xx xx xx 08 )
CountdownAOB+08:
mov eax,[ecx+0C]
mov edx,[ecx+08]
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>101</Key>
              </Keys>
              <Description>Freeze Countdown Timer 25 sec.</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>116</ID>
      <Description>"HiSaZuL's code"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Super Stealth / NP4 Enable Script"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(stealth,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(pstealth,4)
label(aobstealth_jmp)
registersymbol(aobstealth_jmp)
aobscan(aobstealth,C1 E8 05 85 3C 82 * * * * * * * 80 B8 88 01 00 00 00)

stealth: //this is allocated memory, you have read,write,execute access
//place your code here
shr eax,05
mov [pstealth],edx
test [edx+eax*4],edi

originalcode:
//shr eax,05
//test [edx+eax*4],edi

exit:
jmp returnhere

aobstealth: //"AC3SP.exe"+C1B273
aobstealth_jmp:
jmp stealth
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
aobstealth_jmp: //"AC3SP.exe"+C1B273
shr eax,05
test [edx+eax*4],edi
dealloc(stealth)
unregistersymbol(aobstealth_jmp)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>100</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>117</ID>
              <Description>"INFO: NP7 ON | NP8 OFF"</Description>
              <Options moRecursiveSetValue="1"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>22</ID>
                  <Description>"Pointer Stealth"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pstealth</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>103</Key>
                      </Keys>
                      <Description>Freeze it</Description>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Deactivate</Action>
                      <Keys>
                        <Key>104</Key>
                      </Keys>
                      <Description>UnFreeze it</Description>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>103</Key>
                      </Keys>
                      <Value>12058997</Value>
                      <Description>ON</Description>
                      <ID>2</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>104</Key>
                      </Keys>
                      <Value>12058998</Value>
                      <Description>OFF</Description>
                      <ID>3</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>125</ID>
      <Description>"Deprecated"</Description>
      <Options moHideChildren="1"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>121</ID>
          <Description>"1.03 Stealth Pointer VALUE: 12058997=ON 12058998=OFF"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"AC3SP.exe"+022230A0</Address>
          <Offsets>
            <Offset>C</Offset>
            <Offset>40</Offset>
            <Offset>18</Offset>
            <Offset>58</Offset>
            <Offset>1A4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>increaseX</Name>
      <Address>070D0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pstealth</Name>
      <Address>070E0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Countdown</Name>
      <Address>30E70000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>connorloc</Name>
      <Address>070F0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
