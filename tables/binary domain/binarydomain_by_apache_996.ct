<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Infinite Ammo"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
============================================================
 Binary Domain (Steam Version)
 Game Version  : 1.0.0.1
 Author        : Apache81
 CE Version    : 6.4
 Table Version : 1.0
 Script Version: 1.0
 Script Cheat  : Infinite Ammo

 History:
    30-March-2015 v1.0 -&gt; BinaryDomain.exe v1.0.0.1
       - Infinite Ammo (script)
       - No Relaoad (script)
       - Infinite Grenades (script)
       - Max Credits When Get Some (script)
       - Free Purchases (script)
       - Max Thrust When Changed (script)
       - Infinite First Aid Kit (script)
       - Infinite Bosonic Charge (script)
============================================================
}

[ENABLE]

aobscanmodule(aob_ammo1,BinaryDomain.exe,66 89 87 66 02 00 00) // should be unique
alloc(newmem1,$1000)

label(init1)
label(code1)
label(originalcode1)
label(return1)

aobscanmodule(aob_ammo2,BinaryDomain.exe,48 66 89 87 66 02 00 00) // should be unique
alloc(newmem2,$1000)

label(init2)
label(code2)
label(return2)

globalalloc(ammoPouchPointer,4)

ammoPouchPointer:
  dd 0

newmem1:

init1:
  mov [ammoPouchPointer],edi
  jmp code1

code1:
  push #700
  pop ax
  jmp originalcode1

originalcode1:
  mov [edi+00000266],ax
  jmp return1

aob_ammo1:
  jmp init1
  nop
  nop
return1:
registersymbol(aob_ammo1)



newmem2:

init2:
  mov [ammoPouchPointer],edi
  jmp code2

code2:
  //dec eax
  //mov [edi+00000266],ax
  nop
  jmp return2

aob_ammo2:
  jmp init2
  nop
  nop
  nop
return2:
registersymbol(aob_ammo2)

[DISABLE]

aob_ammo1:
  db 66 89 87 66 02 00 00

unregistersymbol(aob_ammo1)
unregistersymbol(ammoPouchPointer)
dealloc(newmem1)

{
// ORIGINAL CODE - INJECTION POINT: "BinaryDomain.exe"+3F51EC

"BinaryDomain.exe"+3F51C8: 85 ED                    -  test ebp,ebp
"BinaryDomain.exe"+3F51CA: 74 13                    -  je BinaryDomain.exe+3F51DF
"BinaryDomain.exe"+3F51CC: 8B 87 60 02 00 00        -  mov eax,[edi+00000260]
"BinaryDomain.exe"+3F51D2: 66 8B 8F 66 02 00 00     -  mov cx,[edi+00000266]
"BinaryDomain.exe"+3F51D9: 66 3B 48 6C              -  cmp cx,[eax+6C]
"BinaryDomain.exe"+3F51DD: 76 29                    -  jna BinaryDomain.exe+3F5208
"BinaryDomain.exe"+3F51DF: 0F B7 87 66 02 00 00     -  movzx eax,word ptr [edi+00000266]
"BinaryDomain.exe"+3F51E6: 66 85 C0                 -  test ax,ax
"BinaryDomain.exe"+3F51E9: 76 1D                    -  jna BinaryDomain.exe+3F5208
"BinaryDomain.exe"+3F51EB: 48                       -  dec eax
// ---------- INJECTING HERE ----------
"BinaryDomain.exe"+3F51EC: 66 89 87 66 02 00 00     -  mov [edi+00000266],ax
// ---------- DONE INJECTING  ----------
"BinaryDomain.exe"+3F51F3: 85 DB                    -  test ebx,ebx
"BinaryDomain.exe"+3F51F5: 74 11                    -  je BinaryDomain.exe+3F5208
"BinaryDomain.exe"+3F51F7: 66 85 C0                 -  test ax,ax
"BinaryDomain.exe"+3F51FA: 75 0C                    -  jne BinaryDomain.exe+3F5208
"BinaryDomain.exe"+3F51FC: BA 01 00 00 00           -  mov edx,00000001
"BinaryDomain.exe"+3F5201: 66 89 97 66 02 00 00     -  mov [edi+00000266],dx
"BinaryDomain.exe"+3F5208: 8B 44 24 10              -  mov eax,[esp+10]
"BinaryDomain.exe"+3F520C: 5E                       -  pop esi
"BinaryDomain.exe"+3F520D: 5D                       -  pop ebp
"BinaryDomain.exe"+3F520E: 5B                       -  pop ebx
}

aob_ammo2:
  db 48 66 89 87 66 02 00 00

unregistersymbol(aob_ammo2)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "BinaryDomain.exe"+3F51EB

"BinaryDomain.exe"+3F51C6: 75 40                    -  jne BinaryDomain.exe+3F5208
"BinaryDomain.exe"+3F51C8: 85 ED                    -  test ebp,ebp
"BinaryDomain.exe"+3F51CA: 74 13                    -  je BinaryDomain.exe+3F51DF
"BinaryDomain.exe"+3F51CC: 8B 87 60 02 00 00        -  mov eax,[edi+00000260]
"BinaryDomain.exe"+3F51D2: 66 8B 8F 66 02 00 00     -  mov cx,[edi+00000266]
"BinaryDomain.exe"+3F51D9: 66 3B 48 6C              -  cmp cx,[eax+6C]
"BinaryDomain.exe"+3F51DD: 76 29                    -  jna BinaryDomain.exe+3F5208
"BinaryDomain.exe"+3F51DF: 0F B7 87 66 02 00 00     -  movzx eax,word ptr [edi+00000266]
"BinaryDomain.exe"+3F51E6: 66 85 C0                 -  test ax,ax
"BinaryDomain.exe"+3F51E9: 76 1D                    -  jna BinaryDomain.exe+3F5208
// ---------- INJECTING HERE ----------
"BinaryDomain.exe"+3F51EB: 48                       -  dec eax
"BinaryDomain.exe"+3F51EC: 66 89 87 66 02 00 00     -  mov [edi+00000266],ax
// ---------- DONE INJECTING  ----------
"BinaryDomain.exe"+3F51F3: 85 DB                    -  test ebx,ebx
"BinaryDomain.exe"+3F51F5: 74 11                    -  je BinaryDomain.exe+3F5208
"BinaryDomain.exe"+3F51F7: 66 85 C0                 -  test ax,ax
"BinaryDomain.exe"+3F51FA: 75 0C                    -  jne BinaryDomain.exe+3F5208
"BinaryDomain.exe"+3F51FC: BA 01 00 00 00           -  mov edx,00000001
"BinaryDomain.exe"+3F5201: 66 89 97 66 02 00 00     -  mov [edi+00000266],dx
"BinaryDomain.exe"+3F5208: 8B 44 24 10              -  mov eax,[esp+10]
"BinaryDomain.exe"+3F520C: 5E                       -  pop esi
"BinaryDomain.exe"+3F520D: 5D                       -  pop ebp
"BinaryDomain.exe"+3F520E: 5B                       -  pop ebx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Ammo Pouch"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000266"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>ammoPouchPointer</Address>
          <Offsets>
            <Offset>266</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"No Reload"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
============================================================
 Binary Domain (Steam Version)
 Game Version  : 1.0.0.1
 Author        : Apache81
 CE Version    : 6.4
 Table Version : 1.0
 Script Version: 1.0
 Script Cheat  : No Reload

 History:
    30-March-2015 v1.0 -&gt; BinaryDomain.exe v1.0.0.1
       - Infinite Ammo (script)
       - No Relaoad (script)
       - Infinite Grenades (script)
       - Max Credits When Get Some (script)
       - Free Purchases (script)
       - Max Thrust When Changed (script)
       - Infinite First Aid Kit (script)
       - Infinite Bosonic Charge (script)
============================================================
}

[ENABLE]

aobscanmodule(aob_clip,BinaryDomain.exe,BA FF FF 00 00 66 01 97) // should be unique
alloc(newmem,$1000)

label(init)
label(code)
label(return)
globalalloc(clipPointer,4)

newmem:

init:
  mov [clipPointer],edi
  jmp code

code:
  //mov edx,0000FFFF
  mov edx,#0
  jmp return

aob_clip:
  jmp init
return:
registersymbol(aob_clip)

[DISABLE]

aob_clip:
  db BA FF FF 00 00

unregistersymbol(aob_clip)
unregistersymbol(clipPointer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "BinaryDomain.exe"+3F51AA

"BinaryDomain.exe"+3F5194: 76 20                 -  jna BinaryDomain.exe+3F51B6
"BinaryDomain.exe"+3F5196: 8B C7                 -  mov eax,edi
"BinaryDomain.exe"+3F5198: E8 63 75 C2 FF        -  call BinaryDomain.exe+1C700
"BinaryDomain.exe"+3F519D: 85 C0                 -  test eax,eax
"BinaryDomain.exe"+3F519F: 75 09                 -  jne BinaryDomain.exe+3F51AA
"BinaryDomain.exe"+3F51A1: 83 C8 FF              -  or eax,-01
"BinaryDomain.exe"+3F51A4: 5E                    -  pop esi
"BinaryDomain.exe"+3F51A5: 5D                    -  pop ebp
"BinaryDomain.exe"+3F51A6: 5B                    -  pop ebx
"BinaryDomain.exe"+3F51A7: C2 08 00              -  ret 0008
// ---------- INJECTING HERE ----------
"BinaryDomain.exe"+3F51AA: BA FF FF 00 00        -  mov edx,0000FFFF
// ---------- DONE INJECTING  ----------
"BinaryDomain.exe"+3F51AF: 66 01 97 64 02 00 00  -  add [edi+00000264],dx
"BinaryDomain.exe"+3F51B6: 8B C7                 -  mov eax,edi
"BinaryDomain.exe"+3F51B8: E8 83 E6 FF FF        -  call BinaryDomain.exe+3F3840
"BinaryDomain.exe"+3F51BD: 85 C0                 -  test eax,eax
"BinaryDomain.exe"+3F51BF: 76 47                 -  jna BinaryDomain.exe+3F5208
"BinaryDomain.exe"+3F51C1: 83 7C 24 14 00        -  cmp dword ptr [esp+14],00
"BinaryDomain.exe"+3F51C6: 75 40                 -  jne BinaryDomain.exe+3F5208
"BinaryDomain.exe"+3F51C8: 85 ED                 -  test ebp,ebp
"BinaryDomain.exe"+3F51CA: 74 13                 -  je BinaryDomain.exe+3F51DF
"BinaryDomain.exe"+3F51CC: 8B 87 60 02 00 00     -  mov eax,[edi+00000260]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Current Clip Value"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000264"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>clipPointer</Address>
          <Offsets>
            <Offset>264</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"Infinite Grenades"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
============================================================
 Binary Domain (Steam Version)
 Game Version  : 1.0.0.1
 Author        : Apache81
 CE Version    : 6.4
 Table Version : 1.0
 Script Version: 1.0
 Script Cheat  : Infinite Grenades

 History:
    30-March-2015 v1.0 -&gt; BinaryDomain.exe v1.0.0.1
       - Infinite Ammo (script)
       - No Relaoad (script)
       - Infinite Grenades (script)
       - Max Credits When Get Some (script)
       - Free Purchases (script)
       - Max Thrust When Changed (script)
       - Infinite First Aid Kit (script)
       - Infinite Bosonic Charge (script)
============================================================
}

[ENABLE]

aobscanmodule(aob_grenades,BinaryDomain.exe,FE 88 80 00 00 00 8B 4F 70 8B 11) // should be unique
alloc(newmem,$1000)

label(init)
label(code)
label(return)
globalalloc(grenadesPointer,4)

grenadesPointer:
  dd 0

newmem:

init:
  mov [grenadesPointer],eax
  jmp code

code:
  //dec [eax+00000080]
  nop
  jmp return

aob_grenades:
  jmp init
  nop
return:
registersymbol(aob_grenades)

[DISABLE]

aob_grenades:
  db FE 88 80 00 00 00

unregistersymbol(aob_grenades)
unregistersymbol(grenadesPointer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "BinaryDomain.exe"+926F92

"BinaryDomain.exe"+926F6C: 0F 44 4C 24 18        -  cmove ecx,[esp+18]
"BinaryDomain.exe"+926F71: 81 48 0C 00 00 20 00  -  or [eax+0C],00200000
"BinaryDomain.exe"+926F78: 89 50 34              -  mov [eax+34],edx
"BinaryDomain.exe"+926F7B: 89 48 38              -  mov [eax+38],ecx
"BinaryDomain.exe"+926F7E: 89 48 3C              -  mov [eax+3C],ecx
"BinaryDomain.exe"+926F81: 8B 47 68              -  mov eax,[edi+68]
"BinaryDomain.exe"+926F84: 8B 48 60              -  mov ecx,[eax+60]
"BinaryDomain.exe"+926F87: 80 B9 80 00 00 00 00  -  cmp byte ptr [ecx+00000080],00
"BinaryDomain.exe"+926F8E: 76 08                 -  jna BinaryDomain.exe+926F98
"BinaryDomain.exe"+926F90: 8B C1                 -  mov eax,ecx
// ---------- INJECTING HERE ----------
"BinaryDomain.exe"+926F92: FE 88 80 00 00 00     -  dec [eax+00000080]
// ---------- DONE INJECTING  ----------
"BinaryDomain.exe"+926F98: 8B 4F 70              -  mov ecx,[edi+70]
"BinaryDomain.exe"+926F9B: 8B 11                 -  mov edx,[ecx]
"BinaryDomain.exe"+926F9D: 8B 42 50              -  mov eax,[edx+50]
"BinaryDomain.exe"+926FA0: 6A 01                 -  push 01
"BinaryDomain.exe"+926FA2: FF D0                 -  call eax
"BinaryDomain.exe"+926FA4: 8B 4F 68              -  mov ecx,[edi+68]
"BinaryDomain.exe"+926FA7: 8B 51 60              -  mov edx,[ecx+60]
"BinaryDomain.exe"+926FAA: 8A 82 80 00 00 00     -  mov al,[edx+00000080]
"BinaryDomain.exe"+926FB0: 84 C0                 -  test al,al
"BinaryDomain.exe"+926FB2: 76 07                 -  jna BinaryDomain.exe+926FBB
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Grenades"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000080"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>grenadesPointer</Address>
          <Offsets>
            <Offset>80</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Max Credits When Get Some"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
============================================================
 Binary Domain (Steam Version)
 Game Version  : 1.0.0.1
 Author        : Apache81
 CE Version    : 6.4
 Table Version : 1.0
 Script Version: 1.0
 Script Cheat  : Max Credits When Get Some

 History:
    30-March-2015 v1.0 -&gt; BinaryDomain.exe v1.0.0.1
       - Infinite Ammo (script)
       - No Relaoad (script)
       - Infinite Grenades (script)
       - Max Credits When Get Some (script)
       - Free Purchases (script)
       - Max Thrust When Changed (script)
       - Infinite First Aid Kit (script)
       - Infinite Bosonic Charge (script)
============================================================
}

[ENABLE]

aobscanmodule(aob_addCredits,BinaryDomain.exe,89 4E 14 89 54 24 14) // should be unique
alloc(newmem,$1000)

label(init)
label(code)
label(originalcode)
label(return)
globalalloc(creditsPointer,4)

creditsPointer:
  dd 0

newmem:

init:
  mov [creditsPointer],esi
  jmp code

code:
  push #99999999
  pop ecx
  jmp originalcode

originalcode:
  mov [esi+14],ecx
  mov [esp+14],edx
  jmp return

aob_addCredits:
  jmp init
  nop
  nop
return:
registersymbol(aob_addCredits)

[DISABLE]

aob_addCredits:
  db 89 4E 14 89 54 24 14

unregistersymbol(aob_addCredits)
unregistersymbol(creditsPointer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "BinaryDomain.exe"+458282

"BinaryDomain.exe"+45825D: 83 C4 04                 -  add esp,04
"BinaryDomain.exe"+458260: 89 44 24 14              -  mov [esp+14],eax
"BinaryDomain.exe"+458264: B8 FF E0 F5 05           -  mov eax,05F5E0FF
"BinaryDomain.exe"+458269: 8B 4C 24 14              -  mov ecx,[esp+14]
"BinaryDomain.exe"+45826D: 3B C8                    -  cmp ecx,eax
"BinaryDomain.exe"+45826F: 0F 4C C1                 -  cmovl eax,ecx
"BinaryDomain.exe"+458272: 89 44 24 14              -  mov [esp+14],eax
"BinaryDomain.exe"+458276: 8B 96 34 02 00 00        -  mov edx,[esi+00000234]
"BinaryDomain.exe"+45827C: 8B 4C 24 14              -  mov ecx,[esp+14]
"BinaryDomain.exe"+458280: 03 D3                    -  add edx,ebx
// ---------- INJECTING HERE ----------
"BinaryDomain.exe"+458282: 89 4E 14                 -  mov [esi+14],ecx
"BinaryDomain.exe"+458285: 89 54 24 14              -  mov [esp+14],edx
// ---------- DONE INJECTING  ----------
"BinaryDomain.exe"+458289: B8 FF FF FF 7F           -  mov eax,7FFFFFFF
"BinaryDomain.exe"+45828E: 8B 4C 24 14              -  mov ecx,[esp+14]
"BinaryDomain.exe"+458292: BA 00 00 00 00           -  mov edx,00000000
"BinaryDomain.exe"+458297: 3B C1                    -  cmp eax,ecx
"BinaryDomain.exe"+458299: 0F 4F C1                 -  cmovg eax,ecx
"BinaryDomain.exe"+45829C: 3B C2                    -  cmp eax,edx
"BinaryDomain.exe"+45829E: 0F 4C C2                 -  cmovl eax,edx
"BinaryDomain.exe"+4582A1: 89 44 24 14              -  mov [esp+14],eax
"BinaryDomain.exe"+4582A5: 8B 44 24 14              -  mov eax,[esp+14]
"BinaryDomain.exe"+4582A9: 89 86 34 02 00 00        -  mov [esi+00000234],eax
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Credits"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000014"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>creditsPointer</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"Free Purchases"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
============================================================
 Binary Domain (Steam Version)
 Game Version  : 1.0.0.1
 Author        : Apache81
 CE Version    : 6.4
 Table Version : 1.0
 Script Version: 1.0
 Script Cheat  : Free Purchases

 History:
    30-March-2015 v1.0 -&gt; BinaryDomain.exe v1.0.0.1
       - Infinite Ammo (script)
       - No Relaoad (script)
       - Infinite Grenades (script)
       - Max Credits When Get Some (script)
       - Free Purchases (script)
       - Max Thrust When Changed (script)
       - Infinite First Aid Kit (script)
       - Infinite Bosonic Charge (script)
============================================================
}

[ENABLE]

aobscanmodule(aob_subCredits,BinaryDomain.exe,2B C7 89 46 14) // should be unique
alloc(newmem,$1000)

label(init)
label(code)
label(originalcode)
label(return)
globalalloc(creditsSubPointer,4)

newmem:

init:
  mov [creditsSubPointer],esi
  jmp code

code:
  push #0
  pop edi
  jmp originalcode

originalcode:
  sub eax,edi
  mov [esi+14],eax
  jmp return

aob_subCredits:
  jmp init
return:
registersymbol(aob_subCredits)

[DISABLE]

aob_subCredits:
  db 2B C7 89 46 14

unregistersymbol(aob_subCredits)
unregistersymbol(creditsSubPointer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "BinaryDomain.exe"+4581F8

"BinaryDomain.exe"+4581D6: 83 EC 08                       -  sub esp,08
"BinaryDomain.exe"+4581D9: 8D 46 0C                       -  lea eax,[esi+0C]
"BinaryDomain.exe"+4581DC: 50                             -  push eax
"BinaryDomain.exe"+4581DD: C7 44 24 04 54 BD 1C 01        -  mov [esp+04],BinaryDomain.exe+DCBD54
"BinaryDomain.exe"+4581E5: 89 44 24 08                    -  mov [esp+08],eax
"BinaryDomain.exe"+4581E9: E8 02 32 5A 00                 -  call BinaryDomain.exe+9FB3F0
"BinaryDomain.exe"+4581EE: 8B 46 14                       -  mov eax,[esi+14]
"BinaryDomain.exe"+4581F1: 83 C4 04                       -  add esp,04
"BinaryDomain.exe"+4581F4: 3B F8                          -  cmp edi,eax
"BinaryDomain.exe"+4581F6: 77 1B                          -  ja BinaryDomain.exe+458213
// ---------- INJECTING HERE ----------
"BinaryDomain.exe"+4581F8: 2B C7                          -  sub eax,edi
"BinaryDomain.exe"+4581FA: 89 46 14                       -  mov [esi+14],eax
// ---------- DONE INJECTING  ----------
"BinaryDomain.exe"+4581FD: 8B 04 24                       -  mov eax,[esp]
"BinaryDomain.exe"+458200: 8B 10                          -  mov edx,[eax]
"BinaryDomain.exe"+458202: 6A 00                          -  push 00
"BinaryDomain.exe"+458204: 8D 4C 24 04                    -  lea ecx,[esp+04]
"BinaryDomain.exe"+458208: FF D2                          -  call edx
"BinaryDomain.exe"+45820A: B8 01 00 00 00                 -  mov eax,00000001
"BinaryDomain.exe"+45820F: 8B E5                          -  mov esp,ebp
"BinaryDomain.exe"+458211: 5D                             -  pop ebp
"BinaryDomain.exe"+458212: C3                             -  ret 
"BinaryDomain.exe"+458213: 8B 04 24                       -  mov eax,[esp]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Credits"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000014"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>creditsSubPointer</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Max Thrust When Changed"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
============================================================
 Binary Domain (Steam Version)
 Game Version  : 1.0.0.1
 Author        : Apache81
 CE Version    : 6.4
 Table Version : 1.0
 Script Version: 1.0
 Script Cheat  : Max Thrust When Changed

 History:
    30-March-2015 v1.0 -&gt; BinaryDomain.exe v1.0.0.1
       - Infinite Ammo (script)
       - No Relaoad (script)
       - Infinite Grenades (script)
       - Max Credits When Get Some (script)
       - Free Purchases (script)
       - Max Thrust When Changed (script)
       - Infinite First Aid Kit (script)
       - Infinite Bosonic Charge (script)
============================================================
}

[ENABLE]

aobscanmodule(aob_thrust,BinaryDomain.exe,89 4D 1C 8B 35 7C BC 54 01) // should be unique
alloc(newmem,$1000)

label(init)
label(code)
label(originalcode)
label(return)
globalalloc(thrustPointer,4)

thrustPointer:
  dd 0

newmem:

init:
  mov [thrustPointer],ebp
  jmp code

code:
  push #40000
  pop ecx
  jmp originalcode

originalcode:
  mov [ebp+1C],ecx
  mov esi,[BinaryDomain.exe+114BC7C]
  jmp return

aob_thrust:
  jmp init
  nop
  nop
  nop
  nop
return:
registersymbol(aob_thrust)

[DISABLE]

aob_thrust:
  db 89 4D 1C 8B 35 7C BC 54 01

unregistersymbol(aob_thrust)
unregistersymbol(thrustPointer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "BinaryDomain.exe"+4DC7AA

"BinaryDomain.exe"+4DC786: 89 44 24 18              -  mov [esp+18],eax
"BinaryDomain.exe"+4DC78A: B8 40 9C 00 00           -  mov eax,00009C40
"BinaryDomain.exe"+4DC78F: 8B 4C 24 18              -  mov ecx,[esp+18]
"BinaryDomain.exe"+4DC793: BA 00 00 00 00           -  mov edx,00000000
"BinaryDomain.exe"+4DC798: 3B C1                    -  cmp eax,ecx
"BinaryDomain.exe"+4DC79A: 0F 4F C1                 -  cmovg eax,ecx
"BinaryDomain.exe"+4DC79D: 3B C2                    -  cmp eax,edx
"BinaryDomain.exe"+4DC79F: 0F 4C C2                 -  cmovl eax,edx
"BinaryDomain.exe"+4DC7A2: 89 44 24 18              -  mov [esp+18],eax
"BinaryDomain.exe"+4DC7A6: 8B 4C 24 18              -  mov ecx,[esp+18]
// ---------- INJECTING HERE ----------
"BinaryDomain.exe"+4DC7AA: 89 4D 1C                 -  mov [ebp+1C],ecx
"BinaryDomain.exe"+4DC7AD: 8B 35 7C BC 54 01        -  mov esi,[BinaryDomain.exe+114BC7C]
// ---------- DONE INJECTING  ----------
"BinaryDomain.exe"+4DC7B3: 85 F6                    -  test esi,esi
"BinaryDomain.exe"+4DC7B5: 0F 84 AF 00 00 00        -  je BinaryDomain.exe+4DC86A
"BinaryDomain.exe"+4DC7BB: 83 7C 24 24 00           -  cmp dword ptr [esp+24],00
"BinaryDomain.exe"+4DC7C0: 74 3E                    -  je BinaryDomain.exe+4DC800
"BinaryDomain.exe"+4DC7C2: 8B C3                    -  mov eax,ebx
"BinaryDomain.exe"+4DC7C4: 99                       -  cdq 
"BinaryDomain.exe"+4DC7C5: 33 C2                    -  xor eax,edx
"BinaryDomain.exe"+4DC7C7: 2B C2                    -  sub eax,edx
"BinaryDomain.exe"+4DC7C9: 83 F8 64                 -  cmp eax,64
"BinaryDomain.exe"+4DC7CC: 7C 58                    -  jnge BinaryDomain.exe+4DC826
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Changed Thrust"</Description>
          <LastState Value="??" Activated="0" RealAddress="0000001C"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>thrustPointer</Address>
          <Offsets>
            <Offset>1C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>43</ID>
      <Description>"Infinite First Aid Kit"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
============================================================
 Binary Domain (Steam Version)
 Game Version  : 1.0.0.1
 Author        : Apache81
 CE Version    : 6.4
 Table Version : 1.0
 Script Version: 1.0
 Script Cheat  : Infinite First Aid Kit

 History:
    30-March-2015 v1.0 -&gt; BinaryDomain.exe v1.0.0.1
       - Infinite Ammo (script)
       - No Relaoad (script)
       - Infinite Grenades (script)
       - Max Credits When Get Some (script)
       - Free Purchases (script)
       - Max Thrust When Changed (script)
       - Infinite First Aid Kit (script)
       - Infinite Bosonic Charge (script)
============================================================
}

[ENABLE]

aobscanmodule(aob_firstAidKit,BinaryDomain.exe,FE 88 81 00 00 00 C3) // should be unique
alloc(newmem,$1000)

label(init)
label(code)
label(return)
globalalloc(firstAidKitPointer,4)

firstAidKitPointer:
  dd 0

newmem:

init:
  mov [firstAidKitPointer],eax
  jmp code

code:
  //dec [eax+00000081]
  nop
  jmp return

aob_firstAidKit:
  jmp init
  nop
return:
registersymbol(aob_firstAidKit)

[DISABLE]

aob_firstAidKit:
  db FE 88 81 00 00 00

unregistersymbol(aob_firstAidKit)
unregistersymbol(firstAidKitPointer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "BinaryDomain.exe"+2155E

"BinaryDomain.exe"+2154A: CC                       -  int 3 
"BinaryDomain.exe"+2154B: CC                       -  int 3 
"BinaryDomain.exe"+2154C: CC                       -  int 3 
"BinaryDomain.exe"+2154D: CC                       -  int 3 
"BinaryDomain.exe"+2154E: CC                       -  int 3 
"BinaryDomain.exe"+2154F: CC                       -  int 3 
"BinaryDomain.exe"+21550: 8B 48 60                 -  mov ecx,[eax+60]
"BinaryDomain.exe"+21553: 80 B9 81 00 00 00 00     -  cmp byte ptr [ecx+00000081],00
"BinaryDomain.exe"+2155A: 76 08                    -  jna BinaryDomain.exe+21564
"BinaryDomain.exe"+2155C: 8B C1                    -  mov eax,ecx
// ---------- INJECTING HERE ----------
"BinaryDomain.exe"+2155E: FE 88 81 00 00 00        -  dec [eax+00000081]
// ---------- DONE INJECTING  ----------
"BinaryDomain.exe"+21564: C3                       -  ret 
"BinaryDomain.exe"+21565: CC                       -  int 3 
"BinaryDomain.exe"+21566: CC                       -  int 3 
"BinaryDomain.exe"+21567: CC                       -  int 3 
"BinaryDomain.exe"+21568: CC                       -  int 3 
"BinaryDomain.exe"+21569: CC                       -  int 3 
"BinaryDomain.exe"+2156A: CC                       -  int 3 
"BinaryDomain.exe"+2156B: CC                       -  int 3 
"BinaryDomain.exe"+2156C: CC                       -  int 3 
"BinaryDomain.exe"+2156D: CC                       -  int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>42</ID>
          <Description>"First Aid Kit"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000081"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>firstAidKitPointer</Address>
          <Offsets>
            <Offset>81</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"Infinite Bosonic Charge"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
============================================================
 Binary Domain (Steam Version)
 Game Version  : 1.0.0.1
 Author        : Apache81
 CE Version    : 6.4
 Table Version : 1.0
 Script Version: 1.0
 Script Cheat  : Infinite Bosonic Charge

 History:
    30-March-2015 v1.0 -&gt; BinaryDomain.exe v1.0.0.1
       - Infinite Ammo (script)
       - No Relaoad (script)
       - Infinite Grenades (script)
       - Max Credits When Get Some (script)
       - Free Purchases (script)
       - Max Thrust When Changed (script)
       - Infinite First Aid Kit (script)
       - Infinite Bosonic Charge (script)
============================================================
}

[ENABLE]

aobscanmodule(aob_bosonicCharge,BinaryDomain.exe,66 29 A8 82 00 00 00) // should be unique
alloc(newmem,$1000)

label(init)
label(code)
label(return)
globalalloc(bosonicPointer,4)

newmem:

init:
  mov [bosonicPointer],eax
  jmp code

code:
  //sub [eax+00000082],bp
  nop
  jmp return

aob_bosonicCharge:
  jmp init
  nop
  nop
return:
registersymbol(aob_bosonicCharge)

[DISABLE]

aob_bosonicCharge:
  db 66 29 A8 82 00 00 00

unregistersymbol(aob_bosonicCharge)
unregistersymbol(bosonicPointer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "BinaryDomain.exe"+AA1B7C

"BinaryDomain.exe"+AA1B61: 0F B7 F7              -  movzx esi,di
"BinaryDomain.exe"+AA1B64: 3B F2                 -  cmp esi,edx
"BinaryDomain.exe"+AA1B66: 7C 05                 -  jnge BinaryDomain.exe+AA1B6D
"BinaryDomain.exe"+AA1B68: 0F B7 E9              -  movzx ebp,cx
"BinaryDomain.exe"+AA1B6B: EB 08                 -  jmp BinaryDomain.exe+AA1B75
"BinaryDomain.exe"+AA1B6D: 66 3B F8              -  cmp di,ax
"BinaryDomain.exe"+AA1B70: 72 03                 -  jb BinaryDomain.exe+AA1B75
"BinaryDomain.exe"+AA1B72: 0F B7 E8              -  movzx ebp,ax
"BinaryDomain.exe"+AA1B75: 8B 44 24 18           -  mov eax,[esp+18]
"BinaryDomain.exe"+AA1B79: 8B 40 60              -  mov eax,[eax+60]
// ---------- INJECTING HERE ----------
"BinaryDomain.exe"+AA1B7C: 66 29 A8 82 00 00 00  -  sub [eax+00000082],bp
// ---------- DONE INJECTING  ----------
"BinaryDomain.exe"+AA1B83: 5F                    -  pop edi
"BinaryDomain.exe"+AA1B84: 5E                    -  pop esi
"BinaryDomain.exe"+AA1B85: 5D                    -  pop ebp
"BinaryDomain.exe"+AA1B86: 66 8B C3              -  mov ax,bx
"BinaryDomain.exe"+AA1B89: 5B                    -  pop ebx
"BinaryDomain.exe"+AA1B8A: 59                    -  pop ecx
"BinaryDomain.exe"+AA1B8B: C2 08 00              -  ret 0008
"BinaryDomain.exe"+AA1B8E: CC                    -  int 3 
"BinaryDomain.exe"+AA1B8F: CC                    -  int 3 
"BinaryDomain.exe"+AA1B90: 53                    -  push ebx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Bosonic Charge"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000082"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>bosonicPointer</Address>
          <Offsets>
            <Offset>82</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Decrementa Munizioni_1</Description>
      <Address>007F51EC</Address>
      <ModuleName>BinaryDomain.exe</ModuleName>
      <ModuleNameOffset>3F51EC</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>76</Byte>
        <Byte>1D</Byte>
        <Byte>48</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>89</Byte>
        <Byte>87</Byte>
        <Byte>66</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>DB</Byte>
        <Byte>74</Byte>
        <Byte>11</Byte>
        <Byte>66</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Decrementa Granate</Description>
      <Address>00D26F92</Address>
      <ModuleName>BinaryDomain.exe</ModuleName>
      <ModuleNameOffset>926F92</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>76</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>FE</Byte>
        <Byte>88</Byte>
        <Byte>80</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
        <Byte>70</Byte>
        <Byte>8B</Byte>
        <Byte>11</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Incrementa Crediti</Description>
      <Address>00858282</Address>
      <ModuleName>BinaryDomain.exe</ModuleName>
      <ModuleNameOffset>458282</ModuleNameOffset>
      <Before>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
        <Byte>03</Byte>
        <Byte>D3</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>4E</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
        <Byte>B8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Decrementa Crediti</Description>
      <Address>008581FA</Address>
      <ModuleName>BinaryDomain.exe</ModuleName>
      <ModuleNameOffset>4581FA</ModuleNameOffset>
      <Before>
        <Byte>F8</Byte>
        <Byte>77</Byte>
        <Byte>1B</Byte>
        <Byte>2B</Byte>
        <Byte>C7</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>04</Byte>
        <Byte>24</Byte>
        <Byte>8B</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Decrementa Munizioni_2</Description>
      <Address>007F51EC</Address>
      <ModuleName>BinaryDomain.exe</ModuleName>
      <ModuleNameOffset>3F51EC</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>76</Byte>
        <Byte>1D</Byte>
        <Byte>48</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>89</Byte>
        <Byte>87</Byte>
        <Byte>66</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>DB</Byte>
        <Byte>74</Byte>
        <Byte>11</Byte>
        <Byte>66</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Decrementa Fiducia</Description>
      <Address>008DC7AA</Address>
      <ModuleName>BinaryDomain.exe</ModuleName>
      <ModuleNameOffset>4DC7AA</ModuleNameOffset>
      <Before>
        <Byte>18</Byte>
        <Byte>8B</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>4D</Byte>
        <Byte>1C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>35</Byte>
        <Byte>7C</Byte>
        <Byte>BC</Byte>
        <Byte>54</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Decrementa Pronto Soccorso</Description>
      <Address>0042155E</Address>
      <ModuleName>BinaryDomain.exe</ModuleName>
      <ModuleNameOffset>2155E</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>76</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>FE</Byte>
        <Byte>88</Byte>
        <Byte>81</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Decrementa Clip</Description>
      <Address>007F51AF</Address>
      <ModuleName>BinaryDomain.exe</ModuleName>
      <ModuleNameOffset>3F51AF</ModuleNameOffset>
      <Before>
        <Byte>BA</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>01</Byte>
        <Byte>97</Byte>
        <Byte>64</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>C7</Byte>
        <Byte>E8</Byte>
        <Byte>83</Byte>
        <Byte>E6</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Decrementa Carica Bosonica</Description>
      <Address>00EA1B7C</Address>
      <ModuleName>BinaryDomain.exe</ModuleName>
      <ModuleNameOffset>AA1B7C</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>18</Byte>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>60</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>29</Byte>
        <Byte>A8</Byte>
        <Byte>82</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>5D</Byte>
        <Byte>66</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pBullet</Name>
      <Address>075B0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoPouch</Name>
      <Address>14210000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>minAmmoPouch</Name>
      <Address>1BE80010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>1C060020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFunds</Name>
      <Address>1C060030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTrust</Name>
      <Address>0F600000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBosonic</Name>
      <Address>0F5E0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AOB4_jmp</Name>
      <Address>0074ED6F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AOB5_jmp</Name>
      <Address>008E8BA2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFirstAidKit</Name>
      <Address>03BA0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AOB6_jmp</Name>
      <Address>00E9FE1C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AOB7_jmp</Name>
      <Address>004213CE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>grenadesPointer</Name>
      <Address>14640050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>creditsPointer</Name>
      <Address>14640060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>creditsSubPointer</Name>
      <Address>14640070</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>specialAmmoPointer</Name>
      <Address>1C350040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>thrustPointer</Name>
      <Address>14640080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_grenades</Name>
      <Address>00D26F92</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_thrust</Name>
      <Address>008DC7AA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoPouchPointer</Name>
      <Address>14640030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>clipPointer</Name>
      <Address>14640040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>firstAidKitPointer</Name>
      <Address>14640090</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bosonicPointer</Name>
      <Address>146400A0</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
