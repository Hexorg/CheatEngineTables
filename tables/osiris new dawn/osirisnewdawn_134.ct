<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Activate First!"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(weightDef,PlayerInventory:get_isEncumbered+1c)
define(isEncumberedDef,PlayerInventory:get_isEncumbered+a3)
define(isSeverelyEncumberedDef,PlayerInventory:get_isSeverelyEncumbered+a3)
define(lightWeaponsLevelDef,AvatarProfile:get_lightWeaponsLevel+21)


[ENABLE]
{$lua}
LaunchMonoDataCollector()
{$asm}
label(isEncumbered)
label(isSeverelyEncumbered)
label(weight)
label(lightWeaponsLevel)
registersymbol(lightWeaponsLevel)
registersymbol(weight)
registersymbol(isEncumbered)
registersymbol(isSeverelyEncumbered)


weightDef:
weight:
  db F3 0F 10 8E D0 00 00 00

isSeverelyEncumberedDef:
isSeverelyEncumbered:
  db EB 02 33 FF 48 8B C7 48

isEncumberedDef:
isEncumbered:
  db EB 02 33 FF 48 8B C7 48

lightWeaponsLevelDef:
lightWeaponsLevel:
 db 8B 48 2C 48 82 EC 20

[DISABLE]
isEncumbered:
  db EB 02 33 FF 48 8B C7 48

isSeverelyEncumbered:
  db EB 02 33 FF 48 8B C7 48

weight:
  db F3 0F 10 8E D0 00 00 00

lightWeaponsLevel:
 db 8B 48 2C 48 82 EC 20

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Encumberement on/off"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
isEncumbered:
  db 90 90 33 FF 48 8B C7 48
isSeverelyEncumbered:
  db 90 90 33 FF 48 8B C7 48
[DISABLE]
isEncumbered:
  db EB 02 33 FF 48 8B C7 48
isSeverelyEncumbered:
  db EB 02 33 FF 48 8B C7 48

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Show weight pointers"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
alloc(newmem,$1000)
alloc(weight6,8)
label(code)
label(return)
registersymbol(weight6)
newmem:

code:
  movss xmm1,[rsi+000000D0]
  push rax
  lea rax,[rsi+000000D0]
  mov [weight6],rax
  pop rax
  jmp return

weight:
  jmp code
  nop
  nop
  nop

return:

[disable]
weight:
  db F3 0F 10 8E D0 00 00 00

unregistersymbol(weight6)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>48</ID>
              <Description>"current weight"</Description>
              <LastState Value="8.050000191" RealAddress="B1E61DD4"/>
              <VariableType>Float</VariableType>
              <Address>weight6</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>49</ID>
              <Description>"max weight"</Description>
              <LastState Value="80" RealAddress="B1E61DD0"/>
              <VariableType>Float</VariableType>
              <Address>weight6</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"PlayerStats (open Inventory after activation &amp; for an Update)"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,$1000)
alloc(weaponpointer,4)
label(code)
label(return)
registersymbol(weaponpointer)

newmem:

code:
  mov ecx,[rax+2C]
  mov [weaponpointer],rax
  sub rsp,20
  jmp return

lightWeaponsLevel:
 jmp code
 nop
 nop

return:

[DISABLE]

lightWeaponsLevel:
 db 8B 48 2C 48 82 EC 20

unregistersymbol(weaponpointer)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>56</ID>
              <Description>"unusedStatPoints"</Description>
              <LastState Value="102" RealAddress="7CBF1A40"/>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>57</ID>
              <Description>"healthStatPoints"</Description>
              <LastState Value="160" RealAddress="7CBF1A41"/>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>41</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>58</ID>
              <Description>"staminaStatPoints"</Description>
              <LastState Value="248" RealAddress="7CBF1A42"/>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>42</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>59</ID>
              <Description>"strengthStatPoints"</Description>
              <LastState Value="255" RealAddress="7CBF1A43"/>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>43</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"speedStatPoints"</Description>
              <LastState Value="255" RealAddress="7CBF1A44"/>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>61</ID>
              <Description>"unusedBlueprintPoints"</Description>
              <LastState Value="7" RealAddress="7CBF1A45"/>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>45</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>63</ID>
              <Description>"daysSurvived"</Description>
              <LastState Value="31" RealAddress="7CBF1A20"/>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>62</ID>
              <Description>"credits"</Description>
              <LastState Value="12" RealAddress="7CBF1A24"/>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>64</ID>
              <Description>"XP"</Description>
              <LastState Value="1970" RealAddress="7CBF1A28"/>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>65</ID>
              <Description>"lightWeaponsXP"</Description>
              <LastState Value="100" RealAddress="7CBF1A2C"/>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>2c</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"heavyWeaponsXP"</Description>
              <LastState Value="100" RealAddress="7CBF1A30"/>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>67</ID>
              <Description>"specialWeaponsXP"</Description>
              <LastState Value="100" RealAddress="7CBF1A34"/>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>34</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>68</ID>
              <Description>"meleeXP"</Description>
              <LastState Value="230" RealAddress="7CBF1A38"/>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>69</ID>
              <Description>"toolsXP"</Description>
              <LastState Value="100" RealAddress="7CBF1A3C"/>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>3c</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>50</ID>
      <Description>"backup"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>43</ID>
          <Description>"weight pointers"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,83 EC 18 48 89 34 24 48 89 7C 24 08 48 8B F1 F3 0F 10 86 D4 00 00 00 F3 0F 5A C0 F3 0F 10 8E D0 00 00 00 F3 0F 5A C9 F2 0F 5E C1 F2 0F 5A E8 F3 0F 11 6C 24 10 F3 0F 10 44 24 10 F3 0F 5A C0 F3 0F 10 0D 88 00 00 00 F3 0F 5A C9 66 0F 2F C8 0F 8A 4F 00 00 00 0F 83 49 00 00 00 F3 0F10 86 D4 00 00 00 F3 0F 5A C0 F3 0F 10 8E D0 00 00 00 F3 0F 5A C9)
alloc(newmem,$1000)
alloc(weight2,4)
label(code)
label(return)
registersymbol(weight2)
newmem:

code:
  movss xmm1,[rsi+000000D0]
  push rax
  lea rax,[rsi+000000D0]
  mov [weight2],rax
  pop rax
  jmp return

INJECT+1b:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT+1b:
  db F3 0F 10 8E D0 00 00 00

unregistersymbol(INJECT)
unregistersymbol(weight2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1B1B008C

""+1B1B0064: 4A 11 E8                 -  adc rax,rbp
""+1B1B0067: 95                       -  xchg eax,ebp
""+1B1B0068: FF 9A EA 04 80 78        -  call qword ptr [rdx+788004EA]
""+1B1B006E: 33 6B 48                 -  xor ebp,[rbx+48]
""+1B1B0071: 83 EC 18                 -  sub esp,18
""+1B1B0074: 48 89 34 24              -  mov [rsp],rsi
""+1B1B0078: 48 89 7C 24 08           -  mov [rsp+08],rdi
""+1B1B007D: 48 8B F1                 -  mov rsi,rcx
""+1B1B0080: F3 0F 10 86 D4 00 00 00  -  movss xmm0,[rsi+000000D4]
""+1B1B0088: F3 0F 5A C0              -  cvtss2sd xmm0,xmm0
// ---------- INJECTING HERE ----------
""+1B1B008C: F3 0F 10 8E D0 00 00 00  -  movss xmm1,[rsi+000000D0]
// ---------- DONE INJECTING  ----------
""+1B1B0094: F3 0F 5A C9              -  cvtss2sd xmm1,xmm1
""+1B1B0098: F2 0F 5E C1              -  divsd xmm0,xmm1
""+1B1B009C: F2 0F 5A E8              -  cvtsd2ss xmm5,xmm0
""+1B1B00A0: F3 0F 11 6C 24 10        -  movss [rsp+10],xmm5
""+1B1B00A6: F3 0F 10 44 24 10        -  movss xmm0,[rsp+10]
""+1B1B00AC: F3 0F 5A C0              -  cvtss2sd xmm0,xmm0
""+1B1B00B0: F3 0F 10 0D 88 00 00 00  -  movss xmm1,[PlayerInventory:get_isEncumbered+d0]
""+1B1B00B8: F3 0F 5A C9              -  cvtss2sd xmm1,xmm1
""+1B1B00BC: 66 0F 2F C8              -  comisd xmm1,xmm0
""+1B1B00C0: 0F 8A 4F 00 00 00        -  jp PlayerInventory:get_isEncumbered+a5
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>45</ID>
              <Description>"current weight"</Description>
              <VariableType>Float</VariableType>
              <Address>weight2</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>44</ID>
              <Description>"max weight"</Description>
              <VariableType>Float</VariableType>
              <Address>weight2</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"weight pointer (activate and change inventory weight)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,48 89 45 80 48 8D 8E D0 00 00 00) // should be unique
alloc(newmem,$1000)
alloc(weight1,4)

label(code)
label(return)
registersymbol(weight1)
newmem:

code:
  lea rcx,[rsi+000000D0]
  mov [weight1],rcx
  jmp return

INJECT+4:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]
unregistersymbol(weight1)

INJECT+4:
  db 48 8D 8E D0 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 169AA4CA

""+169AA491: 48 89 85 70 FF FF FF           -  mov [rbp-00000090],rax
""+169AA498: BA 01 00 00 00                 -  mov edx,00000001
""+169AA49D: 41 B8 60 36 39 16              -  mov r8d,16393660
""+169AA4A3: 48 83 EC 20                    -  sub rsp,20
""+169AA4A7: 49 BB 40 1C 85 05 00 00 00 00  -  mov r11,System:Object:stelemref
""+169AA4B1: 41 FF D3                       -  call r11d
""+169AA4B4: 48 83 C4 20                    -  add rsp,20
""+169AA4B8: 48 8B 85 70 FF FF FF           -  mov rax,[rbp-00000090]
""+169AA4BF: 48 89 85 78 FF FF FF           -  mov [rbp-00000088],rax
""+169AA4C6: 48 89 45 80                    -  mov [rbp-80],rax
// ---------- INJECTING HERE ----------
""+169AA4CA: 48 8D 8E D0 00 00 00           -  lea rcx,[rsi+000000D0]
// ---------- DONE INJECTING  ----------
""+169AA4D1: BA A0 A5 C6 71                 -  mov edx,71C6A5A0
""+169AA4D6: 48 83 EC 20                    -  sub rsp,20
""+169AA4DA: 49 BB C0 E5 13 42 00 00 00 00  -  mov r11,System:Single:ToString
""+169AA4E4: 41 FF D3                       -  call r11d
""+169AA4E7: 48 83 C4 20                    -  add rsp,20
""+169AA4EB: 4C 8B C0                       -  mov r8,rax
""+169AA4EE: 48 8B 8D 78 FF FF FF           -  mov rcx,[rbp-00000088]
""+169AA4F5: BA 02 00 00 00                 -  mov edx,00000002
""+169AA4FA: 48 83 EC 20                    -  sub rsp,20
""+169AA4FE: 49 BB 40 1C 85 05 00 00 00 00  -  mov r11,System:Object:stelemref
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>41</ID>
              <Description>"current weight"</Description>
              <VariableType>Float</VariableType>
              <Address>weight1</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>42</ID>
              <Description>"max weight"</Description>
              <VariableType>Float</VariableType>
              <Address>weight1</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>lightWeaponsLevel</Name>
      <Address>15D1A9B1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weight</Name>
      <Address>15CF460C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>isEncumbered</Name>
      <Address>15CF4693</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>isSeverelyEncumbered</Name>
      <Address>15CBAD63</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
