<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somecheckzeroonequipAOB,8D 04 90 85 C0 0F 84 ** ** ** ** 83 78 08 00 0F 8E ** ** ** ** 8B)
registersymbol(somecheckzeroonequipAOB)
aobscan(somewriteAOB,89 30 8B 45 10 8B 17)
registersymbol(somewriteAOB)
aobscan(somereadonusageAOB,8B 40 08 5E 8B E5 5D C2 08 00 33 C0 5E 8B E5 5D C2 08 00 CC CC)
registersymbol(somereadonusageAOB)

label(pGold)
registersymbol(pGold)
label(pFocusPoints)
registersymbol(pFocusPoints)
label(pItems)
registersymbol(pItems)

label(bInfItem)
registersymbol(bInfItem)
label(bInfGold)
registersymbol(bInfGold)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isgold)
label(isfocuspoints)
label(isitem)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isgold2)
label(isfocuspoints2)
label(isitem2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)
label(isgold6)
label(isfocuspoints6)
label(isitem6)
label(ispotions6)
label(dopotions6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[eax+edx*4]
test eax,eax
je exit
pushad
cmp [eax],983 //Gold
je isgold
cmp [eax],985 //Foucs Points
je isfocuspoints
xor ecx,ecx
cmp [eax],976 //Blunt Arrow
je isitem
inc ecx
cmp [eax],972 //Broadhead Arrow
je isitem
inc ecx
cmp [eax],973 //Sawtooth Arrow
je isitem
inc ecx
cmp [eax],970 //Fire Arrow
je isitem
inc ecx
cmp [eax],975 //Blast Arrow
je isitem
inc ecx
cmp [eax],971 //Water Arrow
je isitem
inc ecx
cmp [eax],979 //Choke Arrow
je isitem
inc ecx
cmp [eax],978 //Rope Arrow
je isitem
inc ecx
cmp [eax],97e //Flash Bomb
je isitem
inc ecx
cmp [eax],981 //Thorwble
je isitem
inc ecx
cmp [eax],980 //Health Consumable
je isitem
inc ecx
cmp [eax],97f //Poppy Flower
je isitem
jmp originalcode

isgold:
lea edx,[eax+08]
mov [pGold],edx
jmp originalcode

isfocuspoints:
lea edx,[eax+08]
mov [pFocusPoints],edx
jmp originalcode

isitem:
lea edx,[eax+08]
mov [pItems+ecx*4],edx
cmp byte ptr [bInfItem],1
jne originalcode
cmp dword ptr [eax+08],00
jg originalcode
mov dword ptr [eax+08],1
jmp originalcode

originalcode:
popad
//lea eax,[eax+edx*4]
test eax,eax

exit:
jmp returnhere

///

newmem2:
pushfd
cmp [eax-08],983 //Gold
je isgold2
cmp [eax-08],985 //Focus Points
je isfocuspoints2
xor edx,edx
cmp [eax-08],976 //Blunt Arrow
je isitem2
inc edx
cmp [eax-08],972 //Broadhead Arrow
je isitem2
inc edx
cmp [eax-08],973 //Sawtooth Arrow
je isitem2
inc edx
cmp [eax-08],970 //Fire Arrow
je isitem2
inc edx
cmp [eax-08],975 //Blast Arrow
je isitem2
inc edx
cmp [eax-08],971 //Water Arrow
je isitem2
inc edx
cmp [eax-08],979 //Choke Arrow
je isitem2
inc edx
cmp [eax-08],978 //Rope Arrow
je isitem2
inc edx
cmp [eax-08],97e //Flash Bomb
je isitem2
inc edx
cmp [eax-08],981 //Thorwble
je isitem2
inc edx
cmp [eax-08],980 //Health Consumable
je isitem2
inc edx
cmp [eax-08],97f //Poppy Flower
je isitem2
jmp originalcode2

isgold2:
mov [pGold],eax
cmp byte ptr [bInfGold],1
jne originalcode2
cmp [eax],esi
jle originalcode2
mov esi,[eax]
mov ebx,0
jmp originalcode2

isfocuspoints2:
mov [pFocusPoints],eax
jmp originalcode2

isitem2:
mov [pItems+edx*4],eax
cmp byte ptr [bInfItem],1
jne originalcode2
cmp esi,1
jge originalcode2
mov esi,1
mov ebx,0
jmp originalcode2

originalcode2:
popfd
mov [eax],esi
mov eax,[ebp+10]

exit2:
jmp returnhere2

///

newmem6:
pushfd
pushad
cmp [eax],983 //Gold
je isgold6
cmp [eax],985 //Focus Point
je isfocuspoints6
xor ecx,ecx
cmp [eax],976 //Blunt Arrow
je isitem6
inc ecx
cmp [eax],972 //Broadhead Arrow
je isitem6
inc ecx
cmp [eax],973 //Sawtooth Arrow
je isitem6
inc ecx
cmp [eax],970 //Fire Arrow
je isitem6
inc ecx
cmp [eax],975 //Blast Arrow
je isitem6
inc ecx
cmp [eax],971 //Water Arrow
je isitem6
inc ecx
cmp [eax],979 //Choke Arrow
je isitem6
inc ecx
cmp [eax],978 //Rope Arrow
je isitem6
inc ecx
cmp [eax],97e //Flash Bomb
je isitem6
inc ecx
cmp [eax],981 //Thorwble
je isitem6
inc ecx
cmp [eax],980 //Health Consumable
je ispotions6
inc ecx
cmp [eax],97f //Poppy Flower
je ispotions6
jmp originalcode6

isgold6:
lea esi,[eax+08]
mov [pGold],esi
jmp originalcode6

isfocuspoints6:
lea esi,[eax+08]
mov [pFocusPoints],esi
jmp originalcode6

isitem6:
lea esi,[eax+08]
mov [pItems+ecx*4],esi
jmp originalcode6

ispotions6:
mov [pItems+ecx*4],esi

cmp byte ptr [bInfItem],1
jne originalcode6

pushad
push 'G'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je dopotions6
pushad
push 'H'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je dopotions6
jmp originalcode6

dopotions6:
cmp [eax+08],2
jge originalcode6
//mov [eax+08],2
popad
popfd
mov eax,2
pop esi
mov esp,ebp
jmp exit6

originalcode6:
popad
popfd
mov eax,[eax+08]
pop esi
mov esp,ebp

exit6:
jmp returnhere6

///
bInfGold:
db 0
bInfItem:
db 0
pGold:
dd 0
pFocusPoints:
dd 0
pItems:
dd 0
///

somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
jmp newmem
returnhere:

somewriteAOB: //"Shipping-ThiefGame.exe"+C86EF7:
jmp newmem2
returnhere2:

somereadonusageAOB: //"Shipping-ThiefGame.exe"+C86E6B:
jmp newmem6
nop
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
db 8D 04 90 85 C0
//Alt: lea eax,[eax+edx*4]
//Alt: test eax,eax
unregistersymbol(somecheckzeroonequipAOB)
somewriteAOB: //"Shipping-ThiefGame.exe"+C86EF7:
db 89 30 8B 45 10
//Alt: mov [eax],esi
//Alt: mov eax,[ebp+10]
unregistersymbol(somewriteAOB)
somereadonusageAOB: //"Shipping-ThiefGame.exe"+C86E6B:
db 8B 40 08 5E 8B E5
//Alt: mov eax,[eax+08]
//Alt: pop esi
//Alt: mov esp,ebp
unregistersymbol(somereadonusageAOB)

unregistersymbol(bInfGold)
unregistersymbol(bInfItem)

unregistersymbol(pGold)
unregistersymbol(pFocusPoints)
unregistersymbol(pItems)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Inf. Gold"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bInfGold:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bInfGold:
db 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Inf. Item"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bInfItem:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bInfItem:
db 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Cloak script"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(mVisibilityThresholdreadindarkAOB,F3 0F 10 42 6C 0F 2F 42 74 8B 51 08 56 57)
registersymbol(mVisibilityThresholdreadindarkAOB)
aobscan(mVisibilityThresholdreadinlightAOB,0F 2F 42 6C F3 0F 11 45 B0)
registersymbol(mVisibilityThresholdreadinlightAOB)
aobscan(mGrayZoneThresholdreadindark,D9 40 70 51 D9 1C 24)
registersymbol(mGrayZoneThresholdreadindark)

label(bAlwaysCloak)
registersymbol(bAlwaysCloak)

label(pThiefCloakComponent)
registersymbol(pThiefCloakComponent)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pThiefCloakComponent],edx
pushfd
cmp byte ptr [bAlwaysCloak],1
jne originalcode
mov dword ptr [edx+6C],(float)6000.1
mov dword ptr [edx+70],(float)6000.0

originalcode:
popfd
movss xmm0,[edx+6C]

exit:
jmp returnhere

///

newmem2:
mov [pThiefCloakComponent],edx
pushfd
cmp byte ptr [bAlwaysCloak],1
jne originalcode2
mov dword ptr [edx+6C],(float)6000.1
mov dword ptr [edx+70],(float)6000.0

originalcode2:
popfd
comiss xmm0,[edx+6C]
movss [ebp-50],xmm0

exit2:
jmp returnhere2

///

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pThiefCloakComponent],eax
pushfd
cmp byte ptr [bAlwaysCloak],1
jne originalcode6
mov dword ptr [eax+6C],(float)6000.1
mov dword ptr [eax+70],(float)6000.0

originalcode6:
popfd
fld dword ptr [eax+70]
push ecx
fstp dword ptr [esp]

exit6:
jmp returnhere6

///
bAlwaysCloak:
db 0
pThiefCloakComponent:
dd 0
///

mVisibilityThresholdreadindarkAOB: //"Shipping-ThiefGame.exe"+AA077C:
jmp newmem
returnhere:

mVisibilityThresholdreadinlightAOB: //"Shipping-ThiefGame.exe"+A9FDB4:
jmp newmem2
nop
nop
nop
nop
returnhere2:

mGrayZoneThresholdreadindark: //"Shipping-ThiefGame.exe"+AA0851:
jmp newmem6
nop
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
mVisibilityThresholdreadindarkAOB: //"Shipping-ThiefGame.exe"+AA077C:
db F3 0F 10 42 6C
//Alt: movss xmm0,[edx+6C]
unregistersymbol(mVisibilityThresholdreadindarkAOB)
mVisibilityThresholdreadinlightAOB: //"Shipping-ThiefGame.exe"+A9FDB4:
db 0F 2F 42 6C F3 0F 11 45 B0
//Alt: comiss xmm0,[edx+6C]
//Alt: movss [ebp-50],xmm0
unregistersymbol(mVisibilityThresholdreadinlightAOB)
mGrayZoneThresholdreadindark: //"Shipping-ThiefGame.exe"+AA0851:
db D9 40 70 51 D9 1C 24
//Alt: fld dword ptr [eax+70]
//Alt: push ecx
//Alt: fstp dword ptr [esp]
unregistersymbol(mGrayZoneThresholdreadindark)

unregistersymbol(bAlwaysCloak)
unregistersymbol(pThiefCloakComponent)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>65</ID>
              <Description>"Always Cloak"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bAlwaysCloak:
db 1
[pThiefCloakComponent]+6c:
dd (float)6000.1
[pThiefCloakComponent]+70:
dd (float)6000.0

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bAlwaysCloak:
db 0
[pThiefCloakComponent]+6c:
dd (float)2.9
[pThiefCloakComponent]+70:
dd (float)0.01
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>109</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Deactivate</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>109</Key>
                  </Keys>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>63</ID>
              <Description>"mVisibilityThreshold"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pThiefCloakComponent</Address>
              <Offsets>
                <Offset>6C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>64</ID>
              <Description>"mGrayZoneThreshold"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pThiefCloakComponent</Address>
              <Offsets>
                <Offset>70</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Gold"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pGold</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Focus Points"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pFocusPoints</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Blunt Arrow"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Broadhead Arrow"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+4</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Sawtooth Arrow"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+8</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"Fire Arrow"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+c</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Blast Arrow"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+10</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Water Arrow"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+14</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Choke Arrow"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+18</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Rope Arrow"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+1c</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Flash Bomb"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+20</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Thorwble"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+24</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Health Consumable"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+28</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Poppy Flower"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItems+2c</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"[testing]"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0DE4DEE0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>2B758438</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>5A215C18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>355824E8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>355824EC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>355624ec</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>1c207490</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>191A5038</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"No Description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01EE1364</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>355823D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>21E51828</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>05B1E9A0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>207AD71C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>211EBA20</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>211EB714</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Inf. Arrow v2"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
////aobscan(somecheckzeroonequipAOB,8D 04 90 85 C0 0F 84 ** ** ** ** 83 78 08 00 0F 8E ** ** ** ** 8B)
////registersymbol(somecheckzeroonequipAOB)
aobscan(somereadwhenemptyAOB,8B 40 08 33 C9 85 C0 0F 9F C1)
registersymbol(somereadwhenemptyAOB)
aobscan(somereadonusageAOB,8B 40 08 5E 8B E5 5D C2 08 00 33 C0 5E 8B E5 5D C2 08 00 CC CC)
registersymbol(somereadonusageAOB)

alloc(newmem,2048)
////label(returnhere)
////label(originalcode)
////label(exit)

label(newmem12)
label(returnhere12)
label(originalcode12)
label(exit12)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)
label(ispotions6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
/*lea eax,[eax+edx*4]
test eax,eax
je exit
cmp dword ptr [eax+08],00
jg originalcode
mov dword ptr [eax+08],1

originalcode:
//lea eax,[eax+edx*4]
test eax,eax

exit:
jmp returnhere*/

///

newmem12:
pushfd
cmp [eax+08],1
jge originalcode12
mov [eax+08],1
//mov eax,1

originalcode12:
popfd
mov eax,[eax+08]
xor ecx,ecx

exit12:
jmp returnhere12

///

newmem6:
pushfd
pushad
push 'G'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je ispotions6
pushad
push 'H'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je ispotions6
jmp originalcode6

ispotions6:
cmp [eax+08],2
jge originalcode6
//mov [eax+08],2
popfd
mov eax,2
pop esi
mov esp,ebp
jmp exit6

originalcode6:
popfd
mov eax,[eax+08]
pop esi
mov esp,ebp

exit6:
jmp returnhere6

///

////somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
////jmp newmem
////returnhere:

somereadwhenemptyAOB: //"Shipping-ThiefGame.exe"+C86F5A:
jmp newmem12
returnhere12:

somereadonusageAOB: //"Shipping-ThiefGame.exe"+C86E6B:
jmp newmem6
nop
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
////somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
////db 8D 04 90 85 C0
//////Alt: lea eax,[eax+edx*4]
//////Alt: test eax,eax
////unregistersymbol(somecheckzeroonequipAOB)
somereadwhenemptyAOB: //"Shipping-ThiefGame.exe"+C86F5A:
db 8B 40 08 33 C9
//Alt: mov eax,[eax+08]
//Alt: xor ecx,ecx
unregistersymbol(somereadwhenemptyAOB)
somereadonusageAOB: //"Shipping-ThiefGame.exe"+C86E6B:
db 8B 40 08 5E 8B E5
//Alt: mov eax,[eax+08]
//Alt: pop esi
//Alt: mov esp,ebp
unregistersymbol(somereadonusageAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"Inf. Arrow v1"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somecheckzeroonequipAOB,8D 04 90 85 C0 0F 84 ** ** ** ** 83 78 08 00 0F 8E ** ** ** ** 8B)
registersymbol(somecheckzeroonequipAOB)
aobscan(somewriteAOB,89 30 8B 45 10 8B 17)
registersymbol(somewriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[eax+edx*4]
test eax,eax
je exit
cmp dword ptr [eax+08],00
jg originalcode
mov dword ptr [eax+08],1

originalcode:
//lea eax,[eax+edx*4]
test eax,eax

exit:
jmp returnhere

///

newmem2:
pushfd
cmp esi,1
jge originalcode2
mov esi,1
mov ebx,0

originalcode2:
popfd
mov [eax],esi
mov eax,[ebp+10]

exit2:
jmp returnhere2

///

somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
jmp newmem
returnhere:

somewriteAOB: //"Shipping-ThiefGame.exe"+C86EF7:
jmp newmem2
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
db 8D 04 90 85 C0
//Alt: lea eax,[eax+edx*4]
//Alt: test eax,eax
unregistersymbol(somecheckzeroonequipAOB)
somewriteAOB: //"Shipping-ThiefGame.exe"+C86EF7:
db 89 30 8B 45 10
//Alt: mov [eax],esi
//Alt: mov eax,[ebp+10]
unregistersymbol(somewriteAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"Shipping-ThiefGame.exe"+8EB913:
db 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Shipping-ThiefGame.exe"+8EB913:
db 74 2C
//Alt: je Shipping-ThiefGame.AK::MemoryMgr::SetPoolName+64D41
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"Shipping-ThiefGame.exe"+8EB99C:
db 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Shipping-ThiefGame.exe"+8EB99C:
db 74 19
//Alt: je Shipping-ThiefGame.AK::MemoryMgr::SetPoolName+64DB7
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somecheckzeroonequipAOB,8D 04 90 85 C0 0F 84 ** ** ** ** 83 78 08 00 0F 8E ** ** ** ** 8B)
registersymbol(somecheckzeroonequipAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[eax+edx*4]
test eax,eax
je exit
cmp dword ptr [eax+08],00
jg originalcode
mov dword ptr [eax+08],1

originalcode:
//lea eax,[eax+edx*4]
test eax,eax

exit:
jmp returnhere

somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
db 8D 04 90 85 C0
//Alt: lea eax,[eax+edx*4]
//Alt: test eax,eax
unregistersymbol(somecheckzeroonequipAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somereadwhenemptyAOB,8B 40 08 33 C9 85 C0 0F 9F C1)
registersymbol(somereadwhenemptyAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
//mov [eax+08],1
mov eax,1

originalcode2:
//mov eax,[eax+08]
xor ecx,ecx

exit2:
jmp returnhere2

somereadwhenemptyAOB: //"Shipping-ThiefGame.exe"+C86F5A:
jmp newmem2
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
somereadwhenemptyAOB: //"Shipping-ThiefGame.exe"+C86F5A:
db 8B 40 08 33 C9
//Alt: mov eax,[eax+08]
//Alt: xor ecx,ecx
unregistersymbol(somereadwhenemptyAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somereadonusageAOB,8B 40 08 5E 8B E5 5D C2 08 00 33 C0 5E 8B E5 5D C2 08 00 CC CC)
registersymbol(somereadonusageAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [eax+08],1

originalcode6:
mov eax,[eax+08]
pop esi
mov esp,ebp

exit6:
jmp returnhere6

somereadonusageAOB: //"Shipping-ThiefGame.exe"+C86E6B:
jmp newmem6
nop
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
somereadonusageAOB: //"Shipping-ThiefGame.exe"+C86E6B:
db 8B 40 08 5E 8B E5
//Alt: mov eax,[eax+08]
//Alt: pop esi
//Alt: mov esp,ebp
unregistersymbol(somereadonusageAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//subss xmm1,xmm0
movss [edi+00000094],xmm1

exit:
jmp returnhere

"Shipping-ThiefGame.exe"+9E37CA:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Shipping-ThiefGame.exe"+9E37CA:
db F3 0F 5C C8 F3 0F 11 8F 94 00 00 00
//Alt: subss xmm1,xmm0
//Alt: movss [edi+00000094],xmm1
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//subss xmm1,xmm0
movss [esi+0000009C],xmm1

exit:
jmp returnhere

"Shipping-ThiefGame.exe"+9E37A2:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Shipping-ThiefGame.exe"+9E37A2:
db F3 0F 5C C8 F3 0F 11 8E 9C 00 00 00
//Alt: subss xmm1,xmm0
//Alt: movss [esi+0000009C],xmm1
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//subss xmm1,xmm0
movss [esi+000001B0],xmm1

exit:
jmp returnhere

"Shipping-ThiefGame.exe"+9E37B6:
jmp newmem
nop
nop
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Shipping-ThiefGame.exe"+9E37B6:
db F3 0F 5C C8 F3 0F 11 8E B0 01 00 00
//Alt: subss xmm1,xmm0
//Alt: movss [esi+000001B0],xmm1
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [eax+04],0

originalcode:
movss xmm0,[eax+04]

exit:
jmp returnhere

"Shipping-ThiefGame.exe"+9E374B:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Shipping-ThiefGame.exe"+9E374B:
db F3 0F 10 40 04
//Alt: movss xmm0,[eax+04]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[eax]
sub ecx,ebx
cmp ecx,1
jge originalcode2
mov [eax],2

originalcode2:
mov ecx,[eax]
cmp ebx,ecx
mov esi,ecx

exit2:
jmp returnhere2

"Shipping-ThiefGame.exe"+C86EEC:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"Shipping-ThiefGame.exe"+C86EEC:
db 8B 08 3B D9 8B F1
//Alt: mov ecx,[eax]
//Alt: cmp ebx,ecx
//Alt: mov esi,ecx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [eax+08],2
jge originalcode6
mov [eax+08],2

originalcode6:
mov eax,[eax+08]
pop esi
mov esp,ebp

exit6:
jmp returnhere6

"Shipping-ThiefGame.exe"+C86E6B:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
"Shipping-ThiefGame.exe"+C86E6B:
db 8B 40 08 5E 8B E5
//Alt: mov eax,[eax+08]
//Alt: pop esi
//Alt: mov esp,ebp
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>13CF0058</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0DC25058</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Inf. Item (editing)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somecheckzeroonequipAOB,8D 04 90 85 C0 0F 84 ** ** ** ** 83 78 08 00 0F 8E ** ** ** ** 8B)
registersymbol(somecheckzeroonequipAOB)
aobscan(somewriteAOB,89 30 8B 45 10 8B 17)
registersymbol(somewriteAOB)

label(pGold)
registersymbol(pGold)
label(pFocusPoints)
registersymbol(pFocusPoints)
label(pItems)
registersymbol(pItems)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isgold)
label(isfocuspoints)
label(isitem)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isgold2)
label(isfocuspoints2)
label(isitem2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[eax+edx*4]
test eax,eax
je exit
pushad
cmp [eax],983 //Gold
je isgold
cmp [eax],985
je isfocuspoints
xor ecx,ecx
cmp [eax],976 //Blunt Arrow
je isitem
inc ecx
cmp [eax],972 //Broadhead Arrow
je isitem
inc ecx
cmp [eax],973 //Sawtooth Arrow
je isitem
inc ecx
cmp [eax],970 //Fire Arrow
je isitem
inc ecx
cmp [eax],975 //Blast Arrow
je isitem
inc ecx
cmp [eax],971 //Water Arrow
je isitem
inc ecx
cmp [eax],979 //Choke Arrow
je isitem
inc ecx
cmp [eax],978 //Rope Arrow
je isitem
inc ecx
cmp [eax],97e //Flash Bomb
je isitem
inc ecx
cmp [eax],981 //Thorwble
je isitem
inc ecx
cmp [eax],980 //Health Consumable
je isitem
inc ecx
cmp [eax],97f //Poppy Flower
je isitem
jmp originalcode

isgold:
mov [pGold],edx
jmp originalcode

isfocuspoints:
mov [pFocusPoints],edx
jmp originalcode

isitem:
lea edx,[eax+08]
mov [pItems+ecx*4],edx
cmp dword ptr [eax+08],00
jg originalcode
mov dword ptr [eax+08],1
jmp originalcode

originalcode:
popad
//lea eax,[eax+edx*4]
test eax,eax

exit:
jmp returnhere

///

newmem2:
pushfd
cmp [eax-08],983 //Gold
je isgold2
cmp [eax-08],985 //Focus Points
je isfocuspoints2
xor edx,edx
cmp [eax-08],976 //Blunt Arrow
je isitem2
inc edx
cmp [eax-08],972 //Broadhead Arrow
je isitem2
inc edx
cmp [eax-08],973 //Sawtooth Arrow
je isitem2
inc edx
cmp [eax-08],970 //Fire Arrow
je isitem2
inc edx
cmp [eax-08],975 //Blast Arrow
je isitem2
inc edx
cmp [eax-08],971 //Water Arrow
je isitem2
inc edx
cmp [eax-08],979 //Choke Arrow
je isitem2
inc edx
cmp [eax-08],978 //Rope Arrow
je isitem2
inc edx
cmp [eax-08],97e //Flash Bomb
je isitem2
inc edx
cmp [eax-08],981 //Thorwble
je isitem2
inc edx
cmp [eax-08],980 //Health Consumable
je isitem2
inc edx
cmp [eax-08],97f //Poppy Flower
je isitem2
jmp originalcode

isgold2:
mov [pGold],eax
jmp originalcode2

isfocuspoints2:
mov [pFocusPoints],eax
jmp originalcode2

isitem2:
mov [pItems+edx*4],eax
cmp esi,1
jge originalcode2
mov esi,1
mov ebx,0
jmp originalcode2

originalcode2:
popfd
mov [eax],esi
mov eax,[ebp+10]

exit2:
jmp returnhere2

///

///
pGold:
dd 0
pFocusPoints:
dd 0
pItems:
dd 0
///

somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
jmp newmem
returnhere:

somewriteAOB: //"Shipping-ThiefGame.exe"+C86EF7:
jmp newmem2
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
db 8D 04 90 85 C0
//Alt: lea eax,[eax+edx*4]
//Alt: test eax,eax
unregistersymbol(somecheckzeroonequipAOB)
somewriteAOB: //"Shipping-ThiefGame.exe"+C86EF7:
db 89 30 8B 45 10
//Alt: mov [eax],esi
//Alt: mov eax,[ebp+10]
unregistersymbol(somewriteAOB)

unregistersymbol(pGold)
unregistersymbol(pFocusPoints)
unregistersymbol(pItems)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>08035D04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Inf. Item"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somecheckzeroonequipAOB,8D 04 90 85 C0 0F 84 ** ** ** ** 83 78 08 00 0F 8E ** ** ** ** 8B)
registersymbol(somecheckzeroonequipAOB)
aobscan(somewriteAOB,89 30 8B 45 10 8B 17)
registersymbol(somewriteAOB)
aobscan(somereadwhenemptyAOB,8B 40 08 33 C9 85 C0 0F 9F C1)
registersymbol(somereadwhenemptyAOB)
aobscan(somereadonusageAOB,8B 40 08 5E 8B E5 5D C2 08 00 33 C0 5E 8B E5 5D C2 08 00 CC CC)
registersymbol(somereadonusageAOB)

label(pGold)
registersymbol(pGold)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem12)
label(returnhere12)
label(originalcode12)
label(exit12)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)
label(isgold6)
label(ispotions6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[eax+edx*4]
test eax,eax
je exit
cmp dword ptr [eax+08],00
jg originalcode
mov dword ptr [eax+08],1

originalcode:
//lea eax,[eax+edx*4]
test eax,eax

exit:
jmp returnhere

///

newmem2:
pushfd
cmp esi,1
jge originalcode2
mov esi,1
mov ebx,0

originalcode2:
popfd
mov [eax],esi
mov eax,[ebp+10]

exit2:
jmp returnhere2

///

newmem12:
pushfd
cmp [eax+08],1
jge originalcode12
mov [eax+08],1
//mov eax,1

originalcode12:
popfd
mov eax,[eax+08]
xor ecx,ecx

exit12:
jmp returnhere12

///

newmem6:
pushfd
cmp ecx,983
je isgold6
cmp edx,14
je isgold6
pushad
push 'G'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je ispotions6
pushad
push 'H'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je ispotions6
jmp originalcode6

ispotions6:
cmp [eax+08],2
jge originalcode6
//mov [eax+08],2
popfd
mov eax,2
pop esi
mov esp,ebp
jmp exit6

isgold6:
lea esi,[eax+08]
mov [pGold],esi

originalcode6:
popfd
mov eax,[eax+08]
pop esi
mov esp,ebp

exit6:
jmp returnhere6

///

pGold:
dd 0
///

somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
jmp newmem
returnhere:

somewriteAOB: //"Shipping-ThiefGame.exe"+C86EF7:
jmp newmem2
returnhere2:

somereadwhenemptyAOB: //"Shipping-ThiefGame.exe"+C86F5A:
jmp newmem12
returnhere12:

somereadonusageAOB: //"Shipping-ThiefGame.exe"+C86E6B:
jmp newmem6
nop
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
db 8D 04 90 85 C0
//Alt: lea eax,[eax+edx*4]
//Alt: test eax,eax
unregistersymbol(somecheckzeroonequipAOB)
somewriteAOB: //"Shipping-ThiefGame.exe"+C86EF7:
db 89 30 8B 45 10
//Alt: mov [eax],esi
//Alt: mov eax,[ebp+10]
unregistersymbol(somewriteAOB)
somereadwhenemptyAOB: //"Shipping-ThiefGame.exe"+C86F5A:
db 8B 40 08 33 C9
//Alt: mov eax,[eax+08]
//Alt: xor ecx,ecx
unregistersymbol(somereadwhenemptyAOB)
somereadonusageAOB: //"Shipping-ThiefGame.exe"+C86E6B:
db 8B 40 08 5E 8B E5
//Alt: mov eax,[eax+08]
//Alt: pop esi
//Alt: mov esp,ebp
unregistersymbol(somereadonusageAOB)

unregistersymbol(pGold)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>33</ID>
              <Description>"pGold"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pGold</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Inf. Item v2"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somecheckzeroonequipAOB,8D 04 90 85 C0 0F 84 ** ** ** ** 83 78 08 00 0F 8E ** ** ** ** 8B)
registersymbol(somecheckzeroonequipAOB)
aobscan(somewriteAOB,89 30 8B 45 10 8B 17)
registersymbol(somewriteAOB)
aobscan(somereadonusageAOB,8B 40 08 5E 8B E5 5D C2 08 00 33 C0 5E 8B E5 5D C2 08 00 CC CC)
registersymbol(somereadonusageAOB)

label(pGold)
registersymbol(pGold)
label(pFocusPoints)
registersymbol(pFocusPoints)
label(pItems)
registersymbol(pItems)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isgold)
label(isfocuspoints)
label(isitem)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isgold2)
label(isfocuspoints2)
label(isitem2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)
label(isgold6)
label(isfocuspoints6)
label(isitem6)
label(ispotions6)
label(dopotions6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[eax+edx*4]
test eax,eax
je exit
pushad
cmp [eax],983 //Gold
je isgold
cmp [eax],985 //Foucs Points
je isfocuspoints
xor ecx,ecx
cmp [eax],976 //Blunt Arrow
je isitem
inc ecx
cmp [eax],972 //Broadhead Arrow
je isitem
inc ecx
cmp [eax],973 //Sawtooth Arrow
je isitem
inc ecx
cmp [eax],970 //Fire Arrow
je isitem
inc ecx
cmp [eax],975 //Blast Arrow
je isitem
inc ecx
cmp [eax],971 //Water Arrow
je isitem
inc ecx
cmp [eax],979 //Choke Arrow
je isitem
inc ecx
cmp [eax],978 //Rope Arrow
je isitem
inc ecx
cmp [eax],97e //Flash Bomb
je isitem
inc ecx
cmp [eax],981 //Thorwble
je isitem
inc ecx
cmp [eax],980 //Health Consumable
je isitem
inc ecx
cmp [eax],97f //Poppy Flower
je isitem
jmp originalcode

isgold:
lea edx,[eax+08]
mov [pGold],edx
jmp originalcode

isfocuspoints:
lea edx,[eax+08]
mov [pFocusPoints],edx
jmp originalcode

isitem:
lea edx,[eax+08]
mov [pItems+ecx*4],edx
cmp dword ptr [eax+08],00
jg originalcode
mov dword ptr [eax+08],1
jmp originalcode

originalcode:
popad
//lea eax,[eax+edx*4]
test eax,eax

exit:
jmp returnhere

///

newmem2:
pushfd
cmp [eax-08],983 //Gold
je isgold2
cmp [eax-08],985 //Focus Points
je isfocuspoints2
xor edx,edx
cmp [eax-08],976 //Blunt Arrow
je isitem2
inc edx
cmp [eax-08],972 //Broadhead Arrow
je isitem2
inc edx
cmp [eax-08],973 //Sawtooth Arrow
je isitem2
inc edx
cmp [eax-08],970 //Fire Arrow
je isitem2
inc edx
cmp [eax-08],975 //Blast Arrow
je isitem2
inc edx
cmp [eax-08],971 //Water Arrow
je isitem2
inc edx
cmp [eax-08],979 //Choke Arrow
je isitem2
inc edx
cmp [eax-08],978 //Rope Arrow
je isitem2
inc edx
cmp [eax-08],97e //Flash Bomb
je isitem2
inc edx
cmp [eax-08],981 //Thorwble
je isitem2
inc edx
cmp [eax-08],980 //Health Consumable
je isitem2
inc edx
cmp [eax-08],97f //Poppy Flower
je isitem2
jmp originalcode2

isgold2:
mov [pGold],eax
jmp originalcode2

isfocuspoints2:
mov [pFocusPoints],eax
jmp originalcode2

isitem2:
mov [pItems+edx*4],eax
cmp esi,1
jge originalcode2
mov esi,1
mov ebx,0
jmp originalcode2

originalcode2:
popfd
mov [eax],esi
mov eax,[ebp+10]

exit2:
jmp returnhere2

///

newmem6:
pushfd
pushad
cmp [eax],983 //Gold
je isgold6
cmp [eax],985 //Focus Point
je isfocuspoints6
xor ecx,ecx
cmp [eax],976 //Blunt Arrow
je isitem6
inc ecx
cmp [eax],972 //Broadhead Arrow
je isitem6
inc ecx
cmp [eax],973 //Sawtooth Arrow
je isitem6
inc ecx
cmp [eax],970 //Fire Arrow
je isitem6
inc ecx
cmp [eax],975 //Blast Arrow
je isitem6
inc ecx
cmp [eax],971 //Water Arrow
je isitem6
inc ecx
cmp [eax],979 //Choke Arrow
je isitem6
inc ecx
cmp [eax],978 //Rope Arrow
je isitem6
inc ecx
cmp [eax],97e //Flash Bomb
je isitem6
inc ecx
cmp [eax],981 //Thorwble
je isitem6
inc ecx
cmp [eax],980 //Health Consumable
je ispotions6
inc ecx
cmp [eax],97f //Poppy Flower
je ispotions6
jmp originalcode6

isgold6:
lea esi,[eax+08]
mov [pGold],esi
jmp originalcode6

isfocuspoints6:
lea esi,[eax+08]
mov [pFocusPoints],esi
jmp originalcode6

isitem6:
lea esi,[eax+08]
mov [pItems+ecx*4],esi
jmp originalcode6

ispotions6:
mov [pItems+ecx*4],esi

pushad
push 'G'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je dopotions6
pushad
push 'H'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je dopotions6
jmp originalcode6

dopotions6:
cmp [eax+08],2
jge originalcode6
//mov [eax+08],2
popad
popfd
mov eax,2
pop esi
mov esp,ebp
jmp exit6

originalcode6:
popad
popfd
mov eax,[eax+08]
pop esi
mov esp,ebp

exit6:
jmp returnhere6

///
pGold:
dd 0
pFocusPoints:
dd 0
pItems:
dd 0
///

somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
jmp newmem
returnhere:

somewriteAOB: //"Shipping-ThiefGame.exe"+C86EF7:
jmp newmem2
returnhere2:

somereadonusageAOB: //"Shipping-ThiefGame.exe"+C86E6B:
jmp newmem6
nop
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somecheckzeroonequipAOB: //"Shipping-ThiefGame.exe"+C88D79:
db 8D 04 90 85 C0
//Alt: lea eax,[eax+edx*4]
//Alt: test eax,eax
unregistersymbol(somecheckzeroonequipAOB)
somewriteAOB: //"Shipping-ThiefGame.exe"+C86EF7:
db 89 30 8B 45 10
//Alt: mov [eax],esi
//Alt: mov eax,[ebp+10]
unregistersymbol(somewriteAOB)
somereadonusageAOB: //"Shipping-ThiefGame.exe"+C86E6B:
db 8B 40 08 5E 8B E5
//Alt: mov eax,[eax+08]
//Alt: pop esi
//Alt: mov esp,ebp
unregistersymbol(somereadonusageAOB)

unregistersymbol(pGold)
unregistersymbol(pFocusPoints)
unregistersymbol(pItems)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>06B9466C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>06B94670</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0A33B82C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0A33B830</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>1868466C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>18684670</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"mVisibilityThreshold"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>1A68A92C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"mGrayZoneThreshold"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>1A68A930</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>AIStateChange call start Code :push ebp</Description>
      <Address>0151B3F0</Address>
      <ModuleName>Shipping-ThiefGame.exe</ModuleName>
      <ModuleNameOffset>8EB3F0</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>55</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>EC</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>3C</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>somecheckzeroonequipAOB</Name>
      <Address> 01F8BC39</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somewriteAOB</Name>
      <Address> 01F89F17</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somereadonusageAOB</Name>
      <Address> 01F89E8B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGold</Name>
      <Address>0DA7039F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFocusPoints</Name>
      <Address>0DA703A3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItems</Name>
      <Address>0DA703A7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfItem</Name>
      <Address>0DA7039E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfGold</Name>
      <Address>0DA7039D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mVisibilityThresholdreadindarkAOB</Name>
      <Address> 01DA077C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mVisibilityThresholdreadinlightAOB</Name>
      <Address> 01D9FDB4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mGrayZoneThresholdreadindark</Name>
      <Address> 01DA0851</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bAlwaysCloak</Name>
      <Address>149B008D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pThiefCloakComponent</Name>
      <Address>149B008E</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
