<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>326</ID>
      <Description>"Undead"</Description>
      <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(staminaread1AOB,F3 0F 10 87 40 01 00 00 F3 0F 10 96 98 02 00 00)
registersymbol(staminaread1AOB)
aobscan(hairstylereadAOB,88 86 96 00 00 00 8B 47 30 52 50)
registersymbol(hairstylereadAOB)
aobscan(maxhealthreadAOB,66 8B 80 04 01 00 00)
registersymbol(maxhealthreadAOB)

label(bMyBodyBuild)
registersymbol(bMyBodyBuild)
label(pHero)
registersymbol(pHero)
label(pModel)
registersymbol(pModel)
label(fMyBuildData)
registersymbol(fMyBuildData)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHero],edi
cmp byte ptr [bMyBodyBuild],1
jne originalcode
movss xmm0,[fMyBuildData]
movss [edi+598],xmm0
movss xmm0,[fMyBuildData+4]
movss [edi+59c],xmm0
movss xmm0,[fMyBuildData+8]
movss [edi+5a0],xmm0
movss xmm0,[fMyBuildData+c]
movss [edi+5a4],xmm0
movss xmm0,[fMyBuildData+10]
movss [edi+5a8],xmm0

originalcode:
movss xmm0,[edi+00000140]

exit:
jmp returnhere

///

newmem2:
mov [pModel],edi

originalcode2:
mov eax,[edi+30]
push edx
push eax

exit2:
jmp returnhere2

///

newmem6:
mov [pHero],eax
pushfd
cmp byte ptr [bMyBodyBuild],1
jne originalcode6
movss xmm0,[fMyBuildData]
movss [eax+598],xmm0
movss xmm0,[fMyBuildData+4]
movss [eax+59c],xmm0
movss xmm0,[fMyBuildData+8]
movss [eax+5a0],xmm0
movss xmm0,[fMyBuildData+c]
movss [eax+5a4],xmm0
movss xmm0,[fMyBuildData+10]
movss [eax+5a8],xmm0

originalcode6:
popfd
mov ax,[eax+00000104]

exit6:
jmp returnhere6

///
bMyBodyBuild:
db 0
pHero:
dd 0
pModel:
dd 0
fMyBuildData:
dd 0
dd 0
dd 0
dd 0
dd 0
///

staminaread1AOB: //"DarkSoulsII.exe"+4768DB:
jmp newmem
nop
nop
nop
returnhere:

hairstylereadAOB+6: //"DarkSoulsII.exe"+302EFE:
jmp newmem2
returnhere2:

maxhealthreadAOB: //"DarkSoulsII.exe"+22EDA2:
jmp newmem6
nop
nop
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminaread1AOB: //"DarkSoulsII.exe"+4768DB:
db F3 0F 10 87 40 01 00 00
//Alt: movss xmm0,[edi+00000140]
unregistersymbol(staminaread1AOB)
hairstylereadAOB+6: //"DarkSoulsII.exe"+302EFE:
db 8B 47 30 52 50
//Alt: mov eax,[edi+30]
//Alt: push edx
//Alt: push eax
unregistersymbol(hairstylereadAOB)
maxhealthreadAOB: //"DarkSoulsII.exe"+22EDA2:
db 66 8B 80 04 01 00 00
//Alt: mov ax,[eax+00000104]
unregistersymbol(maxhealthreadAOB)

unregistersymbol(bMyBodyBuild)
unregistersymbol(pHero)
unregistersymbol(pModel)
unregistersymbol(fMyBuildData)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>327</ID>
          <Description>"Undead"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthcmp1AOB,39 81 FC 00 00 00 0F 9F C0 C3)
registersymbol(healthcmp1AOB)
aobscan(healthcmpzero1AOB,83 B8 FC 00 00 00 00 56)
registersymbol(healthcmpzero1AOB)
aobscan(healthcmp2AOB,39 81 FC 00 00 00 0F 9F C0 5D C3)
registersymbol(healthcmp2AOB)
aobscan(healthcmpzero2AOB,83 BE FC 00 00 00 00 57 8B)
registersymbol(healthcmpzero2AOB)
aobscan(healthcmpzero3AOB,83 BE FC 00 00 00 00 7F 0C)
registersymbol(healthcmpzero3AOB)
aobscan(healthwriteAOB,89 8E FC 00 00 00 8B 02)
registersymbol(healthwriteAOB)
aobscan(healthcmp3AOB,39 88 FC 00 00 00 5F)
registersymbol(healthcmp3AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)

label(newmem17)
label(returnhere17)
label(originalcode17)
label(exit17)

label(newmem24)
label(returnhere24)
label(originalcode24)
label(exit24)

label(newmem32)
label(returnhere32)
label(originalcode32)
label(exit32)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHero],ecx
jne originalcode
cmp dword ptr [ecx+000000FC],1
jge originalcode
mov dword ptr [ecx+000000FC],1

originalcode:
cmp [ecx+000000FC],eax

exit:
jmp returnhere

///

newmem2:
cmp [pHero],eax
jne originalcode2
cmp dword ptr [eax+fc],1
jge originalcode2
mov dword ptr [eax+fc],1

originalcode2:
cmp dword ptr [eax+000000FC],00

exit2:
jmp returnhere2

///

newmem6:
cmp [pHero],ecx
jne originalcode6
cmp dword ptr [ecx+fc],1
jge originalcode6
mov dword ptr [ecx+fc],1

originalcode6:
cmp [ecx+000000FC],eax

exit6:
jmp returnhere6

///

newmem11:
cmp [pHero],esi
jne originalcode11
cmp dword ptr [esi+fc],1
jge originalcode11
mov dword ptr [esi+fc],1

originalcode11:
cmp dword ptr [esi+000000FC],00

exit11:
jmp returnhere11

///

newmem17:
cmp [pHero],esi
jne originalcode17
cmp dword ptr [esi+fc],1
jge originalcode17
mov dword ptr [esi+fc],1

originalcode17:
cmp dword ptr [esi+000000FC],00

exit17:
jmp returnhere17

///

newmem24:
cmp [pHero],esi
jne originalcode24
cmp dword ptr [esi+fc],1
jge originalcode24
mov dword ptr [esi+fc],1

originalcode24:
mov [esi+000000FC],ecx

exit24:
jmp returnhere24

///

newmem32: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHero],eax
jne originalcode32
cmp dword ptr [eax+fc],1
jge originalcode32
mov dword ptr [eax+fc],1

originalcode32:
cmp [eax+000000FC],ecx

exit32:
jmp returnhere32

///

healthcmp1AOB: //"DarkSoulsII.exe"+2D89F2:
jmp newmem
nop
returnhere:

healthcmpzero1AOB: //"DarkSoulsII.exe"+1BB128:
jmp newmem2
nop
nop
returnhere2:

healthcmp2AOB: //"DarkSoulsII.exe"+26CE58:
jmp newmem6
nop
returnhere6:

healthcmpzero2AOB: //"DarkSoulsII.exe"+19422D:
jmp newmem11
nop
nop
returnhere11:

healthcmpzero3AOB: //"DarkSoulsII.exe"+1BB4C7:
jmp newmem17
nop
nop
returnhere17:

healthwriteAOB: //"DarkSoulsII.exe"+1BB521:
jmp newmem24
nop
returnhere24:

healthcmp3AOB: //"DarkSoulsII.exe"+1BB56C:
jmp newmem32
nop
returnhere32:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthcmp1AOB: //"DarkSoulsII.exe"+2D89F2:
db 39 81 FC 00 00 00
//Alt: cmp [ecx+000000FC],eax
unregistersymbol(healthcmp1AOB)
healthcmpzero1AOB: //"DarkSoulsII.exe"+1BB128:
db 83 B8 FC 00 00 00 00
//Alt: cmp dword ptr [eax+000000FC],00
unregistersymbol(healthcmpzero1AOB)
healthcmp2AOB: //"DarkSoulsII.exe"+26CE58:
db 39 81 FC 00 00 00
//Alt: cmp [ecx+000000FC],eax
unregistersymbol(healthcmp2AOB)
healthcmpzero2AOB: //"DarkSoulsII.exe"+19422D:
db 83 BE FC 00 00 00 00
//Alt: cmp dword ptr [esi+000000FC],00
unregistersymbol(healthcmpzero2AOB)
healthcmpzero3AOB: //"DarkSoulsII.exe"+1BB4C7:
db 83 BE FC 00 00 00 00
//Alt: cmp dword ptr [esi+000000FC],00
unregistersymbol(healthcmpzero3AOB)
healthwriteAOB: //"DarkSoulsII.exe"+1BB521:
db 89 8E FC 00 00 00
//Alt: mov [esi+000000FC],ecx
unregistersymbol(healthwriteAOB)
healthcmp3AOB: //"DarkSoulsII.exe"+1BB56C:
db 39 88 FC 00 00 00
//Alt: cmp [eax+000000FC],ecx
unregistersymbol(healthcmp3AOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>i_item_first</Name>
      <Address>004D86A2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BetterItemSwap</Name>
      <Address>006199B5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DamageMultiplyer</Name>
      <Address>139F0038</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>endlessMobs2</Name>
      <Address>00626246</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
