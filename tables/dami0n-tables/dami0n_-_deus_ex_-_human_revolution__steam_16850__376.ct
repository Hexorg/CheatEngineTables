<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>63</ID>
      <Description>"Right click -&gt; change script for info"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
If you enable or disable a code, you will have to reload a
savegame for the change to take effect.

Deactivating a script has a chance of crashing your game.

The praxis scripts MIGHT need you to spend at least one point
while in game. You can then load your old savegame and
the scripts should work.

"Unlimited item uses (increases inventory count)" gives
you an insane amount of the item you just used. Remember
that if you plan on dropping or selling that stuff later,
as it might fuck up the plans you've had for that day.
This also works with grenades, while the standard
"unlimited item uses" DOES NOT.

Aaaand... I've got some hints for you, if you want to hack the
game for yourself:

Health is saved as a double, 100 compares to "5.53552857091405E-315"
this time, however.

Stamina is saved as a double value, the value INCREASES the more
exhausted you are and then slowly decreases again until you're
fully reinvigorated, which means the value is then set to
"0" in memory.

One bar of energy is saved as a float value of "30", two full
bars as "60", three bars as "90" and so on.

Thanks for reading! - Dami0N/CyberD3m0n
}

[ENABLE]
[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"AOB scripts:"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>83</ID>
          <Description>"True god mode (for player)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,?? 5E 5C D9 41 68) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(notjensen)
label(jensen)

newmem:

code:
  cmp [esi+007C],(float)1
  je jensen
  cmp [esi+007C],(float)1
  jne notjensen

notjensen:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
  jmp return

jensen:
  nop
  fld dword ptr [ecx+68]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db ?? 5E 5C D9 41 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+265917:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>84</ID>
          <Description>"God mode (always 100 health for player)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,?? 5E 5C D9 41 68) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(fuckyou)
label(butnotyou)

newmem:

code:
  cmp [esi+007C],(float)1
  jne fuckyou
  cmp [esi+007C],(float)1
  je butnotyou

fuckyou:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
  jmp return

butnotyou:
  fstp dword ptr [esi+5C]
  mov [esi+5C],(double)5.53552857091405E-315
  fld dword ptr [ecx+68]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db CC 5E 5C D9 41 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+265917:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"Unlimited stamina"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,D9 41 30 C3 CC) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+30],0
  fld dword ptr [ecx+30]
  mov [ecx+30],0
  ret
  int 3
  jmp return

INJECT:
  jmp code
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 41 30 C3 CC

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+29B1E0:
  fld dword ptr [ecx+30]
//  ret
//  int 3
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"Unlimited energy"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,?? 59 04 D9 59 08) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+04],(float)60
  fstp dword ptr [ecx+04]
  mov [ecx+04],(float)60
  fstp dword ptr [ecx+08]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db ?? 59 04 D9 59 08

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+25CDDF:
  fstp dword ptr [ecx+04]
  fstp dword ptr [ecx+08]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"Unlimited ammo"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,?? FF 48 14 8B 4E 70) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  mov ecx,[esi+70]
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db CC FF 48 14 8B 4E 70

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+3459F8:
  dec word ptr [eax+14]
  mov ecx,[esi+70]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>118</ID>
          <Description>"Unlimited item uses"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,66 89 48 06 8B C5) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  mov eax,ebp
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 89 48 06 8B C5

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+36773A:
  mov [eax+06],cx
  mov eax,ebp
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>120</ID>
          <Description>"Unlimited item uses (increases inventory count)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,0F B7 48 06 0F B7 D9) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  movzx ebx,cx
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 0F B7 48 06 0F B7 D9

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+36772C:
  movzx ecx,word ptr [eax+06]
  movzx ebx,cx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"Praxis points don't decrease"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,8B 44 24 04 29 41 10 C2 04 00 CC) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,0
  sub [ecx+10],eax
  ret 0004
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 44 24 04 29 41 10 C2 04 00 CC

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+25A8B4:
  sub [ecx+10],eax
  ret 0004
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"Spending praxis increases praxis"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,8B 44 24 04 29 41 10 C2 04 00 CC) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add [ecx+10],eax
  ret 0004
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 44 24 04 29 41 10 C2 04 00 CC

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+25A8B4:
  sub [ecx+10],eax
  ret 0004
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Opening inventory sets credits to 100.000"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,?? 70 60 8B 44 24 68) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+60],186A0
  mov esi,[eax+60]
  mov eax,[esp+68]
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db ?? 70 60 8B 44 24 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+3D941B:
  mov esi,[eax+60]
  mov eax,[esp+68]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Opening inventory grants 5000 credits"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,?? 70 60 8B 44 24 68) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add [eax+60],1388
  mov esi,[eax+60]
  mov eax,[esp+68]
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db ?? 70 60 8B 44 24 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+3D941B:
  mov esi,[eax+60]
  mov eax,[esp+68]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>85</ID>
      <Description>"Not particularly useful scripts:"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>81</ID>
          <Description>"True god mode (for all)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,?? 5E 5C D9 41 68) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  fld dword ptr [ecx+68]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db ?? 5E 5C D9 41 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+265917:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"God mode (always 100 health for all)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,dxhr.exe,?? 5E 5C D9 41 68) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fstp dword ptr [esi+5C]
  mov [esi+5C],(double)5.53552857091405E-315
  fld dword ptr [ecx+68]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db CC 5E 5C D9 41 68

unregistersymbol(INJECT)
dealloc(newmem)

dxhr.exe+265917:
  fstp dword ptr [esi+5C]
  fld dword ptr [ecx+68]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
