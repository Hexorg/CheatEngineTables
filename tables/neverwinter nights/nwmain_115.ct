<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Unlimited Magic"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>17</Key>
            <Key>187</Key>
          </Keys>
          <Description>鏃犻檺鏂芥硶</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Infinite Wizard&amp;Cleric Spells"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : nwmain.exe
  Version: 
  Date   : 2016-01-21
  Author : NT

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECTSSTest,nwmain.exe,8B 41 04 C2 0C 00 33 C0 C2 0C 00 90 90 90 90 90 90 8B) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+04],00000001
  mov eax,[ecx+04]
  ret 000C
  jmp return

INJECTSSTest:
  jmp code
  nop
return:
registersymbol(INJECTSSTest)

[DISABLE]

INJECTSSTest:
  db 8B 41 04 C2 0C 00

unregistersymbol(INJECTSSTest)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "nwmain.exe"+2A52AF

"nwmain.exe"+2A5295: 81 E1 FF 00 00 00     -  and ecx,000000FF
"nwmain.exe"+2A529B: 3B CF                 -  cmp ecx,edi
"nwmain.exe"+2A529D: 5F                    -  pop edi
"nwmain.exe"+2A529E: 5E                    -  pop esi
"nwmain.exe"+2A529F: 7D 14                 -  jnl nwmain.exe+2A52B5
"nwmain.exe"+2A52A1: 8D 44 40 1E           -  lea eax,[eax+eax*2+1E]
"nwmain.exe"+2A52A5: 8B 14 82              -  mov edx,[edx+eax*4]
"nwmain.exe"+2A52A8: 8B 0C 8A              -  mov ecx,[edx+ecx*4]
"nwmain.exe"+2A52AB: 85 C9                 -  test ecx,ecx
"nwmain.exe"+2A52AD: 74 06                 -  je nwmain.exe+2A52B5
// ---------- INJECTING HERE ----------
"nwmain.exe"+2A52AF: 8B 41 04              -  mov eax,[ecx+04]
"nwmain.exe"+2A52B2: C2 0C 00              -  ret 000C
// ---------- DONE INJECTING  ----------
"nwmain.exe"+2A52B5: 33 C0                 -  xor eax,eax
"nwmain.exe"+2A52B7: C2 0C 00              -  ret 000C
"nwmain.exe"+2A52BA: 90                    -  nop 
"nwmain.exe"+2A52BB: 90                    -  nop 
"nwmain.exe"+2A52BC: 90                    -  nop 
"nwmain.exe"+2A52BD: 90                    -  nop 
"nwmain.exe"+2A52BE: 90                    -  nop 
"nwmain.exe"+2A52BF: 90                    -  nop 
"nwmain.exe"+2A52C0: 8B 44 24 04           -  mov eax,[esp+04]
"nwmain.exe"+2A52C4: 3C FE                 -  cmp al,-02
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Infinite Sorcerer&amp;Bard Spells"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : nwmain.exe
  Version: 
  Date   : 2016-01-21
  Author : NT

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SorcerAccTest,nwmain.exe,8A 84 C1 9E 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov byte ptr [ecx+eax*8+0000019E],63
  mov al,[ecx+eax*8+0000019E]
  jmp return

SorcerAccTest:
  jmp code
  nop
  nop
return:
registersymbol(SorcerAccTest)

[DISABLE]

SorcerAccTest:
  db 8A 84 C1 9E 01 00 00

unregistersymbol(SorcerAccTest)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "nwmain.exe"+2A788B

"nwmain.exe"+2A786A: 32 C0                 -  xor al,al
"nwmain.exe"+2A786C: C2 08 00              -  ret 0008
"nwmain.exe"+2A786F: 25 FF 00 00 00        -  and eax,000000FF
"nwmain.exe"+2A7874: 56                    -  push esi
"nwmain.exe"+2A7875: 8B F0                 -  mov esi,eax
"nwmain.exe"+2A7877: 8D 04 F5 00 00 00 00  -  lea eax,[esi*8+00000000]
"nwmain.exe"+2A787E: 2B C6                 -  sub eax,esi
"nwmain.exe"+2A7880: 81 E2 FF 00 00 00     -  and edx,000000FF
"nwmain.exe"+2A7886: 8D 04 80              -  lea eax,[eax+eax*4]
"nwmain.exe"+2A7889: 03 CA                 -  add ecx,edx
// ---------- INJECTING HERE ----------
"nwmain.exe"+2A788B: 8A 84 C1 9E 01 00 00  -  mov al,[ecx+eax*8+0000019E]
// ---------- DONE INJECTING  ----------
"nwmain.exe"+2A7892: 5E                    -  pop esi
"nwmain.exe"+2A7893: C2 08 00              -  ret 0008
"nwmain.exe"+2A7896: 90                    -  nop 
"nwmain.exe"+2A7897: 90                    -  nop 
"nwmain.exe"+2A7898: 90                    -  nop 
"nwmain.exe"+2A7899: 90                    -  nop 
"nwmain.exe"+2A789A: 90                    -  nop 
"nwmain.exe"+2A789B: 90                    -  nop 
"nwmain.exe"+2A789C: 90                    -  nop 
"nwmain.exe"+2A789D: 90                    -  nop 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Infinite Feat Usage"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : nwmain.exe
  Version: 
  Date   : 2016-04-12
  Author : NT

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECTFeatUse,nwmain.exe,8A 40 02 3A 42 02) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov byte ptr [eax+02],0
  mov al,[eax+02]
  cmp al,[edx+02]
  jmp return

INJECTFeatUse:
  jmp code
  nop
return:
registersymbol(INJECTFeatUse)

[DISABLE]

INJECTFeatUse:
  db 8A 40 02 3A 42 02

unregistersymbol(INJECTFeatUse)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "nwmain.exe"+21C89C

"nwmain.exe"+21C87F: 85 ED              -  test ebp,ebp
"nwmain.exe"+21C881: 7E 31              -  jle nwmain.exe+21C8B4
"nwmain.exe"+21C883: 8B 5B 30           -  mov ebx,[ebx+30]
"nwmain.exe"+21C886: 8B 39              -  mov edi,[ecx]
"nwmain.exe"+21C888: 33 C0              -  xor eax,eax
"nwmain.exe"+21C88A: 8B 14 83           -  mov edx,[ebx+eax*4]
"nwmain.exe"+21C88D: 8B 04 87           -  mov eax,[edi+eax*4]
"nwmain.exe"+21C890: 66 8B 08           -  mov cx,[eax]
"nwmain.exe"+21C893: 66 3B 0A           -  cmp cx,[edx]
"nwmain.exe"+21C896: 0F 85 58 FF FF FF  -  jne nwmain.exe+21C7F4
// ---------- INJECTING HERE ----------
"nwmain.exe"+21C89C: 8A 40 02           -  mov al,[eax+02]
"nwmain.exe"+21C89F: 3A 42 02           -  cmp al,[edx+02]
// ---------- DONE INJECTING  ----------
"nwmain.exe"+21C8A2: 0F 85 4C FF FF FF  -  jne nwmain.exe+21C7F4
"nwmain.exe"+21C8A8: 46                 -  inc esi
"nwmain.exe"+21C8A9: 8B C6              -  mov eax,esi
"nwmain.exe"+21C8AB: 25 FF FF 00 00     -  and eax,0000FFFF
"nwmain.exe"+21C8B0: 3B C5              -  cmp eax,ebp
"nwmain.exe"+21C8B2: 7C D6              -  jl nwmain.exe+21C88A
"nwmain.exe"+21C8B4: 5F                 -  pop edi
"nwmain.exe"+21C8B5: 5E                 -  pop esi
"nwmain.exe"+21C8B6: 5D                 -  pop ebp
"nwmain.exe"+21C8B7: 33 C0              -  xor eax,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Infinite Per Day Item Usage"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : nwmain.exe
  Version: 
  Date   : 2016-04-16
  Author : NT

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECTItemCastPerDay,nwmain.exe,88 43 10 80 7B 10 01) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov al,5
  mov [ebx+10],al
  cmp byte ptr [ebx+10],01
  jmp return

INJECTItemCastPerDay:
  jmp code
  nop
  nop
return:
registersymbol(INJECTItemCastPerDay)

[DISABLE]

INJECTItemCastPerDay:
  db 88 43 10 80 7B 10 01

unregistersymbol(INJECTItemCastPerDay)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "nwmain.exe"+27BE3E

"nwmain.exe"+27BE24: 00 01                 -  add [ecx],al
"nwmain.exe"+27BE26: 00 00                 -  add [eax],al
"nwmain.exe"+27BE28: 00 0F                 -  add [edi],cl
"nwmain.exe"+27BE2A: 8C 31                 -  mov [ecx],hs
"nwmain.exe"+27BE2C: FF                    -  db -01
"nwmain.exe"+27BE2D: FF                    -  db -01
"nwmain.exe"+27BE2E: FF 48 E9              -  dec [eax-17]
"nwmain.exe"+27BE31: 25 FF FF FF 8A        -  and eax,8AFFFFFF
"nwmain.exe"+27BE36: 43                    -  inc ebx
"nwmain.exe"+27BE37: 10 84 C0 76 05 FE C8  -  adc [eax+eax*8-3701FA8A],al
// ---------- INJECTING HERE ----------
"nwmain.exe"+27BE3E: 88 43 10              -  mov [ebx+10],al
"nwmain.exe"+27BE41: 80 7B 10 01           -  cmp byte ptr [ebx+10],01
// ---------- DONE INJECTING  ----------
"nwmain.exe"+27BE45: 73 47                 -  jae nwmain.exe+27BE8E
"nwmain.exe"+27BE47: 89 7B 0C              -  mov [ebx+0C],edi
"nwmain.exe"+27BE4A: EB 42                 -  jmp nwmain.exe+27BE8E
"nwmain.exe"+27BE4C: 83 BD 00 02 00 00 04  -  cmp dword ptr [ebp+00000200],04
"nwmain.exe"+27BE53: 7D 28                 -  jnl nwmain.exe+27BE7D
"nwmain.exe"+27BE55: EB 1F                 -  jmp nwmain.exe+27BE76
"nwmain.exe"+27BE57: 83 BD 00 02 00 00 03  -  cmp dword ptr [ebp+00000200],03
"nwmain.exe"+27BE5E: 7D 1D                 -  jnl nwmain.exe+27BE7D
"nwmain.exe"+27BE60: EB 14                 -  jmp nwmain.exe+27BE76
"nwmain.exe"+27BE62: 83 BD 00 02 00 00 02  -  cmp dword ptr [ebp+00000200],02
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"Infinite Item Charges"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : nwmain.exe
  Version: 
  Date   : 2016-04-16
  Author : NT

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECTItemCastCharge,nwmain.exe,89 85 00 02 00 00 39) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,32
  mov [ebp+00000200],eax
  jmp return

INJECTItemCastCharge:
  jmp code
  nop
return:
registersymbol(INJECTItemCastCharge)

[DISABLE]

INJECTItemCastCharge:
  db 89 85 00 02 00 00

unregistersymbol(INJECTItemCastCharge)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "nwmain.exe"+27BD5A

"nwmain.exe"+27BD25: 89 7B 0C                          -  mov [ebx+0C],edi
"nwmain.exe"+27BD28: 39 BD E0 00 00 00                 -  cmp [ebp+000000E0],edi
"nwmain.exe"+27BD2E: 0F 85 5A 01 00 00                 -  jne nwmain.exe+27BE8E
"nwmain.exe"+27BD34: C7 44 24 38 01 00 00 00           -  mov [esp+38],00000001
"nwmain.exe"+27BD3C: E9 4D 01 00 00                    -  jmp nwmain.exe+27BE8E
"nwmain.exe"+27BD41: 8B 85 00 02 00 00                 -  mov eax,[ebp+00000200]
"nwmain.exe"+27BD47: 83 F8 05                          -  cmp eax,05
"nwmain.exe"+27BD4A: C7 84 24 80 00 00 00 01 00 00 00  -  mov [esp+00000080],00000001
"nwmain.exe"+27BD55: 7C 09                             -  jl nwmain.exe+27BD60
"nwmain.exe"+27BD57: 83 C0 FB                          -  add eax,-05
// ---------- INJECTING HERE ----------
"nwmain.exe"+27BD5A: 89 85 00 02 00 00                 -  mov [ebp+00000200],eax
// ---------- DONE INJECTING  ----------
"nwmain.exe"+27BD60: 39 BD EC 01 00 00                 -  cmp [ebp+000001EC],edi
"nwmain.exe"+27BD66: 0F 8E 22 01 00 00                 -  jng nwmain.exe+27BE8E
"nwmain.exe"+27BD6C: 57                                -  push edi
"nwmain.exe"+27BD6D: 8B CD                             -  mov ecx,ebp
"nwmain.exe"+27BD6F: E8 1C 2C 0A 00                    -  call nwmain.exe+31E990
"nwmain.exe"+27BD74: 8B D8                             -  mov ebx,eax
"nwmain.exe"+27BD76: 85 DB                             -  test ebx,ebx
"nwmain.exe"+27BD78: 0F 84 FF 00 00 00                 -  je nwmain.exe+27BE7D
"nwmain.exe"+27BD7E: 66 83 3B 0F                       -  cmp word ptr [ebx],0F
"nwmain.exe"+27BD82: 0F 85 F5 00 00 00                 -  jne nwmain.exe+27BE7D
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"Infinite Single Use Item Usage"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : nwmain.exe
  Version: 
  Date   : 2016-05-11
  Author : NT

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECTAddUse,nwmain.exe,8B 85 90 02 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,[ebp+00000290]
  add eax,1
  jmp return

INJECTAddUse:
  jmp code
  nop
return:
registersymbol(INJECTAddUse)

[DISABLE]

INJECTAddUse:
  db 8B 85 90 02 00 00

unregistersymbol(INJECTAddUse)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "nwmain.exe"+27BD0E

"nwmain.exe"+27BCE2: E8 A9 13 0C 00                    -  call nwmain.exe+33D090
"nwmain.exe"+27BCE7: 66 8B 43 06                       -  mov ax,[ebx+06]
"nwmain.exe"+27BCEB: 33 FF                             -  xor edi,edi
"nwmain.exe"+27BCED: 89 7C 24 38                       -  mov [esp+38],edi
"nwmain.exe"+27BCF1: 89 BC 24 80 00 00 00              -  mov [esp+00000080],edi
"nwmain.exe"+27BCF8: 25 FF FF 00 00                    -  and eax,0000FFFF
"nwmain.exe"+27BCFD: 48                                -  dec eax
"nwmain.exe"+27BCFE: 83 F8 0B                          -  cmp eax,0B
"nwmain.exe"+27BD01: 0F 87 87 01 00 00                 -  ja nwmain.exe+27BE8E
"nwmain.exe"+27BD07: FF 24 85 24 C0 67 00              -  jmp dword ptr [eax*4+nwmain.exe+27C024]
// ---------- INJECTING HERE ----------
"nwmain.exe"+27BD0E: 8B 85 90 02 00 00                 -  mov eax,[ebp+00000290]
// ---------- DONE INJECTING  ----------
"nwmain.exe"+27BD14: 83 F8 01                          -  cmp eax,01
"nwmain.exe"+27BD17: 7E 0C                             -  jle INJECTISU
"nwmain.exe"+27BD19: 48                                -  dec eax
"nwmain.exe"+27BD1A: 89 85 90 02 00 00                 -  mov [ebp+00000290],eax
"nwmain.exe"+27BD20: E9 69 01 00 00                    -  jmp nwmain.exe+27BE8E
"nwmain.exe"+27BD25: 89 7B 0C                          -  mov [ebx+0C],edi
"nwmain.exe"+27BD28: 39 BD E0 00 00 00                 -  cmp [ebp+000000E0],edi
"nwmain.exe"+27BD2E: 0F 85 5A 01 00 00                 -  jne nwmain.exe+27BE8E
"nwmain.exe"+27BD34: C7 44 24 38 01 00 00 00           -  mov [esp+38],00000001
"nwmain.exe"+27BD3C: E9 4D 01 00 00                    -  jmp nwmain.exe+27BE8E
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>60</ID>
      <Description>"DM_God = 1"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : nwmain.exe
  Version: 
  Date   : 2016-04-28
  Author : NT

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECTGOD,nwmain.exe,2B 8B 06 6A 00 8B CE) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+d0],1
  mov eax,[esi]
  push 00
  mov ecx,esi
  jmp return

INJECTGOD+01:
  jmp code
  nop
return:
registersymbol(INJECTGOD)

[DISABLE]

INJECTGOD+01:
  db 8B 06 6A 00 8B CE

unregistersymbol(INJECTGOD)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "nwmain.exe"+240808

"nwmain.exe"+2407EC: 8B 16              -  mov edx,[esi]
"nwmain.exe"+2407EE: 8B CE              -  mov ecx,esi
"nwmain.exe"+2407F0: FF 52 30           -  call dword ptr [edx+30]
"nwmain.exe"+2407F3: 8B 88 D8 0A 00 00  -  mov ecx,[eax+00000AD8]
"nwmain.exe"+2407F9: 85 C9              -  test ecx,ecx
"nwmain.exe"+2407FB: 75 0B              -  jne nwmain.exe+240808
"nwmain.exe"+2407FD: 8B C8              -  mov ecx,eax
"nwmain.exe"+2407FF: E8 0C DD 04 00     -  call nwmain.exe+28E510
"nwmain.exe"+240804: 85 C0              -  test eax,eax
"nwmain.exe"+240806: 74 2B              -  je nwmain.exe+240833
// ---------- INJECTING HERE ----------
"nwmain.exe"+240808: 8B 06              -  mov eax,[esi]
"nwmain.exe"+24080A: 6A 00              -  push 00
"nwmain.exe"+24080C: 8B CE              -  mov ecx,esi
// ---------- DONE INJECTING  ----------
"nwmain.exe"+24080E: FF 90 9C 00 00 00  -  call dword ptr [eax+0000009C]
"nwmain.exe"+240814: 66 3D 01 00        -  cmp ax,0001
"nwmain.exe"+240818: 7D 19              -  jnl nwmain.exe+240833
"nwmain.exe"+24081A: 8B 16              -  mov edx,[esi]
"nwmain.exe"+24081C: 6A 00              -  push 00
"nwmain.exe"+24081E: 8B CE              -  mov ecx,esi
"nwmain.exe"+240820: FF 92 9C 00 00 00  -  call dword ptr [edx+0000009C]
"nwmain.exe"+240826: 66 3D F6 FF        -  cmp ax,FFF6
"nwmain.exe"+24082A: 7E 07              -  jle nwmain.exe+240833
"nwmain.exe"+24082C: B8 01 00 00 00     -  mov eax,00000001
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>17</Key>
            <Key>187</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Won't Lose XP"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : nwmain.exe
  Version: 
  Date   : 2015-11-29
  Author : NT

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECTMXP,nwmain.exe,89 5E 70 0F 84 89 02 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  push eax
  mov eax,[esi+70]
  cmp ebx,eax
//  cmp ebx,(int)100000000
  jge code
//  mov ebx,(int)100000000
  mov ebx,eax
  jmp code
code:
  pop eax
  mov [esi+70],ebx
  je nwmain.exe+2A2003
  jmp return

INJECTMXP:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(INJECTMXP)

[DISABLE]

INJECTMXP:
  db 89 5E 70 0F 84 89 02 00 00

unregistersymbol(INJECTMXP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "nwmain.exe"+2A1D71

"nwmain.exe"+2A1D52: 6A 00              -  push 00
"nwmain.exe"+2A1D54: 8B CF              -  mov ecx,edi
"nwmain.exe"+2A1D56: E8 C5 85 E5 FF     -  call nwmain.exe+FA320
"nwmain.exe"+2A1D5B: 8B 4E 24           -  mov ecx,[esi+24]
"nwmain.exe"+2A1D5E: 6A 00              -  push 00
"nwmain.exe"+2A1D60: 57                 -  push edi
"nwmain.exe"+2A1D61: 68 B7 00 00 00     -  push 000000B7
"nwmain.exe"+2A1D66: E8 F5 ED FB FF     -  call nwmain.exe+260B60
"nwmain.exe"+2A1D6B: 8B 44 24 40        -  mov eax,[esp+40]
"nwmain.exe"+2A1D6F: 85 C0              -  test eax,eax
// ---------- INJECTING HERE ----------
"nwmain.exe"+2A1D71: 89 5E 70           -  mov [esi+70],ebx
"nwmain.exe"+2A1D74: 0F 84 89 02 00 00  -  je nwmain.exe+2A2003
// ---------- DONE INJECTING  ----------
"nwmain.exe"+2A1D7A: 85 ED              -  test ebp,ebp
"nwmain.exe"+2A1D7C: 0F 8D AB 00 00 00  -  jnl nwmain.exe+2A1E2D
"nwmain.exe"+2A1D82: 8A 86 A1 00 00 00  -  mov al,[esi+000000A1]
"nwmain.exe"+2A1D88: 33 DB              -  xor ebx,ebx
"nwmain.exe"+2A1D8A: 33 FF              -  xor edi,edi
"nwmain.exe"+2A1D8C: 84 C0              -  test al,al
"nwmain.exe"+2A1D8E: 76 27              -  jna nwmain.exe+2A1DB7
"nwmain.exe"+2A1D90: 8B 46 24           -  mov eax,[esi+24]
"nwmain.exe"+2A1D93: 8B 80 64 0C 00 00  -  mov eax,[eax+00000C64]
"nwmain.exe"+2A1D99: 6A 00              -  push 00
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>17</Key>
            <Key>187</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Spells Always Beat SR"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : nwmain.exe
  Version: 
  Date   : 2016-01-17
  Author : NT

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECTSRCheck,nwmain.exe,8A 86 38 04 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov al,[esi+00000438]
  mov al,0
  jmp return

INJECTSRCheck:
  jmp code
  nop
return:
registersymbol(INJECTSRCheck)

[DISABLE]

INJECTSRCheck:
  db 8A 86 38 04 00 00

unregistersymbol(INJECTSRCheck)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "nwmain.exe"+2AE33E

"nwmain.exe"+2AE322: 85 C0                 -  test eax,eax
"nwmain.exe"+2AE324: 74 05                 -  je nwmain.exe+2AE32B
"nwmain.exe"+2AE326: 80 C3 04              -  add bl,04
"nwmain.exe"+2AE329: EB 13                 -  jmp nwmain.exe+2AE33E
"nwmain.exe"+2AE32B: 68 BB 02 00 00        -  push 000002BB
"nwmain.exe"+2AE330: 8B CE                 -  mov ecx,esi
"nwmain.exe"+2AE332: E8 F9 52 FF FF        -  call nwmain.exe+2A3630
"nwmain.exe"+2AE337: 85 C0                 -  test eax,eax
"nwmain.exe"+2AE339: 74 03                 -  je nwmain.exe+2AE33E
"nwmain.exe"+2AE33B: 80 C3 02              -  add bl,02
// ---------- INJECTING HERE ----------
"nwmain.exe"+2AE33E: 8A 86 38 04 00 00     -  mov al,[esi+00000438]
// ---------- DONE INJECTING  ----------
"nwmain.exe"+2AE344: 8A 8E 39 04 00 00     -  mov cl,[esi+00000439]
"nwmain.exe"+2AE34A: 0F BE F1              -  movsx esi,cl
"nwmain.exe"+2AE34D: 0F BE D0              -  movsx edx,al
"nwmain.exe"+2AE350: 2B D6                 -  sub edx,esi
"nwmain.exe"+2AE352: 0F BE F3              -  movsx esi,bl
"nwmain.exe"+2AE355: 3B F2                 -  cmp esi,edx
"nwmain.exe"+2AE357: 7D 04                 -  jnl nwmain.exe+2AE35D
"nwmain.exe"+2AE359: 2A C1                 -  sub al,cl
"nwmain.exe"+2AE35B: 8A D8                 -  mov bl,al
"nwmain.exe"+2AE35D: 84 DB                 -  test bl,bl
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address>017C215D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>062B0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero2</Name>
      <Address>08530010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero3</Name>
      <Address>062B0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero1</Name>
      <Address>08530000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTSSTest</Name>
      <Address>006A52AF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SorcerAccTest</Name>
      <Address>006A788B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTFeatUse</Name>
      <Address>0061C89C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTItemCastPerDay</Name>
      <Address>0067BE3E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTItemCastCharge</Name>
      <Address>0067BD5A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTGOD</Name>
      <Address>00640807</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTMXP</Name>
      <Address>006A1D71</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTUCW</Name>
      <Address>00625BD8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTISU</Name>
      <Address>0067BD25</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Divinity II: The Dragon Knight Saga
 Game Version  : 1.4.9.70
 Script Version: 2.0
 CE Version    : 5.6
 GodMode, Mana and Gold
 12-Nov-2010 For version 1.4.9.32
 27-Dec-2010 Changed offsets for version 1.4.9.70 + _MonXP
 27-Dec-2010 AOB Version
===========================================
HOTKEYS:
CTRL+Home = Enable  cheats;
CTRL+End  = Disable cheats;
===========================================
Cheers!
</Comments>
</CheatTable>
