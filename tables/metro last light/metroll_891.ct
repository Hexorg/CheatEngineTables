<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>368</ID>
      <Description>"INFINITE HEALTH"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(health)
label(originalcode)
label(returnhere)
registersymbol(health)
aobscan(aob_health,8B 81 A4 03 00 00 85 C0 74 23 8B 48 4C 8B 4C 88 34 85 C9)

newmem:
mov [ecx+00000204],(float)100

originalcode:
mov eax,[ecx+000003A4]
jmp returnhere

aob_health:
health:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(health)
health:
mov eax,[ecx+000003A4]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>347</ID>
      <Description>"INFINITE AMMO"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(ammo)
label(returnhere)
registersymbol(ammo)
aobscan(aob_ammo,8B 81 A4 03 00 00 C3 56 8B F1 8B 06 FF 90 10 01 00 00 85 C0)

newmem:
mov [ecx+000003A4],#9999
mov eax,[ecx+000003A4]
jmp returnhere

aob_ammo:
ammo:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(ammo)
ammo:
mov eax,[ecx+000003A4]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>348</ID>
      <Description>"INFINITE BOLTS"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(bolts)
label(returnhere)
registersymbol(bolts)
aobscan(aob_bolts,8B 81 6C 01 00 00 C3 8B 44 24 04 89 81 6C 01 00 00 C2 04 00)

newmem:
mov [ecx+0000016C],#9999
mov eax,[ecx+0000016C]
jmp returnhere

aob_bolts:
bolts:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(bolts)
bolts:
mov eax,[ecx+0000016C]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>361</ID>
      <Description>"INFINITE MEDKITS"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(medkits)
label(returnhere)
registersymbol(medkits)
aobscan(aob_medkits,8B 91 EC 02 00 00 33 C0 F6 C2 01 74 05 B8 01 00 00 00 F6)

newmem:
mov [ecx+000002EC],#31
mov edx,[ecx+000002EC]
jmp returnhere

aob_medkits:
medkits:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(medkits)
medkits:
mov edx,[ecx+000002EC]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>362</ID>
      <Description>"INFINITE FILTER DURATION"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(filter)
label(returnhere)
registersymbol(filter)
aobscan(aob_filter,D9 81 80 01 00 00 D8 05 E8 94 B8 00 E9 59 C0 30 00 8B 44 24)

newmem:
mov [ecx+00000180],(float)999
fld dword ptr [ecx+00000180]
jmp returnhere

aob_filter:
filter:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(filter)
filter:
fld dword ptr [ecx+00000180]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>365</ID>
      <Description>"INFINITE ELECTRICITY"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(electricity)
label(returnhere)
registersymbol(electricity)
aobscan(aob_electricity,F3 0F 10 86 F4 02 00 00 F3 0F 10 4C 24 0C F3 0F 59 4C)

newmem:
mov [esi+000002F4],(float)2
movss xmm0,[esi+000002F4]
jmp returnhere

aob_electricity:
electricity:
jmp newmem
nop
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(electricity)
electricity:
movss xmm0,[esi+000002F4]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>363</ID>
      <Description>"INFINITE KNIVES &amp; BOMBS"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(items)
label(returnhere)
registersymbol(items)
aobscan(aob_items,8B 81 BC 04 00 00 C3 8B 44 24 04 25 00 40 00 00 C2 08 00 56)

newmem:
mov [ecx+000004BC],#99
mov eax,[ecx+000004BC]
jmp returnhere

aob_items:
items:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(items)
items:
mov eax,[ecx+000004BC]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>370</ID>
      <Description>"INFINITE COMPRESSED"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(compressed)
label(returnhere)
registersymbol(compressed)
aobscan(aob_compressed,F3 0F 10 86 F0 07 00 00 85 C0 74 05 8D 50 8C EB 02 33 D2 85)

newmem:
mov [esi+000007F0],(float)12
movss xmm0,[esi+000007F0]
jmp returnhere

aob_compressed:
compressed:
jmp newmem
nop
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(compressed)
compressed:
movss xmm0,[esi+000007F0]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>369</ID>
      <Description>"INFINITE GAS MASK"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(gasmask)
label(returnhere)
registersymbol(gasmask)
aobscan(aob_gasmask,F3 0F 10 80 04 02 00 00 8B 11 8B 42 5C 6A 00 6A 04 F3 0F)

newmem:
mov [eax+00000204],(float)1
movss xmm0,[eax+00000204]
jmp returnhere

aob_gasmask:
gasmask:
jmp newmem
nop
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(gasmask)
gasmask:
movss xmm0,[eax+00000204]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>364</ID>
      <Description>"INFINITE CLAYMORES"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(items2)
label(returnhere)
registersymbol(items2)
aobscan(aob_items2,8B 81 FC 01 00 00 C3 8B 44 24 04 89 81 FC 01 00 00 C2 04 00)

newmem:
mov [ecx+000001FC],#99
mov eax,[ecx+000001FC]
jmp returnhere

aob_items2:
items2:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(items2)
items2:
mov eax,[ecx+000001FC]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>358</ID>
      <Description>"RAPIDFIRE"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(fire)
label(returnhere)
registersymbol(fire)
aobscan(aob_fire,0F 2F 86 20 04 00 00 0F 82 34 02 00 00 53 55 8B 16 8B 82 C8)

newmem:
mov [esi+00000420],(float)0
comiss xmm0,[esi+00000420]
jmp returnhere

aob_fire:
fire:
jmp newmem
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(fire)
fire:
comiss xmm0,[esi+00000420]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>359</ID>
      <Description>"NO SPREAD"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(spread)
label(returnhere)
registersymbol(spread)
aobscan(aob_spread,F3 0F 10 8E 6C 01 00 00 F3 0F 5C C8 F3 0F 59 8E 68 01 00 00)

newmem:
mov [esi+0000016C],(float)0
movss xmm1,[esi+0000016C]
jmp returnhere

aob_spread:
spread:
jmp newmem
nop
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(spread)
spread:
movss xmm1,[esi+0000016C]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>360</ID>
      <Description>"NO OVERHEAT"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(overheat)
label(returnhere)
registersymbol(overheat)
aobscan(aob_overheat,F3 0F 10 8E 90 08 00 00 F3 0F 59 44 24 10 F3 0F 5C C8 F3)

newmem:
mov [esi+00000890],(float)0
movss xmm1,[esi+00000890]
jmp returnhere

aob_overheat:
overheat:
jmp newmem
nop
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(overheat)
overheat:
movss xmm1,[esi+00000890]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>349</ID>
      <Description>"NO RELOAD"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(reload)
label(returnhere)
registersymbol(reload)
aobscan(aob_reload,89 87 BC 02 00 00 5F 5E 5B C2 04 00 8B 16 8B 44 24 10 8B 92)

newmem:
mov eax,[edi+000002C4]
mov [edi+000002BC],eax
jmp returnhere

aob_reload:
reload:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(reload)
reload:
mov [edi+000002BC],eax

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>346</ID>
      <Description>"SUPER SPEED"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(speed)
label(returnhere)
registersymbol(speed)
aobscan(aob_speed,0F 2F 87 74 0E 00 00 73 23 8B 8F 30 07 00 00 8B 11 8B 42 34)

newmem:
mov [edi+00000E74],(float)5
comiss xmm0,[edi+00000E74]
jmp returnhere

aob_speed:
speed:
jmp newmem
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(speed)
speed:
comiss xmm0,[edi+00000E74]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>367</ID>
      <Description>"SUPER JUMP"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(jump)
label(returnhere)
registersymbol(jump)
aobscan(aob_jump,0F 2F 86 80 0E 00 00 72 06 32 C0 5E C2 08 00 F6 86 58 0C)

newmem:
mov [esi+00000E80],(float)3
comiss xmm0,[esi+00000E80]
jmp returnhere

aob_jump:
jump:
jmp newmem
nop
nop
returnhere:

[DISABLE]
dealloc(newmem)
unregistersymbol(jump)
jump:
comiss xmm0,[esi+00000E80]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>accuracy</Name>
      <Address>005ADEFE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Base_Address</Name>
      <Address>1EEB0004</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
