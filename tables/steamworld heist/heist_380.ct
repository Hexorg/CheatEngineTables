<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"water"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heist.exe
  Version: 
  Date   : 2016-06-11
  Author : Woosh

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(wATER,Heist.exe,89 51 10 8B E5) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  MOV edx,9999
  mov [ecx+10],edx
  mov esp,ebp
  jmp return

wATER:
  jmp code
return:
registersymbol(wATER)

[DISABLE]

wATER:
  db 89 51 10 8B E5

unregistersymbol(wATER)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heist.exe"+B2289

"Heist.exe"+B2263: 83 EC 08              -  sub esp,08
"Heist.exe"+B2266: 8B 41 10              -  mov eax,[ecx+10]
"Heist.exe"+B2269: 03 45 08              -  add eax,[ebp+08]
"Heist.exe"+B226C: C7 45 F8 00 00 00 00  -  mov [ebp-08],00000000
"Heist.exe"+B2273: 89 45 FC              -  mov [ebp-04],eax
"Heist.exe"+B2276: C7 45 08 3F 42 0F 00  -  mov [ebp+08],000F423F
"Heist.exe"+B227D: 3D 3F 42 0F 00        -  cmp eax,000F423F
"Heist.exe"+B2282: 7E 0E                 -  jle Heist.exe+B2292
"Heist.exe"+B2284: 8D 55 08              -  lea edx,[ebp+08]
"Heist.exe"+B2287: 8B 12                 -  mov edx,[edx]
// ---------- INJECTING HERE ----------
"Heist.exe"+B2289: 89 51 10              -  mov [ecx+10],edx
"Heist.exe"+B228C: 8B E5                 -  mov esp,ebp
// ---------- DONE INJECTING  ----------
"Heist.exe"+B228E: 5D                    -  pop ebp
"Heist.exe"+B228F: C2 04 00              -  ret 0004
"Heist.exe"+B2292: 8D 55 FC              -  lea edx,[ebp-04]
"Heist.exe"+B2295: 85 C0                 -  test eax,eax
"Heist.exe"+B2297: 79 EE                 -  jns Heist.exe+B2287
"Heist.exe"+B2299: 8D 45 F8              -  lea eax,[ebp-08]
"Heist.exe"+B229C: 8B 00                 -  mov eax,[eax]
"Heist.exe"+B229E: 89 41 10              -  mov [ecx+10],eax
"Heist.exe"+B22A1: 8B E5                 -  mov esp,ebp
"Heist.exe"+B22A3: 5D                    -  pop ebp
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"turns"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heist.exe
  Version: 
  Date   : 2016-06-11
  Author : Woosh

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Turns,Heist.exe,C7 87 D8 02 00 00 00 00 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [edi+000002D8],00000063
  jmp return

Turns:
  jmp code
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(Turns)

[DISABLE]

Turns:
  db C7 87 D8 02 00 00 00 00 00 00

unregistersymbol(Turns)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heist.exe"+38ED0

"Heist.exe"+38EA4: 68 A2 01 00 00                 -  push 000001A2
"Heist.exe"+38EA9: 68 10 D6 73 00                 -  push Heist.exe+49D610
"Heist.exe"+38EAE: 68 E0 D6 73 00                 -  push Heist.exe+49D6E0
"Heist.exe"+38EB3: FF D3                          -  call ebx
"Heist.exe"+38EB5: 83 C4 0C                       -  add esp,0C
"Heist.exe"+38EB8: 8B 8F 70 04 00 00              -  mov ecx,[edi+00000470]
"Heist.exe"+38EBE: 80 B9 C8 03 00 00 00           -  cmp byte ptr [ecx+000003C8],00
"Heist.exe"+38EC5: 74 13                          -  je Heist.exe+38EDA
"Heist.exe"+38EC7: 83 BF D8 02 00 00 00           -  cmp dword ptr [edi+000002D8],00
"Heist.exe"+38ECE: 7E 0A                          -  jle Heist.exe+38EDA
// ---------- INJECTING HERE ----------
"Heist.exe"+38ED0: C7 87 D8 02 00 00 00 00 00 00  -  mov [edi+000002D8],00000000
// ---------- DONE INJECTING  ----------
"Heist.exe"+38EDA: 0F 57 C0                       -  xorps xmm0,xmm0
"Heist.exe"+38EDD: F3 0F 11 87 DC 02 00 00        -  movss [edi+000002DC],xmm0
"Heist.exe"+38EE5: 8B 7E 04                       -  mov edi,[esi+04]
"Heist.exe"+38EE8: 8B 56 08                       -  mov edx,[esi+08]
"Heist.exe"+38EEB: 8B 8A BC 00 00 00              -  mov ecx,[edx+000000BC]
"Heist.exe"+38EF1: 81 C7 24 07 00 00              -  add edi,00000724
"Heist.exe"+38EF7: E8 A4 CE FC FF                 -  call Heist.exe+5DA0
"Heist.exe"+38EFC: F7 D8                          -  neg eax
"Heist.exe"+38EFE: 75 28                          -  jne Heist.exe+38F28
"Heist.exe"+38F00: 8B 3E                          -  mov edi,[esi]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"shots"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heist.exe
  Version: 
  Date   : 2016-06-11
  Author : Woosh

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(shots,Heist.exe,FF 8B D8 02 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  inc [ebx+000002D8]
  jmp return

shots:
  jmp code
  nop
return:
registersymbol(shots)

[DISABLE]

shots:
  db FF 8B D8 02 00 00

unregistersymbol(shots)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heist.exe"+15BDC2

"Heist.exe"+15BD9B: FF 15 D4 83 73 00        -  call dword ptr [Heist.exe+4983D4]
"Heist.exe"+15BDA1: 83 C4 0C                 -  add esp,0C
"Heist.exe"+15BDA4: 8B 83 58 03 00 00        -  mov eax,[ebx+00000358]
"Heist.exe"+15BDAA: 83 C0 08                 -  add eax,08
"Heist.exe"+15BDAD: 50                       -  push eax
"Heist.exe"+15BDAE: 8D 8B 98 03 00 00        -  lea ecx,[ebx+00000398]
"Heist.exe"+15BDB4: E8 17 2F ED FF           -  call Heist.exe+2ECD0
"Heist.exe"+15BDB9: FF 40 04                 -  inc [eax+04]
"Heist.exe"+15BDBC: 80 7E 59 00              -  cmp byte ptr [esi+59],00
"Heist.exe"+15BDC0: 75 76                    -  jne Heist.exe+15BE38
// ---------- INJECTING HERE ----------
"Heist.exe"+15BDC2: FF 8B D8 02 00 00        -  dec [ebx+000002D8]
// ---------- DONE INJECTING  ----------
"Heist.exe"+15BDC8: 8B 83 D8 02 00 00        -  mov eax,[ebx+000002D8]
"Heist.exe"+15BDCE: BA 00 00 00 00           -  mov edx,00000000
"Heist.exe"+15BDD3: 0F 98 C2                 -  sets dl
"Heist.exe"+15BDD6: 51                       -  push ecx
"Heist.exe"+15BDD7: 89 65 F0                 -  mov [ebp-10],esp
"Heist.exe"+15BDDA: 4A                       -  dec edx
"Heist.exe"+15BDDB: 23 C2                    -  and eax,edx
"Heist.exe"+15BDDD: 89 83 D8 02 00 00        -  mov [ebx+000002D8],eax
"Heist.exe"+15BDE3: 8B C4                    -  mov eax,esp
"Heist.exe"+15BDE5: C7 00 48 B7 75 00        -  mov [eax],Heist.exe+4BB748
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"1hit"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heist.exe
  Version: 
  Date   : 2016-06-12
  Author : Woosh

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(1hit,Heist.exe,89 93 B0 00 00 00 83) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov edx,0
  mov [ebx+000000B0],edx
  jmp return

1hit:
  jmp code
  nop
return:
registersymbol(1hit)

[DISABLE]

1hit:
  db 89 93 B0 00 00 00

unregistersymbol(1hit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heist.exe"+1A17E0

"Heist.exe"+1A17B1: C6 83 F0 03 00 00 01     -  mov byte ptr [ebx+000003F0],01
"Heist.exe"+1A17B8: 01 83 E0 02 00 00        -  add [ebx+000002E0],eax
"Heist.exe"+1A17BE: 8B 8B B0 00 00 00        -  mov ecx,[ebx+000000B0]
"Heist.exe"+1A17C4: 2B 4C 24 38              -  sub ecx,[esp+38]
"Heist.exe"+1A17C8: C7 44 24 20 00 00 00 00  -  mov [esp+20],00000000
"Heist.exe"+1A17D0: 89 4C 24 1C              -  mov [esp+1C],ecx
"Heist.exe"+1A17D4: 8D 44 24 20              -  lea eax,[esp+20]
"Heist.exe"+1A17D8: 78 04                    -  js Heist.exe+1A17DE
"Heist.exe"+1A17DA: 8D 44 24 1C              -  lea eax,[esp+1C]
"Heist.exe"+1A17DE: 8B 10                    -  mov edx,[eax]
// ---------- INJECTING HERE ----------
"Heist.exe"+1A17E0: 89 93 B0 00 00 00        -  mov [ebx+000000B0],edx
// ---------- DONE INJECTING  ----------
"Heist.exe"+1A17E6: 83 BB 38 01 00 00 00     -  cmp dword ptr [ebx+00000138],00
"Heist.exe"+1A17ED: 75 18                    -  jne Heist.exe+1A1807
"Heist.exe"+1A17EF: 68 A2 01 00 00           -  push 000001A2
"Heist.exe"+1A17F4: 68 10 D6 48 01           -  push Heist.exe+49D610
"Heist.exe"+1A17F9: 68 E0 D6 48 01           -  push Heist.exe+49D6E0
"Heist.exe"+1A17FE: FF 15 D4 83 48 01        -  call dword ptr [Heist.exe+4983D4]
"Heist.exe"+1A1804: 83 C4 0C                 -  add esp,0C
"Heist.exe"+1A1807: 8B 83 38 01 00 00        -  mov eax,[ebx+00000138]
"Heist.exe"+1A180D: 8B 80 DC 00 00 00        -  mov eax,[eax+000000DC]
"Heist.exe"+1A1813: 89 44 24 20              -  mov [esp+20],eax
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>90</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"xp"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Heist.exe
  Version: 
  Date   : 2016-06-12
  Author : Woosh

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XP,Heist.exe,89 48 1C 8B 3A) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
 mov ecx,999
  mov [eax+1C],ecx
  mov edi,[edx]
  jmp return

XP:
  jmp code
return:
registersymbol(XP)

[DISABLE]

XP:
  db 89 48 1C 8B 3A

unregistersymbol(XP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Heist.exe"+19BE26

"Heist.exe"+19BE0B: 8B 4D 10              -  mov ecx,[ebp+10]
"Heist.exe"+19BE0E: 89 4D 10              -  mov [ebp+10],ecx
"Heist.exe"+19BE11: 3B C8                 -  cmp ecx,eax
"Heist.exe"+19BE13: 7C 03                 -  jl Heist.exe+19BE18
"Heist.exe"+19BE15: 89 45 10              -  mov [ebp+10],eax
"Heist.exe"+19BE18: 57                    -  push edi
"Heist.exe"+19BE19: 8B CB                 -  mov ecx,ebx
"Heist.exe"+19BE1B: E8 10 69 E7 FF        -  call Heist.exe+12730
"Heist.exe"+19BE20: 8B 4D 10              -  mov ecx,[ebp+10]
"Heist.exe"+19BE23: 8B 55 08              -  mov edx,[ebp+08]
// ---------- INJECTING HERE ----------
"Heist.exe"+19BE26: 89 48 1C              -  mov [eax+1C],ecx
"Heist.exe"+19BE29: 8B 3A                 -  mov edi,[edx]
// ---------- DONE INJECTING  ----------
"Heist.exe"+19BE2B: 83 7F 34 00           -  cmp dword ptr [edi+34],00
"Heist.exe"+19BE2F: 75 15                 -  jne Heist.exe+19BE46
"Heist.exe"+19BE31: 6A 5B                 -  push 5B
"Heist.exe"+19BE33: 68 40 13 4A 01        -  push Heist.exe+4B1340
"Heist.exe"+19BE38: 68 E0 D6 48 01        -  push Heist.exe+49D6E0
"Heist.exe"+19BE3D: FF 15 D4 83 48 01     -  call dword ptr [Heist.exe+4983D4]
"Heist.exe"+19BE43: 83 C4 0C              -  add esp,0C
"Heist.exe"+19BE46: 8B 47 34              -  mov eax,[edi+34]
"Heist.exe"+19BE49: 8B 4D 0C              -  mov ecx,[ebp+0C]
"Heist.exe"+19BE4C: 50                    -  push eax
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>XP</Name>
      <Address>0118BE26</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wATER</Name>
      <Address> 010A2289</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Turns</Name>
      <Address> 01028ED0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>shots</Name>
      <Address> 0114BDC2</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
