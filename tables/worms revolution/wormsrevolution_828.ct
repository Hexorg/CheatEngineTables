<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Infinite health------------------------------------HotKey {Num 1}"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(inf_health)
registersymbol(inf_health)

aobscan(health_aob,8B 41 34 8B 4B F5 3B C8 89 43 F9 7D 1B)

newmem:

cmp [ecx+44],0//////Compare if our worms
jne originalcode

cmp [ecx+34],0//////////Compare if health value should be 0 - (for no death in water fix)
je originalcode

mov [ecx+34],#200

originalcode:
mov eax,[ecx+34]
mov ecx,[ebx-0B]

exit:
jmp returnhere

health_aob:
inf_health:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
inf_health:
mov eax,[ecx+34]
mov ecx,[ebx-0B]
//Alt: db 8B 41 34 8B 4B F5

unregistersymbol(inf_health)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Stop turn timer----------------------------------HotKey {Num 2}"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(Ttime)

registersymbol(Ttime)

aobscan(Ttimeaob,76 08 83 C0 ** 89 46 30 EB 03 89 56 30)


newmem:
cmp ebp,0018F9A8 ///cmp crash fix
jne originalcode

add eax,DF
mov [esi+30],#60000
jmp exit


originalcode:
add eax,DF
mov [esi+30],eax

exit:
jmp returnhere

Ttimeaob+2:
Ttime:
jmp newmem
nop
returnhere:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Ttime:
add eax,DF
mov [esi+30],eax
//Alt: db 83 C0 DF 89 46 30

unregistersymbol(Ttime)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>98</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Stop game timer-------------------------------HotKey {Num 3}"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(gametime)

registersymbol(gametime)

aobscan(StopGTaob,83 C1 ** 89 48 2C 8B 0D ** ** ** ** 01 79 40)


newmem:
cmp ebp,0018F9A8 /// cmp crash fix
jne originalcode

add ecx,DF
mov [eax+2C],#1800000
jmp exit


originalcode:
add ecx,DF
mov [eax+2C],ecx

exit:
jmp returnhere

StopGTaob:
gametime:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
gametime:
add ecx,DF
mov [eax+2C],ecx
//Alt: db 83 C1 DF 89 48 2C

unregistersymbol(gametime)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>99</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>116</ID>
      <Description>"Unlock all weapons/Inf ammo----------Hotkey {Num 4}"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(unlock_weapons)
registersymbol(unlock_weapons)

aobscan(weapons_aob,83 C1 ** 03 C1 0F B6 44 18 79 8B 0D)

newmem:
cmp [eax+8],1//////Compare if our worms
jne originalcode
mov [eax+ebx+79],#255

originalcode:
movzx eax,byte ptr [eax+ebx+79]

exit:
jmp returnhere

weapons_aob+5:
unlock_weapons:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
unlock_weapons:
movzx eax,byte ptr [eax+ebx+79]
//Alt: db 0F B6 44 18 79

unregistersymbol(unlock_weapons)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>100</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>130</ID>
      <Description>"Remove turn limits (weapons)-----------Hotkey {Num 5}"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(no_turn_limit)
registersymbol(no_turn_limit)

aobscan(turn_limit_aob,8B 77 04 50 8B 44 24 18 50 51 8B CD)

newmem:
mov [edi+04],0

originalcode:
mov esi,[edi+04]
push eax
mov eax,[esp+18]

exit:
jmp returnhere

turn_limit_aob:
no_turn_limit:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
no_turn_limit:
mov esi,[edi+04]
push eax
mov eax,[esp+18]
//Alt: db 8B 77 04 50 8B 44 24 18

unregistersymbol(no_turn_limit)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>101</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>46</ID>
      <Description>"Inf jet pack fuel---------------------------------HotKey {Num 6}"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(JPfuel)

registersymbol(JPfuel)

aobscan(JPfuel_aob,D8 64 24 04 D9 99 54 01 00 00 C2 04 00)

newmem:
fsub dword ptr [esp+04]
mov [ecx+00000154],(float)100
jmp exit

originalcode:
fsub dword ptr [esp+04]
fstp dword ptr [ecx+00000154]

exit:
jmp returnhere

JPfuel_aob:
JPfuel:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
JPfuel:
fsub dword ptr [esp+04]
fstp dword ptr [ecx+00000154]
//Alt: db D8 64 24 04 D9 99 54 01 00 00

unregistersymbol(JPfuel)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>102</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>114</ID>
      <Description>"Freeze special weapon timer-------------HotKey {Num7}"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(hack)
label(jmp1)
label(exit)
label(SSFlight)

registersymbol(SSFlight)

aobscan(SSFlightaob,74 08 89 86 F4 00 00 00 EB 0A C7 86 F4 00 00 00 FF FF FF FF 39 BE 18 01 00 00)

newmem:
cmp eax,1770 ///compare if mole/oldlady
je jmp1
jmp hack

jmp1:
cmp esp,0018F538 ///compare if mole
jne originalcode
jmp hack

hack:
nop
nop
nop
nop
nop
nop
jmp exit

originalcode:
mov [esi+000000F4],eax
jmp returnhere

exit:
jmp returnhere

SSFlightaob+2:
SSFlight:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
SSFlight:
dealloc(newmem)
mov [esi+000000F4],eax
//Alt: db 89 86 F4 00 00 00

unregistersymbol(SSFlight)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>103</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>healthaob</Name>
      <Address>008D7314</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>remove_turn_limit</Name>
      <Address>0083F0F2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inf_health</Name>
      <Address>009DA200</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Ttime</Name>
      <Address>008239A9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gametime</Name>
      <Address>008239CD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>unlock_weapons</Name>
      <Address>0083EF9B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>JPfuel</Name>
      <Address>008ACC07</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>no_turn_limit</Name>
      <Address>00837BA4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SSFlight</Name>
      <Address>0087E414</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
