<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Gold"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(gold_aob,Launch_EA.exe,8B 88 84 00 00 00 BA 7F 96 98 00 41) // should be unique
alloc(newmem,$1000,"Launch_EA.exe"+9E3EC1)

label(code)
label(return)

registersymbol(gold_aob)

newmem:

code:
  mov [rax+00000084],#9999999
  mov ecx,[rax+00000084]
  jmp return

gold_aob:
  jmp code
  nop
return:

[DISABLE]

gold_aob:
  db 8B 88 84 00 00 00

unregistersymbol(gold_aob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Launch_EA.exe"+9E3EC1

"Launch_EA.exe"+9E3E98: F3 0F 10 5B 24           -  movss xmm3,[rbx+24]
"Launch_EA.exe"+9E3E9D: E8 5E 59 05 00           -  call Launch_EA.exe+A39800
"Launch_EA.exe"+9E3EA2: 48 8B 03                 -  mov rax,[rbx]
"Launch_EA.exe"+9E3EA5: B2 01                    -  mov dl,01
"Launch_EA.exe"+9E3EA7: 48 8B CB                 -  mov rcx,rbx
"Launch_EA.exe"+9E3EAA: FF 50 28                 -  call qword ptr [rax+28]
"Launch_EA.exe"+9E3EAD: 48 8B 05 04 5E 52 00     -  mov rax,[Launch_EA.exe+F09CB8]
"Launch_EA.exe"+9E3EB4: 45 33 F6                 -  xor r14d,r14d
"Launch_EA.exe"+9E3EB7: F3 41 0F 58 F0           -  addss xmm6,xmm8
"Launch_EA.exe"+9E3EBC: F3 0F 11 75 CB           -  movss [rbp-35],xmm6
// ---------- INJECTING HERE ----------
"Launch_EA.exe"+9E3EC1: 8B 88 84 00 00 00        -  mov ecx,[rax+00000084]
// ---------- DONE INJECTING  ----------
"Launch_EA.exe"+9E3EC7: BA 7F 96 98 00           -  mov edx,0098967F
"Launch_EA.exe"+9E3ECC: 41 8B C6                 -  mov eax,r14d
"Launch_EA.exe"+9E3ECF: 85 C9                    -  test ecx,ecx
"Launch_EA.exe"+9E3ED1: C7 45 C7 00 20 D5 44     -  mov [rbp-39],44D52000
"Launch_EA.exe"+9E3ED8: 0F 45 C1                 -  cmovne eax,ecx
"Launch_EA.exe"+9E3EDB: 48 8D 0D A6 0B 13 00     -  lea rcx,[Launch_EA.exe+B14A88]
"Launch_EA.exe"+9E3EE2: 3B C2                    -  cmp eax,edx
"Launch_EA.exe"+9E3EE4: 0F 42 D0                 -  cmovb edx,eax
"Launch_EA.exe"+9E3EE7: E8 64 70 ED FF           -  call Launch_EA.exe+8BAF50
"Launch_EA.exe"+9E3EEC: 48 8B 1D 65 62 52 00     -  mov rbx,[Launch_EA.exe+F0A158]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"[Pointers] Skill Cards"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(card_aob,Launch_EA.exe,0F BE 4C 1F 02) // should be unique
alloc(newmem,$1000,"Launch_EA.exe"+715E51)

label(code)
label(return)
label(card_ptr)

registersymbol(card_aob)
registersymbol(card_ptr)

newmem:

code:
  mov [card_ptr],rbx
  movsx ecx,byte ptr [rdi+rbx+02]
  jmp return
card_ptr:
 db 00 00 00 00 00 00 00 00

card_aob:
  jmp code
return:

[DISABLE]

card_aob:
  db 0F BE 4C 1F 02

unregistersymbol(card_aob)
unregistersymbol(card_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Launch_EA.exe"+715E51

"Launch_EA.exe"+715E36: 8B CA                 -  mov ecx,edx
"Launch_EA.exe"+715E38: 45 8B C1              -  mov r8d,r9d
"Launch_EA.exe"+715E3B: 85 C0                 -  test eax,eax
"Launch_EA.exe"+715E3D: 0F 45 C8              -  cmovne ecx,eax
"Launch_EA.exe"+715E40: 41 3B C9              -  cmp ecx,r9d
"Launch_EA.exe"+715E43: 44 0F 42 C1           -  cmovb r8d,ecx
"Launch_EA.exe"+715E47: EB 03                 -  jmp Launch_EA.exe+715E4C
"Launch_EA.exe"+715E49: 44 8B C2              -  mov r8d,edx
"Launch_EA.exe"+715E4C: 83 FF 03              -  cmp edi,03
"Launch_EA.exe"+715E4F: 73 1B                 -  jae Launch_EA.exe+715E6C
// ---------- INJECTING HERE ----------
"Launch_EA.exe"+715E51: 0F BE 4C 1F 02        -  movsx ecx,byte ptr [rdi+rbx+02]
// ---------- DONE INJECTING  ----------
"Launch_EA.exe"+715E56: B8 FC FF FF FF        -  mov eax,FFFFFFFC
"Launch_EA.exe"+715E5B: 3B C8                 -  cmp ecx,eax
"Launch_EA.exe"+715E5D: 0F 4F C1              -  cmovg eax,ecx
"Launch_EA.exe"+715E60: B9 04 00 00 00        -  mov ecx,00000004
"Launch_EA.exe"+715E65: 3B C1                 -  cmp eax,ecx
"Launch_EA.exe"+715E67: 0F 4C C8              -  cmovl ecx,eax
"Launch_EA.exe"+715E6A: EB 05                 -  jmp Launch_EA.exe+715E71
"Launch_EA.exe"+715E6C: B9 FC FF FF FF        -  mov ecx,FFFFFFFC
"Launch_EA.exe"+715E71: 41 03 C8              -  add ecx,r8d
"Launch_EA.exe"+715E74: 0F 48 CA              -  cmovs ecx,edx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Card ID"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>card_ptr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Skill 1 Bonus"</Description>
          <VariableType>Byte</VariableType>
          <Address>card_ptr</Address>
          <Offsets>
            <Offset>2</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Skill 2 Bonus"</Description>
          <VariableType>Byte</VariableType>
          <Address>card_ptr</Address>
          <Offsets>
            <Offset>3</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Skill 3 Bonus"</Description>
          <VariableType>Byte</VariableType>
          <Address>card_ptr</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Synthesis Doesn't Consume Cards"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(synthesis_aob,Launch_EA.exe,89 08 C7 40 02 FC FC 00 00 66 44 89 28) // should be unique
registersymbol(synthesis_aob)

synthesis_aob:
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop

[DISABLE]

synthesis_aob:
  db 89 08 C7 40 02 FC FC 00 00 66 44 89 28 C6 40 04 FC
//alt:
//mov [rax],ecx
//mov [rax+02],0000FCFC { 64764 }
//mov [rax],r13w
//mov byte ptr [rax+04],-04 { 252 }

unregistersymbol(synthesis_aob)

{
// ORIGINAL CODE - INJECTION POINT: "Launch_EA.exe"+8A7862

"Launch_EA.exe"+8A7840: 77 69                       -  ja Launch_EA.exe+8A78AB
"Launch_EA.exe"+8A7842: 48 8B C8                    -  mov rcx,rax
"Launch_EA.exe"+8A7845: E8 F6 E8 E6 FF              -  call Launch_EA.exe+716140
"Launch_EA.exe"+8A784A: 3D 57 02 00 00              -  cmp eax,00000257
"Launch_EA.exe"+8A784F: 77 5A                       -  ja Launch_EA.exe+8A78AB
"Launch_EA.exe"+8A7851: 48 8B 0D D0 23 66 00        -  mov rcx,[Launch_EA.exe+F09C28]
"Launch_EA.exe"+8A7858: 48 8B 01                    -  mov rax,[rcx]
"Launch_EA.exe"+8A785B: 8B 13                       -  mov edx,[rbx]
"Launch_EA.exe"+8A785D: FF 50 10                    -  call qword ptr [rax+10]
"Launch_EA.exe"+8A7860: 33 C9                       -  xor ecx,ecx
// ---------- INJECTING HERE ----------
"Launch_EA.exe"+8A7862: 89 08                       -  mov [rax],ecx
"Launch_EA.exe"+8A7864: C7 40 02 FC FC 00 00        -  mov [rax+02],0000FCFC
// ---------- DONE INJECTING  ----------
"Launch_EA.exe"+8A786B: 66 44 89 28                 -  mov [rax],r13w
"Launch_EA.exe"+8A786F: C6 40 04 FC                 -  mov byte ptr [rax+04],-04
"Launch_EA.exe"+8A7873: 8B 0B                       -  mov ecx,[rbx]
"Launch_EA.exe"+8A7875: 81 F9 E7 03 00 00           -  cmp ecx,000003E7
"Launch_EA.exe"+8A787B: 77 2E                       -  ja Launch_EA.exe+8A78AB
"Launch_EA.exe"+8A787D: 4C 8B 05 34 24 66 00        -  mov r8,[Launch_EA.exe+F09CB8]
"Launch_EA.exe"+8A7884: 81 F9 E8 03 00 00           -  cmp ecx,000003E8
"Launch_EA.exe"+8A788A: 73 1F                       -  jae Launch_EA.exe+8A78AB
"Launch_EA.exe"+8A788C: 42 0F BE 94 01 2D FB 01 00  -  movsx edx,byte ptr [rcx+r8+0001FB2D]
"Launch_EA.exe"+8A7895: 83 FA 02                    -  cmp edx,02
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"K.O. Count"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(ko_aob,Launch_EA.exe,41 8D 4F 01 B8 1F 85 EB 51) // should be unique
alloc(newmem,$1000,"Launch_EA.exe"+77EED4)

label(code)
label(return)

registersymbol(ko_aob)

newmem:

code:
  lea ecx,[r15+270F]
  mov eax,51EB851F
  jmp return

ko_aob:
  jmp code
  nop
  nop
  nop
  nop
return:

[DISABLE]

ko_aob:
  db 41 8D 4F 01 B8 1F 85 EB 51

unregistersymbol(ko_aob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Launch_EA.exe"+77EED4

"Launch_EA.exe"+77EEB0: 48 89 5C 24 10                 -  mov [rsp+10],rbx
"Launch_EA.exe"+77EEB5: 48 89 6C 24 18                 -  mov [rsp+18],rbp
"Launch_EA.exe"+77EEBA: 48 89 74 24 20                 -  mov [rsp+20],rsi
"Launch_EA.exe"+77EEBF: 57                             -  push rdi
"Launch_EA.exe"+77EEC0: 41 56                          -  push r14
"Launch_EA.exe"+77EEC2: 41 57                          -  push r15
"Launch_EA.exe"+77EEC4: 48 83 EC 30                    -  sub rsp,30
"Launch_EA.exe"+77EEC8: 44 8B B9 6C 01 00 00           -  mov r15d,[rcx+0000016C]
"Launch_EA.exe"+77EECF: 48 8B D9                       -  mov rbx,rcx
"Launch_EA.exe"+77EED2: 33 ED                          -  xor ebp,ebp
// ---------- INJECTING HERE ----------
"Launch_EA.exe"+77EED4: 41 8D 4F 01                    -  lea ecx,[r15+01]
"Launch_EA.exe"+77EED8: B8 1F 85 EB 51                 -  mov eax,51EB851F
// ---------- DONE INJECTING  ----------
"Launch_EA.exe"+77EEDD: 41 F7 E7                       -  mul r15d
"Launch_EA.exe"+77EEE0: 44 8B C2                       -  mov r8d,edx
"Launch_EA.exe"+77EEE3: B8 1F 85 EB 51                 -  mov eax,51EB851F
"Launch_EA.exe"+77EEE8: 41 C1 E8 05                    -  shr r8d,05
"Launch_EA.exe"+77EEEC: 41 F7 E7                       -  mul r15d
"Launch_EA.exe"+77EEEF: 44 8B F2                       -  mov r14d,edx
"Launch_EA.exe"+77EEF2: BA 0F 27 00 00                 -  mov edx,0000270F
"Launch_EA.exe"+77EEF7: 41 C1 EE 04                    -  shr r14d,04
"Launch_EA.exe"+77EEFB: 85 C9                          -  test ecx,ecx
"Launch_EA.exe"+77EEFD: B8 1F 85 EB 51                 -  mov eax,51EB851F
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Weapon Experience"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(weaponexp_aob,Launch_EA.exe,41 89 40 28 E8 A8 FC FF FF) // should be unique
alloc(newmem,$1000,"Launch_EA.exe"+72395F)

label(code)
label(return)

registersymbol(weaponexp_aob)

newmem:

code:
  mov [r8+28],#100000
  call 7FF656383610
  jmp return

weaponexp_aob:
  jmp code
  nop
  nop
  nop
  nop
return:

[DISABLE]

weaponexp_aob:
  db 41 89 40 28 E8 A8 FC FF FF

unregistersymbol(weaponexp_aob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Launch_EA.exe"+72395F

"Launch_EA.exe"+72393B: B9 A0 86 01 00           -  mov ecx,000186A0
"Launch_EA.exe"+723940: 3B D1                    -  cmp edx,ecx
"Launch_EA.exe"+723942: 0F 42 CA                 -  cmovb ecx,edx
"Launch_EA.exe"+723945: 48 8D 54 24 28           -  lea rdx,[rsp+28]
"Launch_EA.exe"+72394A: 03 CF                    -  add ecx,edi
"Launch_EA.exe"+72394C: 81 F9 A0 86 01 00        -  cmp ecx,000186A0
"Launch_EA.exe"+723952: 89 4C 24 28              -  mov [rsp+28],ecx
"Launch_EA.exe"+723956: 48 8B CB                 -  mov rcx,rbx
"Launch_EA.exe"+723959: 48 0F 46 C2              -  cmovbe rax,rdx
"Launch_EA.exe"+72395D: 8B 00                    -  mov eax,[rax]
// ---------- INJECTING HERE ----------
"Launch_EA.exe"+72395F: 41 89 40 28              -  mov [r8+28],eax
"Launch_EA.exe"+723963: E8 A8 FC FF FF           -  call Launch_EA.exe+723610
// ---------- DONE INJECTING  ----------
"Launch_EA.exe"+723968: 8B 13                    -  mov edx,[rbx]
"Launch_EA.exe"+72396A: 8B F8                    -  mov edi,eax
"Launch_EA.exe"+72396C: 83 FA 63                 -  cmp edx,63
"Launch_EA.exe"+72396F: 77 16                    -  ja Launch_EA.exe+723987
"Launch_EA.exe"+723971: 48 8B 0D E8 62 7E 00     -  mov rcx,[Launch_EA.exe+F09C60]
"Launch_EA.exe"+723978: 4C 8B 01                 -  mov r8,[rcx]
"Launch_EA.exe"+72397B: 41 FF 50 10              -  call qword ptr [r8+10]
"Launch_EA.exe"+72397F: 48 8B C8                 -  mov rcx,rax
"Launch_EA.exe"+723982: E8 69 8E FE FF           -  call Launch_EA.exe+70C7F0
"Launch_EA.exe"+723987: 48 8B CB                 -  mov rcx,rbx
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
