<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <Forms>
    <Chaohao>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>1046</ID>
      <Description>"Chaos Drives/Animals Dark"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1044</ID>
          <Description>"Amount Collected"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>sonic2App.exe+154701C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1045</ID>
          <Description>"Slot 1"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01946FCC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1055</ID>
          <Description>"Slot 2"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01946FCC+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1054</ID>
          <Description>"Slot 3"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01946FCC+10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1053</ID>
          <Description>"Slot 4"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01946FCC+18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1052</ID>
          <Description>"Slot 5"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01946FCC+20</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1051</ID>
          <Description>"Slot 6"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01946FCC+28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1050</ID>
          <Description>"Slot 7"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01946FCC+30</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1049</ID>
          <Description>"Slot 8"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01946FCC+38</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1048</ID>
          <Description>"Slot 9"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01946FCC+40</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1047</ID>
          <Description>"Slot 10"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01946FCC+48</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Chaos Drives/Animals Hero"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Amount Collected"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+50</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Slot 1"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Slot 2"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Slot 3"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Slot 4"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Slot 5"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+20</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Slot 6"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Slot 7"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+30</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Slot 8"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+38</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Slot 9"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+40</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Slot 10"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+48</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Chao Info"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1043</ID>
          <Description>"Chao in current garden"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01DC0F80</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1040</ID>
      <Description>"Black Market"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1036</ID>
          <Description>"Chao Rings"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>sonic2App.exe+162787C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1038</ID>
          <Description>"Black Market Items Bought (5 max)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>sonic2App.exe+19BEDAC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1039</ID>
          <Description>"Slot 1"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>01DBEDA0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1056</ID>
          <Description>"Slot 1"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>01DBEDA0+1</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1057</ID>
      <Description>"Misc Cheats"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Character select"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>sonic2App.exe+1534B80</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1033</ID>
          <Description>"UV Map 1"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>sonic2App.exe+16F1A10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1034</ID>
          <Description>"UV Map 2"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>sonic2App.exe+16F1A24</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="Chao Data" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" Description="Starting data" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18" Vartype="String" Bytesize="8" Description="Name" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="Byte" Bytesize="1" Description="Swim Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="33" Vartype="Byte" Bytesize="1" Description="Fly Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="34" Vartype="Byte" Bytesize="1" Description="Run Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="35" Vartype="Byte" Bytesize="1" Description="Power Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="36" Vartype="Byte" Bytesize="1" Description="Stamina Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="Byte" Bytesize="1" Description="Swim Level" DisplayMethod="Unsigned Integer"/>
        <Element Offset="49" Vartype="Byte" Bytesize="1" Description="Fly Level" DisplayMethod="Unsigned Integer"/>
        <Element Offset="50" Vartype="Byte" Bytesize="1" Description="Run Level" DisplayMethod="Unsigned Integer"/>
        <Element Offset="51" Vartype="Byte" Bytesize="1" Description="Power Level" DisplayMethod="Unsigned Integer"/>
        <Element Offset="52" Vartype="Byte" Bytesize="1" Description="Stamina Level" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="2 Bytes" Bytesize="2" Description="Swim Stat" DisplayMethod="Unsigned Integer"/>
        <Element Offset="58" Vartype="2 Bytes" Bytesize="2" Description="Fly Stat" DisplayMethod="Unsigned Integer"/>
        <Element Offset="60" Vartype="2 Bytes" Bytesize="2" Description="Run Stat" DisplayMethod="Unsigned Integer"/>
        <Element Offset="62" Vartype="2 Bytes" Bytesize="2" Description="Power Stat" DisplayMethod="Unsigned Integer"/>
        <Element Offset="64" Vartype="2 Bytes" Bytesize="2" Description="Stamina Stat" DisplayMethod="Unsigned Integer"/>
        <Element Offset="128" Vartype="Byte" Bytesize="1" Description="Chao Type" DisplayMethod="Unsigned Integer"/>
        <Element Offset="129" Vartype="Byte" Bytesize="1" Description="Chao Garden" DisplayMethod="Unsigned Integer"/>
        <Element Offset="168" Vartype="Float" Bytesize="4" Description="Morph 1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="172" Vartype="Float" Bytesize="4" Description="Morph 2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="176" Vartype="Float" Bytesize="4" Description="Light/Dark Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="192" Vartype="Float" Bytesize="4" Description="Cycle Age" DisplayMethod="Unsigned Integer"/>
        <Element Offset="209" Vartype="Byte" Bytesize="1" Description="EyeMod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="210" Vartype="Byte" Bytesize="1" Description="Mouth Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="211" Vartype="Byte" Bytesize="1" Description="Ball Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="213" Vartype="Byte" Bytesize="1" Description="Hat Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="214" Vartype="Byte" Bytesize="1" Description="No Feet" DisplayMethod="Unsigned Integer"/>
        <Element Offset="215" Vartype="Byte" Bytesize="1" Description="Badge" DisplayMethod="Unsigned Integer"/>
        <Element Offset="216" Vartype="2 Bytes" Bytesize="2" Description="Color Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="218" Vartype="Byte" Bytesize="1" Description="Shiny Color Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="221" Vartype="Byte" Bytesize="1" Description="Body Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="284" Vartype="Byte" Bytesize="1" Description="Arm Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="285" Vartype="Byte" Bytesize="1" Description="Ear Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="286" Vartype="Byte" Bytesize="1" Description="Forehead Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="287" Vartype="Byte" Bytesize="1" Description="Unknown Body Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="288" Vartype="Byte" Bytesize="1" Description="Feet Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="289" Vartype="Byte" Bytesize="1" Description="Tail Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="290" Vartype="Byte" Bytesize="1" Description="Wing Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="291" Vartype="Byte" Bytesize="1" Description="Unknown Body Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="302" Vartype="Byte" Bytesize="1" Description="Sadness" DisplayMethod="Unsigned Integer"/>
        <Element Offset="303" Vartype="Byte" Bytesize="1" Description="Frightened" DisplayMethod="Unsigned Integer"/>
        <Element Offset="305" Vartype="Byte" Bytesize="1" Description="Dizzy" DisplayMethod="Unsigned Integer"/>
        <Element Offset="364" Vartype="Byte" Bytesize="1" Description="Love/Hate Sonic" DisplayMethod="Signed Integer"/>
        <Element Offset="370" Vartype="Byte" Bytesize="1" Description="Love/Hate Shadow" DisplayMethod="Signed Integer"/>
        <Element Offset="376" Vartype="Byte" Bytesize="1" Description="Love/Hate Tails" DisplayMethod="Signed Integer"/>
        <Element Offset="382" Vartype="Byte" Bytesize="1" Description="Love/Hate Eggman" DisplayMethod="Signed Integer"/>
        <Element Offset="388" Vartype="Byte" Bytesize="1" Description="Love/Hate Knuckles" DisplayMethod="Signed Integer"/>
        <Element Offset="394" Vartype="Byte" Bytesize="1" Description="Love/Hate Rouge" DisplayMethod="Signed Integer"/>
        <Element Offset="2047" Vartype="4 Bytes" Bytesize="4" Description="End of chao" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
  <LuaScript>strings_add(getAutoAttachList(), "sonic2app.exe")
errorOnLookupFailure(false)

CurrentChao = nil
ChaoCount = '01DC0F80'
ChaoSlot = '01DC0FC8'
BMBought = 'sonic2App.exe+19BEDAC'
BMSlot1 = '01DBEDA0'
DarkA = 'sonic2App.exe+154701C'
DarkS = '01946FCC'
HeroA = '"sonic2App.exe"+1546F18+50'
HeroS = '"sonic2App.exe"+1546F18'
CurrentChao = nil
ListChanged = 0
CTypeTable = {1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25}
CColorTable ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,256,257,258,259,260,261,262,263,264,265,266,267,268,269}
CMarketTable1 = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,7,7,7,7,7,7,7}
CMarketTable2 = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,0,1,2,3,4,5,6}

function ListUpdater()
if getOpenedProcessID() == getForegroundProcess() then
   local Count = readInteger(getAddress(ChaoCount))
   if Count &gt; 0 and ListChanged ~= Count and readInteger(getAddress(ChaoSlot)) &gt; 0 then
      local items = listbox_getItems(Chao_ChaoList)
      strings_clear(items)
      for i=0,Count-1 do
         local chow = readInteger(getAddress(ChaoSlot)+(i*72))
         if readInteger(chow+18) &gt; 0 then
            strings_add(items,NameRead(readString(chow+18,7)))
         else
            strings_add(items,"Chao")
         end
      end
      ListChanged = Count
   elseif Count == 0 and ListChanged ~= Count then
      local items = listbox_getItems(Chao_ChaoList)
      strings_clear(items)
      strings_add(items,"None:Don't Click")
      ListChanged = Count
   end
end
end

function NameRead(String)
  local StrOutput = ""
     for i=0,6 do
       if String:byte(i+1) ~= nil then
          StrOutput =  StrOutput .. string.char(String:byte(i+1)+32)
       end
     end
  return StrOutput
end


function NameWrite(String)
  local StrOutput = ""
     for i=0,6 do
       if String:byte(i+1) ~= nil then
          StrOutput =  StrOutput .. string.char(String:byte(i+1)-32)
       end
     end
  return StrOutput
end

function StrNameChange(sender)
   local String = control_getCaption(sender)
   local StringOut = NameWrite(String)
   local ChaoName = CurrentChao +18
   writeString(ChaoName,StringOut)
   for i=0,6-StringOut:len() do
     writeBytes(ChaoName+StringOut:len()+i,0)
   end
end

function ChaoListDblClick(sender)
   local Index = listbox_getItemIndex(sender)
   CurrentChao = readInteger(getAddress(ChaoSlot)+(Index*72))
   local StatLevels = readBytes(CurrentChao+48,5,true)
   control_setCaption(Chao_SwimLvl,StatLevels[1])
   control_setCaption(Chao_FlyLvl,StatLevels[2])
   control_setCaption(Chao_RunLvl,StatLevels[3])
   control_setCaption(Chao_PowerLvl,StatLevels[4])
   control_setCaption(Chao_StaminaLvl,StatLevels[5])
   local StatValue = readBytes(CurrentChao+56,5,true)
   control_setCaption(Chao_SwimStat,StatValue[1])
   control_setCaption(Chao_FlyStat,StatValue[2])
   control_setCaption(Chao_RunStat,StatValue[3])
   control_setCaption(Chao_PowerStat,StatValue[4])
   control_setCaption(Chao_StaminaStat,StatValue[5])
   local Name = readString(CurrentChao+18,7)
   control_setCaption(Chao_StrName,NameRead(Name))
   trackbar_setPosition(Chao_CSad,readBytes(CurrentChao+302,1))
   trackbar_setPosition(Chao_CDiz,readBytes(CurrentChao+305,1))
   trackbar_setPosition(Chao_CFright,readBytes(CurrentChao+303,1))
   trackbar_setPosition(Chao_CLifeCycle,round(readFloat(CurrentChao+192),1)*10)
   trackbar_setPosition(Chao_DrkLght,round(readFloat(CurrentChao+176),1)*10)
   checkbox_setState(Chao_CBall,readBytes(CurrentChao+211,1))
   checkbox_setState(Chao_CNoLegs,readBytes(CurrentChao+214,1))
   for k,v in pairs(CTypeTable) do
      if v == readBytes(CurrentChao+128,1) then
         combobox_setItemIndex(Chao_CType,k-1)
      end
   end
   local cval = readBytes(CurrentChao+216,2,true)
   for k,v in pairs(CColorTable) do
      if v == (cval[1] + (cval[2]*255+1)) then
         combobox_setItemIndex(Chao_CColor,k-1)
      end
   end
   combobox_setItemIndex(Chao_CHat,readBytes(CurrentChao+213,1))
   combobox_setItemIndex(Chao_CMouth,readBytes(CurrentChao+210,1))
   combobox_setItemIndex(Chao_CEyes,readBytes(CurrentChao+209,1))
   --combobox_setItemIndex(Chao_CArms,readBytes(CurrentChao+284,1))
   if readBytes(CurrentChao+284,1) == 255 then combobox_setItemIndex(Chao_CArms,21) else combobox_setItemIndex(Chao_CArms,readBytes(CurrentChao+284,1)) end
   if readBytes(CurrentChao+285,1) == 255 then combobox_setItemIndex(Chao_CEars,21) else combobox_setItemIndex(Chao_CEars,readBytes(CurrentChao+285,1)) end
   if readBytes(CurrentChao+286,1) == 255 then combobox_setItemIndex(Chao_CForehead,21) else combobox_setItemIndex(Chao_CForehead,readBytes(CurrentChao+286,1)) end
   if readBytes(CurrentChao+288,1) == 255 then combobox_setItemIndex(Chao_CFeet,21) else combobox_setItemIndex(Chao_CFeet,readBytes(CurrentChao+288,1)) end
   if readBytes(CurrentChao+289,1) == 255 then combobox_setItemIndex(Chao_CTail,21) else combobox_setItemIndex(Chao_CTail,readBytes(CurrentChao+289,1)) end
   if readBytes(CurrentChao+290,1) == 255 then combobox_setItemIndex(Chao_CWings,21) else combobox_setItemIndex(Chao_CWings,readBytes(CurrentChao+290,1)) end
   combobox_setItemIndex(Chao_CBadge,readBytes(CurrentChao+215,1))
   combobox_setItemIndex(Chao_CGarden,readBytes(CurrentChao+129,1))
   combobox_setItemIndex(Chao_CShiny,readBytes(CurrentChao+218,1))
end

function CSadChange(sender)
   writeBytes(CurrentChao+302,trackbar_getPosition(sender))
end

function CDizChange(sender)
   writeBytes(CurrentChao+305,trackbar_getPosition(sender))
end

function CFrightChange(sender)
   writeBytes(CurrentChao+303,trackbar_getPosition(sender))
end

function round(num, idp)
  if idp and idp&gt;0 then
    local mult = 10^idp
    return math.floor(num * mult + 0.5) / mult
  end
  return math.floor(num + 0.5)
end

function CLifeCycleChange(sender)
   writeFloat(CurrentChao+192,trackbar_getPosition(sender)*0.10)
end

function DrkLghtChange(sender)
   writeFloat(CurrentChao+176,trackbar_getPosition(sender)*0.10)
end

function CBallChange(sender)
   writeBytes(CurrentChao+211,checkbox_getState(sender))
end

function CNoLegsChange(sender)
   writeBytes(CurrentChao+214,checkbox_getState(sender))
end

function CTypeChange(sender)
   local Tindex = combobox_getItemIndex(sender)
   writeBytes(CurrentChao+128,CTypeTable[Tindex+1])
end


if PTimer~=nil then
  timer_setEnabled(PTimer, false)
  object_destroy(PTimer);
  PTimer = nil;
end

PTimer = createTimer(nil)
timer_onTimer(PTimer, ListUpdater)
timer_setInterval(PTimer,100)
timer_setEnabled(PTimer, true)

function SwimLvlChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 100 then
      writeBytes(CurrentChao+48,math.floor(tonumber(String)))
   end
end

function FlyLvlChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 100 then
      writeBytes(CurrentChao+49,math.floor(tonumber(String)))
   end
end

function RunLvlChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 100 then
      writeBytes(CurrentChao+50,math.floor(tonumber(String)))
   end
end

function PowerLvlChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 100 then
      writeBytes(CurrentChao+51,math.floor(tonumber(String)))
   end
end

function StaminaLvlChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 100 then
      writeBytes(CurrentChao+52,math.floor(tonumber(String)))
   end
end

function SwimStatChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 10000 then
      writeBytes(CurrentChao+56,math.floor(tonumber(String)),math.floor(tonumber(String)/255))
   end
end

function FlyStatChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 10000 then
      writeBytes(CurrentChao+58,math.floor(tonumber(String)),math.floor(tonumber(String)/255))
   end
end

function RunStatChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 10000 then
      writeBytes(CurrentChao+60,math.floor(tonumber(String)),math.floor(tonumber(String)/255))
   end
end

function PowerStatChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 10000 then
      writeBytes(CurrentChao+62,math.floor(tonumber(String)),math.floor(tonumber(String)/255))
   end
end

function StaminaStatChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 10000 then
      writeBytes(CurrentChao+64,math.floor(tonumber(String)),math.floor(tonumber(String)/255))
   end
end



function CColorChange(sender)
   local Tindex = combobox_getItemIndex(sender)
   writeBytes(CurrentChao+216,CColorTable[Tindex+1],math.floor(CColorTable[Tindex+1]/255))
end

function CHatChange(sender)
   writeBytes(CurrentChao+213,combobox_getItemIndex(sender))
end

function CEyesChange(sender)
   writeBytes(CurrentChao+209,combobox_getItemIndex(sender))
end

function CMouthChange(sender)
   writeBytes(CurrentChao+210,combobox_getItemIndex(sender))
end

function CArmsChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+284,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+284,255) end
end

function CEarsChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+285,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+285,255) end
end

function CForeheadChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+286,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+286,255) end
end

function CFeetChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+288,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+288,255) end
end

function CTailChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+289,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+289,255) end
end

function CWingsChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+290,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+290,255) end
end

function CBadgeChange(sender)
   writeBytes(CurrentChao+215,combobox_getItemIndex(sender))
end

function BtnStatsClick(sender)
   --control_setEnabled(Chao_CStatPanel,true)
   control_setVisible(Chao_CStatPanel,true)
   control_setVisible(Chao_CSpawner,false)
end

function BtnSpawnerClick(sender)
   --control_setEnabled(Chao_CStatPanel,false)
   control_setVisible(Chao_CStatPanel,false)
   control_setVisible(Chao_CSpawner,true)
end

function CGardenChange(sender)
   writeBytes(CurrentChao+129,combobox_getItemIndex(sender))
end


function CShinyChange(sender)
   writeBytes(CurrentChao+218,combobox_getItemIndex(sender))
end

function BM1Change(sender)
   local Tindex = combobox_getItemIndex(sender)
   local BMAddr = getAddress(BMSlot1)
   writeBytes(BMAddr,CMarketTable1[Tindex+1],math.floor(CMarketTable2[Tindex+1]))
end

function BM2Change(sender)
   local Tindex = combobox_getItemIndex(sender)
   local BMAddr = getAddress(BMSlot1)+2
   writeBytes(BMAddr,CMarketTable1[Tindex+1],math.floor(CMarketTable2[Tindex+1]))
end

function BM3Change(sender)
   local Tindex = combobox_getItemIndex(sender)
   local BMAddr = getAddress(BMSlot1)+4
   writeBytes(BMAddr,CMarketTable1[Tindex+1],math.floor(CMarketTable2[Tindex+1]))
end

function BM4Change(sender)
   local Tindex = combobox_getItemIndex(sender)
   local BMAddr = getAddress(BMSlot1)+6
   writeBytes(BMAddr,CMarketTable1[Tindex+1],math.floor(CMarketTable2[Tindex+1]))
end

function BM5Change(sender)
   local Tindex = combobox_getItemIndex(sender)
   local BMAddr = getAddress(BMSlot1)+8
   writeBytes(BMAddr,CMarketTable1[Tindex+1],math.floor(CMarketTable2[Tindex+1]))
end

function SldBlkMrktChange(sender)
   writeBytes(getAddress(BMBought),trackbar_getPosition(sender))
end

function SldAnimChange(sender)
   writeBytes(getAddress(HeroA),trackbar_getPosition(sender))
   writeBytes(getAddress(DarkA),trackbar_getPosition(sender))
end

function AS1Change(sender)
   writeBytes(getAddress(HeroS),combobox_getItemIndex(sender))
   writeBytes(getAddress(DarkS),combobox_getItemIndex(sender))
end

function AS2Change(sender)
   writeBytes(getAddress(HeroS)+8,combobox_getItemIndex(sender))
   writeBytes(getAddress(DarkS)+8,combobox_getItemIndex(sender))
end

function AS3Change(sender)
   writeBytes(getAddress(HeroS)+16,combobox_getItemIndex(sender))
   writeBytes(getAddress(DarkS)+16,combobox_getItemIndex(sender))
end

function AS4Change(sender)
   writeBytes(getAddress(HeroS)+24,combobox_getItemIndex(sender))
   writeBytes(getAddress(DarkS)+24,combobox_getItemIndex(sender))
end

function AS5Change(sender)
   writeBytes(getAddress(HeroS)+32,combobox_getItemIndex(sender))
   writeBytes(getAddress(DarkS)+32,combobox_getItemIndex(sender))
end

function AS6Change(sender)
   writeBytes(getAddress(HeroS)+40,combobox_getItemIndex(sender))
   writeBytes(getAddress(DarkS)+40,combobox_getItemIndex(sender))
end

function AS7Change(sender)
   writeBytes(getAddress(HeroS)+48,combobox_getItemIndex(sender))
   writeBytes(getAddress(DarkS)+48,combobox_getItemIndex(sender))
end

function AS8Change(sender)
   writeBytes(getAddress(HeroS)+56,combobox_getItemIndex(sender))
   writeBytes(getAddress(DarkS)+56,combobox_getItemIndex(sender))
end

function AS9Change(sender)
   writeBytes(getAddress(HeroS)+64,combobox_getItemIndex(sender))
   writeBytes(getAddress(DarkS)+64,combobox_getItemIndex(sender))
end

function AS10Change(sender)
   writeBytes(getAddress(HeroS)+72,combobox_getItemIndex(sender))
   writeBytes(getAddress(DarkS)+72,combobox_getItemIndex(sender))
end

</LuaScript>
</CheatTable>
