<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>4</ID>
      <Description>"SCRIPT: Find Resources"</Description>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DungeonoftheEndless.exe
  Version:
  Date   : 2013-12-14
  Author : jgoemat

  This is where dust is loaded every frame.

  Resources Structure:
    0104: Food
    0108: Industry
    010C: Dust

  Globals:
    0000: pResources - structure above
}

globalalloc(globals,$100000)

[ENABLE]

aobscan(INJECT_DUST,D9 80 0C 01 00 00 D9 5D FC D9 45 FC DD 5D F0 83 EC 08) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [globals],eax
  fld dword ptr [eax+0000010C]
  jmp return

INJECT_DUST:
  jmp code
  nop
return:
registersymbol(INJECT_DUST)

[DISABLE]

INJECT_DUST:
  db D9 80 0C 01 00 00

unregistersymbol(INJECT_DUST)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2626CB61

2626CB4E: DEC9            - fmulp st(1),st(0)
2626CB50: DEC1            - faddp
2626CB52: C9              - leave
2626CB53: C3              - ret
2626CB54: 00 00           - add [eax],al
2626CB56: 00 00           - add [eax],al
2626CB58: 55              - push ebp
2626CB59: 8B EC           - mov ebp,esp
2626CB5B: 83 EC 18        - sub esp,18
2626CB5E: 8B 45 08        - mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
2626CB61: D9 80 0C010000  - fld dword ptr [eax+0000010C]
// ---------- DONE INJECTING  ----------
2626CB67: D9 5D FC        - fstp dword ptr [ebp-04]
2626CB6A: D9 45 FC        - fld dword ptr [ebp-04]
2626CB6D: DD 5D F0        - fstp qword ptr [ebp-10]
2626CB70: 83 EC 08        - sub esp,08
2626CB73: 68 2044D413     - push 13D44420
2626CB78: 50              - push eax
2626CB79: E8 02A1FEFF     - call 26256C80
2626CB7E: 83 C4 10        - add esp,10
2626CB81: DD 45 F0        - fld qword ptr [ebp-10]
2626CB84: D9C9            - fxch st(1)
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Industry"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>globals</Address>
          <Offsets>
            <Offset>108</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Food"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>globals</Address>
          <Offsets>
            <Offset>104</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Dust"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>globals</Address>
          <Offsets>
            <Offset>10C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"SCRIPT: Health"</Description>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DungeonoftheEndless.exe
  Version: Alpha 0.1.1
  Date   : 2013-12-15
  Author : jgoemat

  Here is where updated health is stored when damage is taken.

  Globals:
    0100: fGodMode
    0104: fOneHitKill
}

globalalloc(globals,$100000)

[ENABLE]

aobscan(INJECT_HPUPDATE,D9 5F 44 D9 47 44) // should be unique
alloc(newmem,$1000)

label(code)
label(enemy)
label(notsure)
label(skip)
label(return)

newmem:

// not used to FP compares, hope I'm doing it right.
// here's some links I used:
//     http://courses.engr.illinois.edu/ece390/archive/spr2002/books/labmanual/inst-ref-fucom.html
//     http://www.website.masmforum.com/tutorials/fptute/fpuchap7.htm

code:
  cmp dword ptr [edi+0010],0
  jne enemy
  cmp dword ptr [edi+0024],0
  je notsure // possible enemy
  cmp dword ptr [edi+0028],0
  je notsure // possible enemy
  cmp dword ptr [edi+002C],0
  je notsure // possible enemy
  cmp dword ptr [edi+0034],0
  je notsure // possible enemy
  // very sure it's a friend, check for god mode and load existing health to store
  cmp dword ptr [globals+100],1
  jne skip

  // ok, see if new value is higher (healing, level-up) and allow it
  push eax // will over-write with FPU comparison status bits
  fcom dword ptr [edi+44]
  fnstsw ax
  fwait
  sahf
  pop eax
  ja skip // was increasing, allow new value

  fstp st(0) // discard new (lower) value
  fld dword ptr [edi+44] // load existing value
  jmp skip // continue and store

enemy:
  cmp dword ptr [edi+0024],0
  jne notsure // possible friend
  cmp dword ptr [edi+0028],0
  jne notsure // possible friend
  cmp dword ptr [edi+002C],0
  jne notsure // possible friend
  cmp dword ptr [edi+0034],0
  jne notsure // possible friend
  // very sure it's an enemy, check for OHK and load zero
  cmp dword ptr [globals+104],1
  jne skip
  fstp st(0)
  fldz
  jmp skip

notsure:
  inc dword ptr [globals+108] // increment bad counter

skip:
  fstp dword ptr [edi+44]
  fld dword ptr [edi+44]
  jmp return

INJECT_HPUPDATE:
  jmp code
  nop
return:
registersymbol(INJECT_HPUPDATE)

[DISABLE]

INJECT_HPUPDATE:
  db D9 5F 44 D9 47 44

unregistersymbol(INJECT_HPUPDATE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1EF243E9

1EF243CB: 83 EC 04    - sub esp,04
1EF243CE: D9 1C 24    - fstp dword ptr [esp]
1EF243D1: 50          - push eax
1EF243D2: 39 00       - cmp [eax],eax
1EF243D4: E8 CF860300 - call 1EF5CAA8
1EF243D9: 83 C4 10    - add esp,10
1EF243DC: E9 65000000 - jmp 1EF24446
1EF243E1: D9 47 44    - fld dword ptr [edi+44]
1EF243E4: D9 45 0C    - fld dword ptr [ebp+0C]
1EF243E7: DEC1        - faddp
// ---------- INJECTING HERE ----------
1EF243E9: D9 5F 44    - fstp dword ptr [edi+44]
1EF243EC: D9 47 44    - fld dword ptr [edi+44]
// ---------- DONE INJECTING  ----------
1EF243EF: DD 5D F0    - fstp qword ptr [ebp-10]
1EF243F2: 83 EC 0C    - sub esp,0C
1EF243F5: 57          - push edi
1EF243F6: E8 8DCFFFFF - call 1EF21388
1EF243FB: 83 C4 10    - add esp,10
1EF243FE: DD 45 F0    - fld qword ptr [ebp-10]
1EF24401: D9C9        - fxch st(1)
1EF24403: DFF1        - fcomip st(0),st(1)
1EF24405: DDD8        - fstp st(0)
1EF24407: 7A 1F       - jp 1EF24428
}

{
* Current HP is float at offset 0x44

--------------------------------------------------------------------------------
- Diffs
0010: NULL for me, pointer for monsters
001C: SAME AS 0024 FOR ME, BUT VALID POINTER FOR ENEMIES
0024: PTR for me, NULL for enemies (at 00C8 is pointer back to this struct, but might be chance since enemy structs at 1C seem smaller, based on creature type?)
0028: PTR for me, NULL for enemies
002C: PTR for me, NULL for enemies
0034: PTR for me, NULL for enemies
0038: 225.0 for me, 150.0 for enemies (43610000 vs 43160000)

--------------------------------------------------------------------------------
- Other
0048: Update time?  Last hit time? (float)


--------------------------------------------------------------------------------
- Same exact
0000: SAME ptr
0020: SAME ptr
003C: SAME 0.10 (3DCCCCCD)
004C: SAME NULL
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Cheat: God Mode"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>globalalloc(globals,$100000)

[ENABLE]
globals+100:
  dd 1

[DISABLE]
globals+100:
  dd 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Cheat: One Hit Kill"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>globalalloc(globals,$100000)

[ENABLE]
globals+104:
  dd 1

[DISABLE]
globals+104:
  dd 0
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>globals</Name>
      <Address>0AA40000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_DUST</Name>
      <Address> 1EF325F9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT_HPUPDATE</Name>
      <Address> 1EF243E9</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Look in the script for info on resources.
Attributes of characters floats that are easy to find while levelling them,
but the code is generic and each is stored at offset 0x18 in its own structure.
The code that accesses them accesses a lot of other values also.  (Max?) Health
seems to be at an offset 44 into another structure but called for enemies and
possibly objects or other things too.
</Comments>
</CheatTable>
