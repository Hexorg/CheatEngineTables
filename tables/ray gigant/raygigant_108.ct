<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(healthRead1AOB,RayGigant.exe,66 8B 41 10 C3 CC)
registersymbol(healthRead1AOB)

label(pParty1)
registersymbol(pParty1)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp ebx,3
jge originalcode
mov [pParty1+ebx*4],ecx

originalcode:
mov ax,[ecx+10]
ret 

exit:
jmp returnhere

///
pParty1:
///

healthRead1AOB: //"RayGigant.exe"+3F070:
jmp newmem
returnhere:

///*************************************///

aobscanmodule(resourcesBaseReadAOB2,RayGigant.exe,75 07 0F B7 05 ** ** ** ** 0F BE 56 15)
registersymbol(resourcesBaseReadAOB2)

label(pResourcesBase)
registersymbol(pResourcesBase)

[resourcesBaseReadAOB2+5]: //"RayGigant.exe"+CA484:
pResourcesBase:

///*************************************///

aobscanmodule(APRead1AOB,RayGigant.exe,0F B7 0D ** ** ** ** BE)
registersymbol(APRead1AOB)

label(pAP)
registersymbol(pAP)

[APRead1AOB+3]: //"RayGigant.exe"+405BF:
pAP:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthRead1AOB: //"RayGigant.exe"+3F070:
db 66 8B 41 10 C3
//Alt: mov ax,[ecx+10]
//Alt: ret

unregistersymbol(pParty1)

///*************************************///


unregistersymbol(pResourcesBase)

///*************************************///


unregistersymbol(pAP)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>41</ID>
          <Description>"[Scripts]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>12</ID>
              <Description>"Inf. HP"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(healthWrite1AOB,RayGigant.exe,66 89 4E 10 66 8B C1 5E 5D C2 04 00)
registersymbol(healthWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [pParty1],0
je originalcode
xor ebp,ebp
@@:
cmp [pParty1+ebp*4],esi
je @f
inc ebp
cmp ebp,2
jle @b
//is not party
jmp originalcode

@@:
//is party
cmp [esi+10],cx
jle originalcode
mov cx,[esi+10]

originalcode:
mov [esi+10],cx
mov ax,cx

exit:
jmp returnhere

///

healthWrite1AOB: //"RayGigant.exe"+3EFC6:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthWrite1AOB: //"RayGigant.exe"+3EFC6:
db 66 89 4E 10 66 8B C1
//Alt: mov [esi+10],cx
//Alt: mov ax,cx
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"Ignore AP"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(APChkOnSelectActionAOB,RayGigant.exe,7F EE 5F 5E B0 01)
registersymbol(APChkOnSelectActionAOB)

APChkOnSelectActionAOB: //"RayGigant.exe"+58C4:
db 90 90
//Alt: nop
//Alt: nop

///**************************************///

aobscanmodule(APChkForRepeatAOB,RayGigant.exe,7F 18 66 89 79 02)
registersymbol(APChkForRepeatAOB)

APChkForRepeatAOB: //"RayGigant.exe"+10685C:
db 90 90
//Alt: nop
//Alt: nop




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
APChkOnSelectActionAOB: //"RayGigant.exe"+58C4:
db 7F EE
//Alt: jg APChkOnSelectActionAOB-10 //RayGigant.exe+58B4

///**************************************///

APChkForRepeatAOB: //"RayGigant.exe"+10685C:
db 7F 18
//Alt: jg APChkForRepeatAOB+1a //RayGigant.exe+106876
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>47</ID>
              <Description>"Full SBM"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(SBMRead1AOB,RayGigant.exe,66 89 45 FC 8B 4D FC)
registersymbol(SBMRead1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ax,64
cmp [pAP],0
je originalcode
mov [pAP+2],ax

originalcode:
mov [ebp-04],ax
mov ecx,[ebp-04]

exit:
jmp returnhere

///

SBMRead1AOB: //"RayGigant.exe"+463D3:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
SBMRead1AOB: //"RayGigant.exe"+463D3:
db 66 89 45 FC 8B 4D FC
//Alt: mov [ebp-04],ax
//Alt: mov ecx,[ebp-04]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"Ignore Resources"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfNotEnoughMSFOnUseAOB,RayGigant.exe,84 C0 74 41 68 ** ** ** ** E8)
registersymbol(cJmpIfNotEnoughMSFOnUseAOB)

cJmpIfNotEnoughMSFOnUseAOB+2: //"RayGigant.exe"+FF69C:
db 90 90
//Alt: nop
//Alt: nop

///*****************************************************///

aobscanmodule(cJmpIfEnoughBreedOnUseAOB,RayGigant.exe,66 85 F6 75 20 68)
registersymbol(cJmpIfEnoughBreedOnUseAOB)

cJmpIfEnoughBreedOnUseAOB+3: //"RayGigant.exe"+FF3F2:
db EB
//Alt: jmp

///*****************************************************///

aobscanmodule(cJmpIfEnoughAlterOnUseAOB,RayGigant.exe,66 85 FF 75 20 68)
registersymbol(cJmpIfEnoughAlterOnUseAOB)

cJmpIfEnoughAlterOnUseAOB+3: //"RayGigant.exe"+FF36C:
db EB
//Alt: jmp

///*****************************************************///

aobscanmodule(cJmpIfEnoughReverseOnUseAOB,RayGigant.exe,66 39 44 24 10 77 20 68)
registersymbol(cJmpIfEnoughReverseOnUseAOB)

cJmpIfEnoughReverseOnUseAOB+5: //"RayGigant.exe"+FF2E5:
db EB
//Alt: jmp

///*****************************************************///

aobscanmodule(materiaWrite1AOB,RayGigant.exe,0F B7 44 24 0C A3)
registersymbol(materiaWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp word ptr [esp+c],0
jge originalcode
xor ax,ax
mov [esp+c],ax

originalcode:
movzx eax,word ptr [esp+0C]

exit:
jmp returnhere

///

materiaWrite1AOB: //"RayGigant.exe"+CAAA1:
jmp newmem
returnhere:

///*****************************************************///

aobscanmodule(forceWrite1AOB,RayGigant.exe,66 8B 7C 24 0C B9 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 3B)
registersymbol(forceWrite1AOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+c],ax
jge originalcode2
mov ax,[esp+c]

originalcode2:
mov di,[esp+0C]

exit2:
jmp returnhere2

///

forceWrite1AOB: //"RayGigant.exe"+CA89C:
jmp newmem2
returnhere2:

///*****************************************************///

aobscanmodule(seedWrite1AOB,RayGigant.exe,66 8B 7C 24 0C B9 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** C6)
registersymbol(seedWrite1AOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+c],ax
jge originalcode6
mov ax,[esp+c]

originalcode6:
mov di,[esp+0C]

exit6:
jmp returnhere6

///

seedWrite1AOB: //"RayGigant.exe"+CA756:
jmp newmem6
returnhere6:

///*****************************************************///

aobscanmodule(breedWrite1AOB,RayGigant.exe,0F B7 45 08 89 86 2C 02 00 00)
registersymbol(breedWrite1AOB)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
cmp word ptr [ebp+8],0
jge originalcode11
xor ax,ax
mov [ebp+8],ax

originalcode11:
movzx eax,word ptr [ebp+08]
mov [esi+0000022C],eax

exit11:
jmp returnhere11

///

breedWrite1AOB: //"RayGigant.exe"+4E384:
jmp newmem11
nop
nop
nop
nop
nop
returnhere11:

///*****************************************************///

aobscanmodule(alterChkUpperLimitOnWriteAOB,RayGigant.exe,66 3B F8 B9 ** ** ** ** 0F 47 F8)
registersymbol(alterChkUpperLimitOnWriteAOB)

alloc(newmem17,2048)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
cmp di,0
jge originalcode17
xor di,di

originalcode17:
cmp di,ax
mov ecx,00000006

exit17:
jmp returnhere17

///

alterChkUpperLimitOnWriteAOB: //"RayGigant.exe"+100E14:
jmp newmem17
nop
nop
nop
returnhere17:

///*****************************************************///

aobscanmodule(reverseChkUpperLimitOnWriteAOB,RayGigant.exe,66 3B F0 B9 ** ** ** ** 0F 47 F0)
registersymbol(reverseChkUpperLimitOnWriteAOB)

alloc(newmem24,2048)
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
cmp si,0
jge originalcode24
xor si,si

originalcode24:
cmp si,ax
mov ecx,00000006

exit24:
jmp returnhere24

///

reverseChkUpperLimitOnWriteAOB: //"RayGigant.exe"+1014D0:
jmp newmem24
nop
nop
nop
returnhere24:

///*****************************************************///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfNotEnoughMSFOnUseAOB+2: //"RayGigant.exe"+FF69C:
db 74 41
//Alt: je RayGigant.exe+FF6DF

///*****************************************************///

cJmpIfEnoughBreedOnUseAOB+3: //"RayGigant.exe"+FF3F2:
db 75
//Alt: jne

///*****************************************************///

cJmpIfEnoughAlterOnUseAOB+3: //"RayGigant.exe"+FF36C:
db 75
//Alt: jne

///*****************************************************///

cJmpIfEnoughReverseOnUseAOB+5: //"RayGigant.exe"+FF2E5:
db 77
//Alt: ja

///*****************************************************///

dealloc(newmem)
materiaWrite1AOB: //"RayGigant.exe"+CAAA1:
db 0F B7 44 24 0C
//Alt: movzx eax,word ptr [esp+0C]

///*****************************************************///

dealloc(newmem2)
forceWrite1AOB: //"RayGigant.exe"+CA89C:
db 66 8B 7C 24 0C
//Alt: mov di,[esp+0C]

///*****************************************************///

dealloc(newmem6)
seedWrite1AOB: //"RayGigant.exe"+CA756:
db 66 8B 7C 24 0C
//Alt: mov di,[esp+0C]

///*****************************************************///

dealloc(newmem11)
breedWrite1AOB: //"RayGigant.exe"+4E384:
db 0F B7 45 08 89 86 2C 02 00 00
//Alt: movzx eax,word ptr [ebp+08]
//Alt: mov [esi+0000022C],eax

///*****************************************************///

dealloc(newmem17)
alterChkUpperLimitOnWriteAOB: //"RayGigant.exe"+100E14:
db 66 3B F8 B9 06 00 00 00
//Alt: cmp di,ax
//Alt: mov ecx,00000006

///*****************************************************///

dealloc(newmem24)
reverseChkUpperLimitOnWriteAOB: //"RayGigant.exe"+1014D0:
db 66 3B F0 B9 06 00 00 00
//Alt: cmp si,ax
//Alt: mov ecx,00000006

///*****************************************************///
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"[Pointers]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>36</ID>
              <Description>"AP"</Description>
              <LastState Value="60" RealAddress="014E6ED0"/>
              <VariableType>Byte</VariableType>
              <Address>pAP</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>42</ID>
              <Description>"SBM"</Description>
              <LastState Value="100" RealAddress="014E6ED2"/>
              <VariableType>Byte</VariableType>
              <Address>pAP+2</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>8</ID>
              <Description>"[HP]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="0124001A"/>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>pParty1</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>11</ID>
                  <Description>"Slot 3"</Description>
                  <LastState Value="168" RealAddress="014E85C4"/>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+8</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>10</ID>
                  <Description>"Slot 2"</Description>
                  <LastState Value="143" RealAddress="014E8138"/>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+4</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>9</ID>
                  <Description>"Slot 1"</Description>
                  <LastState Value="129" RealAddress="014E7394"/>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+0</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"[Resources]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="014E6ED4"/>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>pResourcesBase</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"Materia"</Description>
                  <LastState Value="31" RealAddress="014E6ED4"/>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>18</ID>
                  <Description>"Force"</Description>
                  <LastState Value="4" RealAddress="014E6ED8"/>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"Seed"</Description>
                  <LastState Value="3" RealAddress="014E6EDC"/>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>20</ID>
                  <Description>"Breed"</Description>
                  <LastState Value="16" RealAddress="014E6EE0"/>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>21</ID>
                  <Description>"Alter"</Description>
                  <LastState Value="0" RealAddress="014E6EE4"/>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>22</ID>
                  <Description>"Reverse"</Description>
                  <LastState Value="0" RealAddress="014E6EE8"/>
                  <VariableType>2 Bytes</VariableType>
                  <Address>+14</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>011C792C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="014D77F0"/>
          <VariableType>2 Bytes</VariableType>
          <Address>014D77F0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="014D77F2"/>
          <VariableType>2 Bytes</VariableType>
          <Address>014D77F2</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"No description"</Description>
          <LastState Value="129" RealAddress="014E77F4"/>
          <VariableType>2 Bytes</VariableType>
          <Address>RayGigant.exe+2777F4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="014D77F8"/>
          <VariableType>2 Bytes</VariableType>
          <Address>014D77F8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="014D7394"/>
          <VariableType>2 Bytes</VariableType>
          <Address>014D7394</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//cmp word ptr [edi],ffff
//jne originalcode
cmp [edi+2],cx
jge originalcode
mov cx,[edi+2]

originalcode:
movzx eax,word ptr [edi+02]
cmp ax,cx

exit:
jmp returnhere

///

"RayGigant.exe"+3D956:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"RayGigant.exe"+3D956:
db 0F B7 47 02 66 3B C1
//Alt: movzx eax,word ptr [edi+02]
//Alt: cmp ax,cx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"materia force seed"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfNotEnoughMSFOnUseAOB,RayGigant.exe,84 C0 74 41 68 ** ** ** ** E8)
registersymbol(cJmpIfNotEnoughMSFOnUseAOB)

cJmpIfNotEnoughMSFOnUseAOB+2: //"RayGigant.exe"+FF69C:
db 90 90
//Alt: nop
//Alt: nop


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfNotEnoughMSFOnUseAOB+2: //"RayGigant.exe"+FF69C:
db 74 41
//Alt: je RayGigant.exe+FF6DF
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"breed"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfEnoughBreedOnUseAOB,RayGigant.exe,66 85 F6 75 20 68)
registersymbol(cJmpIfEnoughBreedOnUseAOB)

cJmpIfEnoughBreedOnUseAOB+3: //"RayGigant.exe"+FF3F2:
db EB
//Alt: jmp


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfEnoughBreedOnUseAOB+3: //"RayGigant.exe"+FF3F2:
db 75
//Alt: jne
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"alter"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfEnoughAlterOnUseAOB,RayGigant.exe,66 85 FF 75 20 68)
registersymbol(cJmpIfEnoughAlterOnUseAOB)

cJmpIfEnoughAlterOnUseAOB+3: //"RayGigant.exe"+FF36C:
db EB
//Alt: jmp


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfEnoughAlterOnUseAOB+3: //"RayGigant.exe"+FF36C:
db 75
//Alt: jne
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"reverse"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfEnoughReverseOnUseAOB,RayGigant.exe,66 39 44 24 10 77 20 68)
registersymbol(cJmpIfEnoughReverseOnUseAOB)

cJmpIfEnoughReverseOnUseAOB+5: //"RayGigant.exe"+FF2E5:
db EB
//Alt: jmp


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfEnoughReverseOnUseAOB+5: //"RayGigant.exe"+FF2E5:
db 77
//Alt: ja
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"materia w"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(materiaWrite1AOB,RayGigant.exe,0F B7 44 24 0C A3)
registersymbol(materiaWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp word ptr [esp+c],0
jge originalcode
xor ax,ax
mov [esp+c],ax

originalcode:
movzx eax,word ptr [esp+0C]

exit:
jmp returnhere

///

materiaWrite1AOB: //"RayGigant.exe"+CAAA1:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
materiaWrite1AOB: //"RayGigant.exe"+CAAA1:
db 0F B7 44 24 0C
//Alt: movzx eax,word ptr [esp+0C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"force w"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(forceWrite1AOB,RayGigant.exe,66 8B 7C 24 0C B9 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 3B)
registersymbol(forceWrite1AOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+c],ax
jge originalcode2
mov ax,[esp+c]

originalcode2:
mov di,[esp+0C]

exit2:
jmp returnhere2

///

forceWrite1AOB: //"RayGigant.exe"+CA89C:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
forceWrite1AOB: //"RayGigant.exe"+CA89C:
db 66 8B 7C 24 0C
//Alt: mov di,[esp+0C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"seed w"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(seedWrite1AOB,RayGigant.exe,66 8B 7C 24 0C B9 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** C6)
registersymbol(seedWrite1AOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+c],ax
jge originalcode6
mov ax,[esp+c]

originalcode6:
mov di,[esp+0C]

exit6:
jmp returnhere6

///

seedWrite1AOB: //"RayGigant.exe"+CA756:
jmp newmem6
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
seedWrite1AOB: //"RayGigant.exe"+CA756:
db 66 8B 7C 24 0C
//Alt: mov di,[esp+0C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"breed w"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(breedWrite1AOB,RayGigant.exe,0F B7 45 08 89 86 2C 02 00 00)
registersymbol(breedWrite1AOB)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
cmp word ptr [ebp+8],0
jge originalcode11
xor ax,ax
mov [ebp+8],ax

originalcode11:
movzx eax,word ptr [ebp+08]
mov [esi+0000022C],eax

exit11:
jmp returnhere11

///

breedWrite1AOB: //"RayGigant.exe"+4E384:
jmp newmem11
nop
nop
nop
nop
nop
returnhere11:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
breedWrite1AOB: //"RayGigant.exe"+4E384:
db 0F B7 45 08 89 86 2C 02 00 00
//Alt: movzx eax,word ptr [ebp+08]
//Alt: mov [esi+0000022C],eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"alter w"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(alterChkUpperLimitOnWriteAOB,RayGigant.exe,66 3B F8 B9 ** ** ** ** 0F 47 F8)
registersymbol(alterChkUpperLimitOnWriteAOB)

alloc(newmem17,2048)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
cmp di,0
jge originalcode17
xor di,di

originalcode17:
cmp di,ax
mov ecx,00000006

exit17:
jmp returnhere17

///

alterChkUpperLimitOnWriteAOB: //"RayGigant.exe"+100E14:
jmp newmem17
nop
nop
nop
returnhere17:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
alterChkUpperLimitOnWriteAOB: //"RayGigant.exe"+100E14:
db 66 3B F8 B9 06 00 00 00
//Alt: cmp di,ax
//Alt: mov ecx,00000006
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"reverse w"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(reverseChkUpperLimitOnWriteAOB,RayGigant.exe,66 3B F0 B9 ** ** ** ** 0F 47 F0)
registersymbol(reverseChkUpperLimitOnWriteAOB)

alloc(newmem24,2048)
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
cmp si,0
jge originalcode24
xor si,si

originalcode24:
cmp si,ax
mov ecx,00000006

exit24:
jmp returnhere24

///

reverseChkUpperLimitOnWriteAOB: //"RayGigant.exe"+1014D0:
jmp newmem24
nop
nop
nop
returnhere24:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem24)
reverseChkUpperLimitOnWriteAOB: //"RayGigant.exe"+1014D0:
db 66 3B F0 B9 06 00 00 00
//Alt: cmp si,ax
//Alt: mov ecx,00000006
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"No description"</Description>
          <LastState Value="31" RealAddress="014E6ED4"/>
          <VariableType>Byte</VariableType>
          <Address>RayGigant.exe+276ED4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(resourcesBaseReadAOB2,RayGigant.exe,75 07 0F B7 05 ** ** ** ** 0F BE 56 15)
registersymbol(resourcesBaseReadAOB2)

label(pResourcesBase)
registersymbol(pResourcesBase)

resourcesBaseReadAOB2+5: //"RayGigant.exe"+CA484:
pResourcesBase:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat

unregistersymbol(pResourcesBase)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"No description"</Description>
          <LastState Value="60" RealAddress="014E6ED0"/>
          <VariableType>Byte</VariableType>
          <Address>RayGigant.exe+276ED0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(APChkOnSelectActionAOB,RayGigant.exe,7F EE 5F 5E B0 01)
APChkOnSelectActionAOB: //"RayGigant.exe"+58C4:
db 90 90
//Alt: nop
//Alt: nop


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
APChkOnSelectActionAOB: //"RayGigant.exe"+58C4:
db 7F EE
//Alt: jg APChkOnSelectActionAOB-10 //RayGigant.exe+58B4
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(APChkForRepeatAOB,RayGigant.exe,7F 18 66 89 79 02)
registersymbol(APChkForRepeatAOB)

APChkForRepeatAOB: //"RayGigant.exe"+10685C:
db 90 90
//Alt: nop
//Alt: nop


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
APChkForRepeatAOB: //"RayGigant.exe"+10685C:
db 7F 18
//Alt: jg APChkForRepeatAOB+1a //RayGigant.exe+106876
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ax,64
jnl RayGigant.exe+15941

exit:
jmp returnhere

"RayGigant.exe"+15935:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"RayGigant.exe"+15935:
cmp ax,64
jnl RayGigant.exe+15941
//Alt: db 66 83 F8 64 7D 06
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Ignore SMB .1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIsSMBMaxAOB,RayGigant.exe,7D 06 66 83 F8 32)
registersymbol(cJmpIsSMBMaxAOB)

cJmpIsSMBMaxAOB: //"RayGigant.exe"+15939:
db EB
//Alt: jmp


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIsSMBMaxAOB: //"RayGigant.exe"+15939:
db 7D
//Alt: jnl
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Ignore SMB .2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(SMBChkFullOnUseAOB,RayGigant.exe,66 3D 64 00 7D 06)
registersymbol(SMBChkFullOnUseAOB)

SMBChkFullOnUseAOB+1: //"RayGigant.exe"+15936:
db B8
//Alt: mov

SMBChkFullOnUseAOB+4://"RayGigant.exe"+15939:
db EB
//Alt: jmp


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
SMBChkFullOnUseAOB+1: //"RayGigant.exe"+15936:
db 3D
//Alt: cmp

SMBChkFullOnUseAOB+4: //"RayGigant.exe"+15939:
db 7D
//Alt: jnl
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"RayGigant.exe"+463EC:
db 90 90
//Alt: nop
//Alt: nop




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
"RayGigant.exe"+463EC:
db 74 48
//Alt: je RayGigant.exe+46436
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>someBase2ReadAOB2</Name>
      <Address>0132A47F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cJmpIsSMBMaxAOB</Name>
      <Address>00DD5939</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SMBChkFullOnUseAOB</Name>
      <Address>00DD5935</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthRead1AOB</Name>
      <Address> 012AF070</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pParty1</Name>
      <Address>0124001A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>resourcesBaseReadAOB2</Name>
      <Address> 0133A47F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pResourcesBase</Name>
      <Address>014E6ED4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>APRead1AOB</Name>
      <Address> 012B05BC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAP</Name>
      <Address>014E6ED0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthWrite1AOB</Name>
      <Address> 012AEFC6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>APChkOnSelectActionAOB</Name>
      <Address> 012758C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>APChkForRepeatAOB</Name>
      <Address> 0137685C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SBMRead1AOB</Name>
      <Address> 012B63D3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cJmpIfNotEnoughMSFOnUseAOB</Name>
      <Address> 0136F69A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cJmpIfEnoughBreedOnUseAOB</Name>
      <Address> 0136F3EF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cJmpIfEnoughAlterOnUseAOB</Name>
      <Address> 0136F369</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cJmpIfEnoughReverseOnUseAOB</Name>
      <Address> 0136F2E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>materiaWrite1AOB</Name>
      <Address> 0133AAA1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>forceWrite1AOB</Name>
      <Address> 0133A89C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>seedWrite1AOB</Name>
      <Address> 0133A756</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>breedWrite1AOB</Name>
      <Address> 012BE384</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>alterChkUpperLimitOnWriteAOB</Name>
      <Address> 01370E14</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>reverseChkUpperLimitOnWriteAOB</Name>
      <Address> 013714D0</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5686752#5686752
</Comments>
</CheatTable>
