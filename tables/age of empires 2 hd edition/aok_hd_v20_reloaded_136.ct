<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>12</ID>
      <Description>"[X] &lt;== Age of Empires II HD Edition v2.0 Script"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Age of Empires II - HD Edition
 Game Version  : 2.0
 Game Sponsor  : RELOADED
 Proces Name   : AoK HD.exe
 Script Version: 1.0
 CE Version    : 6.2
 Release date  : 06-Apr-2013
 Author        : Recifense
 History:
 06-Apr-13: First Release
 Features:
 - Minimum Resources
 - God Mode
===========================================
}

//=========================================
// Definitions
define(LUDO,"AoK HD.exe")
define(MPLR,LUDO+001c828f)
define(GDMD,LUDO+0016d372)
define(GDM1,LUDO+0019b1d9)
define(GDM2,LUDO+00190ee8)
define(IUPD,LUDO+0001B548) // Instant Unit Production
define(ISRS,LUDO+0011889A) // Instant research
define(IBHP,LUDO+001943FE) // Instant building HP
define(FMGS,LUDO+0000B326) // Fast mining gold stone
define(FMIF,LUDO+0000C971) // Fast mining field
define(FMWF,LUDO+00018AB1) // Fast mining wood food


//=========================================
[ENABLE]
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MPLR,8b 88 a8 00 00 00 8b 51 0c 89 96 70 09 00 00 5f)
assert(GDMD,8b 4c 24 2c 89 4e 30 ?? ?? 8b 57 08 80 7a 04 3c)
assert(GDM1,de e9 d9 5e 30 ?? ?? dd d8 8b 46 0c 39 98 9c 00)
assert(GDM2,d9 c9 d9 5f 30 ?? ?? dd d9 8b 4f 0c 8b 81 9c 00)
assert(IUPD,89 46 44 8B 42 0C 8B 50 74 8B 04 8A 0F BF 88 82)
assert(ISRS,D9 1E 8B 71 08 8B 06 0F BF 44 98 26 89 44 24 10)
assert(IBHP,D9 5E 30 0F BF 41 2A D9 46 30 89 44 24 14 DB 44)
assert(FMGS,D9 82 08 01 00 00 8B 56 30 D8 4A 1C 8B 40 0C 8B)
assert(FMIF,D9 82 08 01 00 00 8B 46 30 66 83 78 30 00 D8 48)
assert(FMWF,D9 82 08 01 00 00 8B 56 30 D8 4A 1C 8B 40 0C 8B)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_CurMaxPopulation)
label(_BackMHP)
label(_ExitMHP)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)
label(_GodMode1)
label(_BackGM1)
label(_ExitGM1)
label(_GodMode2)
label(_BackGM2)
label(_ExitGM2)
label(_InstantUnitProduction)
label(_ExitIUP)
label(_BackIUP)
label(_InstantResearch)
label(_ExitIR)
label(_BackIR)
label(_InstantBuildingHP)
label(_ExitIBHP)
label(_BackIBHP)
label(_FastMiningGoldStone)
label(_ExitFMGS)
label(_BackFMGS)
label(_FastMiningField)
label(_ExitFMIF)
label(_BackFMIF)
label(_FastMiningWoodFood)
label(_ExitFMWF)
label(_BackFMWF)
label(pUnit)
label(pPlayer)
label(pFastMining)
label(pInstantResearch)
label(iEnableMMR)
label(iEnableGMD)
label(iEnableCMP)
label(iEnableIP)
label(iEnableFM)
label(qXMM0)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMMR)
registersymbol(iEnableGMD)
registersymbol(iEnableCMP)
registersymbol(iEnableIP)
registersymbol(iEnableFM)
registersymbol(pUnit)
registersymbol(pPlayer)
registersymbol(pFastMining)
registersymbol(pInstantResearch)

//=========================================
MyCode:
//=========================================
// On main Screen
_MonHumanPlayer:
 push ebx

 mov ecx,[eax+000000A8]            // Original code (get pRes)

 mov [pPlayer],eax

 cmp dword ptr [iEnableMMR],0
 je _CurMaxPopulation                       // Jump if feature is disabled

 mov edx,(float)1500.0

 mov ebx,[ecx]
 cmp edx,ebx
 cmovg ebx,edx
 mov [ecx],ebx

 mov ebx,[ecx+04]
 cmp edx,ebx
 cmovg ebx,edx
 mov [ecx+04],ebx

 mov ebx,[ecx+08]
 cmp edx,ebx
 cmovg ebx,edx
 mov [ecx+08],ebx

 mov ebx,[ecx+0c]
 cmp edx,ebx
 cmovg ebx,edx
 mov [ecx+0c],ebx

_CurMaxPopulation:

 cmp dword ptr [iEnableCMP],0
 je _ExitMHP

 mov [ecx+2c],(Float)0
 mov [ecx+10],(Float)500
 mov [ecx+80],(Float)500

_ExitMHP:
 pop ebx
 jmp _BackMHP                      // Back to main code

//=========================================
// During combat (Units/Buildings)
_GodMode:
 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 mov ecx,[esi+0c]
 cmp ecx,[pPlayer]
 jne _ExitGMD

 movsd [qXMM0],xmm0

 mov ecx,[esi+08]                  // Unit info
 movzx ecx,word ptr [ecx+2a]       // Get mHP

 cvtsi2ss xmm0,ecx
 movss [esp+2c],xmm0

 movsd xmm0,[qXMM0]

_ExitGMD:
 test edi,edi                      // Restore EFLAGS

 mov ecx,[esp+2C]                  // Original code
 mov [esi+30],ecx                  // Original code (upds HP)
 jmp _BackGMD                      // Back to main code

//=========================================
// During combat (Units)
_GodMode1:
 fsubp st(1),st(0)                 // Original code

 cmp dword ptr [iEnableGMD],0
 je _ExitGM1                       // Jump if feature is disabled

 mov eax,[esi+0c]
 cmp eax,[pPlayer]
 jne _ExitGM1

 fstp st(0)

 mov eax,[esi+08]                  // Unit info
 fild word ptr [eax+2a]            // Get mHP

_ExitGM1:
 fstp dword ptr [esi+30]           // Original code (upds HP)
 jmp _BackGM1                      // Back to main code

//=========================================
// During combat (Buildings)
_GodMode2:
 fxch st(1)                        // Original code

 cmp dword ptr [iEnableGMD],0
 je _ExitGM2                       // Jump if feature is disabled

 mov eax,[edi+0c]
 cmp eax,[pPlayer]
 jne _ExitGM2

 fstp st(0)

 mov eax,[edi+08]                  // Unit info
 fild word ptr [eax+2a]            // Get mHP

_ExitGM2:
 fstp dword ptr [edi+30]           // Original code (upds HP)
 jmp _BackGM2                      // Back to main code

//=========================================
// Instant unit production
_InstantUnitProduction:

 pushfd
 push ebx

 cmp dword ptr [iEnableIP],0
 je _ExitIUP

 mov ebx,[edx+0c]
 cmp ebx,[pPlayer]
 jne _ExitIUP

 add eax,(float)0.05

_ExitIUP:
 pop ebx
 popfd
 mov [esi+44],eax
 mov eax,[edx+0C]
 jmp _BackIUP

//=========================================
//Instant research
_InstantResearch:

 pushfd
 push ebp

 cmp dword ptr [iEnableIP],0
 je _ExitIR

 mov ebp,[ecx+0c]
 cmp ebp,[pPlayer]
 jne _ExitIR

 fadd dword ptr [pInstantResearch]

_ExitIR:
 pop ebp
 popfd
 fstp dword ptr [esi]
 mov esi,[ecx+08]
 jmp _BackIR

//=========================================
//Instant building HP
_InstantBuildingHP:

 pushfd

 cmp dword ptr [iEnableIP],0
 je _ExitIBHP

 mov eax,[esi+0c]
 cmp eax,[pPlayer]
 jne _ExitIBHP

 fstp st(1)
 fild dword ptr [ecx+2A]

_ExitIBHP:
 popfd
 fstp dword ptr [esi+30]
 movsx eax,word ptr [ecx+2A]
 jmp _BackIBHP

//=========================================
//Fast Mining Gold Stone
_FastMiningGoldStone:

 fld dword ptr [edx+00000108]

 pushfd
 push edi

 cmp dword ptr [iEnableFM],0
 je _ExitFMGS

 mov edi,[eax+0C]
 cmp edi,[pPlayer]
 jne _ExitFMGS

 fstp st(0)
 fld dword ptr [pFastMining]

_ExitFMGS:
 pop edi
 popfd
 jmp _BackFMGS

//=========================================
//Fast Mining Field
_FastMiningField:

 fld dword ptr [edx+00000108]

 pushfd
 push ebx

 cmp dword ptr [iEnableFM],0
 je _ExitFMIF

 mov ebx,[ecx+0C]
 cmp ebx,[pPlayer]
 jne _ExitFMIF

 fstp st(0)
 fld dword ptr [pFastMining]

_ExitFMIF:
 pop ebx
 popfd
 jmp _BackFMIF

//=========================================
//Fast Mining Wood Food
_FastMiningWoodFood:

 fld dword ptr [edx+00000108]

 pushfd
 push edi

 cmp dword ptr [iEnableFM],0
 je _ExitFMWF

 mov edi,[eax+0C]
 cmp edi,[pPlayer]
 jne _ExitFMWF

 fstp st(0)
 fld dword ptr [pFastMining]

_ExitFMWF:
 pop edi
 popfd
 jmp _BackFMWF

//=========================================
 db '=========================================&gt;'
 db 'CE6.2 Script by Recifense 040613'
//=========================================
// Variables
iEnableMMR:
 dd 0
iEnableGMD:
 dd 0
iEnableCMP:
 dd 0
iEnableIP:
 dd 0
iEnableFM:
 dd 0
pUnit:
 dd 0
pFastMining:
 dd (float)10
pInstantResearch:
 dd (float)100
pPlayer:
 dd MyCode
qXMM0:
 dq 0

//=========================================
// Hacking Points
MPLR:
 jmp _MonHumanPlayer
 nop
_BackMHP:

GDMD:
 jmp _GodMode
 nop
 nop
_BackGMD:

GDM1:
 jmp _GodMode1
_BackGM1:

GDM2:
 jmp _GodMode2
_BackGM2:

IUPD:
 jmp _InstantUnitProduction
 nop
_BackIUP:

ISRS:
 jmp _InstantResearch
_BackIR:

IBHP:
 jmp _InstantBuildingHP
 nop
 nop
_BackIBHP:

FMGS:
 jmp _FastMiningGoldStone
 nop
_BackFMGS:

FMIF:
 jmp _FastMiningField
 nop
_BackFMIF:

FMWF:
 jmp _FastMiningWoodFood
 nop
_BackFMWF:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MPLR:
// mov ecx,[eax+000000A8]
 db 8b 88 a8 00 00 00

GDMD:
// mov ecx,[esp+2C]
// mov [esi+30],ecx
 db 8b 4c 24 2c 89 4e 30

GDM1:
// fsubp st(1),st(0)
// fstp dword ptr [esi+30]
 db de e9 d9 5e 30

GDM2:
// fxch st(1)
// fstp dword ptr [edi+30]
 db d9 c9 d9 5f 30

IUPD:
// mov [esi+44],eax
// mov eax,[edx+0C]
 db 89 46 44 8B 42 0C

ISRS:
// fstp dword ptr [esi]
// mov esi,[ecx+08]
 db D9 1E 8B 71 08

IBHP:
// fstp dword ptr [esi+30]
// movsx eax,word ptr [ecx+2A]
 db D9 5E 30 0F BF 41 2A

FMGS:
// fld dword ptr [edx+00000108]
 db D9 82 08 01 00 00

FMIF:
// fld dword ptr [edx+00000108]
 db D9 82 08 01 00 00

FMWF:
// fld dword ptr [edx+00000108]
 db D9 82 08 01 00 00


//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMMR)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableCMP)
unregistersymbol(iEnableIP)
unregistersymbol(iEnableFM)
unregistersymbol(pUnit)
unregistersymbol(pPlayer)
unregistersymbol(pFastMining)
unregistersymbol(pInstantResearch)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Enable/Disable Minimum 1500 Resources (Ctrl+Page Up)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableMMR:
dd 01
[DISABLE]
iEnableMMR:
dd 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Enable/Disable God Mode  (Ctrl+Page Down)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableGMD:
dd 01
[DISABLE]
iEnableGMD:
dd 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Enable/Disable 0/500 Population (Ctrl+Home)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableCMP:
dd 01
[DISABLE]
iEnableCMP:
dd 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Enable/Disable Instant Produce Units/Research/Build (Ctrl+End)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableIP:
dd 01
[DISABLE]
iEnableIP:
dd 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"Enable/Disable Fast exploitation all resources (Ctrl+Insert)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableFM:
dd 01
[DISABLE]
iEnableFM:
dd 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of fld dword ptr [esi]</Description>
      <Address>0051888C</Address>
      <ModuleName>AoK HD.exe</ModuleName>
      <ModuleNameOffset>11888C</ModuleNameOffset>
      <Before>
        <Byte>7E</Byte>
        <Byte>04</Byte>
        <Byte>02</Byte>
        <Byte>75</Byte>
        <Byte>7B</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>06</Byte>
      </Actual>
      <After>
        <Byte>53</Byte>
        <Byte>D8</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Age of Empires II - HD Edition
 Game Version  : 2.0
 Game Sponsor  : RELOADED
 Proces Name   : AoK HD.exe
 Script Version: 1.0
 CE Version    : 6.2
 Release date  : 06-Apr-2013
 Author        : Recifense
 History:
 06-Apr-13: First Release
 Features:
 - Minimum Resources [1]
 - God Mode          [2]
===========================================
[1] Minimum Resources = 6200;
[2] For human player's units and buildings
===========================================
HOTKEYS:
CTRL+Home = Enable  all cheats;
CTRL+End  = Disable all cheats;
===========================================
Cheers!
</Comments>
</CheatTable>
