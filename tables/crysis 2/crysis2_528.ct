<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>156</ID>
      <Description>"* GAME SPEED"</Description>
      <LastState Activated="0"/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Registersymbol(enable_SlowGameSpeed)
alloc(enable_SlowGameSpeed,4)
Registersymbol(enable_IncGameSpeed)
alloc(enable_IncGameSpeed,4)
Registersymbol(enable_ResGameSpeed)
alloc(enable_ResGameSpeed,4)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(SlowGameSpeed)
label(IncGameSpeed)
label(ResGameSpeed)

newmem:
cmp byte ptr [enable_SlowGameSpeed],1
je SlowGameSpeed
cmp byte ptr [enable_IncGameSpeed],1
je IncGameSpeed
cmp byte ptr [enable_ResGameSpeed],1
je ResGameSpeed
jmp originalcode

SlowGameSpeed:
mov byte ptr [enable_SlowGameSpeed],0
mov [esi+00000254],(float)0.2
jmp originalcode

IncGameSpeed:
mov byte ptr [enable_IncGameSpeed],0
mov [esi+00000254],(float)3
jmp originalcode

ResGameSpeed:
mov byte ptr [enable_ResGameSpeed],0
mov [esi+00000254],(float)1
jmp originalcode

originalcode:
movss xmm1,[esi+00000254]

exit:
jmp returnhere

"Crysis2.exe"+95B81:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(enable_SlowGameSpeed)
Unregistersymbol(enable_IncGameSpeed)
Unregistersymbol(enable_ResGameSpeed)
dealloc(newmem)
dealloc(enable_SlowGameSpeed)
dealloc(enable_IncGameSpeed)
dealloc(enable_ResGameSpeed)
"Crysis2.exe"+95B81:
movss xmm1,[esi+00000254]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>163</ID>
      <Description>"* MINi ENEMYS SCRiPT"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Registersymbol(enable_MiniPlayers)
alloc(enable_MiniPlayers,4)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(MiniPlayers)
label(BigPlayers)



newmem:
pushad
pushfd

mov dword ptr [ecx+40],(float)1
mov dword ptr [ecx+44],(float)1
mov dword ptr [ecx+48],(float)1

MiniPlayers:
cmp byte ptr [enable_MiniPlayers],1
jne originalcode
mov dword ptr [ecx+40],(float)0.4
mov dword ptr [ecx+44],(float)0.4
mov dword ptr [ecx+48],(float)0.4


BigPlayers:
cmp byte ptr [enable_MiniPlayers],2
jne originalcode
mov dword ptr [ecx+40],(float)3
mov dword ptr [ecx+44],(float)3
mov dword ptr [ecx+48],(float)3

jmp originalcode


originalcode:
popfd
popad
movss xmm0,[ecx+40]

exit:
jmp returnhere

enable_MiniPlayers:
dd 0

"Crysis2.exe"+18F6C5:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Crysis2.exe"+18F6C5:
movss xmm0,[ecx+40]
//Alt: db F3 0F 10 41 40
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>152</ID>
      <Description>"* TELEPORT"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem_Teleport,2048)
label(returnhere_Teleport)
label(originalcode_Teleport)
label(exit_Teleport)
label(z_coord)
label(x_coord)
label(y_coord)
label(save_coord)
label(load_coord)
label(s_enable)
label(l_enable)
registersymbol(s_enable)
registersymbol(l_enable)


"Crysis2.exe"+9E180E:
jmp newmem_Teleport
nop
returnhere_Teleport:


newmem_Teleport:
//cmp dword ptr [esi+EA0],(int)0
cmp dword ptr [esi+280],(int)255
//cmp dword ptr [esi+FA4],(float)256
//cmp dword ptr [esi+1160],(int)1436
//cmp dword ptr [esi+1180],(int)3246
jne originalcode_Teleport
cmp [s_enable],1
je save_coord
cmp [l_enable],1
je load_coord
jmp originalcode_Teleport

save_coord:
mov [s_enable],0
push edx
mov edx,[esi+70]
mov [x_coord],edx
mov edx,[esi+74]
mov [z_coord],edx
mov edx,[esi+78]
mov [y_coord],edx
pop edx
jmp originalcode_Teleport


load_coord:
mov [l_enable],0
cmp [z_coord],0
je originalcode_Teleport
push edx
mov edx,[x_coord]
mov [esi+70],edx
mov edx,[z_coord]
mov [esi+74],edx
mov edx,[y_coord]
mov [esi+78],edx
pop edx
jmp originalcode_Teleport


originalcode_Teleport:
mov edx,[esi+78]
mov [edi+08],edx

exit_Teleport:
jmp returnhere_Teleport

x_coord:
dd 0
z_coord:
dd 0
y_coord:
dd 0
s_enable:
dd 0
l_enable:
dd 0

[DISABLE]
dealloc(newmem_Teleport)
unregistersymbol(s_enable)
unregistersymbol(l_enable)
"Crysis2.exe"+9E180E:
mov edx,[esi+78]
mov [edi+08],edx




</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>154</ID>
      <Description>"- LOAD POSiTiON"</Description>
      <LastState Value="??" Activated="0" RealAddress="0F6000AF"/>
      <Color>FF0000</Color>
      <VariableType>Byte</VariableType>
      <Address>l_enable</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>153</ID>
      <Description>"- SAVE POSiTiON"</Description>
      <LastState Value="??" Activated="0" RealAddress="0F6000AB"/>
      <Color>FF0000</Color>
      <VariableType>Byte</VariableType>
      <Address>s_enable</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>107</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>159</ID>
      <Description>"/ FAST GAME SPEED"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>0080FF</Color>
      <VariableType>Byte</VariableType>
      <Address>enable_IncGameSpeed</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>97</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>164</ID>
      <Description>"/ MiNi ENEMYS (1=on, 2=normal)"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>enable_MiniPlayers</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>103</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>157</ID>
      <Description>"/ RESTORE GAME SPEED"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>0080FF</Color>
      <VariableType>Byte</VariableType>
      <Address>enable_ResGameSpeed</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>98</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>158</ID>
      <Description>"/ SLOW GAME SPEED"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>0080FF</Color>
      <VariableType>Byte</VariableType>
      <Address>enable_SlowGameSpeed</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>99</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>101</ID>
      <Description>"CLiMB UP EVRYWHERE"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:
cmp byte ptr [ecx+9],(int)34
//cmp [ecx+E80],(int)107
//cmp [ecx+E90],(int)108
jne originalcode
mov dword ptr [ecx],(float)10

originalcode:
fld dword ptr [ecx]
fadd dword ptr [esp+78]

exit:
jmp returnhere

"Crysis2.exe"+C29479:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Crysis2.exe"+C29479:
fld dword ptr [ecx]
fadd dword ptr [esp+78]
//Alt: db D9 01 D8 44 24 78
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>50</ID>
      <Description>"MAXiMUM PRECISiON - NO SPREAD"</Description>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov dword ptr [edi+1C],(float)0

originalcode:
fadd dword ptr [edi+1C]
fmul dword ptr [esp+1C]

exit:
jmp returnhere

"Crysis2.exe"+CCA775:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Crysis2.exe"+CCA775:
fadd dword ptr [edi+1C]
fmul dword ptr [esp+1C]
//Alt: db D8 47 1C D8 4C 24 1C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>111</ID>
      <Description>"MAXiMUM PRECiSiON - NO RECOiL"</Description>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov dword ptr [esi],(float)0

originalcode:
fld dword ptr [esi]
fsub dword ptr [ebp+10]

exit:
jmp returnhere

"Crysis2.exe"+CCA80B:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Crysis2.exe"+CCA80B:
fld dword ptr [esi]
fsub dword ptr [ebp+10]
//Alt: db D9 06 D8 65 10
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>129</ID>
      <Description>"ONE HiT KiLLS"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:

cmp byte ptr [esi+32],(int)102
//cmp dword ptr [ecx+44],(int)84
//cmp byte ptr [ecx+4AD],(int)95
//cmp byte ptr [ecx+4AE],(int)102
//cmp byte ptr [ecx+4AF],(int)105
je originalcode
mov dword ptr [esi+0000032C],(float)1

originalcode:
fld dword ptr [esi+0000032C]

exit:
jmp returnhere

"Crysis2.exe"+AD801F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Crysis2.exe"+AD801F:
fld dword ptr [esi+0000032C]
//Alt: db D9 86 2C 03 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>48</ID>
      <Description>"PLAYER SPEED "</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem_Playerspeed,2048)
label(returnhere_Playerspeed)
label(originalcode_Playerspeed)
label(exit_Playerspeed)

"Crysis2.exe"+AC8A76:
jmp newmem_Playerspeed
nop
returnhere_Playerspeed:

newmem_Playerspeed:
mov dword ptr [eax+00000080],(float)10

originalcode_Playerspeed:
fmul dword ptr [eax+00000080]

exit_Playerspeed:
jmp returnhere_Playerspeed



[DISABLE]
dealloc(newmem)
"Crysis2.exe"+AC8A76:
fmul dword ptr [eax+00000080]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>81</ID>
      <Description>"SUPER JUMP"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov dword ptr [edi+00000A9C],(float)150

originalcode:
fld dword ptr [edi+00000A9C]

exit:
jmp returnhere

"Crysis2.exe"+CFA5BC:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Crysis2.exe"+CFA5BC:
fld dword ptr [edi+00000A9C]
//Alt: db D9 87 9C 0A 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>99</ID>
      <Description>"iNFiNITE HEALTH"</Description>
      <LastState Activated="0"/>
      <Color>00FF00</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
alloc(newmem_Fall,2048)
label(returnhere_Fall)
label(originalcode_Fall)
label(exit_Fall)
alloc(newmem_Animation,2048)
label(returnhere_Animation)
label(originalcode_Animation)
label(exit_Animation)

newmem_Animation:
mov dword ptr [ebx+54],(float)0

originalcode_Animation:
fld dword ptr [ebx+54]
mov ecx,[ebx+48]

exit_Animation:
jmp returnhere_Animation

"Crysis2.exe"+C3BAA4:
jmp newmem_Animation
nop
returnhere_Animation:



"Crysis2.exe"+AD0931:
jmp newmem_Fall
nop
returnhere_Fall:

newmem_Fall:
mov dword ptr [esi+0000032C],(float)500000
mov dword ptr [esi+00000330],(float)500000

originalcode_Fall:
fld dword ptr [esi+0000032C]

exit_Fall:
jmp returnhere_Fall


"Crysis2.exe"+ACE2E1:
jmp newmem
nop
returnhere:

newmem:
mov dword ptr [esi+0000032C],(float)500000
mov dword ptr [esi+00000330],(float)500000

originalcode:
fcom dword ptr [esi+0000032C]

exit:
jmp returnhere





[DISABLE]

dealloc(newmem)
"Crysis2.exe"+ACE2E1:
fcom dword ptr [esi+0000032C]

dealloc(newmem_Fall)
"Crysis2.exe"+AD0931:
fld dword ptr [esi+0000032C]

dealloc(newmem_Animation)
"Crysis2.exe"+C3BAA4:
fld dword ptr [ebx+54]
mov ecx,[ebx+48]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"iNFiNiTE AMMO"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov [eax+14],#999

originalcode:
mov eax,[eax+14]
pop ecx
ret 0004

exit:
jmp returnhere

"Crysis2.exe"+44D22F:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Crysis2.exe"+44D22F:
mov eax,[eax+14]
pop ecx
ret 0004
//Alt: db 8B 40 14 59 C2 04 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"iNFiNiTE AMMO iN CLiP"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:
add [eax+04],#0
mov al,01

originalcode:
//mov [eax+04],ecx
//mov al,01

exit:
jmp returnhere

"Crysis2.exe"+BF18B7:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Crysis2.exe"+BF18B7:
mov [eax+04],ecx
mov al,01
//Alt: db 89 48 04 B0 01
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>85</ID>
      <Description>"iNFiNiTE ENERGY"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov dword ptr [esi+000000C0],(float)10000

originalcode:
fld dword ptr [esi+000000C0]

exit:
jmp returnhere

"Crysis2.exe"+AFC38E:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Crysis2.exe"+AFC38E:
fld dword ptr [esi+000000C0]
//Alt: db D9 86 C0 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>132</ID>
      <Description>"iNFiNiTE NANO CATALYSTS"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov [ecx+eax*4+00000100],#9999999

originalcode:
mov eax,[ecx+eax*4+00000100]

exit:
jmp returnhere

"Crysis2.exe"+AFE26C:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Crysis2.exe"+AFE26C:
mov eax,[ecx+eax*4+00000100]
//Alt: db 8B 84 81 00 01 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>s_enable</Name>
      <Address>0F6000AB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>l_enable</Name>
      <Address>0F6000AF</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>
</Comments>
</CheatTable>
