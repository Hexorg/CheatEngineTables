<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Unlimited Health"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(health,D9 80 90 00 00 00 D8 B0)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fld dword ptr [eax+0000008C]
  fst dword ptr [eax+00000090]
  jmp return

health:
  jmp code
  nop
return:
registersymbol(health)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
health:
  db D9 80 90 00 00 00

unregistersymbol(health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0B6609DA

0B6609AB: 6A 00                 -  push 00
0B6609AD: 8B CF                 -  mov ecx,edi
0B6609AF: 8B D6                 -  mov edx,esi
0B6609B1: 39 09                 -  cmp [ecx],ecx
0B6609B3: E8 28 9C 94 FB        -  call 06FAA5E0
0B6609B8: C7 45 C4 4B 00 00 00  -  mov [ebp-3C],0000004B
0B6609BF: C7 45 C8 19 00 00 00  -  mov [ebp-38],00000019
0B6609C6: C7 45 CC 90 01 00 00  -  mov [ebp-34],00000190
0B6609CD: C7 45 D0 1E 00 00 00  -  mov [ebp-30],0000001E
0B6609D4: 8B 85 90 F7 FF FF     -  mov eax,[ebp-00000870]
// ---------- INJECTING HERE ----------
0B6609DA: D9 80 90 00 00 00     -  fld dword ptr [eax+00000090]
// ---------- DONE INJECTING  ----------
0B6609E0: D8 B0 8C 00 00 00     -  fdiv dword ptr [eax+0000008C]
0B6609E6: DD 9D 30 FE FF FF     -  fstp qword ptr [ebp-000001D0]
0B6609EC: 8B 85 94 F7 FF FF     -  mov eax,[ebp-0000086C]
0B6609F2: 8B 90 F0 00 00 00     -  mov edx,[eax+000000F0]
0B6609F8: 68 98 01 00 00        -  push 00000198
0B6609FD: 6A 1F                 -  push 1F
0B6609FF: DD 85 30 FE FF FF     -  fld qword ptr [ebp-000001D0]
0B660A05: 83 EC 04              -  sub esp,04
0B660A08: D9 1C 24              -  fstp dword ptr [esp]
0B660A0B: 6A 00                 -  push 00
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Unlimited Double Combiners"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(breakDouble,FF 8F E0 01 00 00)
aobscan(useDouble,FF 88 E0 01 00 00)
breakDouble:
  db 90 90 90 90 90 90
useDouble:
  db 90 90 90 90 90 90
registersymbol(breakDouble)
registersymbol(useDouble)

[DISABLE]
breakDouble:
  db FF 8F E0 01 00 00
useDouble:
  db FF 88 E0 01 00 00
unregistersymbol(breakDouble)
unregistersymbol(useDouble)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Unlimited Triple Combiners"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(breakTriple,FF 8F E4 01 00 00)
aobscan(useTriple,FF 88 E4 01 00 00)
breakTriple:
  db 90 90 90 90 90 90
useTriple:
  db 90 90 90 90 90 90
registersymbol(breakTriple)
registersymbol(useTriple)

[DISABLE]
breakTriple:
  db FF 8F E4 01 00 00
useTriple:
  db FF 88 E4 01 00 00
unregistersymbol(breakTriple)
unregistersymbol(useTriple)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"One Hit Kill Containers"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(container,D9 83 90 00 00 00 D9 83 8C 00 00 00 DF F1 DD D8 0F 8A * * * * 0F 86 * * * * 8B 43 08)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fld1
  fst dword ptr [ebx+00000090]
  //fld dword ptr [ebx+00000090]
  jmp return

container:
  jmp code
  nop
return:
registersymbol(container)

[DISABLE]
container:
  db D9 83 90 00 00 00

unregistersymbol(container)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 067B6D48

067B6D1D: 53                    -  push ebx
067B6D1E: 81 EC A4 00 00 00     -  sub esp,000000A4
067B6D24: 33 C0                 -  xor eax,eax
067B6D26: 89 45 EC              -  mov [ebp-14],eax
067B6D29: 89 45 F0              -  mov [ebp-10],eax
067B6D2C: 8B D9                 -  mov ebx,ecx
067B6D2E: 80 3D CE 85 13 00 00  -  cmp byte ptr [001385CE],00
067B6D35: 0F 84 08 02 00 00     -  je 067B6F43
067B6D3B: 80 BB FD 00 00 00 00  -  cmp byte ptr [ebx+000000FD],00
067B6D42: 0F 84 FB 01 00 00     -  je 067B6F43
// ---------- INJECTING HERE ----------
067B6D48: D9 83 90 00 00 00     -  fld dword ptr [ebx+00000090]
// ---------- DONE INJECTING  ----------
067B6D4E: D9 83 8C 00 00 00     -  fld dword ptr [ebx+0000008C]
067B6D54: DF F1                 -  fcomip st(0),st(1)
067B6D56: DD D8                 -  fstp st(0)
067B6D58: 0F 8A E5 01 00 00     -  jp 067B6F43
067B6D5E: 0F 86 DF 01 00 00     -  jbe 067B6F43
067B6D64: 8B 43 08              -  mov eax,[ebx+08]
067B6D67: 8B 40 3C              -  mov eax,[eax+3C]
067B6D6A: 8B 40 54              -  mov eax,[eax+54]
067B6D6D: 89 85 68 FF FF FF     -  mov [ebp-00000098],eax
067B6D73: A1 B0 DD A7 04        -  mov eax,[04A7DDB0]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"One Hit Kill Enemies"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(enemy,D9 83 90 00 00 00 D9 83 8C)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fld1
  fst dword ptr [ebx+00000090]
  jmp return

enemy:
  jmp code
  nop
return:
registersymbol(enemy)

[DISABLE]
enemy:
  db D9 83 90 00 00 00

unregistersymbol(enemy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 067D378B

067D376B: 57                    -  push edi
067D376C: 56                    -  push esi
067D376D: 53                    -  push ebx
067D376E: 81 EC A4 00 00 00     -  sub esp,000000A4
067D3774: 33 C0                 -  xor eax,eax
067D3776: 89 45 EC              -  mov [ebp-14],eax
067D3779: 89 45 F0              -  mov [ebp-10],eax
067D377C: 8B D9                 -  mov ebx,ecx
067D377E: 80 3D CE 85 13 00 00  -  cmp byte ptr [001385CE],00
067D3785: 0F 84 24 02 00 00     -  je 067D39AF
// ---------- INJECTING HERE ----------
067D378B: D9 83 90 00 00 00     -  fld dword ptr [ebx+00000090]
// ---------- DONE INJECTING  ----------
067D3791: D9 83 8C 00 00 00     -  fld dword ptr [ebx+0000008C]
067D3797: DF F1                 -  fcomip st(0),st(1)
067D3799: DD D8                 -  fstp st(0)
067D379B: 0F 8A 0E 02 00 00     -  jp 067D39AF
067D37A1: 0F 86 08 02 00 00     -  jbe 067D39AF
067D37A7: 80 BB 9C 01 00 00 00  -  cmp byte ptr [ebx+0000019C],00
067D37AE: 0F 85 FB 01 00 00     -  jne 067D39AF
067D37B4: 80 BB FD 00 00 00 00  -  cmp byte ptr [ebx+000000FD],00
067D37BB: 0F 84 EE 01 00 00     -  je 067D39AF
067D37C1: 83 7B 04 00           -  cmp dword ptr [ebx+04],00
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Find Experience Pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(experience,D9 81 EC 01 00 00)
alloc(newmem,$1000)

label(code)
label(return)
label(xp)

newmem:

xp:
  db 00 00 00 00

code:
  mov [xp],ecx
  add [xp],1EC
  fld dword ptr [ecx+000001EC]
  jmp return

experience:
  jmp code
  nop
return:
registersymbol(experience)
registersymbol(xp)

[DISABLE]
experience:
  db D9 81 EC 01 00 00

unregistersymbol(experience)
unregistersymbol(xp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0B663FC3

0B663FAC: 00 00                 -  add [eax],al
0B663FAE: 00 00                 -  add [eax],al
0B663FB0: EC                    -  in al,dx
0B663FB1: C5 63 0B              -  lds esp,[ebx+0B]
0B663FB4: 00 00                 -  add [eax],al
0B663FB6: 00 00                 -  add [eax],al
0B663FB8: 04 C6                 -  add al,-3A
0B663FBA: 63 0B                 -  arpl [ebx],cx
0B663FBC: 28 A0 E1 00 55 8B     -  sub [eax-74AAFF1F],ah
0B663FC2: EC                    -  in al,dx
// ---------- INJECTING HERE ----------
0B663FC3: D9 81 EC 01 00 00     -  fld dword ptr [ecx+000001EC]
// ---------- DONE INJECTING  ----------
0B663FC9: 8B 15 6C 58 A7 04     -  mov edx,[04A7586C]
0B663FCF: 8B 89 F0 01 00 00     -  mov ecx,[ecx+000001F0]
0B663FD5: 49                    -  dec ecx
0B663FD6: 8B 42 04              -  mov eax,[edx+04]
0B663FD9: 48                    -  dec eax
0B663FDA: 3B C8                 -  cmp ecx,eax
0B663FDC: 7E 02                 -  jle 0B663FE0
0B663FDE: EB 02                 -  jmp 0B663FE2
0B663FE0: 8B C1                 -  mov eax,ecx
0B663FE2: 3B 42 04              -  cmp eax,[edx+04]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Player Experience"</Description>
          <LastState Value="211.2000122" Activated="0" RealAddress="03E04824"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[xp]</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Find Runes Pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(runes,83 7C B0 0C 00 74 * 8B 87)
alloc(newmem,$1000)

label(code)
label(return)
label(runesPointer)

newmem:
  cmp esi,0
  jne code
  mov [runesPointer],eax
  add [runesPointer],0C

code:
  cmp dword ptr [eax+esi*4+0C],00
  jmp return

runesPointer:
  db 00 00 00 00

runes:
  jmp newmem
return:
registersymbol(runes)
registersymbol(runesPointer)

[DISABLE]
runes:
  db 83 7C B0 0C 00

unregistersymbol(runes)
unregistersymbol(runesPointer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 067DFE20

067DFDFE: 8B 40 14              -  mov eax,[eax+14]
067DFE01: 89 45 E0              -  mov [ebp-20],eax
067DFE04: 8B 45 E0              -  mov eax,[ebp-20]
067DFE07: 3B 70 0C              -  cmp esi,[eax+0C]
067DFE0A: 72 05                 -  jb 067DFE11
067DFE0C: E8 33 32 BF 62        -  call mscorlib.ni.dll+9B3044
067DFE11: 8B 45 E0              -  mov eax,[ebp-20]
067DFE14: 8B 40 04              -  mov eax,[eax+04]
067DFE17: 3B 70 04              -  cmp esi,[eax+04]
067DFE1A: 0F 83 08 01 00 00     -  jae 067DFF28
// ---------- INJECTING HERE ----------
067DFE20: 83 7C B0 0C 00        -  cmp dword ptr [eax+esi*4+0C],00
// ---------- DONE INJECTING  ----------
067DFE25: 74 45                 -  je 067DFE6C
067DFE27: 8B 87 D4 00 00 00     -  mov eax,[edi+000000D4]
067DFE2D: 89 45 E4              -  mov [ebp-1C],eax
067DFE30: 8B 87 9C 00 00 00     -  mov eax,[edi+0000009C]
067DFE36: 8B 40 14              -  mov eax,[eax+14]
067DFE39: 89 45 DC              -  mov [ebp-24],eax
067DFE3C: 8B 45 DC              -  mov eax,[ebp-24]
067DFE3F: 3B 70 0C              -  cmp esi,[eax+0C]
067DFE42: 72 05                 -  jb 067DFE49
067DFE44: E8 FB 31 BF 62        -  call mscorlib.ni.dll+9B3044
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Slot 1"</Description>
          <LastState Value="603316636" Activated="0" RealAddress="03E04B48"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[runesPointer]</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Slot 2"</Description>
          <LastState Value="603354676" Activated="0" RealAddress="03E04B4C"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[runesPointer]+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Slot 3"</Description>
          <LastState Value="600190212" Activated="0" RealAddress="03E04B50"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[runesPointer]+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Slot 4"</Description>
          <LastState Value="600266164" Activated="0" RealAddress="03E04B54"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[runesPointer]+C</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>health</Name>
      <Address> 0B6609DA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>experience</Name>
      <Address> 0B663FC3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>xp</Name>
      <Address>06590000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>runes</Name>
      <Address> 067DFE20</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>runesPointer</Name>
      <Address>065C0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>breakDouble</Name>
      <Address> 064C4DFD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>useDouble</Name>
      <Address> 065BD978</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
