<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>114</ID>
      <Description>"&lt;= [X] Final Fantasy XIII +9 Cheat Table v1.2 by Reaper79"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Game         : Final Fantasy XIII
  Game.exe     : ffxiiiimg.exe
  Game Version : current Steam 2014-10-17
  Table-Date   : 2014-10-17
  Table-Version: v1.2
  Author       : Reaper79 &amp;&amp; Credits to Cielos@cheatengine.org (for new player check)

  Features     :
   - Godmode (While in Battle)
   - OneHitKill (Should Trigger only if Enemy gets DMG)
   - Infinite Gil (You can change desired amount)
   - Always Full ATB (Group or Leader only (Default Leader))
   - Always Full MTP (While in Battle)
   - Infinite Crystal Points (Only turn on to Raise you Chars, don't use in CP Tutorial)
   - No Monster Attacks (While in Battle) (Enable and most Monsters won't do anything in combat)
   - Infinite Components
   - Infinite Items
}
[ENABLE]
aobscanmodule(CombatHPRead_aob,ffxiiiimg.exe,8B 80 90 02 00 00 8B E5 5D C3)
aobscanmodule(CombatHPWrite_aob,ffxiiiimg.exe,89 88 90 02 00 00 6A 00 8B 4D E8)
aobscanmodule(FullMTP_aob,ffxiiiimg.exe,8B 55 F4 39 42 6C 7C 08 8B 45 F8) // should be unique
aobscanmodule(PartyGil_aob,ffxiiiimg.exe,8B 88 78 25 00 00 89 4D FC 8B) // should be unique
aobscanmodule(PartyCP_aob,ffxiiiimg.exe,83 B9 C0 44 00 00 00 0F 84) // should be unique
alloc(newmem,$1000)

label(pLeader)
label(iPartyGil)
label(iEnableGodmode)
label(iEnableFullATB)
label(iEnableFullATBLeaderOnly)
label(iEnableFullMTP)
label(iEnableOneHitKill)
label(iEnableNoMonsterATK)
label(iEnableInfiniteGil)
label(iEnableInfiniteCP)
label(CombatHPRead_code1)
label(CombatHPRead_code2)
label(CombatHPRead_code3)
label(CombatHPRead_code4)
label(CombatHPRead_code5)
label(CombatHPRead_end)
label(CombatHPRead_return)

label(CombatHPWrite_code1)
label(CombatHPWrite_code2)
label(CombatHPWrite_end)
label(CombatHPWrite_return)

label(FullMTP_code1)
label(FullMTP_code2)
label(FullMTP_return)

label(PartyCP_code1)
label(PartyCP_code2)
label(PartyCP_return)

label(iPartyGil)
label(PartyGil_code1)
label(PartyGil_code2)
label(PartyGil_return)

label(pMTP)

registersymbol(pLeader)
registersymbol(iPartyGil)
registersymbol(iEnableGodmode)
registersymbol(iEnableFullATB)
registersymbol(iEnableFullATBLeaderOnly)
registersymbol(iEnableFullMTP)
registersymbol(iEnableInfiniteGil)
registersymbol(iEnableOneHitKill)
registersymbol(iEnableInfiniteCP)
registersymbol(iEnableNoMonsterATK)
registersymbol(CombatHPRead_aob)
registersymbol(CombatHPWrite_aob)
registersymbol(FullMTP_aob)
registersymbol(PartyGil_aob)
registersymbol(PartyCP_aob)


newmem:
// ===== VARS
pMTP:
  dd 0
iPartyGil:
  dd #999999999
pLeader:
  dd 0
iEnableGodmode:
  dd 0
iEnableFullATB:
  dd 0
iEnableFullATBLeaderOnly:
  dd 0
iEnableOneHitKill:
  dd 0
iEnableFullMTP:
  dd 0
iEnableInfiniteGil:
  dd 0
iEnableInfiniteCP:
  dd 0
iEnableNoMonsterATK:
  dd 0

// ===== CAVES
CombatHPRead_code1:
  push ebx
  cmp byte ptr [eax+271],02     //is party? (0-2)
  jg CombatHPRead_code5
  cmp byte ptr [eax+271],00     //is leader?
  jg CombatHPRead_code2
  mov [pLeader],eax             //get Pointer to Leader

CombatHPRead_code2:
  cmp [iEnableGodmode],01
  jne CombatHPRead_code3
  mov ebx,[eax+2C8]             //get Max HP for cur. party member
  mov [eax+00000290],ebx        //set Max HP for cur. party member

CombatHPRead_code3:
  cmp [iEnableFullATB],01
  jne CombatHPRead_end
  cmp [iEnableFullATBLeaderOnly],01
  jne CombatHPRead_code4
  cmp [pLeader],eax
  jne CombatHPRead_end

CombatHPRead_code4:
  mov edx,[eax+2D0]             //get max ATB for cur. party member
  mov [eax+000002A0],edx        //set max ATB for cur. party member
  jmp short CombatHPRead_end

CombatHPRead_code5:
  cmp [iEnableNoMonsterATK],01
  jne CombatHPRead_end
  mov [eax+000002A0],00000000

CombatHPRead_end:
  pop ebx
  mov eax,[eax+00000290]        //original
  jmp CombatHPRead_return

CombatHPWrite_code1:
  push ebx
  cmp [eax+271],02
  jg CombatHPWrite_code2
  cmp [eax+271],00
  jl CombatHPWrite_code2
  cmp [iEnableGodmode],01
  jne CombatHPWrite_end
  mov ebx,[eax+2C8]             //get Max HP for cur. party member
  mov [eax+00000290],ebx        //set Max HP for cur. party member
  jmp CombatHPWrite_end

CombatHPWrite_code2:
//  mov ebx,[esp+84]              //get pointer of attacker
  cmp [iEnableOneHitKill],01
  jne CombatHPWrite_end
//  cmp [pLeader],ebx             //is leader attacker?
//  jne CombatHPWrite_end
  mov ebx,[eax+00000290]        //get target HP
  cmp ebx,ecx                   //target HP &lt; ecx? (got damage)
  jl CombatHPWrite_end
  mov ecx,#-1

CombatHPWrite_end:
  pop ebx
  mov [eax+00000290],ecx        //original
  jmp CombatHPWrite_return


//===== FullMTP Begin
FullMTP_code1:
  mov edx,[ebp-0C]                 //original
  mov [pMTP],edx                   //get Pointer to MTP for debug
  add [pMTP],6C                    //get Pointer to MTP for debug
  cmp [iEnableFullMTP],01
  jne FullMTP_code2
  mov [edx+6C],eax                 //set Max MTP

FullMTP_code2:
  cmp [edx+6C],eax                 //original (eax hold Max MTP)
  jmp FullMTP_return
//===== FullMTP End

//===== PartyGil Begin
PartyGil_code1:
  push ecx
  cmp [iEnableInfiniteGil],01
  jne PartyGil_code2
  mov ecx,[iPartyGil]
  mov [eax+00002578],ecx

PartyGil_code2:
  pop ecx
  mov ecx,[eax+00002578]  //original
  jmp PartyGil_return
//===== PartyGil End

//===== PartyCP Begin
PartyCP_code1:
  cmp [iEnableInfiniteCP],01
  jne PartyCP_code2
  mov [ecx+000044C0],#999999

PartyCP_code2:
  cmp dword ptr [ecx+000044C0],00 //original
  jmp PartyCP_return
//===== PartyCP End

// ===== INJECTS
CombatHPRead_aob:
  jmp CombatHPRead_code1
  db 90
CombatHPRead_return:

CombatHPWrite_aob:
  jmp CombatHPWrite_code1
  db 90
CombatHPWrite_return:

FullMTP_aob:
  jmp FullMTP_code1
  db 90
FullMTP_return:

PartyGil_aob:
  jmp PartyGil_code1
  db 90
PartyGil_return:

PartyCP_aob:
  jmp PartyCP_code1
  db 90 90
PartyCP_return:

[DISABLE]
CombatHPRead_aob:
  db 8B 80 90 02 00 00

CombatHPWrite_aob:
  db 89 88 90 02 00 00

FullMTP_aob:
  db 8B 55 F4 39 42 6C

PartyGil_aob:
  db 8B 88 78 25 00 00

PartyCP_aob:
  db 83 B9 C0 44 00 00 00

unregistersymbol(pLeader)
unregistersymbol(iPartyGil)
unregistersymbol(iEnableGodmode)
unregistersymbol(iEnableFullATB)
unregistersymbol(iEnableFullATBLeaderOnly)
unregistersymbol(iEnableFullMTP)
unregistersymbol(iEnableInfiniteGil)
unregistersymbol(iEnableOneHitKill)
unregistersymbol(iEnableInfiniteCP)
unregistersymbol(iEnableNoMonsterATK)
unregistersymbol(CombatHPRead_aob)
unregistersymbol(CombatHPWrite_aob)
unregistersymbol(FullMTP_aob)
unregistersymbol(PartyGil_aob)
unregistersymbol(PartyCP_aob)
dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>115</ID>
          <Description>"&lt;= [X] Godmode"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableGodmode:
  dd 1
[DISABLE]
iEnableGodmode:
  dd 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"&lt;= [X] OneHitKill"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableOneHitKill:
  dd 1
[DISABLE]
iEnableOneHitKill:
  dd 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>110</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>96</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>117</ID>
          <Description>"&lt;= [X] Always Full ATB (Leader Only by Default)"</Description>
          <Options moHideChildren="1" moBindActivation="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableFullATB:
  dd 1
[DISABLE]
iEnableFullATB:
  dd 0
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>118</ID>
              <Description>"&lt;= [x] Leader Only (Default) (Turn off for Group)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
iEnableFullATBLeaderOnly:
  dd 1
[DISABLE]
iEnableFullATBLeaderOnly:
  dd 0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"&lt;= [X] Always Full MTP"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableFullMTP:
  dd 1
[DISABLE]
iEnableFullMTP:
  dd 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"&lt;= [X] Infinite Gil"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableInfiniteGil:
  dd 1
[DISABLE]
iEnableInfiniteGil:
  dd 0
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14</ID>
              <Description>"Current Gil"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iPartyGil</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"&lt;= [X] Infinite Crystal Points"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableInfiniteCP:
  dd 1
[DISABLE]
iEnableInfiniteCP:
  dd 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"&lt;= [X] No Monster Attacks (inCombat) (Metamorphs too, sorry yet)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iEnableNoMonsterATK:
  dd 1
[DISABLE]
iEnableNoMonsterATK:
  dd 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>135</ID>
          <Description>"&lt;= [X] Components / Items"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(ItemsAccess_aob,ffxiiiimg.exe,8B 42 10 89 41 10 8B 45)
aobscanmodule(ItemsWrite1_aob,ffxiiiimg.exe,8B 4D FC 8B 51 10 3B 55 0C)
aobscanmodule(ItemsWrite2_aob,ffxiiiimg.exe,2B 4D 0C 8B 55 FC 89 4A 10)
aobscanmodule(IWJumpMark1_aob,ffxiiiimg.exe,8B 45 FC 8B 48 10 2B 4D 0C)
alloc(newmem,$1000)

label(ItemsAccess_code1)
label(ItemsAccess_code2)
label(ItemsAccess_code3)
label(ItemsAccess_code4)
label(ItemsAccess_return)

label(ItemsWrite1_code1)
label(ItemsWrite1_code2)
label(ItemsWrite1_return)

label(ItemsWrite2_code1)
label(ItemsWrite2_code2)
label(ItemsWrite2_code3)
label(ItemsWrite2_return)

registersymbol(IWJumpMark1_aob)

label(iEnableInfiniteComps)
label(iEnableInfiniteItems)
registersymbol(iEnableInfiniteComps)
registersymbol(iEnableInfiniteItems)

newmem:
iEnableInfiniteComps:
  dd 0
iEnableInfiniteItems:
  dd 0

ItemsAccess_code1:
  cmp [iEnableInfiniteComps],01
  jne ItemsAccess_code2
  cmp [edx],6574616D                        //string "mate"
  je ItemsAccess_code3

ItemsAccess_code2:
  cmp [iEnableInfiniteItems],01
  jne ItemsAccess_code4
  cmp word ptr [edx],7469                   //string "it"
  jne ItemsAccess_code4
  cmp byte ptr [edx+02],5F                  //string "_"
  jne ItemsAccess_code4

ItemsAccess_code3:
  mov [edx+10],63                           //set 99 quantity

ItemsAccess_code4:
  mov eax,[edx+10]                          //original
  mov [ecx+10],eax                          //original
  jmp ItemsAccess_return

ItemsWrite1_code1:
  mov ecx,[ebp-04]                          //original
  mov edx,[ecx+10]                          //original
  cmp [iEnableInfiniteComps],01
  jne ItemsWrite1_code2
  cmp [ecx],6574616D                        //string "mate"
  jne ItemsWrite1_return
  jmp IWJumpMark1_aob

ItemsWrite1_code2:
  cmp [iEnableInfiniteItems],01
  jne ItemsWrite1_return
  cmp word ptr [ecx],7469                   //string "it"
  jne ItemsWrite1_return
  cmp byte ptr [ecx+02],5F                  //string "_"
  jne ItemsWrite1_return
  jmp IWJumpMark1_aob

ItemsWrite2_code1:
cmp [iEnableInfiniteItems],01
je ItemsWrite2_code2
cmp [iEnableInfiniteComps],01
je ItemsWrite2_code2
jmp ItemsWrite2_code3

ItemsWrite2_code2:
  mov edx,[ebp+0C]                          //get value to subtract
  test edx,edx                              //test if value pos / neg
  js ItemsWrite2_code3                      //if value is negativ jmp (something is added)
  mov [ebp+0C],00000000

ItemsWrite2_code3:
  sub ecx,[ebp+0C]                          //original
  mov edx,[ebp-04]                          //original
  jmp ItemsWrite2_return

ItemsAccess_aob:
  jmp ItemsAccess_code1
  db 90
ItemsAccess_return:
registersymbol(ItemsAccess_aob)

ItemsWrite1_aob:
  jmp ItemsWrite1_code1
  db 90
ItemsWrite1_return:
registersymbol(ItemsWrite1_aob)

ItemsWrite2_aob:
  jmp ItemsWrite2_code1
  nop
ItemsWrite2_return:
registersymbol(ItemsWrite2_aob)

[DISABLE]

ItemsAccess_aob:
  db 8B 42 10 89 41 10

ItemsWrite1_aob:
  db 8B 4D FC 8B 51 10

ItemsWrite2_aob:
  db 2B 4D 0C 8B 55 FC

unregistersymbol(iEnableInfiniteComps)
unregistersymbol(iEnableInfiniteItems)
unregistersymbol(ItemsAccess_aob)
unregistersymbol(ItemsWrite1_aob)
unregistersymbol(ItemsWrite2_aob)
unregistersymbol(IWJumpMark1_aob)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>194</ID>
              <Description>"&lt;= [X] Infinite Components"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
iEnableInfiniteComps:
  dd 1
[DISABLE]
iEnableInfiniteComps:
  dd 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>195</ID>
              <Description>"&lt;= [X] Infinite Items"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
iEnableInfiniteItems:
  dd 1
[DISABLE]
iEnableInfiniteItems:
  dd 0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
