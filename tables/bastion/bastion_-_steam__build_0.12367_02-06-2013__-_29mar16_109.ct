<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Infinite Clip"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(searchedAOB,2B 86 80 00 00 00 40 89 85 E8 FE FF)
label(quiver_saved)
registersymbol(quiver_saved)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [esi+00000080],1
sub eax,[esi+00000080]

exit:
jmp returnhere

searchedAOB:
quiver_saved:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
quiver_saved:
sub eax,[esi+00000080]
unregistersymbol(quiver_saved)
//Alt: db 2B 86 80 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Infinite Bottles"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(searchedAOB,8B 42 40 89 45 E4 8B 4E 48 C6 41 78 01)
label(bottle_saved)
registersymbol(bottle_saved)


newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [edx+40],3

originalcode:
mov eax,[edx+40]
mov [ebp-1C],eax

exit:
jmp returnhere

searchedAOB:
bottle_saved:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
bottle_saved:
mov eax,[edx+40]
mov [ebp-1C],eax
//Alt: db 8B 42 40 89 45 E4
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Infinite Health"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(searchedAOB,83 B9 58 02 00 00 00 7E 07 B8 01 00 00 00 EB 02 33 C0 85 C0 75 18 8B 0D)

label(health_saved)
registersymbol(health_saved)

alloc(health_add,4)
registersymbol(health_add)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [health_add],ecx

originalcode:
mov [ecx+00000258],#14
cmp dword ptr [ecx+00000258],00

exit:
jmp returnhere

searchedAOB:
health_saved:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(health_add)
health_saved:
cmp dword ptr [ecx+00000258],00
//Alt: db 83 B9 58 02 00 00 00
unregistersymbol(health_add)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"One Shot Kill"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
aobscan(searchedAOB,83 BE 58 02 00 00 00 7E 07 B8 01 00 00 00 EB 02 33 C0 85 C0 0F 84 24)

label(enemy_saved)
registersymbol(enemy_saved)

alloc(enemy_add,4)
registersymbol(enemy_add)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//mov [enemy_add],esi
cmp dword ptr [esi+00000258],01 //compare enemy health to 1
jle originalcode //jump, if less than or equal to 1, to the original code (do nothing)
mov [esi+00000258],01 //if greater than 1, set to 1 and go to original code

originalcode:
cmp dword ptr [esi+00000258],00


exit:
jmp returnhere

searchedAOB:
enemy_saved:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(health_add)
enemy_saved:
cmp dword ptr [esi+00000258],00
//Alt: db 83 BE 58 02 00 00 00
unregistersymbol(enemy_add)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>saved</Name>
      <Address>0B439E83</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bottle_saved</Name>
      <Address>0AE1868B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>quiver_saved</Name>
      <Address>0AE1823C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health_saved</Name>
      <Address>0B0F44A3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enemy_saved</Name>
      <Address>0B43CA5A</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
