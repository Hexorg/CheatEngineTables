<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Locate AP per turn"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(actionPointsInit,01 02 d0 24 * 68 * * d0 4f)
registersymbol(actionPointsInit)


[DISABLE]
unregistersymbol(actionPointsInit)

{
etproperty Qname(PrivateNamespace(null,"560"),"boardEntityEnabledHandler")
; 4f bc bf 01 02
callpropvoid Qname(Namespace("flash.events:IEventDispatcher"),"addEventListener") 2
; d0
getlocal_0
; 24 02      &lt;-aob and patch
pushbyte 2
; 68 db 7f
initproperty Qname(PackageNamespace(""),"actionPoints")
; d0
getlocal_0
; 4f e4 7f 00
callpropvoid Qname(PrivateNamespace(null,"560"),"cacheInRanges") 0
; 47
returnvoid
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"AP per turn"</Description>
          <LastState Value="??" Activated="0" RealAddress="0C8539AD"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>actionPointsInit+4</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Endless turn"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
EndlessTurnAOB=AOBScan("8b * * 8d * * 89 * * 83 * 00 0F 9E","-W+X")
for i=0,EndlessTurnAOB.Count-1 do
  --print(EndlessTurnAOB[i])
  writeBytes(getAddress(EndlessTurnAOB[i])+6,0x8B)
end
--[[
0D40749F - 53                    - push ebx
0D4074A0 - FF D0                 - call eax
0D4074A2 - 83 C4 10              - add esp,10
0D4074A5 - 8B F0                 - mov esi,eax
0D4074A7 - 8B 85 64FFFFFF        - mov eax,[ebp-0000009C]
0D4074AD - 85 F6                 - test esi,esi
0D4074AF - 0F84 00030000         - je 0D4077B5
0D4074B5 - 8B 5E 5C              - mov ebx,[esi+5C]      &lt;-aob starts here
0D4074B8 - 8D 5B FF              - lea ebx,[ebx-01]
0D4074BB - 89 5E 5C              - mov [esi+5C],ebx      &lt;-we replace with mov ebx,[esi+5C]
0D4074BE - 83 FB 00              - cmp ebx,00
0D4074C1 - 0F9E DB               - setle bl
0D4074C4 - 0FB6 DB               - movzx ebx,bl
0D4074C7 - 89 9D 64FFFFFF        - mov [ebp-0000009C],ebx
0D4074CD - 8B 48 10              - mov ecx,[eax+10]
0D4074D0 - 85 C9                 - test ecx,ecx
]]
{$asm}

[DISABLE]
{$lua}
if EndlessTurnAOB~=nil then
  for i=0,EndlessTurnAOB.Count-1 do
    --print(EndlessTurnAOB[i])
    writeBytes(getAddress(EndlessTurnAOB[i])+6,0x89)
  end
end
--[[
0D40749F - 53                    - push ebx
0D4074A0 - FF D0                 - call eax
0D4074A2 - 83 C4 10              - add esp,10
0D4074A5 - 8B F0                 - mov esi,eax
0D4074A7 - 8B 85 64FFFFFF        - mov eax,[ebp-0000009C]
0D4074AD - 85 F6                 - test esi,esi
0D4074AF - 0F84 00030000         - je 0D4077B5
0D4074B5 - 8B 5E 5C              - mov ebx,[esi+5C]      &lt;-aob starts here
0D4074B8 - 8D 5B FF              - lea ebx,[ebx-01]
0D4074BB - 89 5E 5C              - mov [esi+5C],ebx
0D4074BE - 83 FB 00              - cmp ebx,00
0D4074C1 - 0F9E DB               - setle bl
0D4074C4 - 0FB6 DB               - movzx ebx,bl
0D4074C7 - 89 9D 64FFFFFF        - mov [ebp-0000009C],ebx
0D4074CD - 8B 48 10              - mov ecx,[eax+10]
0D4074D0 - 85 C9                 - test ecx,ecx
]]
{$asm}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>actionPointsInit</Name>
      <Address> 0C8539A9</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
