<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"resources"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(derp)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
mov ebx,[eax]
mov ebx,[ebx]
mov ebx,[ebx+8]
mov [derp],ebx
pop ebx
cmp [derp],(int)2
jne originalcode
mov [eax+0C],ebx
mov [eax+0C],(int)10000
mov [eax+14],dl
jmp returnhere

derp:
dd 0

originalcode:
mov [eax+0C],ebx
mov [eax+14],dl

exit:
jmp returnhere

"InstanceServerG.exe"+2B0C0F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"InstanceServerG.exe"+2B0C0F:
mov [eax+0C],ebx
mov [eax+14],dl
//Alt: db 89 58 0C 88 50 14
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"population"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(dirt)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
mov ebx,[edi+4]
mov ebx,[ebx+14]
mov ebx,[ebx]
mov [dirt],ebx
pop ebx
cmp [dirt],(int)1095587144
jne originalcode
mov [edi+14],(int)0
mov edi,[edi+14]
mov edx,[esi]
jmp returnhere

dirt:
dd 0

originalcode:
mov edi,[edi+14]
mov edx,[esi]

exit:
jmp returnhere

"InstanceServerG.exe"+98D5F:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"InstanceServerG.exe"+98D5F:
mov edi,[edi+14]
mov edx,[esi]
//Alt: db 8B 7F 14 8B 16
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"instant build buildings"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(dero)
registersymbol(dero)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
mov ebx,[esi+8]
mov ebx,[ebx+68]
mov ebx,[ebx+64]
mov ebx,[ebx+D8]
mov [dero],ebx
pop ebx
cmp [dero],(int)3
jne originalcode
mov [esi+28],(int)9999999
cmp [esi+28],eax
jl InstanceServerG.exe+2A393E
jmp returnhere

dero:
dd 0

originalcode:
cmp [esi+28],eax
jl InstanceServerG.exe+2A393E

exit:
jmp returnhere

"InstanceServerG.exe"+2A38B4:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"InstanceServerG.exe"+2A38B4:
cmp [esi+28],eax
jl InstanceServerG.exe+2A393E
//Alt: db 39 46 28 0F 8C 81 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"instabuild"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : InstanceServerG.exe
  Version: 
  Date   : 2015-03-26
  Author : ShakUUU

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT,InstanceServerG.exe,FF 47 20 56 57) // should be unique
alloc(newmem,$1000)

label(code)
label(deri)
label(return)

newmem:
push ebx
mov ebx,[edi+2c]
mov ebx,[ebx+68]
mov ebx,[ebx+64]
mov ebx,[ebx+48]
mov [deri],ebx
pop ebx
cmp [deri],(int)17
jne code
inc [edi+20]
inc [edi+20]
inc [edi+20]
push esi
push edi
jmp return

deri:
dd 0

code:
  inc [edi+20]
  push esi
  push edi
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db FF 47 20 56 57

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "InstanceServerG.exe"+1CE40B

"InstanceServerG.exe"+1CE3F3: 83 EC 08           -  sub esp,08
"InstanceServerG.exe"+1CE3F6: 53                 -  push ebx
"InstanceServerG.exe"+1CE3F7: 57                 -  push edi
"InstanceServerG.exe"+1CE3F8: 8B F9              -  mov edi,ecx
"InstanceServerG.exe"+1CE3FA: 8B 4F 2C           -  mov ecx,[edi+2C]
"InstanceServerG.exe"+1CE3FD: E8 5E DB FF FF     -  call InstanceServerG.exe+1CBF60
"InstanceServerG.exe"+1CE402: 8B D8              -  mov ebx,eax
"InstanceServerG.exe"+1CE404: 89 5D F8           -  mov [ebp-08],ebx
"InstanceServerG.exe"+1CE407: 85 DB              -  test ebx,ebx
"InstanceServerG.exe"+1CE409: 74 77              -  je InstanceServerG.exe+1CE482
// ---------- INJECTING HERE ----------
"InstanceServerG.exe"+1CE40B: FF 47 20           -  inc [edi+20]
"InstanceServerG.exe"+1CE40E: 56                 -  push esi
"InstanceServerG.exe"+1CE40F: 57                 -  push edi
// ---------- DONE INJECTING  ----------
"InstanceServerG.exe"+1CE410: 8B CB              -  mov ecx,ebx
"InstanceServerG.exe"+1CE412: E8 39 CB 9D 00     -  call InstanceServerG.exe+BAAF50
"InstanceServerG.exe"+1CE417: 6A 0C              -  push 0C
"InstanceServerG.exe"+1CE419: 89 45 FC           -  mov [ebp-04],eax
"InstanceServerG.exe"+1CE41C: E8 8F 53 30 00     -  call InstanceServerG.exe+4D37B0
"InstanceServerG.exe"+1CE421: 8B F0              -  mov esi,eax
"InstanceServerG.exe"+1CE423: 83 C4 04           -  add esp,04
"InstanceServerG.exe"+1CE426: 85 F6              -  test esi,esi
"InstanceServerG.exe"+1CE428: 74 46              -  je InstanceServerG.exe+1CE470
"InstanceServerG.exe"+1CE42A: 8B 5F 2C           -  mov ebx,[edi+2C]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"amoo"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : InstanceServerG.exe
  Version: 
  Date   : 2015-03-26
  Author : ShakUUU

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT,InstanceServerG.exe,83 BE 30 14 00 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp dword ptr [esi+00001430],00
  mov dword ptr [esi+00001430],ffff
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db 83 BE 30 14 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "InstanceServerG.exe"+BB6B80

"InstanceServerG.exe"+BB6B6B: 5D                    -  pop ebp
"InstanceServerG.exe"+BB6B6C: C2 08 00              -  ret 0008
"InstanceServerG.exe"+BB6B6F: CC                    -  int 3 
"InstanceServerG.exe"+BB6B70: 55                    -  push ebp
"InstanceServerG.exe"+BB6B71: 8B EC                 -  mov ebp,esp
"InstanceServerG.exe"+BB6B73: 51                    -  push ecx
"InstanceServerG.exe"+BB6B74: 56                    -  push esi
"InstanceServerG.exe"+BB6B75: 8B F1                 -  mov esi,ecx
"InstanceServerG.exe"+BB6B77: 83 BE 34 14 00 00 00  -  cmp dword ptr [esi+00001434],00
"InstanceServerG.exe"+BB6B7E: 76 12                 -  jna InstanceServerG.exe+BB6B92
// ---------- INJECTING HERE ----------
"InstanceServerG.exe"+BB6B80: 83 BE 30 14 00 00 00  -  cmp dword ptr [esi+00001430],00
// ---------- DONE INJECTING  ----------
"InstanceServerG.exe"+BB6B87: 75 09                 -  jne InstanceServerG.exe+BB6B92
"InstanceServerG.exe"+BB6B89: 32 C0                 -  xor al,al
"InstanceServerG.exe"+BB6B8B: 5E                    -  pop esi
"InstanceServerG.exe"+BB6B8C: 8B E5                 -  mov esp,ebp
"InstanceServerG.exe"+BB6B8E: 5D                    -  pop ebp
"InstanceServerG.exe"+BB6B8F: C2 04 00              -  ret 0004
"InstanceServerG.exe"+BB6B92: 8B 46 04              -  mov eax,[esi+04]
"InstanceServerG.exe"+BB6B95: 53                    -  push ebx
"InstanceServerG.exe"+BB6B96: 8B 5D 08              -  mov ebx,[ebp+08]
"InstanceServerG.exe"+BB6B99: 3B 58 5C              -  cmp ebx,[eax+5C]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"infinite goo~!"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : InstanceServerG.exe
  Version: 
  Date   : 2015-03-27
  Author : ShakUUU

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT,InstanceServerG.exe,F3 0F 11 86 98 00 00 00 F3 0F 58) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+00000098],(float)1300
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db F3 0F 11 86 98 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "InstanceServerG.exe"+2B53A7

"InstanceServerG.exe"+2B5376: 8B 7D F4                 -  mov edi,[ebp-0C]
"InstanceServerG.exe"+2B5379: 80 BE 9C 00 00 00 00     -  cmp byte ptr [esi+0000009C],00
"InstanceServerG.exe"+2B5380: 74 18                    -  je InstanceServerG.exe+2B539A
"InstanceServerG.exe"+2B5382: 8B CE                    -  mov ecx,esi
"InstanceServerG.exe"+2B5384: C6 86 9C 00 00 00 00     -  mov byte ptr [esi+0000009C],00
"InstanceServerG.exe"+2B538B: E8 60 86 72 00           -  call InstanceServerG.exe+9DD9F0
"InstanceServerG.exe"+2B5390: F3 0F 10 4D E0           -  movss xmm1,[ebp-20]
"InstanceServerG.exe"+2B5395: F3 0F 10 55 E8           -  movss xmm2,[ebp-18]
"InstanceServerG.exe"+2B539A: F3 0F 10 86 98 00 00 00  -  movss xmm0,[esi+00000098]
"InstanceServerG.exe"+2B53A2: F3 0F 58 45 EC           -  addss xmm0,[ebp-14]
// ---------- INJECTING HERE ----------
"InstanceServerG.exe"+2B53A7: F3 0F 11 86 98 00 00 00  -  movss [esi+00000098],xmm0
// ---------- DONE INJECTING  ----------
"InstanceServerG.exe"+2B53AF: F3 0F 58 C2              -  addss xmm0,xmm2
"InstanceServerG.exe"+2B53B3: 0F 2F C1                 -  comiss xmm0,xmm1
"InstanceServerG.exe"+2B53B6: 76 0C                    -  jna InstanceServerG.exe+2B53C4
"InstanceServerG.exe"+2B53B8: F3 0F 5C CA              -  subss xmm1,xmm2
"InstanceServerG.exe"+2B53BC: F3 0F 11 8E 98 00 00 00  -  movss [esi+00000098],xmm1
"InstanceServerG.exe"+2B53C4: F3 0F 10 86 98 00 00 00  -  movss xmm0,[esi+00000098]
"InstanceServerG.exe"+2B53CC: 0F 2F 05 AC 45 16 01     -  comiss xmm0,[InstanceServerG.exe+D645AC]
"InstanceServerG.exe"+2B53D3: F3 0F 11 45 F4           -  movss [ebp-0C],xmm0
"InstanceServerG.exe"+2B53D8: 0F 86 65 01 00 00        -  jbe InstanceServerG.exe+2B5543
"InstanceServerG.exe"+2B53DE: 8B 56 04                 -  mov edx,[esi+04]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
