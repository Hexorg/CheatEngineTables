<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>1149</ID>
      <Description>"                                                                           Presentation Mode "</Description>
      <LastState/>
      <Color>FF8000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
LuaCall(function cycleFullCompact(sender,force) local state = not(compactmenuitem.Caption == 'Compact View Mode'); if force~=nil then state = not force end; compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'; getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible    = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem); compactmenuitem.Caption = 'Compact View Mode'; compactmenuitem.OnClick = cycleFullCompact; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true))


{$lua}
getAddressList().Component[0].Color = "0x00323232"
getAddressList().Component[0].BackgroundColor = "0x00323232"
{$asm}



[DISABLE]
LuaCall(cycleFullCompact(nil,false))


{$lua}
getAddressList().Component[0].Color = "0x00ffffff"
getAddressList().Component[0].BackgroundColor = "0x00ffffff"
{$asm}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2695</ID>
      <Description>"Full Fucking Blown Damage Manager"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>F863D2</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2696</ID>
          <Description>"Damage   Taken   Manager"</Description>
          <Options moHideChildren="1" moManualExpandCollapse="1"/>
          <LastState/>
          <Color>FFFFFF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version:
  Date   : 2016-03-05
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Natural_Aspirated_Damage_Manager_ret,gamedll_x64_rwdi.dll,44 0F 28 44 24 20 F3 0F 11 83 54) // should be unique
alloc(Newmem_NADM,$1000,"gamedll_x64_rwdi.dll"+AAED71)

label(Code_NADM)
label(Return_NADM)
label(Math_Start)
alloc(MiniD_Adjust,32)
registersymbol(MiniD_Adjust)

MiniD_Adjust+C:
dd (float)100

MiniD_Adjust:
dd (float)-1

MiniD_Adjust+18:            // comiss for health boost
dd (float)-0.000001




Newmem_NADM:

Code_NADM:
//  movss [MiniD_Adjust],xmm0
  movaps xmm8,[rsp+20]
  movss xmm14,[rbx+00000954]
  mov [MiniD_Adjust+10],rbx
  movss xmm15,xmm14
   jmp Math_Start

Math_Start:
  subss xmm14,xmm0
  movss [MiniD_Adjust+4],xmm14            // Damage Taken

   movss xmm13,[MiniD_Adjust+18]
    comiss xmm14,xmm13                   // chgeck for heal
     jb Return_NADM

  mulss xmm14,[MiniD_Adjust]

  movss [MiniD_Adjust+8],xmm14             // Damage Adjusted
  subss xmm15,xmm14
  movss xmm0,xmm15

   movss xmm13,[MiniD_Adjust+C]   // This is max health
    comiss xmm15,xmm13
     ja Max_Health

  jmp Return_NADM

Max_Health:
  movss xmm0,xmm13
  jmp Return_NADM

Natural_Aspirated_Damage_Manager_ret:
  jmp Code_NADM
  nop
Return_NADM:
registersymbol(Natural_Aspirated_Damage_Manager_ret)



//////////////////////Max Health Grab

aobscanmodule(Max_Health_MiniD_ret,gamedll_x64_rwdi.dll,0F 2F 86 1C 12 00 00) // should be unique
alloc(Newmem_Grab_Max,$1000,"gamedll_x64_rwdi.dll"+AB2315)

label(Code_Grab_Max)
label(Return_Grab_Max)

Newmem_Grab_Max:

Code_Grab_Max:
  movss [MiniD_Adjust+c],xmm0
  comiss xmm0,[rsi+0000121C]
  jmp Return_Grab_Max

Max_Health_MiniD_ret:
  jmp Code_Grab_Max
  nop
  nop
Return_Grab_Max:
registersymbol(Max_Health_MiniD_ret)

[DISABLE]

Natural_Aspirated_Damage_Manager_ret:
  db 44 0F 28 44 24 20

unregistersymbol(Natural_Aspirated_Damage_Manager_ret)
dealloc(Newmem_NADM)

Max_Health_MiniD_ret:
  db 0F 2F 86 1C 12 00 00

unregistersymbol(Max_Health_MiniD_ret)
dealloc(Newmem_Grab_Max)

dealloc(MiniD_Adjust)
unregistersymbol(MiniD_Adjust)

{
// ORIGINAL Code_NADM - INJECTION POINT: "gamedll_x64_rwdi.dll"+AAED71

"gamedll_x64_rwdi.dll"+AAED53: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AAED56: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAED59: FF 90 48 01 00 00        -  call qword ptr [rax+00000148]
"gamedll_x64_rwdi.dll"+AAED5F: 0F 2F F7                 -  comiss xmm6,xmm7
"gamedll_x64_rwdi.dll"+AAED62: 73 05                    -  jae gamedll_x64_rwdi.dll+AAED69
"gamedll_x64_rwdi.dll"+AAED64: 0F 28 C7                 -  movaps xmm0,xmm7
"gamedll_x64_rwdi.dll"+AAED67: EB 08                    -  jmp gamedll_x64_rwdi.dll+AAED71
"gamedll_x64_rwdi.dll"+AAED69: 0F 2F F0                 -  comiss xmm6,xmm0
"gamedll_x64_rwdi.dll"+AAED6C: 77 03                    -  ja gamedll_x64_rwdi.dll+AAED71
"gamedll_x64_rwdi.dll"+AAED6E: 0F 28 C6                 -  movaps xmm0,xmm6
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AAED71: 44 0F 28 44 24 20        -  movaps xmm8,[rsp+20]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AAED77: F3 0F 11 83 54 09 00 00  -  movss [rbx+00000954],xmm0
"gamedll_x64_rwdi.dll"+AAED7F: 40 84 F6                 -  test sil,sil
"gamedll_x64_rwdi.dll"+AAED82: 74 15                    -  je gamedll_x64_rwdi.dll+AAED99
"gamedll_x64_rwdi.dll"+AAED84: 0F 2F F8                 -  comiss xmm7,xmm0
"gamedll_x64_rwdi.dll"+AAED87: 72 10                    -  jb gamedll_x64_rwdi.dll+AAED99
"gamedll_x64_rwdi.dll"+AAED89: 41 B1 01                 -  mov cl,01
"gamedll_x64_rwdi.dll"+AAED8C: 45 33 C0                 -  xor r8d,r8d
"gamedll_x64_rwdi.dll"+AAED8F: 33 D2                    -  xor edx,edx
"gamedll_x64_rwdi.dll"+AAED91: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAED94: E8 37 5C FF FF           -  call gamedll_x64_rwdi.dll+AA49D0
}


{
// ORIGINAL Code_Grab_Max - INJECTION POINT: "gamedll_x64_rwdi.dll"+AB2315

"gamedll_x64_rwdi.dll"+AB22FC: CC                             -  int 3
"gamedll_x64_rwdi.dll"+AB22FD: CC                             -  int 3
"gamedll_x64_rwdi.dll"+AB22FE: CC                             -  int 3
"gamedll_x64_rwdi.dll"+AB22FF: CC                             -  int 3
"gamedll_x64_rwdi.dll"+AB2300: 40 56                          -  push rsi
"gamedll_x64_rwdi.dll"+AB2302: 48 83 EC 20                    -  sub rsp,20
"gamedll_x64_rwdi.dll"+AB2306: 48 8B 01                       -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+AB2309: 83 CA FF                       -  or edx,-01
"gamedll_x64_rwdi.dll"+AB230C: 48 8B F1                       -  mov rsi,rcx
"gamedll_x64_rwdi.dll"+AB230F: FF 90 48 01 00 00              -  call qword ptr [rax+00000148]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AB2315: 0F 2F 86 1C 12 00 00           -  comiss xmm0,[rsi+0000121C]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AB231C: 73 3A                          -  jae gamedll_x64_rwdi.dll+AB2358
"gamedll_x64_rwdi.dll"+AB231E: 48 8B 06                       -  mov rax,[rsi]
"gamedll_x64_rwdi.dll"+AB2321: 48 89 5C 24 30                 -  mov [rsp+30],rbx
"gamedll_x64_rwdi.dll"+AB2326: 83 CA FF                       -  or edx,-01
"gamedll_x64_rwdi.dll"+AB2329: 48 8B CE                       -  mov rcx,rsi
"gamedll_x64_rwdi.dll"+AB232C: 48 89 7C 24 38                 -  mov [rsp+38],rdi
"gamedll_x64_rwdi.dll"+AB2331: 48 8B BE C8 08 00 00           -  mov rdi,[rsi+000008C8]
"gamedll_x64_rwdi.dll"+AB2338: FF 90 48 01 00 00              -  call qword ptr [rax+00000148]
"gamedll_x64_rwdi.dll"+AB233E: 48 8D 8E C8 08 00 00           -  lea rcx,[rsi+000008C8]
"gamedll_x64_rwdi.dll"+AB2345: 45 33 C0                       -  xor r8d,r8d
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2697</ID>
              <Description>"Taken Damage Adjust           ---&gt;"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:God Mode
0.5: Half Damage
.1:1/10 Damage
-1:Damage Heals
</DropDownList>
              <Color>01BBF1</Color>
              <VariableType>Float</VariableType>
              <Address>MiniD_Adjust</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>11391</ID>
                  <Description>"Show Stats"</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>C0C0C0</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2681</ID>
                      <Description>"Damage Taken"</Description>
                      <Color>A3C9DA</Color>
                      <VariableType>Float</VariableType>
                      <Address>MiniD_Adjust+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2682</ID>
                      <Description>"Damage Taken Adjusted"</Description>
                      <Color>F764F7</Color>
                      <VariableType>Float</VariableType>
                      <Address>MiniD_Adjust+8</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11369</ID>
          <Description>"Damage   Given   Manager"</Description>
          <Options moHideChildren="1" moManualExpandCollapse="1"/>
          <LastState/>
          <Color>FFFFFF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version:
  Date   : 2016-03-08
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(Player_Start_Again_ret,gamedll_x64_rwdi.dll,F3 0F 11 83 E0 00 00 00 48 8B 01) // should be unique
alloc(Newmem_Grab_Player,$1000,"gamedll_x64_rwdi.dll"+AA09B2)

label(Code_Grab_Player)
label(Return_Grab_Player)

alloc(Player_Start,8)
registersymbol(Player_Start)

Newmem_Grab_Player:

Code_Grab_Player:
  mov [Player_Start],rsi
  movss [rbx+000000E0],xmm0
  jmp Return_Grab_Player

Player_Start_Again_ret:
  jmp Code_Grab_Player
  nop
  nop
  nop
Return_Grab_Player:
registersymbol(Player_Start_Again_ret)

//////////// Dmage Manager/////////////

aobscanmodule(GIVETH_DAMAGE_ret,gamedll_x64_rwdi.dll,F3 0F 5C CE F3 41 0F 11 4F 7C) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+2142A5)

label(code)
label(return)

label(Kill_Zombie)
label(Damage_Zombie)

alloc(Damage_Giveth,64)
registersymbol(Damage_Giveth)

Damage_Giveth:
dd (float)2



Damage_Giveth+18:
dd (float)0.0001

newmem:

check:

//jmp code
  cmp  rsi,[Player_Start]
   je code
    jmp Damage_Zombie

code:
  mov [Damage_Giveth+20],r15
  movss [Damage_Giveth+4],xmm1
  movss [Damage_Giveth+8],xmm0
  movss [Damage_Giveth+10],xmm6
  mulss xmm6,[Damage_Giveth]
  addss xmm6,[Damage_Giveth+18]       // 1 hit point to ensure Kill
  movss [Damage_Giveth+14],xmm6
   comiss xmm6,xmm1
    ja Kill_Zombie
      jmp Damage_Zombie

Kill_Zombie:
  subss xmm1,xmm1
  movss [r15+78],xmm1
      jmp return

Damage_Zombie:
  subss xmm1,xmm6
  movss [r15+7C],xmm1
  jmp return

GIVETH_DAMAGE_ret:
  jmp check
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(GIVETH_DAMAGE_ret)



//////////////////////////////////////////////////////






[DISABLE]


GIVETH_DAMAGE_ret:
  db F3 0F 5C CE F3 41 0F 11 4F 7C

unregistersymbol(GIVETH_DAMAGE_ret)
dealloc(newmem)

dealloc(Damage_Giveth)
unregistersymbol(Damage_Giveth)

Player_Start_Again_ret:
  db F3 0F 11 83 E0 00 00 00

unregistersymbol(Player_Start_Again_ret)
dealloc(Newmem_Grab_Player)


dealloc(Player_Start)
unregistersymbol(Player_Start)




{
// ORIGINAL Code_Grab_Player - INJECTION POINT: "gamedll_x64_rwdi.dll"+AB363A

"gamedll_x64_rwdi.dll"+AB3612: FF 90 F0 08 00 00        -  call qword ptr [rax+000008F0]
"gamedll_x64_rwdi.dll"+AB3618: 84 C0                    -  test al,al
"gamedll_x64_rwdi.dll"+AB361A: 74 6B                    -  je gamedll_x64_rwdi.dll+AB3687
"gamedll_x64_rwdi.dll"+AB361C: 48 39 9F 68 09 00 00     -  cmp [rdi+00000968],rbx
"gamedll_x64_rwdi.dll"+AB3623: 74 09                    -  je gamedll_x64_rwdi.dll+AB362E
"gamedll_x64_rwdi.dll"+AB3625: 48 8B 87 70 09 00 00     -  mov rax,[rdi+00000970]
"gamedll_x64_rwdi.dll"+AB362C: EB 03                    -  jmp gamedll_x64_rwdi.dll+AB3631
"gamedll_x64_rwdi.dll"+AB362E: 48 8B C3                 -  mov rax,rbx
"gamedll_x64_rwdi.dll"+AB3631: 48 39 98 68 05 00 00     -  cmp [rax+00000568],rbx
"gamedll_x64_rwdi.dll"+AB3638: 74 07                    -  je gamedll_x64_rwdi.dll+AB3641
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AB363A: 48 8B 98 70 05 00 00     -  mov rbx,[rax+00000570]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AB3641: 48 8B CE                 -  mov rcx,rsi
"gamedll_x64_rwdi.dll"+AB3644: E8 07 ED 02 00           -  call gamedll_x64_rwdi.dll+AE2350
"gamedll_x64_rwdi.dll"+AB3649: 84 C0                    -  test al,al
"gamedll_x64_rwdi.dll"+AB364B: 74 3A                    -  je gamedll_x64_rwdi.dll+AB3687
"gamedll_x64_rwdi.dll"+AB364D: 48 85 DB                 -  test rbx,rbx
"gamedll_x64_rwdi.dll"+AB3650: 0F 84 C7 00 00 00        -  je gamedll_x64_rwdi.dll+AB371D
"gamedll_x64_rwdi.dll"+AB3656: 48 8B 43 28              -  mov rax,[rbx+28]
"gamedll_x64_rwdi.dll"+AB365A: 48 8D 4B 28              -  lea rcx,[rbx+28]
"gamedll_x64_rwdi.dll"+AB365E: FF 90 80 06 00 00        -  call qword ptr [rax+00000680]
"gamedll_x64_rwdi.dll"+AB3664: 84 C0                    -  test al,al
}


{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AA09B2

"gamedll_x64_rwdi.dll"+AA098A: 44 0F 29 50 88           -  movaps [rax-78],xmm10
"gamedll_x64_rwdi.dll"+AA098F: 48 8B F1                 -  mov rsi,rcx
"gamedll_x64_rwdi.dll"+AA0992: 44 0F 28 D1              -  movaps xmm10,xmm1
"gamedll_x64_rwdi.dll"+AA0996: 48 85 DB                 -  test rbx,rbx
"gamedll_x64_rwdi.dll"+AA0999: 74 61                    -  je gamedll_x64_rwdi.dll+AA09FC
"gamedll_x64_rwdi.dll"+AA099B: 80 79 50 00              -  cmp byte ptr [rcx+50],00
"gamedll_x64_rwdi.dll"+AA099F: 74 5B                    -  je gamedll_x64_rwdi.dll+AA09FC
"gamedll_x64_rwdi.dll"+AA09A1: F3 0F 10 83 E0 00 00 00  -  movss xmm0,[rbx+000000E0]
"gamedll_x64_rwdi.dll"+AA09A9: 48 8B 4B 18              -  mov rcx,[rbx+18]
"gamedll_x64_rwdi.dll"+AA09AD: F3 41 0F 5C C2           -  subss xmm0,xmm10
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AA09B2: F3 0F 11 83 E0 00 00 00  -  movss [rbx+000000E0],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AA09BA: 48 8B 01                 -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+AA09BD: FF 90 28 01 00 00        -  call qword ptr [rax+00000128]
"gamedll_x64_rwdi.dll"+AA09C3: 84 C0                    -  test al,al
"gamedll_x64_rwdi.dll"+AA09C5: 75 2D                    -  jne gamedll_x64_rwdi.dll+AA09F4
"gamedll_x64_rwdi.dll"+AA09C7: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+AA09CA: E8 E1 40 0F 00           -  call gamedll_x64_rwdi.dll+B94AB0
"gamedll_x64_rwdi.dll"+AA09CF: 4C 8B 5B 18              -  mov r11,[rbx+18]
"gamedll_x64_rwdi.dll"+AA09D3: F3 0F 10 05 7D B2 92 00  -  movss xmm0,[gamedll_x64_rwdi.dll+13CBC58]
"gamedll_x64_rwdi.dll"+AA09DB: 41 0F 2F 83 C4 11 00 00  -  comiss xmm0,[r11+000011C4]
"gamedll_x64_rwdi.dll"+AA09E3: 73 0F                    -  jae gamedll_x64_rwdi.dll+AA09F4
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>11351</ID>
              <Description>"Dealt Damage Adjust             ---&gt;"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0.5:Half Damage
1:Normal Damage
2:Double Damage
10000: One Hit Kill
</DropDownList>
              <Color>0093F4</Color>
              <VariableType>Float</VariableType>
              <Address>Damage_Giveth</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>11390</ID>
                  <Description>"Show Stats"</Description>
                  <Options moHideChildren="1" moManualExpandCollapse="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>C0C0C0</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11354</ID>
                      <Description>"Damage Giveth"</Description>
                      <Color>9BE3D5</Color>
                      <VariableType>Float</VariableType>
                      <Address>Damage_Giveth+10</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11355</ID>
                      <Description>"Damage Giveth Adjusted"</Description>
                      <Color>9E8FEF</Color>
                      <VariableType>Float</VariableType>
                      <Address>Damage_Giveth+14</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>11370</ID>
                          <Description>"Show Extra Stats"</Description>
                          <Options moHideChildren="1" moManualExpandCollapse="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>C0C0C0</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>11388</ID>
                              <Description>"Player_Start"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <VariableType>8 Bytes</VariableType>
                              <Address>Player_Start</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>11352</ID>
                              <Description>"Enemy Current Health"</Description>
                              <Color>C5A770</Color>
                              <VariableType>Float</VariableType>
                              <Address>Damage_Giveth+4</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>11353</ID>
                              <Description>"Enemy Max Health"</Description>
                              <Color>7BB983</Color>
                              <VariableType>Float</VariableType>
                              <Address>Damage_Giveth+8</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>11359</ID>
                              <Description>"Enemy Pointer"</Description>
                              <ShowAsHex>1</ShowAsHex>
                              <Color>C0C0C0</Color>
                              <VariableType>8 Bytes</VariableType>
                              <Address>Damage_Giveth+20</Address>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>11360</ID>
                                  <Description>"Enemy Health Game Based"</Description>
                                  <Color>C0C0C0</Color>
                                  <VariableType>Float</VariableType>
                                  <Address>Damage_Giveth+20</Address>
                                  <Offsets>
                                    <Offset>7C</Offset>
                                  </Offsets>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>11371</ID>
                                  <Description>"Enemy Health Game Based"</Description>
                                  <Color>C0C0C0</Color>
                                  <VariableType>Float</VariableType>
                                  <Address>Damage_Giveth+20</Address>
                                  <Offsets>
                                    <Offset>78</Offset>
                                  </Offsets>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2689</ID>
      <Description>"Simple Time of Day Adjuster"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState/>
      <Color>FFF580</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DyingLightGame.exe
  Version:
  Date   : 2016-03-02
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]
{$lua}
beep()
{$asm}



aobscanmodule(Time_of_Day_Adjuster_ret ,gamedll_x64_rwdi.dll,F3 0F 59 F7 F3 0F 58 B7 A4 00 00 00) // should be unique
alloc(newmem,$100,"gamedll_x64_rwdi.dll"+3929B7)

label(code)
label(return)

alloc(Time_Variables,48)
registersymbol(Time_Variables)

alloc(Sky_Pointer,48)
registersymbol(Sky_Pointer)

alloc(TOD2,8)
registersymbol(TOD2)

TOD2+4:
dd (float)24






newmem:

code:
  mov [Sky_Pointer],rdi

  movss [Time_Variables],xmm0
  movss [Time_Variables+4],xmm6
  movss xmm6,[Time_Variables+4]
  movss [Time_Variables+8],xmm7
  movss xmm7,[Time_Variables+8]
  mulss xmm6,xmm7
  addss xmm6,[rdi+000000A4]
  movss [Time_Variables+C],xmm6
  mulss Xmm6,[TOD2+4]      // Current Time in Real CLock
  cmp [TOD2],1
  je Flag_Out
  mov [TOD2],1
  movss [Time_Variables+10],xmm6
  divss xmm6,[TOD2+4]
  jmp return

Flag_Out:
  movss xmm6,[Time_Variables+10]   //24 hour cycle
  divss xmm6,[TOD2+4]
  //movss xmm6,[Time_Variables+10]
  // Dawn is .25
  // Fuck This I will fix this script later

  jmp return

Time_of_Day_Adjuster_ret :
  jmp code
  nop
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(Time_of_Day_Adjuster_ret )

[DISABLE]

Time_of_Day_Adjuster_ret :
  db F3 0F 59 F7 F3 0F 58 B7 A4 00 00 00

unregistersymbol(Time_of_Day_Adjuster_ret )
dealloc(newmem)

dealloc(Time_Variables)
unregistersymbol(Time_Variables)

dealloc(Sky_Pointer)
unregistersymbol(Sky_Pointer)

dealloc(TOD2)
unregistersymbol(TOD2)


{$lua}
beep()
{$asm}



{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+3929B7

"gamedll_x64_rwdi.dll"+392993: 0F 28 7C 24 30           -  movaps xmm7,[rsp+30]
"gamedll_x64_rwdi.dll"+392998: 48 8B 6C 24 78           -  mov rbp,[rsp+78]
"gamedll_x64_rwdi.dll"+39299D: 48 83 C4 50              -  add rsp,50
"gamedll_x64_rwdi.dll"+3929A1: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+3929A2: C3                       -  ret
"gamedll_x64_rwdi.dll"+3929A3: 39 AF E0 00 00 00        -  cmp [rdi+000000E0],ebp
"gamedll_x64_rwdi.dll"+3929A9: 75 E3                    -  jne gamedll_x64_rwdi.dll+39298E
"gamedll_x64_rwdi.dll"+3929AB: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+3929AE: E8 2D 01 00 00           -  call gamedll_x64_rwdi.dll+392AE0
"gamedll_x64_rwdi.dll"+3929B3: F3 0F 5E F0              -  divss xmm6,xmm0
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+3929B7: F3 0F 59 F7              -  mulss xmm6,xmm7
"gamedll_x64_rwdi.dll"+3929BB: F3 0F 58 B7 A4 00 00 00  -  addss xmm6,[rdi+000000A4]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+3929C3: F3 0F 11 B7 A4 00 00 00  -  movss [rdi+000000A4],xmm6
"gamedll_x64_rwdi.dll"+3929CB: EB C1                    -  jmp gamedll_x64_rwdi.dll+39298E
"gamedll_x64_rwdi.dll"+3929CD: 33 ED                    -  xor ebp,ebp
"gamedll_x64_rwdi.dll"+3929CF: 89 AF A8 00 00 00        -  mov [rdi+000000A8],ebp
"gamedll_x64_rwdi.dll"+3929D5: 48 8B 6C 24 78           -  mov rbp,[rsp+78]
"gamedll_x64_rwdi.dll"+3929DA: 48 83 C4 50              -  add rsp,50
"gamedll_x64_rwdi.dll"+3929DE: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+3929DF: C3                       -  ret
"gamedll_x64_rwdi.dll"+3929E0: 40 57                    -  push rdi
"gamedll_x64_rwdi.dll"+3929E2: 48 83 EC 40              -  sub rsp,40
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>68</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>2694</ID>
          <Description>" Time  ( Ctrl + up and down arrows = 1 hour )"</Description>
          <Color>943CC8</Color>
          <VariableType>Float</VariableType>
          <Address>Time_Variables+10</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>38</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Decrease Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>40</Key>
              </Keys>
              <Value>1</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1236</ID>
      <Description>"Indestructible Weapons"</Description>
      <LastState/>
      <Color>00FFFF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

//Indestructible Weapons
aobscanmodule(iw_aob1,gamedll_x64_rwdi.dll,0F 2F F0 76 11 48 8B 47 18)
registersymbol(iw_aob1)

iw_aob1+3:
db 90 90


[DISABLE]

iw_aob1+3:
db 76 11
unregistersymbol(iw_aob1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2661</ID>
      <Description>"Ammo"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>C0C0C0</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2658</ID>
          <Description>"Current Weapon Ammo"</Description>
          <LastState/>
          <Color>5BFFD7</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-03
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat


 
 
aobscanmodule(Clip_Ammo_ret,gamedll_x64_rwdi.dll,8B 53 04 48 83 C1 40) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BDF4E0)

label(code)
label(return)
alloc(Clip_Hit,8)
registersymbol(Clip_Hit)

newmem:

code:
  mov [Clip_Hit],rbx
  mov edx,[rbx+04]
  add rcx,40
  jmp return

Clip_Ammo_ret:
  jmp code
  nop
  nop
return:
registersymbol(Clip_Ammo_ret)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Clip_Ammo_ret:
  db 8B 53 04 48 83 C1 40

unregistersymbol(Clip_Ammo_ret)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+BDF4E0

"gamedll_x64_rwdi.dll"+BDF4AA: 48 89 7B 08                          -  mov [rbx+08],rdi
"gamedll_x64_rwdi.dll"+BDF4AE: 48 89 44 24 38                       -  mov [rsp+38],rax
"gamedll_x64_rwdi.dll"+BDF4B3: 48 85 C9                             -  test rcx,rcx
"gamedll_x64_rwdi.dll"+BDF4B6: 74 05                                -  je gamedll_x64_rwdi.dll+BDF4BD
"gamedll_x64_rwdi.dll"+BDF4B8: E8 23 28 AB FF                       -  call gamedll_x64_rwdi.dll+691CE0
"gamedll_x64_rwdi.dll"+BDF4BD: 48 8B 4C 24 68                       -  mov rcx,[rsp+68]
"gamedll_x64_rwdi.dll"+BDF4C2: 48 C7 84 24 80 00 00 00 00 00 00 00  -  mov [rsp+00000080],00000000
"gamedll_x64_rwdi.dll"+BDF4CE: C7 44 24 70 00 00 00 00              -  mov [rsp+70],00000000
"gamedll_x64_rwdi.dll"+BDF4D6: FF 15 84 FF 73 00                    -  call qword ptr [gamedll_x64_rwdi.dll+131F460]
"gamedll_x64_rwdi.dll"+BDF4DC: 48 8B 4B 08                          -  mov rcx,[rbx+08]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+BDF4E0: 8B 53 04                             -  mov edx,[rbx+04]
"gamedll_x64_rwdi.dll"+BDF4E3: 48 83 C1 40                          -  add rcx,40
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+BDF4E7: 48 8B 9C 24 F0 00 00 00              -  mov rbx,[rsp+000000F0]
"gamedll_x64_rwdi.dll"+BDF4EF: 48 81 C4 E0 00 00 00                 -  add rsp,000000E0
"gamedll_x64_rwdi.dll"+BDF4F6: 5F                                   -  pop rdi
"gamedll_x64_rwdi.dll"+BDF4F7: E9 74 C9 A6 FF                       -  jmp gamedll_x64_rwdi.dll+64BE70
"gamedll_x64_rwdi.dll"+BDF4FC: CC                                   -  int 3 
"gamedll_x64_rwdi.dll"+BDF4FD: CC                                   -  int 3 
"gamedll_x64_rwdi.dll"+BDF4FE: CC                                   -  int 3 
"gamedll_x64_rwdi.dll"+BDF4FF: CC                                   -  int 3 
"gamedll_x64_rwdi.dll"+BDF500: 48 89 5C 24 08                       -  mov [rsp+08],rbx
"gamedll_x64_rwdi.dll"+BDF505: 48 89 6C 24 10                       -  mov [rsp+10],rbp
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2659</ID>
              <Description>"Clip_Hit"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>Clip_Hit</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2660</ID>
              <Description>"Current Weapon Ammo"</Description>
              <Color>99D6E8</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Clip_Hit</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2653</ID>
          <Description>"Reload_Ammunition"</Description>
          <LastState/>
          <Color>5BFFD7</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-03
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(Reload_ret,gamedll_x64_rwdi.dll,8B 40 40 48 83 C4 20 5B C3 83) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+CBC7BE)

label(code)
label(return)

alloc(Reload_Start,8)
registersymbol(Reload_Start)

newmem:

code:
  mov [Reload_Start],rax
  mov eax,[rax+40]
  add rsp,20
  jmp return

Reload_ret:
  jmp code
  nop
  nop
return:
registersymbol(Reload_ret)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Reload_ret:
  db 8B 40 40 48 83 C4 20

unregistersymbol(Reload_ret)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+CBC7BE

"gamedll_x64_rwdi.dll"+CBC79D: FF 50 20              -  call qword ptr [rax+20]
"gamedll_x64_rwdi.dll"+CBC7A0: 8B 93 58 01 00 00     -  mov edx,[rbx+00000158]
"gamedll_x64_rwdi.dll"+CBC7A6: 4C 8B 00              -  mov r8,[rax]
"gamedll_x64_rwdi.dll"+CBC7A9: 48 8B C8              -  mov rcx,rax
"gamedll_x64_rwdi.dll"+CBC7AC: 41 FF 90 58 07 00 00  -  call qword ptr [r8+00000758]
"gamedll_x64_rwdi.dll"+CBC7B3: 48 85 C0              -  test rax,rax
"gamedll_x64_rwdi.dll"+CBC7B6: 75 06                 -  jne gamedll_x64_rwdi.dll+CBC7BE
"gamedll_x64_rwdi.dll"+CBC7B8: 48 83 C4 20           -  add rsp,20
"gamedll_x64_rwdi.dll"+CBC7BC: 5B                    -  pop rbx
"gamedll_x64_rwdi.dll"+CBC7BD: C3                    -  ret 
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+CBC7BE: 8B 40 40              -  mov eax,[rax+40]
"gamedll_x64_rwdi.dll"+CBC7C1: 48 83 C4 20           -  add rsp,20
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+CBC7C5: 5B                    -  pop rbx
"gamedll_x64_rwdi.dll"+CBC7C6: C3                    -  ret 
"gamedll_x64_rwdi.dll"+CBC7C7: 83 C8 FF              -  or eax,-01
"gamedll_x64_rwdi.dll"+CBC7CA: 48 83 C4 20           -  add rsp,20
"gamedll_x64_rwdi.dll"+CBC7CE: 5B                    -  pop rbx
"gamedll_x64_rwdi.dll"+CBC7CF: C3                    -  ret 
"gamedll_x64_rwdi.dll"+CBC7D0: 48 89 6C 24 18        -  mov [rsp+18],rbp
"gamedll_x64_rwdi.dll"+CBC7D5: 56                    -  push rsi
"gamedll_x64_rwdi.dll"+CBC7D6: 48 83 EC 20           -  sub rsp,20
"gamedll_x64_rwdi.dll"+CBC7DA: 80 3D 48 7E F5 00 00  -  cmp byte ptr [gamedll_x64_rwdi.dll+1C14629],00
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2654</ID>
              <Description>"Reload_Start"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>Reload_Start</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2655</ID>
              <Description>"Reload_Start"</Description>
              <Color>E69BD1</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Reload_Start</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2634</ID>
          <Description>"Secondary Ammo"</Description>
          <LastState/>
          <Color>5BFFD7</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-02
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Secondary,gamedll_x64_rwdi.dll,66 41 0F 6E 76 40 0F) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+503C7F)

label(code)
label(return)

alloc(SecondaryAmmo,8)
registersymbol(SecondaryAmmo)

//SecondaryAmmo:
//dd (int)39

newmem:

code:
//  movd xmm6,[SecondaryAmmo]
  mov [SecondaryAmmo],r14
//  movss [r14+40],xmm6
  jmp return

Secondary:
  jmp code
  nop
return:
registersymbol(Secondary)

[DISABLE]

Secondary:
  db 66 41 0F 6E 76 40

unregistersymbol(Secondary)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+503C7F

"gamedll_x64_rwdi.dll"+503C53: 49 8D 4E 58              -  lea rcx,[r14+58]
"gamedll_x64_rwdi.dll"+503C57: 4C 89 6C 24 48           -  mov [rsp+48],r13
"gamedll_x64_rwdi.dll"+503C5C: 0F 29 74 24 30           -  movaps [rsp+30],xmm6
"gamedll_x64_rwdi.dll"+503C61: FF 90 10 05 00 00        -  call qword ptr [rax+00000510]
"gamedll_x64_rwdi.dll"+503C67: 49 8D 4E 58              -  lea rcx,[r14+58]
"gamedll_x64_rwdi.dll"+503C6B: 41 3B C7                 -  cmp eax,r15d
"gamedll_x64_rwdi.dll"+503C6E: 0F 8E A8 00 00 00        -  jng gamedll_x64_rwdi.dll+503D1C
"gamedll_x64_rwdi.dll"+503C74: 41 8B 46 40              -  mov eax,[r14+40]
"gamedll_x64_rwdi.dll"+503C78: 89 43 0C                 -  mov [rbx+0C],eax
"gamedll_x64_rwdi.dll"+503C7B: 49 8B 46 58              -  mov rax,[r14+58]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+503C7F: 66 41 0F 6E 76 40        -  movd xmm6,[r14+40]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+503C85: 0F 5B F6                 -  cvtdq2ps xmm6,xmm6
"gamedll_x64_rwdi.dll"+503C88: FF 90 10 05 00 00        -  call qword ptr [rax+00000510]
"gamedll_x64_rwdi.dll"+503C8E: 44 88 7B 04              -  mov [rbx+04],r15l
"gamedll_x64_rwdi.dll"+503C92: 66 0F 6E C0              -  movd xmm0,eax
"gamedll_x64_rwdi.dll"+503C96: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"gamedll_x64_rwdi.dll"+503C99: F3 0F 5E F0              -  divss xmm6,xmm0
"gamedll_x64_rwdi.dll"+503C9D: F3 0F 11 73 08           -  movss [rbx+08],xmm6
"gamedll_x64_rwdi.dll"+503CA2: 48 85 F6                 -  test rsi,rsi
"gamedll_x64_rwdi.dll"+503CA5: 0F 84 0C 02 00 00        -  je gamedll_x64_rwdi.dll+503EB7
"gamedll_x64_rwdi.dll"+503CAB: 49 8B 46 58              -  mov rax,[r14+58]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2648</ID>
              <Description>"SecondaryAmmo_Start"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>SecondaryAmmo</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2649</ID>
              <Description>"Secondary Ammo Current "</Description>
              <Color>A2ED94</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>SecondaryAmmo</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2596</ID>
      <Description>"Cash"</Description>
      <LastState/>
      <Color>80FF80</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Cash,gamedll_x64_rwdi.dll,89 43 40 E8 85 59 74 FF)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BDD2A3)

label(code)
label(return)

newmem:

code:
  //mov [rbx+40],eax
  mov [rbx+40],999999
  call gamedll_x64_rwdi.ShutdownGameScriptDLL+320120
  jmp return

Cash:
  jmp code
  nop
  nop
  nop
return:
registersymbol(Cash)

[DISABLE]

Cash:
  db 89 43 40 E8 85 59 74 FF

unregistersymbol(Cash)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+BDD2A3

"gamedll_x64_rwdi.dll"+BDD27D: C3                    -  ret 
"gamedll_x64_rwdi.dll"+BDD27E: 48 89 6C 24 40        -  mov [rsp+40],rbp
"gamedll_x64_rwdi.dll"+BDD283: 8B 69 40              -  mov ebp,[rcx+40]
"gamedll_x64_rwdi.dll"+BDD286: B9 FF FF FF 7F        -  mov ecx,7FFFFFFF
"gamedll_x64_rwdi.dll"+BDD28B: 8D 44 3D 00           -  lea eax,[rbp+rdi+00]
"gamedll_x64_rwdi.dll"+BDD28F: 48 89 7C 24 20        -  mov [rsp+20],rdi
"gamedll_x64_rwdi.dll"+BDD294: 44 89 44 24 28        -  mov [rsp+28],r8d
"gamedll_x64_rwdi.dll"+BDD299: 3B C1                 -  cmp eax,ecx
"gamedll_x64_rwdi.dll"+BDD29B: 0F 4D C1              -  cmovge eax,ecx
"gamedll_x64_rwdi.dll"+BDD29E: 48 8D 4C 24 20        -  lea rcx,[rsp+20]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+BDD2A3: 89 43 40              -  mov [rbx+40],eax
"gamedll_x64_rwdi.dll"+BDD2A6: E8 85 59 74 FF        -  call gamedll_x64_rwdi.dll+322C30
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+BDD2AB: 4C 63 5B 40           -  movsxd  r11,dword ptr [rbx+40]
"gamedll_x64_rwdi.dll"+BDD2AF: 48 8D 4C 24 58        -  lea rcx,[rsp+58]
"gamedll_x64_rwdi.dll"+BDD2B4: 4C 89 5C 24 58        -  mov [rsp+58],r11
"gamedll_x64_rwdi.dll"+BDD2B9: E8 62 5A 74 FF        -  call gamedll_x64_rwdi.dll+322D20
"gamedll_x64_rwdi.dll"+BDD2BE: 48 8B CB              -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+BDD2C1: E8 EA 05 00 00        -  call gamedll_x64_rwdi.dll+BDD8B0
"gamedll_x64_rwdi.dll"+BDD2C6: 48 8B 4B 48           -  mov rcx,[rbx+48]
"gamedll_x64_rwdi.dll"+BDD2CA: 48 85 C9              -  test rcx,rcx
"gamedll_x64_rwdi.dll"+BDD2CD: 74 4C                 -  je gamedll_x64_rwdi.dll+BDD31B
"gamedll_x64_rwdi.dll"+BDD2CF: 48 83 C1 40           -  add rcx,40
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2044</ID>
      <Description>"Easy Lock Picking "</Description>
      <LastState/>
      <Color>8000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(elp_1,32,gamedll_x64_rwdi.dll)
aobscanmodule(elp_aob1,gamedll_x64_rwdi.dll,F3 0F 10 56 50 F3 0F 10 4E 54)
registersymbol(elp_aob1)
label(returnhere_elp_1)

//--------------------------------------------------//
elp_1:
movss xmm1,[rsi+54]
mov [rsi+54],(float)999999
jmp returnhere_elp_1
//--------------------------------------------------//

elp_aob1+5:
jmp elp_1
returnhere_elp_1:

[Disable]

elp_aob1+5:
db F3 0F 10 4E 54
unregistersymbol(elp_aob1)
dealloc(elp_1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11417</ID>
      <Description>"See Thru Walla (Game Breaking Dont USE unless save Backed up)"</Description>
      <LastState/>
      <Color>FF00FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-04-27
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(See_Thru_Walls,engine_x64_rwdi.dll,F3 0F 10 B0 30 02 00 00 E8 30) // should be unique
alloc(newmem,$1000,"engine_x64_rwdi.dll"+2A7233)

label(code)
label(return)

newmem:

code:
 // movss xmm6,[rax+00000230]
  jmp return

See_Thru_Walls:
  jmp code
  nop
  nop
  nop
return:
registersymbol(See_Thru_Walls)

[DISABLE]

See_Thru_Walls:
  db F3 0F 10 B0 30 02 00 00

unregistersymbol(See_Thru_Walls)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "engine_x64_rwdi.dll"+2A7233

"engine_x64_rwdi.dll"+2A71FC: 0F 85 CF 00 00 00        -  jne engine_x64_rwdi.dll+2A72D1
"engine_x64_rwdi.dll"+2A7202: 48 8B 15 F7 3F 7B 00     -  mov rdx,[engine_x64_rwdi.dll+A5B200]
"engine_x64_rwdi.dll"+2A7209: 48 8B CD                 -  mov rcx,rbp
"engine_x64_rwdi.dll"+2A720C: E8 6F 47 00 00           -  call engine_x64_rwdi.dll+2AB980
"engine_x64_rwdi.dll"+2A7211: 84 C0                    -  test al,al
"engine_x64_rwdi.dll"+2A7213: 0F 84 B8 00 00 00        -  je engine_x64_rwdi.dll+2A72D1
"engine_x64_rwdi.dll"+2A7219: 48 8B 05 C8 3F 7B 00     -  mov rax,[engine_x64_rwdi.dll+A5B1E8]
"engine_x64_rwdi.dll"+2A7220: 0F 29 B4 24 80 02 00 00  -  movaps [rsp+00000280],xmm6
"engine_x64_rwdi.dll"+2A7228: 48 8B CD                 -  mov rcx,rbp
"engine_x64_rwdi.dll"+2A722B: 0F 29 BC 24 70 02 00 00  -  movaps [rsp+00000270],xmm7
// ---------- INJECTING HERE ----------
"engine_x64_rwdi.dll"+2A7233: F3 0F 10 B0 30 02 00 00  -  movss xmm6,[rax+00000230]
// ---------- DONE INJECTING  ----------
"engine_x64_rwdi.dll"+2A723B: E8 30 F4 FF FF           -  call engine_x64_rwdi.dll+2A6670
"engine_x64_rwdi.dll"+2A7240: 48 8B CF                 -  mov rcx,rdi
"engine_x64_rwdi.dll"+2A7243: 0F 28 F8                 -  movaps xmm7,xmm0
"engine_x64_rwdi.dll"+2A7246: F3 0F 59 FE              -  mulss xmm7,xmm6
"engine_x64_rwdi.dll"+2A724A: E8 01 79 D8 FF           -  call engine_x64_rwdi.dll+2EB50
"engine_x64_rwdi.dll"+2A724F: 48 8B 8D 90 05 00 00     -  mov rcx,[rbp+00000590]
"engine_x64_rwdi.dll"+2A7256: 83 79 44 00              -  cmp dword ptr [rcx+44],00
"engine_x64_rwdi.dll"+2A725A: 0F 28 B4 24 80 02 00 00  -  movaps xmm6,[rsp+00000280]
"engine_x64_rwdi.dll"+2A7262: 48 89 0D EF 70 7E 00     -  mov [engine_x64_rwdi.dll+A8E358],rcx
"engine_x64_rwdi.dll"+2A7269: 74 16                    -  je engine_x64_rwdi.dll+2A7281
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11418</ID>
      <Description>"Weapons In Safe Zone"</Description>
      <Options moActivateChildrenAsWell="1"/>
      <LastState/>
      <Color>FD66C0</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

 aobscanmodule(wisz_aob1,gamedll_x64_rwdi.dll,48 85 D2 74 03 48 89 3A FF 83 68 09 00 00)
 registersymbol(wisz_aob1)

 wisz_aob1+8:
 db 90 90 90 90 90 90

 [Disable]

 wisz_aob1+8:
 db FF 83 68 09 00 00
 unregistersymbol(wisz_aob1)

 {
 // ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AE1784

 "gamedll_x64_rwdi.dll"+AE1754: 48 8B 8B 60 09 00 00  -  mov rcx,[rbx+00000960]
 "gamedll_x64_rwdi.dll"+AE175B: C1 E2 03              -  shl edx,03
 "gamedll_x64_rwdi.dll"+AE175E: FF 15 AC DC 83 00     -  call qword ptr [gamedll_x64_rwdi.dll+131F410]
 "gamedll_x64_rwdi.dll"+AE1764: 48 89 83 60 09 00 00  -  mov [rbx+00000960],rax
 "gamedll_x64_rwdi.dll"+AE176B: 8B 8B 68 09 00 00     -  mov ecx,[rbx+00000968]
 "gamedll_x64_rwdi.dll"+AE1771: 48 8B 83 60 09 00 00  -  mov rax,[rbx+00000960]
 "gamedll_x64_rwdi.dll"+AE1778: 48 8D 14 C8           -  lea rdx,[rax+rcx*8]
 "gamedll_x64_rwdi.dll"+AE177C: 48 85 D2              -  test rdx,rdx
 "gamedll_x64_rwdi.dll"+AE177F: 74 03                 -  je gamedll_x64_rwdi.dll+AE1784
 "gamedll_x64_rwdi.dll"+AE1781: 48 89 3A              -  mov [rdx],rdi
 // ---------- INJECTING HERE ----------
 "gamedll_x64_rwdi.dll"+AE1784: FF 83 68 09 00 00     -  inc [rbx+00000968]
 // ---------- DONE INJECTING  ----------
 "gamedll_x64_rwdi.dll"+AE178A: 48 8B CB              -  mov rcx,rbx
 "gamedll_x64_rwdi.dll"+AE178D: E8 1E 2B FF FF        -  call gamedll_x64_rwdi.dll+AD42B0
 "gamedll_x64_rwdi.dll"+AE1792: 40 32 C6              -  xor al,sil
 "gamedll_x64_rwdi.dll"+AE1795: 48 8B 74 24 40        -  mov rsi,[rsp+40]
 "gamedll_x64_rwdi.dll"+AE179A: 74 26                 -  je gamedll_x64_rwdi.dll+AE17C2
 "gamedll_x64_rwdi.dll"+AE179C: 48 8B CB              -  mov rcx,rbx
 "gamedll_x64_rwdi.dll"+AE179F: E8 0C 2B FF FF        -  call gamedll_x64_rwdi.dll+AD42B0
 "gamedll_x64_rwdi.dll"+AE17A4: 84 C0                 -  test al,al
 "gamedll_x64_rwdi.dll"+AE17A6: 74 1A                 -  je gamedll_x64_rwdi.dll+AE17C2
 "gamedll_x64_rwdi.dll"+AE17A8: 48 8B CB              -  mov rcx,rbx
 }
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11389</ID>
      <Description>"Old Scripts"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>C8A7A4</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2676</ID>
          <Description>"Damage Managers"</Description>
          <Options moManualExpandCollapse="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>C0C0C0</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>2668</ID>
              <Description>"Damage Manager"</Description>
              <LastState/>
              <Color>C0C0C0</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-05
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Damage_Manager_ret,gamedll_x64_rwdi.dll,F3 0F 5C 44 24 78 0F) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AA6FD8)

label(code)
label(return)

alloc(Damage_Taken_Mul,16)
registersymbol(Damage_Taken_Mul)

Damage_Taken_Mul:
dd (Float).5

Damage_Taken_Mul+8:
dd (Float)100

newmem:

code:
  movss xmm15,[rsp+78]
  movss [Damage_Taken_Mul+4],xmm15    // Show Damge Taken
  mulss xmm15,[Damage_Taken_Mul]
  //subss xmm0,[rsp+78]
  subss xmm0,xmm15
  MOVSS [Damage_Taken_Mul+8],xmm0
  jmp return

Damage_Manager_ret:
  jmp code
  nop
return:
registersymbol(Damage_Manager_ret)

[DISABLE]

Damage_Manager_ret:
  db F3 0F 5C 44 24 78

unregistersymbol(Damage_Manager_ret)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AA6FD8

"gamedll_x64_rwdi.dll"+AA6FB0: 75 05                    -  jne gamedll_x64_rwdi.dll+AA6FB7
"gamedll_x64_rwdi.dll"+AA6FB2: 45 32 ED                 -  xor r13l,r13l
"gamedll_x64_rwdi.dll"+AA6FB5: EB 03                    -  jmp gamedll_x64_rwdi.dll+AA6FBA
"gamedll_x64_rwdi.dll"+AA6FB7: 41 B5 01                 -  mov bpl,01
"gamedll_x64_rwdi.dll"+AA6FBA: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AA6FBD: 48 8B 9E B0 08 00 00     -  mov rbx,[rsi+000008B0]
"gamedll_x64_rwdi.dll"+AA6FC4: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AA6FC7: FF 90 10 06 00 00        -  call qword ptr [rax+00000610]
"gamedll_x64_rwdi.dll"+AA6FCD: 48 8D 8E B0 08 00 00     -  lea rcx,[rsi+000008B0]
"gamedll_x64_rwdi.dll"+AA6FD4: 45 0F B6 C5              -  movzx r8d,r13l
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AA6FD8: F3 0F 5C 44 24 78        -  subss xmm0,[rsp+78]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AA6FDE: 0F 28 C8                 -  movaps xmm1,xmm0
"gamedll_x64_rwdi.dll"+AA6FE1: FF 53 20                 -  call qword ptr [rbx+20]
"gamedll_x64_rwdi.dll"+AA6FE4: 4C 8B 44 24 68           -  mov r8,[rsp+68]
"gamedll_x64_rwdi.dll"+AA6FE9: F3 0F 10 4C 24 78        -  movss xmm1,[rsp+78]
"gamedll_x64_rwdi.dll"+AA6FEF: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AA6FF2: E8 09 86 02 00           -  call gamedll_x64_rwdi.dll+ACF600
"gamedll_x64_rwdi.dll"+AA6FF7: 4C 8D 44 24 60           -  lea r8,[rsp+60]
"gamedll_x64_rwdi.dll"+AA6FFC: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AA6FFF: F3 0F 10 4C 24 78        -  movss xmm1,[rsp+78]
"gamedll_x64_rwdi.dll"+AA7005: E8 26 93 01 00           -  call gamedll_x64_rwdi.dll+AC0330
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>2664</ID>
                  <Description>"Damage Taken Adjust   ----&gt;"</Description>
                  <Color>F7339E</Color>
                  <VariableType>Float</VariableType>
                  <Address>Damage_Taken_Mul</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>2665</ID>
                  <Description>"Original Damage Amount"</Description>
                  <Color>C0C0C0</Color>
                  <VariableType>Float</VariableType>
                  <Address>Damage_Taken_Mul+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>2670</ID>
                  <Description>"Health After Calculated"</Description>
                  <Color>C0C0C0</Color>
                  <VariableType>Float</VariableType>
                  <Address>Damage_Taken_Mul+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>2666</ID>
              <Description>"God Mode"</Description>
              <LastState/>
              <Color>C0C0C0</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-05
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Natural_Aspirated_Damage_Manager_ret,gamedll_x64_rwdi.dll,44 0F 28 44 24 20 F3 0F 11 83 54) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AAED71)

label(code)
label(return)

newmem:

code:
  movss xmm0,[Damage_Taken_Mul+8]
  jmp return

Natural_Aspirated_Damage_Manager_ret:
  jmp code
  nop
return:
registersymbol(Natural_Aspirated_Damage_Manager_ret)

[DISABLE]

Natural_Aspirated_Damage_Manager_ret:
  db 44 0F 28 44 24 20

unregistersymbol(Natural_Aspirated_Damage_Manager_ret)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AAED71

"gamedll_x64_rwdi.dll"+AAED53: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AAED56: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAED59: FF 90 48 01 00 00        -  call qword ptr [rax+00000148]
"gamedll_x64_rwdi.dll"+AAED5F: 0F 2F F7                 -  comiss xmm6,xmm7
"gamedll_x64_rwdi.dll"+AAED62: 73 05                    -  jae gamedll_x64_rwdi.dll+AAED69
"gamedll_x64_rwdi.dll"+AAED64: 0F 28 C7                 -  movaps xmm0,xmm7
"gamedll_x64_rwdi.dll"+AAED67: EB 08                    -  jmp gamedll_x64_rwdi.dll+AAED71
"gamedll_x64_rwdi.dll"+AAED69: 0F 2F F0                 -  comiss xmm6,xmm0
"gamedll_x64_rwdi.dll"+AAED6C: 77 03                    -  ja gamedll_x64_rwdi.dll+AAED71
"gamedll_x64_rwdi.dll"+AAED6E: 0F 28 C6                 -  movaps xmm0,xmm6
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AAED71: 44 0F 28 44 24 20        -  movaps xmm8,[rsp+20]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AAED77: F3 0F 11 83 54 09 00 00  -  movss [rbx+00000954],xmm0
"gamedll_x64_rwdi.dll"+AAED7F: 40 84 F6                 -  test sil,sil
"gamedll_x64_rwdi.dll"+AAED82: 74 15                    -  je gamedll_x64_rwdi.dll+AAED99
"gamedll_x64_rwdi.dll"+AAED84: 0F 2F F8                 -  comiss xmm7,xmm0
"gamedll_x64_rwdi.dll"+AAED87: 72 10                    -  jb gamedll_x64_rwdi.dll+AAED99
"gamedll_x64_rwdi.dll"+AAED89: 41 B1 01                 -  mov cl,01
"gamedll_x64_rwdi.dll"+AAED8C: 45 33 C0                 -  xor r8d,r8d
"gamedll_x64_rwdi.dll"+AAED8F: 33 D2                    -  xor edx,edx
"gamedll_x64_rwdi.dll"+AAED91: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAED94: E8 37 5C FF FF           -  call gamedll_x64_rwdi.dll+AA49D0
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2674</ID>
              <Description>"No Description"</Description>
              <Color>C0C0C0</Color>
              <VariableType>Float</VariableType>
              <Address>1E5C320C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2675</ID>
              <Description>"Mini Damage Manager"</Description>
              <LastState/>
              <Color>C0C0C0</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : DyingLightGame.exe
  Version:
  Date   : 2016-03-05
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(mini_Damage_Manager_ret,gamedll_x64_rwdi.dll,F3 0F 5C 44 24 78 0F) // should be unique
alloc(Newmem_MiniD,$1000,"gamedll_x64_rwdi.dll"+AA6FD8)

label(Code_MiniD)
label(Return_MiniD)

alloc(Damage_Taken_Mul,16)
registersymbol(Damage_Taken_Mul)

Damage_Taken_Mul:
dd (Float).5

Damage_Taken_Mul+8:
dd (Float)100

Newmem_MiniD:

Code_MiniD:
  movss xmm15,[rsp+78]
  movss [Damage_Taken_Mul+4],xmm15    // Show Damge Taken
  mulss xmm15,[Damage_Taken_Mul]
  //subss xmm0,[rsp+78]
  subss xmm0,xmm15
  MOVSS [Damage_Taken_Mul+8],xmm0
  jmp Return_MiniD

mini_Damage_Manager_ret:
  jmp Code_MiniD
  nop
Return_MiniD:
registersymbol(mini_Damage_Manager_ret)



////////////WriteBAck Section Below


aobscanmodule(Damage_Write_Back_ret,gamedll_x64_rwdi.dll,44 0F 28 44 24 20 F3 0F 11 83 54) // should be unique
alloc(Newmem_Write_Back,$1000,"gamedll_x64_rwdi.dll"+AAED71)

label(Code_Write_Back)
label(Return_Write_Back)

alloc(God_Damage,8)
registersymbol(God_Damage)

Newmem_Write_Back:

Code_Write_Back:
 movaps xmm8,[rsp+20]                                 // OG Code
 movss xmm14,[Damage_Taken_Mul]          // Moving Damage Taken To Reister for Fire,Acid
 comiss xmm14,xmm12             // Blank Register Compare
  jbe God_Mode
  MOVSS [Damage_Taken_Mul+8],xmm0
 jmp Return_Write_Back



God_Mode:
  movss xmm0,[Damage_Taken_Mul+8]
  jmp Return_Write_Back

Damage_Write_Back_ret:
  jmp Code_Write_Back
  nop
Return_Write_Back:
registersymbol(Damage_Write_Back_ret)

[DISABLE]

mini_Damage_Manager_ret:
  db F3 0F 5C 44 24 78

unregistersymbol(mini_Damage_Manager_ret)
dealloc(Newmem_MiniD)



///// Writeback Below


Damage_Write_Back_ret:
  db 44 0F 28 44 24 20

unregistersymbol(Damage_Write_Back_ret)
dealloc(Newmem_Write_Back)

{
// ORIGINAL Code_MiniD - INJECTION POINT: "gamedll_x64_rwdi.dll"+AA6FD8

"gamedll_x64_rwdi.dll"+AA6FB0: 75 05                    -  jne gamedll_x64_rwdi.dll+AA6FB7
"gamedll_x64_rwdi.dll"+AA6FB2: 45 32 ED                 -  xor r13l,r13l
"gamedll_x64_rwdi.dll"+AA6FB5: EB 03                    -  jmp gamedll_x64_rwdi.dll+AA6FBA
"gamedll_x64_rwdi.dll"+AA6FB7: 41 B5 01                 -  mov bpl,01
"gamedll_x64_rwdi.dll"+AA6FBA: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AA6FBD: 48 8B 9E B0 08 00 00     -  mov rbx,[rsi+000008B0]
"gamedll_x64_rwdi.dll"+AA6FC4: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AA6FC7: FF 90 10 06 00 00        -  call qword ptr [rax+00000610]
"gamedll_x64_rwdi.dll"+AA6FCD: 48 8D 8E B0 08 00 00     -  lea rcx,[rsi+000008B0]
"gamedll_x64_rwdi.dll"+AA6FD4: 45 0F B6 C5              -  movzx r8d,r13l
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AA6FD8: F3 0F 5C 44 24 78        -  subss xmm0,[rsp+78]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AA6FDE: 0F 28 C8                 -  movaps xmm1,xmm0
"gamedll_x64_rwdi.dll"+AA6FE1: FF 53 20                 -  call qword ptr [rbx+20]
"gamedll_x64_rwdi.dll"+AA6FE4: 4C 8B 44 24 68           -  mov r8,[rsp+68]
"gamedll_x64_rwdi.dll"+AA6FE9: F3 0F 10 4C 24 78        -  movss xmm1,[rsp+78]
"gamedll_x64_rwdi.dll"+AA6FEF: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AA6FF2: E8 09 86 02 00           -  call gamedll_x64_rwdi.dll+ACF600
"gamedll_x64_rwdi.dll"+AA6FF7: 4C 8D 44 24 60           -  lea r8,[rsp+60]
"gamedll_x64_rwdi.dll"+AA6FFC: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AA6FFF: F3 0F 10 4C 24 78        -  movss xmm1,[rsp+78]
"gamedll_x64_rwdi.dll"+AA7005: E8 26 93 01 00           -  call gamedll_x64_rwdi.dll+AC0330
}

{
// ORIGINAL Code_Write_Back - INJECTION POINT: "gamedll_x64_rwdi.dll"+AAED71

"gamedll_x64_rwdi.dll"+AAED53: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AAED56: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAED59: FF 90 48 01 00 00        -  call qword ptr [rax+00000148]
"gamedll_x64_rwdi.dll"+AAED5F: 0F 2F F7                 -  comiss xmm6,xmm7
"gamedll_x64_rwdi.dll"+AAED62: 73 05                    -  jae gamedll_x64_rwdi.dll+AAED69
"gamedll_x64_rwdi.dll"+AAED64: 0F 28 C7                 -  movaps xmm0,xmm7
"gamedll_x64_rwdi.dll"+AAED67: EB 08                    -  jmp gamedll_x64_rwdi.dll+AAED71
"gamedll_x64_rwdi.dll"+AAED69: 0F 2F F0                 -  comiss xmm6,xmm0
"gamedll_x64_rwdi.dll"+AAED6C: 77 03                    -  ja gamedll_x64_rwdi.dll+AAED71
"gamedll_x64_rwdi.dll"+AAED6E: 0F 28 C6                 -  movaps xmm0,xmm6
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AAED71: 44 0F 28 44 24 20        -  movaps xmm8,[rsp+20]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AAED77: F3 0F 11 83 54 09 00 00  -  movss [rbx+00000954],xmm0
"gamedll_x64_rwdi.dll"+AAED7F: 40 84 F6                 -  test sil,sil
"gamedll_x64_rwdi.dll"+AAED82: 74 15                    -  je gamedll_x64_rwdi.dll+AAED99
"gamedll_x64_rwdi.dll"+AAED84: 0F 2F F8                 -  comiss xmm7,xmm0
"gamedll_x64_rwdi.dll"+AAED87: 72 10                    -  jb gamedll_x64_rwdi.dll+AAED99
"gamedll_x64_rwdi.dll"+AAED89: 41 B1 01                 -  mov cl,01
"gamedll_x64_rwdi.dll"+AAED8C: 45 33 C0                 -  xor r8d,r8d
"gamedll_x64_rwdi.dll"+AAED8F: 33 D2                    -  xor edx,edx
"gamedll_x64_rwdi.dll"+AAED91: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAED94: E8 37 5C FF FF           -  call gamedll_x64_rwdi.dll+AA49D0
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2687</ID>
              <Description>"Grab Max Health"</Description>
              <LastState/>
              <Color>C0C0C0</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-05
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Max_Health_MiniD_ret,gamedll_x64_rwdi.dll,0F 2F 86 1C 12 00 00) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AB2315)

label(code)
label(return)

newmem:

code:
  movss [MiniD_Adjust+c],xmm0
  comiss xmm0,[rsi+0000121C]
  jmp return

Max_Health_MiniD_ret:
  jmp code
  nop
  nop
return:
registersymbol(Max_Health_MiniD_ret)

[DISABLE]

Max_Health_MiniD_ret:
  db 0F 2F 86 1C 12 00 00

unregistersymbol(Max_Health_MiniD_ret)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AB2315

"gamedll_x64_rwdi.dll"+AB22FC: CC                             -  int 3 
"gamedll_x64_rwdi.dll"+AB22FD: CC                             -  int 3 
"gamedll_x64_rwdi.dll"+AB22FE: CC                             -  int 3 
"gamedll_x64_rwdi.dll"+AB22FF: CC                             -  int 3 
"gamedll_x64_rwdi.dll"+AB2300: 40 56                          -  push rsi
"gamedll_x64_rwdi.dll"+AB2302: 48 83 EC 20                    -  sub rsp,20
"gamedll_x64_rwdi.dll"+AB2306: 48 8B 01                       -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+AB2309: 83 CA FF                       -  or edx,-01
"gamedll_x64_rwdi.dll"+AB230C: 48 8B F1                       -  mov rsi,rcx
"gamedll_x64_rwdi.dll"+AB230F: FF 90 48 01 00 00              -  call qword ptr [rax+00000148]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AB2315: 0F 2F 86 1C 12 00 00           -  comiss xmm0,[rsi+0000121C]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AB231C: 73 3A                          -  jae gamedll_x64_rwdi.dll+AB2358
"gamedll_x64_rwdi.dll"+AB231E: 48 8B 06                       -  mov rax,[rsi]
"gamedll_x64_rwdi.dll"+AB2321: 48 89 5C 24 30                 -  mov [rsp+30],rbx
"gamedll_x64_rwdi.dll"+AB2326: 83 CA FF                       -  or edx,-01
"gamedll_x64_rwdi.dll"+AB2329: 48 8B CE                       -  mov rcx,rsi
"gamedll_x64_rwdi.dll"+AB232C: 48 89 7C 24 38                 -  mov [rsp+38],rdi
"gamedll_x64_rwdi.dll"+AB2331: 48 8B BE C8 08 00 00           -  mov rdi,[rsi+000008C8]
"gamedll_x64_rwdi.dll"+AB2338: FF 90 48 01 00 00              -  call qword ptr [rax+00000148]
"gamedll_x64_rwdi.dll"+AB233E: 48 8D 8E C8 08 00 00           -  lea rcx,[rsi+000008C8]
"gamedll_x64_rwdi.dll"+AB2345: 45 33 C0                       -  xor r8d,r8d
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2677</ID>
          <Description>"Damage Taken Manager"</Description>
          <LastState/>
          <Color>808000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version:
  Date   : 2016-03-05
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Natural_Aspirated_Damage_Manager_ret,gamedll_x64_rwdi.dll,44 0F 28 44 24 20 F3 0F 11 83 54) // should be unique
alloc(Newmem_NADM,$1000,"gamedll_x64_rwdi.dll"+AAED71)

label(Code_NADM)
label(Return_NADM)
label(Math_Start)
alloc(MiniD_Adjust,32)
registersymbol(MiniD_Adjust)

MiniD_Adjust+C:
dd (float)100

MiniD_Adjust:
dd (float)-1

Newmem_NADM:

Code_NADM:
//  movss [MiniD_Adjust],xmm0
  movaps xmm8,[rsp+20]
  movss xmm14,[rbx+00000954]
  mov [MiniD_Adjust+10],rbx
  movss xmm15,xmm14
   comiss xmm14,xmm0                   // DOnt think tis is neccessary
    jb Math_Start


Math_Start:
  subss xmm14,xmm0
  movss [MiniD_Adjust+4],xmm14            // Damage Taken
  mulss xmm14,[MiniD_Adjust]
  movss [MiniD_Adjust+8],xmm14             // Damage Adjusted
  subss xmm15,xmm14
  movss xmm0,xmm15
   movss xmm13,[MiniD_Adjust+C]   // This is max health
    comiss xmm15,xmm13
     ja Max_Health
  jmp Return_NADM

Max_Health:
  movss xmm0,xmm13
  jmp Return_NADM

Natural_Aspirated_Damage_Manager_ret:
  jmp Code_NADM
  nop
Return_NADM:
registersymbol(Natural_Aspirated_Damage_Manager_ret)



//////////////////////Max Health Grab

aobscanmodule(Max_Health_MiniD_ret,gamedll_x64_rwdi.dll,0F 2F 86 1C 12 00 00) // should be unique
alloc(Newmem_Grab_Max,$1000,"gamedll_x64_rwdi.dll"+AB2315)

label(Code_Grab_Max)
label(Return_Grab_Max)

Newmem_Grab_Max:

Code_Grab_Max:
  movss [MiniD_Adjust+c],xmm0
  comiss xmm0,[rsi+0000121C]
  jmp Return_Grab_Max

Max_Health_MiniD_ret:
  jmp Code_Grab_Max
  nop
  nop
Return_Grab_Max:
registersymbol(Max_Health_MiniD_ret)

[DISABLE]

Natural_Aspirated_Damage_Manager_ret:
  db 44 0F 28 44 24 20

unregistersymbol(Natural_Aspirated_Damage_Manager_ret)
dealloc(Newmem_NADM)

Max_Health_MiniD_ret:
  db 0F 2F 86 1C 12 00 00

unregistersymbol(Max_Health_MiniD_ret)
dealloc(Newmem_Grab_Max)

dealloc(MiniD_Adjust)
unregistersymbol(MiniD_Adjust)

{
// ORIGINAL Code_NADM - INJECTION POINT: "gamedll_x64_rwdi.dll"+AAED71

"gamedll_x64_rwdi.dll"+AAED53: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AAED56: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAED59: FF 90 48 01 00 00        -  call qword ptr [rax+00000148]
"gamedll_x64_rwdi.dll"+AAED5F: 0F 2F F7                 -  comiss xmm6,xmm7
"gamedll_x64_rwdi.dll"+AAED62: 73 05                    -  jae gamedll_x64_rwdi.dll+AAED69
"gamedll_x64_rwdi.dll"+AAED64: 0F 28 C7                 -  movaps xmm0,xmm7
"gamedll_x64_rwdi.dll"+AAED67: EB 08                    -  jmp gamedll_x64_rwdi.dll+AAED71
"gamedll_x64_rwdi.dll"+AAED69: 0F 2F F0                 -  comiss xmm6,xmm0
"gamedll_x64_rwdi.dll"+AAED6C: 77 03                    -  ja gamedll_x64_rwdi.dll+AAED71
"gamedll_x64_rwdi.dll"+AAED6E: 0F 28 C6                 -  movaps xmm0,xmm6
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AAED71: 44 0F 28 44 24 20        -  movaps xmm8,[rsp+20]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AAED77: F3 0F 11 83 54 09 00 00  -  movss [rbx+00000954],xmm0
"gamedll_x64_rwdi.dll"+AAED7F: 40 84 F6                 -  test sil,sil
"gamedll_x64_rwdi.dll"+AAED82: 74 15                    -  je gamedll_x64_rwdi.dll+AAED99
"gamedll_x64_rwdi.dll"+AAED84: 0F 2F F8                 -  comiss xmm7,xmm0
"gamedll_x64_rwdi.dll"+AAED87: 72 10                    -  jb gamedll_x64_rwdi.dll+AAED99
"gamedll_x64_rwdi.dll"+AAED89: 41 B1 01                 -  mov cl,01
"gamedll_x64_rwdi.dll"+AAED8C: 45 33 C0                 -  xor r8d,r8d
"gamedll_x64_rwdi.dll"+AAED8F: 33 D2                    -  xor edx,edx
"gamedll_x64_rwdi.dll"+AAED91: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAED94: E8 37 5C FF FF           -  call gamedll_x64_rwdi.dll+AA49D0
}


{
// ORIGINAL Code_Grab_Max - INJECTION POINT: "gamedll_x64_rwdi.dll"+AB2315

"gamedll_x64_rwdi.dll"+AB22FC: CC                             -  int 3
"gamedll_x64_rwdi.dll"+AB22FD: CC                             -  int 3
"gamedll_x64_rwdi.dll"+AB22FE: CC                             -  int 3
"gamedll_x64_rwdi.dll"+AB22FF: CC                             -  int 3
"gamedll_x64_rwdi.dll"+AB2300: 40 56                          -  push rsi
"gamedll_x64_rwdi.dll"+AB2302: 48 83 EC 20                    -  sub rsp,20
"gamedll_x64_rwdi.dll"+AB2306: 48 8B 01                       -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+AB2309: 83 CA FF                       -  or edx,-01
"gamedll_x64_rwdi.dll"+AB230C: 48 8B F1                       -  mov rsi,rcx
"gamedll_x64_rwdi.dll"+AB230F: FF 90 48 01 00 00              -  call qword ptr [rax+00000148]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AB2315: 0F 2F 86 1C 12 00 00           -  comiss xmm0,[rsi+0000121C]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AB231C: 73 3A                          -  jae gamedll_x64_rwdi.dll+AB2358
"gamedll_x64_rwdi.dll"+AB231E: 48 8B 06                       -  mov rax,[rsi]
"gamedll_x64_rwdi.dll"+AB2321: 48 89 5C 24 30                 -  mov [rsp+30],rbx
"gamedll_x64_rwdi.dll"+AB2326: 83 CA FF                       -  or edx,-01
"gamedll_x64_rwdi.dll"+AB2329: 48 8B CE                       -  mov rcx,rsi
"gamedll_x64_rwdi.dll"+AB232C: 48 89 7C 24 38                 -  mov [rsp+38],rdi
"gamedll_x64_rwdi.dll"+AB2331: 48 8B BE C8 08 00 00           -  mov rdi,[rsi+000008C8]
"gamedll_x64_rwdi.dll"+AB2338: FF 90 48 01 00 00              -  call qword ptr [rax+00000148]
"gamedll_x64_rwdi.dll"+AB233E: 48 8D 8E C8 08 00 00           -  lea rcx,[rsi+000008C8]
"gamedll_x64_rwdi.dll"+AB2345: 45 33 C0                       -  xor r8d,r8d
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2678</ID>
              <Description>"Taken Damage Adjust    ---&gt;"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:God Mode
0.5: Half Damage
.1:1/10 Damage
-1:Damage Heals
</DropDownList>
              <Color>800080</Color>
              <VariableType>Float</VariableType>
              <Address>MiniD_Adjust</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>2680</ID>
                  <Description>"Damage Taken"</Description>
                  <Color>C0C0C0</Color>
                  <VariableType>Float</VariableType>
                  <Address>MiniD_Adjust+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>2679</ID>
                  <Description>"Damage Taken Adjusted"</Description>
                  <Color>2767A7</Color>
                  <VariableType>Float</VariableType>
                  <Address>MiniD_Adjust+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2663</ID>
          <Description>"Natural_Aspirated_Damage_Manager"</Description>
          <LastState/>
          <Color>C0C0C0</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-05
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Natural_Aspirated_Damage_Manager_ret,gamedll_x64_rwdi.dll,44 0F 28 44 24 20 F3 0F 11 83 54) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AAED71)

label(code)
label(return)

alloc(Damage_Taken_Mul,8)
registersymbol(Damage_Taken_Mul)

Damage_Taken_Mul:
dd (Float).5

newmem:

code:
  movss xmm15,xmm9
  movss xmm5,xmm9            // Second Register for Extra Math
  subss xmm15,xmm6


 // movss xmm15,[rsp+20]
  movss [Damage_Taken_Mul+4],xmm15     // Damage Taken
  mulss xmm15,[Damage_Taken_Mul]        // Damage Taken * Adfjuster Mul
  subss xmm5,xmm15                       // Original Health - Calculated Damage
  movaps xmm8,[rsp+20]            //OG Code
  movss xmm0,xmm15    // Full Write Back Of Newly Calculated Health After Damage
  movss xmm1,xmm0
  movss xmm6,xmm0
  jmp return

Natural_Aspirated_Damage_Manager_ret:
  jmp code
  nop
return:
registersymbol(Natural_Aspirated_Damage_Manager_ret)

[DISABLE]

Natural_Aspirated_Damage_Manager_ret:
  db 44 0F 28 44 24 20

unregistersymbol(Natural_Aspirated_Damage_Manager_ret)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AAED71

"gamedll_x64_rwdi.dll"+AAED53: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AAED56: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAED59: FF 90 48 01 00 00        -  call qword ptr [rax+00000148]
"gamedll_x64_rwdi.dll"+AAED5F: 0F 2F F7                 -  comiss xmm6,xmm7
"gamedll_x64_rwdi.dll"+AAED62: 73 05                    -  jae gamedll_x64_rwdi.dll+AAED69
"gamedll_x64_rwdi.dll"+AAED64: 0F 28 C7                 -  movaps xmm0,xmm7
"gamedll_x64_rwdi.dll"+AAED67: EB 08                    -  jmp gamedll_x64_rwdi.dll+AAED71
"gamedll_x64_rwdi.dll"+AAED69: 0F 2F F0                 -  comiss xmm6,xmm0
"gamedll_x64_rwdi.dll"+AAED6C: 77 03                    -  ja gamedll_x64_rwdi.dll+AAED71
"gamedll_x64_rwdi.dll"+AAED6E: 0F 28 C6                 -  movaps xmm0,xmm6
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AAED71: 44 0F 28 44 24 20        -  movaps xmm8,[rsp+20]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AAED77: F3 0F 11 83 54 09 00 00  -  movss [rbx+00000954],xmm0
"gamedll_x64_rwdi.dll"+AAED7F: 40 84 F6                 -  test sil,sil
"gamedll_x64_rwdi.dll"+AAED82: 74 15                    -  je gamedll_x64_rwdi.dll+AAED99
"gamedll_x64_rwdi.dll"+AAED84: 0F 2F F8                 -  comiss xmm7,xmm0
"gamedll_x64_rwdi.dll"+AAED87: 72 10                    -  jb gamedll_x64_rwdi.dll+AAED99
"gamedll_x64_rwdi.dll"+AAED89: 41 B1 01                 -  mov cl,01
"gamedll_x64_rwdi.dll"+AAED8C: 45 33 C0                 -  xor r8d,r8d
"gamedll_x64_rwdi.dll"+AAED8F: 33 D2                    -  xor edx,edx
"gamedll_x64_rwdi.dll"+AAED91: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AAED94: E8 37 5C FF FF           -  call gamedll_x64_rwdi.dll+AA49D0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Controller Icons"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>C0C0C0</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>0</ID>
              <Description>"No description"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>gamedll_x64_rwdi.dll+1C14D0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1</ID>
              <Description>"No description"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>gamedll_x64_rwdi.dll+1BA60F4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2672</ID>
              <Description>"No description"</Description>
              <Color>C0C0C0</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>7F9505860F7</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Time of Day Adjuster"</Description>
          <Options moHideChildren="1" moManualExpandCollapse="1"/>
          <LastState/>
          <Color>0000CC</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version:
  Date   : 2016-03-02
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Time_of_Day_Adjuster_ret ,gamedll_x64_rwdi.dll,F3 0F 59 F7 F3 0F 58 B7 A4 00 00 00) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+3929B7)

label(code)
label(return)

alloc(Time_Variables,48)
registersymbol(Time_Variables)

alloc(Sky_Pointer,48)
registersymbol(Sky_Pointer)

newmem:

code:
  movss [Time_Variables],xmm0
  movss [Time_Variables+4],xmm6
  movss xmm6,[Time_Variables+4]
  movss [Time_Variables+8],xmm7
  movss xmm7,[Time_Variables+8]
  mulss xmm6,xmm7
  addss xmm6,[rdi+000000A4]
  movss [Time_Variables+C],xmm6
  movss xmm6,[Time_Variables+10]
  mov [Sky_Pointer],rdi
  jmp return

Time_of_Day_Adjuster_ret :
  jmp code
  nop
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(Time_of_Day_Adjuster_ret )

[DISABLE]

Time_of_Day_Adjuster_ret :
  db F3 0F 59 F7 F3 0F 58 B7 A4 00 00 00

unregistersymbol(Time_of_Day_Adjuster_ret )
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+3929B7

"gamedll_x64_rwdi.dll"+392993: 0F 28 7C 24 30           -  movaps xmm7,[rsp+30]
"gamedll_x64_rwdi.dll"+392998: 48 8B 6C 24 78           -  mov rbp,[rsp+78]
"gamedll_x64_rwdi.dll"+39299D: 48 83 C4 50              -  add rsp,50
"gamedll_x64_rwdi.dll"+3929A1: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+3929A2: C3                       -  ret
"gamedll_x64_rwdi.dll"+3929A3: 39 AF E0 00 00 00        -  cmp [rdi+000000E0],ebp
"gamedll_x64_rwdi.dll"+3929A9: 75 E3                    -  jne gamedll_x64_rwdi.dll+39298E
"gamedll_x64_rwdi.dll"+3929AB: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+3929AE: E8 2D 01 00 00           -  call gamedll_x64_rwdi.dll+392AE0
"gamedll_x64_rwdi.dll"+3929B3: F3 0F 5E F0              -  divss xmm6,xmm0
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+3929B7: F3 0F 59 F7              -  mulss xmm6,xmm7
"gamedll_x64_rwdi.dll"+3929BB: F3 0F 58 B7 A4 00 00 00  -  addss xmm6,[rdi+000000A4]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+3929C3: F3 0F 11 B7 A4 00 00 00  -  movss [rdi+000000A4],xmm6
"gamedll_x64_rwdi.dll"+3929CB: EB C1                    -  jmp gamedll_x64_rwdi.dll+39298E
"gamedll_x64_rwdi.dll"+3929CD: 33 ED                    -  xor ebp,ebp
"gamedll_x64_rwdi.dll"+3929CF: 89 AF A8 00 00 00        -  mov [rdi+000000A8],ebp
"gamedll_x64_rwdi.dll"+3929D5: 48 8B 6C 24 78           -  mov rbp,[rsp+78]
"gamedll_x64_rwdi.dll"+3929DA: 48 83 C4 50              -  add rsp,50
"gamedll_x64_rwdi.dll"+3929DE: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+3929DF: C3                       -  ret
"gamedll_x64_rwdi.dll"+3929E0: 40 57                    -  push rdi
"gamedll_x64_rwdi.dll"+3929E2: 48 83 EC 40              -  sub rsp,40
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Time_Variables XMM0"</Description>
              <Color>FFFFFF</Color>
              <VariableType>Float</VariableType>
              <Address>Time_Variables</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Time_Variables XMM6"</Description>
              <Color>FFFFFF</Color>
              <VariableType>Float</VariableType>
              <Address>Time_Variables+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>".1"</Description>
              <Color>FFFFFF</Color>
              <VariableType>Float</VariableType>
              <Address>Time_Variables+8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Time_Variables XMM6 aFter maTh"</Description>
              <Color>FFFFFF</Color>
              <VariableType>Float</VariableType>
              <Address>Time_Variables+C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2688</ID>
              <Description>"Current Time"</Description>
              <Color>FFFFFF</Color>
              <VariableType>Float</VariableType>
              <Address>Time_Variables+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2630</ID>
              <Description>"No description"</Description>
              <Color>FFFFFF</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>Sky_Pointer</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2631</ID>
              <Description>"No description"</Description>
              <Color>FFFFFF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Sky_Pointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Time of Day 24 Hour"</Description>
          <Color>688943</Color>
          <VariableType>Float</VariableType>
          <Address>TOD</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Time of Day"</Description>
          <LastState/>
          <Color>0000CC</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-02
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Time_of_Day_ret,gamedll_x64_rwdi.dll,F3 0F 5C C8 F3 0F 11 8D 8C 00 00 00) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+38EAE2)

label(code)
label(return)

alloc(TOD,8)
registersymbol(TOD)

TOD:
dd (float)11

TOD+4:
dd (float)24

newmem:

code:
  movss xmm15,[TOD]
  movss xmm14,[TOD+4]
  divss xmm15,xmm14
     movss xmm1,xmm15



  subss xmm1,xmm0
    movss [rbp+000000a4],xmm15
  movss [rbp+0000008C],xmm1
  jmp return

Time_of_Day_ret:
  jmp code
  nop
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(Time_of_Day_ret)

[DISABLE]

Time_of_Day_ret:
  db F3 0F 5C C8 F3 0F 11 8D 8C 00 00 00

unregistersymbol(Time_of_Day_ret)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+38EAE2

"gamedll_x64_rwdi.dll"+38EAB2: E8 69 3B 00 00           -  call gamedll_x64_rwdi.dll+392620
"gamedll_x64_rwdi.dll"+38EAB7: 8B 85 A0 00 00 00        -  mov eax,[rbp+000000A0]
"gamedll_x64_rwdi.dll"+38EABD: 8B 9D 90 00 00 00        -  mov ebx,[rbp+00000090]
"gamedll_x64_rwdi.dll"+38EAC3: F3 0F 10 8D A4 00 00 00  -  movss xmm1,[rbp+000000A4]
"gamedll_x64_rwdi.dll"+38EACB: 89 85 88 00 00 00        -  mov [rbp+00000088],eax
"gamedll_x64_rwdi.dll"+38EAD1: 48 8B D6                 -  mov rdx,rsi
"gamedll_x64_rwdi.dll"+38EAD4: 48 8B CD                 -  mov rcx,rbp
"gamedll_x64_rwdi.dll"+38EAD7: F3 0F 2C C1              -  cvttss2si eax,xmm1
"gamedll_x64_rwdi.dll"+38EADB: 66 0F 6E C0              -  movd xmm0,eax
"gamedll_x64_rwdi.dll"+38EADF: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+38EAE2: F3 0F 5C C8              -  subss xmm1,xmm0
"gamedll_x64_rwdi.dll"+38EAE6: F3 0F 11 8D 8C 00 00 00  -  movss [rbp+0000008C],xmm1
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+38EAEE: E8 DD 02 00 00           -  call gamedll_x64_rwdi.dll+38EDD0
"gamedll_x64_rwdi.dll"+38EAF3: 48 8D 4E 10              -  lea rcx,[rsi+10]
"gamedll_x64_rwdi.dll"+38EAF7: FF 15 13 4E F9 00        -  call qword ptr [gamedll_x64_rwdi.dll+1323910]
"gamedll_x64_rwdi.dll"+38EAFD: F3 0F 10 0D CB D0 03 01  -  movss xmm1,[gamedll_x64_rwdi.dll+13CBBD0]
"gamedll_x64_rwdi.dll"+38EB05: 0F 2E 4D 08              -  ucomiss xmm1,[rbp+08]
"gamedll_x64_rwdi.dll"+38EB09: 0F 28 F8                 -  movaps xmm7,xmm0
"gamedll_x64_rwdi.dll"+38EB0C: 75 09                    -  jne gamedll_x64_rwdi.dll+38EB17
"gamedll_x64_rwdi.dll"+38EB0E: 8B 85 8C 00 00 00        -  mov eax,[rbp+0000008C]
"gamedll_x64_rwdi.dll"+38EB14: 89 45 08                 -  mov [rbp+08],eax
"gamedll_x64_rwdi.dll"+38EB17: 0F 57 F6                 -  xorps xmm6,xmm6
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"No description"</Description>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>5D2D9824</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Some other assholes non time of day script"</Description>
          <LastState/>
          <Color>C0C0C0</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"gamedll_x64_rwdi.dll"+3926E3)
label(returnhere)
label(originalcode)
label(exit)
label(TimePoint)

newmem: //this is allocated memory, you have read,write,execute access
push rax
mov rax,[TimePoint]
mov [rdi+000000A4],rax
pop rax

originalcode:
//movss [rdi+000000A4],xmm6

exit:
jmp returnhere

TimePoint:
dd (float)0.5

"gamedll_x64_rwdi.dll"+3926E3:
jmp newmem
nop
nop
nop
returnhere:

registersymbol(TimePoint)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
unregistersymbol(TimePoint)
"gamedll_x64_rwdi.dll"+3926E3:
movss [rdi+000000A4],xmm6
//Alt: db F3 0F 11 B7 A4 00 00 00

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+3926E3

"gamedll_x64_rwdi.dll"+3926BD: 48 83 C4 50              -  add rsp,50
"gamedll_x64_rwdi.dll"+3926C1: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+3926C2: C3                       -  ret
"gamedll_x64_rwdi.dll"+3926C3: 39 AF E0 00 00 00        -  cmp [rdi+000000E0],ebp
"gamedll_x64_rwdi.dll"+3926C9: 75 E3                    -  jne gamedll_x64_rwdi.dll+3926AE
"gamedll_x64_rwdi.dll"+3926CB: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+3926CE: E8 2D 01 00 00           -  call gamedll_x64_rwdi.dll+392800
"gamedll_x64_rwdi.dll"+3926D3: F3 0F 5E F0              -  divss xmm6,xmm0
"gamedll_x64_rwdi.dll"+3926D7: F3 0F 59 F7              -  mulss xmm6,xmm7
"gamedll_x64_rwdi.dll"+3926DB: F3 0F 58 B7 A4 00 00 00  -  addss xmm6,[rdi+000000A4]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+3926E3: F3 0F 11 B7 A4 00 00 00  -  movss [rdi+000000A4],xmm6
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+3926EB: EB C1                    -  jmp gamedll_x64_rwdi.dll+3926AE
"gamedll_x64_rwdi.dll"+3926ED: 33 ED                    -  xor ebp,ebp
"gamedll_x64_rwdi.dll"+3926EF: 89 AF A8 00 00 00        -  mov [rdi+000000A8],ebp
"gamedll_x64_rwdi.dll"+3926F5: 48 8B 6C 24 78           -  mov rbp,[rsp+78]
"gamedll_x64_rwdi.dll"+3926FA: 48 83 C4 50              -  add rsp,50
"gamedll_x64_rwdi.dll"+3926FE: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+3926FF: C3                       -  ret
"gamedll_x64_rwdi.dll"+392700: 40 57                    -  push rdi
"gamedll_x64_rwdi.dll"+392702: 48 83 EC 40              -  sub rsp,40
"gamedll_x64_rwdi.dll"+392706: 48 8B F9                 -  mov rdi,rcx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2600</ID>
          <Description>"Enable Find Better Injection"</Description>
          <LastState/>
          <Color>C0C0C0</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-02
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Base_Address_ret,gamedll_x64_rwdi.dll,48 8B 48 40 33 D2 89 74) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+70BA33)

label(code)
label(return)
alloc(Base_Player,16)
registersymbol(Base_Player)

newmem:

code:
  mov rcx,[rax+40]
  mov [Base_Player],rax
  mov [Base_Player+8],rcx
  xor edx,edx
  jmp return

Base_Address_ret:
  jmp code
  nop
return:
registersymbol(Base_Address_ret)

[DISABLE]

Base_Address_ret:
  db 48 8B 48 40 33 D2

unregistersymbol(Base_Address_ret)
dealloc(newmem)

dealloc(Base_Player)
unregistersymbol(Base_Player)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+70BA33

"gamedll_x64_rwdi.dll"+70B9F7: 48 8D 54 24 40           -  lea rdx,[rsp+40]
"gamedll_x64_rwdi.dll"+70B9FC: 48 8B 01                 -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+70B9FF: FF 90 98 05 00 00        -  call qword ptr [rax+00000598]
"gamedll_x64_rwdi.dll"+70BA05: 48 8B 4C 24 40           -  mov rcx,[rsp+40]
"gamedll_x64_rwdi.dll"+70BA0A: FF 15 50 3A C1 00        -  call qword ptr [gamedll_x64_rwdi.dll+131F460]
"gamedll_x64_rwdi.dll"+70BA10: 49 83 BD C0 00 00 00 00  -  cmp qword ptr [r13+000000C0],00
"gamedll_x64_rwdi.dll"+70BA18: 0F 84 C2 00 00 00        -  je gamedll_x64_rwdi.dll+70BAE0
"gamedll_x64_rwdi.dll"+70BA1E: 49 8B 87 08 09 00 00     -  mov rax,[r15+00000908]
"gamedll_x64_rwdi.dll"+70BA25: 4C 8D 0D 5C E1 4D 01     -  lea r9,[gamedll_x64_rwdi.dll+1BE9B88]
"gamedll_x64_rwdi.dll"+70BA2C: 4C 8D 05 9D E2 4D 01     -  lea r8,[gamedll_x64_rwdi.dll+1BE9CD0]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+70BA33: 48 8B 48 40              -  mov rcx,[rax+40]
"gamedll_x64_rwdi.dll"+70BA37: 33 D2                    -  xor edx,edx
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+70BA39: 89 74 24 20              -  mov [rsp+20],esi
"gamedll_x64_rwdi.dll"+70BA3D: E8 86 65 B5 00           -  call gamedll_x64_rwdi.dll+1261FC8
"gamedll_x64_rwdi.dll"+70BA42: 8B CE                    -  mov ecx,esi
"gamedll_x64_rwdi.dll"+70BA44: 48 85 C0                 -  test rax,rax
"gamedll_x64_rwdi.dll"+70BA47: 74 03                    -  je gamedll_x64_rwdi.dll+70BA4C
"gamedll_x64_rwdi.dll"+70BA49: 8B 48 40                 -  mov ecx,[rax+40]
"gamedll_x64_rwdi.dll"+70BA4C: 48 8D 15 4D 7F 50 01     -  lea rdx,[gamedll_x64_rwdi.dll+1C139A0]
"gamedll_x64_rwdi.dll"+70BA53: 41 B8 0A 00 00 00        -  mov r8d,0000000A
"gamedll_x64_rwdi.dll"+70BA59: FF 15 91 39 C1 00        -  call qword ptr [gamedll_x64_rwdi.dll+131F3F0]
"gamedll_x64_rwdi.dll"+70BA5F: 8B DE                    -  mov ebx,esi
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2601</ID>
              <Description>"Base_Player_Start"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Base_Player</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2662</ID>
              <Description>"Base_Player_Start"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Base_Player</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2602</ID>
              <Description>"Money"</Description>
              <Color>C0C0C0</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Base_Player</Address>
              <Offsets>
                <Offset>40</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2643</ID>
          <Description>"Max HEalth DUD"</Description>
          <LastState/>
          <Color>C0C0C0</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-03
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MAx_Health_ret,gamedll_x64_rwdi.dll,89 87 20 12 00 00 48) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AA51F0)

label(code)
label(return)

alloc(Max_Health,8)
registersymbol(Max_Health)

Max_Health:
dd (float)200

newmem:

code:
  mov eax,[Max_Health]
  mov [rdi+00001220],eax
  jmp return

MAx_Health_ret:
  jmp code
  nop
return:
registersymbol(MAx_Health_ret)

[DISABLE]

MAx_Health_ret:
  db 89 87 20 12 00 00

unregistersymbol(MAx_Health_ret)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AA51F0

"gamedll_x64_rwdi.dll"+AA51CA: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AA51CD: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AA51D0: FF 90 28 01 00 00        -  call qword ptr [rax+00000128]
"gamedll_x64_rwdi.dll"+AA51D6: 84 C0                    -  test al,al
"gamedll_x64_rwdi.dll"+AA51D8: 75 10                    -  jne gamedll_x64_rwdi.dll+AA51EA
"gamedll_x64_rwdi.dll"+AA51DA: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AA51DD: E8 AE F6 FF FF           -  call gamedll_x64_rwdi.dll+AA4890
"gamedll_x64_rwdi.dll"+AA51E2: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AA51E5: E8 26 AE 01 00           -  call gamedll_x64_rwdi.dll+AC0010
"gamedll_x64_rwdi.dll"+AA51EA: 8B 87 1C 12 00 00        -  mov eax,[rdi+0000121C]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AA51F0: 89 87 20 12 00 00        -  mov [rdi+00001220],eax
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AA51F6: 48 8B 5C 24 48           -  mov rbx,[rsp+48]
"gamedll_x64_rwdi.dll"+AA51FB: 48 8B 74 24 50           -  mov rsi,[rsp+50]
"gamedll_x64_rwdi.dll"+AA5200: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"gamedll_x64_rwdi.dll"+AA5205: 48 83 C4 30              -  add rsp,30
"gamedll_x64_rwdi.dll"+AA5209: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+AA520A: C3                       -  ret 
"gamedll_x64_rwdi.dll"+AA520B: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+AA520C: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+AA520D: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+AA520E: CC                       -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2644</ID>
          <Description>"Health Base"</Description>
          <LastState/>
          <Color>C0C0C0</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-03
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Health_Base_ret,gamedll_x64_rwdi.dll,0F 2F 87 1C 12 00 00 76) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AA507D)

label(code)
label(return)

alloc(Health_Base,8)
registersymbol(Health_Base)

newmem:

code:
  mov [Health_Base],rdi
  comiss xmm0,[rdi+0000121C]

  jmp return

Health_Base_ret:
  jmp code
  nop
  nop
return:
registersymbol(Health_Base_ret)

[DISABLE]

Health_Base_ret:
  db 0F 2F 87 1C 12 00 00

unregistersymbol(Health_Base_ret)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AA507D

"gamedll_x64_rwdi.dll"+AA5050: 80 7A 16 00              -  cmp byte ptr [rdx+16],00
"gamedll_x64_rwdi.dll"+AA5054: 74 1D                    -  je gamedll_x64_rwdi.dll+AA5073
"gamedll_x64_rwdi.dll"+AA5056: F3 0F 10 8F 1C 12 00 00  -  movss xmm1,[rdi+0000121C]
"gamedll_x64_rwdi.dll"+AA505E: 48 8D 8F C8 08 00 00     -  lea rcx,[rdi+000008C8]
"gamedll_x64_rwdi.dll"+AA5065: 41 B0 01                 -  mov al,01
"gamedll_x64_rwdi.dll"+AA5068: F3 0F 5C 4A 2C           -  subss xmm1,[rdx+2C]
"gamedll_x64_rwdi.dll"+AA506D: 48 8B 01                 -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+AA5070: FF 50 20                 -  call qword ptr [rax+20]
"gamedll_x64_rwdi.dll"+AA5073: F3 0F 10 87 20 12 00 00  -  movss xmm0,[rdi+00001220]
"gamedll_x64_rwdi.dll"+AA507B: 33 DB                    -  xor ebx,ebx
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AA507D: 0F 2F 87 1C 12 00 00     -  comiss xmm0,[rdi+0000121C]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AA5084: 76 06                    -  jna gamedll_x64_rwdi.dll+AA508C
"gamedll_x64_rwdi.dll"+AA5086: 89 9F 28 0B 00 00        -  mov [rdi+00000B28],ebx
"gamedll_x64_rwdi.dll"+AA508C: 48 8B 07                 -  mov rax,[rdi]
"gamedll_x64_rwdi.dll"+AA508F: 48 8B CF                 -  mov rcx,rdi
"gamedll_x64_rwdi.dll"+AA5092: FF 90 28 01 00 00        -  call qword ptr [rax+00000128]
"gamedll_x64_rwdi.dll"+AA5098: 84 C0                    -  test al,al
"gamedll_x64_rwdi.dll"+AA509A: 0F 85 56 01 00 00        -  jne gamedll_x64_rwdi.dll+AA51F6
"gamedll_x64_rwdi.dll"+AA50A0: 48 8B 87 B8 0B 00 00     -  mov rax,[rdi+00000BB8]
"gamedll_x64_rwdi.dll"+AA50A7: 38 58 10                 -  cmp [rax+10],bl
"gamedll_x64_rwdi.dll"+AA50AA: 74 0F                    -  je gamedll_x64_rwdi.dll+AA50BB
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2645</ID>
              <Description>"Health_Base"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>Health_Base</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2646</ID>
              <Description>"Health_Base"</Description>
              <Color>C0C0C0</Color>
              <VariableType>Float</VariableType>
              <Address>Health_Base</Address>
              <Offsets>
                <Offset>121C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2647</ID>
              <Description>"Health_Base"</Description>
              <Color>C0C0C0</Color>
              <VariableType>Float</VariableType>
              <Address>Health_Base</Address>
              <Offsets>
                <Offset>1220</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of movss [rbx+00000954],xmm0</Description>
      <Address>7F90E05ED77</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AAED77</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>54</Byte>
        <Byte>09</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>40</Byte>
        <Byte>84</Byte>
        <Byte>F6</Byte>
        <Byte>74</Byte>
        <Byte>15</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [gamedll_x64_rwdi.dll+1C14D0D],cl</Description>
      <Address>7F94FAB5E60</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>10D5E60</ModuleNameOffset>
      <Before>
        <Byte>84</Byte>
        <Byte>42</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>88</Byte>
        <Byte>0D</Byte>
        <Byte>A7</Byte>
        <Byte>EE</Byte>
        <Byte>B3</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>6C</Byte>
        <Byte>24</Byte>
        <Byte>78</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [gamedll_x64_rwdi.dll+1BA60F7],cl</Description>
      <Address>7F94FA822B0</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>10A22B0</ModuleNameOffset>
      <Before>
        <Byte>84</Byte>
        <Byte>84</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>88</Byte>
        <Byte>0D</Byte>
        <Byte>41</Byte>
        <Byte>3E</Byte>
        <Byte>B0</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>58</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movaps [rsp+30],xmm7</Description>
      <Address>7F94EA5EBC1</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AAEBC1</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>28</Byte>
        <Byte>1F</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>FF</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of subss xmm7,xmm6</Description>
      <Address>7F94EC0E208</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>C5E208</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>60</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>FE</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>40</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movaps xmm6,[rsp+40]</Description>
      <Address>7F94EC0E20C</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>C5E20C</ModuleNameOffset>
      <Before>
        <Byte>60</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>47</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm1,[engine_x64_rwdi.CLevel::m_RTTI+51C94]</Description>
      <Address>7FF162A80A3</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A80A3</ModuleNameOffset>
      <Before>
        <Byte>05</Byte>
        <Byte>5D</Byte>
        <Byte>92</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>0D</Byte>
        <Byte>89</Byte>
        <Byte>91</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C8</Byte>
        <Byte>72</Byte>
        <Byte>03</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [engine_x64_rwdi.CLevel::m_RTTI+51C94],xmm1</Description>
      <Address>7FF162A80B8</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A80B8</ModuleNameOffset>
      <Before>
        <Byte>33</Byte>
        <Byte>D2</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CF</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>0D</Byte>
        <Byte>74</Byte>
        <Byte>91</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>7B</Byte>
        <Byte>89</Byte>
        <Byte>49</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm1,[engine_x64_rwdi.SNavMeshParams::AUTO_CONNECTION_DETECT_MAX_H_DISTANCE+480]</Description>
      <Address>7FF16740E54</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>740E54</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>0D</Byte>
        <Byte>80</Byte>
        <Byte>E4</Byte>
        <Byte>0F</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>10</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm0,[rcx+00000164]</Description>
      <Address>7FF16740E6E</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>740E6E</ModuleNameOffset>
      <Before>
        <Byte>89</Byte>
        <Byte>60</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>81</Byte>
        <Byte>64</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>59</Byte>
        <Byte>D1</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm0,[engine_x64_rwdi.CLevel::m_RTTI+518C4]</Description>
      <Address>7FF162A7FD2</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A7FD2</ModuleNameOffset>
      <Before>
        <Byte>05</Byte>
        <Byte>9E</Byte>
        <Byte>8E</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>05</Byte>
        <Byte>8A</Byte>
        <Byte>8E</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>0D</Byte>
        <Byte>86</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm1,[engine_x64_rwdi.CLevel::m_RTTI+518C8]</Description>
      <Address>7FF162A7FDA</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A7FDA</ModuleNameOffset>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>0D</Byte>
        <Byte>86</Byte>
        <Byte>8E</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>2D</Byte>
        <Byte>76</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm5,[engine_x64_rwdi.CLevel::m_RTTI+518C0]</Description>
      <Address>7FF162A7FE2</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A7FE2</ModuleNameOffset>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>2D</Byte>
        <Byte>76</Byte>
        <Byte>8E</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>05</Byte>
        <Byte>20</Byte>
        <Byte>93</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [engine_x64_rwdi.CLevel::m_RTTI+51D60],xmm5</Description>
      <Address>7FF162A8043</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A8043</ModuleNameOffset>
      <Before>
        <Byte>05</Byte>
        <Byte>39</Byte>
        <Byte>8E</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>2D</Byte>
        <Byte>B5</Byte>
        <Byte>92</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>05</Byte>
        <Byte>C9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm0,[engine_x64_rwdi.CLevel::m_RTTI+518CC]</Description>
      <Address>7FF162A8005</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A8005</ModuleNameOffset>
      <Before>
        <Byte>05</Byte>
        <Byte>FF</Byte>
        <Byte>92</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>05</Byte>
        <Byte>5F</Byte>
        <Byte>8E</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>0D</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [engine_x64_rwdi.CLevel::m_RTTI+51D68],xmm1</Description>
      <Address>7FF162A800D</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A800D</ModuleNameOffset>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>0D</Byte>
        <Byte>F3</Byte>
        <Byte>92</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>05</Byte>
        <Byte>F6</Byte>
        <Byte>92</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [engine_x64_rwdi.CLevel::m_RTTI+51D64],xmm0</Description>
      <Address>7FF162A7FFD</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A7FFD</ModuleNameOffset>
      <Before>
        <Byte>B8</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>05</Byte>
        <Byte>FF</Byte>
        <Byte>92</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mulss xmm3,xmm0</Description>
      <Address>7FF162A8565</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A8565</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>5A</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>59</Byte>
        <Byte>D8</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>59</Byte>
        <Byte>E0</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mulss xmm5,[engine_x64_rwdi.CDynamicRTTIObject::`vftable'+776C]</Description>
      <Address>7FF162A8602</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A8602</ModuleNameOffset>
      <Before>
        <Byte>80</Byte>
        <Byte>5C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>59</Byte>
        <Byte>2D</Byte>
        <Byte>AA</Byte>
        <Byte>31</Byte>
        <Byte>59</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>80</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of addss xmm2,[rdx+14]</Description>
      <Address>7FF162A856D</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A856D</ModuleNameOffset>
      <Before>
        <Byte>D8</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>59</Byte>
        <Byte>E0</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>52</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>78</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm1,[engine_x64_rwdi.SNavMeshParams::AUTO_CONNECTION_DETECT_MAX_H_DISTANCE+480]</Description>
      <Address>7FF162AB702</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2AB702</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>98</Byte>
        <Byte>03</Byte>
        <Byte>09</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>0D</Byte>
        <Byte>D2</Byte>
        <Byte>3B</Byte>
        <Byte>59</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C1</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rsi+00000230],xmm2</Description>
      <Address>7FF162AB715</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2AB715</ModuleNameOffset>
      <Before>
        <Byte>91</Byte>
        <Byte>30</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>96</Byte>
        <Byte>30</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>DA</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rsi+00000238],xmm0</Description>
      <Address>7FF162AB728</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2AB728</ModuleNameOffset>
      <Before>
        <Byte>C2</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>59</Byte>
        <Byte>DA</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>38</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5E</Byte>
        <Byte>CB</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rsi+00000234],xmm3</Description>
      <Address>7FF162AB734</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2AB734</ModuleNameOffset>
      <Before>
        <Byte>90</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5E</Byte>
        <Byte>CB</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>9E</Byte>
        <Byte>34</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>8E</Byte>
        <Byte>3C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm6,[rax+00000230]</Description>
      <Address>7FF162A7233</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A7233</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>70</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>B0</Byte>
        <Byte>30</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>30</Byte>
        <Byte>F4</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm1,[rax+00000230]</Description>
      <Address>7FF16508795</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>508795</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>88</Byte>
        <Byte>30</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>59</Byte>
        <Byte>4A</Byte>
        <Byte>28</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [engine_x64_rwdi.CLevel::m_RTTI+518C4],xmm0</Description>
      <Address>7FF162A7DF0</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A7DF0</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>34</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>05</Byte>
        <Byte>6C</Byte>
        <Byte>90</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>38</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [engine_x64_rwdi.CLevel::m_RTTI+518C8],xmm1</Description>
      <Address>7FF162A7E00</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A7E00</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>38</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>0D</Byte>
        <Byte>60</Byte>
        <Byte>90</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>83</Byte>
        <Byte>3C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [engine_x64_rwdi.CLevel::m_RTTI+518CC],xmm0</Description>
      <Address>7FF162A7E10</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2A7E10</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>3C</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>05</Byte>
        <Byte>54</Byte>
        <Byte>90</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>83</Byte>
        <Byte>40</Byte>
        <Byte>02</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov eax,[rdx+00000084]</Description>
      <Address>7FF1602E3D4</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>2E3D4</ModuleNameOffset>
      <Before>
        <Byte>81</Byte>
        <Byte>80</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>82</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>81</Byte>
        <Byte>84</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [dinput8.dll+35100],eax</Description>
      <Address>7FF2B9D5B75</Address>
      <ModuleName>dinput8.dll</ModuleName>
      <ModuleNameOffset>15B75</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>F9</Byte>
        <Byte>44</Byte>
        <Byte>8B</Byte>
        <Byte>F2</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>05</Byte>
        <Byte>85</Byte>
        <Byte>F5</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>77</Byte>
        <Byte>25</Byte>
        <Byte>02</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of cmp dword ptr [dinput8.dll+29074],00</Description>
      <Address>7FF2B9D5B98</Address>
      <ModuleName>dinput8.dll</ModuleName>
      <ModuleNameOffset>15B98</ModuleNameOffset>
      <Before>
        <Byte>88</Byte>
        <Byte>39</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>3D</Byte>
        <Byte>D5</Byte>
        <Byte>34</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>74</Byte>
        <Byte>1A</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>3D</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Health_Base_ret</Name>
      <Address>7F90E05507D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iw_aob1</Name>
      <Address>7FA4508C538</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>elp_aob1</Name>
      <Address>7FA451027BB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wisz_aob1</Name>
      <Address>7FA4552203C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Clip_Ammo_ret</Name>
      <Address>7FA4561F4E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Reload_ret</Name>
      <Address>7FA456FC7BE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Time_of_Day_Adjuster_ret</Name>
      <Address>7FA44DD29B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Secondary</Name>
      <Address>7FA44F43C7F</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>C = [[C:\users\akuma\desktop\Color_Picker.lua]]

function ColorPick()
Color_Pick = Item.."."..Element.." ="
--print(Color_Pick)
dofile(C)
end


function ChangeColor()
Item = "t"
Element = "Color"
pcall(ColorPick)

end





t= createForm()
t.OnClick = ChangeColor
</LuaScript>
</CheatTable>
