<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"AdvFreeCam (F2)"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : witcher3.exe
  Version: 1.03 Steam
  Date   : 2015-05-22
  Author : mgr.inz.Player
}

define(CameraSpeed,0.05)  //sane range: 0.01 - 0.50

{
NUM 5 - forward
NUM 2 - backward
NUM 1 - strafe left
NUM 3 - strafe right
NUM 7 - Elev up
NUM 9 - Elev down

press right mouse button to speed up freecam
}


[ENABLE]
alloc(newmem,$1000,witcher3.exe)


aobscanmodule(AdvancedFreeCam,witcher3.exe,E8 8B 42 3C 89 41 EC 8B 42 40 89 41 F0) // should be unique
registersymbol(AdvancedFreeCam)

aobscanmodule(CamPos,witcher3.exe,08 48 8B C1 C3 CC CC CC CC CC CC CC CC CC CC CC CC 8B 02 89 01 8B 42 04) // should be unique
registersymbol(CamPos)

label(return)
label(return2)


label(normVector)
label(FreeCam)
label(epilog)
label(subGetAsyncKeyState)
label(factor)





newmem:
  lea rax,[rdx+40]
  mov [normVector],rax

  mov eax,[rdx+40]
  mov [rcx-10],eax
  jmp return




FreeCam:
cmp [rcx+5c],4
je @f

mov eax,[rdx]     //orig
mov [rcx],eax     //orig
mov eax,[rdx+04]  //orig
jmp return2

@@:
push r10
push r11
push r12
push r13
push r14
push r15
push r8
push r9
push rax
push rbp
push rbx
push rcx
push rdi
push rdx
push rsi

//pushed again, because it has needed address
push rcx

  xor r10,r10
  xorps xmm15,xmm15

  mov ecx,#101 //FORWARD
  mov r11,1
  call subGetAsyncKeyState
  mov ecx,#98 //BACKWARD
  mov r11,2
  call subGetAsyncKeyState
  mov ecx,#97 //LEFT
  mov r11,4
  call subGetAsyncKeyState
  mov ecx,#99 //RIGHT
  mov r11,8
  call subGetAsyncKeyState

  mov ecx,#103 //UP
  mov r11,10
  call subGetAsyncKeyState
  mov ecx,#105 //DOWN
  mov r11,20
  call subGetAsyncKeyState

  mov ecx,#2 //Faster (right mouse button)
  mov r11,40
  call subGetAsyncKeyState

  pop rcx // rcx has cam pos address

  test r10,r10
  jz epilog


  mov rax,[normVector]
  test rax,rax
  jz epilog

  movups xmm0,[rax]

  test r10,01  // forward
  jz +4
  addps xmm15,xmm0

  test r10,02  // backward
  jz +4
  subps xmm15,xmm0


  shufps xmm0,xmm0,21 //swap x and y
  xorps xmm1,xmm1
  movq xmm1,xmm0      // only x and y
  subss xmm1,xmm0
  subss xmm1,xmm0

  test r10,04  // left
  jz +4
  addps xmm15,xmm1

  test r10,08  // right
  jz +4
  subps xmm15,xmm1

  // move in Z axis
  mov eax,(float)1
  movd xmm0,eax
  shufps xmm0,xmm0,45

  test r10,10  // up
  jz +4
  addps xmm15,xmm0

  test r10,20  // down
  jz +4
  subps xmm15,xmm0

  // xmm15 is a sum of vectors

  movaps xmm0,xmm15
  xorps xmm1,xmm1
  mulps xmm15,xmm15
  movss xmm1,xmm15
  shufps xmm15,xmm15,21
  addss xmm1,xmm15
  movhlps xmm15,xmm15
  addss xmm1,xmm15
  sqrtss xmm1,xmm1 // xmm1 contains vector length


  xorps xmm15,xmm15
  comiss xmm1,xmm15 // deal with "division by zero"
  je epilog

  shufps xmm1,xmm1,00
  divps xmm0,xmm1   // vector is now normalized


  movss xmm1,[factor]
  shufps xmm1,xmm1,00
  mulps xmm0,xmm1


  test r10,40  // faster (3times faster)
  jz @f
  movaps xmm1,xmm0
  addps xmm0,xmm1
  addps xmm0,xmm1
@@:


  // move camera
  movups xmm1,[rcx]
  addps xmm1,xmm0
  movq [rcx],xmm1
  movhlps xmm1,xmm1
  movss [rcx+8],xmm1


epilog:
pop rsi
pop rdx
pop rdi
pop rcx
pop rbx
pop rbp
pop rax
pop r9
pop r8
pop r15
pop r14
pop r13
pop r12
pop r11
pop r10
mov rax,rcx
ret




subGetAsyncKeyState:
  push r10
  push r11

  sub rsp,08
  call GetAsyncKeyState
  add rsp,08

  pop r11
  pop r10
  test ax,8000

  jz short @f
    or r10,r11
  @@:
  ret

normVector:
dq 0
factor:
dd (float)CameraSpeed

AdvancedFreeCam+07:
  jmp newmem
  nop
return:


CamPos+11:
  jmp FreeCam
  nop
  nop
return2:

[DISABLE]

AdvancedFreeCam+07:
  db 8B 42 40 89 41 F0

CamPos+11:
  db 8B 02 89 01 8B 42 04

unregistersymbol(AdvancedFreeCam)
unregistersymbol(CamPos)
dealloc(newmem)



//NormVect
{
// ORIGINAL CODE - INJECTION POINT: "witcher3.exe"+D9057A
"witcher3.exe"+D9055C: 8B 42 28              -  mov eax,[rdx+28]
"witcher3.exe"+D9055F: 89 41 D8              -  mov [rcx-28],eax
"witcher3.exe"+D90562: 8B 42 30              -  mov eax,[rdx+30]
"witcher3.exe"+D90565: 89 41 E0              -  mov [rcx-20],eax
"witcher3.exe"+D90568: 8B 42 34              -  mov eax,[rdx+34]
"witcher3.exe"+D9056B: 89 41 E4              -  mov [rcx-1C],eax
"witcher3.exe"+D9056E: 8B 42 38              -  mov eax,[rdx+38]
"witcher3.exe"+D90571: 89 41 E8              -  mov [rcx-18],eax
"witcher3.exe"+D90574: 8B 42 3C              -  mov eax,[rdx+3C]
"witcher3.exe"+D90577: 89 41 EC              -  mov [rcx-14],eax
// ---------- INJECTING HERE ----------
"witcher3.exe"+D9057A: 8B 42 40              -  mov eax,[rdx+40]
"witcher3.exe"+D9057D: 89 41 F0              -  mov [rcx-10],eax
// ---------- DONE INJECTING  ----------
"witcher3.exe"+D90580: 8B 42 44              -  mov eax,[rdx+44]
"witcher3.exe"+D90583: 89 41 F4              -  mov [rcx-0C],eax
"witcher3.exe"+D90586: 8B 42 48              -  mov eax,[rdx+48]
"witcher3.exe"+D90589: 89 41 F8              -  mov [rcx-08],eax
"witcher3.exe"+D9058C: 8B 42 4C              -  mov eax,[rdx+4C]
"witcher3.exe"+D9058F: 89 41 FC              -  mov [rcx-04],eax
"witcher3.exe"+D90592: 48 8B 52 50           -  mov rdx,[rdx+50]
"witcher3.exe"+D90596: 48 85 D2              -  test rdx,rdx
"witcher3.exe"+D90599: 74 06                 -  je witcher3.exe+D905A1
"witcher3.exe"+D9059B: 48 8B 52 10           -  mov rdx,[rdx+10]
}





//CamPos
{
// ORIGINAL CODE - INJECTION POINT: "witcher3.exe"+B7030

"witcher3.exe"+B7026: CC                                -  int 3
"witcher3.exe"+B7027: CC                                -  int 3
"witcher3.exe"+B7028: CC                                -  int 3
"witcher3.exe"+B7029: CC                                -  int 3
"witcher3.exe"+B702A: CC                                -  int 3
"witcher3.exe"+B702B: CC                                -  int 3
"witcher3.exe"+B702C: CC                                -  int 3
"witcher3.exe"+B702D: CC                                -  int 3
"witcher3.exe"+B702E: CC                                -  int 3
"witcher3.exe"+B702F: CC                                -  int 3
// ---------- INJECTING HERE ----------
"witcher3.exe"+B7030: 8B 02                             -  mov eax,[rdx]
"witcher3.exe"+B7032: 89 01                             -  mov [rcx],eax
"witcher3.exe"+B7034: 8B 42 04                          -  mov eax,[rdx+04]
// ---------- DONE INJECTING  ----------
"witcher3.exe"+B7037: 89 41 04                          -  mov [rcx+04],eax
"witcher3.exe"+B703A: 8B 42 08                          -  mov eax,[rdx+08]
"witcher3.exe"+B703D: 89 41 08                          -  mov [rcx+08],eax
"witcher3.exe"+B7040: 8B 42 0C                          -  mov eax,[rdx+0C]
"witcher3.exe"+B7043: 89 41 0C                          -  mov [rcx+0C],eax
"witcher3.exe"+B7046: 48 8B C1                          -  mov rax,rcx
"witcher3.exe"+B7049: C3                                -  ret
"witcher3.exe"+B704A: CC                                -  int 3
"witcher3.exe"+B704B: CC                                -  int 3
"witcher3.exe"+B704C: CC                                -  int 3
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>113</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>NUM 5 - forward
NUM 2 - backward
NUM 1 - strafe left
NUM 3 - strafe right
NUM 7 - Elev up
NUM 9 - Elev down

press right mouse button to speed up freecam
</Comments>
</CheatTable>
