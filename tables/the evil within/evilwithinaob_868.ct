<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>93</ID>
      <Description>"syringes aob"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Aobscan(_InfSyringes,48 8B 41 08 44 0F B7 80 E4 01 00 00 66 45 85 C0)
alloc(newmem,2048,"EvilWithin.exe"+764280)
label(returnhere)
label(originalcode)
label(exit)
Registersymbol(_InfSyringes)

newmem:

originalcode:
mov [rcx+10],edx
test r8l,r8l

exit:
jmp returnhere

_InfSyringes-F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_InfSyringes)
dealloc(newmem)
_InfSyringes-F:
mov [rcx+10],edx
test r8l,r8l
//Alt: db 89 51 10 45 84 C0
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>94</ID>
      <Description>"sprint aob"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Aobscan(_Sprint,48 98 F3 41 0F 5E 87 D8 10 00 00 44 0F B7 34 81)
alloc(newmem,2048,"EvilWithin.exe"+A2FE19) 
label(returnhere)
label(originalcode)
label(exit)
Registersymbol(_Sprint)
newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [r15+000010E8],(float)0

originalcode:
movss xmm0,[r15+000010E8]

exit:
jmp returnhere

_Sprint-13:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_Sprint)
dealloc(newmem)
_Sprint-13:
movss xmm0,[r15+000010E8]
//Alt: db F3 41 0F 10 87 E8 10 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>95</ID>
      <Description>"aob points"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Aobscan(_Points,48 89 74 24 38 0F B6 B1 AB 12 00 00 48 8B D9)
alloc(newmem,2048,"EvilWithin.exe"+75691A) 
label(returnhere)
label(originalcode)
label(exit)
Registersymbol(_Points)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [rax+10],#99999999

originalcode:
mov ebx,[rax+10]
mov rcx,rax

exit:
jmp returnhere

_Points-41:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_Points)
dealloc(newmem)
_Points-41:
mov ebx,[rax+10]
mov rcx,rax
//Alt: db 8B 58 10 48 8B C8
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>96</ID>
      <Description>"aob keys"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Aobscan(_Keys,32 83 40 08 00 00 24 02 30 83 40 08 00 00)
alloc(newmem,2048,"EvilWithin.exe"+DE8E92) 
label(returnhere)
label(originalcode)
label(exit)
Registersymbol(_Keys)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [rcx+10],64
setge al

exit:
jmp returnhere

_Keys-8:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_Keys)
dealloc(newmem)
_Keys-8:
cmp [rcx+10],eax
setge al
//Alt: db 39 41 10 0F 9D C0
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>97</ID>
      <Description>"aob health"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Aobscan(_Health,48 8B 01 FF 90 58 03 00 00)
alloc(newmem,2048,"EvilWithin.exe"+759120) 
label(returnhere)
label(originalcode)
label(exit)
label(Health)
Registersymbol(_Health)

newmem: //this is allocated memory, you have read,write,execute access
cmp dword ptr [rcx+1c],(int)2036427888 // Player
je Health
jne originalcode

Health:
mov dword ptr [rcx+000008B8],(float)10000 // MAX HEALTH
mov dword ptr [rcx+000008BC],(float)10000 // CURRENT HEALTH

originalcode:
movss xmm0,[rcx+000008BC]

exit:
jmp returnhere

_Health-1F:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_Health)
dealloc(newmem)
_Health-1F:
movss xmm0,[rcx+000008BC]
//Alt: db F3 0F 10 81 BC 08 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>98</ID>
      <Description>"aob matches"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Aobscan(_Matches,4C 8B DA 80 B8 03 02 00 00 00 4C 8B D1 )
alloc(newmem,2048,"EvilWithin.exe"+7F6B3C) 
label(returnhere)
label(originalcode)
label(exit)
Registersymbol(_Matches)

newmem: //this is allocated memory, you have read,write,execute access
mov [r8+10],#99
mov [r8+18],#99

originalcode:
mov edx,[r8+10]
cmp r9d,edx

exit:
jmp returnhere

_Matches+F:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_Matches)
dealloc(newmem)
_Matches+F:
mov edx,[r8+10]
cmp r9d,edx
//Alt: db 41 8B 50 10 44 3B CA
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>99</ID>
      <Description>"aob cross parts"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Aobscan(_Parts,48 0F BE C9 48 8B 87 88 01 00 00 44 8B 34 88)
alloc(newmem,2048,"EvilWithin.exe"+95EFD5) 
label(returnhere)
label(originalcode)
label(exit)
Registersymbol(_Parts)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [rax+10],#999

originalcode:
mov edx,[rax+10]
sub edx,r13d

exit:
jmp returnhere

_Parts+95:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_Parts)
dealloc(newmem)
_Parts+95:
mov edx,[rax+10]
sub edx,r13d
//Alt: db 8B 50 10 41 2B D5
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>100</ID>
      <Description>"aob ammo"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Aobscan(_Ammo,44 0F B6 87 A8 00 00 00 48 8B 4F 08 49 8B D6 41 C0 E8 05 41 80 E0 01 E8 ** ** ** ** 8B D8)
alloc(newmem,2048,"EvilWithin.exe"+763301) 
label(returnhere)
label(originalcode)
label(exit)
Registersymbol(_Ammo)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp [rbp+10],#999
jg EvilWithin.exe+76331A

exit:
jmp returnhere

_Ammo+35:
jmp newmem
returnhere:


 
 
[DISABLE]
Unregistersymbol(_Ammo)
dealloc(newmem)
_Ammo+35:
cmp [rbp+10],esi
jg EvilWithin.exe+76331A
//Alt: db 39 75 10 7F 14
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>101</ID>
      <Description>"aob spread"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Aobscan(_Spread,48 8D 9F 10 52 00 00 F3 0F 10 43 04 66 0F 6E C8 F3 0F 58 03)
Registersymbol(_Spread)
alloc(newmem,2048,"EvilWithin.exe"+7FE98F)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [rbx+0C],0

exit:
jmp returnhere

_Spread-20:
jmp newmem
nop
returnhere:




[DISABLE]
Unregistersymbol(_Spread)
dealloc(newmem)
_Spread-20:
movss [rbx+0C],xmm10
//Alt: db F3 44 0F 11 53 0C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>102</ID>
      <Description>"aob no reload"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Aobscan(_NoRld,C7 81 CC 00 00 00 01 00 00 00 8B 81 CC 00 00 00 C3)
alloc(newmem,2048,"EvilWithin.exe"+76170B) 
label(returnhere)
label(originalcode)
label(exit)
Registersymbol(_NoRld)

newmem: //this is allocated memory, you have read,write,execute access
mov [rax+10],#999

originalcode:
mov eax,[rax+10]
ret 
int 3 

exit:
jmp returnhere

_NoRld+25:
jmp newmem
returnhere:


 
 
[DISABLE]
Unregistersymbol(_NoRld)
dealloc(newmem)
_NoRld+25:
mov eax,[rax+10]
ret 
int 3 
//Alt: db 8B 40 10 C3 CC
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :movaps [rcx-80],xmm0</Description>
      <Address>7FF6E0913455</Address>
      <ModuleName>EvilWithin.exe</ModuleName>
      <ModuleNameOffset>133455</ModuleNameOffset>
      <Before>
        <Byte>92</Byte>
        <Byte>80</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>41</Byte>
        <Byte>80</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>42</Byte>
        <Byte>A0</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movaps [rcx+10],xmm1</Description>
      <Address>7FF6E09134A0</Address>
      <ModuleName>EvilWithin.exe</ModuleName>
      <ModuleNameOffset>1334A0</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>42</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>49</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>4A</Byte>
        <Byte>30</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [rcx+10],edx</Description>
      <Address>7FF7006342BC</Address>
      <ModuleName>EvilWithin.exe</ModuleName>
      <ModuleNameOffset>7642BC</ModuleNameOffset>
      <Before>
        <Byte>3B</Byte>
        <Byte>D0</Byte>
        <Byte>0F</Byte>
        <Byte>4F</Byte>
        <Byte>D0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>51</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss xmm4,[rdi+50]</Description>
      <Address>7FF7007731E1</Address>
      <ModuleName>EvilWithin.exe</ModuleName>
      <ModuleNameOffset>8A31E1</ModuleNameOffset>
      <Before>
        <Byte>15</Byte>
        <Byte>9B</Byte>
        <Byte>D5</Byte>
        <Byte>3B</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>67</Byte>
        <Byte>50</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>CA</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [rdi+50],eax</Description>
      <Address>7FF700773225</Address>
      <ModuleName>EvilWithin.exe</ModuleName>
      <ModuleNameOffset>8A3225</ModuleNameOffset>
      <Before>
        <Byte>08</Byte>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>4F</Byte>
        <Byte>68</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>50</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>C3</Byte>
        <Byte>AA</Byte>
        <Byte>E9</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_AddPoints</Name>
      <Address>A93CC0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>newmem</Name>
      <Address>1C86590000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
