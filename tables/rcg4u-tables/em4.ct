<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>10</ID>
      <Description>"geri emergency 4"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Unlimited Money"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//Made by Geri with Cheat Engine 5.6.1
//17th December, 2010
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(moneylabel)
registersymbol(moneylabel)
aobscan(aobmoney,29 81 f4 05 00 00)

aobmoney:
moneylabel:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
sub [ecx+000005f4],eax
mov [ecx+000005f4],3B9AC9FF
//place your code here


originalcode:
//sub [ecx+000005f4],eax

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
moneylabel:
sub [ecx+000005f4],eax
//Alt: db 29 81 F4 05 00 00
unregistersymbol(moneylabel)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Unlimited Health for person"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//Made by Geri with Cheat Engine 5.6.1
//17th December, 2010
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(hpersonlabel)
registersymbol(hpersonlabel)
aobscan(aobhperson,f3 0f 11 8e dc 04 00 00)

aobhperson:
hpersonlabel:
jmp newmem
nop
nop
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
movss [esi+000004dc],xmm1
pushad
mov eax,[esi+000004e0]
mov [esi+000004dc],eax
popad
//place your code here


originalcode:
//movss [esi+000004dc],xmm1

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hpersonlabel:
movss [esi+000004dc],xmm1
//Alt: db F3 0F 11 8E DC 04 00 00
unregistersymbol(hpersonlabel)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Unlimited Health for injured person"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//Made by Geri with Cheat Engine 5.6.1
//17th December, 2010
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(hinjuredlabel)
registersymbol(hinjuredlabel)
aobscan(aobhinjured,f3 0f 11 8e e8 04 00 00)

aobhinjured:
hinjuredlabel:
jmp newmem
nop
nop
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
movss [esi+000004e8],xmm1
pushad
mov eax,[esi+000004ec]
mov [esi+000004e8],eax
popad
//place your code here


originalcode:
//movss [esi+000004e8],xmm1

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hinjuredlabel:
movss [esi+000004e8],xmm1
//Alt: db F3 0F 11 8E E8 04 00 00
unregistersymbol(hinjuredlabel)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Unlimited Health for vehicle"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//Made by Geri with Cheat Engine 5.6.1
//17th December, 2010
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(hvehiclelabel)
registersymbol(hvehiclelabel)
aobscan(aobhvehicle,f3 0f 11 86 3c 05 00 00 76)

aobhvehicle:
hvehiclelabel:
jmp newmem
nop
nop
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
movss [esi+0000053c],xmm0
pushad
mov eax,[esi+00000540]
mov [esi+0000053c],eax
popad
//place your code here


originalcode:
//movss [esi+0000053c],xmm0

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hvehiclelabel:
movss [esi+0000053c],xmm0
//Alt: db F3 0F 11 86 3C 05 00 00
unregistersymbol(hvehiclelabel)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"army"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>8</ID>
          <Description>"armymoney"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : em4.exe
  Version: 1.0
  Date   : 11-01-17
  Author : narcolepticnerd

99999  money for your army
}

[ENABLE]

aobscanmodule(INJECT,em4.G__TypeInfo::Next+538C4,89xxxxxxxxxxe8xxxxxxxxc2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx80xxxxxxxxxxxx75)
alloc(newmem,$1000)

label(code)
label(return)
registersymbol(INJECT)

newmem:

code:
	mov [ecx+000005F4],#99999
	jmp return

INJECT:
	jmp code
	nop

return:


[DISABLE]

INJECT:
	db 89 81 F4 05 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: em4.G__TypeInfo::Next+538C4

em4.G__TypeInfo::Next+538B7: 5E - pop esi
em4.G__TypeInfo::Next+538B8: C3 - ret 
em4.G__TypeInfo::Next+538B9: CC - int 3 
em4.G__TypeInfo::Next+538BA: CC - int 3 
em4.G__TypeInfo::Next+538BB: CC - int 3 
em4.G__TypeInfo::Next+538BC: CC - int 3 
em4.G__TypeInfo::Next+538BD: CC - int 3 
em4.G__TypeInfo::Next+538BE: CC - int 3 
em4.G__TypeInfo::Next+538BF: CC - int 3 
em4.G__TypeInfo::Next+538C0: 8B 44 24 04  - mov eax,[esp+04]
// ---------- INJECTING HERE ----------
em4.G__TypeInfo::Next+538C4: 89 81 F4050000  - mov [ecx+000005F4],eax
// ---------- DONE INJECTING  ----------
em4.G__TypeInfo::Next+538CA: E8 515E0B00 - call 006F5C30
em4.G__TypeInfo::Next+538CF: C2 0400 - ret 0004
em4.G__TypeInfo::Next+538D2: CC - int 3 
em4.G__TypeInfo::Next+538D3: CC - int 3 
em4.G__TypeInfo::Next+538D4: CC - int 3 
em4.G__TypeInfo::Next+538D5: CC - int 3 
em4.G__TypeInfo::Next+538D6: CC - int 3 
em4.G__TypeInfo::Next+538D7: CC - int 3 
em4.G__TypeInfo::Next+538D8: CC - int 3 
em4.G__TypeInfo::Next+538D9: CC - int 3 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
