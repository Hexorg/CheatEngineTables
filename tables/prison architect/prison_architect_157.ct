<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Bank: 999,999"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Simply increases your bank funds to 999999.

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(sBank1)
label(sBank2)
registersymbol(sBank1)
aobscan(aob_bank,D9 82 50 0B 00 00 E8 ?8 ?? EB FF) // Alpha12
//aobscan(aob_bank,D9 82 54 0B 00 00 E8 ?B ?? E? FF) // Alpha11
//aobscan(aob_bank,D9 80 F8 0A 00 00 E8 ?? ?? EC FF) // Alpha10

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

//=======================================//
//add a line to the game code to store the pointer for the bank
//every time the game code reads the bank value
sBank2:
// set bank to 999999
mov [edx+00000B50],(float)999999
//mov [edx+00000B54],(float)999999 // Alpha11
//mov [eax+00000AF8],(float)999999 // Alpha10

originalcode:
fld dword ptr [edx+00000B50]
//fld dword ptr [edx+00000B54] // Alpha11
//fld dword ptr [eax+00000AF8] // Alpha10

exit:
jmp returnhere

//=======================================//
//code injection
aob_bank:
sBank1:
jmp sBank2
nop
returnhere:


 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
sBank1:
fld dword ptr [edx+00000B50]
//fld dword ptr [edx+00000B54] // Alpha11
//fld dword ptr [eax+00000AF8] // Alpha10
unregistersymbol(sBank1)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Raise "Daily Spending Budget""</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Raises the daily spending budget from 1500 to 90000.
// This allows you to hire more staff than you normally would
// before you get access to the Accountant.

// Once you have the accountant, you can turn this off as the
// daily spending budget no longer stops you from hiring staff.

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(sDSB1)
label(sDSB2)
registersymbol(sDSB1)
aobscan(aob_DSB,8B 51 34 8B 45 D0 03 50 1C)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

//=======================================//
//add a line to the game code to store the pointer for the DSB
//every time the game code reads the DSB value
sDSB2:
// set DSB to 90000
mov [ecx+4],(int)90000

originalcode:
mov edx,[ecx+34]
mov eax,[ebp-30]
add edx,[eax+1C]

exit:
jmp returnhere

//=======================================//
//code injection
aob_DSB:
sDSB1:
jmp sDSB2
nop
returnhere:



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
sDSB1:
mov edx,[ecx+34]
mov eax,[ebp-30]
add edx,[eax+1C]
unregistersymbol(sDSB1)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pBank</Name>
      <Address>0E620011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sDSB1</Name>
      <Address>005D2878</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sBank1</Name>
      <Address>0062CA1D</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
