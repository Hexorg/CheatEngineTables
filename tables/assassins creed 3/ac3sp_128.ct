<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>24</ID>
      <Description>"GodMode"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobGodmode,83 C1 50 A8 08)

alloc(newmem,4096)

label(aobGodmode_r)
registersymbol(aobGodmode_r)

label(lblGodmode)
label(lblGodmodeSkip)
label(lblGodmodeSkipReturn)

label(bEnableGodmode)
registersymbol(bEnableGodmode)

newmem:
bEnableGodmode:
dd 1

lblGodmode:
cmp dword ptr [bEnableGodmode],1
jne short lblGodmodeSkip
or al,08

lblGodmodeSkip:
add ecx,50  // Original code
test al,08  // Original code
jmp lblGodmodeSkipReturn

//"AC3SP.exe"+C70B10:
aobGodmode:
aobGodmode_r:
jmp lblGodmode
lblGodmodeSkipReturn:

[DISABLE]
//"AC3SP.exe"+C70B10:
aobGodmode_r:
//Alt: add ecx,50
//Alt: test al,08
db 83 C1 50 A8 08

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>25</ID>
          <Description>"bEnableGodmode"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableGodmode</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>48</ID>
      <Description>"Inventory Enumerator"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobEnumerateInventory,8B 11 8B 42 4C FF D0 5E 5D C2 04 00 33 C0 5D C2 04 00)

alloc(newmem,4096)

label(aobEnumerateInventory_r)
registersymbol(aobEnumerateInventory_r)

label(lblEnumerateInventory)
label(lblEnumerateInventoryMoney)
label(lblEnumerateInventorySmokeGrenade)
label(lblEnumerateInventoryBullets)
label(lblEnumerateInventoryDone)
label(lblEnumerateInventoryReturn)
label(lblTestMe)
label(lblTestMeDone)

label(bEnableMoneyHack)
label(bEnableSmokeGrenadeHack)
label(bEnableBulletsHack)

label(iDesiredMoney)
label(iDesiredSmokeGrenades)
label(iDesiredBullets)

registersymbol(bEnableMoneyHack)
registersymbol(bEnableSmokeGrenadeHack)
registersymbol(bEnableBulletsHack)

registersymbol(iDesiredMoney)
registersymbol(iDesiredSmokeGrenades)
registersymbol(iDesiredBullets)

newmem:
bEnableMoneyHack:
dd 1
bEnableSmokeGrenadeHack:
dd 1
bEnableBulletsHack:
dd 1
iDesiredMoney:
dd (int)10000
iDesiredSmokeGrenades:
dd (int)3
iDesiredBullets:
dd (int)8

lblEnumerateInventory:
mov eax,[ecx+4]
cmp eax,(int)1
je lblEnumerateInventoryMoney
cmp eax,(int)5
je lblEnumerateInventorySmokeGrenade
cmp eax,(int)11
je lblEnumerateInventoryBullets
jmp lblEnumerateInventoryDone

lblEnumerateInventoryMoney:
cmp dword ptr [bEnableMoneyHack],1
jne lblEnumerateInventoryDone
mov eax,[iDesiredMoney]
call lblTestMe
jmp lblEnumerateInventoryDone

lblEnumerateInventorySmokeGrenade:
cmp dword ptr [bEnableSmokeGrenadeHack],1
jne lblEnumerateInventoryDone
mov eax,[iDesiredSmokeGrenades]
call lblTestMe
jmp lblEnumerateInventoryDone

lblEnumerateInventoryBullets:
cmp dword ptr [bEnableBulletsHack],1
jne lblEnumerateInventoryDone
mov eax,[iDesiredBullets]
call lblTestMe
jmp lblEnumerateInventoryDone

lblEnumerateInventoryDone:
mov edx,[ecx]     // Original code
mov eax,[edx+4C]  // Original code
jmp lblEnumerateInventoryReturn

lblTestMe:
cmp dword ptr [ecx+C],eax
jge short lblTestMeDone
mov dword ptr [ecx+C],eax
lblTestMeDone:
ret

//"AC3SP.exe"+A2C8EF:
aobEnumerateInventory:
aobEnumerateInventory_r:
jmp lblEnumerateInventory
lblEnumerateInventoryReturn:

[DISABLE]
//"AC3SP.exe"+A2C8EF:
aobEnumerateInventory_r:
//Alt: mov edx,[ecx]
//Alt: mov eax,[edx+4C]
db 8B 11 8B 42 4C

unregistersymbol(aobEnumerateInventory_r)

unregistersymbol(bEnableMoneyHack)
unregistersymbol(bEnableSmokeGrenadeHack)
unregistersymbol(bEnableBulletsHack)

unregistersymbol(iDesiredMoney)
unregistersymbol(iDesiredSmokeGrenades)
unregistersymbol(iDesiredBullets)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>49</ID>
          <Description>"bEnableMoneyHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMoneyHack</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>52</ID>
              <Description>"iDesiredMoney"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iDesiredMoney</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"bEnableSmokeGrenadeHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableSmokeGrenadeHack</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>53</ID>
              <Description>"iDesiredSmokeGrenades"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iDesiredSmokeGrenades</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"bEnableBulletsHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableBulletsHack</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>54</ID>
              <Description>"iDesiredBullets"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iDesiredBullets</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
