<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>17</ID>
      <Description>"AOB Search UPDATE"</Description>
      <Options moBindActivation="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat



{

1) GO to Memory View
2) Hit CTRL+L
3) Past the LUA script bellow in the EXecution area
4) Use the Address's you get and update this table
5) If you dont get address for every thing then the code has changed
   you will have to find the code your self unless someone has
   not done it all ready.
6) Invade Japan then the WORLD!!!





-- AOB Searching Script for Shogun 2
-- By Recifense

function FindCode ()
 if(sl == nil) then
    print("No code found!");
 else
   j = stringlist_getCount(sl);
   print("Found:",j);
   for i = 1, j do
      print(stringlist_getString(sl,i-1));
   end
   object_destroy(sl);
 end
 print(" ")
end

print("=========== Copy from Here ==============")
print(" ")
print("GodMode:")
sl = AOBScan("55 8b ec 83 e4 f8 51 53 56 8b 75 08 8b 86 fc 01 00 00");
FindCode()
print("GodMode1:")
sl = AOBScan("55 8b ec 83 e4 f8 83 ec 74 53 8b d9 8b 83 c0 01 00 00");
FindCode()
print("MonAmmo:")
sl = AOBScan("f3 0f 11 86 88 0f 00 00 ?? ?? ?? ?? ?? ?? 8b 46 14");
FindCode()
print("GodModeS:")
sl = AOBScan("8b f1 8b 8f a0 03 00 00 85 c9");
FindCode()
print("GodModeSH:")
sl = AOBScan("8b 43 40 2b c7 89 44 24 2c c7 44 24 3c 00 00 00 00");
FindCode()
print("MonGold:")
sl = AOBScan("8b 81 6c 04 00 00 c3");
FindCode()
print("MonMP:")
sl = AOBScan("2b d7 89 50 6c ?? ?? c7 40 6c 00 00 00 00");
FindCode()
print("MonSelOfficer:")
sl = AOBScan("39 98 0c 1c 00 00 ?? ?? 8b bf 7c 08 00 00");
FindCode()
print("MonSelTown:")
sl = AOBScan("85 c0 89 46 3c ?? ?? 6a 00 8b ce");
FindCode()
print("MonMP1:")
sl = AOBScan("2b c2 89 41 1c c2 04 00 c7 41 1c 00 00 00 00 c2 04 00");
FindCode()
print("MonProd:")
sl = AOBScan("8b 4b 1c 8b 54 24 14 03 c8 89 0a 33 c9 85 c0");
FindCode()
print("MonResearch:")
sl = AOBScan("03 d0 3b 51 1c ?? ?? 8b b6 b0 07 00 00");
FindCode()
print("Agent:")
sl = AOBScan("8B 99 0C 1C 00 00 85 DB");
FindCode()
print("Army:")
sl = AOBScan("8A 56 74 88 57 08 8B 06 8B 50 1C 8B CE");
FindCode()
print("1 Turn Build:")
sl = AOBScan("8B 4F 0C 50 51 8B CE");
FindCode()
print("Year:")
sl = AOBScan("8B 42 04 56 8B 74 24 08");
FindCode()

print("============== Until Here =================")
















}


 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"NON-AOB (only turn AOB or NON-AOB scripts)"</Description>
      <Color>004000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Shogun2 v 1.10 2th script"</Description>
          <Options moHideChildren="1"/>
          <Color>800000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

assert(Shogun2.dll+11D3190,8B 99 0C 1C 00 00)
assert(Shogun2.dll+5FBFB4,8A 56 74 88 57 08)
assert(Shogun2.dll+1304F49,8B 4F 0C 50 51)
assert(Shogun2.dll+5E0D54,8B 42 04 56 8B 74 24 08)

//////////////////
alloc(newmem,500)
/////////////////

label(_ExitAgent)
label(_ExitArmy)

label(exit)
label(exit2)
label(_AgentXpRank)
label(_AgentPoints)
label(_ArmyRank)
label(_ArmySize)


label(_ArmySizeAmt)
label(_AgentPointsAmt)
registersymbol(_ArmySizeAmt)
registersymbol(_AgentPointsAmt)


label(_AgentXpRankID)
label(_AgentPointsID)
label(_ArmyRankID)
label(_ArmySizeID)
registersymbol(_AgentXpRankID)
registersymbol(_AgentPointsID)
registersymbol(_ArmyRankID)
registersymbol(_ArmySizeID)

label(_YearID)
label(_Construction_UpgradeID)
registersymbol(_YearID)
registersymbol(_Construction_UpgradeID)

label(_Construction_Upgrade)
label(_Construction_UpgradeSetZero)
label(_Construction_UpgradeExit)
label(exit3)

label(_Year)
label(_YearExit)
label(exit4)

label(_SetYear)
registersymbol(_SetYear)


newmem:

//======================
//Agent Skill and XP

_AgentXpRank:
cmp [_AgentXpRankID],01
jne _AgentPoints
mov [_AgentXpRankID],0
mov [ecx+00001C14],#450// XP
jmp _AgentPoints

_AgentPoints:
cmp [_AgentPointsID],01
jne exit
mov [_AgentPointsID],0
push eax
mov eax,[_AgentPointsAmt]
add [ecx+00001C0C],eax
pop eax
jmp exit

exit:
mov ebx,[ecx+00001C0C]
jmp _ExitAgent

//==========================
//Army Rank and Size

_ArmyRank:
cmp [_ArmyRankID],01
jne _ArmySize
mov [_ArmyRankID],0
mov [esi+74],#9 //max rank Do not increse or GAME CRASH
jmp _ArmySize

_ArmySize:
cmp [_ArmySizeID],01
jne exit2
mov [_ArmySizeID],0
push eax
mov eax,[_ArmySizeAmt]
mov [esi+4c],eax
mov [esi+50],eax
pop eax
jmp exit2

exit2:
mov dl,[esi+74]
mov [edi+08],dl
jmp _ExitArmy

//=============================
//1 Turn Building and Upgrades

_Construction_Upgrade:
cmp [_Construction_UpgradeID],01
jne _Construction_UpgradeSetZero
push ebx
mov ebx,[edi+10]
mov [edi+0C],ebx
pop ebx
jmp exit3

_Construction_UpgradeSetZero:
mov [_Construction_UpgradeID],0
jmp exit3

exit3:
mov ecx,[edi+0C]
push eax
push ecx
jmp _Construction_UpgradeExit

//=============================
//Change Year

_Year:
cmp [_YearID],01
jne exit4
push eax
mov eax,[_SetYear]
mov [edx+04],eax
pop eax
jmp exit4

exit4:
mov [_YearID],0
mov eax,[edx+04]
push esi
mov esi,[esp+08]
jmp _YearExit

//////////////////////Variables and ID's
_AgentXpRankID:
dd 0
_AgentPointsID:
dd 0
_ArmyRankID:
dd 0
_ArmySizeID:
dd 0
_YearID:
dd 0
_Construction_UpgradeID:
dd 00

_AgentPointsAmt:
dd #10
_ArmySizeAmt:
dd #500
_SetYear:
dd #1545


/////////////////////Entryes
"Shogun2.dll"+11D3190: //Agent XP and Skill Points
jmp _AgentXpRank
nop
_ExitAgent:

"Shogun2.dll"+5FBFB4: //Army rank and size
jmp _ArmyRank
nop
_ExitArmy:

"Shogun2.dll"+1304F49:   //1 Turn build
jmp _Construction_Upgrade
_Construction_UpgradeExit:

"Shogun2.dll"+5E0D54: //Game Year
jmp _Year
nop
nop
nop
_YearExit:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat

"Shogun2.dll"+11D3190://////Agent xp and points
mov ebx,[ecx+00001C0C]
//Alt: db 8B 99 0C 1C 00 00

"Shogun2.dll"+5FBFB4:  //Army XP Size
mov dl,[esi+74]
mov [edi+08],dl
//Alt: db 8A 56 74 88 57 08

"Shogun2.dll"+1304F49: //1 turn building/Upgrades
mov ecx,[edi+0C]
push eax
push ecx
//Alt: db 8B 4F 0C 50 51

"Shogun2.dll"+5E0D54: //Year Set
mov eax,[edx+04]
push esi
mov esi,[esp+08]
//Alt: db 8B 42 04 56 8B 74 24 08

unregistersymbol(_AgentXpRankID)
unregistersymbol(_AgentPointsID)
unregistersymbol(_ArmyRankID)
unregistersymbol(_ArmySizeID)
unregistersymbol(_YearID)
unregistersymbol(_Construction_UpgradeID)

unregistersymbol(_ArmySizeAmt)
unregistersymbol(_AgentPointsAmt)
unregistersymbol(_SetYear)

dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Agent Skill Points"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_AgentPointsID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>83</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"Agent Skill Points to Add"</Description>
                  <Color>800000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>_AgentPointsAmt</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Agent XP"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_AgentXpRankID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>65</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Army Rank Max"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_ArmyRankID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>90</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>25</ID>
              <Description>"Army Size"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_ArmySizeID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>88</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"Army Size Amount"</Description>
                  <Color>800000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>_ArmySizeAmt</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"1 Turn Build"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_Construction_UpgradeID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>69</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>68</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Year Set"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_YearID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>82</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>32</ID>
                  <Description>"Year"</Description>
                  <Color>800000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>_SetYear</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"&lt;-- Total War - Shogun 2 V1.10 Script V2.1"</Description>
          <Options moHideChildren="1"/>
          <Color>800000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
===========================================
 Total War - Shogun 2
 Game Version  : 1.10
 Script Version: 2.1
 CE Version    : 6.0
 GM, Ammo, Gold, MP, MSO, MP1, Recruitment, Research
 23-Mar-2011 First Release
 29-Mar-2011 AOb version of the script
 01-Apr-2011 Correct GM Troops; added MP for agents; Corrected MonGold; Added MonProd; Added MonRes
 By Recifense
===========================================
}

[ENABLE]
assert(Shogun2.dll+00A99D70,55 8b ec 83 e4 f8)
assert(Shogun2.dll+00D22510,55 8b ec 83 e4 f8)
assert(Shogun2.dll+00A1BF43,f3 0f 11 86 88 0f 00 00)
assert(Shogun2.dll+00C5BB17,8b f1 8b 8f a0 03 00 00)
assert(Shogun2.dll+00B8D677,8b 43 40 2b c7)
assert(Shogun2.dll+000840D0,8b 81 6c 04 00 00)
assert(Shogun2.dll+0022CA10,2b d7 89 50 6c)
assert(Shogun2.dll+0119463C,39 98 0c 1c 00 00)
assert(Shogun2.dll+0128A81B,85 c0 89 46 3c)
assert(Shogun2.dll+001E60B5,2B C2 89 41 1C)
assert(Shogun2.dll+0061FB90,8b 4b 1c 8b 54 24 14)
assert(Shogun2.dll+004B5236,03 d0 3b 51 1c)
//=========================================
alloc(MyCode,1024)
//=========================================
{
aobscan(aobGodMode,55 8b ec 83 e4 f8 51 53 56 8b 75 08 8b 86 fc 01 00 00)
aobscan(aobGodMode1,55 8b ec 83 e4 f8 83 ec 74 53 8b d9 8b 83 c0 01 00 00)
aobscan(aobMonAmmo,f3 0f 11 86 88 0f 00 00 ?? ?? ?? ?? ?? ?? 8b 46 14)
aobscan(aobGodModeS,8b f1 8b 8f a0 03 00 00 85 c9)
aobscan(aobGodModeSH,8b 43 40 2b c7 89 44 24 2c c7 44 24 3c 00 00 00 00)
aobscan(aobMonGold,8b 81 6c 04 00 00 c3)
aobscan(aobMonMP,2b d7 89 50 6c ?? ?? c7 40 6c 00 00 00 00)
aobscan(aobMonSelOfficer,39 98 0c 1c 00 00 ?? ?? 8b bf 7c 08 00 00)
aobscan(aobMonSelTown,85 c0 89 46 3c ?? ?? 6a 00 8b ce)
aobscan(aobMonMP1,2b c2 89 41 1c c2 04 00 c7 41 1c 00 00 00 00 c2 04 00)
aobscan(aobMonProd,8b 4b 1c 8b 54 24 14 03 c8 89 0a 33 c9 85 c0)
aobscan(aobMonResearch,03 d0 3b 51 1c ?? ?? 8b b6 b0 07 00 00)
}

//=========================================
// Declaration section
{
label(pGodMode)
label(pGodMode1)
label(pMonAmmo)
label(pGodModeS)
label(pGodModeSH)
label(pMonGold)
label(pMonMP)
label(pMonSelOfficer)
label(pMonSelTown)
label(pMonMP1)
label(pMonProd)
label(pMonResearch)
}
label(_GodMode)
label(_GodM00)
label(_GodM01)
label(_BackGM)
label(_ExitGM)
label(_GodMode1)
label(_GodM10)
label(_GodM11)
label(_BackGM1)
label(_ExitGM1)
label(_MonAmmo)
label(_MonA0)
label(_MonA1)
label(_BackMA)
label(_ExitMA)
label(_GodModeS)
label(_BackGMS)
label(_ExitGMS)
label(_GodModeSH)
label(_BackGMSH)
label(_ExitGMSH)
label(_MonGold)
label(_BackMG)
label(_ExitMG)
label(_MonMP)
label(_MonM0)
label(_BackMM)
label(_ExitMM)
label(_MonSelOfficer)
label(_BackMSO)
label(_ExitMSO)
label(_MonSelTown)
label(_BackMST)
label(_ExitMST)
label(_MonMP1)
label(_BackMM1)
label(_ExitMM1)
label(_MonProd)
label(_BackMPr)
label(_ExitMPr)
label(_MonResearch)
label(_BackMR)
label(_ExitMR)
label(pSel)
label(pGold)
label(pOfficer)
label(pTown)
label(iEnableGM)
label(iEnableMA)
label(iEnableQR)
label(iEnableMG)
label(iEnableMM)
label(iEnableMTS)
label(iEnableMP)
label(iEnableMR)
label(iPlayerID)
label(iMinGold)
label(iEAX)

registersymbol(MyCode)
registersymbol(pSel)
registersymbol(pGold)
registersymbol(pOfficer)
registersymbol(pTown)
registersymbol(iEnableGM)
registersymbol(iEnableMA)
registersymbol(iEnableQR)
registersymbol(iEnableMG)
registersymbol(iEnableMM)
registersymbol(iEnableMTS)
registersymbol(iEnableMP)
registersymbol(iEnableMR)
registersymbol(iMinGold)
registersymbol(iPlayerID)
{
registersymbol(pGodMode)
registersymbol(pGodMode1)
registersymbol(pMonAmmo)
registersymbol(pGodModeS)
registersymbol(pGodModeSH)
registersymbol(pMonGold)
registersymbol(pMonMP)
registersymbol(pMonSelOfficer)
registersymbol(pMonSelTown)
registersymbol(pMonMP1)
registersymbol(pMonProd)
registersymbol(pMonResearch)
}

//=========================================
MyCode:
//=========================================
_GodMode:
 mov [iEAX],eax                    // Save EAX

 mov eax,[esp+04]                  // Get Unit

 mov eax,[eax+00000204]            // Get pTroop
 test eax,eax
 jnz _GodM00                       // Jump if the pointer is null

 mov eax,[eax+0000020c]            // Get pShip
 test eax,eax
 jz _ExitGM                        // Jump if the pointer is null

 mov al,[eax+0000111c]             // Get pCommon *
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGM                       // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGM                        // Jump if feature is disabled

 jmp _GodM01
//=====
_GodM00:
 mov al,[eax+00000bf9]             // Get pCommon *
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGM                       // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGM                        // Jump if feature is disabled

_GodM01:
 mov eax,[iEAX]                    // Restore EAX
 ret 0004                          // Avoid routine
//-----
_ExitGM:
 mov eax,[iEAX]                    // Restore EAX

 push ebp                          // Original code
 mov ebp,esp                       // Original code
 and esp,f8                        // Original code
 jmp _BackGM                       // Back to main code

//=========================================
_GodMode1:
 mov [iEAX],eax                    // Save EAX

 mov eax,[ecx+00000204]            // Get pTroop
 test eax,eax
 jnz _GodM10                       // Jump if the pointer is not null

 mov eax,[ecx+0000020c]            // Get pShip
 test eax,eax
 jz _ExitGM1                       // Jump if the pointer is null
// Ship Crew
 mov al,[eax+0000111c]             // Get pCommon *
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGM1                      // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGM1                       // Jump if feature is disabled
 jmp _GodM11
//Land Soldiers
_GodM10:
 mov al,[eax+00000bf9]             // Get pCommon
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGM1                      // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGM1                       // Jump if feature is disabled

_GodM11:
 mov eax,[iEAX]                    // Restore EAX
 ret 0004                          // Avoid routine
//-----
_ExitGM1:
 mov eax,[iEAX]                    // Restore EAX

 push ebp                          // Original code
 mov ebp,esp                       // Original code
 and esp,f8                        // Original code
 jmp _BackGM1                      // Back to main code

//========================================= V110
_MonAmmo:
 mov al,[esi+00000bf9]             // Get pCommon
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitMA                       // Jump if false

 cmp dword ptr [iEnableMA],0
 je _MonA0                         // Jump if feature is disabled

 cvtsi2ss xmm0,[esi+00000F8c]      // Get Maximum Ammo

_MonA0:
_MonA1:
_ExitMA:
 comiss xmm1,xmm0                  // Update EFLAGS
 movss [esi+00000F88],xmm0         // Original code
 jmp _BackMA                       // Back to main code

//========================================= V110
_GodModeS:
 mov [iEAX],eax                    // Save EAX

 mov eax,[edi+0000020c]            // Get pShip
 test eax,eax
 jz _ExitGMS                       // Jump if the pointer is null

 mov al,[eax+0000111c]             // Get pCommon
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGMS                      // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGMS                       // Jump if feature is disabled

 mov eax,[iEAX]                    // Restore EAX
 ret                               // Avoid routine
//-----
_ExitGMS:
 mov eax,[iEAX]                    // Restore EAX

 mov esi,ecx                       // Original code V110
 mov ecx,[edi+000003A0]            // Original code
 jmp _BackGMS                      // Back to main code

//=========================================
// Ship Hull
_GodModeSH:
 mov eax,[ebx+24]                  // Get pShip
 test eax,eax
 jz _ExitGMSH                      // Jump if the pointer is null

 mov al,[eax+0000111c]             // Get pCommon
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGMSH                     // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGMSH                      // Jump if feature is disabled

 mov eax,[ebx+1c]                  // Get max HP
 mov [ebx+40],eax                  // Update cur HP

 xor edi,edi                       // value2decrease = 0

_ExitGMSH:
 mov eax,[ebx+40]                  // Original code
 sub eax,edi                       // Original code
 jmp _BackGMSH                     // Back to main code

//=========================================
// TBS Gold
_MonGold:
 mov eax,[ecx+0000048c]            // Get pointer to info
 test eax,eax
 jz _ExitMG                        // Jump if null pointer

 mov eax,[eax+24]                  // Get pointer to uPlayerID
 test eax,eax
 jz _ExitMG                        // Jump if null pointer

 mov eax,[eax]
 cmp eax,006c0070
 jne _ExitMG                       // Jump if it's an AI

 mov eax,[ecx+00000470]            // Get pointer to player
 mov [pGold],eax

 cmp dword ptr [iEnableMG],0
 je _ExitMG                        // Jump if feature is disabled

 mov eax,[iMinGold]
 cmp eax,[ecx+0000046C]
 jle _ExitMG

 mov [ecx+0000046C],eax            // Update gold

_ExitMG:
 mov eax,[ecx+0000046C]            // Original code
 jmp _BackMG                       // Back to main code

//=========================================
// TBS Troop Movement Points/Size
_MonMP:
 push ecx

 mov ecx,[eax+44]                  // Get pointer to Owner
 cmp ecx,[pGold]                   // Is it a player's troop?
 jne _ExitMM

 cmp dword ptr [iEnableMM],0
 je _MonM0                         // Jump if feature is disabled

 xor edi,edi                       // value2decrease = 0

_MonM0:
 cmp dword ptr [iEnableMTS],0
 je _ExitMM                        // Jump if feature is disabled

 mov ecx,[eax+50]                  // Get troop maximum size
 mov [eax+4c],ecx                  // Update current size

_ExitMM:
 pop ecx

 sub edx,edi                       // Original code
 mov [eax+6C],edx                  // Original code
 jmp _BackMM                       // Back to main code

//=========================================
// TBS Selected Officer
_MonSelOfficer:
 mov [pOfficer],eax

 mov ebx,[eax+000002b4]            // Get pointer to ptr to Owner
 test ebx,ebx
 jz _ExitMSO

 mov ebx,[ebx]

 mov [pGold],ebx

_ExitMSO:
 cmp [eax+00001C0C],ebx            // Original code
 jmp _BackMSO                      // Back to main code

//=========================================
// TBS Find out player ID via Selected City Info
_MonSelTown:
 push ecx

 test eax,eax
 jz _ExitMST

 mov ecx,[eax+2c]
 cmp ecx,eax
 jne _ExitMST

 mov ecx,[eax+40]
 mov [pGold],ecx

_ExitMST:
 pop ecx

 test eax,eax                      // Original code
 mov [esi+3C],eax                  // Original code
 jmp _BackMST                      // Back to main code

//=========================================
// TBS Agents Movement Points
_MonMP1:
 push ebx

 mov ebx,[ecx+000002b4]            // Get pointer to ptr to Owner
 test ebx,ebx
 jz _ExitMM1

 mov ebx,[ebx]
 cmp ebx,[pGold]                   // Is it a player's Agent?
 jne _ExitMM1

 cmp dword ptr [iEnableMM],0
 je _ExitMM1                       // Jump if feature is disabled

 mov ebx,[ecx+18]                  // Get Max MP
 mov [ecx+1C],ebx                  // Cur = max

 mov eax,ebx
 xor edx,edx                       // value2decrease = 0

_ExitMM1:
 pop ebx

 sub eax,edx                       // Original code
 mov [ecx+1C],eax                  // Original code
 jmp _BackMM1                      // Back to main code

//=========================================
// TBS Troop Production of selected Town
_MonProd:
 mov ecx,[ebx+14]                  // Get pointer to Town
 test ecx,ecx
 jz _ExitMPr

 mov ecx,[ecx+40]                  // Get pointer to ptr to Owner
 test ecx,ecx
 jz _ExitMPr

 cmp ecx,[pGold]                   // Is it a player's Town?
 jne _ExitMPr

 cmp dword ptr [iEnableMP],0
 je _ExitMPr                       // Jump if feature is disabled

 xor ecx,ecx
 mov [ebx+1c],ecx                  // Make it one turn production

_ExitMPr:
 mov ecx,[ebx+1C]                  // Original code
 mov edx,[esp+14]                  // Original code
 jmp _BackMPr                      // Back to main code

//=========================================
// TBS Research Progress
_MonResearch:
 cmp dword ptr [iEnableMR],0
 je _ExitMR                        // Jump if feature is disabled

 cmp ebp,[pGold]                   // Is it a player's research
 jne _ExitMR                       // Jump if false

 mov edx,[ecx+1c]                  // Get points needed to complete research

_ExitMR:
 add edx,eax                       // Original code
 cmp edx,[ecx+1C]                  // Original code
 jmp _BackMR                       // Back to main code

//=========================================
// Variables
iEnableGM:
 dd 1
iEnableMA:
 dd 1
iEnableQR:
 dd 1
iEnableMG:
 dd 1
iEnableMM:
 dd 1
iEnableMTS:
 dd 1
iEnableMP:
 dd 1
iEnableMR:
 dd 1
pSel:
 dd 0
pGold:
 dd 0
pOfficer:
 dd 0
pTown:
 dd 0
iPlayerID:
 dd 0
iEAX:
 dd 0
iMinGold:
 dd #50000

//=========================================
// Hacking Points
//Shogun2.dll+00a63e50:
Shogun2.dll+00A99D70:
 jmp _GodMode
 nop
_BackGM:

//Shogun2.dll+00c7e770:
Shogun2.dll+D22510:
 jmp _GodMode1
 nop
_BackGM1:

//Shogun2.dll+009e7af3:
Shogun2.dll+00A1BF43:
 jmp _MonAmmo
 nop
 nop
 nop
_BackMA:

//Shogun2.dll+00cf54e0:
Shogun2.dll+00C5BB17:
 jmp _GodModeS
 nop
 nop
 nop
_BackGMS:

//Shogun2.dll+00b560d7:
Shogun2.dll+00B8D677:
 jmp _GodModeSH
_BackGMSH:

//Shogun2.dll+0046df80:
Shogun2.dll+000840D0:
 jmp _MonGold
 nop
_BackMG:

//Shogun2.dll+0026a5e0:
Shogun2.dll+22CA10:
 jmp _MonMP
_BackMM:

//Shogun2.dll+011ad6bc:
Shogun2.dll+119463C:
 jmp _MonSelOfficer
 nop
_BackMSO:

//Shogun2.dll+01219e0b:
Shogun2.dll+128A81B:
 jmp _MonSelTown
_BackMST:

//Shogun2.dll+004b50b5:
Shogun2.dll+1E60B5:
 jmp _MonMP1
_BackMM1:

//Shogun2.dll+005b93e0:
Shogun2.dll+61FB90:
 jmp _MonProd
 nop
 nop
_BackMPr:

//Shogun2.dll+0038662c:
Shogun2.dll+4B5236:
 jmp _MonResearch
_BackMR:

//=========================================
// Original Codes
[DISABLE]
//Shogun2.dll+00a63e50:
// push ebp
// mov ebp,esp
// and esp,f8
Shogun2.dll+A99D70:
 db 55 8b ec 83 e4 f8

//Shogun2.dll+00c7e770:
// push ebp
// mov ebp,esp
// and esp,f8
Shogun2.dll+D22510:
 db 55 8b ec 83 e4 f8

//Shogun2.dll+009e7af3:
// movss [esi+00000F40],xmm0
//-----------------------  V110
// movss [esi+00000F88],xmm0
Shogun2.dll+A1BF43:
 db f3 0f 11 86 88 0f 00 00   // V110

//Shogun2.dll+00cf54e0:
// push ecx
// mov ecx,[edi+000003A0]
//-----------------------  V110
// mov esi,ecx
// mov ecx,[edi+000003A0]
Shogun2.dll+C5BB17 :
 db 8b f1 8b 8f a0 03 00 00  // V110

//Shogun2.dll+00b560d7:
// mov eax,[ebx+40]
// sub eax,edi
Shogun2.dll+B8D677:
 db 8b 43 40 2b c7

//Shogun2.dll+0046df80:
// mov eax,[ecx+0000046C]
Shogun2.dll+840D0:
 db 8b 81 6c 04 00 00

//Shogun2.dll+0026a5e0:
// sub edx,edi
// mov [eax+6C],edx
Shogun2.dll+22CA10:
 db 2b d7 89 50 6c

//Shogun2.dll+011ad6bc:
// cmp [eax+00001C0C],ebx
Shogun2.dll+119463C:
 db 39 98 0c 1c 00 00

//Shogun2.dll+01219e0b:
// test eax,eax
// mov [esi+3C],eax
Shogun2.dll+128A81B:
 db 85 c0 89 46 3c

//Shogun2.dll+004b50b5:
// sub eax,edx
// mov [ecx+1C],eax
Shogun2.dll+1E60B5:
 db 2B C2 89 41 1C

//Shogun2.dll+005b93e0:
// mov ecx,[ebx+1C]
// mov edx,[esp+14]
Shogun2.dll+61FB90:
 db 8b 4b 1c 8b 54 24 14

//Shogun2.dll+0038662c:
// add edx,eax
// cmp edx,[ecx+1C]
Shogun2.dll+4B5236:
 db 03 d0 3b 51 1c

unregistersymbol(MyCode)
unregistersymbol(pSel)
unregistersymbol(pGold)
unregistersymbol(pOfficer)
unregistersymbol(pTown)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMA)
unregistersymbol(iEnableQR)
unregistersymbol(iEnableMG)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableMTS)
unregistersymbol(iEnableMP)
unregistersymbol(iEnableMR)
unregistersymbol(iMinGold)
unregistersymbol(iPlayerID)
{
unregistersymbol(pGodMode)
unregistersymbol(pGodMode1)
unregistersymbol(pMonAmmo)
unregistersymbol(pGodModeS)
unregistersymbol(pGodModeSH)
unregistersymbol(pMonGold)
unregistersymbol(pMonMP)
unregistersymbol(pMonSelOfficer)
unregistersymbol(pMonSelTown)
unregistersymbol(pMonMP1)
unregistersymbol(pMonProd)
unregistersymbol(pMonResearch)
}
dealloc(MyCode)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1</ID>
              <Description>"Enable/Disable God Mode"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableGM</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2</ID>
              <Description>"Enable/Disable Unlimited Ammo"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMA</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>3</ID>
              <Description>"Enable/Disable Unlimited Movement Points"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMM</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Enable/Disable Auto Troop Size Recover"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMTS</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Enable/Disable Minimum Gold"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMG</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"Enable/Disable One Turn Research"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMR</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Enable/Disable One Turn Recruitment"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMP</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Minimum Gold"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinGold</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Player's Current Gold"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pGold</Address>
              <Offsets>
                <Offset>4FC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>10</ID>
              <Description>"Selected General Skill Points"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pOfficer</Address>
              <Offsets>
                <Offset>1C0C</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>81</Key>
                  </Keys>
                  <Value>450</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>"Selected General XP"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pOfficer</Address>
              <Offsets>
                <Offset>1C14</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>87</Key>
                  </Keys>
                  <Value>450</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>54</ID>
      <Description>"AOB (only turn AOB or NON-AOB scripts)"</Description>
      <Color>004000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Shogun2 v 1.10 2th script AOB"</Description>
          <Options moHideChildren="1"/>
          <Color>800000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(aob_Agent,8B 99 0C 1C 00 00 85 DB)
aobscan(aob_Army,8A 56 74 88 57 08 8B 06 8B 50 1C 8B CE)
aobscan(aob_BuildUpgrade,8B 4F 0C 50 51 8B CE)
aobscan(aob_Year,8B 42 04 56 8B 74 24 08)

//////////////////
alloc(newmem,300)
/////////////////

label(_ExitAgent)
label(_ExitArmy)

label(_AgentCode)
label(_ArmyCode)
registersymbol(_AgentCode)
registersymbol(_ArmyCode)

label(exit)
label(exit2)
label(_AgentXpRank)
label(_AgentPoints)
label(_ArmyRank)
label(_ArmySize)


label(_ArmySizeAmt)
label(_AgentPointsAmt)
registersymbol(_ArmySizeAmt)
registersymbol(_AgentPointsAmt)

label(_AgentXpRankID)
label(_AgentPointsID)
label(_ArmyRankID)
label(_ArmySizeID)
registersymbol(_AgentXpRankID)
registersymbol(_AgentPointsID)
registersymbol(_ArmyRankID)
registersymbol(_ArmySizeID)

label(_BuildUpgradeCode)
label(_GameYearCode)
registersymbol(_BuildUpgradeCode)
registersymbol(_GameYearCode)

label(_YearID)
label(_Construction_UpgradeID)
registersymbol(_YearID)
registersymbol(_Construction_UpgradeID)

label(_Construction_Upgrade)
label(_Construction_UpgradeSetZero)
label(_Construction_UpgradeExit)
label(exit3)

label(_Year)
label(_YearExit)
label(exit4)

label(_SetYear)
registersymbol(_SetYear)


newmem:

//======================
//Agent Skill and XP

_AgentXpRank:
cmp [_AgentXpRankID],01
jne _AgentPoints
mov [_AgentXpRankID],0
mov [ecx+00001C14],#450// XP
jmp _AgentPoints

_AgentPoints:
cmp [_AgentPointsID],01
jne exit
mov [_AgentPointsID],0
push eax
mov eax,[_AgentPointsAmt]
add [ecx+00001C0C],eax
pop eax
jmp exit

exit:
mov ebx,[ecx+00001C0C]
jmp _ExitAgent

//==========================
//Army Rank and Size

_ArmyRank:
cmp [_ArmyRankID],01
jne _ArmySize
mov [_ArmyRankID],0
mov [esi+74],#9 //max rank Do not increse or GAME CRASH
jmp _ArmySize

_ArmySize:
cmp [_ArmySizeID],01
jne exit2
mov [_ArmySizeID],0
push eax
mov eax,[_ArmySizeAmt]
mov [esi+4c],eax
mov [esi+50],eax
pop eax
jmp exit2

exit2:
mov dl,[esi+74]
mov [edi+08],dl
jmp _ExitArmy

//=============================
//1 Turn Building and Upgrades

_Construction_Upgrade:
cmp [_Construction_UpgradeID],01
jne _Construction_UpgradeSetZero
push ebx
mov ebx,[edi+10]
mov [edi+0C],ebx
pop ebx
jmp exit3

_Construction_UpgradeSetZero:
mov [_Construction_UpgradeID],0
jmp exit3

exit3:
mov ecx,[edi+0C]
push eax
push ecx
jmp _Construction_UpgradeExit

//=============================
//Change Year

_Year:
cmp [_YearID],01
jne exit4
push eax
mov eax,[_SetYear]
mov [edx+04],eax
pop eax
jmp exit4

exit4:
mov [_YearID],0
mov eax,[edx+04]
push esi
mov esi,[esp+08]
jmp _YearExit

//////////////////////Variables and ID's
_AgentXpRankID:
dd 0
_AgentPointsID:
dd 0
_ArmyRankID:
dd 0
_ArmySizeID:
dd 0
_YearID:
dd 0
_Construction_UpgradeID:
dd 00

_AgentPointsAmt:
dd #10
_ArmySizeAmt:
dd #500
_SetYear:
dd #1545


/////////////////////Entryes
aob_Agent:
_AgentCode:
jmp _AgentXpRank
nop
_ExitAgent:

aob_Army:
_ArmyCode:
jmp _ArmyRank
nop
_ExitArmy:

aob_BuildUpgrade:
_BuildUpgradeCode:
jmp _Construction_Upgrade
_Construction_UpgradeExit:

aob_Year:
_GameYearCode:
jmp _Year
nop
nop
nop
_YearExit:


[DISABLE]

_AgentCode://////Agent xp and points
mov ebx,[ecx+00001C0C]
//Alt: db 8B 99 0C 1C 00 00

_ArmyCode:  //Army XP Size
mov dl,[esi+74]
mov [edi+08],dl
//Alt: db 8A 56 74 88 57 08

_BuildUpgradeCode: //1 turn building/Upgrades
mov ecx,[edi+0C]
push eax
push ecx
//Alt: db 8B 4F 0C 50 51

_GameYearCode: //Year Set
mov eax,[edx+04]
push esi
mov esi,[esp+08]
//Alt: db 8B 42 04 56 8B 74 24 08

unregistersymbol(_AgentXpRankID)
unregistersymbol(_AgentPointsID)
unregistersymbol(_ArmyRankID)
unregistersymbol(_ArmySizeID)

unregistersymbol(_ArmySizeAmt)
unregistersymbol(_AgentPointsAmt)

unregistersymbol(_AgentCode)
unregistersymbol(_ArmyCode)
unregistersymbol(_BuildUpgradeCode)
unregistersymbol(_GameYearCode)

unregistersymbol(_YearID)
unregistersymbol(_Construction_UpgradeID)

unregistersymbol(_SetYear)

dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>55</ID>
              <Description>"Agent Skill Points"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_AgentPointsID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>83</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>56</ID>
                  <Description>"Agent Skill Points to Add"</Description>
                  <Color>800000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>_AgentPointsAmt</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>57</ID>
              <Description>"Agent XP"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_AgentXpRankID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>65</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>58</ID>
              <Description>"Army Rank Max"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_ArmyRankID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>90</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>59</ID>
              <Description>"Army Size"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_ArmySizeID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>88</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>60</ID>
                  <Description>"Army Size Amount"</Description>
                  <Color>800000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>_ArmySizeAmt</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>61</ID>
              <Description>"1 Turn Build"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_Construction_UpgradeID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>69</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>68</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>62</ID>
              <Description>"Year Set"</Description>
              <Color>800000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>_YearID</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>82</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>63</ID>
                  <Description>"Year"</Description>
                  <Color>800000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>_SetYear</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"&lt;-- Total War - Shogun 2 V1.10 Script AOB V2.1"</Description>
          <Options moHideChildren="1"/>
          <Color>800000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
===========================================
 Total War - Shogun 2
 Game Version  : 1.10
 Script Version: 2.1
 CE Version    : 6.0
 GM, Ammo, Gold, MP, MSO, MP1, Recruitment, Research
 23-Mar-2011 First Release
 29-Mar-2011 AOb version of the script
 01-Apr-2011 Correct GM Troops; added MP for agents; Corrected MonGold; Added MonProd; Added MonRes
 By Recifense
===========================================
}

[ENABLE]
//=========================================
alloc(MyCode,1024)
//=========================================

aobscan(aobGodMode,55 8b ec 83 e4 f8 51 53 56 8b 75 08 8b 86 fc 01 00 00)
aobscan(aobGodMode1,55 8b ec 83 e4 f8 83 ec 74 53 8b d9 8b 83 c0 01 00 00)
aobscan(aobMonAmmo,f3 0f 11 86 88 0f 00 00 ?? ?? ?? ?? ?? ?? 8b 46 14)
aobscan(aobGodModeS,8b f1 8b 8f a0 03 00 00 85 c9)
aobscan(aobGodModeSH,8b 43 40 2b c7 89 44 24 2c c7 44 24 3c 00 00 00 00)
aobscan(aobMonGold,8b 81 6c 04 00 00 c3)
aobscan(aobMonMP,2b d7 89 50 6c ?? ?? c7 40 6c 00 00 00 00)
aobscan(aobMonSelOfficer,39 98 0c 1c 00 00 ?? ?? 8b bf 7c 08 00 00)
aobscan(aobMonSelTown,85 c0 89 46 3c ?? ?? 6a 00 8b ce)
aobscan(aobMonMP1,2b c2 89 41 1c c2 04 00 c7 41 1c 00 00 00 00 c2 04 00)
aobscan(aobMonProd,8b 4b 1c 8b 54 24 14 03 c8 89 0a 33 c9 85 c0)
aobscan(aobMonResearch,03 d0 3b 51 1c ?? ?? 8b b6 b0 07 00 00)

//=========================================
// Declaration section
label(pGodMode)
label(pGodMode1)
label(pMonAmmo)
label(pGodModeS)
label(pGodModeSH)
label(pMonGold)
label(pMonMP)
label(pMonSelOfficer)
label(pMonSelTown)
label(pMonMP1)
label(pMonProd)
label(pMonResearch)
label(_GodMode)
label(_GodM00)
label(_GodM01)
label(_BackGM)
label(_ExitGM)
label(_GodMode1)
label(_GodM10)
label(_GodM11)
label(_BackGM1)
label(_ExitGM1)
label(_MonAmmo)
label(_MonA0)
label(_MonA1)
label(_BackMA)
label(_ExitMA)
label(_GodModeS)
label(_BackGMS)
label(_ExitGMS)
label(_GodModeSH)
label(_BackGMSH)
label(_ExitGMSH)
label(_MonGold)
label(_BackMG)
label(_ExitMG)
label(_MonMP)
label(_MonM0)
label(_BackMM)
label(_ExitMM)
label(_MonSelOfficer)
label(_BackMSO)
label(_ExitMSO)
label(_MonSelTown)
label(_BackMST)
label(_ExitMST)
label(_MonMP1)
label(_BackMM1)
label(_ExitMM1)
label(_MonProd)
label(_BackMPr)
label(_ExitMPr)
label(_MonResearch)
label(_BackMR)
label(_ExitMR)
label(pSel)
label(pGold)
label(pOfficer)
label(pTown)
label(iEnableGM)
label(iEnableMA)
label(iEnableQR)
label(iEnableMG)
label(iEnableMM)
label(iEnableMTS)
label(iEnableMP)
label(iEnableMR)
label(iPlayerID)
label(iMinGold)
label(iEAX)

registersymbol(MyCode)
registersymbol(pSel)
registersymbol(pGold)
registersymbol(pOfficer)
registersymbol(pTown)
registersymbol(iEnableGM)
registersymbol(iEnableMA)
registersymbol(iEnableQR)
registersymbol(iEnableMG)
registersymbol(iEnableMM)
registersymbol(iEnableMTS)
registersymbol(iEnableMP)
registersymbol(iEnableMR)
registersymbol(iMinGold)
registersymbol(iPlayerID)
registersymbol(pGodMode)
registersymbol(pGodMode1)
registersymbol(pMonAmmo)
registersymbol(pGodModeS)
registersymbol(pGodModeSH)
registersymbol(pMonGold)
registersymbol(pMonMP)
registersymbol(pMonSelOfficer)
registersymbol(pMonSelTown)
registersymbol(pMonMP1)
registersymbol(pMonProd)
registersymbol(pMonResearch)

//=========================================
MyCode:
//=========================================
_GodMode:
 mov [iEAX],eax                    // Save EAX

 mov eax,[esp+04]                  // Get Unit

 mov eax,[eax+00000204]            // Get pTroop
 test eax,eax
 jnz _GodM00                       // Jump if the pointer is null

 mov eax,[eax+0000020c]            // Get pShip
 test eax,eax
 jz _ExitGM                        // Jump if the pointer is null

 mov al,[eax+0000111c]             // Get pCommon *
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGM                       // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGM                        // Jump if feature is disabled

 jmp _GodM01
//=====
_GodM00:
 mov al,[eax+00000bf9]             // Get pCommon *
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGM                       // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGM                        // Jump if feature is disabled

_GodM01:
 mov eax,[iEAX]                    // Restore EAX
 ret 0004                          // Avoid routine
//-----
_ExitGM:
 mov eax,[iEAX]                    // Restore EAX

 push ebp                          // Original code
 mov ebp,esp                       // Original code
 and esp,f8                        // Original code
 jmp _BackGM                       // Back to main code

//=========================================
_GodMode1:
 mov [iEAX],eax                    // Save EAX

 mov eax,[ecx+00000204]            // Get pTroop
 test eax,eax
 jnz _GodM10                       // Jump if the pointer is not null

 mov eax,[ecx+0000020c]            // Get pShip
 test eax,eax
 jz _ExitGM1                       // Jump if the pointer is null
// Ship Crew
 mov al,[eax+0000111c]             // Get pCommon *
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGM1                      // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGM1                       // Jump if feature is disabled
 jmp _GodM11
//Land Soldiers
_GodM10:
 mov al,[eax+00000bf9]             // Get pCommon
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGM1                      // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGM1                       // Jump if feature is disabled

_GodM11:
 mov eax,[iEAX]                    // Restore EAX
 ret 0004                          // Avoid routine
//-----
_ExitGM1:
 mov eax,[iEAX]                    // Restore EAX

 push ebp                          // Original code
 mov ebp,esp                       // Original code
 and esp,f8                        // Original code
 jmp _BackGM1                      // Back to main code

//========================================= V110
_MonAmmo:
 mov al,[esi+00000bf9]             // Get pCommon
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitMA                       // Jump if false

 cmp dword ptr [iEnableMA],0
 je _MonA0                         // Jump if feature is disabled

 cvtsi2ss xmm0,[esi+00000F8c]      // Get Maximum Ammo

_MonA0:
_MonA1:
_ExitMA:
 comiss xmm1,xmm0                  // Update EFLAGS
 movss [esi+00000F88],xmm0         // Original code
 jmp _BackMA                       // Back to main code

//========================================= V110
_GodModeS:
 mov [iEAX],eax                    // Save EAX

 mov eax,[edi+0000020c]            // Get pShip
 test eax,eax
 jz _ExitGMS                       // Jump if the pointer is null

 mov al,[eax+0000111c]             // Get pCommon
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGMS                      // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGMS                       // Jump if feature is disabled

 mov eax,[iEAX]                    // Restore EAX
 ret                               // Avoid routine
//-----
_ExitGMS:
 mov eax,[iEAX]                    // Restore EAX

 mov esi,ecx                       // Original code V110
 mov ecx,[edi+000003A0]            // Original code
 jmp _BackGMS                      // Back to main code

//=========================================
// Ship Hull
_GodModeSH:
 mov eax,[ebx+24]                  // Get pShip
 test eax,eax
 jz _ExitGMSH                      // Jump if the pointer is null

 mov al,[eax+0000111c]             // Get pCommon
 cmp al,[iPlayerID]                // Is it a Player's Troop ?
 jne _ExitGMSH                     // Jump if false

 cmp dword ptr [iEnableGM],0
 je _ExitGMSH                      // Jump if feature is disabled

 mov eax,[ebx+1c]                  // Get max HP
 mov [ebx+40],eax                  // Update cur HP

 xor edi,edi                       // value2decrease = 0

_ExitGMSH:
 mov eax,[ebx+40]                  // Original code
 sub eax,edi                       // Original code
 jmp _BackGMSH                     // Back to main code

//=========================================
// TBS Gold
_MonGold:
 mov eax,[ecx+0000048c]            // Get pointer to info
 test eax,eax
 jz _ExitMG                        // Jump if null pointer

 mov eax,[eax+24]                  // Get pointer to uPlayerID
 test eax,eax
 jz _ExitMG                        // Jump if null pointer

 mov eax,[eax]
 cmp eax,006c0070
 jne _ExitMG                       // Jump if it's an AI

 mov eax,[ecx+00000470]            // Get pointer to player
 mov [pGold],eax

 cmp dword ptr [iEnableMG],0
 je _ExitMG                        // Jump if feature is disabled

 mov eax,[iMinGold]
 cmp eax,[ecx+0000046C]
 jle _ExitMG

 mov [ecx+0000046C],eax            // Update gold

_ExitMG:
 mov eax,[ecx+0000046C]            // Original code
 jmp _BackMG                       // Back to main code

//=========================================
// TBS Troop Movement Points/Size
_MonMP:
 push ecx

 mov ecx,[eax+44]                  // Get pointer to Owner
 cmp ecx,[pGold]                   // Is it a player's troop?
 jne _ExitMM

 cmp dword ptr [iEnableMM],0
 je _MonM0                         // Jump if feature is disabled

 xor edi,edi                       // value2decrease = 0

_MonM0:
 cmp dword ptr [iEnableMTS],0
 je _ExitMM                        // Jump if feature is disabled

 mov ecx,[eax+50]                  // Get troop maximum size
 mov [eax+4c],ecx                  // Update current size

_ExitMM:
 pop ecx

 sub edx,edi                       // Original code
 mov [eax+6C],edx                  // Original code
 jmp _BackMM                       // Back to main code

//=========================================
// TBS Selected Officer
_MonSelOfficer:
 mov [pOfficer],eax

 mov ebx,[eax+000002b4]            // Get pointer to ptr to Owner
 test ebx,ebx
 jz _ExitMSO

 mov ebx,[ebx]

 mov [pGold],ebx

_ExitMSO:
 cmp [eax+00001C0C],ebx            // Original code
 jmp _BackMSO                      // Back to main code

//=========================================
// TBS Find out player ID via Selected City Info
_MonSelTown:
 push ecx

 test eax,eax
 jz _ExitMST

 mov ecx,[eax+2c]
 cmp ecx,eax
 jne _ExitMST

 mov ecx,[eax+40]
 mov [pGold],ecx

_ExitMST:
 pop ecx

 test eax,eax                      // Original code
 mov [esi+3C],eax                  // Original code
 jmp _BackMST                      // Back to main code

//=========================================
// TBS Agents Movement Points
_MonMP1:
 push ebx

 mov ebx,[ecx+000002b4]            // Get pointer to ptr to Owner
 test ebx,ebx
 jz _ExitMM1

 mov ebx,[ebx]
 cmp ebx,[pGold]                   // Is it a player's Agent?
 jne _ExitMM1

 cmp dword ptr [iEnableMM],0
 je _ExitMM1                       // Jump if feature is disabled

 mov ebx,[ecx+18]                  // Get Max MP
 mov [ecx+1C],ebx                  // Cur = max

 mov eax,ebx
 xor edx,edx                       // value2decrease = 0

_ExitMM1:
 pop ebx

 sub eax,edx                       // Original code
 mov [ecx+1C],eax                  // Original code
 jmp _BackMM1                      // Back to main code

//=========================================
// TBS Troop Production of selected Town
_MonProd:
 mov ecx,[ebx+14]                  // Get pointer to Town
 test ecx,ecx
 jz _ExitMPr

 mov ecx,[ecx+40]                  // Get pointer to ptr to Owner
 test ecx,ecx
 jz _ExitMPr

 cmp ecx,[pGold]                   // Is it a player's Town?
 jne _ExitMPr

 cmp dword ptr [iEnableMP],0
 je _ExitMPr                       // Jump if feature is disabled

 xor ecx,ecx
 mov [ebx+1c],ecx                  // Make it one turn production

_ExitMPr:
 mov ecx,[ebx+1C]                  // Original code
 mov edx,[esp+14]                  // Original code
 jmp _BackMPr                      // Back to main code

//=========================================
// TBS Research Progress
_MonResearch:
 cmp dword ptr [iEnableMR],0
 je _ExitMR                        // Jump if feature is disabled

 cmp ebp,[pGold]                   // Is it a player's research
 jne _ExitMR                       // Jump if false

 mov edx,[ecx+1c]                  // Get points needed to complete research

_ExitMR:
 add edx,eax                       // Original code
 cmp edx,[ecx+1C]                  // Original code
 jmp _BackMR                       // Back to main code

//=========================================
// Variables
iEnableGM:
 dd 1
iEnableMA:
 dd 1
iEnableQR:
 dd 1
iEnableMG:
 dd 1
iEnableMM:
 dd 1
iEnableMTS:
 dd 1
iEnableMP:
 dd 1
iEnableMR:
 dd 1
pSel:
 dd 0
pGold:
 dd 0
pOfficer:
 dd 0
pTown:
 dd 0
iPlayerID:
 dd 0
iEAX:
 dd 0
iMinGold:
 dd #50000

//=========================================
// Hacking Points
//Shogun2.dll+00a63e50:
aobGodMode:
pGodMode:
 jmp _GodMode
 nop
_BackGM:

//Shogun2.dll+00c7e770:
aobGodMode1:
pGodMode1:
 jmp _GodMode1
 nop
_BackGM1:

//Shogun2.dll+009e7af3:
aobMonAmmo:
pMonAmmo:
 jmp _MonAmmo
 nop
 nop
 nop
_BackMA:

//Shogun2.dll+00cf54e0:
aobGodModeS:
pGodModeS:
 jmp _GodModeS
 nop
 nop
 nop
_BackGMS:

//Shogun2.dll+00b560d7:
aobGodModeSH:
pGodModeSH:
 jmp _GodModeSH
_BackGMSH:

//Shogun2.dll+0046df80:
aobMonGold:
pMonGold:
 jmp _MonGold
 nop
_BackMG:

//Shogun2.dll+0026a5e0:
aobMonMP:
pMonMP:
 jmp _MonMP
_BackMM:

//Shogun2.dll+011ad6bc:
aobMonSelOfficer:
pMonSelOfficer:
 jmp _MonSelOfficer
 nop
_BackMSO:

//Shogun2.dll+01219e0b:
aobMonSelTown:
pMonSelTown:
 jmp _MonSelTown
_BackMST:

//Shogun2.dll+004b50b5:
aobMonMP1:
pMonMP1:
 jmp _MonMP1
_BackMM1:

//Shogun2.dll+005b93e0:
aobMonProd:
pMonProd:
 jmp _MonProd
 nop
 nop
_BackMPr:

//Shogun2.dll+0038662c:
aobMonResearch:
pMonResearch:
 jmp _MonResearch
_BackMR:

//=========================================
// Original Codes
[DISABLE]
//Shogun2.dll+00a63e50:
// push ebp
// mov ebp,esp
// and esp,f8
pGodMode:
 db 55 8b ec 83 e4 f8

//Shogun2.dll+00c7e770:
// push ebp
// mov ebp,esp
// and esp,f8
pGodMode1:
 db 55 8b ec 83 e4 f8

//Shogun2.dll+009e7af3:
// movss [esi+00000F40],xmm0
//-----------------------  V110
// movss [esi+00000F88],xmm0
pMonAmmo:
 db f3 0f 11 86 88 0f 00 00   // V110

//Shogun2.dll+00cf54e0:
// push ecx
// mov ecx,[edi+000003A0]
//-----------------------  V110
// mov esi,ecx
// mov ecx,[edi+000003A0]
pGodModeS:
 db 8b f1 8b 8f a0 03 00 00  // V110

//Shogun2.dll+00b560d7:
// mov eax,[ebx+40]
// sub eax,edi
pGodModeSH:
 db 8b 43 40 2b c7

//Shogun2.dll+0046df80:
// mov eax,[ecx+0000046C]
pMonGold:
 db 8b 81 6c 04 00 00

//Shogun2.dll+0026a5e0:
// sub edx,edi
// mov [eax+6C],edx
pMonMP:
 db 2b d7 89 50 6c

//Shogun2.dll+011ad6bc:
// cmp [eax+00001C0C],ebx
pMonSelOfficer:
 db 39 98 0c 1c 00 00

//Shogun2.dll+01219e0b:
// test eax,eax
// mov [esi+3C],eax
pMonSelTown:
 db 85 c0 89 46 3c

//Shogun2.dll+004b50b5:
// sub eax,edx
// mov [ecx+1C],eax
pMonMP1:
 db 29 d0 89 41 1c

//Shogun2.dll+005b93e0:
// mov ecx,[ebx+1C]
// mov edx,[esp+14]
pMonProd:
 db 8b 4b 1c 8b 54 24 14

//Shogun2.dll+0038662c:
// add edx,eax
// cmp edx,[ecx+1C]
pMonResearch:
 db 03 d0 3b 51 1c

unregistersymbol(MyCode)
unregistersymbol(pSel)
unregistersymbol(pGold)
unregistersymbol(pOfficer)
unregistersymbol(pTown)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMA)
unregistersymbol(iEnableQR)
unregistersymbol(iEnableMG)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableMTS)
unregistersymbol(iEnableMP)
unregistersymbol(iEnableMR)
unregistersymbol(iMinGold)
unregistersymbol(iPlayerID)
unregistersymbol(pGodMode)
unregistersymbol(pGodMode1)
unregistersymbol(pMonAmmo)
unregistersymbol(pGodModeS)
unregistersymbol(pGodModeSH)
unregistersymbol(pMonGold)
unregistersymbol(pMonMP)
unregistersymbol(pMonSelOfficer)
unregistersymbol(pMonSelTown)
unregistersymbol(pMonMP1)
unregistersymbol(pMonProd)
unregistersymbol(pMonResearch)

dealloc(MyCode)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>44</ID>
              <Description>"Enable/Disable God Mode"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableGM</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"Enable/Disable Unlimited Ammo"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMA</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>46</ID>
              <Description>"Enable/Disable Unlimited Movement Points"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMM</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>47</ID>
              <Description>"Enable/Disable Auto Troop Size Recover"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMTS</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>48</ID>
              <Description>"Enable/Disable Minimum Gold"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMG</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>49</ID>
              <Description>"Enable/Disable One Turn Research"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMR</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"Enable/Disable One Turn Recruitment"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMP</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>51</ID>
              <Description>"Minimum Gold"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinGold</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>52</ID>
              <Description>"Player's Current Gold"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pGold</Address>
              <Offsets>
                <Offset>518</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>53</ID>
              <Description>"Selected General Skill Points"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pOfficer</Address>
              <Offsets>
                <Offset>1C0C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :add [esi+2C],eax Army</Description>
      <Address>58F85541</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>A45541</ModuleNameOffset>
      <Before>
        <Byte>B8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>46</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>01</Byte>
        <Byte>46</Byte>
        <Byte>64</Byte>
        <Byte>01</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[esi+00000D6C]</Description>
      <Address>596F3893</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>11B3893</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>6D</Byte>
        <Byte>65</Byte>
        <Byte>DF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>6C</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>28</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[ecx+00000D6C] Disp</Description>
      <Address>596C0706</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>1180706</ModuleNameOffset>
      <Before>
        <Byte>8F</Byte>
        <Byte>34</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>81</Byte>
        <Byte>6C</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>50</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>0C</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :sub eax,[ecx+00001C14] Agent DISP XP</Description>
      <Address>5897D7F7</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>27D7F7</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>04</Byte>
        <Byte>82</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>81</Byte>
        <Byte>14</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ecx,[esi+4C] Troop size Disp open</Description>
      <Address>58CFBFAE</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>5FBFAE</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>F2</Byte>
        <Byte>D0</Byte>
        <Byte>9A</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>04</Byte>
        <Byte>8A</Byte>
        <Byte>56</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ebx,[esi+4C]</Description>
      <Address>58A166E0</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>1E66E0</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>7E</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>5E</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>6A</Byte>
        <Byte>FF</Byte>
        <Byte>6A</Byte>
        <Byte>00</Byte>
        <Byte>6A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov edx,[edi+4C]</Description>
      <Address>58E87960</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657960</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>64</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>38</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>57</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>56</Byte>
        <Byte>44</Byte>
        <Byte>DB</Byte>
        <Byte>47</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fild dword ptr [edi+4C]</Description>
      <Address>58E87966</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657966</ModuleNameOffset>
      <Before>
        <Byte>57</Byte>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>56</Byte>
        <Byte>44</Byte>
      </Before>
      <Actual>
        <Byte>DB</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[edi+4C]</Description>
      <Address>58E87969</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657969</ModuleNameOffset>
      <Before>
        <Byte>56</Byte>
        <Byte>44</Byte>
        <Byte>DB</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>7D</Byte>
        <Byte>06</Byte>
        <Byte>D8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ecx,[edi+4C]</Description>
      <Address>58E4DC8F</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>61DC8F</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>38</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>4E</Byte>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>96</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[esi+4C]</Description>
      <Address>599C3D73</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>1193D73</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>8B</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>74</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>46</Byte>
        <Byte>50</Byte>
        <Byte>8B</Byte>
        <Byte>7C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [eax+4C],ecx</Description>
      <Address>048A024C</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>8B</Byte>
        <Byte>48</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>59</Byte>
        <Byte>29</Byte>
        <Byte>FA</Byte>
        <Byte>89</Byte>
        <Byte>50</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[eax+4C]</Description>
      <Address>58B00317</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>2D0317</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>14</Byte>
        <Byte>81</Byte>
        <Byte>8B</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov dl,[esi+74] Army Rank Disp</Description>
      <Address>58CFBFB4</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>5FBFB4</ModuleNameOffset>
      <Before>
        <Byte>4E</Byte>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>56</Byte>
        <Byte>74</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>57</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov cl,[esi+04]</Description>
      <Address>59044FB9</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>9F4FB9</ModuleNameOffset>
      <Before>
        <Byte>87</Byte>
        <Byte>D4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>4E</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>8F</Byte>
        <Byte>D8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov al,[edi+74]</Description>
      <Address>58CA7998</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657998</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>D9</Byte>
        <Byte>5E</Byte>
        <Byte>48</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>47</Byte>
        <Byte>74</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>46</Byte>
        <Byte>50</Byte>
        <Byte>8B</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov cl,[edi+74]</Description>
      <Address>58C6DCA1</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>61DCA1</ModuleNameOffset>
      <Before>
        <Byte>47</Byte>
        <Byte>70</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>4C</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>4F</Byte>
        <Byte>74</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>84</Byte>
        <Byte>24</Byte>
        <Byte>D0</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ebx,[ecx+00001C0C] Agent Skill pt Disp After Max rank</Description>
      <Address>598D3190</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>11D3190</ModuleNameOffset>
      <Before>
        <Byte>8E</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>99</Byte>
        <Byte>0C</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>DB</Byte>
        <Byte>B8</Byte>
        <Byte>B8</Byte>
        <Byte>F4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :push es Construction....</Description>
      <Address>716D504B</Address>
      <ModuleName>MSVCR80.dll</ModuleName>
      <ModuleNameOffset>1504B</ModuleNameOffset>
      <Before>
        <Byte>6D</Byte>
        <Byte>71</Byte>
        <Byte>23</Byte>
        <Byte>D1</Byte>
        <Byte>8A</Byte>
      </Before>
      <Actual>
        <Byte>06</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>07</Byte>
        <Byte>8A</Byte>
        <Byte>46</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov al,[esi+01]</Description>
      <Address>716D504E</Address>
      <ModuleName>MSVCR80.dll</ModuleName>
      <ModuleNameOffset>1504E</ModuleNameOffset>
      <Before>
        <Byte>D1</Byte>
        <Byte>8A</Byte>
        <Byte>06</Byte>
        <Byte>88</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>46</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>47</Byte>
        <Byte>01</Byte>
        <Byte>8A</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov al,[esi+02]</Description>
      <Address>716D5054</Address>
      <ModuleName>MSVCR80.dll</ModuleName>
      <ModuleNameOffset>15054</ModuleNameOffset>
      <Before>
        <Byte>46</Byte>
        <Byte>01</Byte>
        <Byte>88</Byte>
        <Byte>47</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>46</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>C1</Byte>
        <Byte>E9</Byte>
        <Byte>02</Byte>
        <Byte>88</Byte>
        <Byte>47</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov al,[esi]</Description>
      <Address>716D513C</Address>
      <ModuleName>MSVCR80.dll</ModuleName>
      <ModuleNameOffset>1513C</ModuleNameOffset>
      <Before>
        <Byte>5E</Byte>
        <Byte>5F</Byte>
        <Byte>C9</Byte>
        <Byte>C3</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>06</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>07</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :add dword ptr [esi+0C],01</Description>
      <Address>593EC39B</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>4DC39B</ModuleNameOffset>
      <Before>
        <Byte>5E</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>38</Byte>
        <Byte>C3</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
        <Byte>3B</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[esi+0C]</Description>
      <Address>593EC39F</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>4DC39F</ModuleNameOffset>
      <Before>
        <Byte>C3</Byte>
        <Byte>83</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>46</Byte>
        <Byte>10</Byte>
        <Byte>72</Byte>
        <Byte>ED</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ecx,[edi+0C] COnstruction/upgrade Disp</Description>
      <Address>5A214F49</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>1304F49</ModuleNameOffset>
      <Before>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>50</Byte>
        <Byte>51</Byte>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
        <Byte>E8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :sub eax,[ecx+0C]</Description>
      <Address>5945EE23</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>54EE23</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>41</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>49</Byte>
        <Byte>04</Byte>
        <Byte>8B</Byte>
        <Byte>51</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movzx edx,byte ptr [edi]</Description>
      <Address>6DFF8A12</Address>
      <ModuleName>AcXtrnal.DLL</ModuleName>
      <ModuleNameOffset>8A12</ModuleNameOffset>
      <Before>
        <Byte>D2</Byte>
        <Byte>75</Byte>
        <Byte>0E</Byte>
        <Byte>EB</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>17</Byte>
      </Actual>
      <After>
        <Byte>69</Byte>
        <Byte>C9</Byte>
        <Byte>3F</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movzx edi,byte ptr [eax]</Description>
      <Address>6DFF8BDA</Address>
      <ModuleName>AcXtrnal.DLL</ModuleName>
      <ModuleNameOffset>8BDA</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>75</Byte>
        <Byte>0E</Byte>
        <Byte>EB</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>38</Byte>
      </Actual>
      <After>
        <Byte>69</Byte>
        <Byte>D2</Byte>
        <Byte>3F</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[edx+04] Year DIsp</Description>
      <Address>594F0D54</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>5E0D54</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>56</Byte>
        <Byte>8B</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :add [esi+2C],eax Army</Description>
      <Address>58F85541</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>A45541</ModuleNameOffset>
      <Before>
        <Byte>B8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>46</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>01</Byte>
        <Byte>46</Byte>
        <Byte>64</Byte>
        <Byte>01</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[esi+00000D6C]</Description>
      <Address>596F3893</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>11B3893</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>6D</Byte>
        <Byte>65</Byte>
        <Byte>DF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>6C</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>28</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[ecx+00000D6C] Disp</Description>
      <Address>596C0706</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>1180706</ModuleNameOffset>
      <Before>
        <Byte>8F</Byte>
        <Byte>34</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>81</Byte>
        <Byte>6C</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>50</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>0C</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :sub eax,[ecx+00001C14] Agent DISP XP</Description>
      <Address>5897D7F7</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>27D7F7</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>04</Byte>
        <Byte>82</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>81</Byte>
        <Byte>14</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ecx,[esi+4C] Troop size Disp open</Description>
      <Address>58CFBFAE</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>5FBFAE</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>F2</Byte>
        <Byte>D0</Byte>
        <Byte>9A</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>04</Byte>
        <Byte>8A</Byte>
        <Byte>56</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ebx,[esi+4C]</Description>
      <Address>58A166E0</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>1E66E0</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>7E</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>5E</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>6A</Byte>
        <Byte>FF</Byte>
        <Byte>6A</Byte>
        <Byte>00</Byte>
        <Byte>6A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov edx,[edi+4C]</Description>
      <Address>58E87960</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657960</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>64</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>38</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>57</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>56</Byte>
        <Byte>44</Byte>
        <Byte>DB</Byte>
        <Byte>47</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fild dword ptr [edi+4C]</Description>
      <Address>58E87966</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657966</ModuleNameOffset>
      <Before>
        <Byte>57</Byte>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>56</Byte>
        <Byte>44</Byte>
      </Before>
      <Actual>
        <Byte>DB</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[edi+4C]</Description>
      <Address>58E87969</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657969</ModuleNameOffset>
      <Before>
        <Byte>56</Byte>
        <Byte>44</Byte>
        <Byte>DB</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>7D</Byte>
        <Byte>06</Byte>
        <Byte>D8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ecx,[edi+4C]</Description>
      <Address>58E4DC8F</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>61DC8F</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>38</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>4E</Byte>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>96</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[esi+4C]</Description>
      <Address>599C3D73</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>1193D73</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>8B</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>74</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>46</Byte>
        <Byte>50</Byte>
        <Byte>8B</Byte>
        <Byte>7C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [eax+4C],ecx</Description>
      <Address>048A024C</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>8B</Byte>
        <Byte>48</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>59</Byte>
        <Byte>29</Byte>
        <Byte>FA</Byte>
        <Byte>89</Byte>
        <Byte>50</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[eax+4C]</Description>
      <Address>58B00317</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>2D0317</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>14</Byte>
        <Byte>81</Byte>
        <Byte>8B</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov dl,[esi+74] Army Rank Disp</Description>
      <Address>58CFBFB4</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>5FBFB4</ModuleNameOffset>
      <Before>
        <Byte>4E</Byte>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>56</Byte>
        <Byte>74</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>57</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov cl,[esi+04]</Description>
      <Address>59044FB9</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>9F4FB9</ModuleNameOffset>
      <Before>
        <Byte>87</Byte>
        <Byte>D4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>4E</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>8F</Byte>
        <Byte>D8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov al,[edi+74]</Description>
      <Address>58CA7998</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657998</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>D9</Byte>
        <Byte>5E</Byte>
        <Byte>48</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>47</Byte>
        <Byte>74</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>46</Byte>
        <Byte>50</Byte>
        <Byte>8B</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov cl,[edi+74]</Description>
      <Address>58C6DCA1</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>61DCA1</ModuleNameOffset>
      <Before>
        <Byte>47</Byte>
        <Byte>70</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>4C</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>4F</Byte>
        <Byte>74</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>84</Byte>
        <Byte>24</Byte>
        <Byte>D0</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ebx,[ecx+00001C0C] Agent Skill pt Disp After Max rank</Description>
      <Address>598D3190</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>11D3190</ModuleNameOffset>
      <Before>
        <Byte>8E</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>99</Byte>
        <Byte>0C</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>DB</Byte>
        <Byte>B8</Byte>
        <Byte>B8</Byte>
        <Byte>F4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :add [esi+2C],eax Army</Description>
      <Address>58F85541</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>A45541</ModuleNameOffset>
      <Before>
        <Byte>B8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>46</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>01</Byte>
        <Byte>46</Byte>
        <Byte>64</Byte>
        <Byte>01</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[esi+00000D6C]</Description>
      <Address>596F3893</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>11B3893</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>6D</Byte>
        <Byte>65</Byte>
        <Byte>DF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>6C</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>28</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[ecx+00000D6C] Disp</Description>
      <Address>596C0706</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>1180706</ModuleNameOffset>
      <Before>
        <Byte>8F</Byte>
        <Byte>34</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>81</Byte>
        <Byte>6C</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>50</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>0C</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :sub eax,[ecx+00001C14] Agent DISP XP</Description>
      <Address>5897D7F7</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>27D7F7</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>04</Byte>
        <Byte>82</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>81</Byte>
        <Byte>14</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ecx,[esi+4C] Troop size Disp open</Description>
      <Address>58CFBFAE</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>5FBFAE</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>F2</Byte>
        <Byte>D0</Byte>
        <Byte>9A</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>04</Byte>
        <Byte>8A</Byte>
        <Byte>56</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ebx,[esi+4C]</Description>
      <Address>58A166E0</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>1E66E0</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>7E</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>5E</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>6A</Byte>
        <Byte>FF</Byte>
        <Byte>6A</Byte>
        <Byte>00</Byte>
        <Byte>6A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov edx,[edi+4C]</Description>
      <Address>58E87960</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657960</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>64</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>38</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>57</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>56</Byte>
        <Byte>44</Byte>
        <Byte>DB</Byte>
        <Byte>47</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fild dword ptr [edi+4C]</Description>
      <Address>58E87966</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657966</ModuleNameOffset>
      <Before>
        <Byte>57</Byte>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>56</Byte>
        <Byte>44</Byte>
      </Before>
      <Actual>
        <Byte>DB</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[edi+4C]</Description>
      <Address>58E87969</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657969</ModuleNameOffset>
      <Before>
        <Byte>56</Byte>
        <Byte>44</Byte>
        <Byte>DB</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>7D</Byte>
        <Byte>06</Byte>
        <Byte>D8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ecx,[edi+4C]</Description>
      <Address>58E4DC8F</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>61DC8F</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>38</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>4E</Byte>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>96</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[esi+4C]</Description>
      <Address>599C3D73</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>1193D73</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>8B</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>74</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>46</Byte>
        <Byte>50</Byte>
        <Byte>8B</Byte>
        <Byte>7C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [eax+4C],ecx</Description>
      <Address>048A024C</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>8B</Byte>
        <Byte>48</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>59</Byte>
        <Byte>29</Byte>
        <Byte>FA</Byte>
        <Byte>89</Byte>
        <Byte>50</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[eax+4C]</Description>
      <Address>58B00317</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>2D0317</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>14</Byte>
        <Byte>81</Byte>
        <Byte>8B</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov dl,[esi+74] Army Rank Disp</Description>
      <Address>58CFBFB4</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>5FBFB4</ModuleNameOffset>
      <Before>
        <Byte>4E</Byte>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>56</Byte>
        <Byte>74</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>57</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov cl,[esi+04]</Description>
      <Address>59044FB9</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>9F4FB9</ModuleNameOffset>
      <Before>
        <Byte>87</Byte>
        <Byte>D4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>4E</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>8F</Byte>
        <Byte>D8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov al,[edi+74]</Description>
      <Address>58CA7998</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>657998</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>D9</Byte>
        <Byte>5E</Byte>
        <Byte>48</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>47</Byte>
        <Byte>74</Byte>
      </Actual>
      <After>
        <Byte>88</Byte>
        <Byte>46</Byte>
        <Byte>50</Byte>
        <Byte>8B</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov cl,[edi+74]</Description>
      <Address>58C6DCA1</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>61DCA1</ModuleNameOffset>
      <Before>
        <Byte>47</Byte>
        <Byte>70</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>4C</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>4F</Byte>
        <Byte>74</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>84</Byte>
        <Byte>24</Byte>
        <Byte>D0</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov ebx,[ecx+00001C0C] Agent Skill pt Disp After Max rank</Description>
      <Address>598D3190</Address>
      <ModuleName>Shogun2.dll</ModuleName>
      <ModuleNameOffset>11D3190</ModuleNameOffset>
      <Before>
        <Byte>8E</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>99</Byte>
        <Byte>0C</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>DB</Byte>
        <Byte>B8</Byte>
        <Byte>B8</Byte>
        <Byte>F4</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>MyCode</Name>
      <Address>06E40000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSel</Name>
      <Address>06E4036E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGold</Name>
      <Address>06E40372</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pOfficer</Name>
      <Address>06E40376</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTown</Name>
      <Address>06E4037A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGM</Name>
      <Address>06E4034E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMA</Name>
      <Address>06E40352</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableQR</Name>
      <Address>06E40356</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMG</Name>
      <Address>06E4035A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMM</Name>
      <Address>06E4035E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMTS</Name>
      <Address>06E40362</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMP</Name>
      <Address>06E40366</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMR</Name>
      <Address>06E4036A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iMinGold</Name>
      <Address>06E40386</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iPlayerID</Name>
      <Address>06E4037E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGodMode</Name>
      <Address>5874A340</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGodMode1</Name>
      <Address>589D2AB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonAmmo</Name>
      <Address>586CC503</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGodModeS</Name>
      <Address>5890C0B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGodModeSH</Name>
      <Address>5883DC17</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonGold</Name>
      <Address>57E63D70</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonMP</Name>
      <Address>57DE2B60</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonSelOfficer</Name>
      <Address>58E4463C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonSelTown</Name>
      <Address>58F3A81B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonMP1</Name>
      <Address>57DB7DC5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonProd</Name>
      <Address>57E5DBA0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonResearch</Name>
      <Address>57E75D66</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTroop</Name>
      <Address>046A032A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUnit</Name>
      <Address>046A032E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRot</Name>
      <Address>046A0332</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCommon</Name>
      <Address>046A033E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCount0</Name>
      <Address>046A0356</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCount1</Name>
      <Address>046A035A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCount2</Name>
      <Address>046A035E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCount3</Name>
      <Address>046A0362</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCountS</Name>
      <Address>046A0366</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTroop1</Name>
      <Address>046A034E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUnit1</Name>
      <Address>046A0352</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGM1</Name>
      <Address>02BA0344</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGM2</Name>
      <Address>02BA0348</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGMS</Name>
      <Address>02BA0354</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Total War - Shogun 2
 Game Version  : 1.10
 Script Version: 2.1
 CE Version    : 6.0
 GM, Ammo, Gold, MP, MSO, MP1, Recruitment, Research
 23-Mar-2011 First Release
 29-Mar-2011 AOb version of the script
 01-Apr-2011 Correct GM Troops; added MP for agents; Corrected MonGold; Added MonProd; Added MonRes
 By Recifense
===========================================
1) God Mode: For all Units and Ships
2) Unlimited Ammo (Arrows, Bombs, etc)
3) Unlimited Movement Points (Army on campaign)
4) Recover troop size when Army moves (Army on campaign)
5) One Turn Recruitment (Troops and Ships)
6) One Turn Research (Mastery of the Arts)
7) Minimum Gold (On campaign)
8) Player's Current Gold (On campaign)
9) Skill points of selected army's general (On Campaign)
[Note] In order to identify the human player, at the start/load of any game, selected a troop with an officer or selected a city info.
[Note] For activating the script, just check its "active" box by clicking on it [X].
 
</Comments>
</CheatTable>
