<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>412</ID>
      <Description>"----- Game variables (tick to open) -----"</Description>
      <Options moHideChildren="1"/>
      <Color>8000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>413</ID>
          <Description>"fAVDCarryWeightsBase"</Description>
          <Color>FF0000</Color>
          <VariableType>Float</VariableType>
          <Address>Fallout3.exe+B5F020</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>414</ID>
          <Description>"fAVDCarryWeightMult"</Description>
          <Color>FF0000</Color>
          <VariableType>Float</VariableType>
          <Address>Fallout3.exe+B5F014</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>442</ID>
          <Description>"fBloodSplatterDuration"</Description>
          <Color>FF0000</Color>
          <VariableType>Float</VariableType>
          <Address>Fallout3.exe+B60BDC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>443</ID>
          <Description>"fBloodSplatterOpacityChance"</Description>
          <Color>FF0000</Color>
          <VariableType>Float</VariableType>
          <Address>Fallout3.exe+B60C3C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>415</ID>
          <Description>"iMaxCharacterLevel"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>Fallout3.exe+B62304</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>416</ID>
          <Description>"----- Movement -----"</Description>
          <Options moHideChildren="1"/>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>417</ID>
              <Description>"fMoveBaseSpeed"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>Fallout3.exe+B610D4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>418</ID>
              <Description>"fMoveEncumEffect"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>Fallout3.exe+B61080</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>419</ID>
              <Description>"fMoveEncumEffectNoWea"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>Fallout3.exe+B6108C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>420</ID>
              <Description>"fMoveNoWeaponMult"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>Fallout3.exe+B610BC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>421</ID>
              <Description>"fMoveRunMult"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>Fallout3.exe+B61098</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>422</ID>
              <Description>"fMoveSneakMult"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>Fallout3.exe+B610C8</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>423</ID>
      <Description>"Fallout v1.7.0.3 AOB script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobGetPlayerPtr,Fallout3.exe,81 C7 4C 03 00 00 E8)
aobscanmodule(aobAmmoTaker,Fallout3.exe,8B 82 4C 01 00 00 2B EF 55)
aobscanmodule(aobDamageReader1,Fallout3.exe,DB 44 24 48 D9 9E D4 00 00 00)
aobscanmodule(aobDamageReader2,Fallout3.exe,D9 5C 24 24 D9 44 24 24 8B 7C 24 20)
aobscanmodule(aobVATSUpdater1,Fallout3.exe,D9 9C BE 4C 04 00 00)
aobscanmodule(aobVATSUpdater2,Fallout3.exe,D9 9B D8 00 00 00 8B 0F 51)
aobscanmodule(aobDamageUpdater,Fallout3.exe,D9 9E 48 04 00 00 5F 5E)
aobscanmodule(aobXPUpdater,Fallout3.exe,D9 84 B7 24 03 00 00)
aobscanmodule(aobWeaponConditionBypass,Fallout3.exe,85 ED 56 57 8B D9 0F 84)
aobscanmodule(aobWeightMath,Fallout3.exe,D9 1C 24 D9 04 24 59 C3 D9 05 ?? ?? ?? ?? C3)
aobscanmodule(aobCapsChecker,Fallout3.exe,8B 16 83 7A 04 00 7E)
aobscanmodule(aobBloodSplatTimer,Fallout3.exe,6A 1C D9 5C 24 28 89 7C 24 30)
aobscanmodule(aobStatFetcher,Fallout3.exe,D9 84 81 64 01 00 00 D9 1C 24)

alloc(newmem,4096)

label(aobGetPlayerPtr_r)
registersymbol(aobGetPlayerPtr_r)

label(lblGetPlayerPtr)
label(lblGetPlayerPtrRet)

label(pPlayer)
registersymbol(pPlayer)

label(aobAmmoTaker_r)
registersymbol(aobAmmoTaker_r)

label(lblAmmoTaker)
label(lblAmmoTakerSkip)
label(lblAmmoTakerRet)

label(bEnableInfiniteAmmo)
registersymbol(bEnableInfiniteAmmo)

label(aobDamageReader1_r)
registersymbol(aobDamageReader1_r)

label(lblDamageReader1)
label(lblDamageReader1NonPlayer)
label(lblDamageReader1Skip)
label(lblDamageReader1Ret)

label(aobDamageReader2_r)
registersymbol(aobDamageReader2_r)

label(lblDamageReader2)
label(lblDamageReader2NonPlayer)
label(lblDamageReader2Skip)
label(lblDamageReader2Ret)

label(bEnablePlayerBaseDamageMultiplier)
label(fPlayerBaseDamageMultiplier)
label(bEnableNonPlayerBaseDamageMultiplier)
label(fNonPlayerBaseDamageMultiplier)
registersymbol(bEnablePlayerBaseDamageMultiplier)
registersymbol(fPlayerBaseDamageMultiplier)
registersymbol(bEnableNonPlayerBaseDamageMultiplier)
registersymbol(fNonPlayerBaseDamageMultiplier)

label(aobVATSUpdater1_r)
registersymbol(aobVATSUpdater1_r)

label(lblVATSUpdater1)
label(lblVATSUpdater1Skip)
label(lblVATSUpdater1Ret)

label(aobVATSUpdater2_r)
registersymbol(aobVATSUpdater2_r)

label(lblVATSUpdater2)
label(lblVATSUpdater2Skip)
label(lblVATSUpdater2Ret)

label(bEnableInfiniteVATSAction)
registersymbol(bEnableInfiniteVATSAction)

label(aobDamageUpdater_r)
registersymbol(aobDamageUpdater_r)

label(lblDamageUpdater)
label(lblDamageUpdaterSkip)
label(lblDamageUpdaterRet)

label(bEnableGodMode)
label(bEnableRadiationFix)
registersymbol(bEnableGodMode)
registersymbol(bEnableRadiationFix)

label(lblPlayerReconditioner)
label(lblPlayerReconditionerSkipHealth)
label(lblPlayerReconditionerSkipActionPoints)
label(lblPlayerReconditionerSkipRadiation)

label(aobXPUpdater_r)
registersymbol(aobXPUpdater_r)

label(lblXPUpdater)
label(lblXPUpdaterSkip)
label(lblXPUpdaterSkipReconditioning)
label(lblXPUpdaterRet)

label(bEnableXPGainMultiplier)
label(fXPGainMultiplier)
registersymbol(bEnableXPGainMultiplier)
registersymbol(fXPGainMultiplier)

label(aobWeaponConditionBypass_r)
registersymbol(aobWeaponConditionBypass_r)

label(lblWeaponConditionBypass)
label(lblWeaponConditionBypassSkip)
label(lblWeaponConditionBypassRet)

label(bEnableWeaponConditionerBypass)
registersymbol(bEnableWeaponConditionerBypass)

label(aobWeightMath_r)
registersymbol(aobWeightMath_r)

label(lblWeightMath)
label(lblWeightMathSkip)
label(lblWeightMathRet)

label(bEnableWeightLimitScale)
label(fWeightLimitScaleMultiplier)
label(fWeightLimitScaleBonus)
registersymbol(bEnableWeightLimitScale)
registersymbol(fWeightLimitScaleMultiplier)
registersymbol(fWeightLimitScaleBonus)

label(aobCapsChecker_r)
registersymbol(aobCapsChecker_r)

label(lblCapsChecker)
label(lblCapsCheckerSkip)
label(lblCapsCheckerRet)

label(bEnableMinimumCaps)
label(iMinimumCaps)
registersymbol(bEnableMinimumCaps)
registersymbol(iMinimumCaps)

label(aobBloodSplatTimer_r)
registersymbol(aobBloodSplatTimer_r)

label(lblBloodSplatTimer)
label(lblBloodSplatTimerSkip)
label(lblBloodSplatTimerRet)

label(bEnableBloodSplatDuration)
label(fBloodSplatDuration)
registersymbol(bEnableBloodSplatDuration)
registersymbol(fBloodSplatDuration)

label(aobStatFetcher_r)
registersymbol(aobStatFetcher_r)

label(lblStatFetcher)
label(lblStatFetcherSkip)
label(lblStatFetcherRet)

newmem:
////////////////////////////////
// Script variables           //
//                            //
// Tweak these to your liking //
////////////////////////////////
bEnableGodMode:
dd 1
bEnableRadiationFix:
dd 1
bEnableMinimumCaps:
dd 1
iMinimumCaps:
dd (int)5000
bEnableInfiniteAmmo:
dd 1
bEnablePlayerBaseDamageMultiplier:
dd 1
fPlayerBaseDamageMultiplier:
dd (float)1.75
bEnableNonPlayerBaseDamageMultiplier:
dd 1
fNonPlayerBaseDamageMultiplier:
dd (float)0.1
bEnableInfiniteVATSAction:
dd 1
bEnableXPGainMultiplier:
dd 1
fXPGainMultiplier:
dd (float)1.5
bEnableWeaponConditionerBypass:
dd 1
bEnableWeightLimitScale:
dd 1
fWeightLimitScaleMultiplier:
dd (float)20.0
fWeightLimitScaleBonus:
dd (float)1000.0
bEnableBloodSplatDuration:
dd 1
fBloodSplatDuration:
dd (float)0.2

lblGetPlayerPtr:
mov dword ptr [pPlayer],ecx
add edi,0000034C // Original code
jmp lblGetPlayerPtrRet
pPlayer:
dd 0

lblAmmoTaker:
cmp dword ptr [pPlayer],esi
jne short lblAmmoTakerSkip
cmp dword ptr [bEnableInfiniteAmmo],1
jne short lblAmmoTakerSkip
xor edi,edi
lblAmmoTakerSkip:
mov eax,[edx+0000014C] // original code
jmp lblAmmoTakerRet

lblDamageReader1:
fild dword ptr [esp+48]       // Original code
pushfd
cmp dword ptr [pPlayer],ecx
je short lblDamageReader1NonPlayer
cmp dword ptr [bEnablePlayerBaseDamageMultiplier],1
jne short lblDamageReader1Skip
fmul dword ptr [fPlayerBaseDamageMultiplier]
fist dword ptr [esp+4c]
jmp short lblDamageReader1Skip
lblDamageReader1NonPlayer:
cmp dword ptr [bEnableNonPlayerBaseDamageMultiplier],1
jne short lblDamageReader1Skip
fmul dword ptr [fNonPlayerBaseDamageMultiplier]
fist dword ptr [esp+4c]
lblDamageReader1Skip:
popfd
fstp dword ptr [esi+000000D4] // Original code
jmp lblDamageReader1Ret

lblDamageReader2:
pushfd
mov edi,[esp+3c]
cmp dword ptr [pPlayer],edi
je short lblDamageReader2NonPlayer
cmp dword ptr [bEnablePlayerBaseDamageMultiplier],1
jne short lblDamageReader2Skip
fmul dword ptr [fPlayerBaseDamageMultiplier]
jmp short lblDamageReader2Skip
lblDamageReader2NonPlayer:
cmp dword ptr [bEnableNonPlayerBaseDamageMultiplier],1
jne short lblDamageReader2Skip
fmul dword ptr [fNonPlayerBaseDamageMultiplier]
lblDamageReader2Skip:
popfd
fstp dword ptr [esp+24] // Original code
fld dword ptr [esp+24]  // Original code
jmp lblDamageReader2Ret

lblVATSUpdater1:
cmp edi,c
jne short lblVATSUpdater1Skip
cmp dword ptr [pPlayer],esi
jne short lblVATSUpdater1Skip
cmp dword ptr [bEnableInfiniteVATSAction],1
jne short lblVATSUpdater1Skip
fstp st(0)
mov dword ptr [esi+47C],0
mov dword ptr [esp+10],0
mov dword ptr [esi+14],0
jmp lblVATSUpdater1Ret
lblVATSUpdater1Skip:
fstp dword ptr [esi+edi*4+0000044C] // Original code
jmp lblVATSUpdater1Ret

lblVATSUpdater2:
cmp dword ptr [bEnableInfiniteVATSAction],1
jne short lblVATSUpdater2Skip
fstp st(0)
fld dword ptr [ebx+000000DC]
lblVATSUpdater2Skip:
fstp dword ptr [ebx+000000D8] // Original code
jmp lblVATSUpdater2Ret

lblDamageUpdater:
cmp dword ptr [pPlayer],esi
jne short lblDamageUpdaterSkip
cmp dword ptr [bEnableGodMode],1
jne short lblDamageUpdaterSkip
fstp st(0)
call lblPlayerReconditioner
jmp lblDamageUpdaterRet
lblDamageUpdaterSkip:
fstp dword ptr [esi+00000448] // Original code
jmp lblDamageUpdaterRet

lblPlayerReconditioner:
cmp dword ptr [bEnableGodMode],1
jne short lblPlayerReconditionerSkipHealth
mov dword ptr [esi+00000448],0 // Health
mov dword ptr [esi+000004b0],0 // Limb status, Head
mov dword ptr [esi+000004b4],0 // Limb status, Body
mov dword ptr [esi+000004b8],0 // Limb status, Left arm
mov dword ptr [esi+000004bc],0 // Limb status, Right arm
mov dword ptr [esi+000004c0],0 // Limb status, Left leg
mov dword ptr [esi+000004c4],0 // Limb status, Right leg
lblPlayerReconditionerSkipHealth:

cmp dword ptr [bEnableInfiniteVATSAction],1
jne short lblPlayerReconditionerSkipActionPoints
mov dword ptr [esi+0000047c],0 // Action points
lblPlayerReconditionerSkipActionPoints:

cmp dword ptr [bEnableRadiationFix],1
jne short lblPlayerReconditionerSkipRadiation
mov dword ptr [esi+00000524],0 // Radiation level
lblPlayerReconditionerSkipRadiation:
ret

lblXPUpdater:
cmp esi,18
jne short lblXPUpdaterSkip
cmp dword ptr [bEnableXPGainMultiplier],1
jne short lblXPUpdaterSkip
fld dword ptr [esp+04]
fmul dword ptr [fXPGainMultiplier]
fst dword ptr [esp+04]
fstp dword ptr [esp+24]
//fst dword ptr [esp+28]
//fstp dword ptr [esp+34]
//fstp dword ptr [esp+3C] // On world event
//fstp dword ptr [esp+54] // On kill
lblXPUpdaterSkip:
cmp dword ptr [bEnableGodMode],1
jne short lblXPUpdaterSkipReconditioning
push esi
mov esi,edi
call lblPlayerReconditioner
pop esi
lblXPUpdaterSkipReconditioning:
fld dword ptr [edi+esi*4+00000324] // Original code
jmp lblXPUpdaterRet

lblWeaponConditionBypass:
cmp dword ptr [pPlayer],ecx
jne short lblWeaponConditionBypassSkip
cmp dword ptr [bEnableWeaponConditionerBypass],1
jne short lblWeaponConditionBypassSkip
push ebp
xor ebp,ebp
test ebp,ebp // Original code
pop ebp
push esi     // Original code
push edi     // Original code
mov ebx,ecx  // Original code
jmp lblWeaponConditionBypassRet
lblWeaponConditionBypassSkip:
test ebp,ebp // Original code
push esi     // Original code
push edi     // Original code
mov ebx,ecx  // Original code
jmp lblWeaponConditionBypassRet

lblWeightMath:
cmp dword ptr [pPlayer],edi
jne short lblWeightMathSkip
cmp dword ptr [bEnableWeightLimitScale],1
jne short lblWeightMathSkip
fmul dword ptr [fWeightLimitScaleMultiplier]
fadd dword ptr [fWeightLimitScaleBonus]
lblWeightMathSkip:
//fstp dword ptr [esp] // Original code
//fld dword ptr [esp]  // Original code
fst dword ptr [esp]
jmp lblWeightMathRet

lblCapsChecker:
mov edx,[esi]             // Original code
push eax
cmp dword ptr [bEnableMinimumCaps],1
jne short lblCapsCheckerSkip
mov eax,[iMinimumCaps]
cmp dword ptr [edx+04],eax
jge short lblCapsCheckerSkip
mov dword ptr [edx+04],eax
lblCapsCheckerSkip:
pop eax
cmp dword ptr [edx+04],00 // Original code
jmp lblCapsCheckerRet

lblBloodSplatTimer:
je short lblBloodSplatTimerSkip
cmp dword ptr [bEnableBloodSplatDuration],1
jne short lblBloodSplatTimerSkip
fstp st(0)
fld dword ptr [fBloodSplatDuration]
lblBloodSplatTimerSkip:
push 1C                 // Original code
fstp dword ptr [esp+28] // Original code
jmp lblBloodSplatTimerRet

lblStatFetcher:
pushfd
push esi
lea esi,[ecx+9c]
cmp dword ptr [pPlayer],esi
jne short lblStatFetcherSkip
call lblPlayerReconditioner
lblStatFetcherSkip:
pop esi
popfd
fld dword ptr [ecx+eax*4+00000164] // Original code
jmp lblStatFetcherRet

aobStatFetcher:
aobStatFetcher_r:
jmp lblStatFetcher
nop
nop
lblStatFetcherRet:

aobBloodSplatTimer:
aobBloodSplatTimer_r:
jmp lblBloodSplatTimer
nop
lblBloodSplatTimerRet:

aobCapsChecker:
aobCapsChecker_r:
jmp lblCapsChecker
nop
lblCapsCheckerRet:

aobWeightMath:
aobWeightMath_r:
jmp lblWeightMath
nop
lblWeightMathRet:

aobWeaponConditionBypass:
aobWeaponConditionBypass_r:
jmp lblWeaponConditionBypass
nop
lblWeaponConditionBypassRet:

aobXPUpdater:
aobXPUpdater_r:
jmp lblXPUpdater
nop
nop
lblXPUpdaterRet:

aobDamageUpdater:
aobDamageUpdater_r:
jmp lblDamageUpdater
nop
lblDamageUpdaterRet:

aobVATSUpdater1:
aobVATSUpdater1_r:
jmp lblVATSUpdater1
nop
nop
lblVATSUpdater1Ret:

aobVATSUpdater2:
aobVATSUpdater2_r:
jmp lblVATSUpdater2
nop
lblVATSUpdater2Ret:

aobDamageReader1:
aobDamageReader1_r:
jmp lblDamageReader1
nop
nop
nop
nop
nop
lblDamageReader1Ret:

aobDamageReader2:
aobDamageReader2_r:
jmp lblDamageReader2
nop
nop
nop
lblDamageReader2Ret:

aobAmmoTaker:
aobAmmoTaker_r:
jmp lblAmmoTaker
nop
lblAmmoTakerRet:

aobGetPlayerPtr:
aobGetPlayerPtr_r:
jmp lblGetPlayerPtr
nop
lblGetPlayerPtrRet:

[DISABLE]
aobGetPlayerPtr_r:
db 81 C7 4C 03 00 00

unregistersymbol(aobGetPlayerPtr_r)

unregistersymbol(pPlayer)

aobAmmoTaker_r:
db 8B 82 4C 01 00 00

unregistersymbol(aobAmmoTaker_r)

unregistersymbol(bEnableInfiniteAmmo)

aobDamageReader1_r:
db DB 44 24 48 D9 9E D4 00 00 00

unregistersymbol(aobDamageReader1_r)

aobDamageReader2_r:
db D9 5C 24 24 D9 44 24 24

unregistersymbol(aobDamageReader2_r)

unregistersymbol(bEnablePlayerBaseDamageMultiplier)
unregistersymbol(fPlayerBaseDamageMultiplier)
unregistersymbol(bEnableNonPlayerBaseDamageMultiplier)
unregistersymbol(fNonPlayerBaseDamageMultiplier)

aobVATSUpdater1_r:
db D9 9C BE 4C 04 00 00

unregistersymbol(aobVATSUpdater1_r)

aobVATSUpdater2_r:
db D9 9B D8 00 00 00

unregistersymbol(aobVATSUpdater2_r)

unregistersymbol(bEnableInfiniteVATSAction)

aobDamageUpdater_r:
db D9 9E 48 04 00 00

unregistersymbol(aobDamageUpdater_r)

unregistersymbol(bEnableGodMode)
unregistersymbol(bEnableRadiationFix)

aobXPUpdater_r:
db D9 84 B7 24 03 00 00

unregistersymbol(bEnableXPGainMultiplier)
unregistersymbol(fXPGainMultiplier)

aobWeaponConditionBypass_r:
db 85 ED 56 57 8B D9

unregistersymbol(aobWeaponConditionBypass_r)

unregistersymbol(bEnableWeaponConditionerBypass)

aobWeightMath_r:
db D9 1C 24 D9 04 24

unregistersymbol(aobWeightMath_r)

unregistersymbol(bEnableWeightLimitScale)
unregistersymbol(fWeightLimitScaleMultiplier)
unregistersymbol(fWeightLimitScaleBonus)

aobCapsChecker_r:
db 8B 16 83 7A 04 00

unregistersymbol(aobCapsChecker_r)

unregistersymbol(bEnableMinimumCaps)
unregistersymbol(iMinimumCaps)

aobBloodSplatTimer_r:
db 6A 1C D9 5C 24 28

unregistersymbol(aobBloodSplatTimer_r)

unregistersymbol(bEnableBloodSplatDuration)
unregistersymbol(fBloodSplatDuration)

aobStatFetcher_r:
db D9 84 81 64 01 00 00

unregistersymbol(aobStatFetcher_r)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>424</ID>
          <Description>"bEnableGodMode"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableGodMode</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>425</ID>
              <Description>"bEnableRadiationFix"</Description>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableRadiationFix</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>426</ID>
          <Description>"bEnableMinimumCaps"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMinimumCaps</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>427</ID>
              <Description>"iMinimumCaps"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinimumCaps</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>428</ID>
          <Description>"bEnableInfiniteAmmo"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteAmmo</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>429</ID>
          <Description>"bEnablePlayerBaseDamageMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnablePlayerBaseDamageMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>430</ID>
              <Description>"fPlayerBaseDamageMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fPlayerBaseDamageMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>431</ID>
          <Description>"bEnableNonPlayerBaseDamageMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableNonPlayerBaseDamageMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>432</ID>
              <Description>"fNonPlayerBaseDamageMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fNonPlayerBaseDamageMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>433</ID>
          <Description>"bEnableInfiniteVATSAction"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteVATSAction</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>434</ID>
          <Description>"bEnableXPGainMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableXPGainMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>435</ID>
              <Description>"fXPGainMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fXPGainMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>436</ID>
          <Description>"bEnableWeaponConditionerBypass"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableWeaponConditionerBypass</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>437</ID>
          <Description>"bEnableWeightLimitScale"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableWeightLimitScale</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>438</ID>
              <Description>"fWeightLimitScaleMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fWeightLimitScaleMultiplier</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>439</ID>
              <Description>"fWeightLimitScaleBonus"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fWeightLimitScaleBonus</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>447</ID>
          <Description>"bEnableBloodSplatDuration"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableBloodSplatDuration</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>448</ID>
              <Description>"fBloodSplatDuration"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fBloodSplatDuration</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
