<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>21</ID>
      <Description>"pointerscan score?"</Description>
      <LastState Value="565267" RealAddress="04E56BF8"/>
      <VariableType>4 Bytes</VariableType>
      <Address>"StarDefender4.exe"+001F3EBC</Address>
      <Offsets>
        <Offset>D0</Offset>
        <Offset>F0</Offset>
        <Offset>28</Offset>
        <Offset>4</Offset>
        <Offset>440</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Infinite Lives"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : StarDefender4.exe
  Version: 
  Date   : 2017-01-05
  Author : Cole

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Lives,StarDefender4.exe,83 E9 01 8B 55 FC 89 8A) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  nop
  nop
  mov edx,[ebp-04]
  jmp return

Lives:
  jmp newmem
  nop
return:
registersymbol(Lives)

[DISABLE]

Lives:
  db 83 E9 01 8B 55 FC

unregistersymbol(Lives)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "StarDefender4.exe"+B3370

"StarDefender4.exe"+B335C: CC                 -  int 3 
"StarDefender4.exe"+B335D: CC                 -  int 3 
"StarDefender4.exe"+B335E: CC                 -  int 3 
"StarDefender4.exe"+B335F: CC                 -  int 3 
"StarDefender4.exe"+B3360: 55                 -  push ebp
"StarDefender4.exe"+B3361: 8B EC              -  mov ebp,esp
"StarDefender4.exe"+B3363: 51                 -  push ecx
"StarDefender4.exe"+B3364: 89 4D FC           -  mov [ebp-04],ecx
"StarDefender4.exe"+B3367: 8B 45 FC           -  mov eax,[ebp-04]
"StarDefender4.exe"+B336A: 8B 88 C4 04 00 00  -  mov ecx,[eax+000004C4]
// ---------- INJECTING HERE ----------
"StarDefender4.exe"+B3370: 83 E9 01           -  sub ecx,01
"StarDefender4.exe"+B3373: 8B 55 FC           -  mov edx,[ebp-04]
// ---------- DONE INJECTING  ----------
"StarDefender4.exe"+B3376: 89 8A C4 04 00 00  -  mov [edx+000004C4],ecx
"StarDefender4.exe"+B337C: 8B 45 FC           -  mov eax,[ebp-04]
"StarDefender4.exe"+B337F: 8B 80 C4 04 00 00  -  mov eax,[eax+000004C4]
"StarDefender4.exe"+B3385: 8B E5              -  mov esp,ebp
"StarDefender4.exe"+B3387: 5D                 -  pop ebp
"StarDefender4.exe"+B3388: C3                 -  ret 
"StarDefender4.exe"+B3389: CC                 -  int 3 
"StarDefender4.exe"+B338A: CC                 -  int 3 
"StarDefender4.exe"+B338B: CC                 -  int 3 
"StarDefender4.exe"+B338C: CC                 -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Inifinite Missiles/Secondary Weapon Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : StarDefender4.exe
  Version: 
  Date   : 2017-01-05
  Author : Cole

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Missiles,StarDefender4.exe,2B 51 40 8B 45 EC) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  db 90 90 90
  mov eax,[ebp-14]
  jmp return

Missiles:
  jmp newmem
  nop
return:
registersymbol(Missiles)

[DISABLE]

Missiles:
  db 2B 51 40 8B 45 EC

unregistersymbol(Missiles)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "StarDefender4.exe"+8109B

"StarDefender4.exe"+8107E: 8B 4D F0        -  mov ecx,[ebp-10]
"StarDefender4.exe"+81081: 8B 51 3C        -  mov edx,[ecx+3C]
"StarDefender4.exe"+81084: 52              -  push edx
"StarDefender4.exe"+81085: 8B 4D F0        -  mov ecx,[ebp-10]
"StarDefender4.exe"+81088: 83 C1 2C        -  add ecx,2C
"StarDefender4.exe"+8108B: E8 10 EC F8 FF  -  call StarDefender4.exe+FCA0
"StarDefender4.exe"+81090: 89 45 EC        -  mov [ebp-14],eax
"StarDefender4.exe"+81093: 8B 45 EC        -  mov eax,[ebp-14]
"StarDefender4.exe"+81096: 8B 4D F0        -  mov ecx,[ebp-10]
"StarDefender4.exe"+81099: 8B 10           -  mov edx,[eax]
// ---------- INJECTING HERE ----------
"StarDefender4.exe"+8109B: 2B 51 40        -  sub edx,[ecx+40]
"StarDefender4.exe"+8109E: 8B 45 EC        -  mov eax,[ebp-14]
// ---------- DONE INJECTING  ----------
"StarDefender4.exe"+810A1: 89 10           -  mov [eax],edx
"StarDefender4.exe"+810A3: 8B E5           -  mov esp,ebp
"StarDefender4.exe"+810A5: 5D              -  pop ebp
"StarDefender4.exe"+810A6: C2 08 00        -  ret 0008
"StarDefender4.exe"+810A9: CC              -  int 3 
"StarDefender4.exe"+810AA: CC              -  int 3 
"StarDefender4.exe"+810AB: CC              -  int 3 
"StarDefender4.exe"+810AC: CC              -  int 3 
"StarDefender4.exe"+810AD: CC              -  int 3 
"StarDefender4.exe"+810AE: CC              -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Full Shield(Invincible)"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : StarDefender4.exe
  Version: 
  Date   : 2017-01-05
  Author : Cole

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Powerup1,StarDefender4.exe,8B 42 30 EB 02) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,#700
  jmp StarDefender4.exe+7FAEC
  jmp return

Powerup1:
  jmp newmem
return:
registersymbol(Powerup1)

[DISABLE]

Powerup1:
  db 8B 42 30 EB 02

unregistersymbol(Powerup1)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "StarDefender4.exe"+7FAE5

"StarDefender4.exe"+7FACF: CC                             -  int 3 
"StarDefender4.exe"+7FAD0: 55                             -  push ebp
"StarDefender4.exe"+7FAD1: 8B EC                          -  mov ebp,esp
"StarDefender4.exe"+7FAD3: 51                             -  push ecx
"StarDefender4.exe"+7FAD4: 89 4D FC                       -  mov [ebp-04],ecx
"StarDefender4.exe"+7FAD7: 8B 45 FC                       -  mov eax,[ebp-04]
"StarDefender4.exe"+7FADA: 8B 4D 08                       -  mov ecx,[ebp+08]
"StarDefender4.exe"+7FADD: 3B 48 28                       -  cmp ecx,[eax+28]
"StarDefender4.exe"+7FAE0: 75 08                          -  jne StarDefender4.exe+7FAEA
"StarDefender4.exe"+7FAE2: 8B 55 FC                       -  mov edx,[ebp-04]
// ---------- INJECTING HERE ----------
"StarDefender4.exe"+7FAE5: 8B 42 30                       -  mov eax,[edx+30]
"StarDefender4.exe"+7FAE8: EB 02                          -  jmp StarDefender4.exe+7FAEC
// ---------- DONE INJECTING  ----------
"StarDefender4.exe"+7FAEA: 33 C0                          -  xor eax,eax
"StarDefender4.exe"+7FAEC: 8B E5                          -  mov esp,ebp
"StarDefender4.exe"+7FAEE: 5D                             -  pop ebp
"StarDefender4.exe"+7FAEF: C2 04 00                       -  ret 0004
"StarDefender4.exe"+7FAF2: CC                             -  int 3 
"StarDefender4.exe"+7FAF3: CC                             -  int 3 
"StarDefender4.exe"+7FAF4: CC                             -  int 3 
"StarDefender4.exe"+7FAF5: CC                             -  int 3 
"StarDefender4.exe"+7FAF6: CC                             -  int 3 
"StarDefender4.exe"+7FAF7: CC                             -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Full Main Weapon Power Up (get hit once)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : StarDefender4.exe
  Version: 
  Date   : 2017-01-05
  Author : Cole

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(wppowerup,StarDefender4.exe,EA 00 00 8B 4D F4 8B 51 30 3B 50 14) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov edx,#7
  cmp edx,#7
  jmp return

wppowerup+06:
  jmp newmem
  nop
return:
registersymbol(wppowerup)

[DISABLE]

wppowerup+06:
  db 8B 51 30 3B 50 14

unregistersymbol(wppowerup)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "StarDefender4.exe"+7F955

"StarDefender4.exe"+7F938: 51                    -  push ecx
"StarDefender4.exe"+7F939: 8B 55 F4              -  mov edx,[ebp-0C]
"StarDefender4.exe"+7F93C: 8B 42 28              -  mov eax,[edx+28]
"StarDefender4.exe"+7F93F: 50                    -  push eax
"StarDefender4.exe"+7F940: 8B 4D F4              -  mov ecx,[ebp-0C]
"StarDefender4.exe"+7F943: 83 C1 18              -  add ecx,18
"StarDefender4.exe"+7F946: E8 05 EC 00 00        -  call StarDefender4.exe+8E550
"StarDefender4.exe"+7F94B: 8B C8                 -  mov ecx,eax
"StarDefender4.exe"+7F94D: E8 CE EA 00 00        -  call StarDefender4.exe+8E420
"StarDefender4.exe"+7F952: 8B 4D F4              -  mov ecx,[ebp-0C]
// ---------- INJECTING HERE ----------
"StarDefender4.exe"+7F955: 8B 51 30              -  mov edx,[ecx+30]
"StarDefender4.exe"+7F958: 3B 50 14              -  cmp edx,[eax+14]
// ---------- DONE INJECTING  ----------
"StarDefender4.exe"+7F95B: 7C 0B                 -  jl StarDefender4.exe+7F968
"StarDefender4.exe"+7F95D: 8B 45 F4              -  mov eax,[ebp-0C]
"StarDefender4.exe"+7F960: 8B 4D F8              -  mov ecx,[ebp-08]
"StarDefender4.exe"+7F963: 89 48 2C              -  mov [eax+2C],ecx
"StarDefender4.exe"+7F966: EB 02                 -  jmp StarDefender4.exe+7F96A
"StarDefender4.exe"+7F968: EB BC                 -  jmp StarDefender4.exe+7F926
"StarDefender4.exe"+7F96A: 8B 55 F4              -  mov edx,[ebp-0C]
"StarDefender4.exe"+7F96D: 8B 42 2C              -  mov eax,[edx+2C]
"StarDefender4.exe"+7F970: 50                    -  push eax
"StarDefender4.exe"+7F971: 8B 4A 28              -  mov ecx,[edx+28]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of sub edx,[ecx+40]</Description>
      <Address>0048109B</Address>
      <ModuleName>StarDefender4.exe</ModuleName>
      <ModuleNameOffset>8109B</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>F0</Byte>
        <Byte>8B</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>51</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>EC</Byte>
        <Byte>89</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub eax,[ebp+08]</Description>
      <Address>0047F8EA</Address>
      <ModuleName>StarDefender4.exe</ModuleName>
      <ModuleNameOffset>7F8EA</ModuleNameOffset>
      <Before>
        <Byte>55</Byte>
        <Byte>F4</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>F4</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub ecx,01</Description>
      <Address>004B3370</Address>
      <ModuleName>StarDefender4.exe</ModuleName>
      <ModuleNameOffset>B3370</ModuleNameOffset>
      <Before>
        <Byte>88</Byte>
        <Byte>C4</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>E9</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>FC</Byte>
        <Byte>89</Byte>
        <Byte>8A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [eax+3C],ecx</Description>
      <Address>00480F68</Address>
      <ModuleName>StarDefender4.exe</ModuleName>
      <ModuleNameOffset>80F68</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>FC</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>3C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
        <Byte>5D</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [ecx+40],eax -second number accessed</Description>
      <Address>00480F47</Address>
      <ModuleName>StarDefender4.exe</ModuleName>
      <ModuleNameOffset>80F47</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>08</Byte>
        <Byte>52</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :cmp eax,[edx+40]-second number accesed on change</Description>
      <Address>00481030</Address>
      <ModuleName>StarDefender4.exe</ModuleName>
      <ModuleNameOffset>81030</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>F0</Byte>
        <Byte>8B</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>3B</Byte>
        <Byte>42</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>7D</Byte>
        <Byte>13</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>F0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jnl StarDefender4.exe+81048</Description>
      <Address>00481033</Address>
      <ModuleName>StarDefender4.exe</ModuleName>
      <ModuleNameOffset>81033</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>00</Byte>
        <Byte>3B</Byte>
        <Byte>42</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>7D</Byte>
        <Byte>13</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>F0</Byte>
        <Byte>E8</Byte>
        <Byte>73</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [eax+3C],ecx</Description>
      <Address>00480F68</Address>
      <ModuleName>StarDefender4.exe</ModuleName>
      <ModuleNameOffset>80F68</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>FC</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>3C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
        <Byte>5D</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [eax],ecx-swarm</Description>
      <Address>100095F6</Address>
      <ModuleName>BASS.dll</ModuleName>
      <ModuleNameOffset>95F6</ModuleNameOffset>
      <Before>
        <Byte>C9</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>0E</Byte>
        <Byte>8B</Byte>
        <Byte>D7</Byte>
        <Byte>EB</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>second</Name>
      <Address>00480F68</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wp</Name>
      <Address> 00480F68</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address> 00480F47</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
