<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>63</ID>
      <Description>"--Combo"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobSkillPointTaker,D8 64 24 08 D9 9E A4 05 00 00)
aobscan(aobCreditAdder,01 B0 10 01 00 00 8B 54 24 14)
aobscan(aobCreditSubtractor,29 B0 10 01 00 00 EB 10)
aobscan(aobCreditGetter,8B 80 10 01 00 00 39 87 B8 00 00 00)
aobscan(aobShipDamager,D9 93 D4 00 00 00 0F 84)
aobscan(aobShieldDamager,D9 9F F4 0C 00 00 83 3D)
aobscan(aobGameSpeedChecker,D8 56 08 DF E0 F6 C4 44 7A 09 D9 05)
aobscan(aobBackgroundGetter,8B 88 F0 01 00 00 8B 77 50)
aobscan(aobGamePauser,D9 EE D9 58 08)
aobscan(aobGameUnpauser,D9 E8 D9 58 08 C7 40)
aobscan(aobGameSpeedReseter,8B 80 8C 00 00 00 83 78 78 00)
aobscan(aobObjectSelector,8B 97 4C 02 00 00 D9 82)

alloc(newmem,4096)

label(aobSkillPointTaker_r)
label(aobCreditAdder_r)
label(aobCreditSubtractor_r)
label(aobCreditGetter_r)
label(aobShipDamager_r)
label(aobShieldDamager_r)
label(aobGameSpeedChecker_r)
label(aobBackgroundGetter_r)
label(aobGamePauser_r)
label(aobGameUnpauser_r)
label(aobGameSpeedReseter_r)
label(aobObjectSelector_r)
registersymbol(aobSkillPointTaker_r)
registersymbol(aobCreditAdder_r)
registersymbol(aobCreditSubtractor_r)
registersymbol(aobCreditGetter_r)
registersymbol(aobShipDamager_r)
registersymbol(aobShieldDamager_r)
registersymbol(aobGameSpeedChecker_r)
registersymbol(aobBackgroundGetter_r)
registersymbol(aobGamePauser_r)
registersymbol(aobGameUnpauser_r)
registersymbol(aobGameSpeedReseter_r)
registersymbol(aobObjectSelector_r)

label(lblSkillPointTaker)
label(lblSkillPointTakerSkip)
label(lblSkillPointTakerRet)

label(lblCreditAdder)
label(lblCreditAdderSkip)
label(lblCreditAdderRet)

label(lblCreditSubtractor)
label(lblCreditSubtractorSkip)
label(lblCreditSubtractorRet)

label(lblCreditGetter)
label(lblCreditGetterSkip)
label(lblCreditGetterRet)

label(lblCreditBalancer)
label(lblCreditBalancerSkip)

label(lblShipDamager)
label(lblShipDamagerDo)
label(lblShipDamagerSkip)
label(lblShipDamagerRet)

label(lblShieldDamager)
label(lblShieldDamagerDo)
label(lblShieldDamagerSkip)
label(lblShieldDamagerRet)

label(lblGameSpeedChecker)
label(lblGameSpeedCheckerRet)

label(lblBackgroundGetter)
label(lblBackgroundGetterTurnOn)
label(lblBackgroundGetterTurnOff)
label(lblBackgroundGetterSkip)
label(lblBackgroundGetterRet)

label(lblGamePauser)
label(lblGamePauserSkip)
label(lblGamePauserRet)

label(lblGameUnpauser)
label(lblGameUnpauserSkip)
label(lblGameUnpauserRet)

label(lblGameSpeedReseter)
label(lblGameSpeedReseterSkip)
label(lblGameSpeedReseterRet)

label(lblObjectSelector)
label(lblObjectSelectorSkip)
label(lblObjectSelectorRet)

label(bEnableInfiniteSkillPoints)
label(bEnableMinCredits)
label(iMinCredits)
label(bEnableArmourHack)
label(bEnableShieldHack)
label(bEnableRightClickTagger)
label(bEnablePauseFix)
label(bEnableGameSpeedResetFix)
label(bEnableCtrlAltFixer)
label(fCtrlAltFixerArmour)
label(fCtrlAltFixerShield)
registersymbol(bEnableInfiniteSkillPoints)
registersymbol(bEnableMinCredits)
registersymbol(iMinCredits)
registersymbol(bEnableArmourHack)
registersymbol(bEnableShieldHack)
registersymbol(bEnableRightClickTagger)
registersymbol(bEnablePauseFix)
registersymbol(bEnableGameSpeedResetFix)
registersymbol(bEnableCtrlAltFixer)
registersymbol(fCtrlAltFixerArmour)
registersymbol(fCtrlAltFixerShield)

label(pPlayer)
label(pPlayerShip)
label(fGameSpeed)
label(sCEProtected)
label(iCEProtectedLength)
label(sCEUnprotected)
label(iCEUnprotectedLength)
label(sInterceptor)
label(fGameSpeedOnPause)
registersymbol(pPlayer)
registersymbol(pPlayerShip)
registersymbol(fGameSpeed)
registersymbol(sCEProtected)
registersymbol(iCEProtectedLength)
registersymbol(sCEUnprotected)
registersymbol(iCEUnprotectedLength)
registersymbol(sInterceptor)
registersymbol(fGameSpeedOnPause)

newmem:
//////////////////////
// Default variables

bEnableInfiniteSkillPoints:
dd 1
bEnableMinCredits:
dd 1
iMinCredits:
dd (int)1000000
bEnableArmourHack:
dd 1
bEnableShieldHack:
dd 1
bEnableRightClickTagger:
dd 1
bEnablePauseFix:
dd 1
bEnableGameSpeedResetFix:
dd 1
bEnableCtrlAltFixer:
dd 1
fCtrlAltFixerArmour:
dd (float)50000.0
fCtrlAltFixerShield:
dd (float)50000.0

//////////////////////
// Skill points

lblSkillPointTaker:
cmp dword ptr [bEnableInfiniteSkillPoints],1
je short lblSkillPointTakerSkip
fsub dword ptr [esp+08]       // Original code
lblSkillPointTakerSkip:
fstp dword ptr [esi+000005A4] // Original code
jmp lblSkillPointTakerRet

//////////////////////
// Credits

lblCreditAdder:
cmp dword ptr [bEnableMinCredits],1
jne short lblCreditAdderSkip
call lblCreditBalancer
lblCreditAdderSkip:
add [eax+00000110],esi // Original code
jmp lblCreditAdderRet

lblCreditSubtractor:
sub [eax+00000110],esi // Original code
cmp dword ptr [bEnableMinCredits],1
jne short lblCreditSubtractorSkip
call lblCreditBalancer
lblCreditSubtractorSkip:
jmp lblCreditSubtractorRet

lblCreditBalancer:
pushad
mov ebx,[eax+110]
mov ecx,[iMinCredits]
cmp ebx,ecx
jge short lblCreditBalancerSkip
mov dword ptr [eax+110],ecx
lblCreditBalancerSkip:
popad
ret

//////////////////////
// Pointer grab

lblCreditGetter:
mov dword ptr [pPlayer],eax
push eax
mov eax,[eax+150]
mov dword ptr [pPlayerShip],eax
pop eax
lblCreditGetterSkip:
mov eax,[eax+00000110] // Original code
jmp lblCreditGetterRet

//////////////////////
// Ship damage

lblShipDamager:
pushfd
pushad
cmp dword ptr [bEnableArmourHack],1
jne short lblShipDamagerSkip
cmp dword ptr [pPlayerShip],ebx
je short lblShipDamagerDo

mov edx,[ebx+4c]
test edx,edx
jz short lblShipDamagerSkip
mov eax,[sInterceptor]
cmp dword ptr [edx],eax
jne short lblShipDamagerSkip

mov edx,[ebx+f8c]
test edx,edx
jz short lblShipDamagerSkip
mov ecx,[edx+1f0]
test ecx,ecx
jz short lblShipDamagerSkip
mov eax,[sCEProtected]
cmp dword ptr [ecx],eax
jne short lblShipDamagerSkip
mov eax,[iCEProtectedLength]
cmp dword ptr [edx+1dc],eax
jne short lblShipDamagerSkip

lblShipDamagerDo:
fstp st(0)
fld [ebx+3dc]
lblShipDamagerSkip:
popad
popfd
fst dword ptr [ebx+000000D4] // Original code
jmp lblShipDamagerRet

//////////////////////
// Shield damage

lblShieldDamager:
fstp dword ptr [edi+00000CF4] // Original code
pushad
cmp dword ptr [bEnableShieldHack],1
jne short lblShieldDamagerSkip
cmp dword ptr [pPlayerShip],edi
je short lblShieldDamagerDo

mov edx,[edi+4c]
test edx,edx
jz short lblShieldDamagerSkip
mov eax,[sInterceptor]
cmp dword ptr [edx],eax
jne short lblShieldDamagerSkip

mov edx,[edi+f8c]
test edx,edx
jz short lblShieldDamagerSkip
mov ecx,[edx+1f0]
test ecx,ecx
jz short lblShieldDamagerSkip
mov eax,[sCEProtected]
cmp dword ptr [ecx],eax
jne short lblShieldDamagerSkip
mov eax,[iCEProtectedLength]
cmp dword ptr [edx+1dc],eax
jne short lblShieldDamagerSkip

lblShieldDamagerDo:
mov eax,[edi+c84]
cmp dword ptr [edi+cf4],eax
jge short lblShieldDamagerSkip
mov dword ptr [edi+cf4],eax
lblShieldDamagerSkip:
popad
jmp lblShieldDamagerRet

//////////////////////
// Game speed grab

lblGameSpeedChecker:
push eax
mov eax,[esi+08]
mov dword ptr [fGameSpeed],eax
pop eax
fcom dword ptr [esi+08] // Original code
fnstsw ax               // Original code
jmp lblGameSpeedCheckerRet

//////////////////////
// Background tagger

lblBackgroundGetter:
mov ecx,[eax+000001F0] // Original code
cmp dword ptr [bEnableRightClickTagger],1
jne short lblBackgroundGetterSkip
cmp dword ptr [fGameSpeed],0
jne short lblBackgroundGetterSkip
pushad
push 10 // VK_SHIFT: SHIFT key
call GetAsyncKeyState
shr ax,(int)15
cmp ax,1
popad
jne short lblBackgroundGetterSkip
pushad
push 11 // VK_CONTROL: CTRL key
call GetAsyncKeyState
shr ax,(int)15
cmp ax,1
popad
je short lblBackgroundGetterTurnOn
pushad
push 12 // VK_MENU: ALT key
call GetAsyncKeyState
shr ax,(int)15
cmp ax,1
popad
je short lblBackgroundGetterTurnOff
lblBackgroundGetterSkip:
jmp lblBackgroundGetterRet
lblBackgroundGetterTurnOn:
pushad
lea eax,[sCEProtected]
push eax
push ecx
call strcpy
add esp,8
popad
mov esi,[iCEProtectedLength]
mov dword ptr [eax+1dc],esi
jmp lblBackgroundGetterSkip
lblBackgroundGetterTurnOff:
pushad
push sCEUnprotected
push ecx
call strcpy
add esp,8
popad
mov esi,[iCEUnprotectedLength]
mov dword ptr [eax+1dc],esi
jmp lblBackgroundGetterSkip

//////////////////////
// Game pause

lblGamePauser:
cmp dword ptr [bEnablePauseFix],1
jne short lblGamePauserSkip
push ebx
mov ebx,[eax+08]
mov dword ptr [fGameSpeedOnPause],ebx
pop ebx
lblGamePauserSkip:
fldz                    // Original code
fstp dword ptr [eax+08] // Original code
jmp lblGamePauserRet

lblGameUnpauser:
fld1                    // Original code
fstp dword ptr [eax+08] // Original code
cmp dword ptr [bEnablePauseFix],1
jne short lblGameUnpauserSkip
push ebx
mov ebx,[fGameSpeedOnPause]
mov dword ptr [eax+08],ebx
pop ebx
lblGameUnpauserSkip:
jmp lblGameUnpauserRet

//////////////////////
// Game speed reset

lblGameSpeedReseter:
mov eax,[eax+0000008C]    // Original code
cmp dword ptr [bEnableGameSpeedResetFix],1
jne short lblGameSpeedReseterSkip
cmp dword ptr [eax+78],1
je short lblGameSpeedReseterSkip
mov dword ptr [eax+78],1
lblGameSpeedReseterSkip:
cmp dword ptr [eax+78],00 // Original code
jmp lblGameSpeedReseterRet

//////////////////////
// CTRL+ALT Fixer

lblObjectSelector:
mov edx,[edi+0000024C] // Original code
cmp dword ptr [bEnableCtrlAltFixer],1
jne short lblObjectSelectorSkip
pushad
push 11 // VK_CONTROL: CTRL key
call GetAsyncKeyState
shr ax,(int)15
cmp ax,1
popad
jne short lblObjectSelectorSkip
pushad
push 12 // VK_MENU: ALT key
call GetAsyncKeyState
shr ax,(int)15
cmp ax,1
popad
jne short lblObjectSelectorSkip
mov eax,[fCtrlAltFixerArmour]
mov dword ptr [edx+d4],eax
mov dword ptr [edx+3dc],eax
mov eax,[fCtrlAltFixerShield]
mov dword ptr [edx+c84],eax
mov dword ptr [edx+cf4],eax
lblObjectSelectorSkip:
jmp lblObjectSelectorRet

//////////////////////
// Internal variables

pPlayer:
dd 0
pPlayerShip:
dd 0
fGameSpeed:
dd 0
sCEProtected:
db 'CE user, protection on' 00
iCEProtectedLength:
dd (int)23
sCEUnprotected:
db 'CE user, protection off' 00
iCEUnprotectedLength:
dd (int)24
sInterceptor:
db 'Interceptor' 00
fGameSpeedOnPause:
dd (float)1.0

//"sw3cw.exe"+12569E:
aobSkillPointTaker:
aobSkillPointTaker_r:
jmp lblSkillPointTaker
nop
nop
nop
nop
nop
lblSkillPointTakerRet:

//"sw3cw.exe"+1832C7:
aobCreditAdder:
aobCreditAdder_r:
jmp lblCreditAdder
nop
lblCreditAdderRet:

//"sw3cw.exe"+1832B5:
aobCreditSubtractor:
aobCreditSubtractor_r:
jmp lblCreditSubtractor
nop
lblCreditSubtractorRet:

//"sw3cw.exe"+175EDB:
aobCreditGetter:
aobCreditGetter_r:
jmp lblCreditGetter
nop
lblCreditGetterRet:

//"sw3cw.exe"+2109AC:
aobShipDamager:
aobShipDamager_r:
jmp lblShipDamager
nop
lblShipDamagerRet:

//"sw3cw.exe"+223002:
aobShieldDamager:
aobShieldDamager_r:
jmp lblShieldDamager
nop
lblShieldDamagerRet:

//"sw3cw.exe"+C5E9C:
aobGameSpeedChecker:
aobGameSpeedChecker_r:
jmp lblGameSpeedChecker
lblGameSpeedCheckerRet:

//"sw3cw.exe"+152CC0:
aobBackgroundGetter:
aobBackgroundGetter_r:
jmp lblBackgroundGetter
nop
lblBackgroundGetterRet:

//"sw3cw.exe"+A1924:
aobGamePauser:
aobGamePauser_r:
jmp lblGamePauser
lblGamePauserRet:

//"sw3cw.exe"+A1933:
aobGameUnpauser:
aobGameUnpauser_r:
jmp lblGameUnpauser
lblGameUnpauserRet:

//"sw3cw.exe"+C5F79:
aobGameSpeedReseter:
aobGameSpeedReseter_r:
jmp lblGameSpeedReseter
nop
nop
nop
nop
nop
lblGameSpeedReseterRet:

//"sw3cw.exe"+1AEE6:
aobObjectSelector:
aobObjectSelector_r:
jmp lblObjectSelector
nop
lblObjectSelectorRet:

[DISABLE]
//"sw3cw.exe"+12569E:
aobSkillPointTaker_r:
//Alt: fsub dword ptr [esp+08]
//Alt: fstp dword ptr [esi+000005A4]
db D8 64 24 08 D9 9E A4 05 00 00

//"sw3cw.exe"+1832C7:
aobCreditAdder_r:
//Alt: add [eax+00000110],esi
db 01 B0 10 01 00 00

//"sw3cw.exe"+1832B5:
aobCreditSubtractor_r:
//Alt: sub [eax+00000110],esi
db 29 B0 10 01 00 00

//"sw3cw.exe"+175EDB:
aobCreditGetter_r:
//Alt: mov eax,[eax+00000110]
db 8B 80 10 01 00 00

//"sw3cw.exe"+2109AC:
aobShipDamager_r:
//Alt: fst dword ptr [ebx+000000D4]
db D9 93 D4 00 00 00

//"sw3cw.exe"+223002:
aobShieldDamager_r:
//Alt: fstp dword ptr [edi+00000CF4]
db D9 9F F4 0C 00 00

//"sw3cw.exe"+C5E9C:
aobGameSpeedChecker_r:
//Alt: fcom dword ptr [esi+08]
//Alt: fnstsw ax
db D8 56 08 DF E0

//"sw3cw.exe"+152CC0:
aobBackgroundGetter_r:
//Alt: mov ecx,[eax+000001F0]
db 8B 88 F0 01 00 00

//"sw3cw.exe"+A1924:
aobGamePauser_r:
//Alt: fldz
//Alt: fstp dword ptr [eax+08]
db D9 EE D9 58 08

//"sw3cw.exe"+A1933:
aobGameUnpauser_r:
//Alt: fld1
//Alt: fstp dword ptr [eax+08]
db D9 E8 D9 58 08

//"sw3cw.exe"+C5F79:
aobGameSpeedReseter_r:
//Alt: mov eax,[eax+0000008C]
//Alt: cmp dword ptr [eax+78],00
db 8B 80 8C 00 00 00 83 78 78 00

//"sw3cw.exe"+1AEE6:
aobObjectSelector_r:
//Alt: mov edx,[edi+0000024C]
db 8B 97 4C 02 00 00

unregistersymbol(aobSkillPointTaker_r)
unregistersymbol(aobCreditAdder_r)
unregistersymbol(aobCreditSubtractor_r)
unregistersymbol(aobCreditGetter_r)
unregistersymbol(aobShipDamager_r)
unregistersymbol(aobShieldDamager_r)
unregistersymbol(aobGameSpeedChecker_r)
unregistersymbol(aobBackgroundGetter_r)
unregistersymbol(aobGamePauser_r)
unregistersymbol(aobGameUnpauser_r)
unregistersymbol(aobGameSpeedReseter_r)
unregistersymbol(aobObjectSelector_r)

unregistersymbol(bEnableInfiniteSkillPoints)
unregistersymbol(bEnableMinCredits)
unregistersymbol(iMinCredits)
unregistersymbol(bEnableArmourHack)
unregistersymbol(bEnableShieldHack)
unregistersymbol(bEnableRightClickTagger)
unregistersymbol(bEnablePauseFix)
unregistersymbol(bEnableGameSpeedResetFix)
unregistersymbol(bEnableCtrlAltFixer)
unregistersymbol(fCtrlAltFixerArmour)
unregistersymbol(fCtrlAltFixerShield)

unregistersymbol(pPlayer)
unregistersymbol(pPlayerShip)
unregistersymbol(fGameSpeed)
unregistersymbol(sCEProtected)
unregistersymbol(iCEProtectedLength)
unregistersymbol(sCEUnprotected)
unregistersymbol(iCEUnprotectedLength)
unregistersymbol(sInterceptor)
unregistersymbol(fGameSpeedOnPause)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>68</ID>
          <Description>"bEnableInfiniteSkillPoints"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteSkillPoints</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"bEnableMinCredits"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMinCredits</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>70</ID>
              <Description>"iMinCredits"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinCredits</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"bEnableArmourHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableArmourHack</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"bEnableShieldHack"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableShieldHack</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"bEnableRightClickTagger"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableRightClickTagger</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"bEnableCtrlAltFixer"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableCtrlAltFixer</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>79</ID>
              <Description>"fCtrlAltFixerArmour"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fCtrlAltFixerArmour</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>80</ID>
              <Description>"fCtrlAltFixerShield"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fCtrlAltFixerShield</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"bEnablePauseFix"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnablePauseFix</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"bEnableGameSpeedResetFix"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableGameSpeedResetFix</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
