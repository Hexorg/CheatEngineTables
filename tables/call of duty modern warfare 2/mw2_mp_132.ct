<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>214</ID>
      <Description>"God Mode"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+17C],7
jne originalcode
mov [esi+0000019C],(int)999999
jmp exit

originalcode:
sub [esi+0000019C],eax

exit:
jmp returnhere

"iw4mp.dat"+1E0D7F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"iw4mp.dat"+1E0D7F:
sub [esi+0000019C],eax
//Alt: db 29 86 9C 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>215</ID>
      <Description>"One Hit Kill"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+17C],7
jne originalcode
mov [esi+0000019C],(int)999999
jmp exit

originalcode:
sub [esi+0000019C],eax
sub [esi+0000019C],eax
sub [esi+0000019C],eax
sub [esi+0000019C],eax
sub [esi+0000019C],eax
sub [esi+0000019C],eax
sub [esi+0000019C],eax
sub [esi+0000019C],eax
sub [esi+0000019C],eax
sub [esi+0000019C],eax

exit:
jmp returnhere

"iw4mp.dat"+1E0D7F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"iw4mp.dat"+1E0D7F:
sub [esi+0000019C],eax
//Alt: db 29 86 9C 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>243</ID>
      <Description>"Unlimited Ammo"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edx+594],0
jne originalcode
mov [edx+04],(int)999

originalcode:
mov eax,[edx+04]
ret 
int 3 

exit:
jmp returnhere

"iw4mp.dat"+92C2:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"iw4mp.dat"+92C2:
mov eax,[edx+04]
ret 
int 3 
//Alt: db 8B 42 04 C3 CC
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>252</ID>
      <Description>"Unlimited Grenade &amp; Flash"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ecx+edx*4+04],2

originalcode:
//mov eax,[ecx+edx*4+04]
ret 

exit:
jmp returnhere

"iw4mp.dat"+42186:
jmp newmem
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"iw4mp.dat"+42186:
mov eax,[ecx+edx*4+04]
ret 
//Alt: db 8B 44 91 04 C3
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>251</ID>
      <Description>"No Reload"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edi+104],0
jne originalcode
mov [edi+36C],(int)20 //Primary
mov [edi+354],(int)20 //Secondary

originalcode:
sub [eax+ecx*4+04],edx
add esp,0C

exit:
jmp returnhere

"iw4mp.dat"+88963:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"iw4mp.dat"+88963:
sub [eax+ecx*4+04],edx
add esp,0C
//Alt: db 29 54 88 04 83 C4 0C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>76</ID>
      <Description>"Rapid Fire"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//mov [01AA4654],0
mov [ebp+000001EC],0
originalcode:
//mov [ebp+000001EC],eax

exit:
jmp returnhere

"iw4mp.dat"+17D14F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"iw4mp.dat"+17D14F:
mov [ebp+000001EC],eax
//Alt: db 89 85 EC 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>207</ID>
      <Description>"Infinite UAV"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [iw4mp.dat+3F49E0],1 //UAV
mov dword ptr [iw4mp.dat+3F49E4],0 //CUAV
originalcode:
//cmp dword ptr [iw4mp.dat+3F49E0],00

exit:
jmp returnhere

"iw4mp.dat"+95F13:
jmp newmem
nop
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"iw4mp.dat"+95F13:
cmp dword ptr [iw4mp.dat+3F49E0],00
//Alt: db 83 3D E0 49 7F 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>--TRAINERGENERATORSTART--
--This is autogenerated code. Changing code in this block will
--get erased and rewritten if you regenerate the trainer code

--Uncomment the following line if this is a Cheat Table format trainer and you don't want CE to show (Tip, save as .CETRAINER alternatively)
--hideAllCEWindows()

RequiredCEVersion=6.3
if (getCEVersion==nil) or (getCEVersion()&lt;RequiredCEVersion) then
  messageDialog('Please install Cheat Engine '..RequiredCEVersion, mtError, mbOK)
  closeCE()
end
addresslist=getAddressList()
memrec71=addresslist_getMemoryRecordByID(addresslist,71)

memrec71_hotkey0=memoryrecord_getHotkeyByID(memrec71,0)

function onHotkey0(Hotkey)
  --Executed before the hotkey is handled
  cheatcomponent_setActive(CETrainer_CHEAT0, true, 1500)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onHotkey(memrec71_hotkey0,onHotkey0)
control_setVisible(CETrainer_SEPERATOR, false)

strings_add(getAutoAttachList(), "iw4mp.dat")
gBeepOnAction=true
form_show(CETrainer)
function AboutClick()
  showMessage(gAboutText)
end
gAboutText=[[This trainer was made by Cheat Engine
www.cheatengine.org]]

function CloseClick()
  closeCE()
  return caFree --onClick doesn't care, but onClose would like a result
end

--TRAINERGENERATORSTOP--
</LuaScript>
</CheatTable>
