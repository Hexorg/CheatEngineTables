<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(enableAOB17,DB 80 D8 02 00 00 5E C3)
label(enableAOB17_jmp) //hp read
registersymbol(enableAOB17_jmp)
aobscan(enableAOB11,8B 54 24 14 89 0A 83 07 FF 5F 5E 59 C2 08 00)
label(enableAOB11_jmp) //subtract (current item q)
registersymbol(enableAOB11_jmp)
aobscan(enableAOB6,8B 86 50 06 00 00 8B 80 64 02 00 00 50)
label(enableAOB6_jmp) //current item q read
registersymbol(enableAOB6_jmp)
aobscan(enableAOB2,8B 44 24 10 29 03 8B 1B 8B 4C 24 14)
label(enableAOB2_jmp) //subtract (hp / $ / current ammo clip / pouch q)
registersymbol(enableAOB2_jmp)
aobscan(enableAOB1,8B 87 2C 03 00 00 03 87 30 03 00 00 33 C9)
label(enableAOB1_jmp) //current ammo q read
registersymbol(enableAOB1_jmp)

label(pHP)
registersymbol(pHP)
label(pAmmoCP)
registersymbol(pAmmoCP)
label(pItem)
registersymbol(pItem)
label(pCredits)
registersymbol(pCredits)

label(bUndeadSwitch)
registersymbol(bUndeadSwitch)
label(bInfAmmoSwitch)
registersymbol(bInfAmmoSwitch)
label(bInfItemSwitch)
registersymbol(bInfItemSwitch)
label(bInfCreditsSwitch)
registersymbol(bInfCreditsSwitch)

alloc(newmem17,2048) //2kb should be enough
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHP],eax

originalcode17:
fild dword ptr [eax+000002D8]

exit17:
jmp returnhere17

alloc(newmem11,2048) //2kb should be enough
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
add dword ptr [edi],FF
cmp byte ptr [bInfItemSwitch],1
jne originalcode11

mov ecx,[pItem]
lea ecx,[ecx+264]
cmp ecx,edi
jne originalcode11
cmp [edi],2
jge originalcode11
mov [edi],2

originalcode11:
//add dword ptr [edi],FF
pop edi
pop esi

exit11:
jmp returnhere11

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pItem],eax
cmp byte ptr [bInfItemSwitch],1
jne originalcode6
cmp [eax+00000264],2
jge originalcode6
mov [eax+00000264],2

originalcode6:
mov eax,[eax+00000264]

exit6:
jmp returnhere6

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
label(checkundeadswitch2)
label(checkinfammoswitch2)
label(infammostart2)
label(infammostart2check1)


newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
sub [ebx],eax

mov ecx,ebx
sub ecx,edi
cmp ecx,00000808
jne checkundeadswitch2
mov [pCredits],ebx
cmp byte ptr [bInfCreditsSwitch],1
jne originalcode2
add [ebx],eax
jmp originalcode2

checkundeadswitch2:
cmp byte ptr [bUndeadSwitch],1
jne checkinfammoswitch2
mov ecx,[pHP]
lea ecx,[ecx+2d8]
cmp ecx,ebx
jne checkinfammoswitch2
cmp [ebx],1
jge originalcode2
mov [ebx],1
jmp originalcode2

checkinfammoswitch2:
cmp byte ptr [bInfAmmoSwitch],1
je infammostart2
jmp originalcode2

infammostart2:
mov ecx,[pAmmoCP]
add ecx,32c

cmp ecx,ebx
jne infammostart2check1
cmp [ebx],1
jge originalcode2
mov [ebx],1
jmp originalcode2

infammostart2check1:
add ecx,4
cmp ecx,ebx
jne originalcode2
cmp dword ptr [ebx],(int)10
jge originalcode2
//mov dword ptr [ebx],(int)200
add [ebx],eax
jmp originalcode2

originalcode2:
//sub [ebx],eax
mov ebx,[ebx]
mov ecx,[esp+14]

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAmmoCP],edi

originalcode:
mov eax,[edi+0000032C]

exit:
jmp returnhere

///
pHP:
dd 0
pAmmoCP:
dd 0
pItem:
dd 0
pCredits:
dd 0

bUndeadSwitch:
db 1
bInfAmmoSwitch:
db 1
bInfItemSwitch:
db 1
bInfCreditsSwitch:
db 1
///

enableAOB17: //"AlienBreed-Impact.exe"+1FF2B2:
enableAOB17_jmp:
jmp newmem17
nop
returnhere17:

enableAOB11+6: //"AlienBreed-Impact.exe"+BE477:
enableAOB11_jmp:
jmp newmem11
returnhere11:

enableAOB6+6: //"AlienBreed-Impact.exe"+213BD7:
enableAOB6_jmp:
jmp newmem6
nop
returnhere6:

enableAOB2+4: //"AlienBreed-Impact.exe"+BE228:
enableAOB2_jmp:
jmp newmem2
nop
nop
nop
returnhere2:

enableAOB1: //"AlienBreed-Impact.exe"+217099:
enableAOB1_jmp:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
enableAOB17_jmp: //"AlienBreed-Impact.exe"+1FF2B2:
db DB 80 D8 02 00 00
//Alt: fild dword ptr [eax+000002D8]
dealloc(newmem11)
enableAOB11_jmp: //"AlienBreed-Impact.exe"+BE477:
db 83 07 FF 5F 5E
//Alt: add dword ptr [edi],FF
//Alt: pop edi
//Alt: pop esi
dealloc(newmem6)
enableAOB6_jmp: //"AlienBreed-Impact.exe"+213BD7:
db 8B 80 64 02 00 00
//Alt: mov eax,[eax+00000264]
dealloc(newmem2)
enableAOB2_jmp: //"AlienBreed-Impact.exe"+BE228:
db 29 03 8B 1B 8B 4C 24 14
//Alt: sub [ebx],eax
//Alt: mov ebx,[ebx]
//Alt: mov ecx,[esp+14]
dealloc(newmem)
enableAOB1_jmp: //"AlienBreed-Impact.exe"+217099:
db 8B 87 2C 03 00 00
//Alt: mov eax,[edi+0000032C]
unregistersymbol(pHP)
unregistersymbol(pAmmoCP)
unregistersymbol(pItem)
unregistersymbol(pCredits)
unregistersymbol(bUndeadSwitch)
unregistersymbol(bInfAmmoSwitch)
unregistersymbol(bInfItemSwitch)
unregistersymbol(bInfCreditsSwitch)
unregistersymbol(enableAOB17_jmp)
unregistersymbol(enableAOB11_jmp)
unregistersymbol(enableAOB6_jmp)
unregistersymbol(enableAOB2_jmp)
unregistersymbol(enableAOB1_jmp)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>9</ID>
          <Description>"[Switches]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>20</ID>
              <Description>"bUndeadSwitch"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bUndeadSwitch</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>10</ID>
              <Description>"bInfAmmoSwitch"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bInfAmmoSwitch</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"bInfItemSwitch"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bInfItemSwitch</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"bInfCreditsSwitch"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bInfCreditsSwitch</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"[Pointers]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>18</ID>
              <Description>"health"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHP</Address>
              <Offsets>
                <Offset>2D8</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>107</Key>
                  </Keys>
                  <Value>(max health)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"max health"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHP</Address>
                  <Offsets>
                    <Offset>2DC</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>3</ID>
              <Description>"current ammo clip"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoCP</Address>
              <Offsets>
                <Offset>32C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"current ammo pouch"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoCP</Address>
              <Offsets>
                <Offset>330</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"current item"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem</Address>
              <Offsets>
                <Offset>264</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"credits"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCredits</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"[old / testing]"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Inf. Ammo"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infammoAOB1,8B 44 24 10 29 03 8B 1B 8B 4C 24 14)
label(infammoAOB1_jmp)
registersymbol(infammoAOB1_jmp)
label(tECX)
registersymbol(tECX)
label(tEBX)
registersymbol(tEBX)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(check2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
sub [ebx],eax
mov ecx,[pAmmoCP]
add ecx,32c

cmp ecx,ebx
jne check2
cmp [ebx],1
jge originalcode
mov [ebx],1
jmp originalcode

check2:
add ecx,4
mov [tECX],ecx
mov [tEBX],ebx
cmp ecx,ebx
jne originalcode
cmp dword ptr [ebx],(int)10
jge originalcode
//mov dword ptr [ebx],(int)200
add [ebx],eax
jmp originalcode

originalcode:
//sub [ebx],eax
mov ebx,[ebx]
mov ecx,[esp+14]

exit:
jmp returnhere

///
tECX:
dd 0
tEBX:
dd 0
///

infammoAOB1+4: //"AlienBreed-Impact.exe"+BE228:
infammoAOB1_jmp:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infammoAOB1_jmp: //"AlienBreed-Impact.exe"+BE228:
db 29 03 8B 1B 8B 4C 24 14
//Alt: sub [ebx],eax
//Alt: mov ebx,[ebx]
//Alt: mov ecx,[esp+14]
unregistersymbol(infammoAOB1_jmp)
unregistersymbol(tECX)
unregistersymbol(tEBX)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7</ID>
              <Description>"No description"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>tEBX</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"No description"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>tECX</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>ammo clip / pouch / hp / $ - Code :sub [ebx],eax</Description>
      <Address>004BE228</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>BE228</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>03</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>1B</Byte>
        <Byte>8B</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo clip + (reload) / $ + (sell) Code :add [ebx],eax</Description>
      <Address>004BE168</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>BE168</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>03</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>1B</Byte>
        <Byte>8B</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>current ammo clip read 1 Code :mov eax,[edi+0000032C]</Description>
      <Address>00617099</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>217099</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>87</Byte>
        <Byte>2C</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>03</Byte>
        <Byte>87</Byte>
        <Byte>30</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>current ammo clip read 2 Code :mov edx,[edi+0000032C]</Description>
      <Address>0061710D</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>21710D</ModuleNameOffset>
      <Before>
        <Byte>10</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>97</Byte>
        <Byte>2C</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>74</Byte>
        <Byte>2D</Byte>
        <Byte>52</Byte>
        <Byte>8D</Byte>
        <Byte>44</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>current ammo pouch read 1 Code :add eax,[edi+00000330]</Description>
      <Address>0061709F</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>21709F</ModuleNameOffset>
      <Before>
        <Byte>87</Byte>
        <Byte>2C</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>03</Byte>
        <Byte>87</Byte>
        <Byte>30</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>C9</Byte>
        <Byte>3B</Byte>
        <Byte>87</Byte>
        <Byte>E4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>current ammo pouch read 2 Code :mov ecx,[edi+00000330]</Description>
      <Address>00617142</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>217142</ModuleNameOffset>
      <Before>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>28</Byte>
        <Byte>EB</Byte>
        <Byte>32</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>8F</Byte>
        <Byte>30</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>51</Byte>
        <Byte>52</Byte>
        <Byte>8D</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>item read Code :mov eax,[eax+00000264]</Description>
      <Address>00613BD7</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>213BD7</ModuleNameOffset>
      <Before>
        <Byte>86</Byte>
        <Byte>50</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>64</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>50</Byte>
        <Byte>8D</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>5C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>item - Code :add dword ptr [edi],FF</Description>
      <Address>004BE477</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>BE477</ModuleNameOffset>
      <Before>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
        <Byte>89</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>07</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>59</Byte>
        <Byte>C2</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp read 1 Code :cmp [eax+000002D8],esi</Description>
      <Address>005A14ED</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>1A14ED</ModuleNameOffset>
      <Before>
        <Byte>84</Byte>
        <Byte>0C</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>39</Byte>
        <Byte>B0</Byte>
        <Byte>D8</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>8E</Byte>
        <Byte>00</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp read 2 Code :cmp dword ptr [ebx+000002D8],00</Description>
      <Address>005A2303</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>1A2303</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
        <Byte>3F</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>BB</Byte>
        <Byte>D8</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>7E</Byte>
        <Byte>36</Byte>
        <Byte>80</Byte>
        <Byte>BB</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp read 3 Code :fild dword ptr [eax+000002D8]</Description>
      <Address>005FF2B2</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>1FF2B2</ModuleNameOffset>
      <Before>
        <Byte>04</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>DB</Byte>
        <Byte>80</Byte>
        <Byte>D8</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>C3</Byte>
        <Byte>D9</Byte>
        <Byte>86</Byte>
        <Byte>F0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp read 4 Code :cvtsi2ss xmm0,[eax+000002D8]</Description>
      <Address>0061214C</Address>
      <ModuleName>AlienBreed-Impact.exe</ModuleName>
      <ModuleNameOffset>21214C</ModuleNameOffset>
      <Before>
        <Byte>05</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>39</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2A</Byte>
        <Byte>80</Byte>
        <Byte>D8</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>68</Byte>
        <Byte>3C</Byte>
        <Byte>00</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>enableAOB17_jmp</Name>
      <Address>005FF2B2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB11_jmp</Name>
      <Address>004BE477</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB6_jmp</Name>
      <Address>00613BD7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB2_jmp</Name>
      <Address>004BE228</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB1_jmp</Name>
      <Address>00617099</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHP</Name>
      <Address>0CB62011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoCP</Name>
      <Address>0CB62015</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItem</Name>
      <Address>0CB62019</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCredits</Name>
      <Address>0CB6201D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bUndeadSwitch</Name>
      <Address>0CB62021</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfAmmoSwitch</Name>
      <Address>0CB62022</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfItemSwitch</Name>
      <Address>0CB62023</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfCreditsSwitch</Name>
      <Address>0CB62024</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
