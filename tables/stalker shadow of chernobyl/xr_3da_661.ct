<?xml version="1.0" encoding="utf-8"?>
<CheatTable>
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"freeze HP"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,"xrGame.dll"+4E8F1C)
define(bytes,F3 0F 10 40 04)

[ENABLE]
assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
code:
  cmp word ptr [eax],CFE4
  jne @f

  mov [eax+04],(float)1.0

  @@:
  movss xmm0,[eax+04]
  jmp return

address:
  jmp code
return:

[DISABLE]

address:
  db bytes
  // movss xmm0,[eax+04]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "xrGame.dll"+4E8F1C

"xrGame.dll"+4E8EEA: 09 90 58 09 00 00        -  or [eax+00000958],edx
"xrGame.dll"+4E8EF0: 8B 44 24 18              -  mov eax,[esp+18]
"xrGame.dll"+4E8EF4: F3 0F 10 0D B4 4A 16 04  -  movss xmm1,[xrGame.dll+5E4AB4]
"xrGame.dll"+4E8EFC: 40                       -  inc eax
"xrGame.dll"+4E8EFD: 89 44 24 18              -  mov [esp+18],eax
"xrGame.dll"+4E8F01: 83 F8 06                 -  cmp eax,06
"xrGame.dll"+4E8F04: 0F 8C 19 FD FF FF        -  jl xrGame.dll+4E8C23
"xrGame.dll"+4E8F0A: 8B 83 D0 4E 00 00        -  mov eax,[ebx+00004ED0]
"xrGame.dll"+4E8F10: 8D 8B 1C 02 00 00        -  lea ecx,[ebx+0000021C]
"xrGame.dll"+4E8F16: 8B 80 B0 01 00 00        -  mov eax,[eax+000001B0]
// ---------- INJECTING HERE ----------
"xrGame.dll"+4E8F1C: F3 0F 10 40 04           -  movss xmm0,[eax+04]
// ---------- DONE INJECTING  ----------
"xrGame.dll"+4E8F21: F3 0F 59 05 84 4C 16 04  -  mulss xmm0,[xrGame.dll+5E4C84]
"xrGame.dll"+4E8F29: 0F 28 C8                 -  movaps xmm1,xmm0
"xrGame.dll"+4E8F2C: F3 0F 11 41 6C           -  movss [ecx+6C],xmm0
"xrGame.dll"+4E8F31: F3 0F 10 41 70           -  movss xmm0,[ecx+70]
"xrGame.dll"+4E8F36: 0F 2F C1                 -  comiss xmm0,xmm1
"xrGame.dll"+4E8F39: 77 0A                    -  ja xrGame.dll+4E8F45
"xrGame.dll"+4E8F3B: F3 0F 10 41 74           -  movss xmm0,[ecx+74]
"xrGame.dll"+4E8F40: 0F 2F C8                 -  comiss xmm1,xmm0
"xrGame.dll"+4E8F43: 76 05                    -  jna xrGame.dll+4E8F4A
"xrGame.dll"+4E8F45: F3 0F 11 41 6C           -  movss [ecx+6C],xmm0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"freeze Stamina"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,"xrGame.dll"+388E19)
define(bytes,F3 0F 11 46 54)

[ENABLE]
assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
code:
  cmp word ptr [esi],CFE4
  jne @f

  mov [esi+54],(float)1
  jmp return

  @@:
  movss [esi+54],xmm0
  jmp return

address:
  jmp code
return:

[DISABLE]

address:
  db bytes
  // movss [esi+54],xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "xrGame.dll"+388E19

"xrGame.dll"+388DD8: F3 0F 58 86 88 00 00 00        -  addss xmm0,[esi+00000088]
"xrGame.dll"+388DE0: F3 0F 11 86 88 00 00 00        -  movss [esi+00000088],xmm0
"xrGame.dll"+388DE8: F3 0F 10 46 74                 -  movss xmm0,[esi+74]
"xrGame.dll"+388DED: F3 0F 58 46 04                 -  addss xmm0,[esi+04]
"xrGame.dll"+388DF2: F3 0F 11 46 04                 -  movss [esi+04],xmm0
"xrGame.dll"+388DF7: F3 0F 10 46 54                 -  movss xmm0,[esi+54]
"xrGame.dll"+388DFC: F3 0F 58 46 78                 -  addss xmm0,[esi+78]
"xrGame.dll"+388E01: C7 46 74 00 00 00 00           -  mov [esi+74],00000000
"xrGame.dll"+388E08: C7 46 78 00 00 00 00           -  mov [esi+78],00000000
"xrGame.dll"+388E0F: C7 86 84 00 00 00 00 00 00 00  -  mov [esi+00000084],00000000
// ---------- INJECTING HERE ----------
"xrGame.dll"+388E19: F3 0F 11 46 54                 -  movss [esi+54],xmm0
// ---------- DONE INJECTING  ----------
"xrGame.dll"+388E1E: F3 0F 10 86 80 00 00 00        -  movss xmm0,[esi+00000080]
"xrGame.dll"+388E26: F3 0F 58 46 5C                 -  addss xmm0,[esi+5C]
"xrGame.dll"+388E2B: C7 86 80 00 00 00 00 00 00 00  -  mov [esi+00000080],00000000
"xrGame.dll"+388E35: F3 0F 11 46 5C                 -  movss [esi+5C],xmm0
"xrGame.dll"+388E3A: F3 0F 10 46 60                 -  movss xmm0,[esi+60]
"xrGame.dll"+388E3F: F3 0F 58 86 88 00 00 00        -  addss xmm0,[esi+00000088]
"xrGame.dll"+388E47: C7 86 88 00 00 00 00 00 00 00  -  mov [esi+00000088],00000000
"xrGame.dll"+388E51: F3 0F 11 46 60                 -  movss [esi+60],xmm0
"xrGame.dll"+388E56: F3 0F 10 46 7C                 -  movss xmm0,[esi+7C]
"xrGame.dll"+388E5B: F3 0F 58 46 58                 -  addss xmm0,[esi+58]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"weight Trick"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,"xrGame.dll"+3A1D7A)
define(bytes,F3 0F 11 47 5C)

[ENABLE]
assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
code:
  movss [edi+5C],xmm0
  mov   [edi+5C],(float)5.0
  jmp return

address:
  jmp code
return:

[DISABLE]

address:
  db bytes
  // movss [edi+5C],xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "xrGame.dll"+3A1D7A

"xrGame.dll"+3A1D56: 8B 01                          -  mov eax,[ecx]
"xrGame.dll"+3A1D58: 8B 80 94 00 00 00              -  mov eax,[eax+00000094]
"xrGame.dll"+3A1D5E: FF D0                          -  call eax
"xrGame.dll"+3A1D60: D8 44 24 0C                    -  fadd dword ptr [esp+0C]
"xrGame.dll"+3A1D64: 83 C6 04                       -  add esi,04
"xrGame.dll"+3A1D67: D9 54 24 0C                    -  fst dword ptr [esp+0C]
"xrGame.dll"+3A1D6B: D9 54 24 08                    -  fst dword ptr [esp+08]
"xrGame.dll"+3A1D6F: 39 77 08                       -  cmp [edi+08],esi
"xrGame.dll"+3A1D72: 75 DE                          -  jne xrGame.dll+3A1D52
"xrGame.dll"+3A1D74: F3 0F 10 44 24 08              -  movss xmm0,[esp+08]
// ---------- INJECTING HERE ----------
"xrGame.dll"+3A1D7A: F3 0F 11 47 5C                 -  movss [edi+5C],xmm0
// ---------- DONE INJECTING  ----------
"xrGame.dll"+3A1D7F: 5F                             -  pop edi
"xrGame.dll"+3A1D80: 5E                             -  pop esi
"xrGame.dll"+3A1D81: 83 C4 08                       -  add esp,08
"xrGame.dll"+3A1D84: C3                             -  ret
"xrGame.dll"+3A1D85: CC                             -  int 3
"xrGame.dll"+3A1D86: CC                             -  int 3
"xrGame.dll"+3A1D87: CC                             -  int 3
"xrGame.dll"+3A1D88: CC                             -  int 3
"xrGame.dll"+3A1D89: CC                             -  int 3
"xrGame.dll"+3A1D8A: CC                             -  int 3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"autorepair Weapon"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,"xrGame.dll"+3B60FE)
define(bytes,D9 9E A8 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fstp ST(0)
  mov  dword ptr [esi+000000A8],(float)1.0
  jmp return

address:
  jmp code
  nop
return:

[DISABLE]

address:
  db bytes
  // fstp dword ptr [esi+000000A8]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "xrGame.dll"+3B60FE

"xrGame.dll"+3B60DF: 3C FF                          -  cmp al,-01
"xrGame.dll"+3B60E1: 74 03                          -  je xrGame.dll+3B60E6
"xrGame.dll"+3B60E3: 88 47 2C                       -  mov [edi+2C],al
"xrGame.dll"+3B60E6: 8B 06                          -  mov eax,[esi]
"xrGame.dll"+3B60E8: 8B 80 7C 01 00 00              -  mov eax,[eax+0000017C]
"xrGame.dll"+3B60EE: FF D0                          -  call eax
"xrGame.dll"+3B60F0: D8 4F 24                       -  fmul dword ptr [edi+24]
"xrGame.dll"+3B60F3: 0F 57 C0                       -  xorps xmm0,xmm0
"xrGame.dll"+3B60F6: D9 E0                          -  fchs
"xrGame.dll"+3B60F8: D8 86 A8 00 00 00              -  fadd dword ptr [esi+000000A8]
// ---------- INJECTING HERE ----------
"xrGame.dll"+3B60FE: D9 9E A8 00 00 00              -  fstp dword ptr [esi+000000A8]
// ---------- DONE INJECTING  ----------
"xrGame.dll"+3B6104: F3 0F 10 8E A8 00 00 00        -  movss xmm1,[esi+000000A8]
"xrGame.dll"+3B610C: 0F 2F C1                       -  comiss xmm0,xmm1
"xrGame.dll"+3B610F: 76 0C                          -  jna xrGame.dll+3B611D
"xrGame.dll"+3B6111: C7 86 A8 00 00 00 00 00 00 00  -  mov [esi+000000A8],00000000
"xrGame.dll"+3B611B: EB 13                          -  jmp xrGame.dll+3B6130
"xrGame.dll"+3B611D: 0F 2F 0D B4 4A 16 04           -  comiss xmm1,[xrGame.dll+5E4AB4]
"xrGame.dll"+3B6124: 76 0A                          -  jna xrGame.dll+3B6130
"xrGame.dll"+3B6126: C7 86 A8 00 00 00 00 00 80 3F  -  mov [esi+000000A8],3F800000
"xrGame.dll"+3B6130: 8B 86 B4 05 00 00              -  mov eax,[esi+000005B4]
"xrGame.dll"+3B6136: 3B 86 B8 05 00 00              -  cmp eax,[esi+000005B8]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"inf Flashlight"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,"xrGame.dll"+3E1956)
define(bytes,80 BE A0 02 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ax,word ptr [esi+000002BC]
  mov word ptr [esi+000002BE],ax

  mov [esi+000002D8],(float)15
  mov [esi+000002DC],(float)8

  cmp byte ptr [esi+000002A0],00
  jmp return

address:
  jmp code
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // cmp byte ptr [esi+000002A0],00

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "xrGame.dll"+3E1956

"xrGame.dll"+3E1949: CC                             -  int 3
"xrGame.dll"+3E194A: CC                             -  int 3
"xrGame.dll"+3E194B: CC                             -  int 3
"xrGame.dll"+3E194C: CC                             -  int 3
"xrGame.dll"+3E194D: CC                             -  int 3
"xrGame.dll"+3E194E: CC                             -  int 3
"xrGame.dll"+3E194F: CC                             -  int 3
"xrGame.dll"+3E1950: 83 EC 08                       -  sub esp,08
"xrGame.dll"+3E1953: 56                             -  push esi
"xrGame.dll"+3E1954: 8B F1                          -  mov esi,ecx
// ---------- INJECTING HERE ----------
"xrGame.dll"+3E1956: 80 BE A0 02 00 00 00           -  cmp byte ptr [esi+000002A0],00
// ---------- DONE INJECTING  ----------
"xrGame.dll"+3E195D: 0F 84 E0 00 00 00              -  je xrGame.dll+3E1A43
"xrGame.dll"+3E1963: F3 0F 10 0D 9C 4D 16 04        -  movss xmm1,[xrGame.dll+5E4D9C]
"xrGame.dll"+3E196B: B8 FF FF 00 00                 -  mov eax,0000FFFF
"xrGame.dll"+3E1970: 66 01 86 BE 02 00 00           -  add [esi+000002BE],ax
"xrGame.dll"+3E1977: 0F B7 86 BC 02 00 00           -  movzx eax,word ptr [esi+000002BC]
"xrGame.dll"+3E197E: F3 0F 2A C0                    -  cvtsi2ss xmm0,eax
"xrGame.dll"+3E1982: F3 0F 5E C8                    -  divss xmm1,xmm0
"xrGame.dll"+3E1986: 0F 57 C0                       -  xorps xmm0,xmm0
"xrGame.dll"+3E1989: F3 0F 58 8E A8 00 00 00        -  addss xmm1,[esi+000000A8]
"xrGame.dll"+3E1991: 0F 2F C1                       -  comiss xmm0,xmm1
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"inf Powerful Flashlight"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,"xrGame.dll"+3E1956)
define(bytes,80 BE A0 02 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ax,word ptr [esi+000002BC]
  mov word ptr [esi+000002BE],ax

  mov [esi+000002D8],(float)150
  mov [esi+000002DC],(float)150

  cmp byte ptr [esi+000002A0],00
  jmp return

address:
  jmp code
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // cmp byte ptr [esi+000002A0],00

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "xrGame.dll"+3E1956

"xrGame.dll"+3E1949: CC                             -  int 3
"xrGame.dll"+3E194A: CC                             -  int 3
"xrGame.dll"+3E194B: CC                             -  int 3
"xrGame.dll"+3E194C: CC                             -  int 3
"xrGame.dll"+3E194D: CC                             -  int 3
"xrGame.dll"+3E194E: CC                             -  int 3
"xrGame.dll"+3E194F: CC                             -  int 3
"xrGame.dll"+3E1950: 83 EC 08                       -  sub esp,08
"xrGame.dll"+3E1953: 56                             -  push esi
"xrGame.dll"+3E1954: 8B F1                          -  mov esi,ecx
// ---------- INJECTING HERE ----------
"xrGame.dll"+3E1956: 80 BE A0 02 00 00 00           -  cmp byte ptr [esi+000002A0],00
// ---------- DONE INJECTING  ----------
"xrGame.dll"+3E195D: 0F 84 E0 00 00 00              -  je xrGame.dll+3E1A43
"xrGame.dll"+3E1963: F3 0F 10 0D 9C 4D 16 04        -  movss xmm1,[xrGame.dll+5E4D9C]
"xrGame.dll"+3E196B: B8 FF FF 00 00                 -  mov eax,0000FFFF
"xrGame.dll"+3E1970: 66 01 86 BE 02 00 00           -  add [esi+000002BE],ax
"xrGame.dll"+3E1977: 0F B7 86 BC 02 00 00           -  movzx eax,word ptr [esi+000002BC]
"xrGame.dll"+3E197E: F3 0F 2A C0                    -  cvtsi2ss xmm0,eax
"xrGame.dll"+3E1982: F3 0F 5E C8                    -  divss xmm1,xmm0
"xrGame.dll"+3E1986: 0F 57 C0                       -  xorps xmm0,xmm0
"xrGame.dll"+3E1989: F3 0F 58 8E A8 00 00 00        -  addss xmm1,[esi+000000A8]
"xrGame.dll"+3E1991: 0F 2F C1                       -  comiss xmm0,xmm1
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"money"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>"xrGame.dll"+006EA2E4</Address>
      <Offsets>
        <Offset>298</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
