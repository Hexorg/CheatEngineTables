<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>120</ID>
      <Description>"&gt;&gt;&gt;&gt;&gt;&gt;Unlimited Stacked Items/Timestop&lt;&lt;&lt;&lt;&lt;"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Definitions
define(CODE,"ThePit.exe")

[ENABLE]
alloc(MyCode,4096,CODE)
label(noconsume)
label(returnhere)
label(returnhere1)
label(originalcode)
label(originalcode1)
label(lower)
label(increase)
label(fix)
label(used) //aob
label(Aenable1)
label(iStop)
label(aStop)
label(stoptime)
label(sttime)
label(setimer)
registersymbol(MyCode)
registersymbol(used)
registersymbol(Aenable1)
registersymbol(sttime)
registersymbol(iStop)
registersymbol(aStop)
aobscan(aob1,89 46 24 8B 7E 24) // Still Ok
aobscan(aob_stime,40 89 82 A8 00 00 00) // Still Ok

MyCode:

//Var
Aenable1:
dd 0

iStop:
dd 0

aStop:
dd 0

noconsume:
cmp dword ptr [Aenable1],0
je originalcode
cmp dword ptr [Aenable1],2
je increase
cmp dword ptr [Aenable1],2
jg fix
cmp eax,0
je originalcode
push edi
mov edi,[esi+24]
//cmp edi,eax
cmp eax,edi
jl lower
pop edi
jmp originalcode

lower:
pop edi
nop
nop
nop
mov edi,[esi+24]
jmp returnhere

increase:
inc eax
mov dword ptr [Aenable1],1
jmp originalcode

fix:
mov dword ptr [Aenable1],0
jmp originalcode

originalcode:
mov [esi+24],eax
mov edi,[esi+24]
jmp returnhere

// Time Section

stoptime:
cmp [iStop],0
je originalcode1
cmp [iStop],2
je setimer
cmp [iStop],3
je setimer
nop
mov [edx+000000A8],eax
mov [aStop],eax //Write it Down
jmp returnhere1

setimer:
mov eax,[aStop]
dec eax
cmp [iStop],2
je originalcode1
mov [iStop],0
jmp originalcode1


originalcode1:
inc eax
mov [edx+000000A8],eax
mov [aStop],eax //Write it Down
jmp returnhere1


aob1:
used:
jmp noconsume
nop
returnhere:

aob_stime:
sttime:
jmp stoptime
nop
nop
returnhere1:

 
[DISABLE]
used:
db 89 46 24 8B 7E 24
sttime:
db 40 89 82 A8 00 00 00
unregistersymbol(used)
unregistersymbol(Aenable1)
unregistersymbol(sttime)
unregistersymbol(iStop)
unregistersymbol(aStop)
unregistersymbol(MyCode)
dealloc(MyCode)
//------Orig------
//mov [esi+24],eax
//mov edi,[esi+24]
//Alt: db 89 46 24 8B 7E 24
//----Second------
//inc eax
//mov [edx+000000AC],eax
//Alt: db 40 89 82 AC 00 00 00
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>221</ID>
          <Description>"Time Changer Enabler -1 Lock -2 Set and Lock -3 Set and Off"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>933720</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iStop</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>222</ID>
              <Description>"Set Time To/Actual Time When Enabler is 0"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>C04729</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>aStop</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>121</ID>
          <Description>"Unlimited Items"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>Aenable1</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>424</ID>
      <Description>"&gt;&gt;&gt;&gt;&gt;Undying/Dam Mult-Can Be Activated Immediatly&lt;&lt;&lt;&lt;&lt;"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>808000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Define Code
define(INVUNE,"ThePit.exe")

[ENABLE]
alloc(Nodie,2048,INVUNE)
label(whde)
label(StHtBn)
label(Dmmultpl)
label(returnhere)
label(originalcode)
label(undying)
label(iKilled)
label(aHltbonus)
label(iDamMult)
registersymbol(Nodie)
registersymbol(iKilled)
registersymbol(aHltbonus)
registersymbol(iDamMult)
registersymbol(undying)
aobscan(aob_inv,D9 9E 44 01 00 00 5E) // All Updated

Nodie:

//Var
iKilled:
dd 1

aHltbonus:
dd 0 //10

iDamMult:
dd 0

whde:
cmp [esi+00000114],0 //Avatar Health Bonus always more then 1
je Dmmultpl
cmp [iKilled],0
je originalcode
// Read Health Bonus, unless i want to change it
push ebx // Need to be here, or push 2 times
cmp [iKilled],2
je StHtBn
mov ebx,[esi+00000114]
mov [aHltbonus],ebx
pop ebx //Here so don't need to push again
push eax
mov eax,[esi+00000140]
mov [esi+00000144],eax
pop eax
jmp returnhere

//Set Health Bonus
StHtBn:
mov ebx,[aHltbonus]
mov [esi+00000114],ebx
pop ebx
mov [iKilled],1 //Done, Now Reset
jmp whde

// Damage Multiplier, Not Forced Ver
Dmmultpl:
cmp [esi+00000144],0 //if already dead, ignore
je originalcode
cmp [iDamMult],0
je originalcode
mov [esi+00000144],0 // Instakill
jmp returnhere


originalcode:
fstp dword ptr [esi+00000144]
jmp returnhere


aob_inv:
undying:
jmp whde
nop
returnhere:


 
 
[DISABLE]
undying:
db D9 9E 44 01 00 00
unregistersymbol(undying)
unregistersymbol(iKilled)
unregistersymbol(aHltbonus)
unregistersymbol(iDamMult)
unregistersymbol(Nodie)
dealloc(Nodie)
//fstp dword ptr [esi+00000144]
//Alt: db D9 9E 44 01 00 00 - 5E 5D C2 04 00
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>425</ID>
          <Description>"Undying Enabler - 1Active - 2 Set Health Bonus Xp"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80822D</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iKilled</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>426</ID>
          <Description>"Health Bonus Value (Xp on Level Up, not immediate)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>aHltbonus</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>427</ID>
          <Description>"Damage Multiplier Enabler"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>0000D5</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iDamMult</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pscldw</Name>
      <Address>04D957EC</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>NOTES:
Most Aob will not function until the code is used at least once
/*/*/*/*
---------Undying Script--------
This script can be activated immediately at the beginning of the session, no need to take or inflict damage first, BUT while the function to reset your avatar health to it's max value is available immediately, setting the Bonus Health value is not, your avatar MUST to take damage at least once, a self inflicted grenade would do if no enemy are available or your armor is too high
------How To Set Max Health Bonus-----
1) After having took damage at least once WITH THE SCRIPT ENABLED (Enabler to 1), your avatar current Health Bonus is wrote down under "Health Bonus Value"
2) Set the Enabler to 2 and write how much "Xp Bonus Health" you want
3) Take damage again, the script will set the Enabler back to 1
4) Level Up
____________Notes_________
The Health Bonus Value is a Permanent modification to your avatar, every time it's level increase the bonus value will be re-applied again, so setting an extremely high value  like 1000 or more will make titanium look brittle in comparison after 2-3 levels, doesn't glitch anything, but never tested an avatar with more then 60000 Health.
Theoretical max Health:99999999999999999999999999999999
/*/*/*/*
---------------
To use no charge cost, expend 1 charge of any item first
--------------
- To use no psi cost, activate 1 power first
///\\\///\\\
- To change the MAX Bonus Psy points for your avatar, simply set the "No Psi Cost" to 2 then use any power, the script will return to 1 immediatly after. Consistent between saves
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
-------Unlimited Interactive Obj. Uses-------
To use this script it's necessary to activate one of this kind of object at least once in this session, should work for any kind of activable object ment to combine or recombine your items, work even if only 1 use remain. Now it will even lock down the required time to use the object to 1 single time unit, no matter the object normal time
______________IMPORTANT NOTES________
This Function prevent the game to flag ANY usable object as consumed, so despite the graphic may become gray, as long as this hack is active the object is still usable, an example is the "Medical Locker", if this script is active your avatar will be able to interact wth it Again and Again, spawning items Everytime You Manage To Pass The Game Check(failing still disable the interaction) to trigger the object, valid but not limited for:
-Lab
-Cooker
-Console
-Cage
-Weapon Locker Light/Heavy
-Locker(Broken/Functional)
-Medical Locker
-Ammo Box/Locker
-Medical Bay
-Recombiner
-Recycler
-4D Copier
-Tesseract Well
-.......Pretty Much Every Usable Object
&gt;&gt;&gt;&gt;Exception&lt;&lt;&lt;&lt;&lt;&lt;
-Storage Pod
_____Extra____________
If the script is active when enetering a new level, ALL interactive object may be used repeadetly, no matter if normally are single use, even if the script is deactivated later, as the hack force the value to 5, such objects will be usable for that much time. If not interested in such function, deactivate the script before entering a new level, note that you are not forced to consume all object charges if you aren't interested
--------------
(OLD)Item cost work regardless, no need to expend, but not working with 1 item only
/\/\/\
(New)Item cost and timestop will work after 1 time unit is passed, use the old function under OLD!!!! if you do not care about setting time, but can be activated immediatly. DO NOT ACTIVATE BOTH NEW AND OLD FUNCTION WITH THE SAME NAME AT THE SAME TIME, CRASH NEARLY GUARANTEED
\\\\\\\\\\\\/////////////\\\\\\\\\\\////////
&gt;&gt;&gt;&gt;Change Max/Actual Steps Instructions&lt;&lt;&lt;&lt;&lt;&lt;
\\\\\\\\\\\\/////////////\\\\\\\\\\\////////
1) To use The "Change Max Steps" option, walk anywhere until all your available steps are consumed and the value reach 0, it will automatically restore to it's max value of course, but it's necessary to do it at least once to activate this script, SKIPPING A TURN WILL NOT WORK, you Must use all your available move points
//\\
2) Enable the script and set how much you wish the Normal Max steps available to your avatar want, then use all your moves
//\\
3) Now the address is correctly set, once all your available step are used, the Max value will become the one you have set. This script will now disable itself, the CHANGE IS PERMANENT and perfectly safe to use with Any item or effect that haste or slow your avatar
//\\
4) Unless you wish to alter the max move points again there is not need to reactivate this script. Consistent between saves 
______________IMPORTANT NOTES________
Sometimes for some reason the game ignore the recall function and refuse to update the Max Step Value to your new settings, if this happen set the Enabler to 2, this will force the game to update the value the next time your avatar take a step, then the script will turn itself off
//\\
Added the possibility to set the Enabler to 3, this Will prevent the Auto Deactivation of the script and it will need to be turn off manually, not sure why such option may be ever needed, but if you wish to force the game to constantly set your Max Steps, you can
\\\\\\\\\\\\/////////////\\\\\\\\\\\////////
1) The actual Move points scripts have 3 possible settings:
//\\
When set to 1 your avatar moves simply stop decreasing, set the value to 0 to resume the consumption. Ignore the "Actual Move Point(s)" value in this case, do nothing
//\\
When set to 2 the actual move points do not decrease AND are set to the "Actual Move Point(s)" value, change them as much as you wish
//\\
When set to 3 the actual move points are set to the "Actual Move Point(s)" value, then the script disable itself and the function resume it's normal process. This option work even when your avatar has only 1 point left, effectively preventing the "end of turn"
\\\\\\\\\\\\/////////////\\\\\\\\\\\////////
All Weapon Reload 1 TU/Set Equipped Wpn Ammo
////////////\\\\\\\\\\\\\///////////\\\\\\\\
This script permit to reload all weapons in 1 TU regardell of the normal required time, require to have reloaded a weapon at least once.
//\\
The second option have 3 possible settings, with Enabler to:
----------
- 1 or 2 permit to set the actually equipped weapon ammo to any valid 4 bytes value and the script will disable itself. When the enabler set to 2 the script will not auto-disable itself, keeping your weapon ammo at the desired value
----------
- 3 permit to set the equipped weapon durability at the desired value, required to shoot once with the enabler set to 3, the script will then disable itself
----------
- 4 permit to change the weapon penetration. To use set the "Weapon Penetration" value to 1 then write down how much penetration you want under "New Weapon Penetration" and shoot once.
///
Leave "Weapon Penetration" at 0 if you want to reset the penetration value using the calculation done by the game
\\\
______IMPORTANT NOTES!!!!______
The second function is used for NPC weapon too, and using the enabler to 3 or 4 while fighting MAY reset your weapon ammo value to a lower default value, as such it's recommended to cahnge the Weapon Penetration and Durability functions Outside of Battle to prevent possible ammo mishaps.
---------------------------------------
No deteriorating items function is used for lots of random thingies, no stable ID located, unusable as it is now, setting resistance to 100000000 make items indestructible anyway, float
-----------
Skill or Stat, cannot pinpoint reported problem as to me Skill always work. Stat sometimes may be flicker but work most of the time, if restarting the game doesn't help here the AOB for the Stat, usually is the Last reported value. To Edit simply ask to read the value as decimal by right clicking and selecting Show As Decimal
////////////////
MG = Might
FN = Finesse
BR = Brain
PW = Power
---
Normal 4 bytes here
/
Generic Stat AOB:
MG MG MG MG FN FN FN FN BR BR BR BR PW PW PW PW
--Example
Stat = Dec - Hex
MG = 25 - 19
FN = 50 - 32
BR = 80 - 50
PW = 90 - 5A
/
19 00 00 00 32 00 00 00 50 00 00 00 5A 00 00 00
////////////////
-------------Item Editing-------
\\\\\\GENERAL NOTES///////////
In case the game make difficult for you to lacate the specific AOB af an item, remember that the LAST Picked up object reside ALWAYS last in the Inventory Memory Sequence(s), as such the right AOB string is Usually THE LAST ONE or the one IMMEDIATLY BEFORE if the item is dropped and picked back up
/////////////////\\\\\\\\\\\\\\\\
====Durability/Weapon
Durability is a float value located Before the actual ammo, usually like this:
DR: Durability(Float)
MD: Max Dur Bonus, negative value, normally 0, every negative value here increase max durability (-10=A0C1, is +10 Max Dur, Float)
AMMO: Literally the actual ammo in bytes, 4
----
DR DR DR DR MD MD MD MD
????
????
AMMO0000..
================Armor==================
Structure of armor items, where:
SN = Stack Number, for armor is always 01, setting this to 02 or more, give you more armor in the same stack, just like items, it's then possible to Split them and the game make a new shiny default armor for you to use, default button to split stacks is  Right CTRL
/////
SN is Actually 4 bytes, so the right placement is SN SN SN SN, but as no items stack ever rquire more then 1 byte(FF), the other 3 bytes are normally always 00 
\\\\\
DU = Durability(Float)
EQ = Equipped Flag, when 1 equipped
MD = Max Dur Bonus, negative value, is normally 0, every negative value here increase max durability (-10=A0C1, is +10 Max Dur, Float)
?? = AOB String, May be object ID, (24 bytes)
BA = Bonus Armor(Float)
|||||||||
SN 00 00 00-DU DU DU DU-MD MD MD MD-00 00 00 00-EQ 00 00 00 -?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ??-BA BA BA BA
\\\\\\\\\IMPORTANT NOTES/////////
Take into consideration that certain armor(s) when equpped force the avatar to unequip many other items, like the "Tarka Living Armor" or "Brawler PDA", BUT forcing the euipped flag (EQ) to 01 will prevent the game from unequipping everything else, while still providing the avatar the full bonus of using such armor.
--
Trying to equip something in a normally "dibbed" slot will end up unequipping the armor, for example equipping the belt in the "Tarka Living Armor", nothing prevent you from forcefully set the EQ flag back to 1 and is consistent between saves. This dosen't happen to "Normal" Armours, also is of notice that most non chest items that give an additional effects like speeding up or reduce hunger, may not function correctly if equipped this way, so always equip special items first the force equip the rest
===============Weapons=================
\\\\\\\NOTES///////////
Weapons modifier are located in 4 bytes section, where the here represented first 4 bytes are the Actual Durability, the sequence(s) are always the same, as such feel free to use Actual Ammo(AM) and come right up if you so desire
/-/-/-/-/-/-/-/-
This two Symbols:
!!
!1
Are mere notes, and should be considered as ??
/-/-/-/-NOTES ABOUT PENETRATION/-/-/-/-
Normally the game DO NOT assign the weapon penetration value or it's bonus in the method described here, as such unless you have Hacked the particular weapon you are searching the AOB of, ALWAYS KEEP TOHOSE VALUE TO 00, EVEN IF THE PENETRATION IS ACTUALLY MODIFIED BY A BIOMOD. If in doubts, use ?? instead, and make use of the Equipped Flag(EQ) to ease your search, or simply drop the weapon and pick the Last Returning Value in the search, refer to  the GENERAL NOTES for details
/////////////////////\\\\\\\\\\\\\\\\\\\\\\\\
AD = Actual Durability
MD = Max Dur Bonus, negative value, is normally 0, every negative value here increase max durability (-10=A0C1, is +10 Max Dur, Float)
AM = Actual Ammo
PF = Penetration Flag: Need to be at 1 to work
PV = Penetration Value, Replace Default, N
EQ = Equipped Flag, when 1 equipped
?? = AOB String, May be object ID, (24 bytes)
SN = Stack Number, for weapons is always 01, setting this to 02 or more, give you more weapon in the same stack, just like items, it's then possible to Split them and the game make a new shiny default weapon for you to use, default button to split stacks is  Right CTRL
/////
SN is Actually 4 bytes, so the right placement is SN SN SN SN, but as no items stack ever require more then 1 byte(FF), the other 3 bytes are normally always 00 
\\\\\
!! = Game Crash if modified, usually 0, unknown
!1 = Some value make the game crash , unknown
|||||||||
AD AD AD AD-MD MD MD MD-00 00 00 00-SN 00 00 00-?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ??-!! !! !! !!-!1 !1 !1 !1- AM AM AM AM-PF ?? ?? ??-PV PV PV PV-
////Alternative Quick Search for Weapons/////
AD AD AD AD MD MD MD MD 00 00 00 00 SN 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? AM AM AM AM
===================Items/Genric=========
Before the object quantity, 5 bytes, begin the ID of the stored object, then what seems to be the stored value, where is located
-----
Structure:
N = Quantity (4 Bytes)
ID = Identifier (20 Bytes)
....ID ID ID ID ID ID 00 00 00 00 NN NN NN NN
/-/-/-/-/-/-/
Access all Skill after opening Character Screen
Once, continue to do so if character screen is
open, SKILLS (Psy First in reverse, then normal skill in order)
AOB: / DB 40 08 D9 5D F4 \
/-/-/-/-/Reader For Items/-/-/-/-/-/-/-/-/-
AOB: / 8B 41 24 C3 00 00 00 00 00 00 00 00 00 00 00 00 08 52 30 \
</Comments>
</CheatTable>
