<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>17</ID>
      <Description>"God Mod (fix)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Disrupt_b64.dll"+181B530) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [rcx+18],(float)100

originalcode:
movss xmm0,[rcx+18]

exit:
jmp returnhere

"Disrupt_b64.dll"+181B530:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Disrupt_b64.dll"+181B530:
movss xmm0,[rcx+18]
//Alt: db F3 0F 10 41 18
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Infinite Battery"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Disrupt_b64.dll"+238AA2) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [r14+000000E8],#6

originalcode:
mov ebx,[r14+000000E8]

exit:
jmp returnhere

"Disrupt_b64.dll"+238AA2:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Disrupt_b64.dll"+238AA2:
mov ebx,[r14+000000E8]
//Alt: db 41 8B 9E E8 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Infinite Items &amp; Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Disrupt_b64.dll"+7F158C) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [rdx+0C],#100

originalcode:
mov eax,[rdx+0C]
mov rbx,[rsp+38]

exit:
jmp returnhere

"Disrupt_b64.dll"+7F158C:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Disrupt_b64.dll"+7F158C:
mov eax,[rdx+0C]
mov rbx,[rsp+38]
//Alt: db 8B 42 0C 48 8B 5C 24 38
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Infinite Slow-mo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Disrupt_b64.dll"+2B8736) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [rcx+00000188],#1068495628

originalcode:
movss xmm0,[rcx+00000188]

exit:
jmp returnhere

"Disrupt_b64.dll"+2B8736:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Disrupt_b64.dll"+2B8736:
movss xmm0,[rcx+00000188]
//Alt: db F3 0F 10 81 88 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Infinite Money &amp; Skill Points"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Disrupt_b64.dll"+695B93) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [rcx+rax*4+0000009C],#9999999

originalcode:
mov eax,[rcx+rax*4+0000009C]

exit:
jmp returnhere

"Disrupt_b64.dll"+695B93:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Disrupt_b64.dll"+695B93:
mov eax,[rcx+rax*4+0000009C]
//Alt: db 8B 84 81 9C 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"No Reload"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Disrupt_b64.dll"+55C171) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [rax+00000098],#10

originalcode:
mov eax,[rax+00000098]

exit:
jmp returnhere

"Disrupt_b64.dll"+55C171:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Disrupt_b64.dll"+55C171:
mov eax,[rax+00000098]
//Alt: db 8B 80 98 00 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
