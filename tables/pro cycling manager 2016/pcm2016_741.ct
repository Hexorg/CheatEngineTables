<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Activate Data Structure Normal Race"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(MyMemCode, 512) // allocate 512 bytes inside open process and store address in MyCode
label(MyMemData)      // MyData is defined later, set value when assembler hits it
registersymbol(MyMemCode) // make MyCode available everywhere
registersymbol(MyMemData) // make MyData available everywhere

MyMemCode:       // start assembling in allocated memory
mov eax, [400000]
mov [MyMemData], eax
mov [MyMemData+4], 12345678
ret

MyMemData:       // value will be set to address after ret

CreateThread(MyMemCode) // create new thread in open process


[DISABLE]
dealloc(MyMemCode)
unregistersymbol(MyMemCode) // make MyCode available everywhere
unregistersymbol(MyMemData) // make MyData available everywher
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Insert Heartbeat Memory Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>mymemdata+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Heartbeat"</Description>
          <VariableType>Float</VariableType>
          <Address>MyMemData+4</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Current Stamina"</Description>
          <VariableType>Float</VariableType>
          <Address>MyMemData+4</Address>
          <Offsets>
            <Offset>2C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Max Stamina"</Description>
          <VariableType>Float</VariableType>
          <Address>MyMemData+4</Address>
          <Offsets>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Attack Meter"</Description>
          <VariableType>Float</VariableType>
          <Address>MyMemData+4</Address>
          <Offsets>
            <Offset>30</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Max Attack Meter Recuperation"</Description>
          <VariableType>Float</VariableType>
          <Address>MyMemData+4</Address>
          <Offsets>
            <Offset>44</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Max Attack Meter"</Description>
          <VariableType>Float</VariableType>
          <Address>MyMemData+4</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Sprint Meter"</Description>
          <VariableType>Float</VariableType>
          <Address>MyMemData+4</Address>
          <Offsets>
            <Offset>34</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>232</ID>
      <Description>"Activate Data Structure Time Trial Race"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(MyMemCodeTT, 512) // allocate 512 bytes inside open process and store address in MyCode
label(MyMemDataTT)      // MyData is defined later, set value when assembler hits it
registersymbol(MyMemCodeTT) // make MyCode available everywhere
registersymbol(MyMemDataTT) // make MyData available everywhere

MyMemCodeTT:       // start assembling in allocated memory
mov eax, [400000]
mov [MyMemDataTT], eax
mov [MyMemDataTT+4], 12345678
ret

MyMemDataTT:       // value will be set to address after ret

CreateThread(MyMemCodeTT) // create new thread in open process


[DISABLE]
dealloc(MyMemCodeTT)
unregistersymbol(MyMemCodeTT) // make MyCode available everywhere
unregistersymbol(MyMemDataTT) // make MyData available everywher
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>233</ID>
          <Description>"Insert Heartbeat Memory Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>mymemdataTT+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>234</ID>
          <Description>"Heartbeat"</Description>
          <VariableType>Float</VariableType>
          <Address>MyMemDataTT+4</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>235</ID>
          <Description>"Current Stamina"</Description>
          <VariableType>Float</VariableType>
          <Address>MyMemDataTT+4</Address>
          <Offsets>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>236</ID>
          <Description>"Max Stamina"</Description>
          <VariableType>Float</VariableType>
          <Address>MyMemDataTT+4</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"[X] &lt;== Table/Script Information"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
getMainForm().CommentButton.doClick()
{$ASM}

[disable]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>MyMemData</Name>
      <Address>05B90016</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Table version 1.1
Changelog: Added data structure for time trial races

Use:

Activate the Data Structures once the table is attached to the pcm process.

While in race, now search the heartbeat address for the rider you want to affect. The value you need to search is a float and you can use the number shown ingame. After a couple of filters you have 2 addresses remaining. One rounded float, example 120, and one longer float, example 120.36893. It's the address for the last one you need. Copy the address in the "insert Heartbeat Memory Address" field of the type of race you are riding. This can be done early in the stage for maximum effectiveness.

The stats for the rider will now appear in the table.
For a normal race:
-For unlimited stamina, freeze "Current Stamina".
-For unlimited sprint, freeze "Sprint Meter".
-For unlimited attack, freeze both "Attack Meter" and "Max Attack Meter Recuperation".

For a time trial race:
-For unlimited stamina, freeze "Current Stamina".

Note that the max values for each field depends on the rider's stats and form.If you want you can edit the values as you want.

IMPORTANT: The attack meter cheat works only completely in 1x speed. If you speed up the game faster, the meter will keep depleting and filling up. In that case just switch to 1x speed or pause and attack.

IMPORTANT 2: The above steps (except activating the structures) have to be done for each new race since the locations change each time. For the best result also unfreeze all field after your rider has finished but before the game goes to the highlights. This ensures best stability.</Comments>
</CheatTable>
