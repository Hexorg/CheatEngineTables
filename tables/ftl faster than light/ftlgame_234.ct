<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Resources"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : FTLGame.exe
  Version: 
  Date   : 2016-06-13
  Author : kh

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ScrapChecker,FTLGame.exe,8B 80 50 04 00 00 89 85) // should be unique
alloc(newmem,$1000)
alloc(bScrap,4)

label(code)
label(return)

newmem:

code:
  mov [bScrap], eax
  mov eax,[eax+00000450]
  jmp return

ScrapChecker:
  jmp code
  nop
return:
registersymbol(ScrapChecker)
registersymbol(bScrap)
aobscanmodule(Missiles,FTLGame.exe,8B 80 C0 01 00 00) // should be unique
alloc(newmem2,$1000)
alloc(bMissiles, 4)

label(code2)
label(return2)

newmem2:

code2:
  mov [bMissiles], eax
  mov eax,[eax+000001C0]
  jmp return2

Missiles:
  jmp code2
  nop
return2:
registersymbol(Missiles)
registersymbol(bMissiles)
aobscanmodule(Hull,FTLGame.exe,8B 82 2C 01 00 00 8B) // should be unique
alloc(newmem5,$1000)
alloc(bHull,4)

label(code5)
label(return5)


newmem5:

code5:
  mov [bHull], edx
  mov eax,[edx+0000012C]
  jmp return5

Hull:
  jmp code5
  nop
return5:
registersymbol(Hull)
registersymbol(bHull)

[DISABLE]

ScrapChecker:
  db 8B 80 50 04 00 00

unregistersymbol(ScrapChecker)
unregistersymbol(bScrap)
dealloc(newmem)
dealloc(bScrap)

Missiles:
  db 8B 80 C0 01 00 00

unregistersymbol(Missiles)
unregistersymbol(bMissiles)
dealloc(newmem2)
dealloc(bMissiles)
Hull:
  db 8B 82 2C 01 00 00

unregistersymbol(Hull)
unregistersymbol(bHull)
dealloc(newmem5)
dealloc(bHull)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Drone Parts"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>bScrap</Address>
          <Offsets>
            <Offset>598</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Scrap"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>bScrap</Address>
          <Offsets>
            <Offset>450</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Fuel"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>bScrap</Address>
          <Offsets>
            <Offset>410</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Missiles"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>bMissiles</Address>
          <Offsets>
            <Offset>1C0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Hull (12c)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>bHull</Address>
          <Offsets>
            <Offset>12C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Max Hull (130)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>bHull</Address>
          <Offsets>
            <Offset>130</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Fast Reload"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Reload,FTLGame.exe,D9 40 08 D8 70 0C D9 9D 64) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(Normal)
label(sVal)
label(nVal)

newmem:

sVal:
dd (float).5

nVal:
dd (float)0

code:
  push ebx
  cmp [eax+8], (float).5
  jl Normal
  fld dword ptr [eax+0c]
  fsub [sVal]
  fstp [nVal]
  mov ebx, [nVal]
  cmp [eax+8], ebx
  jg Normal
  mov dword ptr [eax+8], ebx
Normal:
  pop ebx
  fld dword ptr [eax+08]
  fdiv dword ptr [eax+0C]
  jmp return

Reload:
  jmp code
  nop
return:
registersymbol(Reload)

[DISABLE]

Reload:
  db D9 40 08 D8 70 0C

unregistersymbol(Reload)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address>004E8F02</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Reload</Name>
      <Address>0061B589</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ScrapChecker</Name>
      <Address>005EED49</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Missiles</Name>
      <Address>00521287</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Hull</Name>
      <Address>005EA247</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
