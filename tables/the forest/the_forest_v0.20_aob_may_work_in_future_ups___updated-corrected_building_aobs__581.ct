<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>97</ID>
      <Description>"HUNGER"</Description>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(hunger,$1000)
label(returnhunger)
registersymbol(returnhunger)
registersymbol(hunger)
registersymbol(hungeraob)
aobscan(hungeraob,C9 C3 00 00 00 00 55 8B XX 57 83 XX XX 8B 7D XX D9 XX XX XX 00 00 D9 XX XX XX XX XX DE E9 D9 XX XX XX 00 00 8B XX XX 8B XX 39 XX 8B XX XX XX 00 00 8B XX 39 XX 8B XX XX 3D XX XX 00 00 75 0E) // should be unique
////  fstp dword ptr [edi+00000114]
hunger:
  mov [edi+00000114],(float)1.0
  jmp hungeraob+24

//  jmp returnhunger

hungeraob+1E:
  jmp hunger
  nop
//

returnhunger:


[DISABLE]
hungeraob+1E:
  db D9 87 14 01 00 00

unregistersymbol(returnhunger)
unregistersymbol(hunger)
unregistersymbol(hungeraob)
dealloc(hunger)

{
//AOB +1E HEX
//C9 C3 00 00 00 00 55 8B XX 57 83 XX XX 8B 7D XX D9 XX XX XX 00 00 D9 XX XX XX XX XX DE E9 D9 XX XX XX 00 00 8B XX XX 8B XX 39 XX 8B XX XX XX 00 00 8B XX 39 XX 8B XX XX 3D XX XX 00 00 75 0E

-----------------FOR AOB---------------------
508D7A62 - C9                    - leave
508D7A63 - C3                    - ret
508D7A64 - 00 00                 - add [eax],al
508D7A66 - 00 00                 - add [eax],al
508D7A68 - 55                    - push ebp
508D7A69 - 8B EC                 - mov ebp,esp
508D7A6B - 57                    - push edi
508D7A6C - 83 EC 04              - sub esp,04
508D7A6F - 8B 7D 08              - mov edi,[ebp+08]
508D7A72 - D9 87 14010000        - fld dword ptr [edi+00000114] --------------TARGET
508D7A78 - D9 05 F85E2E29        - fld dword ptr [292E5EF8] : [3AC49BA6]
508D7A7E - DEE9                  - fsubp st(1),st(0)
508D7A80 - D9 9F 14010000        - fstp dword ptr [edi+00000114]
508D7A86 - 8B 47 78              - mov eax,[edi+78]
508D7A89 - 8B C8                 - mov ecx,eax
508D7A8B - 39 09                 - cmp [ecx],ecx
508D7A8D - 8B 80 8C000000        - mov eax,[eax+0000008C]
508D7A93 - 8B C8                 - mov ecx,eax
508D7A95 - 39 09                 - cmp [ecx],ecx
508D7A97 - 8B 40 2C              - mov eax,[eax+2C]
508D7A9A - 3D 01000000           - cmp eax,00000001
508D7A9F - 75 0E                 - jne 508D7AAF

------------------------ORG------------------

// ORIGINAL CODE - INJECTION POINT: 508D7A72
508D7A61: 5F                    -  pop edi
508D7A62: C9                    -  leave 
508D7A63: C3                    -  ret 
508D7A64: 00 00                 -  add [eax],al
508D7A66: 00 00                 -  add [eax],al
508D7A68: 55                    -  push ebp
508D7A69: 8B EC                 -  mov ebp,esp
508D7A6B: 57                    -  push edi
508D7A6C: 83 EC 04              -  sub esp,04
508D7A6F: 8B 7D 08              -  mov edi,[ebp+08]
// ---------- INJECTING HERE ----------
508D7A72: D9 87 14 01 00 00     -  fld dword ptr [edi+00000114]
// ---------- DONE INJECTING  ----------
508D7A78: D9 05 F8 5E 2E 29     -  fld dword ptr [292E5EF8]
508D7A7E: DE E9                 -  fsubp st(1),st(0)
508D7A80: D9 9F 14 01 00 00     -  fstp dword ptr [edi+00000114]
508D7A86: 8B 47 78              -  mov eax,[edi+78]
508D7A89: 8B C8                 -  mov ecx,eax
508D7A8B: 39 09                 -  cmp [ecx],ecx
508D7A8D: 8B 80 8C 00 00 00     -  mov eax,[eax+0000008C]
508D7A93: 8B C8                 -  mov ecx,eax
508D7A95: 39 09                 -  cmp [ecx],ecx
508D7A97: 8B 40 2C              -  mov eax,[eax+2C]
}

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>98</ID>
      <Description>"ENERGY"</Description>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(energy,$1000)
//label(returnenergy)
//registersymbol(returnenergy)
registersymbol(energy)
registersymbol(energyaob)
aobscan(energyaob,75 0E D9 XX XX XX XX XX D9 XX XX XX 00 00 EB 08 D9 EE D9 XX XX XX 00 00 D9 XX XX XX 00 00 D9 XX XX XX 00 00 DE E9 D9 XX XX 00 00 00 D9 XX XX XX 00 00 D9 XX XX XX XX XX DF F1 DD D8 76 14) //
//   fstp dword ptr [edi+000000F4]
energy:
  mov [edi+000000F4],(float)100.0
  jmp energyaob+2C

energyaob+26:
  jmp energy
  nop

//return:

[DISABLE]
energyaob+26:
  db D9 9F F4 00 00 00

unregistersymbol(energy)
unregistersymbol(energyaob)
dealloc(energy)

{
//AOB
//75 0E D9 XX XX XX XX XX D9 XX XX XX 00 00 EB 08 D9 EE D9 XX XX XX 00 00 D9 XX XX XX 00 00 D9 XX XX XX 00 00 DE E9 D9 XX XX 00 00 00 D9 XX XX XX 00 00 D9 XX XX XX XX XX DF F1 DD D8 76 14
-----------------FOR AOB---------------------
508D7AC8 - 75 0E                 - jne 508D7AD8
508D7ACA - D9 05 C89F3029        - fld dword ptr [29309FC8] : [(float)0.5000]
508D7AD0 - D9 9F B4010000        - fstp dword ptr [edi+000001B4]
508D7AD6 - EB 08                 - jmp 508D7AE0 : [TheForest.Vector3f::epsilon+4107D]
508D7AD8 - D9EE                  - fldz
508D7ADA - D9 9F B4010000        - fstp dword ptr [edi+000001B4]
508D7AE0 - D9 87 F4000000        - fld dword ptr [edi+000000F4]
508D7AE6 - D9 87 B4010000        - fld dword ptr [edi+000001B4]
508D7AEC - DEE9                  - fsubp st(1),st(0)
508D7AEE - D9 9F F4000000        - fstp dword ptr [edi+000000F4] --------------------------TARGET
508D7AF4 - D9 87 14010000        - fld dword ptr [edi+00000114]
508D7AFA - D9 05 D89F3029        - fld dword ptr [29309FD8] : [3E4CCCCD]
508D7B00 - DFF1                  - fcomip st(0),st(1)
508D7B02 - DDD8                  - fstp st(0)
508D7B04 - 76 14                 - jna 508D7B1A


// ORIGINAL CODE - INJECTION POINT: 508D7AEE
508D7AC3: 3D 02 00 00 00        -  cmp eax,00000002
508D7AC8: 75 0E                 -  jne 508D7AD8
508D7ACA: D9 05 C8 9F 30 29     -  fld dword ptr [29309FC8]
508D7AD0: D9 9F B4 01 00 00     -  fstp dword ptr [edi+000001B4]
508D7AD6: EB 08                 -  jmp 508D7AE0
508D7AD8: D9 EE                 -  fldz 
508D7ADA: D9 9F B4 01 00 00     -  fstp dword ptr [edi+000001B4]
508D7AE0: D9 87 F4 00 00 00     -  fld dword ptr [edi+000000F4]
508D7AE6: D9 87 B4 01 00 00     -  fld dword ptr [edi+000001B4]
508D7AEC: DE E9                 -  fsubp st(1),st(0)
// ---------- INJECTING HERE ----------
508D7AEE: D9 9F F4 00 00 00     -  fstp dword ptr [edi+000000F4]
// ---------- DONE INJECTING  ----------
508D7AF4: D9 87 14 01 00 00     -  fld dword ptr [edi+00000114]
508D7AFA: D9 05 D8 9F 30 29     -  fld dword ptr [29309FD8]
508D7B00: DF F1                 -  fcomip st(0),st(1)
508D7B02: DD D8                 -  fstp st(0)
508D7B04: 76 14                 -  jna 508D7B1A
508D7B06: D9 87 F4 00 00 00     -  fld dword ptr [edi+000000F4]
508D7B0C: D9 05 E0 9F 30 29     -  fld dword ptr [29309FE0]
508D7B12: DE E9                 -  fsubp st(1),st(0)
508D7B14: D9 9F F4 00 00 00     -  fstp dword ptr [edi+000000F4]
508D7B1A: 0F B6 87 33 01 00 00  -  movzx eax,byte ptr [edi+00000133]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>99</ID>
      <Description>"THIRST"</Description>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(thirst,$1000)
registersymbol(thirst)
registersymbol(thirstaob)
aobscan(thirstaob,76 0D D9 EE D9 xx xx xx 00 00 E9 99 00 00 00 D9 xx xx xx 00 00 8B xx xx xx xx xx D9 xx xx xx xx xx 8B xx xx D9 xx xx DE F9 DE C1 D9 xx xx xx 00 00 D9 xx xx xx 00 00 8B xx xx D9 xx xx DF F1 DD D8 7A 31 73 2F) //
//     fstp dword ptr [edi+00000118]
thirst:
  mov [edi+00000118],(float)0.0
  jmp thirstaob+31

thirstaob+2B:
  jmp thirst
  nop

[DISABLE]
thirstaob+2B:
  db D9 9F 18 01 00 00

unregistersymbol(thirst)
unregistersymbol(thirstaob)
dealloc(thirst)

{
//AOB
//76 0D D9 EE D9 xx xx xx 00 00 E9 99 00 00 00 D9 xx xx xx 00 00 8B xx xx xx xx xx D9 xx xx xx xx xx 8B xx xx D9 xx xx DE F9 DE C1 D9 xx xx xx 00 00 D9 xx xx xx 00 00 8B xx xx D9 xx xx DF F1 DD D8 7A 31 73 2F
-----------------FOR AOB---------------------
29AEEEBA - 76 0D                 - jna 29AEEEC9 : [TheForest.exe+EA87D9]
29AEEEBC - D9EE                  - fldz
29AEEEBE - D9 9F 18010000        - fstp dword ptr [edi+00000118]
29AEEEC4 - E9 99000000           - jmp 29AEEF62
29AEEEC9 - D9 87 18010000        - fld dword ptr [edi+00000118]
29AEEECF - 8B 05 340F0403        - mov eax,[03040F34] : [69EF2D48]
29AEEED5 - D9 80 C0010000        - fld dword ptr [eax+000001C0]
29AEEEDB - 8B 47 18              - mov eax,[edi+18]
29AEEEDE - D9 40 10              - fld dword ptr [eax+10]
29AEEEE1 - DEF9                  - fdivp st(1),st(0)
29AEEEE3 - DEC1                  - faddp
29AEEEE5 - D9 9F 18010000        - fstp dword ptr [edi+00000118]---------------------target
29AEEEEB - D9 87 18010000        - fld dword ptr [edi+00000118]
29AEEEF1 - 8B 47 18              - mov eax,[edi+18]
29AEEEF4 - D9 40 18              - fld dword ptr [eax+18]
29AEEEF7 - DFF1                  - fcomip st(0),st(1)
29AEEEF9 - DDD8                  - fstp st(0)
29AEEEFB - 7A 31                 - jp 29AEEF2E
29AEEEFD - 73 2F                 - jae 29AEEF2E


// ORIGINAL CODE - INJECTION POINT: 29AEEEE5
29AEEEBC: D9 EE              -  fldz
29AEEEBE: D9 9F 18 01 00 00  -  fstp dword ptr [edi+00000118]
29AEEEC4: E9 99 00 00 00     -  jmp 29AEEF62
29AEEEC9: D9 87 18 01 00 00  -  fld dword ptr [edi+00000118]
29AEEECF: 8B 05 34 0F 04 03  -  mov eax,[03040F34]
29AEEED5: D9 80 C0 01 00 00  -  fld dword ptr [eax+000001C0]
29AEEEDB: 8B 47 18           -  mov eax,[edi+18]
29AEEEDE: D9 40 10           -  fld dword ptr [eax+10]
29AEEEE1: DE F9              -  fdivp st(1),st(0)
29AEEEE3: DE C1              -  faddp 
// ---------- INJECTING HERE ----------
29AEEEE5: D9 9F 18 01 00 00  -  fstp dword ptr [edi+00000118]
// ---------- DONE INJECTING  ----------
29AEEEEB: D9 87 18 01 00 00  -  fld dword ptr [edi+00000118]
29AEEEF1: 8B 47 18           -  mov eax,[edi+18]
29AEEEF4: D9 40 18           -  fld dword ptr [eax+18]
29AEEEF7: DF F1              -  fcomip st(0),st(1)
29AEEEF9: DD D8              -  fstp st(0)
29AEEEFB: 7A 31              -  jp 29AEEF2E
29AEEEFD: 73 2F              -  jae 29AEEF2E
29AEEEFF: 8B 05 54 5D 05 03  -  mov eax,[03055D54]
29AEEF05: 83 EC 0C           -  sub esp,0C
29AEEF08: 50                 -  push eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>114</ID>
      <Description>"FATIQUE"</Description>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(fatique,$1000)
registersymbol(fatique)
registersymbol(fatiqueaob)
aobscan(fatiqueaob,D9 C9 D9 CA DE C9 DE C1 D9 xx xx xx 00 00 EB 0C D9 xx xx xx 00 00 D9 xx xx xx 00 00 0F xx xx xx xx 00 00 85 C0 74 32) //
//   fstp dword ptr [edi+000000EC]
fatique:
  mov [edi+000000EC],(float)100.0
  jmp fatiqueaob+E

fatiqueaob+8:
  jmp fatique
  nop

[DISABLE]
fatiqueaob+8:
  db D9 9F EC 00 00 00

unregistersymbol(fatique)
unregistersymbol(fatiqueaob)
dealloc(fatique)

{
//AOB   +8 hex
//D9 C9 D9 CA DE C9 DE C1 D9 xx xx xx 00 00 EB 0C D9 xx xx xx 00 00 D9 xx xx xx 00 00 0F xx xx xx xx 00 00 85 C0 74 32

---------------------------------FOR AOB-----------------------------
29AEF610 - D9C9                  - fxch st(1)
29AEF612 - D9CA                  - fxch st(2)
29AEF614 - DEC9                  - fmulp st(1),st(0)
29AEF616 - DEC1                  - faddp
29AEF618 - D9 9F EC000000        - fstp dword ptr [edi+000000EC]----------------TARGET
29AEF61E - EB 0C                 - jmp 29AEF62C
29AEF620 - D9 87 F4000000        - fld dword ptr [edi+000000F4]
29AEF626 - D9 9F EC000000        - fstp dword ptr [edi+000000EC]--------------target
29AEF62C - 0FB6 87 32010000      - movzx eax,byte ptr [edi+00000132]
29AEF633 - 85 C0                 - test eax,eax
29AEF635 - 74 32                 - je 29AEF669

not need
29AEF637 - 8B 05 705D0503        - mov eax,[03055D70] : [5EA89000]
29AEF63D - 8B 40 34              - mov eax,[eax+34]
29AEF640 - 8B C8                 - mov ecx,eax
29AEF642 - 39 09                 - cmp [ecx],ecx
29AEF644 - 8B 40 78              - mov eax,[eax+78]
29AEF647 - 83 EC 0C              - sub esp,0C
29AEF64A - 50                    - push eax
29AEF64B - 8B 00                 - mov eax,[eax]
29AEF64D - 90                    - nop
29AEF64E - 90                    - nop
29AEF64F - 90                    - nop
29AEF650 - FF 90 20010000        - call dword ptr [eax+00000120]
29AEF656 - 83 C4 10              - add esp,10
29AEF659 - 85 C0                 - test eax,eax
29AEF65B - 7E 0C                 - jle 29AEF669


// ORIGINAL CODE - INJECTION POINT: 29AEF626
29AEF5D6 - DFF1                  - fcomip st(0),st(1)
29AEF5D8 - DDD8                  - fstp st(0)
29AEF5DA - 76 44                 - jna 29AEF620 : [TheForest.exe+C687D9]
29AEF5DC - 0FB6 87 2C010000      - movzx eax,byte ptr [edi+0000012C]
29AEF5E3 - 85 C0                 - test eax,eax
29AEF5E5 - 75 39                 - jne 29AEF620 : [TheForest.exe+C687D9]
29AEF5E7 - D9 87 EC000000        - fld dword ptr [edi+000000EC]
29AEF5ED - DD 9D 70FFFFFF        - fstp qword ptr [ebp-00000090]
29AEF5F3 - D9 05 C8DC5129        - fld dword ptr [2951DCC8] : [(float)6.0000]
29AEF5F9 - DD 9D 68FFFFFF        - fstp qword ptr [ebp-00000098]

29AEF5FF: E8 64 1F FA FF        -  call 29A91568
29AEF604: DD 85 70 FF FF FF     -  fld qword ptr [ebp-00000090]
29AEF60A: DD 85 68 FF FF FF     -  fld qword ptr [ebp-00000098]
29AEF610: D9 C9                 -  fxch st(1)
29AEF612: D9 CA                 -  fxch st(2)
29AEF614: DE C9                 -  fmulp st(1),st(0)
29AEF616: DE C1                 -  faddp 
29AEF618: D9 9F EC 00 00 00     -  fstp dword ptr [edi+000000EC]
29AEF61E: EB 0C                 -  jmp 29AEF62C
29AEF620: D9 87 F4 00 00 00     -  fld dword ptr [edi+000000F4]
// ---------- INJECTING HERE ----------
29AEF626: D9 9F EC 00 00 00     -  fstp dword ptr [edi+000000EC]
// ---------- DONE INJECTING  ----------
29AEF62C: 0F B6 87 32 01 00 00  -  movzx eax,byte ptr [edi+00000132]
29AEF633: 85 C0                 -  test eax,eax
29AEF635: 74 32                 -  je 29AEF669
29AEF637: 8B 05 70 5D 05 03     -  mov eax,[03055D70]
29AEF63D: 8B 40 34              -  mov eax,[eax+34]
29AEF640: 8B C8                 -  mov ecx,eax
29AEF642: 39 09                 -  cmp [ecx],ecx
29AEF644: 8B 40 78              -  mov eax,[eax+78]
29AEF647: 83 EC 0C              -  sub esp,0C
29AEF64A: 50                    -  push eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>107</ID>
      <Description>"INVENTORY (risen went using,throwing,etc...)"</Description>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
registersymbol(itemsaob)
aobscan(itemsaob,85 C0 7C 13 8B xx xx 8B xx xx 2B xx xx 89 xx xx B8 xx xx 00 00 EB 02 33 C0 C9 C3 00 00 00 00 00 00) //
//
itemsaob+A:
  db 03 4D 0C

{
FOR MOV
itemsaob+7:
 mov [ebp+0C],#1337
 nop
 nop
}

{
code:
  sub ecx,[ebp+0C]
  mov [eax+0C],ecx
  jmp return
}

[DISABLE]
itemsaob+A:
  db 2B 4D 0C

unregistersymbol(itemsaob)


{
//AOB +A HEX
//85 C0 7C 13 8B xx xx 8B xx xx 2B xx xx 89 xx xx B8 xx xx 00 00 EB 02 33 C0 C9 C3 00 00 00 00 00 00
--------------------FOR AOB----------------------
509043D7 - 85 C0                 - test eax,eax
509043D9 - 7C 13                 - jnge 509043EE
509043DB - 8B 45 08              - mov eax,[ebp+08]
509043DE - 8B 48 0C              - mov ecx,[eax+0C]
509043E1 - 2B 4D 0C              - sub ecx,[ebp+0C] --------------------------1target ADD
509043E4 - 89 48 0C              - mov [eax+0C],ecx  -----------------------------------for MOV
509043E7 - B8 01000000           - mov eax,00000001
509043EC - EB 02                 - jmp 509043F0
509043EE - 33 C0                 - xor eax,eax
509043F0 - C9                    - leave
509043F1 - C3                    - ret
509043F2 - 00 00                 - add [eax],al
509043F4 - 00 00                 - add [eax],al
509043F6 - 00 00                 - add [eax],al

//EB F2 68 8C 00 00 00 EB EB 68 AC 00 00 00 EB E4 68 CB 00 00 00 EB DD 00 00 55 8B EC 83 EC 08 8B 45 08 8B 40 0C 2B 45 0C 85 C0 7C 13 8B 45 08 8B 48 0C 2B 4D 0C 89 48 0C B8 01 00 00 00 EB 02 33 C0 C9 C3 00 00 00 00 00 00 BA 64 D4 2D 29 E9 A6 8D E8 B3
--------------------FOR AOB IF NOT WORKIG----------------------
509043AF - EB F2                 - jmp 509043A3
509043B1 - 68 8C000000           - push 0000008C
509043B6 - EB EB                 - jmp 509043A3
509043B8 - 68 AC000000           - push 000000AC
509043BD - EB E4                 - jmp 509043A3
509043BF - 68 CB000000           - push 000000CB
509043C4 - EB DD                 - jmp 509043A3
509043C6 - 00 00                 - add [eax],al
509043C8 - 55                    - push ebp
509043C9 - 8B EC                 - mov ebp,esp
509043CB - 83 EC 08              - sub esp,08
509043CE - 8B 45 08              - mov eax,[ebp+08]
509043D1 - 8B 40 0C              - mov eax,[eax+0C]
509043D4 - 2B 45 0C              - sub eax,[ebp+0C]
509043D7 - 85 C0                 - test eax,eax
509043D9 - 7C 13                 - jnge 509043EE
509043DB - 8B 45 08              - mov eax,[ebp+08]
509043DE - 8B 48 0C              - mov ecx,[eax+0C]
509043E1 - 2B 4D 0C              - sub ecx,[ebp+0C]
509043E4 - 89 48 0C              - mov [eax+0C],ecx
509043E7 - B8 01000000           - mov eax,00000001
509043EC - EB 02                 - jmp 509043F0
509043EE - 33 C0                 - xor eax,eax
509043F0 - C9                    - leave
509043F1 - C3                    - ret
509043F2 - 00 00                 - add [eax],al
509043F4 - 00 00                 - add [eax],al
509043F6 - 00 00                 - add [eax],al
509043F8 - BA 64D42D29           - mov edx,292DD464 : [2451DFB8]
509043FD - E9 A68DE8B3           - jmp 0478D1A8
















// ORIGINAL CODE - INJECTION POINT: 509043E1

509043C8: 55                    -  push ebp
509043C9: 8B EC                 -  mov ebp,esp
509043CB: 83 EC 08              -  sub esp,08
509043CE: 8B 45 08              -  mov eax,[ebp+08]
509043D1: 8B 40 0C              -  mov eax,[eax+0C]
509043D4: 2B 45 0C              -  sub eax,[ebp+0C]
509043D7: 85 C0                 -  test eax,eax
509043D9: 7C 13                 -  jnge 509043EE
509043DB: 8B 45 08              -  mov eax,[ebp+08]
509043DE: 8B 48 0C              -  mov ecx,[eax+0C]
// ---------- INJECTING HERE ----------
509043E1: 2B 4D 0C              -  sub ecx,[ebp+0C]
509043E4: 89 48 0C              -  mov [eax+0C],ecx
// ---------- DONE INJECTING  ----------
509043E7: B8 01 00 00 00        -  mov eax,00000001
509043EC: EB 02                 -  jmp 509043F0
509043EE: 33 C0                 -  xor eax,eax
509043F0: C9                    -  leave 
509043F1: C3                    -  ret 
509043F2: 00 00                 -  add [eax],al
509043F4: 00 00                 -  add [eax],al
509043F6: 00 00                 -  add [eax],al
509043F8: BA 64 D4 2D 29        -  mov edx,292DD464
509043FD: E9 A6 8D E8 B3        -  jmp 0478D1A8
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>109</ID>
      <Description>"GOD (after been hited! hit,mushrooms,falldown,etc...)"</Description>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(truegod,$1000)
registersymbol(truegod)
registersymbol(truegodaob) 
aobscan(truegodaob,50 DB 04 24 D9 1C 24 D9 04 24 83 C4 xx DE E9 D9 xx xx xx 00 00 8B xx xx xx xx xx 0F xx xx xx xx 00 00 85 C0 0F 85 93 00 00 00 D9 xx xx xx 00 00 D9 EE DF F1 DD D8 0F 8A 81 00 00 00 0F 83 7B 00 00 00) //
//     fstp dword ptr [edi+000000F0]
truegod:
  mov [edi+000000F0],(float)100.0
  jmp truegodaob+15

//
truegodaob+F:
  jmp truegod
  nop

[DISABLE]
truegodaob+F:
  db D9 9F F0 00 00 00

unregistersymbol(truegod)
unregistersymbol(truegodaob)
dealloc(truegod)

{
//AOB +F HEX
//50 DB 04 24 D9 1C 24 D9 04 24 83 C4 xx DE E9 D9 xx xx xx 00 00 8B xx xx xx xx xx 0F xx xx xx xx 00 00 85 C0 0F 85 93 00 00 00 D9 xx xx xx 00 00 D9 EE DF F1 DD D8 0F 8A 81 00 00 00 0F 83 7B 00 00 00
---------------------------------FOR AOB----------------------
5095F799 - 50                    - push eax
5095F79A - DB 04 24              - fild dword ptr [esp]
5095F79D - D9 1C 24              - fstp dword ptr [esp]
5095F7A0 - D9 04 24              - fld dword ptr [esp]
5095F7A3 - 83 C4 04              - add esp,04
5095F7A6 - DEE9                  - fsubp st(1),st(0)
5095F7A8 - D9 9F F0000000        - fstp dword ptr [edi+000000F0]------------------target
5095F7AE - 8B 05 605D0503        - mov eax,[03055D60] : [69C9AE10]
5095F7B4 - 0FB6 80 94000000      - movzx eax,byte ptr [eax+00000094]
5095F7BB - 85 C0                 - test eax,eax
5095F7BD - 0F85 93000000         - jne 5095F856
5095F7C3 - D9 87 F0000000        - fld dword ptr [edi+000000F0]
5095F7C9 - D9EE                  - fldz
5095F7CB - DFF1                  - fcomip st(0),st(1)
5095F7CD - DDD8                  - fstp st(0)
5095F7CF - 0F8A 81000000         - jp 5095F856
5095F7D5 - 0F83 7B000000         - jae 5095F856



// ORIGINAL CODE - INJECTION POINT: 5095F7A8

5095F789: B8 38 B7 EE 23        -  mov eax,23EEB738
5095F78E: D9 18                 -  fstp dword ptr [eax]
5095F790: D9 87 F0 00 00 00     -  fld dword ptr [edi+000000F0]
5095F796: 8B 45 0C              -  mov eax,[ebp+0C]
5095F799: 50                    -  push eax
5095F79A: DB 04 24              -  fild dword ptr [esp]
5095F79D: D9 1C 24              -  fstp dword ptr [esp]
5095F7A0: D9 04 24              -  fld dword ptr [esp]
5095F7A3: 83 C4 04              -  add esp,04
5095F7A6: DE E9                 -  fsubp st(1),st(0)
// ---------- INJECTING HERE ----------
5095F7A8: D9 9F F0 00 00 00     -  fstp dword ptr [edi+000000F0]
// ---------- DONE INJECTING  ----------
5095F7AE: 8B 05 60 5D 05 03     -  mov eax,[03055D60]
5095F7B4: 0F B6 80 94 00 00 00  -  movzx eax,byte ptr [eax+00000094]
5095F7BB: 85 C0                 -  test eax,eax
5095F7BD: 0F 85 93 00 00 00     -  jne 5095F856
5095F7C3: D9 87 F0 00 00 00     -  fld dword ptr [edi+000000F0]
5095F7C9: D9 EE                 -  fldz 
5095F7CB: DF F1                 -  fcomip st(0),st(1)
5095F7CD: DD D8                 -  fstp st(0)
5095F7CF: 0F 8A 81 00 00 00     -  jp 5095F856
5095F7D5: 0F 83 7B 00 00 00     -  jae 5095F856
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>112</ID>
      <Description>"DYNAMITE GOD (after been hited!)"</Description>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(dynagod,$1000)
registersymbol(dynagod)
registersymbol(dynagodaob)
aobscan(dynagodaob,DF F1 DD D8 0F 86 F0 00 00 00 D9 xx xx xx 00 00 D9 xx xx xx xx xx DE E9 D9 xx xx xx 00 00 83 xx xx 57 E8 xx xx xx xx 83 xx xx D9 xx xx xx 00 00 D9 E8 DF F1 DD D8 76 05 E9 C1 01 00 00) //
//     fstp dword ptr [edi+000000F0]
dynagod:
  mov [edi+000000F0],(float)100.0
  jmp dynagodaob+1E

dynagodaob+18:
  jmp dynagod
  nop

[DISABLE]
dynagodaob+18:
  db D9 9F F0 00 00 00

unregistersymbol(dynagodaob)
unregistersymbol(dynagod)
dealloc(dynagod)

{
//AOB  +18 hex
//DF F1 DD D8 0F 86 F0 00 00 00 D9 xx xx xx 00 00 D9 xx xx xx xx xx DE E9 D9 xx xx xx 00 00 83 xx xx 57 E8 xx xx xx xx 83 xx xx D9 xx xx xx 00 00 D9 E8 DF F1 DD D8 76 05 E9 C1 01 00 00
------------------------FOR AOB-------------------------------------
5098C9E3 - DFF1                  - fcomip st(0),st(1)
5098C9E5 - DDD8                  - fstp st(0)
5098C9E7 - 0F86 F0000000         - jbe 5098CADD
5098C9ED - D9 87 F0000000        - fld dword ptr [edi+000000F0]
5098C9F3 - D9 05 78437693        - fld dword ptr [93764378] : [(float)25.0000]
5098C9F9 - DEE9                  - fsubp st(1),st(0)
5098C9FB - D9 9F F0000000        - fstp dword ptr [edi+000000F0]----------------------target
5098CA01 - 83 EC 0C              - sub esp,0C
5098CA04 - 57                    - push edi
5098CA05 - E8 6630FDFF           - call 5095FA70
5098CA0A - 83 C4 10              - add esp,10
5098CA0D - D9 87 F0000000        - fld dword ptr [edi+000000F0]
5098CA13 - D9E8                  - fld1
5098CA15 - DFF1                  - fcomip st(0),st(1)
5098CA17 - DDD8                  - fstp st(0)
5098CA19 - 76 05                 - jna 5098CA20 : [TheForest.exe+6E878B]
5098CA1B - E9 C1010000           - jmp 5098CBE1


// ORIGINAL CODE - INJECTION POINT: 5098C9FB
5098C9C8 - C9                    - leave
5098C9C9 - C3                    - ret
5098C9CA - 00 00                 - add [eax],al
5098C9CC - 00 00                 - add [eax],al
5098C9CE - 00 00                 - add [eax],al
5098C9D0 - 55                    - push ebp
5098C9D1 - 8B EC                 - mov ebp,esp
5098C9D3 - 57                    - push edi

5098C9D4: 83 EC 04              -  sub esp,04
5098C9D7: 8B 7D 08              -  mov edi,[ebp+08]
5098C9DA: D9 45 0C              -  fld dword ptr [ebp+0C]
5098C9DD: D9 05 70 43 76 93     -  fld dword ptr [93764370]
5098C9E3: DF F1                 -  fcomip st(0),st(1)
5098C9E5: DD D8                 -  fstp st(0)
5098C9E7: 0F 86 F0 00 00 00     -  jbe 5098CADD
5098C9ED: D9 87 F0 00 00 00     -  fld dword ptr [edi+000000F0]
5098C9F3: D9 05 78 43 76 93     -  fld dword ptr [93764378]
5098C9F9: DE E9                 -  fsubp st(1),st(0)
// ---------- INJECTING HERE ----------
5098C9FB: D9 9F F0 00 00 00     -  fstp dword ptr [edi+000000F0]
// ---------- DONE INJECTING  ----------
5098CA01: 83 EC 0C              -  sub esp,0C
5098CA04: 57                    -  push edi
5098CA05: E8 66 30 FD FF        -  call 5095FA70
5098CA0A: 83 C4 10              -  add esp,10
5098CA0D: D9 87 F0 00 00 00     -  fld dword ptr [edi+000000F0]
5098CA13: D9 E8                 -  fld1 
5098CA15: DF F1                 -  fcomip st(0),st(1)
5098CA17: DD D8                 -  fstp st(0)
5098CA19: 76 05                 -  jna 5098CA20
5098CA1B: E9 C1 01 00 00        -  jmp 5098CBE1
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>122</ID>
      <Description>"1 resource for build (Updated/Corrected AOB)"</Description>
      <LastState Activated="0"/>
      <Color>00A600</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//alloc(logsneed,$1000)
//registersymbol(logsneed)
registersymbol(logsneedaob)
aobscan(logsneedaob,0F 86 E8 03 00 00 8D xx xx xx 8B xx 8B xx xx 8B xx xx 3B xx 0F 8D CD 03 00 00 8B xx xx 40 89 xx xx 83 xx xx FF xx xx E8 xx xx 00 00 83 xx xx 8B xx xx 83 xx xx 50 E8 xx xx xx xx 83 xx xx 8B xx xx 83 xx xx 50 39 00 E8 xx xx xx xx 83 xx xx 89 xx xx 8B xx xx 85 C0 0F 84 60 03 00 00) //
//    mov [ebx+0C],eax
{
logsneed:
  mov [ebx+0C],ecx
  sub esp,0C
  jmp logsneedaob+24
}
logsneedaob+1E:
  db 89 4B 0C
{
  jmp logsneed
  nop
}

[DISABLE]
logsneedaob+1E:
  db 89 43 0C

unregistersymbol(logsneedaob)
//unregistersymbol(logsneed)
//dealloc(logsneed)

{
//AOB +1E HEX
//0F 86 E8 03 00 00 8D xx xx xx 8B xx 8B xx xx 8B xx xx 3B xx 0F 8D CD 03 00 00 8B xx xx 40 89 xx xx 83 xx xx FF xx xx E8 xx xx 00 00 83 xx xx 8B xx xx 83 xx xx 50 E8 xx xx xx xx 83 xx xx 8B xx xx 83 xx xx 50 39 00 E8 xx xx xx xx 83 xx xx 89 xx xx 8B xx xx 85 C0 0F 84 60 03 00 00
//0F 86 E8 03 00 00 8D 44 90 10 8B 18 8B 43 0C 8B 49 0C 3B C1 0F 8D CD 03 00 00 8B 43 0C 40 89 43 0C 83 EC 0C FF 75 08 E8 78 04 00 00 83 C4 10 8B 43 08 83 EC 0C 50 E8 A1 71 78 B9 83 C4 10 8B 40 08 83 EC 0C 50 39 00 E8 E8 44 2C 92 83 C4 10 89 45 F4 8B 45 F4 85 C0 0F 84 60 03 00 00
---------------------------------FOR AOB-----------------------------------
744F9B1C - 0F86 E8030000         - jbe 744F9F0A
744F9B22 - 8D 44 90 10           - lea eax,[eax+edx*4+10]
744F9B26 - 8B 18                 - mov ebx,[eax]
744F9B28 - 8B 43 0C              - mov eax,[ebx+0C]
744F9B2B - 8B 49 0C              - mov ecx,[ecx+0C]
744F9B2E - 3B C1                 - cmp eax,ecx
744F9B30 - 0F8D CD030000         - jnl 744F9F03
744F9B36 - 8B 43 0C              - mov eax,[ebx+0C]
744F9B39 - 40                    - inc eax
744F9B3A - 89 43 0C              - mov [ebx+0C],eax -----------------------------------target
744F9B3D - 83 EC 0C              - sub esp,0C
744F9B40 - FF 75 08              - push [ebp+08]
744F9B43 - E8 78040000           - call 744F9FC0
744F9B48 - 83 C4 10              - add esp,10
744F9B4B - 8B 43 08              - mov eax,[ebx+08]
744F9B4E - 83 EC 0C              - sub esp,0C
744F9B51 - 50                    - push eax
744F9B52 - E8 F9FF26B9           - call 2D769B50
744F9B57 - 83 C4 10              - add esp,10
744F9B5A - 8B 40 08              - mov eax,[eax+08]
744F9B5D - 83 EC 0C              - sub esp,0C
744F9B60 - 50                    - push eax
744F9B61 - 39 00                 - cmp [eax],eax
---------------------------------------------------------BAD?
744F9B63 - E8 38E5FFFF           - call 744F80A0
744F9B68 - 83 C4 10              - add esp,10
744F9B6B - 89 45 F4              - mov [ebp-0C],eax
744F9B6E - 8B 45 F4              - mov eax,[ebp-0C]
744F9B71 - 85 C0                 - test eax,eax
744F9B73 - 0F84 60030000         - je 744F9ED9


// ORIGINAL CODE - INJECTION POINT: 744F9B3A

744F9B19: 39 50 0C              -  cmp [eax+0C],edx
744F9B1C: 0F 86 E8 03 00 00     -  jbe 744F9F0A
744F9B22: 8D 44 90 10           -  lea eax,[eax+edx*4+10]
744F9B26: 8B 18                 -  mov ebx,[eax]
744F9B28: 8B 43 0C              -  mov eax,[ebx+0C]
744F9B2B: 8B 49 0C              -  mov ecx,[ecx+0C]
744F9B2E: 3B C1                 -  cmp eax,ecx
744F9B30: 0F 8D CD 03 00 00     -  jnl 744F9F03
744F9B36: 8B 43 0C              -  mov eax,[ebx+0C]
744F9B39: 40                    -  inc eax
// ---------- INJECTING HERE ----------
744F9B3A: 89 43 0C              -  mov [ebx+0C],eax
// ---------- DONE INJECTING  ----------
744F9B3D: 83 EC 0C              -  sub esp,0C
744F9B40: FF 75 08              -  push [ebp+08]
744F9B43: E8 78 04 00 00        -  call 744F9FC0
744F9B48: 83 C4 10              -  add esp,10
744F9B4B: 8B 43 08              -  mov eax,[ebx+08]
744F9B4E: 83 EC 0C              -  sub esp,0C
744F9B51: 50                    -  push eax
744F9B52: E8 F9 FF 26 B9        -  call 2D769B50
744F9B57: 83 C4 10              -  add esp,10
744F9B5A: 8B 40 08              -  mov eax,[eax+08]
744F9B5D: 83 EC 0C              -  sub esp,0C
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>130</ID>
      <Description>"Unlim. LOGs in hand (Updated/Corrected AOB)"</Description>
      <LastState Activated="0"/>
      <Color>00AA00</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
registersymbol(resunlaob)
aobscan(resunlaob,55 8B xx xx xx xx 81 xx xx xx 00 00 8B xx xx 0F xx xx xx 85 C0 0F 85 21 01 00 00 8B xx xx 85 C0 0F 8E 0F 01 00 00 8B xx xx 48 89 xx xx 8B xx xx 8B xx xx 39 xx xx 0F 86 D4 02 00 00) //
//
resunlaob+13:
  db 85 C0 0F 84 21 01 00 00

[DISABLE]
resunlaob+13:
  db 85 C0 0F 85 21 01 00 00

unregistersymbol(resunlaob)


{
//AOB +13 hex
//55 8B xx xx xx xx 81 xx xx xx 00 00 8B xx xx 0F xx xx xx 85 C0 0F 85 21 01 00 00 8B xx xx 85 C0 0F 8E 0F 01 00 00 8B xx xx 48 89 xx xx 8B xx xx 8B xx xx 39 xx xx 0F 86 D4 02 00 00
//55 8B EC 53 57 56 81 EC 8C 00 00 00 8B 75 08 0F B6 45 0C 85 C0 0F 85 21 01 00 00 8B 46 2C 85 C0 0F 8E 0F 01 00 00 8B 46 2C 48 89 46 2C 8B 46 18 8B 4E 2C 39 48 0C 0F 86 D4 02 00 00
----------------------------FOR AOB-------------------------

51D42C50 - 55                    - push ebp
51D42C51 - 8B EC                 - mov ebp,esp
51D42C53 - 53                    - push ebx
51D42C54 - 57                    - push edi
51D42C55 - 56                    - push esi
51D42C56 - 81 EC 8C000000        - sub esp,0000008C
51D42C5C - 8B 75 08              - mov esi,[ebp+08]
51D42C5F - 0FB6 45 0C            - movzx eax,byte ptr [ebp+0C]
51D42C63 - 85 C0                 - test eax,eax--------------------------------------target&lt;
51D42C65 - 0F85 21010000         - jne 51D42D8C
51D42C6B - 8B 46 2C              - mov eax,[esi+2C]
51D42C6E - 85 C0                 - test eax,eax
51D42C70 - 0F8E 0F010000         - jng 51D42D85--------------------------------------target&gt;
51D42C76 - 8B 46 2C              - mov eax,[esi+2C]
51D42C79 - 48                    - dec eax
51D42C7A - 89 46 2C              - mov [esi+2C],eax
51D42C7D - 8B 46 18              - mov eax,[esi+18]
51D42C80 - 8B 4E 2C              - mov ecx,[esi+2C]
51D42C83 - 39 48 0C              - cmp [eax+0C],ecx
51D42C86 - 0F86 D4020000         - jbe 51D42F60


// ORIGINAL CODE - INJECTION POINT: 51D42C65

51D42C4E: 00 00              -  add [eax],al
51D42C50: 55                 -  push ebp
51D42C51: 8B EC              -  mov ebp,esp
51D42C53: 53                 -  push ebx
51D42C54: 57                 -  push edi
51D42C55: 56                 -  push esi
51D42C56: 81 EC 8C 00 00 00  -  sub esp,0000008C
51D42C5C: 8B 75 08           -  mov esi,[ebp+08]
51D42C5F: 0F B6 45 0C        -  movzx eax,byte ptr [ebp+0C]
// ---------- INJECTING HERE ----------
51D42C63: 85 C0              -  test eax,eax
51D42C65: 0F 85 21 01 00 00  -  jne 51D42D8C
// ---------- DONE INJECTING  ----------
51D42C6B: 8B 46 2C           -  mov eax,[esi+2C]
51D42C6E: 85 C0              -  test eax,eax
51D42C70: 0F 8E 0F 01 00 00  -  jng 51D42D85
51D42C76: 8B 46 2C           -  mov eax,[esi+2C]
51D42C79: 48                 -  dec eax
51D42C7A: 89 46 2C           -  mov [esi+2C],eax
51D42C7D: 8B 46 18           -  mov eax,[esi+18]
51D42C80: 8B 4E 2C           -  mov ecx,[esi+2C]
51D42C83: 39 48 0C           -  cmp [eax+0C],ecx
51D42C86: 0F 86 D4 02 00 00  -  jbe 51D42F60
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>17</Key>
            <Key>8</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>17</Key>
            <Key>220</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>fix hunger Code :fstp dword ptr [eax+00000120]</Description>
      <Address>29AEFBCC</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>FC</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>98</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C6</Byte>
        <Byte>40</Byte>
        <Byte>3C</Byte>
        <Byte>01</Byte>
        <Byte>C9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>!true hunger Code :fstp dword ptr [edi+00000114]</Description>
      <Address>508D7A80</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>5E</Byte>
        <Byte>2E</Byte>
        <Byte>29</Byte>
        <Byte>DE</Byte>
        <Byte>E9</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>14</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>78</Byte>
        <Byte>8B</Byte>
        <Byte>C8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>TRUE energy Code :fstp dword ptr [edi+000000F4]</Description>
      <Address>508D7AEE</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>DE</Byte>
        <Byte>E9</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>F4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>14</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>MANY JMPS energy Code :fstp dword ptr [edi+000000F4]</Description>
      <Address>508D7B47</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>C9</Byte>
        <Byte>DE</Byte>
        <Byte>C1</Byte>
        <Byte>DE</Byte>
        <Byte>E9</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>F4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>14</Byte>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>F4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>THIRST TRUE Code :fstp dword ptr [edi+00000118]</Description>
      <Address>29AEEEE5</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>10</Byte>
        <Byte>DE</Byte>
        <Byte>F9</Byte>
        <Byte>DE</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>18</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>18</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ITEMS Code :mov [eax+0C],ecx</Description>
      <Address>509043E4</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>0C</Byte>
        <Byte>2B</Byte>
        <Byte>4D</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>B8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ITEMS SUB/ADD Code :sub ecx,[ebp+0C]</Description>
      <Address>509043E1</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>48</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>4D</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>0C</Byte>
        <Byte>B8</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>HEALTH Code :fstp dword ptr [edi+000000F0]</Description>
      <Address>50901DA7</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>04</Byte>
        <Byte>DE</Byte>
        <Byte>C9</Byte>
        <Byte>DE</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E9</Byte>
        <Byte>68</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>MANY JMPS HEALTH Code :fstp dword ptr [edi+000000F0]</Description>
      <Address>29AEF4D1</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>05</Byte>
        <Byte>98</Byte>
        <Byte>DC</Byte>
        <Byte>51</Byte>
        <Byte>29</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>TRUE GOD Code :fstp dword ptr [edi+000000F0]</Description>
      <Address>5095F7A8</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>04</Byte>
        <Byte>DE</Byte>
        <Byte>E9</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>05</Byte>
        <Byte>60</Byte>
        <Byte>5D</Byte>
        <Byte>05</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>SMALL FATIQUE Code :fstp dword ptr [edi+000000EC]</Description>
      <Address>29AEF626</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>87</Byte>
        <Byte>F4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>EC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>87</Byte>
        <Byte>32</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>TRUE FATIQUE Code :fstp dword ptr [edi+000000EC]</Description>
      <Address>29AEF618</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>CA</Byte>
        <Byte>DE</Byte>
        <Byte>C9</Byte>
        <Byte>DE</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>EC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>0C</Byte>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>F4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>FAQ? Code :fld dword ptr [edi+000000EC]</Description>
      <Address>29AEF5B4</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>D2</Byte>
        <Byte>DA</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>EC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>EE</Byte>
        <Byte>DF</Byte>
        <Byte>F1</Byte>
        <Byte>DD</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>TAKE LOG Code :mov [edi+2C],eax</Description>
      <Address>5095744A</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>2C</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>18</Byte>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>LOG TO BUILD Code :mov [esi+2C],eax</Description>
      <Address>509576EA</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>2C</Byte>
        <Byte>48</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>18</Byte>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>TRUE GOD DYNAMITE Code :fstp dword ptr [edi+000000F0]</Description>
      <Address>5098C9FB</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>43</Byte>
        <Byte>76</Byte>
        <Byte>93</Byte>
        <Byte>DE</Byte>
        <Byte>E9</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>0C</Byte>
        <Byte>57</Byte>
        <Byte>E8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>FATIQUE+ Code :fstp dword ptr [eax+000000EC]</Description>
      <Address>5090AD0C</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>D9</Byte>
        <Byte>45</Byte>
        <Byte>0C</Byte>
        <Byte>DE</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>98</Byte>
        <Byte>EC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C9</Byte>
        <Byte>C3</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>NEED LOGS Code :mov [eax],ecx</Description>
      <Address>048000B1</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>05</Byte>
        <Byte>03</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>C9</Byte>
        <Byte>C3</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>NEED IN BUILDING LOGS Code :mov [ebx+0C],eax change it to ecx (how many need)</Description>
      <Address>5097EB62</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>0C</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>43</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>0C</Byte>
        <Byte>FF</Byte>
        <Byte>75</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>dynagodaob</Name>
      <Address>50F26553</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>truegodaob</Name>
      <Address>744E52A1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>returnhunger</Name>
      <Address>51CEEBFE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hungeraob</Name>
      <Address>51CEEBDA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>energyaob</Name>
      <Address>51CEEC40</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>thirstaob</Name>
      <Address>04BCC192</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fatiqueaob</Name>
      <Address>04BCC8E8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemsaob</Name>
      <Address>51D019A7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>logsneedaob</Name>
      <Address>51D620BC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>resunlaob</Name>
      <Address>51D42C4B</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>8B 46 2C 48 89 46 2C 8B 46 18 8B 4E 2C
</Comments>
</CheatTable>
