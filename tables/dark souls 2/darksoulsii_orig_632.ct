<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>12263</ID>
      <Description>"reset bonfire intensity"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//Reset bonfire intensity, code injection:
alloc(newmem, $1000,"DarkSoulsII.exe"+1D3907)
label(returnhere)
newmem:
mov al,0x01
mov [edx],al
mov eax,[esi+18]
jmp returnhere
"DarkSoulsII.exe"+1D3907:
jmp newmem
returnhere:
[DISABLE]
dealloc(newmem)
"DarkSoulsII.exe"+1D3907:
  mov [edx],al
  mov eax,[esi+18]
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>113</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>12252</ID>
      <Description>"boost souls"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//Boost souls, code injection:
alloc(newmem, $1000,"DarkSoulsII.exe"+354A8D)
label(donothing)
label(returnhere)
newmem:
sub eax,[ecx+000000E8]        //&lt;-- Don't touch
cmp eax,1                     //The number to the left is the first point for boosting (FPB) - REMEMBER ALL NUMBERS ARE IN HEXADECIMAL
jl donothing                  //Don't touch
imul eax,2                    //The number to the left is the first boost level (FBL)
cmp eax,320                   //The number to the left is the second point for boosting by the first boost level (SPB*FBL), ex: 400*2 = 320
jl donothing                  //Don't touch
imul eax,5                    //The number to the left is the second boost level (SBL), but the effect will be SBL*FBL, ex: 5*2 = 10
cmp eax,186A0                 //The number to the left is the third point for boosting by the SBL*FBL (TPB*SBL*FBL), ex: 10000*5*2 = 186A0
jl donothing                  //Don't touch
imul eax,2                    //The number to the left is the third boost level (TBL), but the effect will be TBL*SBL*FBL, ex: 2*5*2 = 20
donothing:                    //Don't touch --&gt;
add eax,[ecx+000000E8]
mov [ecx+000000E8],eax
jmp returnhere
"DarkSoulsII.exe"+354A8D:
jmp newmem
returnhere:
nop
[DISABLE]
dealloc(newmem)
"DarkSoulsII.exe"+354A8D:
  mov [ecx+000000E8],eax
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>114</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>12261</ID>
      <Description>"merchant infinite stock"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//Merchants infinite stock, code injection:
alloc(newmem, $1000,"DarkSoulsII.exe"+1F56A0)
label(returnhere)
newmem:
mov al,0xFF
mov [edi+1A],dl
mov [edi+1B],al
jmp returnhere
"DarkSoulsII.exe"+1F56A0:
jmp newmem
returnhere:
nop
[DISABLE]
dealloc(newmem)
"DarkSoulsII.exe"+1F56A0:
  mov [edi+1A],dl
  mov [edi+1B],al
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>115</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
  </UserdefinedSymbols>
</CheatTable>
