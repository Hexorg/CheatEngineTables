<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Sun"</Description>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Infinite Sun (Set Sun to 99999 And Freeze it)"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(sunlightlabel)
registersymbol(sunlightlabel)
aobscan(sunlightaob,8b 86 60 55 00 00 33 c9)

sunlightaob:
sunlightlabel:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
mov eax,[esi+00005560]
mov [esi+00005560],0001869F
//place your code here


originalcode:
//mov eax,[esi+00005560]

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
sunlightlabel:
mov eax,[esi+00005560]
//Alt: db 8B 86 60 55 00 00
unregistersymbol(sunlightlabel)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Sun Reverse"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add [edi+00005560],ebx

exit:
jmp returnhere

"popcapgame1.exe"+1BA76:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+1BA76:
mov [edi+00005560],esi
//Alt: db 83 47 24 01 8B 47 24
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Sun"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>5560</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Money"</Description>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Infinite Money (Set Money to 999990 And Freeze it)"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(moneylabel)
registersymbol(moneylabel)
aobscan(moneyaob,8b 41 28 8d 4c 24 34)

moneyaob:
moneylabel:
jmp newmem
nop
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
mov eax,[ecx+28]
mov [ecx+28],0001869F
//place your code here


originalcode:
//mov eax,[ecx+28]
lea ecx,[esp+34]

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
moneylabel:
mov eax,[ecx+28]
lea ecx,[esp+34]
//Alt: db 8B 41 28 8D 4C 24 34
unregistersymbol(moneylabel)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Money Reverse"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add [ecx+28],eax
mov eax,[ecx+28]

exit:
jmp returnhere

"popcapgame1.exe"+8CAA5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+8CAA5:
sub [ecx+28],eax
mov eax,[ecx+28]
//Alt: db 83 47 24 01 8B 47 24
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Money"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>28</Offset>
            <Offset>82C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Plants"</Description>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Instant Refill Plants"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add dword ptr [edi+24],200
mov eax,[edi+24]

exit:
jmp returnhere

"popcapgame1.exe"+8728C:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+8728C:
add dword ptr [edi+24],01
mov eax,[edi+24]
//Alt: db 83 47 24 01 8B 47 24
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Infinite Plants Health"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add dword ptr [esi+40],0
mov ecx,[esi+40]

exit:
jmp returnhere

"popcapgame1.exe"+12FCF0:
jmp newmem
nop
nop
returnhere:

 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+12FCF0:
add dword ptr [esi+40],-04
mov ecx,[esi+40]
//Alt: db 89 4E 58 75 09
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Plants Shoot Faster"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+58],25
jne 0045F8D8

exit:
jmp returnhere

"popcapgame1.exe"+5F8CA:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+5F8CA:
mov [esi+58],ecx
jne 0045F8D8
//Alt: db 89 4E 58 75 09
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"============================"</Description>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Sunflows/Marigold Generate Items Faster"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [edi+58],20
mov eax,[edi]

exit:
jmp returnhere

"popcapgame1.exe"+5FA98:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+5FA98:
mov [edi+58],eax
mov eax,[edi]
//Alt: db 89 47 58 8B 07
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Invincible Plants"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//add dword ptr [esi+40],FC
mov ecx,[esi+40]

exit:
jmp returnhere

"popcapgame1.exe"+12FCF0:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+12FCF0:
add dword ptr [esi+40],FC
mov ecx,[esi+40]
//Alt: db 83 46 40 FC 8B 4E 40
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Hit Anywhere"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
jmp 0046ce17

exit:
jmp returnhere

"popcapgame1.exe"+6CDA7:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+6CDA7:
jne 0046CE58
//Alt: db 0F 85 AB 00 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Zombies"</Description>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Infinite Zombie Health"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add [ebp+000000C8],0

exit:
jmp returnhere

"popcapgame1.exe"+131319:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+131319:
mov [ebp+000000C8],edi
//Alt: db 89 BD C8 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"One Hit Kill Plants"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add dword ptr [esi+40],-1000
mov ecx,[esi+40]

exit:
jmp returnhere

"popcapgame1.exe"+12FCF0:
jmp newmem
nop
nop
returnhere:

 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+12FCF0:
add dword ptr [esi+40],-04
mov ecx,[esi+40]
//Alt: db 89 4E 58 75 09
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"============================"</Description>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"One Hit Kill Zombie"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ebp+000000C8],00

exit:
jmp returnhere

"popcapgame1.exe"+131319:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+131319:
mov [ebp+000000C8],edi
//Alt: db 89 BD C8 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"One Hit Destroy Zombie Stuff"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(zombiestufflabel)
registersymbol(zombiestufflabel)
aobscan(zombiestuffaob,29 86 dc 00 00 00)

zombiestuffaob:
zombiestufflabel:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
sub [esi+000000dc],eax
mov [esi+000000dc],0
//place your code here


originalcode:
//sub [esi+000000dc],eax

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
zombiestufflabel:
sub [esi+000000dc],eax
//Alt: db 29 86 DC 00 00 00
unregistersymbol(zombiestufflabel)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"One Hit Destroy Zombie Armor"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(zombiearmorlabel)
registersymbol(zombiearmorlabel)
aobscan(zombiearmoraob,89 8d d0 00 00 00)

zombiearmoraob:
zombiearmorlabel:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
mov [ebp+000000d0],0
//place your code here


originalcode:
//mov [ebp+000000d0],ecx

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
zombiearmorlabel:
mov [ebp+000000d0],ecx
//Alt: db 89 8D D0 00 00 00
unregistersymbol(zombiearmorlabel)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"One Hit Kills Unarmored Zombies"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(killzombielabel)
registersymbol(killzombielabel)
aobscan(killzombieaob,89 bd c8 00 00 00)

killzombieaob:
killzombielabel:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
mov [ebp+000000c8],0
//place your code here


originalcode:
//mov [ebp+000000c8],edi

exit:
jmp returnhere

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
killzombielabel:
mov [ebp+000000c8],edi
//Alt: db 89 BD C8 00 00 00
unregistersymbol(killzombielabel)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Zombies Explode When they Die"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//jne 00531488
exit:
jmp returnhere

"popcapgame1.exe"+13132C:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+13132C:
jne 00531488
//Alt: db 0F 85 56 01 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Slot"</Description>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Slot 1 Item"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>5C</Offset>
            <Offset>144</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Slot 2 Item"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>AC</Offset>
            <Offset>144</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Slot 3 Item"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>FC</Offset>
            <Offset>144</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Slot 4 Item"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>14C</Offset>
            <Offset>144</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Slot 5 Item"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>19C</Offset>
            <Offset>144</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Slot 6 Item"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>1EC</Offset>
            <Offset>144</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Slot 7 Item"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>23C</Offset>
            <Offset>144</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Slot 8 Item"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>28C</Offset>
            <Offset>144</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Slot 9 Item"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>2DC</Offset>
            <Offset>144</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Slot 10 Item"</Description>
          <Color>FF0000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>006AA00C</Address>
          <Offsets>
            <Offset>32C</Offset>
            <Offset>144</Offset>
            <Offset>768</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of mov [edi+00005560],esi</Description>
      <Address>0041BA76</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>1BA76</ModuleNameOffset>
      <Before>
        <Byte>D8</Byte>
        <Byte>7F</Byte>
        <Byte>0C</Byte>
        <Byte>2B</Byte>
        <Byte>F3</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>B7</Byte>
        <Byte>60</Byte>
        <Byte>55</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>5E</Byte>
        <Byte>C3</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [eax+5C],edx</Description>
      <Address>00489A86</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>89A86</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>F1</Byte>
        <Byte>6B</Byte>
        <Byte>F6</Byte>
        <Byte>33</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>50</Byte>
        <Byte>5C</Byte>
      </Actual>
      <After>
        <Byte>BA</Byte>
        <Byte>03</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [eax],FFFFFFFF</Description>
      <Address>00489AE0</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>89AE0</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>3B</Byte>
        <Byte>D1</Byte>
        <Byte>75</Byte>
        <Byte>0B</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
        <Byte>00</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>58</Byte>
        <Byte>FC</Byte>
        <Byte>EB</Byte>
        <Byte>0E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of nop </Description>
      <Address>00489AE0</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>89AE0</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>3B</Byte>
        <Byte>D1</Byte>
        <Byte>75</Byte>
        <Byte>0B</Byte>
      </Before>
      <Actual>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>58</Byte>
        <Byte>FC</Byte>
        <Byte>EB</Byte>
        <Byte>0E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of nop </Description>
      <Address>00489AE0</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>89AE0</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>3B</Byte>
        <Byte>D1</Byte>
        <Byte>75</Byte>
        <Byte>0B</Byte>
      </Before>
      <Actual>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>58</Byte>
        <Byte>FC</Byte>
        <Byte>EB</Byte>
        <Byte>0E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of nop </Description>
      <Address>00489AE0</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>89AE0</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>3B</Byte>
        <Byte>D1</Byte>
        <Byte>75</Byte>
        <Byte>0B</Byte>
      </Before>
      <Actual>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>58</Byte>
        <Byte>FC</Byte>
        <Byte>EB</Byte>
        <Byte>0E</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>InitializeSpeedhack</Name>
      <Address>57EFE70</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhack-i386.dll!InitializeSpeedhack</Name>
      <Address>57EFE70</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhack-i386.dll.InitializeSpeedhack</Name>
      <Address>57EFE70</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>realGetTickCount</Name>
      <Address>57FB630</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhack-i386.dll!realGetTickCount</Name>
      <Address>57FB630</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhack-i386.dll.realGetTickCount</Name>
      <Address>57FB630</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>realQueryPerformanceCounter</Name>
      <Address>57FB640</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhack-i386.dll!realQueryPerformanceCounter</Name>
      <Address>57FB640</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhack-i386.dll.realQueryPerformanceCounter</Name>
      <Address>57FB640</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhackversion_GetTickCount</Name>
      <Address>57EFD30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhack-i386.dll!speedhackversion_GetTickCount</Name>
      <Address>57EFD30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhack-i386.dll.speedhackversion_GetTickCount</Name>
      <Address>57EFD30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhackversion_QueryPerformanceCounter</Name>
      <Address>57EFDB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhack-i386.dll!speedhackversion_QueryPerformanceCounter</Name>
      <Address>57EFDB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>speedhack-i386.dll.speedhackversion_QueryPerformanceCounter</Name>
      <Address>57EFDB0</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
