<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Item ID-Name List Generator"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
function tohex(o) return string.format("%X",o) end
messageRepo = readQword('DarkSoulsIII.exe+46DC200')

function listItemsFromGroup(group)
  local messageRepoGroup = readQword(readQword(readQword(messageRepo+8))+group*8)
  if messageRepoGroup==0 then return 0 end

  local regionsCount =  readInteger(messageRepoGroup+0x0C)
  if regionsCount==0 then return 0 end

  local TableWithIndexesToStrings =  readQword(messageRepoGroup+0x18)

  local counter=0

  for i=0,regionsCount-1 do repeat
    local ID_low  = readInteger(messageRepoGroup+i*16+0x2C)
    local ID_hi   = readInteger(messageRepoGroup+i*16+0x30)
    local offset  = readInteger(messageRepoGroup+i*16+0x28)

    if group==0xC and (ID_low&lt;=0xF4DF8 ) then break end --skip bogus protector items
    if group==0xE and (ID_low&lt;=0x1716 )  then break end --skip bogus magic items

    for subID=ID_low,ID_hi do repeat
      local index=subID-ID_low+offset
      local StringTableIndex = readQword(TableWithIndexesToStrings+index*8)

      if StringTableIndex==0 then break end

        local name=AnsiToUtf8(readString(messageRepoGroup+StringTableIndex,200,true))
        local ID=subID
        if group==0xA then ID = (ID | 0x40000000) end --goods
        --if group==0xB then ID = (ID | 0x00000000) end --weapons
        if group==0xC then ID = (ID | 0x10000000) end --protectors
        if group==0xD then ID = (ID | 0x20000000) end --accessory
        if group==0xE then ID = (ID | 0x40000000) end --magic

        local IDh=string.format('%08X',ID)
        --local IDh=ID

        if globalList[ID] then -- skip duplicates
          --print(IDh,name,tohex(group),'already in group '..tohex(globalList[ID][2]),'with ID '..globalList[ID][1],globalList[ID][3])
        else
          print(IDh,name)
        end

        globalList[ID]={IDh,group,name}
        counter=counter+1
    until true end -- subID loop


  until true end -- regions loop
  return counter
end

function listIt()
  globalList={}
  print('Magic List:')
  print( 'Count: '..listItemsFromGroup(0xE) )

  print('')

  print('Goods List:')
  print( 'Count: '..listItemsFromGroup(0xA) )

  print('')

  print('Weapon List:')
  print( 'Count: '..listItemsFromGroup(0xB) )

  print('')

  print('Protector List:')
  print( 'Count: '..listItemsFromGroup(0xC) )

  print('')

  print('Accessory List:')
  print( 'Count: '..listItemsFromGroup(0xD) )

  print('')
end

if not syntaxcheck then listIt() end

{$asm}

[DISABLE]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
