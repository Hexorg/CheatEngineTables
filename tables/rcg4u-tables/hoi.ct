<CheatEntries>
    <CheatEntry>
      <ID>402</ID>
      <Description>"Activate Trainer"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version:
  Date   : 2016-06-06
  Author : omoe









  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

//

aobscanmodule(base,hoi4.exe,8B 83 AC 03 00 00 6A 00) // should be unique
alloc(newmem,$1000)

registersymbol(PlayerID)
label(PlayerID)
registersymbol(PlayerID2)
label(PlayerID2)
registersymbol(PlayerID3)
label(PlayerID3)
label(code)
label(return)

newmem:
{

mov eax,[edi+c]
mov [PlayerID3],eax
lea eax,[edi+334]
mov [PlayerID2],eax
  mov eax,[edi+00000478]
}
code:
mov eax,[ebx+c]
mov [PlayerID3],eax

//

mov eax,[ebx+39c]
mov [PlayerID3+10],eax



mov eax,[ebx+398]
lea eax,[eax+a0]
mov [PlayerID3+18],eax

mov [PlayerID2],ebx
  mov eax,[ebx+000003AC]
  mov [PlayerID],eax



  jmp return
PlayerID2:
dd 0
PlayerID:
dd 0
PlayerID3:
dd 0
base:
  jmp code
  nop
return:
registersymbol(base)
/////////////// ["state_name"] }

aobscanmodule(selectedid,hoi4.exe,8B 70 20 83 C6 14 8B 03 8D 4D ) // should be unique
alloc(newmem1,$1000)

label(return1)
registersymbol(CityCountryId)
label(CityCountryId)
newmem1:
 mov esi,[eax+80]
 mov [CityCountryId],esi
  mov esi,[eax+20]
  add esi,14
  jmp return1
CityCountryId:
dd 0
selectedid:
  jmp newmem1
  nop
return1:
registersymbol(selectedid)


//////////////////push hoi4.exe+E9DAB4 { ["STATE_RESISTANCE_GUI"] }

aobscanmodule(getidprovresources,hoi4.exe,8B 80 AC 00 00 00 8B 3C) // should be unique
alloc(newmem3,$1000)

label(code3)
label(return3)
registersymbol(SelectedResId)
label(SelectedResId)
newmem3:
push edx
mov edx,[PlayerID3]
cmp [ebx+80],edx
pop edx
jne code3
mov [SelectedResId],ebx
code3:

 mov eax,[eax+000000AC]
  jmp return3
SelectedResId:
dd 0
getidprovresources:
  jmp newmem3
  nop
return3:
registersymbol(getidprovresources)


//////////////////////

aobscanmodule(selectedresources,hoi4.exe,8B 47 1C C1 E1 05 03) // should be unique
alloc(newmem4,$1000)

label(code4)
label(return4)
registersymbol(ResourcesE)
label(ResourcesE)
newmem4:
push eax
mov eax,[SelectedResId]
cmp ebx,eax
pop eax
jne code4
cmp [ResourcesE],0
je code4
mov [edi+1C],#500000
code4:
  mov eax,[edi+1C]
  shl ecx,05
  jmp return4
ResourcesE:
dd 0
selectedresources:
  jmp newmem4
  nop
return4:
registersymbol(selectedresources)


////////////////////////
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
base:
  db 8B 83 AC 03 00 00
unregistersymbol(PlayerID)
unregistersymbol(base)
dealloc(newmem)
unregistersymbol(PlayerID2)
unregistersymbol(PlayerID3)
{

// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+40325E
 ["pol_power"]

"hoi4.exe"+403237: E8 28 A1 65 00        -  call hoi4.exe+A5D364
"hoi4.exe"+40323C: 83 C4 04              -  add esp,04
"hoi4.exe"+40323F: 6A 09                 -  push 09
"hoi4.exe"+403241: 68 D8 86 54 01        -  push hoi4.exe+14486D8
"hoi4.exe"+403246: 8D 4D D0              -  lea ecx,[ebp-30]
"hoi4.exe"+403249: 89 75 E4              -  mov [ebp-1C],esi
"hoi4.exe"+40324C: 89 5D E0              -  mov [ebp-20],ebx
"hoi4.exe"+40324F: 88 5D D0              -  mov [ebp-30],bl
"hoi4.exe"+403252: E8 69 83 C0 FF        -  call hoi4.exe+B5C0
"hoi4.exe"+403257: C7 45 FC 05 00 00 00  -  mov [ebp-04],00000005
// ---------- INJECTING HERE ----------
"hoi4.exe"+40325E: 8B 87 78 04 00 00     -  mov eax,[edi+00000478]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+403264: E9 97 CD F2 01        -  jmp 02430000
"hoi4.exe"+403269: 90                    -  nop
"hoi4.exe"+40326A: 89 55 F0              -  mov [ebp-10],edx
"hoi4.exe"+40326D: 89 75 C8              -  mov [ebp-38],esi
"hoi4.exe"+403270: 89 5D C4              -  mov [ebp-3C],ebx
"hoi4.exe"+403273: 88 5D B4              -  mov [ebp-4C],bl
"hoi4.exe"+403276: 53                    -  push ebx
"hoi4.exe"+403277: 8D 45 F0              -  lea eax,[ebp-10]
"hoi4.exe"+40327A: 8D 4D 8C              -  lea ecx,[ebp-74]
"hoi4.exe"+40327D: C6 45 FC 06           -  mov byte ptr [ebp-04],06
}
selectedid:
  db 8B 70 20 83 C6 14

unregistersymbol(selectedid)
dealloc(newmem1)
unregistersymbol(CityCountryId)
{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+4707A4

"hoi4.exe"+47076A: 68 3C F2 E9 01                    -  push hoi4.exe+144F23C
"hoi4.exe"+47076F: 8D 4C 24 38                       -  lea ecx,[esp+38]
"hoi4.exe"+470773: C7 44 24 4C 0F 00 00 00           -  mov [esp+4C],0000000F
"hoi4.exe"+47077B: C7 44 24 48 00 00 00 00           -  mov [esp+48],00000000
"hoi4.exe"+470783: C6 44 24 38 00                    -  mov byte ptr [esp+38],00
"hoi4.exe"+470788: E8 33 AE B9 FF                    -  call hoi4.exe+B5C0
"hoi4.exe"+47078D: C7 84 24 5C 01 00 00 05 00 00 00  -  mov [esp+0000015C],00000005
"hoi4.exe"+470798: 8B 83 CC 00 00 00                 -  mov eax,[ebx+000000CC]
"hoi4.exe"+47079E: 83 78 38 00                       -  cmp dword ptr [eax+38],00
"hoi4.exe"+4707A2: 75 08                             -  jne hoi4.exe+4707AC
// ---------- INJECTING HERE ----------
"hoi4.exe"+4707A4: 8B 70 24                          -  mov esi,[eax+24]
"hoi4.exe"+4707A7: 83 C6 18                          -  add esi,18
// ---------- DONE INJECTING  ----------
"hoi4.exe"+4707AA: EB 03                             -  jmp hoi4.exe+4707AF
"hoi4.exe"+4707AC: 8D 70 28                          -  lea esi,[eax+28]
"hoi4.exe"+4707AF: 8B 17                             -  mov edx,[edi]
"hoi4.exe"+4707B1: 8B 52 3C                          -  mov edx,[edx+3C]
"hoi4.exe"+4707B4: 8D 44 24 30                       -  lea eax,[esp+30]
"hoi4.exe"+4707B8: 50                                -  push eax
"hoi4.exe"+4707B9: 8B CF                             -  mov ecx,edi
"hoi4.exe"+4707BB: FF D2                             -  call edx
"hoi4.exe"+4707BD: 83 7E 14 10                       -  cmp dword ptr [esi+14],10
"hoi4.exe"+4707C1: 72 04                             -  jb hoi4.exe+4707C7
}
{
currentid:
  db 83 B9 C4 0C 00 00 00

unregistersymbol(currentid)
dealloc(newmem2)
unregistersymbol(changestateE)
}
{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+3A2E44

"hoi4.exe"+3A2E29: 8B 01                          -  mov eax,[ecx]
"hoi4.exe"+3A2E2B: 8B 50 60                       -  mov edx,[eax+60]
"hoi4.exe"+3A2E2E: 83 EC 10                       -  sub esp,10
"hoi4.exe"+3A2E31: 53                             -  push ebx
"hoi4.exe"+3A2E32: 56                             -  push esi
"hoi4.exe"+3A2E33: 57                             -  push edi
"hoi4.exe"+3A2E34: FF D2                          -  call edx
"hoi4.exe"+3A2E36: 85 C0                          -  test eax,eax
"hoi4.exe"+3A2E38: 0F 84 AA 01 00 00              -  je hoi4.exe+3A2FE8
"hoi4.exe"+3A2E3E: 8B 0D 4C 5C 2F 02              -  mov ecx,[hoi4.exe+18A5C4C]
// ---------- INJECTING HERE ----------
"hoi4.exe"+3A2E44: 83 B9 B4 0C 00 00 00           -  cmp dword ptr [ecx+00000CB4],00
// ---------- DONE INJECTING  ----------
"hoi4.exe"+3A2E4B: 8D 81 B4 0C 00 00              -  lea eax,[ecx+00000CB4]
"hoi4.exe"+3A2E51: 7F 0B                          -  jg hoi4.exe+3A2E5E
"hoi4.exe"+3A2E53: 81 C1 B8 0C 00 00              -  add ecx,00000CB8
"hoi4.exe"+3A2E59: 89 4D FC                       -  mov [ebp-04],ecx
"hoi4.exe"+3A2E5C: EB 03                          -  jmp hoi4.exe+3A2E61
"hoi4.exe"+3A2E5E: 89 45 FC                       -  mov [ebp-04],eax
"hoi4.exe"+3A2E61: 8B 0D DC 5C 2F 02              -  mov ecx,[hoi4.exe+18A5CDC]
"hoi4.exe"+3A2E67: 8B 01                          -  mov eax,[ecx]
"hoi4.exe"+3A2E69: 8B 50 60                       -  mov edx,[eax+60]
"hoi4.exe"+3A2E6C: FF D2                          -  call edx
}

getidprovresources:
  db 8B 80 AC 00 00 00

unregistersymbol(getidprovresources)
dealloc(newmem3)
unregistersymbol(SelectedResId)
{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+124FB0

"hoi4.exe"+124F90: 85 F6                 -  test esi,esi
"hoi4.exe"+124F92: 7E 57                 -  jle hoi4.exe+124FEB
"hoi4.exe"+124F94: A1 30 BA 50 02        -  mov eax,[hoi4.exe+1ABBA30]
"hoi4.exe"+124F99: 8D 48 2C              -  lea ecx,[eax+2C]
"hoi4.exe"+124F9C: 83 C0 1C              -  add eax,1C
"hoi4.exe"+124F9F: 89 4D F8              -  mov [ebp-08],ecx
"hoi4.exe"+124FA2: 89 45 FC              -  mov [ebp-04],eax
"hoi4.exe"+124FA5: EB 09                 -  jmp hoi4.exe+124FB0
"hoi4.exe"+124FA7: 8D A4 24 00 00 00 00  -  lea esp,[esp+00000000]
"hoi4.exe"+124FAE: 8B FF                 -  mov edi,edi
// ---------- INJECTING HERE ----------
"hoi4.exe"+124FB0: 8B 53 24              -  mov edx,[ebx+24]
"hoi4.exe"+124FB3: 8B 82 BC 00 00 00     -  mov eax,[edx+000000BC]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+124FB9: 8B 1C B8              -  mov ebx,[eax+edi*4]
"hoi4.exe"+124FBC: 8B 4D FC              -  mov ecx,[ebp-04]
"hoi4.exe"+124FBF: 53                    -  push ebx
"hoi4.exe"+124FC0: 51                    -  push ecx
"hoi4.exe"+124FC1: 8B 4D F8              -  mov ecx,[ebp-08]
"hoi4.exe"+124FC4: E8 B7 69 04 00        -  call hoi4.exe+16B980
"hoi4.exe"+124FC9: 8B 40 78              -  mov eax,[eax+78]
"hoi4.exe"+124FCC: 8B 5B 20              -  mov ebx,[ebx+20]
"hoi4.exe"+124FCF: 8D 14 C0              -  lea edx,[eax+eax*8]
"hoi4.exe"+124FD2: 8B 45 0C              -  mov eax,[ebp+0C]
}

selectedresources:
  db 8B 47 1C C1 E1 05

unregistersymbol(selectedresources)
dealloc(newmem4)
unregistersymbol(ResourcesE)
{u
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+124FCC

"hoi4.exe"+124FAE: 8B FF                 -  mov edi,edi
"hoi4.exe"+124FB0: 8B 53 24              -  mov edx,[ebx+24]
"hoi4.exe"+124FB3: 8B 82 BC 00 00 00     -  mov eax,[edx+000000BC]
"hoi4.exe"+124FB9: 8B 1C B8              -  mov ebx,[eax+edi*4]
"hoi4.exe"+124FBC: 8B 4D FC              -  mov ecx,[ebp-04]
"hoi4.exe"+124FBF: 53                    -  push ebx
"hoi4.exe"+124FC0: 51                    -  push ecx
"hoi4.exe"+124FC1: 8B 4D F8              -  mov ecx,[ebp-08]
"hoi4.exe"+124FC4: E8 B7 69 04 00        -  call hoi4.exe+16B980
"hoi4.exe"+124FC9: 8B 40 78              -  mov eax,[eax+78]
// ---------- INJECTING HERE ----------
"hoi4.exe"+124FCC: 8B 5B 20              -  mov ebx,[ebx+20]
"hoi4.exe"+124FCF: 8D 14 C0              -  lea edx,[eax+eax*8]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+124FD2: 8B 45 0C              -  mov eax,[ebp+0C]
"hoi4.exe"+124FD5: 8B 48 08              -  mov ecx,[eax+08]
"hoi4.exe"+124FD8: 01 5C 91 20           -  add [ecx+edx*4+20],ebx
"hoi4.exe"+124FDC: 8B 5D 08              -  mov ebx,[ebp+08]
"hoi4.exe"+124FDF: 8D 44 91 20           -  lea eax,[ecx+edx*4+20]
"hoi4.exe"+124FE3: 47                    -  inc edi
"hoi4.exe"+124FE4: 83 C4 08              -  add esp,08
"hoi4.exe"+124FE7: 3B FE                 -  cmp edi,esi
"hoi4.exe"+124FE9: 7C C5                 -  jl hoi4.exe+124FB0
"hoi4.exe"+124FEB: 8B 75 0C              -  mov esi,[ebp+0C]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>360</ID>
      <Description>"Inf.Political Power"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe

["pol_power"]
  This script does blah blah blah
}

[ENABLE]


aobscanmodule(politicalpower,hoi4.exe,FF B0 88 00 00 00 E8 * * * * 8B F0 C6 45 FC 05) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

mov [eax+00000088],#9999000

  push [eax+00000088]
  jmp return

politicalpower:
  jmp code
  nop
return:
registersymbol(politicalpower)

[DISABLE]

politicalpower:
  db FF B0 88 00 00 00

unregistersymbol(politicalpower)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+48DF95

"hoi4.exe"+48DF69: 8D 4D A0              -  lea ecx,[ebp-60]
"hoi4.exe"+48DF6C: C7 45 B4 0F 00 00 00  -  mov [ebp-4C],0000000F
"hoi4.exe"+48DF73: C7 45 B0 00 00 00 00  -  mov [ebp-50],00000000
"hoi4.exe"+48DF7A: C6 45 A0 00           -  mov byte ptr [ebp-60],00
"hoi4.exe"+48DF7E: E8 DD 6D BD FF        -  call hoi4.exe+64D60
"hoi4.exe"+48DF83: C7 45 FC 04 00 00 00  -  mov [ebp-04],00000004
"hoi4.exe"+48DF8A: 8D 4D DC              -  lea ecx,[ebp-24]
"hoi4.exe"+48DF8D: E9 6E 20 31 01        -  jmp 02330000
"hoi4.exe"+48DF92: 90                    -  nop 
"hoi4.exe"+48DF93: 6A 00                 -  push 00
// ---------- INJECTING HERE ----------
"hoi4.exe"+48DF95: FF B0 88 00 00 00     -  push [eax+00000088]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+48DF9B: E8 90 D5 4C 00        -  call hoi4.exe+95B530
"hoi4.exe"+48DFA0: 8B F0                 -  mov esi,eax
"hoi4.exe"+48DFA2: C6 45 FC 05           -  mov byte ptr [ebp-04],05
"hoi4.exe"+48DFA6: 8D 45 A0              -  lea eax,[ebp-60]
"hoi4.exe"+48DFA9: 8B 4F 30              -  mov ecx,[edi+30]
"hoi4.exe"+48DFAC: 50                    -  push eax
"hoi4.exe"+48DFAD: 8B 11                 -  mov edx,[ecx]
"hoi4.exe"+48DFAF: FF 52 3C              -  call dword ptr [edx+3C]
"hoi4.exe"+48DFB2: 83 7E 14 10           -  cmp dword ptr [esi+14],10
"hoi4.exe"+48DFB6: 72 02                 -  jb hoi4.exe+48DFBA
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>363</ID>
      <Description>"Inf.National Unity"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe
push hoi4.exe+E9584C  ["unity"]
  This script does blah blah blah
}

[ENABLE]


aobscanmodule(natinoalunity,hoi4.exe,8B 83 60 04 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:


mov [ebx+00000460],#150000

  mov eax,[ebx+00000460]
  jmp return

natinoalunity:
  jmp code
  nop
return:
registersymbol(natinoalunity)

[DISABLE]

natinoalunity:
  db 8B 83 60 04 00 00

unregistersymbol(natinoalunity)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+48DE5D

"hoi4.exe"+48DE36: E8 25 6F BD FF        -  call hoi4.exe+64D60
"hoi4.exe"+48DE3B: 6A 00                 -  push 00
"hoi4.exe"+48DE3D: 68 85 00 00 00        -  push 00000085
"hoi4.exe"+48DE42: 8D 45 D4              -  lea eax,[ebp-2C]
"hoi4.exe"+48DE45: C6 45 FC 01           -  mov byte ptr [ebp-04],01
"hoi4.exe"+48DE49: 50                    -  push eax
"hoi4.exe"+48DE4A: 8D 8B 5C 02 00 00     -  lea ecx,[ebx+0000025C]
"hoi4.exe"+48DE50: E8 5B 54 CD FF        -  call hoi4.exe+1632B0
"hoi4.exe"+48DE55: 8B 15 FC 4F 9E 01     -  mov edx,[hoi4.exe+E54FFC]
"hoi4.exe"+48DE5B: 8B 08                 -  mov ecx,[eax]
// ---------- INJECTING HERE ----------
"hoi4.exe"+48DE5D: 8B 83 48 04 00 00     -  mov eax,[ebx+00000448]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+48DE63: 03 C1                 -  add eax,ecx
"hoi4.exe"+48DE65: 8B 0D F4 AD C7 01     -  mov ecx,[hoi4.exe+10EADF4]
"hoi4.exe"+48DE6B: 3B C1                 -  cmp eax,ecx
"hoi4.exe"+48DE6D: 7C 07                 -  jl hoi4.exe+48DE76
"hoi4.exe"+48DE6F: 3B C2                 -  cmp eax,edx
"hoi4.exe"+48DE71: 8B C8                 -  mov ecx,eax
"hoi4.exe"+48DE73: 0F 4F CA              -  cmovg ecx,edx
"hoi4.exe"+48DE76: B8 A0 86 01 00        -  mov eax,000186A0
"hoi4.exe"+48DE7B: F7 E9                 -  imul ecx
"hoi4.exe"+48DE7D: 6A 00                 -  push 00
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>401</ID>
      <Description>"Inf.Convoys"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe
convoys_count
  This script does blah blah blah
}

[ENABLE]


aobscanmodule(convoys,hoi4.exe,F7 6C F1 04 C1 FA 06) // should be unique
alloc(newmem,$1000)
aobscan(convoysret,89 45 F0 8D 4D C0 8D 45 F0 ba)
label(code)
label(return)

newmem:

code:


cmp [esp+14],convoysret
jne @f
mov [ecx+esi*8+04],#9999000
@@:
  imul [ecx+esi*8+04]
  sar edx,06
  jmp return

convoys:
  jmp code
  nop
  nop
return:
registersymbol(convoys)

[DISABLE]

convoys:
  db F7 6C F1 04 C1 FA 06

unregistersymbol(convoys)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+46AEB2

"hoi4.exe"+46AE8F: 3B CA                       -  cmp ecx,edx
"hoi4.exe"+46AE91: 74 0D                       -  je hoi4.exe+46AEA0
"hoi4.exe"+46AE93: E8 38 7E D2 FF              -  call hoi4.exe+192CD0
"hoi4.exe"+46AE98: 0B 82 80 01 00 00           -  or eax,[edx+00000180]
"hoi4.exe"+46AE9E: EB 06                       -  jmp hoi4.exe+46AEA6
"hoi4.exe"+46AEA0: 8B 82 80 01 00 00           -  mov eax,[edx+00000180]
"hoi4.exe"+46AEA6: A8 01                       -  test al,01
"hoi4.exe"+46AEA8: 74 18                       -  je hoi4.exe+46AEC2
"hoi4.exe"+46AEAA: 8B 4D FC                    -  mov ecx,[ebp-04]
"hoi4.exe"+46AEAD: B8 D3 4D 62 10              -  mov eax,10624DD3
// ---------- INJECTING HERE ----------
"hoi4.exe"+46AEB2: F7 6C F1 04                 -  imul [ecx+esi*8+04]
"hoi4.exe"+46AEB6: C1 FA 06                    -  sar edx,06
// ---------- DONE INJECTING  ----------
"hoi4.exe"+46AEB9: 8B CA                       -  mov ecx,edx
"hoi4.exe"+46AEBB: C1 E9 1F                    -  shr ecx,1F
"hoi4.exe"+46AEBE: 03 CA                       -  add ecx,edx
"hoi4.exe"+46AEC0: 03 D9                       -  add ebx,ecx
"hoi4.exe"+46AEC2: 8B 4D FC                    -  mov ecx,[ebp-04]
"hoi4.exe"+46AEC5: 46                          -  inc esi
"hoi4.exe"+46AEC6: 3B F7                       -  cmp esi,edi
"hoi4.exe"+46AEC8: 7C B6                       -  jl hoi4.exe+46AE80
"hoi4.exe"+46AECA: 5F                          -  pop edi
"hoi4.exe"+46AECB: 5E                          -  pop esi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>437</ID>
      <Description>"Inf.Nukes"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe
["nuke_count"]
U Is D
  This script does blah blah blah
}

[ENABLE]


aobscanmodule(nukes,hoi4.exe,8B 41 0C 3D 8C 6C E7 FF) // should be unique
alloc(newmem,$1000)
aobscan(nukeret,68 * * * * 8D 4D DC 89 45 D8 E8 * * * * 8D 45 D4 C7 45 FC 1B 00 00 00)


label(code)
label(return)

newmem:

code:
cmp [esp+4],nukeret
jne @f
mov [ecx+0C],#999990000
@@:
  mov eax,[ecx+0C]
  cmp eax,FFE76C8C
  jmp return

nukes:
  jmp code
  nop
  nop
  nop
return:
registersymbol(nukes)

[DISABLE]

nukes:
  db 8B 41 0C 3D 8C 6C E7 FF

unregistersymbol(nukes)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+74471

"hoi4.exe"+74467: CC                    -  int 3 
"hoi4.exe"+74468: CC                    -  int 3 
"hoi4.exe"+74469: CC                    -  int 3 
"hoi4.exe"+7446A: CC                    -  int 3 
"hoi4.exe"+7446B: CC                    -  int 3 
"hoi4.exe"+7446C: CC                    -  int 3 
"hoi4.exe"+7446D: CC                    -  int 3 
"hoi4.exe"+7446E: CC                    -  int 3 
"hoi4.exe"+7446F: CC                    -  int 3 
"hoi4.exe"+74470: 51                    -  push ecx
// ---------- INJECTING HERE ----------
"hoi4.exe"+74471: 8B 41 0C              -  mov eax,[ecx+0C]
"hoi4.exe"+74474: 3D 8C 6C E7 FF        -  cmp eax,FFE76C8C
// ---------- DONE INJECTING  ----------
"hoi4.exe"+74479: 7E 31                 -  jle hoi4.exe+744AC
"hoi4.exe"+7447B: 3D 9B C4 20 00        -  cmp eax,0020C49B
"hoi4.exe"+74480: 7D 2A                 -  jnl hoi4.exe+744AC
"hoi4.exe"+74482: 69 C8 E8 03 00 00     -  imul ecx,eax,000003E8
"hoi4.exe"+74488: B8 83 DE 1B 43        -  mov eax,431BDE83
"hoi4.exe"+7448D: F7 E9                 -  imul ecx
"hoi4.exe"+7448F: B8 D3 4D 62 10        -  mov eax,10624DD3
"hoi4.exe"+74494: C1 FA 12              -  sar edx,12
"hoi4.exe"+74497: 8B CA                 -  mov ecx,edx
"hoi4.exe"+74499: C1 E9 1F              -  shr ecx,1F
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>380</ID>
      <Description>"Inf.Army Exp"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(armyexp,hoi4.exe,FF B3 C8 00 00 00 E8 * * * * 0F AC D0 0F 6A 00 C1 FA 0F) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
mov [ebx+000000C8],#92800000
  push [ebx+000000C8]
  jmp return

armyexp:
  jmp code
  nop
return:
registersymbol(armyexp)

[DISABLE]

armyexp:
  db FF B3 C8 00 00 00

unregistersymbol(armyexp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+48E101

"hoi4.exe"+48E0D1: 8D 4D DC              -  lea ecx,[ebp-24]
"hoi4.exe"+48E0D4: C7 45 FC FF FF FF FF  -  mov [ebp-04],FFFFFFFF
"hoi4.exe"+48E0DB: E8 60 66 BD FF        -  call hoi4.exe+64740
"hoi4.exe"+48E0E0: 68 78 17 81 01        -  push hoi4.exe+C81778
"hoi4.exe"+48E0E5: 8D 4D DC              -  lea ecx,[ebp-24]
"hoi4.exe"+48E0E8: E8 A3 A9 EF FF        -  call hoi4.exe+388A90
"hoi4.exe"+48E0ED: 6A 00                 -  push 00
"hoi4.exe"+48E0EF: 68 00 00 F4 01        -  push 01F40000
"hoi4.exe"+48E0F4: C7 45 FC 0A 00 00 00  -  mov [ebp-04],0000000A
"hoi4.exe"+48E0FB: FF B3 CC 00 00 00     -  push [ebx+000000CC]
// ---------- INJECTING HERE ----------
"hoi4.exe"+48E101: FF B3 C8 00 00 00     -  push [ebx+000000C8]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+48E107: E8 C4 C2 65 00        -  call hoi4.exe+AEA3D0
"hoi4.exe"+48E10C: 0F AC D0 0F           -  shrd eax,edx,0F
"hoi4.exe"+48E110: 6A 00                 -  push 00
"hoi4.exe"+48E112: C1 FA 0F              -  sar edx,0F
"hoi4.exe"+48E115: 8D 4D B8              -  lea ecx,[ebp-48]
"hoi4.exe"+48E118: 0F AC D0 0F           -  shrd eax,edx,0F
"hoi4.exe"+48E11C: C1 FA 0F              -  sar edx,0F
"hoi4.exe"+48E11F: 50                    -  push eax
"hoi4.exe"+48E120: 89 55 D4              -  mov [ebp-2C],edx
"hoi4.exe"+48E123: E8 08 D4 4C 00        -  call hoi4.exe+95B530
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>381</ID>
      <Description>"Inf.Navy Exp"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(airexp,hoi4.exe,FF B3 D8 00 00 00 E8) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
mov [ebx+000000D8],#92800000
  push [ebx+000000D8]
  jmp return

airexp:
  jmp code
  nop
return:
registersymbol(airexp)

[DISABLE]

airexp:
  db FF B3 D8 00 00 00

unregistersymbol(airexp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+48E203

"hoi4.exe"+48E1D3: 8D 4D DC              -  lea ecx,[ebp-24]
"hoi4.exe"+48E1D6: C7 45 FC FF FF FF FF  -  mov [ebp-04],FFFFFFFF
"hoi4.exe"+48E1DD: E8 5E 65 BD FF        -  call hoi4.exe+64740
"hoi4.exe"+48E1E2: 68 C4 17 81 01        -  push hoi4.exe+C817C4
"hoi4.exe"+48E1E7: 8D 4D DC              -  lea ecx,[ebp-24]
"hoi4.exe"+48E1EA: E8 A1 A8 EF FF        -  call hoi4.exe+388A90
"hoi4.exe"+48E1EF: 6A 00                 -  push 00
"hoi4.exe"+48E1F1: 68 00 00 F4 01        -  push 01F40000
"hoi4.exe"+48E1F6: C7 45 FC 0E 00 00 00  -  mov [ebp-04],0000000E
"hoi4.exe"+48E1FD: FF B3 DC 00 00 00     -  push [ebx+000000DC]
// ---------- INJECTING HERE ----------
"hoi4.exe"+48E203: FF B3 D8 00 00 00     -  push [ebx+000000D8]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+48E209: E8 C2 C1 65 00        -  call hoi4.exe+AEA3D0
"hoi4.exe"+48E20E: 0F AC D0 0F           -  shrd eax,edx,0F
"hoi4.exe"+48E212: 6A 00                 -  push 00
"hoi4.exe"+48E214: C1 FA 0F              -  sar edx,0F
"hoi4.exe"+48E217: 8D 4D B8              -  lea ecx,[ebp-48]
"hoi4.exe"+48E21A: 0F AC D0 0F           -  shrd eax,edx,0F
"hoi4.exe"+48E21E: C1 FA 0F              -  sar edx,0F
"hoi4.exe"+48E221: 50                    -  push eax
"hoi4.exe"+48E222: 89 55 D4              -  mov [ebp-2C],edx
"hoi4.exe"+48E225: E8 06 D3 4C 00        -  call hoi4.exe+95B530
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>382</ID>
      <Description>"Inf.Air Exp"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(navyexp,hoi4.exe,FF B3 E8 00 00 00 E8 * * * * 0F AC D0 0F 6A 00 C1 FA 0F 8D 4D B8 0F AC D0 0F C1 FA 0F 50) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
mov [ebx+000000E8],#92800000
  push [ebx+000000E8]
  jmp return

navyexp:
  jmp code
  nop
return:
registersymbol(navyexp)

[DISABLE]

navyexp:
  db FF B3 E8 00 00 00

unregistersymbol(navyexp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+48E182

"hoi4.exe"+48E152: 8D 4D DC              -  lea ecx,[ebp-24]
"hoi4.exe"+48E155: C7 45 FC FF FF FF FF  -  mov [ebp-04],FFFFFFFF
"hoi4.exe"+48E15C: E8 DF 65 BD FF        -  call hoi4.exe+64740
"hoi4.exe"+48E161: 68 B0 16 81 01        -  push hoi4.exe+C816B0
"hoi4.exe"+48E166: 8D 4D DC              -  lea ecx,[ebp-24]
"hoi4.exe"+48E169: E8 22 A9 EF FF        -  call hoi4.exe+388A90
"hoi4.exe"+48E16E: 6A 00                 -  push 00
"hoi4.exe"+48E170: 68 00 00 F4 01        -  push 01F40000
"hoi4.exe"+48E175: C7 45 FC 0C 00 00 00  -  mov [ebp-04],0000000C
"hoi4.exe"+48E17C: FF B3 EC 00 00 00     -  push [ebx+000000EC]
// ---------- INJECTING HERE ----------
"hoi4.exe"+48E182: FF B3 E8 00 00 00     -  push [ebx+000000E8]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+48E188: E8 43 C2 65 00        -  call hoi4.exe+AEA3D0
"hoi4.exe"+48E18D: 0F AC D0 0F           -  shrd eax,edx,0F
"hoi4.exe"+48E191: 6A 00                 -  push 00
"hoi4.exe"+48E193: C1 FA 0F              -  sar edx,0F
"hoi4.exe"+48E196: 8D 4D B8              -  lea ecx,[ebp-48]
"hoi4.exe"+48E199: 0F AC D0 0F           -  shrd eax,edx,0F
"hoi4.exe"+48E19D: C1 FA 0F              -  sar edx,0F
"hoi4.exe"+48E1A0: 50                    -  push eax
"hoi4.exe"+48E1A1: 89 55 D4              -  mov [ebp-2C],edx
"hoi4.exe"+48E1A4: E8 87 D3 4C 00        -  call hoi4.exe+95B530
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>440</ID>
      <Description>"Fast National Focus"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version:
  Date   : 2017-02-24
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(fastfocus,hoi4.exe,01 47 14 8B 77 0C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
push esi
mov esi,[edi+8]
cmp esi,100000
jna @f
mov esi,[esi+c]

cmp [PlayerID3],esi
jne @f
cmp [edi+14],eax
mov eax,#999999999
@@:
pop esi
  add [edi+14],eax
  mov esi,[edi+0C]
  jmp return

fastfocus:
  jmp code
  nop
return:
registersymbol(fastfocus)

[DISABLE]

fastfocus:
  db 01 47 14 8B 77 0C

unregistersymbol(fastfocus)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+1EE491

"hoi4.exe"+1EE46C: 8B 4F 08              -  mov ecx,[edi+08]
"hoi4.exe"+1EE46F: 8B 01                 -  mov eax,[ecx]
"hoi4.exe"+1EE471: FF 50 1C              -  call dword ptr [eax+1C]
"hoi4.exe"+1EE474: 8B 80 90 03 00 00     -  mov eax,[eax+00000390]
"hoi4.exe"+1EE47A: 8B 48 24              -  mov ecx,[eax+24]
"hoi4.exe"+1EE47D: 2B 48 20              -  sub ecx,[eax+20]
"hoi4.exe"+1EE480: A1 04 51 9E 01        -  mov eax,[hoi4.exe+E55104]
"hoi4.exe"+1EE485: C1 F9 02              -  sar ecx,02
"hoi4.exe"+1EE488: 85 C9                 -  test ecx,ecx
"hoi4.exe"+1EE48A: 0F 4F 05 08 51 9E 01  -  cmovg eax,[hoi4.exe+E55108]
// ---------- INJECTING HERE ----------
"hoi4.exe"+1EE491: 01 47 14              -  add [edi+14],eax
"hoi4.exe"+1EE494: 8B 77 0C              -  mov esi,[edi+0C]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+1EE497: 8B 47 14              -  mov eax,[edi+14]
"hoi4.exe"+1EE49A: 3B 86 64 01 00 00     -  cmp eax,[esi+00000164]
"hoi4.exe"+1EE4A0: 7C 3D                 -  jl hoi4.exe+1EE4DF
"hoi4.exe"+1EE4A2: 8B 15 14 66 9C 01     -  mov edx,[hoi4.exe+E36614]
"hoi4.exe"+1EE4A8: 33 C9                 -  xor ecx,ecx
"hoi4.exe"+1EE4AA: 8B 47 08              -  mov eax,[edi+08]
"hoi4.exe"+1EE4AD: 83 C0 0C              -  add eax,0C
"hoi4.exe"+1EE4B0: 50                    -  push eax
"hoi4.exe"+1EE4B1: 39 8A A0 0C 00 00     -  cmp [edx+00000CA0],ecx
"hoi4.exe"+1EE4B7: 0F 9E C1              -  setle cl
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>356</ID>
      <Description>"Fast Research"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(fastresaerach,hoi4.exe,01 86 A4 00 00 00 5F 5E 8B E5 5D C3) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

push edi
mov edi,[esi+88]
cmp edi,100000
jna @f
mov edi,[edi+6c]
cmp edi,100000
jna @f
mov edi,[edi+c]
cmp [PlayerID3],edi
jne @f
mov eax,#99999999
cmp  [esi+000000A4],eax
@@:
pop edi

  add [esi+000000A4],eax
  jmp return

fastresaerach:
  jmp code
  nop
return:
registersymbol(fastresaerach)

[DISABLE]

fastresaerach:
  db 01 86 A4 00 00 00

unregistersymbol(fastresaerach)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+21D188
hoi4.exe+1AC647 - 68 2C7FDD01           - push hoi4.PHYSFS_swapSLE16+9B58DC   ["PROGRESS"]
hoi4.exe+1AC64C - 68 C4E6DF01           - push hoi4.PHYSFS_swapSLE16+9DC074   ["RESEARCH_PROGRESS"]

"hoi4.exe"+21D167: 8B CE              -  mov ecx,esi
"hoi4.exe"+21D169: 03 86 A0 00 00 00  -  add eax,[esi+000000A0]
"hoi4.exe"+21D16F: 03 45 FC           -  add eax,[ebp-04]
"hoi4.exe"+21D172: FF B6 A8 00 00 00  -  push [esi+000000A8]
"hoi4.exe"+21D178: 03 45 F8           -  add eax,[ebp-08]
"hoi4.exe"+21D17B: 50                 -  push eax
"hoi4.exe"+21D17C: 8D 45 F8           -  lea eax,[ebp-08]
"hoi4.exe"+21D17F: 50                 -  push eax
"hoi4.exe"+21D180: E8 5B FD FF FF     -  call hoi4.exe+21CEE0
"hoi4.exe"+21D185: 8B 45 F8           -  mov eax,[ebp-08]
// ---------- INJECTING HERE ----------
"hoi4.exe"+21D188: 01 86 A4 00 00 00  -  add [esi+000000A4],eax
// ---------- DONE INJECTING  ----------
"hoi4.exe"+21D18E: 5E                 -  pop esi
"hoi4.exe"+21D18F: 8B E5              -  mov esp,ebp
"hoi4.exe"+21D191: 5D                 -  pop ebp
"hoi4.exe"+21D192: C3                 -  ret 
"hoi4.exe"+21D193: CC                 -  int 3 
"hoi4.exe"+21D194: CC                 -  int 3 
"hoi4.exe"+21D195: CC                 -  int 3 
"hoi4.exe"+21D196: CC                 -  int 3 
"hoi4.exe"+21D197: CC                 -  int 3 
"hoi4.exe"+21D198: CC                 -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>406</ID>
      <Description>"Fast Recruiting"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(fastrecruitings,hoi4.exe,8B 55 F4 01 42 38) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
mov edx,[ebp-0C]

push esi
mov esi,[PlayerID3+10]
cmp [esp+4],esi
pop esi
jne @f
mov eax,#99999999
  add [edx+38],eax
  jmp return
@@:
  add [edx+38],eax
  jmp return

fastrecruitings:
  jmp code
  nop
return:
registersymbol(fastrecruitings)

[DISABLE]

fastrecruitings:
  db 8B 55 F4 01 42 38

unregistersymbol(fastrecruitings)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+47F041

"hoi4.exe"+47F02F: F7 EA                 -  imul edx
"hoi4.exe"+47F031: 8B F8                 -  mov edi,eax
"hoi4.exe"+47F033: 8B F2                 -  mov esi,edx
"hoi4.exe"+47F035: 8B C1                 -  mov eax,ecx
"hoi4.exe"+47F037: 99                    -  cdq 
"hoi4.exe"+47F038: 52                    -  push edx
"hoi4.exe"+47F039: 50                    -  push eax
"hoi4.exe"+47F03A: 56                    -  push esi
"hoi4.exe"+47F03B: 57                    -  push edi
"hoi4.exe"+47F03C: E8 2F B5 66 00        -  call hoi4.exe+AEA570
// ---------- INJECTING HERE ----------
"hoi4.exe"+47F041: 8B 55 F4              -  mov edx,[ebp-0C]
"hoi4.exe"+47F044: 01 42 38              -  add [edx+38],eax
// ---------- DONE INJECTING  ----------
"hoi4.exe"+47F047: 8B 0D 5C A9 C7 01     -  mov ecx,[hoi4.exe+10EA95C]
"hoi4.exe"+47F04D: 8B 72 38              -  mov esi,[edx+38]
"hoi4.exe"+47F050: A1 C8 4D 97 01        -  mov eax,[hoi4.exe+DE4DC8]
"hoi4.exe"+47F055: 3B F1                 -  cmp esi,ecx
"hoi4.exe"+47F057: 7D 0A                 -  jnl hoi4.exe+47F063
"hoi4.exe"+47F059: 89 4A 38              -  mov [edx+38],ecx
"hoi4.exe"+47F05C: 5F                    -  pop edi
"hoi4.exe"+47F05D: 5E                    -  pop esi
"hoi4.exe"+47F05E: 5B                    -  pop ebx
"hoi4.exe"+47F05F: 8B E5                 -  mov esp,ebp
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>496</ID>
      <Description>"Instant War Goal"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(wargoal,hoi4.exe,01 77 18 8B CF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
mov ecx,[PlayerID3]
cmp [edi+8],ecx
jne @f
add esi,#100000000
@@:
  add [edi+18],esi
  mov ecx,edi
  jmp return

wargoal:
  jmp code
return:
registersymbol(wargoal)

[DISABLE]

wargoal:
  db 01 77 18 8B CF

unregistersymbol(wargoal)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+1F2FB2

"hoi4.exe"+1F2F98: 8B 74 24 0C           -  mov esi,[esp+0C]
"hoi4.exe"+1F2F9C: 3B 75 0C              -  cmp esi,[ebp+0C]
"hoi4.exe"+1F2F9F: 7E 11                 -  jle hoi4.exe+1F2FB2
"hoi4.exe"+1F2FA1: 8B 45 08              -  mov eax,[ebp+08]
"hoi4.exe"+1F2FA4: C7 00 00 00 00 00     -  mov [eax],00000000
"hoi4.exe"+1F2FAA: 5F                    -  pop edi
"hoi4.exe"+1F2FAB: 5E                    -  pop esi
"hoi4.exe"+1F2FAC: 8B E5                 -  mov esp,ebp
"hoi4.exe"+1F2FAE: 5D                    -  pop ebp
"hoi4.exe"+1F2FAF: C2 08 00              -  ret 0008
// ---------- INJECTING HERE ----------
"hoi4.exe"+1F2FB2: 01 77 18              -  add [edi+18],esi
"hoi4.exe"+1F2FB5: 8B CF                 -  mov ecx,edi
// ---------- DONE INJECTING  ----------
"hoi4.exe"+1F2FB7: 8B 07                 -  mov eax,[edi]
"hoi4.exe"+1F2FB9: FF 50 34              -  call dword ptr [eax+34]
"hoi4.exe"+1F2FBC: 51                    -  push ecx
"hoi4.exe"+1F2FBD: 8D 44 24 10           -  lea eax,[esp+10]
"hoi4.exe"+1F2FC1: 8B CF                 -  mov ecx,edi
"hoi4.exe"+1F2FC3: 50                    -  push eax
"hoi4.exe"+1F2FC4: E8 F7 00 00 00        -  call hoi4.exe+1F30C0
"hoi4.exe"+1F2FC9: 8B 47 18              -  mov eax,[edi+18]
"hoi4.exe"+1F2FCC: 3B 44 24 0C           -  cmp eax,[esp+0C]
"hoi4.exe"+1F2FD0: 7C 07                 -  jl hoi4.exe+1F2FD9
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>398</ID>
      <Description>"Super Production "</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(production,hoi4.exe,8B 49 24 89 08 5D) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
push edx
mov edx,[ecx+1c]
cmp edx,100000
jna @f
mov edx,[edx+d8]
mov edx,[edx+c]
cmp [PlayerID3],edx
jne @f
 mov edx,#16280000
mov [ecx+24],edx
@@:
pop edx
  mov ecx,[ecx+24]
  mov [eax],ecx
  jmp return

production:
  jmp code
return:
registersymbol(production)

[DISABLE]

production:
  db 8B 49 24 89 08

unregistersymbol(production)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+2A84F6

"hoi4.exe"+2A84E9: CC                 -  int 3 
"hoi4.exe"+2A84EA: CC                 -  int 3 
"hoi4.exe"+2A84EB: CC                 -  int 3 
"hoi4.exe"+2A84EC: CC                 -  int 3 
"hoi4.exe"+2A84ED: CC                 -  int 3 
"hoi4.exe"+2A84EE: CC                 -  int 3 
"hoi4.exe"+2A84EF: CC                 -  int 3 
"hoi4.exe"+2A84F0: 55                 -  push ebp
"hoi4.exe"+2A84F1: 8B EC              -  mov ebp,esp
"hoi4.exe"+2A84F3: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
"hoi4.exe"+2A84F6: 8B 49 24           -  mov ecx,[ecx+24]
"hoi4.exe"+2A84F9: 89 08              -  mov [eax],ecx
// ---------- DONE INJECTING  ----------
"hoi4.exe"+2A84FB: 5D                 -  pop ebp
"hoi4.exe"+2A84FC: C2 04 00           -  ret 0004
"hoi4.exe"+2A84FF: CC                 -  int 3 
"hoi4.exe"+2A8500: 55                 -  push ebp
"hoi4.exe"+2A8501: 8B EC              -  mov ebp,esp
"hoi4.exe"+2A8503: 51                 -  push ecx
"hoi4.exe"+2A8504: 56                 -  push esi
"hoi4.exe"+2A8505: 8B 71 20           -  mov esi,[ecx+20]
"hoi4.exe"+2A8508: 57                 -  push edi
"hoi4.exe"+2A8509: 3B 35 5C A9 C7 01  -  cmp esi,[hoi4.exe+10EA95C]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>472</ID>
      <Description>"Super Resources"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
ResourcesE:
dd 1
[DISABLE]
ResourcesE:
dd 0
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>413</ID>
      <Description>"Instant Movement "</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe
["_vMovementProgress: "]

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(fastmovement,hoi4.exe,01 83 DC 00 00 00 83) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

push esi
mov esi,[PlayerID3]
cmp [ebx+a4],esi
jne code
add eax,#99999999
cmp [ebx+dc],1
code:
pop esi
  add [ebx+000000DC],eax
  jmp return

fastmovement:
  jmp newmem
  nop
return:
registersymbol(fastmovement)

[DISABLE]

fastmovement:
  db 01 83 DC 00 00 00

unregistersymbol(fastmovement)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+31B143

"hoi4.exe"+31B129: 51                             -  push ecx
"hoi4.exe"+31B12A: 8B CB                          -  mov ecx,ebx
"hoi4.exe"+31B12C: FF 50 74                       -  call dword ptr [eax+74]
"hoi4.exe"+31B12F: 8D 45 E8                       -  lea eax,[ebp-18]
"hoi4.exe"+31B132: 8B CB                          -  mov ecx,ebx
"hoi4.exe"+31B134: 50                             -  push eax
"hoi4.exe"+31B135: E8 F6 EF FF FF                 -  call hoi4.exe+31A130
"hoi4.exe"+31B13A: 80 7D 08 00                    -  cmp byte ptr [ebp+08],00
"hoi4.exe"+31B13E: 74 09                          -  je hoi4.exe+31B149
"hoi4.exe"+31B140: 8B 45 E4                       -  mov eax,[ebp-1C]
// ---------- INJECTING HERE ----------
"hoi4.exe"+31B143: 01 83 DC 00 00 00              -  add [ebx+000000DC],eax
// ---------- DONE INJECTING  ----------
"hoi4.exe"+31B149: 83 BB DC 00 00 00 00           -  cmp dword ptr [ebx+000000DC],00
"hoi4.exe"+31B150: 7D 0A                          -  jnl hoi4.exe+31B15C
"hoi4.exe"+31B152: C7 83 DC 00 00 00 00 00 00 00  -  mov [ebx+000000DC],00000000
"hoi4.exe"+31B15C: 8A 0D A3 C7 9D 01              -  mov cl,[hoi4.exe+E4C7A3]
"hoi4.exe"+31B162: 84 C9                          -  test cl,cl
"hoi4.exe"+31B164: 74 5B                          -  je hoi4.exe+31B1C1
"hoi4.exe"+31B166: 6A 05                          -  push 05
"hoi4.exe"+31B168: 68 A4 07 00 00                 -  push 000007A4
"hoi4.exe"+31B16D: BA 38 F8 7E 01                 -  mov edx,hoi4.exe+C5F838
"hoi4.exe"+31B172: 8D 8D 1C FF FF FF              -  lea ecx,[ebp-000000E4]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>428</ID>
      <Description>"God Mode - Inf.Organization"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2016-06-07
  Author : omoe
 ["_vStrength: %i"]

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(godmode,hoi4.exe,29 91 B4 01 00 00 29 81 B8 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
push esi
push ebx
mov esi,[PlayerID3]
cmp [ecx+a4],esi
jne code
 mov esi,[ecx+54]
 test esi,esi
 jz code

 mov ebx,[esi+188]
 mov [ecx+1b4],ebx

 mov ebx,[esi+184]
 mov [ecx+1b8],ebx
xor edx,edx

mov [ebp+c],0
 mov [ebp+08],edx
 mov [ecx+000001c0],edx
 mov [ecx+000001c4],edx
 mov [ecx+000001c8],edx
 mov [ecx+000001cc],edx
code:
pop ebx
pop esi
  sub [ecx+000001B4],edx//add [ecx+000001F4],eax
  jmp return

godmode:
  jmp newmem
  nop
return:
registersymbol(godmode)
/////////////////////////
aobscanmodule(organization2,hoi4.exe,8B 89 B8 01 00 00 89 08 5D C2 04 00) // should be unique
alloc(newmem3,$1000)

label(code3)
label(return3)

newmem3:
push esi
mov esi,[PlayerID3]
cmp [ecx+a4],esi
jne code3
 mov esi,[ecx+54]
 test esi,esi
 jz code3
 mov esi,[esi+184]
 mov [ecx+000001B8],esi
code3:
pop esi
  mov ecx,[ecx+000001B8]
  jmp return3

organization2:
  jmp newmem3
  nop
return3:
registersymbol(organization2)
//////////////////////
aobscanmodule(godmodeships,hoi4.exe,8B BB 2C 02 00 00 0F 48 C1 89 45 FC) // should be unique
alloc(newmem4,$1000)

label(code4)
label(return4)

newmem4:


push edi
push eax
mov edi,[ebx+254]
cmp edi,100000
jna code4
mov eax,[PlayerID3]
cmp [edi+a4],eax
jne code4
 mov eax,[ebx+000001d0]
 mov [ebx+230],eax
 mov eax,[ebx+000001d4]
 mov [ebx+22c],eax
 mov [ebp+08],0
 mov [ebp+0c],0
code4:
pop eax
pop edi
  mov edi,[ebx+0000022C]
  jmp return4

godmodeships:
  jmp newmem4
  nop
return4:
registersymbol(godmodeships)
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
godmode:
  db 29 91 B4 01 00 00

unregistersymbol(godmode)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+1B7FE5
1.01
"hoi4.exe"+1B7FCC: CC                       -  int 3
"hoi4.exe"+1B7FCD: CC                       -  int 3
"hoi4.exe"+1B7FCE: CC                       -  int 3
"hoi4.exe"+1B7FCF: CC                       -  int 3
"hoi4.exe"+1B7FD0: 55                       -  push ebp
"hoi4.exe"+1B7FD1: 8B EC                    -  mov ebp,esp
"hoi4.exe"+1B7FD3: 8B 45 08                 -  mov eax,[ebp+08]
"hoi4.exe"+1B7FD6: 01 81 E0 01 00 00        -  add [ecx+000001E0],eax
"hoi4.exe"+1B7FDC: 8B 55 0C                 -  mov edx,[ebp+0C]
"hoi4.exe"+1B7FDF: 01 91 E4 01 00 00        -  add [ecx+000001E4],edx
// ---------- INJECTING HERE ----------
"hoi4.exe"+1B7FE5: 29 81 D0 01 00 00        -  sub [ecx+000001D0],eax
// ---------- DONE INJECTING  ----------
"hoi4.exe"+1B7FEB: 29 91 D4 01 00 00        -  sub [ecx+000001D4],edx
"hoi4.exe"+1B7FF1: A1 74 76 BA 01           -  mov eax,[hoi4.exe+18B7674]
"hoi4.exe"+1B7FF6: 83 EC 0C                 -  sub esp,0C
"hoi4.exe"+1B7FF9: 39 81 D0 01 00 00        -  cmp [ecx+000001D0],eax
"hoi4.exe"+1B7FFF: 7D 0B                    -  jnl hoi4.exe+1B800C
"hoi4.exe"+1B8001: 89 81 D0 01 00 00        -  mov [ecx+000001D0],eax
"hoi4.exe"+1B8007: A1 74 76 BA 01           -  mov eax,[hoi4.exe+18B7674]
"hoi4.exe"+1B800C: 39 81 D4 01 00 00        -  cmp [ecx+000001D4],eax
"hoi4.exe"+1B8012: 7D 06                    -  jnl hoi4.exe+1B801A
"hoi4.exe"+1B8014: 89 81 D4 01 00 00        -  mov [ecx+000001D4],eax
}

organization2:
  db 8B 89 B8 01 00 00

unregistersymbol(organization2)
dealloc(newmem3)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+1B5CB3

"hoi4.exe"+1B5CA6: C2 04 00                 -  ret 0004
"hoi4.exe"+1B5CA9: CC                       -  int 3
"hoi4.exe"+1B5CAA: CC                       -  int 3
"hoi4.exe"+1B5CAB: CC                       -  int 3
"hoi4.exe"+1B5CAC: CC                       -  int 3
"hoi4.exe"+1B5CAD: CC                       -  int 3
"hoi4.exe"+1B5CAE: CC                       -  int 3
"hoi4.exe"+1B5CAF: CC                       -  int 3
"hoi4.exe"+1B5CB0: 55                       -  push ebp
"hoi4.exe"+1B5CB1: 8B EC                    -  mov ebp,esp
// ---------- INJECTING HERE ----------
"hoi4.exe"+1B5CB3: 8B 89 EC 01 00 00        -  mov ecx,[ecx+000001D4]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+1B5CB9: 8B 45 08                 -  mov eax,[ebp+08]
"hoi4.exe"+1B5CBC: 89 08                    -  mov [eax],ecx
"hoi4.exe"+1B5CBE: 5D                       -  pop ebp
"hoi4.exe"+1B5CBF: C2 04 00                 -  ret 0004
"hoi4.exe"+1B5CC2: CC                       -  int 3
"hoi4.exe"+1B5CC3: CC                       -  int 3
"hoi4.exe"+1B5CC4: CC                       -  int 3
"hoi4.exe"+1B5CC5: CC                       -  int 3
"hoi4.exe"+1B5CC6: CC                       -  int 3
"hoi4.exe"+1B5CC7: CC                       -  int 3
}

godmodeships:
  db 8B BB 2C 02 00 00

unregistersymbol(godmodeships)
dealloc(newmem4)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+1CD20F

"hoi4.exe"+1CD1EF: EB 05              -  jmp hoi4.exe+1CD1F6
"hoi4.exe"+1CD1F1: B8 4C 46 7F 02     -  mov eax,hoi4.exe+159464C
"hoi4.exe"+1CD1F6: 8B 00              -  mov eax,[eax]
"hoi4.exe"+1CD1F8: F7 6D F4           -  imul [ebp-0C]
"hoi4.exe"+1CD1FB: 6A 00              -  push 00
"hoi4.exe"+1CD1FD: 68 E8 03 00 00     -  push 000003E8
"hoi4.exe"+1CD202: 52                 -  push edx
"hoi4.exe"+1CD203: 50                 -  push eax
"hoi4.exe"+1CD204: E8 C7 56 89 00     -  call hoi4.exe+A628D0
"hoi4.exe"+1CD209: 89 86 58 02 00 00  -  mov [esi+00000258],eax
// ---------- INJECTING HERE ----------
"hoi4.exe"+1CD20F: 8B 86 5C 02 00 00  -  mov eax,[esi+0000025C]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+1CD215: 39 86 58 02 00 00  -  cmp [esi+00000258],eax
"hoi4.exe"+1CD21B: 7E 06              -  jle hoi4.exe+1CD223
"hoi4.exe"+1CD21D: 89 86 58 02 00 00  -  mov [esi+00000258],eax
"hoi4.exe"+1CD223: 2B 5D 08           -  sub ebx,[ebp+08]
"hoi4.exe"+1CD226: 53                 -  push ebx
"hoi4.exe"+1CD227: E8 64 0C 00 00     -  call hoi4.exe+1CDE90
"hoi4.exe"+1CD22C: 8B 86 54 02 00 00  -  mov eax,[esi+00000254]
"hoi4.exe"+1CD232: 2B 45 0C           -  sub eax,[ebp+0C]
"hoi4.exe"+1CD235: 8D 55 F4           -  lea edx,[ebp-0C]
"hoi4.exe"+1CD238: 89 86 54 02 00 00  -  mov [esi+00000254],eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>370</ID>
      <Description>"Inf.ManPower"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2016-06-06
  Author : omoe

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(manpower,hoi4.exe,03 B0 7C 01 00 00 8B 41 FC) // should be unique
alloc(newmem,$1000)
aobscan(manpowerret,8B D0 8D 4D B8 e8 * * * * 83 C4 04 8B F0)

label(code)
label(return)

newmem:
cmp [ebp+10],manpowerret
jne code

mov [eax+0000017C],#1000000

code:
  add esi,[eax+0000017C]
  jmp return

manpower:
  jmp newmem
  nop
return:
registersymbol(manpower)
//////////////////////////
aobscanmodule(manpower2,hoi4.exe,03 B8 7C 01 00 00 83 EA 01) // should be unique
alloc(newmem2,$1000)
label(code2)
label(return2)

newmem2:
cmp [ebp+10],manpowerret
jne code2
mov [eax+0000017C],#1000000
code2:
  add edi,[eax+0000017C]
  jmp return2

manpower2:
  jmp newmem2
  nop
return2:
registersymbol(manpower2)
//////////////
aobscanmodule(manpower3,hoi4.exe,8B 90 7C 01 00 00 8D 04 3E 5F) // should be unique
alloc(newmem3,$1000)

label(code3)
label(return3)

newmem3:

cmp [ebp+10],manpowerret
jne code3

mov [eax+0000017C],#1000000
code3:
  mov edx,[eax+0000017C]
  jmp return3

manpower3:
  jmp newmem3
  nop
return3:
registersymbol(manpower3)
















[DISABLE]
//code from here till the end of the code will be used to disable the cheat
manpower:
  db 03 B0 7C 01 00 00

unregistersymbol(manpower)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+20B055

"hoi4.exe"+20B03C: 89 5D FC           -  mov [ebp-04],ebx
"hoi4.exe"+20B03F: 89 45 F4           -  mov [ebp-0C],eax
"hoi4.exe"+20B042: 83 FA 02           -  cmp edx,02
"hoi4.exe"+20B045: 7C 29              -  jl hoi4.exe+20B070
"hoi4.exe"+20B047: 8D 4A FE           -  lea ecx,[edx-02]
"hoi4.exe"+20B04A: D1 E9              -  shr ecx,1
"hoi4.exe"+20B04C: 41                 -  inc ecx
"hoi4.exe"+20B04D: 8D 1C 09           -  lea ebx,[ecx+ecx]
"hoi4.exe"+20B050: 89 5D FC           -  mov [ebp-04],ebx
"hoi4.exe"+20B053: 8B 18              -  mov ebx,[eax]
// ---------- INJECTING HERE ----------
"hoi4.exe"+20B055: 03 B3 74 01 00 00  -  add esi,[ebx+00000174]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+20B05B: 8B 58 04           -  mov ebx,[eax+04]
"hoi4.exe"+20B05E: 03 BB 74 01 00 00  -  add edi,[ebx+00000174]
"hoi4.exe"+20B064: 83 C0 08           -  add eax,08
"hoi4.exe"+20B067: 49                 -  dec ecx
"hoi4.exe"+20B068: 75 E9              -  jne hoi4.exe+20B053
"hoi4.exe"+20B06A: 8B 5D F8           -  mov ebx,[ebp-08]
"hoi4.exe"+20B06D: 8B 45 F4           -  mov eax,[ebp-0C]
"hoi4.exe"+20B070: 8B 4D FC           -  mov ecx,[ebp-04]
"hoi4.exe"+20B073: 3B CA              -  cmp ecx,edx
"hoi4.exe"+20B075: 7D 09              -  jnl hoi4.exe+20B080
}
manpower2:
  db 03 B8 7C 01 00 00

unregistersymbol(manpower2)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+20B05E

"hoi4.exe"+20B045: 7C 29              -  jl hoi4.exe+20B070
"hoi4.exe"+20B047: 8D 4A FE           -  lea ecx,[edx-02]
"hoi4.exe"+20B04A: D1 E9              -  shr ecx,1
"hoi4.exe"+20B04C: 41                 -  inc ecx
"hoi4.exe"+20B04D: 8D 1C 09           -  lea ebx,[ecx+ecx]
"hoi4.exe"+20B050: 89 5D FC           -  mov [ebp-04],ebx
"hoi4.exe"+20B053: 8B 18              -  mov ebx,[eax]
"hoi4.exe"+20B055: E9 A6 4F 13 02     -  jmp 02440000
"hoi4.exe"+20B05A: 90                 -  nop
"hoi4.exe"+20B05B: 8B 58 04           -  mov ebx,[eax+04]
// ---------- INJECTING HERE ----------
"hoi4.exe"+20B05E: 03 BB 74 01 00 00  -  add edi,[ebx+00000174]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+20B064: 83 C0 08           -  add eax,08
"hoi4.exe"+20B067: 49                 -  dec ecx
"hoi4.exe"+20B068: 75 E9              -  jne hoi4.exe+20B053
"hoi4.exe"+20B06A: 8B 5D F8           -  mov ebx,[ebp-08]
"hoi4.exe"+20B06D: 8B 45 F4           -  mov eax,[ebp-0C]
"hoi4.exe"+20B070: 8B 4D FC           -  mov ecx,[ebp-04]
"hoi4.exe"+20B073: 3B CA              -  cmp ecx,edx
"hoi4.exe"+20B075: 7D 09              -  jnl hoi4.exe+20B080
"hoi4.exe"+20B077: 8B 04 88           -  mov eax,[eax+ecx*4]
"hoi4.exe"+20B07A: 8B 98 74 01 00 00  -  mov ebx,[eax+00000174]
}
manpower3:
  db 8B 90 7C 01 00 00

unregistersymbol(manpower3)
dealloc(newmem3)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+20B07A

"hoi4.exe"+20B063: 90                 -  nop
"hoi4.exe"+20B064: 83 C0 08           -  add eax,08
"hoi4.exe"+20B067: 49                 -  dec ecx
"hoi4.exe"+20B068: 75 E9              -  jne hoi4.exe+20B053
"hoi4.exe"+20B06A: 8B 5D F8           -  mov ebx,[ebp-08]
"hoi4.exe"+20B06D: 8B 45 F4           -  mov eax,[ebp-0C]
"hoi4.exe"+20B070: 8B 4D FC           -  mov ecx,[ebp-04]
"hoi4.exe"+20B073: 3B CA              -  cmp ecx,edx
"hoi4.exe"+20B075: 7D 09              -  jnl hoi4.exe+20B080
"hoi4.exe"+20B077: 8B 04 88           -  mov eax,[eax+ecx*4]
// ---------- INJECTING HERE ----------
"hoi4.exe"+20B07A: 8B 98 74 01 00 00  -  mov ebx,[eax+00000174]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+20B080: 8D 04 3E           -  lea eax,[esi+edi]
"hoi4.exe"+20B083: 5F                 -  pop edi
"hoi4.exe"+20B084: 5E                 -  pop esi
"hoi4.exe"+20B085: 03 C3              -  add eax,ebx
"hoi4.exe"+20B087: 5B                 -  pop ebx
"hoi4.exe"+20B088: 8B E5              -  mov esp,ebp
"hoi4.exe"+20B08A: 5D                 -  pop ebp
"hoi4.exe"+20B08B: C3                 -  ret
"hoi4.exe"+20B08C: CC                 -  int 3
"hoi4.exe"+20B08D: CC                 -  int 3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>373</ID>
      <Description>"Super Factories Limit"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(facotireslimit,hoi4.exe,03 81 dc 00 00 00 8B 4D) // should be unique
alloc(newmem,$1000)
aobscan(factoriesret,8B F0 C6 45 FC 09 8D 45 DC 8B 4F 30 50 8B 11 FF 52 3C 83 7E 14 10  )
label(code)
label(return)

newmem:

code:

cmp [ebp+4],factoriesret
jne @f
mov [ecx+000000DC],#999
mov [ecx+000000DC+c],#999
mov [ecx+000000DC+18],#999

@@:


  add eax,[ecx+000000DC]
  jmp return

facotireslimit:
  jmp code
  nop
return:
registersymbol(facotireslimit)

[DISABLE]

facotireslimit:
  db 03 81 dc 00 00 00

unregistersymbol(facotireslimit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+2B3F0C

"hoi4.exe"+2B3EED: CC                    -  int 3 
"hoi4.exe"+2B3EEE: CC                    -  int 3 
"hoi4.exe"+2B3EEF: CC                    -  int 3 
"hoi4.exe"+2B3EF0: 55                    -  push ebp
"hoi4.exe"+2B3EF1: 8B EC                 -  mov ebp,esp
"hoi4.exe"+2B3EF3: 51                    -  push ecx
"hoi4.exe"+2B3EF4: 8B 81 B8 00 00 00     -  mov eax,[ecx+000000B8]
"hoi4.exe"+2B3EFA: 2B 81 E4 00 00 00     -  sub eax,[ecx+000000E4]
"hoi4.exe"+2B3F00: 2B 81 D0 00 00 00     -  sub eax,[ecx+000000D0]
"hoi4.exe"+2B3F06: 03 81 AC 00 00 00     -  add eax,[ecx+000000AC]
// ---------- INJECTING HERE ----------
"hoi4.exe"+2B3F0C: 03 81 A0 00 00 00     -  add eax,[ecx+000000A0]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+2B3F12: 8B 4D 08              -  mov ecx,[ebp+08]
"hoi4.exe"+2B3F15: 50                    -  push eax
"hoi4.exe"+2B3F16: C7 45 FC 00 00 00 00  -  mov [ebp-04],00000000
"hoi4.exe"+2B3F1D: E8 7E 73 6A 00        -  call hoi4.exe+95B2A0
"hoi4.exe"+2B3F22: 8B 45 08              -  mov eax,[ebp+08]
"hoi4.exe"+2B3F25: 8B E5                 -  mov esp,ebp
"hoi4.exe"+2B3F27: 5D                    -  pop ebp
"hoi4.exe"+2B3F28: C2 04 00              -  ret 0004
"hoi4.exe"+2B3F2B: CC                    -  int 3 
"hoi4.exe"+2B3F2C: CC                    -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>375</ID>
      <Description>"Fast Construction "</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2016-06-06
  Author : omoe

  This script does blah blah blah
}
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(construction,hoi4.exe,01 4B 28 BF E8 03 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
//1c c4 478 = rsrs ptr
push esi
mov esi,[ebx+1c]
cmp esi,100000
jna code
mov esi,[esi+d8]
cmp esi,100000
jna code
mov esi,[esi+c]
cmp [PlayerID3],esi
jne code
mov ecx,#99999999
cmp [ebx+28],ecx
code:
pop esi

  add [ebx+28],ecx
  mov edi,000003E8
  jmp return

construction:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(construction)


aobscanmodule(fastrepair,hoi4.exe,80 3C 06 64 75 0A 40 3B C2) // should be unique
alloc(newmem2,$1000)

label(code2)
label(return2)

newmem2:
push ebx

mov ebx,[edi+1c]
cmp ebx,100000
jna code2
mov ebx,[ebx+d8]
cmp ebx,100000
jna code2
mov ebx,[ebx+c]
cmp [PlayerID3],ebx
jne code2
mov byte ptr [esi+eax],64
code2:
pop ebx

    cmp byte ptr [esi+eax],64
  jne fastrepair+10
  jmp return2

fastrepair:
  jmp newmem2
  nop
return2:
registersymbol(fastrepair)
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
construction:
  db 01 4B 28 BF E8 03 00 00

unregistersymbol(construction)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+2328CB

"hoi4.exe"+2328A7: 8B 88 8C 00 00 00     -  mov ecx,[eax+0000008C]
"hoi4.exe"+2328AD: 8B 81 F4 00 00 00     -  mov eax,[ecx+000000F4]
"hoi4.exe"+2328B3: 69 C0 E8 03 00 00     -  imul eax,eax,000003E8
"hoi4.exe"+2328B9: 89 45 FC              -  mov [ebp-04],eax
"hoi4.exe"+2328BC: 3B D8                 -  cmp ebx,eax
"hoi4.exe"+2328BE: 89 5D F8              -  mov [ebp-08],ebx
"hoi4.exe"+2328C1: 8D 45 F8              -  lea eax,[ebp-08]
"hoi4.exe"+2328C4: 7F 03                 -  jg hoi4.exe+2328C9
"hoi4.exe"+2328C6: 8D 45 FC              -  lea eax,[ebp-04]
"hoi4.exe"+2328C9: 8B 18                 -  mov ebx,[eax]
// ---------- INJECTING HERE ----------
"hoi4.exe"+2328CB: 01 5F 28              -  add [edi+28],ebx
"hoi4.exe"+2328CE: 83 7F 38 00           -  cmp dword ptr [edi+38],00
// ---------- DONE INJECTING  ----------
"hoi4.exe"+2328D2: C7 45 F8 00 00 00 00  -  mov [ebp-08],00000000
"hoi4.exe"+2328D9: 74 27                 -  je hoi4.exe+232902
"hoi4.exe"+2328DB: 57                    -  push edi
"hoi4.exe"+2328DC: E8 9F 03 00 00        -  call hoi4.exe+232C80
"hoi4.exe"+2328E1: 80 7F 40 00           -  cmp byte ptr [edi+40],00
"hoi4.exe"+2328E5: 89 45 F8              -  mov [ebp-08],eax
"hoi4.exe"+2328E8: 75 0F                 -  jne hoi4.exe+2328F9
"hoi4.exe"+2328EA: 8B 57 38              -  mov edx,[edi+38]
"hoi4.exe"+2328ED: 8B 82 8C 00 00 00     -  mov eax,[edx+0000008C]
"hoi4.exe"+2328F3: 8B 80 F4 00 00 00     -  mov eax,[eax+000000F4]
}

fastrepair:
    db 80 3C 06 64 75 0A

unregistersymbol(fastrepair)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+2400FB

"hoi4.exe"+2400E0: E8 6B 61 FE FF        -  call hoi4.exe+226250
"hoi4.exe"+2400E5: 8B 47 38              -  mov eax,[edi+38]
"hoi4.exe"+2400E8: 8B 48 30              -  mov ecx,[eax+30]
"hoi4.exe"+2400EB: 2B 48 2C              -  sub ecx,[eax+2C]
"hoi4.exe"+2400EE: 74 D7                 -  je hoi4.exe+2400C7
"hoi4.exe"+2400F0: 8D 53 FF              -  lea edx,[ebx-01]
"hoi4.exe"+2400F3: 85 D2                 -  test edx,edx
"hoi4.exe"+2400F5: 78 D0                 -  js hoi4.exe+2400C7
"hoi4.exe"+2400F7: 3B D1                 -  cmp edx,ecx
"hoi4.exe"+2400F9: 7D CC                 -  jnl hoi4.exe+2400C7
// ---------- INJECTING HERE ----------
"hoi4.exe"+2400FB: 8B 40 2C              -  mov eax,[eax+2C]
"hoi4.exe"+2400FE: 80 3C 02 64           -  cmp byte ptr [edx+eax],64
// ---------- DONE INJECTING  ----------
"hoi4.exe"+240102: 75 C3                 -  jne hoi4.exe+2400C7
"hoi4.exe"+240104: FF 4F 3C              -  dec [edi+3C]
"hoi4.exe"+240107: 8B 0D 50 C3 45 02     -  mov ecx,[hoi4.exe+191C350]
"hoi4.exe"+24010D: 89 4F 28              -  mov [edi+28],ecx
"hoi4.exe"+240110: 5E                    -  pop esi
"hoi4.exe"+240111: 5B                    -  pop ebx
"hoi4.exe"+240112: 8B E5                 -  mov esp,ebp
"hoi4.exe"+240114: 5D                    -  pop ebp
"hoi4.exe"+240115: C3                    -  ret
"hoi4.exe"+240116: 8B 77 34              -  mov esi,[edi+34]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>493</ID>
      <Description>"Low Occupation Resistance"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2016-09-16
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(lowoccup,hoi4.exe,8B 4F 08 3B C8 7C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
mov ecx,[edi+14]
cmp ecx,100000
jna code
mov ecx,[ecx+84]
cmp [PlayerID3],ecx
jne code
mov [edi+8],0
code:

  mov ecx,[edi+08]
  cmp ecx,eax
  jmp return

lowoccup:
  jmp newmem
return:
registersymbol(lowoccup)

[DISABLE]

lowoccup:
  db 8B 4F 08 3B C8

unregistersymbol(lowoccup)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+402AF0

"hoi4.exe"+402AD9: 2B 7D FC              -  sub edi,[ebp-04]
"hoi4.exe"+402ADC: 3B F9                 -  cmp edi,ecx
"hoi4.exe"+402ADE: 7D 04                 -  jnl hoi4.exe+402AE4
"hoi4.exe"+402AE0: 8B F9                 -  mov edi,ecx
"hoi4.exe"+402AE2: EB 06                 -  jmp hoi4.exe+402AEA
"hoi4.exe"+402AE4: 3B F8                 -  cmp edi,eax
"hoi4.exe"+402AE6: 7E 02                 -  jle hoi4.exe+402AEA
"hoi4.exe"+402AE8: 8B F8                 -  mov edi,eax
"hoi4.exe"+402AEA: 56                    -  push esi
"hoi4.exe"+402AEB: E8 70 FD FF FF        -  call hoi4.exe+402860
// ---------- INJECTING HERE ----------
"hoi4.exe"+402AF0: 8B 46 0C              -  mov eax,[esi+0C]
"hoi4.exe"+402AF3: 39 7E 08              -  cmp [esi+08],edi
// ---------- DONE INJECTING  ----------
"hoi4.exe"+402AF6: 7E 1C                 -  jle hoi4.exe+402B14
"hoi4.exe"+402AF8: 01 46 08              -  add [esi+08],eax
"hoi4.exe"+402AFB: 8B 46 08              -  mov eax,[esi+08]
"hoi4.exe"+402AFE: 3B C7                 -  cmp eax,edi
"hoi4.exe"+402B00: 7C 2E                 -  jl hoi4.exe+402B30
"hoi4.exe"+402B02: 8B 0D 9C 17 8D 02     -  mov ecx,[hoi4.exe+164179C]
"hoi4.exe"+402B08: 3B C1                 -  cmp eax,ecx
"hoi4.exe"+402B0A: 7E 27                 -  jle hoi4.exe+402B33
"hoi4.exe"+402B0C: 89 4E 08              -  mov [esi+08],ecx
"hoi4.exe"+402B0F: 5F                    -  pop edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>487</ID>
      <Description>"Inf.Stored Supplies "</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2016-06-13
  Author : omoe

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat


aobscanmodule(suppliesstored2,hoi4.exe,01 44 39 0C 8B 46 14) // should be unique
alloc(newmem2,$1000)

label(code2)
label(return2)
registersymbol(invPtr)
label(invPtr)
newmem2:


cmp [PlayerID3+18],esi
jne code2
mov [invPtr],esi
mov [ecx+edi+0C],#1500000000
xor eax,eax
code2:

  add [ecx+edi+0C],eax
  mov eax,[esi+14]
  jmp return2
invPtr:
dd 0
suppliesstored2:
  jmp newmem2
  nop
  nop
return2:
registersymbol(suppliesstored2)

aobscanmodule(storesupplies34,hoi4.exe,8B 44 C8 04 8B CE) // should be unique
alloc(newmem3,$1000)
label(return3)

newmem3:
cmp [invPtr],ebx
jne @f
mov [eax+ecx*8+04],#1500000000
@@:

  mov eax,[eax+ecx*8+04]
  mov ecx,esi
  jmp return3

storesupplies34:
  jmp newmem3
  nop
return3:
registersymbol(storesupplies34)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
{
supplies:
  db 8B 74 1E 0C 2B D0}
unregistersymbol(invPtr)
unregistersymbol(supplies)
//dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+3E0C84

"hoi4.exe"+3E0C6C: 48                    -  dec eax
"hoi4.exe"+3E0C6D: 80 79 20 00           -  cmp byte ptr [ecx+20],00
"hoi4.exe"+3E0C71: 74 03                 -  je hoi4.exe+3E0C76
"hoi4.exe"+3E0C73: 03 41 1C              -  add eax,[ecx+1C]
"hoi4.exe"+3E0C76: 99                    -  cdq 
"hoi4.exe"+3E0C77: F7 79 18              -  idiv [ecx+18]
"hoi4.exe"+3E0C7A: 8B 49 08              -  mov ecx,[ecx+08]
"hoi4.exe"+3E0C7D: 8B 14 91              -  mov edx,[ecx+edx*4]
"hoi4.exe"+3E0C80: EB 02                 -  jmp hoi4.exe+3E0C84
"hoi4.exe"+3E0C82: 33 D2                 -  xor edx,edx
// ---------- INJECTING HERE ----------
"hoi4.exe"+3E0C84: 8B 74 3E 0C           -  mov esi,[esi+edi+0C]
"hoi4.exe"+3E0C88: 8B 12                 -  mov edx,[edx]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+3E0C8A: 83 C7 10              -  add edi,10
"hoi4.exe"+3E0C8D: FF 4D FC              -  dec [ebp-04]
"hoi4.exe"+3E0C90: 89 34 9A              -  mov [edx+ebx*4],esi
"hoi4.exe"+3E0C93: 75 AB                 -  jne hoi4.exe+3E0C40
"hoi4.exe"+3E0C95: 5F                    -  pop edi
"hoi4.exe"+3E0C96: 5E                    -  pop esi
"hoi4.exe"+3E0C97: 5B                    -  pop ebx
"hoi4.exe"+3E0C98: 8B E5                 -  mov esp,ebp
"hoi4.exe"+3E0C9A: 5D                    -  pop ebp
"hoi4.exe"+3E0C9B: C3                    -  ret 
}
suppliesstored2:
  db 01 44 39 0C 8B 46 14

unregistersymbol(suppliesstored2)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+1C8C33

"hoi4.exe"+1C8C16: 8B 4B 1C           -  mov ecx,[ebx+1C]
"hoi4.exe"+1C8C19: 2B 4B 18           -  sub ecx,[ebx+18]
"hoi4.exe"+1C8C1C: 33 C0              -  xor eax,eax
"hoi4.exe"+1C8C1E: C1 F9 03           -  sar ecx,03
"hoi4.exe"+1C8C21: 89 45 F4           -  mov [ebp-0C],eax
"hoi4.exe"+1C8C24: 89 4D F8           -  mov [ebp-08],ecx
"hoi4.exe"+1C8C27: 85 C9              -  test ecx,ecx
"hoi4.exe"+1C8C29: 0F 8E 8D 00 00 00  -  jng hoi4.exe+1C8CBC
"hoi4.exe"+1C8C2F: 90                 -  nop
"hoi4.exe"+1C8C30: 8B 53 18           -  mov edx,[ebx+18]
// ---------- INJECTING HERE ----------
"hoi4.exe"+1C8C33: 8B 7C C2 04        -  mov edi,[edx+eax*8+04]
"hoi4.exe"+1C8C37: 8D 04 C2           -  lea eax,[edx+eax*8]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+1C8C3A: 3B 3D F4 C6 30 02  -  cmp edi,[hoi4.exe+18AC6F4]
"hoi4.exe"+1C8C40: 74 6B              -  je hoi4.exe+1C8CAD
"hoi4.exe"+1C8C42: 8B 18              -  mov ebx,[eax]
"hoi4.exe"+1C8C44: 8B 46 04           -  mov eax,[esi+04]
"hoi4.exe"+1C8C47: 8D 55 EC           -  lea edx,[ebp-14]
"hoi4.exe"+1C8C4A: 89 5D EC           -  mov [ebp-14],ebx
"hoi4.exe"+1C8C4D: 89 7D F0           -  mov [ebp-10],edi
"hoi4.exe"+1C8C50: 3B D0              -  cmp edx,eax
"hoi4.exe"+1C8C52: 73 37              -  jae hoi4.exe+1C8C8B
"hoi4.exe"+1C8C54: 8B 0E              -  mov ecx,[esi]
}
storesupplies34:
  db 8B 44 C8 04 8B CE

unregistersymbol(storesupplies34)
dealloc(newmem3)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+1FF8B3

"hoi4.exe"+1FF896: 8B 4B 1C           -  mov ecx,[ebx+1C]
"hoi4.exe"+1FF899: 2B 4B 18           -  sub ecx,[ebx+18]
"hoi4.exe"+1FF89C: 33 C0              -  xor eax,eax
"hoi4.exe"+1FF89E: C1 F9 03           -  sar ecx,03
"hoi4.exe"+1FF8A1: 89 45 F4           -  mov [ebp-0C],eax
"hoi4.exe"+1FF8A4: 89 4D F8           -  mov [ebp-08],ecx
"hoi4.exe"+1FF8A7: 85 C9              -  test ecx,ecx
"hoi4.exe"+1FF8A9: 0F 8E 8D 00 00 00  -  jng hoi4.exe+1FF93C
"hoi4.exe"+1FF8AF: 90                 -  nop
"hoi4.exe"+1FF8B0: 8B 53 18           -  mov edx,[ebx+18]
// ---------- INJECTING HERE ----------
"hoi4.exe"+1FF8B3: 8B 7C C2 04        -  mov edi,[edx+eax*8+04]
"hoi4.exe"+1FF8B7: 8D 04 C2           -  lea eax,[edx+eax*8]
// ---------- DONE INJECTING  ----------
"hoi4.exe"+1FF8BA: 3B 3D 8C 0E 1E 02  -  cmp edi,[hoi4.exe+15B0E8C]
"hoi4.exe"+1FF8C0: 74 6B              -  je hoi4.exe+1FF92D
"hoi4.exe"+1FF8C2: 8B 18              -  mov ebx,[eax]
"hoi4.exe"+1FF8C4: 8B 46 04           -  mov eax,[esi+04]
"hoi4.exe"+1FF8C7: 8D 55 EC           -  lea edx,[ebp-14]
"hoi4.exe"+1FF8CA: 89 5D EC           -  mov [ebp-14],ebx
"hoi4.exe"+1FF8CD: 89 7D F0           -  mov [ebp-10],edi
"hoi4.exe"+1FF8D0: 3B D0              -  cmp edx,eax
"hoi4.exe"+1FF8D2: 73 37              -  jae hoi4.exe+1FF90B
"hoi4.exe"+1FF8D4: 8B 0E              -  mov ecx,[esi]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>506</ID>
      <Description>"No World Tention"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : hoi4.exe
  Version: 
  Date   : 2017-02-24
  Author : omoe

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(worldtention,hoi4.exe,8B 40 0C 01 06) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
mov [eax+0C],0
  mov eax,[eax+0C]
  add [esi],eax
  jmp return

worldtention:
  jmp code
return:
registersymbol(worldtention)

[DISABLE]

worldtention:
  db 8B 40 0C 01 06

unregistersymbol(worldtention)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "hoi4.exe"+35687C

"hoi4.exe"+356861: 8B F8              -  mov edi,eax
"hoi4.exe"+356863: 8B 45 0C           -  mov eax,[ebp+0C]
"hoi4.exe"+356866: FF 30              -  push [eax]
"hoi4.exe"+356868: E8 33 D2 EB FF     -  call hoi4.exe+213AA0
"hoi4.exe"+35686D: 3B F8              -  cmp edi,eax
"hoi4.exe"+35686F: 8B 7D 0C           -  mov edi,[ebp+0C]
"hoi4.exe"+356872: 0F 94 C0           -  sete al
"hoi4.exe"+356875: 84 C0              -  test al,al
"hoi4.exe"+356877: 74 08              -  je hoi4.exe+356881
"hoi4.exe"+356879: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
"hoi4.exe"+35687C: 8B 40 0C           -  mov eax,[eax+0C]
"hoi4.exe"+35687F: 01 06              -  add [esi],eax
// ---------- DONE INJECTING  ----------
"hoi4.exe"+356881: A1 5C A9 C7 01     -  mov eax,[hoi4.exe+10EA95C]
"hoi4.exe"+356886: 8B 0E              -  mov ecx,[esi]
"hoi4.exe"+356888: 3B C8              -  cmp ecx,eax
"hoi4.exe"+35688A: 7D 04              -  jnl hoi4.exe+356890
"hoi4.exe"+35688C: 89 06              -  mov [esi],eax
"hoi4.exe"+35688E: EB 0E              -  jmp hoi4.exe+35689E
"hoi4.exe"+356890: 81 F9 A0 86 01 00  -  cmp ecx,000186A0
"hoi4.exe"+356896: 7E 06              -  jle hoi4.exe+35689E
"hoi4.exe"+356898: C7 06 A0 86 01 00  -  mov [esi],000186A0
"hoi4.exe"+35689E: 8B 15 14 66 9C 01  -  mov edx,[hoi4.exe+E36614]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
 