<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>98</ID>
      <Description>"INFINITE RESOURCES"</Description>
      <Options moBindActivation="1" moRecursiveSetValue="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>49</Key>
          </Keys>
          <Value>99999</Value>
          <Description>On\Off INFINITE RESOURCES</Description>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>49</Key>
          </Keys>
          <Description>On\Off INFINITE RESOURCES</Description>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>15</ID>
          <Description>"WOOD"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>"AGE2_X1.exe"+00295794</Address>
          <Offsets>
            <Offset>4</Offset>
            <Offset>A8</Offset>
            <Offset>FC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"FOOD"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>"AGE2_X1.exe"+00295794</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>A8</Offset>
            <Offset>FC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"GOLD"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>"AGE2_X1.exe"+00295794</Address>
          <Offsets>
            <Offset>C</Offset>
            <Offset>A8</Offset>
            <Offset>FC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"ROCK"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>"AGE2_X1.exe"+00295794</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>A8</Offset>
            <Offset>FC</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>99</ID>
      <Description>"INFINITE POPULATION"</Description>
      <Options moBindActivation="1" moRecursiveSetValue="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>50</Key>
          </Keys>
          <Description>On\Off INFINITE POPULATION</Description>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>50</Key>
          </Keys>
          <Value>10</Value>
          <Description>On\Off INFINITE POPULATION</Description>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"NR. POP."</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>"AGE2_X1.exe"+003912A0</Address>
          <Offsets>
            <Offset>2C</Offset>
            <Offset>A8</Offset>
            <Offset>4</Offset>
            <Offset>4C</Offset>
            <Offset>424</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>83</ID>
          <Description>"TOTAL POP."</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>"AGE2_X1.exe"+003912A0</Address>
          <Offsets>
            <Offset>10</Offset>
            <Offset>A8</Offset>
            <Offset>4</Offset>
            <Offset>4C</Offset>
            <Offset>424</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>92</ID>
      <Description>"GOD MODE"</Description>
      <Options moBindActivation="1" moRecursiveSetValue="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>51</Key>
          </Keys>
          <Description>On\Off GOD MODE</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>90</ID>
          <Description>"UNITS"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(fr)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
push eax //save the original value of eax
mov eax,[esi+0C] //save the address on 0C to eax
cmp [esi+9c],1 //compare player ID
pop eax //load the original value of eax
je fr
jmp originalcode

fr:
fadd dword ptr [esi+30]
or ebx,-01
jmp exit

originalcode:
fsubr dword ptr [esi+30]
or ebx,-01
jmp exit

exit:
jmp returnhere

"age2_x1.Exe"+1CE616:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"age2_x1.Exe"+1CE616:
fsubr dword ptr [esi+30]
or ebx,-01
//Alt: db D8 6E 30 83 CB FF
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>87</ID>
          <Description>"UNITS"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(fr)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
push eax //save the original value of eax
mov eax,[esi+0C] //save the address on 0C to eax
cmp [eax+9C],1 //compare player ID
pop eax //load the original value of eax
je fr
jmp originalcode

fr:
fadd dword ptr [esi+30]
nop
jmp exit

originalcode:
fst dword ptr [esi+30]
je age2_x1.Exe+1CE68D
jmp exit

exit:
jmp returnhere

"age2_x1.Exe"+1CE61E:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"age2_x1.Exe"+1CE61E:
fst dword ptr [esi+30]
je age2_x1.Exe+1CE68D
//Alt: db D9 56 30 74 6A
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>88</ID>
          <Description>"UNITS"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(fr)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
push eax //save the original value of eax
mov eax,[esi+0C] //save the address on 0C to eax
cmp [eax+9C],1 //compare player ID
pop eax //load the original value of eax
je fr
jmp originalcode

fr:
fadd dword ptr [esi+30]
pop ebp
fcomp qword ptr [age2_x1.Exe+236138]
jmp exit

originalcode:
fsub dword ptr [esi+30]
pop ebp
fcomp qword ptr [age2_x1.Exe+236138]
jmp exit


exit:
jmp returnhere

"age2_x1.Exe"+C24AE:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"age2_x1.Exe"+C24AE:
fsub dword ptr [esi+30]
pop ebp
fcomp qword ptr [age2_x1.Exe+236138]
//Alt: db D8 66 30 5D DC 1D 38 61 63 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>124</ID>
          <Description>"UNITS"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(fr)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
push eax //save the original value of eax
mov eax,[ecx+0C] //save the address on 0C to eax
cmp [eax+4],1 //compare player ID
pop eax //load the original value of eax
je fr
jmp originalcode

fr:
nop
fcomp dword ptr [age2_x1.exe+2355C8]
jmp exit

originalcode:
fld dword ptr [ecx+44]
fcomp dword ptr [age2_x1.exe+2355C8]
jmp exit

exit:
jmp returnhere

"age2_x1.exe"+345E2:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"age2_x1.exe"+345E2:
fld dword ptr [ecx+44]
fcomp dword ptr [age2_x1.exe+2355C8]
//Alt: db D9 41 44 D8 1D C8 55 63 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>125</ID>
          <Description>"UNITS"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(fr)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
push eax //save the original value of eax
mov eax,[edx+0C] //save the address on 0C to eax
cmp [eax+4],1 //compare player ID
pop eax //load the original value of eax
je fr
jmp originalcode

fr:
nop
fcomp dword ptr [age2_x1.exe+2355A1]
jmp exit

originalcode:
fld dword ptr [edx+44]
fcomp dword ptr [age2_x1.exe+2355D8]
jmp exit

exit:
jmp returnhere

"age2_x1.exe"+B7B04:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"age2_x1.exe"+B7B04:
fld dword ptr [edx+44]
fcomp dword ptr [age2_x1.exe+2355D8]
//Alt: db D9 42 44 D8 1D D8 55 63 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>91</ID>
          <Description>"BUILDINGS"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(fr)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
push eax //save the original value of eax
mov eax,[edi+0C] //save the address on 0C to eax
cmp [eax+9C],1 //compare player ID
pop eax //load the original value of eax
je fr
jmp originalcode

fr:
nop
je age2_x1.Exe+CA5CB
jmp exit

originalcode:
test ah,01
je age2_x1.Exe+CA5CB
jmp exit

exit:
jmp returnhere

"age2_x1.Exe"+CA5B9:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"age2_x1.Exe"+CA5B9:
test ah,01
je age2_x1.Exe+CA5CB
//Alt: db F6 C4 01 74 0D
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>89</ID>
          <Description>"BUILDINGS"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(fr)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
push eax //save the original value of eax
mov eax,[edi+0C] //save the address on 0C to eax
cmp [eax+9C],1 //compare player ID
pop eax //load the original value of eax
je fr
jmp originalcode

fr:
fadd dword ptr [edi+30]
fcomp qword ptr [age2_x1.Exe+236138]
jmp exit

originalcode:
fsub dword ptr [edi+30]
fcomp qword ptr [age2_x1.Exe+236138]
jmp exit

exit:
jmp returnhere

"age2_x1.Exe"+CA5AE:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"age2_x1.Exe"+CA5AE:
fsub dword ptr [edi+30]
fcomp qword ptr [age2_x1.Exe+236138]
//Alt: db D8 67 30 DC 1D 38 61 63 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>97</ID>
      <Description>"1 HIT KILL"</Description>
      <Options moBindActivation="1" moRecursiveSetValue="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>52</Key>
          </Keys>
          <Description>On\Off 1 HIT KILL</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>96</ID>
          <Description>"BUILDINGS"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(fr)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
push eax //save the original value of eax
mov eax,[edi+0C] //save the address on 0C to eax
cmp [eax+4],1 //compare player ID
pop eax //load the original value of eax
je fr
jmp originalcode

fr:
mov [edi+30],00000000
mov [esp+04],00000000
jmp exit



originalcode:
mov eax,[edi+30]
mov [esp+04],eax
jmp exit

exit:
jmp returnhere

"age2_x1.Exe"+CA524:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"age2_x1.Exe"+CA524:
mov eax,[edi+30]
mov [esp+04],eax
//Alt: db 8B 47 30 89 44 24 04
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"UNITS"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(fr)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
push eax //save the original value of eax
mov eax,[esi+0C] //save the address on 0C to eax
cmp [eax+4],1 //compare player ID
pop eax //load the original value of eax
je fr
jmp originalcode

fr:
mov [esi+30],00000000
mov [esp+10],00000000
jmp exit

originalcode:
mov eax,[esi+30]
mov [esp+10],eax

exit:
jmp returnhere

"age2_x1.Exe"+C2279:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"age2_x1.Exe"+C2279:
mov eax,[esi+30]
mov [esp+10],eax
//Alt: db 8B 46 30 89 44 24 10
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>126</ID>
      <Description>"1 CLICK KILL (OPK)"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(fr)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
push eax //save the original value of eax
mov eax,[ecx+0C] //save the address on 0C to eax
cmp [eax+4],1 //compare player ID
pop eax //load the original value of eax
je fr
jmp originalcode

fr:
mov [ecx+30],00000000
fcomp dword ptr [esi+0000088C]
jmp exit

originalcode:
fld dword ptr [ecx+30]
fcomp dword ptr [esi+0000088C]
jmp exit

exit:
jmp returnhere

"age2_x1.exe"+512B4:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"age2_x1.exe"+512B4:
fld dword ptr [ecx+30]
fcomp dword ptr [esi+0000088C]
//Alt: db D9 41 30 D8 9E 8C 08 00 00
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>53</Key>
          </Keys>
          <Description>On/Off 1 CLICK KILL</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>103</ID>
      <Description>"TEAM CHANGER"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>"age2_x1.Exe"+00295794</Address>
      <Offsets>
        <Offset>9C</Offset>
        <Offset>C</Offset>
        <Offset>170</Offset>
        <Offset>FC</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
