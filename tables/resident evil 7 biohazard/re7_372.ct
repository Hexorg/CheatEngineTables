<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <Forms>
    <form_ResidentEvil7_itemswap Class="TCEForm" Encoding="Ascii85">t)41d)=Ar4$957sPAR1gHz7qqY_5shkq]+6sZA?8DiXz!+dSHoWRi@H%vj?T%46@jJOEo;hc#OsfVudRq]4I6CXRhBbIv#aIgf1sdY!WucF#XOqip)QD1I*wD8U0n[}^HsuP!i0*8q:qrE?goR;i2iM_d;m*;p(o)b*O^%AfFnkFDQ@=ZcR3N-8?aL]+XfK]}-GeuPD]JgTPOvmmEK6D+[b-IxY[h7j=E88P69qB?YE$Vs2a4@BvbOj#hRlf?kQlyF8PyWGAah#f3h/sZ8W6Q:XsFU%h0oKBY:bc4S?,MwBx^h2RyduGG,(/sWGOW_o)!r4bkkkf-/n,+@%OF*%-4ntM0dLFBUrkmxvtMa+NzIQpTJCat=#H1O+)VJQaGEt6CBgz}AT$vRo,?oLIDD;b,Ij.keA3fKsIP_*Gf6//k({1GK*},mlK3=C%qiZlT7dzx6$mEhYZ?pG)F]uPk]3Y;DA+q$(L_7[tA[HtVQ71ZZqVs{#9,iZH81@w49VvwM#c$fvbY00Ng$.[k0W0pNwT_E%/h6Rz:WRo+/y19RUw@Q[+n@[g$ThKdGJ]mRVT77$^x-.BFA8)#8.PT{rSjH4ibGFfec8MeenaIH.BHqs2aDfS#NP[a0H7-PdzZqCWL5vyZrV)IJu.nq!*DX)n(]KDvprRt8yP9l=+-A6Wx.R[nOvwP+=WP.oJZpdG,i]gC;d^EShq23:I5-z]ogTeT^UaFc=.D.ri+-D@kIpm?dp</form_ResidentEvil7_itemswap>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Current Health"</Description>
      <VariableType>Float</VariableType>
      <Address>"re7.exe"+070DADB0</Address>
      <Offsets>
        <Offset>24</Offset>
        <Offset>70</Offset>
        <Offset>28</Offset>
        <Offset>28</Offset>
        <Offset>58</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Max Health"</Description>
      <VariableType>Float</VariableType>
      <Address>"re7.exe"+070DADB0</Address>
      <Offsets>
        <Offset>20</Offset>
        <Offset>70</Offset>
        <Offset>28</Offset>
        <Offset>28</Offset>
        <Offset>58</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Freeze Ammo Clip (clip=4)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : re7.exe
// Author : mgr.inz.Player
[ENABLE]
aobscanmodule(aob_clipAmmo,re7.exe,8B 48 24 89 8C 24 90 00 00 00)
registersymbol(aob_clipAmmo)
alloc(newmem_clipAmmo,1024,re7.exe)
label(return_clipAmmo)

newmem_clipAmmo:
  mov [rax+24],4
  mov ecx,[rax+24]
  mov [rsp+00000090],ecx
  jmp return_clipAmmo

aob_clipAmmo:
  jmp newmem_clipAmmo
  nop
  nop
  nop
  nop
  nop
return_clipAmmo:

[DISABLE]
aob_clipAmmo:
  db 8B 48 24 89 8C 24 90 00 00 00

unregistersymbol(aob_clipAmmo)
dealloc(newmem_clipAmmo)

{
// ORIGINAL CODE - INJECTION POINT: "re7.exe"+8C87DFC

"re7.exe"+8C87DD8: 48 85 FF                 -  test rdi,rdi
"re7.exe"+8C87DDB: 75 13                    -  jne re7.exe+8C87DF0
"re7.exe"+8C87DDD: 45 31 C0                 -  xor r8d,r8d
"re7.exe"+8C87DE0: 8D 57 26                 -  lea edx,[rdi+26]
"re7.exe"+8C87DE3: 48 89 D9                 -  mov rcx,rbx
"re7.exe"+8C87DE6: E8 F5 FE 51 00           -  call re7.exe+91A7CE0
"re7.exe"+8C87DEB: E9 BE 04 00 00           -  jmp re7.exe+8C882AE
"re7.exe"+8C87DF0: 48 8B 87 78 01 00 00     -  mov rax,[rdi+00000178]
"re7.exe"+8C87DF7: 48 85 C0                 -  test rax,rax
"re7.exe"+8C87DFA: 74 0C                    -  je re7.exe+8C87E08
// ---------- INJECTING HERE ----------
"re7.exe"+8C87DFC: 8B 48 24                 -  mov ecx,[rax+24]
"re7.exe"+8C87DFF: 89 8C 24 90 00 00 00     -  mov [rsp+00000090],ecx
// ---------- DONE INJECTING  ----------
"re7.exe"+8C87E06: EB 08                    -  jmp re7.exe+8C87E10
"re7.exe"+8C87E08: 44 89 B4 24 90 00 00 00  -  mov [rsp+00000090],r14d
"re7.exe"+8C87E10: 48 8B 87 68 01 00 00     -  mov rax,[rdi+00000168]
"re7.exe"+8C87E17: 48 85 C0                 -  test rax,rax
"re7.exe"+8C87E1A: 75 0A                    -  jne re7.exe+8C87E26
"re7.exe"+8C87E1C: 44 89 B4 24 88 00 00 00  -  mov [rsp+00000088],r14d
"re7.exe"+8C87E24: EB 0A                    -  jmp re7.exe+8C87E30
"re7.exe"+8C87E26: 8B 40 40                 -  mov eax,[rax+40]
"re7.exe"+8C87E29: 89 84 24 88 00 00 00     -  mov [rsp+00000088],eax
"re7.exe"+8C87E30: 4C 89 64 24 48           -  mov [rsp+48],r12
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Item Swapper"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$Lua}
if syntaxcheck then return end

ResidentEvil7_basePtr = 're7.exe+070DADB0'

ResidentEvil7_BagItemCount    =     '[['..ResidentEvil7_basePtr..']+60]+28'
ResidentEvil7_BagItemName     = '[[[[[['..ResidentEvil7_basePtr..']+60]+20]+__]+28]+80]+24'
ResidentEvil7_BagItemQuantity =  '[[[[['..ResidentEvil7_basePtr..']+60]+20]+__]+28]+88'

ResidentEvil7_BagItemClass =       '[[[[['..ResidentEvil7_basePtr..']+60]+20]+__]+28]+80'
ResidentEvil7_BagItemClass_ptr1 = '[[[[[['..ResidentEvil7_basePtr..']+60]+20]+__]+28]+80]+0'
ResidentEvil7_BagItemClass_ptr2 = '[[[[[['..ResidentEvil7_basePtr..']+60]+20]+__]+28]+80]+18'

ResidentEvil7_Items = {'== Weapons - Melee ==',
'Bar:Crowbar',
'ChainSaw:Chain Saw',
'CircularSaw:Circular Saw',
'HandAxe:Axe',
'Knife:Knife',
'MiaKnife:Survival Knife',
'',
'== Weapons - Firearms ==',
'Burner:Flamethrower',
'GrenadeLauncher:Grenade Launcher',
'Handgun_Albert:Albert-01',
'Handgun_Albert_Reward:Albert-01 R',
'Handgun_G17:G17 Handgun',
'Handgun_M19:M19 Handgun',
'Handgun_MPM:MPM Handgun',
'MachineGun:P19 Machine Gun',
'Magnum:44 Mag',
'Shotgun_DB:M21 Shotgun',
'Shotgun_M37:M37 Shotgun',
'BlueBlaster:BlueBlaster',
'HyperBlaster:HyperBlaster',
'RedBlaster:RedBlaster',
'',
'== Weapons - Thrown ==',
'LiquidBomb:Remote Bomb',
'',
'== Ammo ==',
'UnlimitedAmmo:Infinite Ammo',
'AcidBulletS:Neuro Rounds',
'BurnerBullet:Burner Fuel',
'FlameBulletS:Flame Rounds',
'HandgunBullet:Handgun Ammo',
'HandgunBulletL:Enhanced Handgun Ammo',
'MachineGunBullet:Machine Gun Ammo',
'MagnumBullet:44 Mag Ammo',
'ShotgunBullet:Shotgun Ammo',
'',
'== Medicine ==',
'EyeDrops:Psychostimulants',
'Herb:Herb',
'RemedyL:Strong First Aid Med',
'RemedyM:First Aid Med',
'',
'== Player Upgrades ==',
'AlphaGrass:X-ray Glasses',
'BookDefence01:The Secrets Of Defense',
'BookDefence02:The Essence Of Defense',
'Depressant:Stabilizer - Faster Reload',
'Stimulant:Steroids - Increase Max Health',
'EasyBoots:Walking Shoes',
'',
'== Coins ==',
'Coin:Antique Coin',
'GoodLuckCoinA:Defense Coin',
'GoodLuckCoinB:Attack Coin',
'GoodLuckCoinC:Instinct Coin',
'GoodLuckCoinD:GoodLuckCoinD',
'GoodLuckCoinE:GoodLuckCoinE',
'PowerUpCoin01A:Assault Coin',
'PowerUpCoin01B:Iron Defense Coin',
'',
'== Crafting ==',
'Alcohol:Solid Fuel',
'AlloyClay:Chilled Chem Fluid',
'ChemicalL:Seperating Agent',
'ChemicalM:Strong Chem Fluid',
'ChemicalS:Chem Fluid',
'Flower:Supplements',
'Gunpowder:Gun Powder',
'Magnesium:Weak Acid',
'RepairKit:Gun Repair Kit',
'',
'== Documents/Books ==',
'MailMia:Email from Mia',
'MiaDriversLicense:Mia Driving License',
'ProposalBookFf:Project Proposal',
'',
'== Keys ==',
'3CrestKeyA:Blue Dogs Head',
'3CrestKeyB:White Dogs Head',
'3CrestKeyC:Red Dogs Head',
'CabinKey:Captains Cabin Locker Key',
'CylinderKey:Lock Pick',
'EntranceHallKey:Ox Statuette',
'EthanCarKey:Car Key',
'FloorDoorKey:Hatch Key',
'LucasCardKey:Keycard - Blue',
'LucasCardKey2:Keycard - Red',
'MasterKey:Snake Key',
'MorgueKey:Scorpion Key',
'SpareKey:Corrosive',
'TalismanKey:Crow Key',
'WorkroomKey:Dissection Room Key',
'',
'== Maps - Treasure Maps ==',
'TreasureMap01:Treasure Photo - Morgue',
'TreasureMap02:Treasure Photo - Old House',
'TreasureMap03:Treasure Photo - Master Bedroom',
'',
'== Mission Items ==',
'Battery:Battery',
'BrokenHandgun_M19:Broken Handgun',
'BrokenShotgun_DB:Broken Shotgun',
'BurnerPartsA:Burner Grip',
'BurnerPartsB:Burner Nozzle',
'ChainCutter:Bolt Cutters',
'Crank:Crank',
'DummyAxe:Toy Axe',
'EvCable:Power Cable',
'EvelynRadar1:Eveline Strange Bottle',
'EvelynRadar2:Eveline Tissue Samples (1)',
'EvelynRadar3:Eveline Tissue Samples (2)',
'EvelynRadar4:Eveline Tissue Samples (3)',
'EvOpener:Lug Wrench',
'Fuse:Fuse',
'FuseCh4:General Purpose Fuse',
'Lantern:Lantern',
'PendulumClock:Clock Pendulum',
'SerumComplete:Serum Complete',
'SerumMaterialA:D-Series Arm',
'SerumMaterialB:D-Series Head',
'SerumTypeE:E-Necrotoxin',
'SilhouettePazzlePiece:Wooden Statuette',
'SilhouettePazzlePieceOldHouse:Stone Statuette',
'Timebomb:Time bomb',
'ToyShotgun:Model Shotgun',
'',
'== Body Parts ==',
'EthanLeg:Ethans Leg',
'HandCutOff:Ethans Hand',
'',
'== Mission Items (HappyBirthday) ==',
'Balloonbomb:Balloon',
'Candle:Candle',
'Glasses:Dirty Telescope',
'ScrewFinger:Dummy Finger',
'Quill:Quill Pen',
'Valve:Valve Handle',
'SpringCoil:Winding Key',
'',
'== Other ==',
'SaveTape:Cassette Tape (Save)',
'SupplyBoxA:Box A (2xHerb,RemedyM,RemedyL)',
'SupplyBoxOpenedA:Box A (Opened)',
'SupplyBoxB:Box B (Gunpowder,10xHandgunBullet,3xHandgunBulletL)',
'SupplyBoxOpenedB:Box B (Opened)',
'SupplyBoxC:Box C (RemedyM,7xShotgunBullet)',
'SupplyBoxOpenedC:Box C (Opened)',
'',
'== Videotapes ==',
'FoundFootage000:Derelict House Footage (1)',
'FoundFootage010:FoundFootage010',
'FoundFootage020:Derelict House Footage (2)',
'FoundFootage030:Mia',
'FoundFootage040:Happy Birthday',
'FoundFootage050:Old Videotape'
}

ResidentEvil7_Items_NameDescBinds = {}

form_ResidentEvil7_itemswap.lbAvailableItems.clear()
for i,v in ipairs(ResidentEvil7_Items) do
  local listboxNewItem = v:gsub('(.-):','')
  local itemInternalName = v:match('(.-):')
  form_ResidentEvil7_itemswap.lbAvailableItems.Items.add(listboxNewItem)
  if itemInternalName~=nil then
    ResidentEvil7_Items_NameDescBinds[itemInternalName] = listboxNewItem
    ResidentEvil7_Items_NameDescBinds[listboxNewItem] = itemInternalName
  end
end

function ResidentEvil7_refreshBagItems()
  --refreshing bag items
  local index = form_ResidentEvil7_itemswap.lbBagItems.ItemIndex
  form_ResidentEvil7_itemswap.lbBagItems.clear()

  local itemCount = readInteger(ResidentEvil7_BagItemCount) or 0
  for slot=1,itemCount do
    local offset = string.format('%X',(slot-1)*8+0x30)
    local name = readString(ResidentEvil7_BagItemName:gsub('__',offset), 128, true)
    local nameEx = ResidentEvil7_Items_NameDescBinds[name] or name
    form_ResidentEvil7_itemswap.lbBagItems.Items.add(nameEx)
  end
  if index&lt;itemCount then
    form_ResidentEvil7_itemswap.lbBagItems.ItemIndex = index
  end

  ResidentEvil7_ListBoxSelChange()
end

function ResidentEvil7_ListBoxSelChange()
  local bagItems = form_ResidentEvil7_itemswap.lbBagItems
  local availItems = form_ResidentEvil7_itemswap.lbAvailableItems

  if bagItems.ItemIndex==-1 or availItems.ItemIndex==-1 then
    form_ResidentEvil7_itemswap.btnSwap.Enabled=false
    return
  end

  local selItemText = availItems.Items[availItems.ItemIndex]

  if selItemText=='' or selItemText:match('==') then
    form_ResidentEvil7_itemswap.btnSwap.Enabled=false
    return
  end

  form_ResidentEvil7_itemswap.btnSwap.Enabled=true
end

function ResidentEvil7_swapSelectedItem()
  local bagItems = form_ResidentEvil7_itemswap.lbBagItems
  local availItems = form_ResidentEvil7_itemswap.lbAvailableItems
  if bagItems.ItemIndex==-1 or availItems.ItemIndex==-1 then return end

  local offset = string.format('%X',(bagItems.ItemIndex)*8+0x30)
  local ptr1 = readQword((ResidentEvil7_BagItemClass_ptr1:gsub('__',offset)))
  local ptr2 = readQword((ResidentEvil7_BagItemClass_ptr2:gsub('__',offset)))
  local name = ResidentEvil7_Items_NameDescBinds[availItems.Items[availItems.ItemIndex]]
  local input="8:"..ptr1.." 4:* 4:* 4:0 4:0 8:"..ptr2.." 4:"..(#name).." su:'"..name.."'"

  local ms = createMemScan()
  ms.OnlyOneResult = true
  form_ResidentEvil7_itemswap.btnSwap.Caption = 'Wait'
  form_ResidentEvil7_itemswap.btnSwap.Enabled=false
  ms.firstScan(soExactValue, vtGrouped, rtTruncated, input, '',
               '0', '7fffffffffffffff' ,'-X+W-C' ,fsmAligned ,"4",
               false, false, false, false)
  ms.waitTillDone()
  local address = ms.Result
  ms.destroy()
  form_ResidentEvil7_itemswap.btnSwap.Enabled=true

  if address then
    writeQword(ResidentEvil7_BagItemClass:gsub('__',offset),address)
    ResidentEvil7_refreshBagItems()
    form_ResidentEvil7_itemswap.btnSwap.Caption = 'Succeeded'
    createTimer(nil,true).OnTimer = function(t) t.destroy()
     sleep(500)
     form_ResidentEvil7_itemswap.btnSwap.Caption = 'Swap' end
  else
    form_ResidentEvil7_itemswap.btnSwap.Caption = 'Failed'
    createTimer(nil,true).OnTimer = function(t) t.destroy()
     sleep(500)
     form_ResidentEvil7_itemswap.btnSwap.Caption = 'Swap' end
  end
end

function ResidentEvil7_itemSwapShow()
  ResidentEvil7_refreshBagItems()
  form_ResidentEvil7_itemswap.show()
end

function ResidentEvil7_itemSwapHide()
  form_ResidentEvil7_itemswap.hide()
end

function ResidentEvil7_itemSwapOnClose()
  local itemswapperMR = getTableEntry('Item Swapper')
  itemswapperMR.Active = false
  return caNone
end

form_ResidentEvil7_itemswap.OnClose = ResidentEvil7_itemSwapOnClose
form_ResidentEvil7_itemswap.lbBagItems.OnSelectionChange = ResidentEvil7_ListBoxSelChange
form_ResidentEvil7_itemswap.lbAvailableItems.OnSelectionChange = ResidentEvil7_ListBoxSelChange
form_ResidentEvil7_itemswap.btnSwap.OnClick = ResidentEvil7_swapSelectedItem
form_ResidentEvil7_itemswap.btnRefresh.OnClick = ResidentEvil7_refreshBagItems

ResidentEvil7_itemSwapShow()
{$Asm}

[DISABLE]
{$Lua}
if syntaxcheck then return end
ResidentEvil7_itemSwapHide()
{$Asm}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Box Items"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

{$Lua}
 local basePtr = 're7.exe+070DADB0'
 local itemBoxCountAddress     =     '[[['..basePtr..']+58]+68]+68'
 local itemBoxNameAddress      =  '[[[[[['..basePtr..']+58]+68]+60]+__]+20]+24'
 local itemBoxNameOffsets = {0x24,0x20,0,0x60,0x68,0x58} -- last is first, first is last
 local itemBoxQuantityAddress  =   '[[[[['..basePtr..']+58]+68]+60]+__]+28'
 local itemBoxQuantityOffsets = {0x28,0,0x60,0x68,0x58} -- last is first, first is last

 if syntaxcheck then return end

 local al=getAddressList()
 local mainMR = al.getMemoryRecordByDescription('Box Items')
 while mainMR.Count&gt;0 do mainMR[0].destroy() end

 local itemCount = readInteger(itemBoxCountAddress) or 0

 local info = al.createMemoryRecord()
 info.Description = 'reenable to refresh'
 info.appendToEntry(mainMR)
 info.Type = vtString
 info.String.Size = 0

 for slot=1,itemCount do
   local offset = string.format('%X',(slot-1)*8+0x30)
   local name = readString(itemBoxNameAddress:gsub('__',offset), 128, true)
   local newMR = al.createMemoryRecord()
   newMR.Type = vtDword
   newMR.Description = 'Slot '..(slot)..', '..name..' quantity'
   itemBoxQuantityOffsets[2] = (slot-1)*8+0x30
   newMR.setAddress (basePtr, itemBoxQuantityOffsets)
   newMR.appendToEntry(mainMR)

   local newMR2 = al.createMemoryRecord()
   newMR2.Type = vtString
   newMR2.String.Size = 128
   newMR2.String.Unicode = true
   newMR2.Description = 'Slot '..(slot)..', '..name
   itemBoxNameOffsets[3] = (slot-1)*8+0x30
   newMR2.setAddress (basePtr, itemBoxNameOffsets)
   newMR2.appendToEntry(newMR)
 end
{$Asm}

[DISABLE]
{$Lua}
 if syntaxcheck then return end
 local mainMR = getAddressList().getMemoryRecordByDescription('Box Items')
 while mainMR.Count&gt;0 do mainMR[0].destroy() end
{$Asm}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Bag Items"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

{$Lua}
 local basePtr = 're7.exe+070DADB0'
 local itemCountAddress     =      '[['..basePtr..']+60]+28'
 local itemNameAddress      =  '[[[[[['..basePtr..']+60]+20]+__]+28]+80]+24'
 local itemNameOffsets = {0x24,0x80,0x28,0,0x20,0x60} -- last is first, first is last
 local itemQuantityAddress  =   '[[[[['..basePtr..']+60]+20]+__]+28]+88'
 local itemQuantityOffsets = {0x88,0x28,0,0x20,0x60} -- last is first, first is last

 if syntaxcheck then return end

 local al=getAddressList()
 local mainMR = al.getMemoryRecordByDescription('Bag Items')
 while mainMR.Count&gt;0 do mainMR[0].destroy() end

 local itemCount = readInteger(itemCountAddress) or 0

 local info = al.createMemoryRecord()
 info.Description = 'reenable to refresh'
 info.appendToEntry(mainMR)
 info.Type = vtString
 info.String.Size = 0

 for slot=1,itemCount do
   local offset = string.format('%X',(slot-1)*8+0x30)
   local name = readString(itemNameAddress:gsub('__',offset), 128, true)
   local newMR = al.createMemoryRecord()
   newMR.Type = vtDword
   newMR.Description = 'Slot '..(slot)..', '..name..' quantity'
   itemQuantityOffsets[3] = (slot-1)*8+0x30
   newMR.setAddress (basePtr, itemQuantityOffsets)
   newMR.appendToEntry(mainMR)

   local newMR2 = al.createMemoryRecord()
   newMR2.Type = vtString
   newMR2.String.Size = 128
   newMR2.String.Unicode = true
   newMR2.Description = 'Slot '..(slot)..', '..name
   itemNameOffsets[4] = (slot-1)*8+0x30
   newMR2.setAddress (basePtr, itemNameOffsets)
   newMR2.appendToEntry(newMR)
 end
{$Asm}

[DISABLE]
{$Lua}
 if syntaxcheck then return end
 local mainMR = getAddressList().getMemoryRecordByDescription('Bag Items')
 while mainMR.Count&gt;0 do mainMR[0].destroy() end
{$Asm}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Area Name"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"pointer1"</Description>
          <VariableType>String</VariableType>
          <Length>200</Length>
          <Unicode>1</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>"re7.exe"+070D5EE0</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>700</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"pointer2"</Description>
          <VariableType>String</VariableType>
          <Length>200</Length>
          <Unicode>1</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>"re7.exe"+071492F8</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>700</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"pointer3"</Description>
          <VariableType>String</VariableType>
          <Length>200</Length>
          <Unicode>1</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>"re7.exe"+07149338</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>700</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
