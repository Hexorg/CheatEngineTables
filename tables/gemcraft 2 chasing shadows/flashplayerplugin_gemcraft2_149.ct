<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Gemcraft 2: Chasing Shadows v1.0.15"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>4080FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Use these only before hitting 'Start' (i.e. main menu, just when SWF was loaded)"</Description>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1</ID>
              <Description>"[jasondudly468] Drop only rarity 80-100 fragments"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobOnlyHighRarityDrops,a2 82 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? a0 25 e8 07 a3 2f ?? ?? 2f ?? ??)

label(aobOnlyHighRarityDrops_r)
registersymbol(aobOnlyHighRarityDrops_r)

aobOnlyHighRarityDrops+11:
aobOnlyHighRarityDrops_r:
db a2

[DISABLE]
aobOnlyHighRarityDrops_r:
db a3

unregistersymbol(aobOnlyHighRarityDrops_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"[jasondudly468] Min Rarity Equals Max Rarity "</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobMinQualityEqualsMax,24 50 24 00 24 40 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 14 a1)
//    !!    !!    !!                                                    !!
// 24 50 24 00 24 40 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 14 a1
// 24 64 24 14 24 69 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 00 a1
//  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f 10 11 12 13 14 15 16 17 18

label(aobMinQualityEqualsMax_r1)
label(aobMinQualityEqualsMax_r2)
label(aobMinQualityEqualsMax_r3)
label(aobMinQualityEqualsMax_r4)
registersymbol(aobMinQualityEqualsMax_r1)
registersymbol(aobMinQualityEqualsMax_r2)
registersymbol(aobMinQualityEqualsMax_r3)
registersymbol(aobMinQualityEqualsMax_r4)

aobMinQualityEqualsMax+1:
aobMinQualityEqualsMax_r1:
db 64

aobMinQualityEqualsMax+3:
aobMinQualityEqualsMax_r2:
db 14

aobMinQualityEqualsMax+5:
aobMinQualityEqualsMax_r3:
db 69

aobMinQualityEqualsMax+17:
aobMinQualityEqualsMax_r4:
db 00

[DISABLE]
aobMinQualityEqualsMax_r1:
db 50

aobMinQualityEqualsMax_r2:
db 00

aobMinQualityEqualsMax_r3:
db 40

aobMinQualityEqualsMax_r4:
db 14

unregistersymbol(aobMinQualityEqualsMax_r1)
unregistersymbol(aobMinQualityEqualsMax_r2)
unregistersymbol(aobMinQualityEqualsMax_r3)
unregistersymbol(aobMinQualityEqualsMax_r4)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>3</ID>
              <Description>"[jkollss] Set beam time to 100 secs"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobBeamTime,d0 66 c5 06 66 d2 05 60 df 01 66 dd 1d 60 b1 12 66 86 25 66 ee 2a 46 f8 2a 00 24 1e d0 66 c5 06 66 91 05 60 94 0f 66 86 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a2 a0 4f c4 06 01)

label(aobBeamTime_r)
registersymbol(aobBeamTime_r)

aobBeamTime:
aobBeamTime_r:
db d0 66 c5 06 66 d2 05 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 b8 17 4f c4 06 01

[DISABLE]
aobBeamTime_r:
db d0 66 c5 06 66 d2 05 60 df 01 66 dd 1d 60 b1 12 66 86 25 66 ee 2a 46 f8 2a 00 24 1e d0 66 c5 06 66 91 05 60 94 0f 66 86 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a2 a0 4f c4 06 01

unregistersymbol(aobBeamTime_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"[jkollss] Set bolt ammo to 1000 shots"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobBoltAmmo,d0 66 c5 06 66 d6 05 60 df 01 66 dd 1d 60 b1 12 66 81 25 66 ee 2a 46 f8 2a 00 d0 66 c5 06 66 91 05 60 94 0f 66 81 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a0 4f c4 06 01)

label(aobBoltAmmo_r)
registersymbol(aobBoltAmmo_r)

aobBoltAmmo:
aobBoltAmmo_r:
db d0 66 c5 06 66 d6 05 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 e8 07 4f c4 06 01

[DISABLE]
aobBoltAmmo_r:
db d0 66 c5 06 66 d6 05 60 df 01 66 dd 1d 60 b1 12 66 81 25 66 ee 2a 46 f8 2a 00 d0 66 c5 06 66 91 05 60 94 0f 66 81 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a0 4f c4 06 01

unregistersymbol(aobBoltAmmo_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"[jkollss] Set barrage ammo to 1000 shots"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobBarrageAmmo,d0 66 c5 06 66 da 05 60 df 01 66 dd 1d 60 b1 12 66 8b 25 66 ee 2a 46 f8 2a 00 d0 66 c5 06 66 91 05 60 94 0f 66 8b 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a0 4f c4 06 01)

label(aobBarrageAmmo_r)
registersymbol(aobBarrageAmmo_r)

aobBarrageAmmo:
aobBarrageAmmo_r:
db d0 66 c5 06 66 da 05 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 e8 07 4f c4 06 01

[DISABLE]
aobBarrageAmmo_r:
db d0 66 c5 06 66 da 05 60 df 01 66 dd 1d 60 b1 12 66 8b 25 66 ee 2a 46 f8 2a 00 d0 66 c5 06 66 91 05 60 94 0f 66 8b 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a0 4f c4 06 01

unregistersymbol(aobBarrageAmmo_r)

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Use these only during battle"</Description>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>0</ID>
              <Description>"[Patr1ck] Add "Shadow Cores" when talisman upgraded (instead of take)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobTalismanAddSCOnUpgrade,60 df 01 66 e3 1d 66 81 02 46 c3 06 00 d1 66 da 0e 46 c3 06 00 a1)

label(aobTalismanAddSCOnUpgrade_r)
registersymbol(aobTalismanAddSCOnUpgrade_r)

aobTalismanAddSCOnUpgrade:
aobTalismanAddSCOnUpgrade_r:
db 60 df 01 66 e3 1d 66 81 02 46 c3 06 00 d1 66 da 0e 46 c3 06 00 a0

[DISABLE]
aobTalismanAddSCOnUpgrade_r:
db 60 df 01 66 e3 1d 66 81 02 46 c3 06 00 d1 66 da 0e 46 c3 06 00 a1

unregistersymbol(aobTalismanAddSCOnUpgrade_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2</ID>
              <Description>"[jkollss] Gem upgrade costs only "Combine gem cost" and gives "Gem value" back"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobGemUpgradeCost1,d0 66 c5 06 46 9b 06 00 d1 66 ef 09 46 c3 06 00 d0 66 c5 06 66 db 04 46 c3 06 00 a0 0f)
aobscan(aobGemUpgradeCost2,d0 66 c5 06 d1 66 ef 09 46 c3 06 00 90 27 26 4f 9a 06 03)

label(aobGemUpgradeCost1_r)
label(aobGemUpgradeCost2_r)
registersymbol(aobGemUpgradeCost1_r)
registersymbol(aobGemUpgradeCost2_r)

aobGemUpgradeCost1:
aobGemUpgradeCost1_r:
db d0 66 c5 06 46 9b 06 00 02 02 02 02 02 02 24 01 d0 66 c5 06 66 db 04 46 c3 06 00 a0 0f

aobGemUpgradeCost2:
aobGemUpgradeCost2_r:
db d0 66 c5 06 d1 66 ef 09 46 c3 06 00 02 27 26 4f 9a 06 03

[DISABLE]
aobGemUpgradeCost1_r:
db d0 66 c5 06 46 9b 06 00 d1 66 ef 09 46 c3 06 00 d0 66 c5 06 66 db 04 46 c3 06 00 a0 0f
aobGemUpgradeCost2_r:
db d0 66 c5 06 d1 66 ef 09 46 c3 06 00 90 27 26 4f 9a 06 03

unregistersymbol(aobGemUpgradeCost1_r)
unregistersymbol(aobGemUpgradeCost2_r)

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Can be enabled only having started at least one battle (no effect in first battle!)"</Description>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>14</ID>
              <Description>"[waruituti] Mana gain"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobManaGain,7B 14 AE 47 E1 7A A4 3F B8 1E 85 EB 51 B8 9E)

label(aobManaGain_r)
registersymbol(aobManaGain_r)

aobManaGain:
aobManaGain_r:
db 7B 14 AE 47 E1 7A A4 40 B8 1E 85 EB 51 B8 9E

[DISABLE]
aobManaGain_r:
db 7B 14 AE 47 E1 7A A4 3F B8 1E 85 EB 51 B8 9E

unregistersymbol(aobManaGain_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"[waruituti] XP gain"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobXPGain,B8 1E 85 EB 51 B8 9E 3F 9C C4 20 B0 72 68 D1 3F)

label(aobXPGain_r)
registersymbol(aobXPGain_r)

aobXPGain:
aobXPGain_r:
db B8 1E 85 EB 51 B8 9E 40 9C C4 20 B0 72 68 D1 3F

[DISABLE]
aobXPGain_r:
db B8 1E 85 EB 51 B8 9E 3F 9C C4 20 B0 72 68 D1 3F

unregistersymbol(aobXPGain_r)

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Gemcraft 2: Chasing Shadows v1.0.19"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>4080FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Use these only before hitting 'Start' (i.e. main menu, just when SWF was loaded)"</Description>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>20</ID>
              <Description>"[jasondudly468] Drop only rarity 80-100 fragments"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobOnlyHighRarityDrops,a2 82 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? a0 25 e8 07 a3 2f ?? ?? 2f ?? ??)

label(aobOnlyHighRarityDrops_r)
registersymbol(aobOnlyHighRarityDrops_r)

aobOnlyHighRarityDrops+11:
aobOnlyHighRarityDrops_r:
db a2

[DISABLE]
aobOnlyHighRarityDrops_r:
db a3

unregistersymbol(aobOnlyHighRarityDrops_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"[jasondudly468] Min Rarity Equals Max Rarity "</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobMinQualityEqualsMax,24 50 24 00 24 40 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 14 a1)
//    !!    !!    !!                                                    !!
// 24 50 24 00 24 40 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 14 a1
// 24 64 24 14 24 69 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 00 a1
//  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f 10 11 12 13 14 15 16 17 18

label(aobMinQualityEqualsMax_r1)
label(aobMinQualityEqualsMax_r2)
label(aobMinQualityEqualsMax_r3)
label(aobMinQualityEqualsMax_r4)
registersymbol(aobMinQualityEqualsMax_r1)
registersymbol(aobMinQualityEqualsMax_r2)
registersymbol(aobMinQualityEqualsMax_r3)
registersymbol(aobMinQualityEqualsMax_r4)

aobMinQualityEqualsMax+1:
aobMinQualityEqualsMax_r1:
db 64

aobMinQualityEqualsMax+3:
aobMinQualityEqualsMax_r2:
db 14

aobMinQualityEqualsMax+5:
aobMinQualityEqualsMax_r3:
db 69

aobMinQualityEqualsMax+17:
aobMinQualityEqualsMax_r4:
db 00

[DISABLE]
aobMinQualityEqualsMax_r1:
db 50

aobMinQualityEqualsMax_r2:
db 00

aobMinQualityEqualsMax_r3:
db 40

aobMinQualityEqualsMax_r4:
db 14

unregistersymbol(aobMinQualityEqualsMax_r1)
unregistersymbol(aobMinQualityEqualsMax_r2)
unregistersymbol(aobMinQualityEqualsMax_r3)
unregistersymbol(aobMinQualityEqualsMax_r4)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"[jkollss] Set beam time to 300 secs"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobBeamTime,D0 66 BD 06 66 B6 04 60 E3 01 66 84 20 60 B7 12 66 8B 26 66 E2 2B 46 EC 2B 00 24 1E D0 66 BD 06 66 F5 03 60 AA 11 66 8B 26 66 E2 2B 24 01 66 E2 2B 46 EC 2B 00 A2 A0 4F 87 07 01)

label(aobBeamTime_r)
registersymbol(aobBeamTime_r)

aobBeamTime:
aobBeamTime_r:
db D0 66 BD 06 66 B6 04 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 A8 46 4F 87 07 01

[DISABLE]
aobBeamTime_r:
db D0 66 BD 06 66 B6 04 60 E3 01 66 84 20 60 B7 12 66 8B 26 66 E2 2B 46 EC 2B 00 24 1E D0 66 BD 06 66 F5 03 60 AA 11 66 8B 26 66 E2 2B 24 01 66 E2 2B 46 EC 2B 00 A2 A0 4F 87 07 01

unregistersymbol(aobBeamTime_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"[jkollss] Set bolt ammo to 1000 shots"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobBoltAmmo,D0 66 BD 06 66 BA 04 60 E3 01 66 84 20 60 B7 12 66 87 26 66 E2 2B 46 EC 2B 00 D0 66 BD 06 66 F5 03 60 AA 11 66 87 26 66 E2 2B 24 01 66 E2 2B 46 EC 2B 00 A0 4F 87 07 01)

label(aobBoltAmmo_r)
registersymbol(aobBoltAmmo_r)

aobBoltAmmo:
aobBoltAmmo_r:
db D0 66 BD 06 66 BA 04 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 E8 07 4F 87 07 01

[DISABLE]
aobBoltAmmo_r:
db D0 66 BD 06 66 BA 04 60 E3 01 66 84 20 60 B7 12 66 87 26 66 E2 2B 46 EC 2B 00 D0 66 BD 06 66 F5 03 60 AA 11 66 87 26 66 E2 2B 24 01 66 E2 2B 46 EC 2B 00 A0 4F 87 07 01

unregistersymbol(aobBoltAmmo_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"[jkollss] Set barrage ammo to 1000 shots"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobBarrageAmmo,D0 66 BD 06 66 BE 04 60 E3 01 66 84 20 60 B7 12 66 8F 26 66 E2 2B 46 EC 2B 00 D0 66 BD 06 66 F5 03 60 AA 11 66 8F 26 66 E2 2B 24 01 66 E2 2B 46 EC 2B 00 A0 4F 87 07 01)

label(aobBarrageAmmo_r)
registersymbol(aobBarrageAmmo_r)

aobBarrageAmmo:
aobBarrageAmmo_r:
db D0 66 BD 06 66 BE 04 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 E8 07 4F 87 07 01

[DISABLE]
aobBarrageAmmo_r:
db D0 66 BD 06 66 BE 04 60 E3 01 66 84 20 60 B7 12 66 8F 26 66 E2 2B 46 EC 2B 00 D0 66 BD 06 66 F5 03 60 AA 11 66 8F 26 66 E2 2B 24 01 66 E2 2B 46 EC 2B 00 A0 4F 87 07 01

unregistersymbol(aobBarrageAmmo_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>31</ID>
              <Description>"[Csimbi] Compass check disabler"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobCompassChecker,10 14 00 00 09 d3 d1 66 cd 2a 62 04 d1 66 cd 2a 13 02 00 00 27 d6 c2 01 d1 24 07)

label(aobCompassChecker_r)
registersymbol(aobCompassChecker_r)

aobCompassChecker+14:
aobCompassChecker_r:
db 26

[DISABLE]
aobCompassChecker_r:
db 27

unregistersymbol(aobCompassChecker_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>32</ID>
              <Description>"[Csimbi] Add "Shadow Cores" when talisman upgraded (instead of take)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobTalismanAddSCOnUpgrade,60 e3 01 66 8a 20 66 9d 05 46 86 07 00 d1 66 82 0e 46 86 07 00 a1)

label(aobTalismanAddSCOnUpgrade_r)
registersymbol(aobTalismanAddSCOnUpgrade_r)

aobTalismanAddSCOnUpgrade+15:
aobTalismanAddSCOnUpgrade_r:
db a0

[DISABLE]
aobTalismanAddSCOnUpgrade_r:
db a1

unregistersymbol(aobTalismanAddSCOnUpgrade_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"[Csimbi] Gem upgrade costs only "Combine gem cost" and gives "Gem value" back"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobGemUpgradeCost,4f cf 1f 01 d0 66 bd 06 d1 66 86 0c 46 86 07 00 90 27 26)

label(aobGemUpgradeCost_r)
registersymbol(aobGemUpgradeCost_r)

aobGemUpgradeCost+10:
aobGemUpgradeCost_r:
db 02

[DISABLE]
aobGemUpgradeCost_r:
db 90

unregistersymbol(aobGemUpgradeCost_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"[Csimbi] Disable skill cap"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobSkillCapRemover,66 8A 20 D1 46 AC 05 01 60 E3 01 66 83 03 46 BC 06 00 0F 02 00 00 27 48)

label(aobSkillCapRemover_r)
registersymbol(aobSkillCapRemover_r)

aobSkillCapRemover+16:
aobSkillCapRemover_r:
db 26

[DISABLE]
aobSkillCapRemover_r:
db 27

unregistersymbol(aobSkillCapRemover_r)

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Can be enabled only having started at least one battle (but no effect in first battle!)"</Description>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>29</ID>
              <Description>"[waruituti] Mana gain"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobManaGain,7B 14 AE 47 E1 7A A4 3F B8 1E 85 EB 51 B8 9E)

label(aobManaGain_r)
registersymbol(aobManaGain_r)

aobManaGain:
aobManaGain_r:
db 7B 14 AE 47 E1 7A A4 40 B8 1E 85 EB 51 B8 9E

[DISABLE]
aobManaGain_r:
db 7B 14 AE 47 E1 7A A4 3F B8 1E 85 EB 51 B8 9E

unregistersymbol(aobManaGain_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>30</ID>
              <Description>"[waruituti] XP gain"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobXPGain,B8 1E 85 EB 51 B8 9E 3F 9C C4 20 B0 72 68 D1 3F)

label(aobXPGain_r)
registersymbol(aobXPGain_r)

aobXPGain:
aobXPGain_r:
db B8 1E 85 EB 51 B8 9E 40 9C C4 20 B0 72 68 D1 3F

[DISABLE]
aobXPGain_r:
db B8 1E 85 EB 51 B8 9E 3F 9C C4 20 B0 72 68 D1 3F

unregistersymbol(aobXPGain_r)

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Gemcraft 2: Chasing Shadows v1.1.1, v1.1.2 and v1.1.3"</Description>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>4080FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Use these only before hitting 'Start' (i.e. main menu, just when SWF was loaded)"</Description>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>37</ID>
              <Description>"[jasondudly468] Drop only rarity 80-100 fragments"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobOnlyHighRarityDrops,a2 82 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? a0 25 e8 07 a3 2f ?? ?? 2f ?? ??)

label(aobOnlyHighRarityDrops_r)
registersymbol(aobOnlyHighRarityDrops_r)

aobOnlyHighRarityDrops+11:
aobOnlyHighRarityDrops_r:
db a2

[DISABLE]
aobOnlyHighRarityDrops_r:
db a3

unregistersymbol(aobOnlyHighRarityDrops_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>38</ID>
              <Description>"[jasondudly468] Min Rarity Equals Max Rarity "</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobMinQualityEqualsMax,24 50 24 00 24 40 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 14 a1)
//    !!    !!    !!                                                    !!
// 24 50 24 00 24 40 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 14 a1
// 24 64 24 14 24 69 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 00 a1
//  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f 10 11 12 13 14 15 16 17 18

label(aobMinQualityEqualsMax_r1)
label(aobMinQualityEqualsMax_r2)
label(aobMinQualityEqualsMax_r3)
label(aobMinQualityEqualsMax_r4)
registersymbol(aobMinQualityEqualsMax_r1)
registersymbol(aobMinQualityEqualsMax_r2)
registersymbol(aobMinQualityEqualsMax_r3)
registersymbol(aobMinQualityEqualsMax_r4)

aobMinQualityEqualsMax+1:
aobMinQualityEqualsMax_r1:
db 64

aobMinQualityEqualsMax+3:
aobMinQualityEqualsMax_r2:
db 14

aobMinQualityEqualsMax+5:
aobMinQualityEqualsMax_r3:
db 69

aobMinQualityEqualsMax+17:
aobMinQualityEqualsMax_r4:
db 00

[DISABLE]
aobMinQualityEqualsMax_r1:
db 50

aobMinQualityEqualsMax_r2:
db 00

aobMinQualityEqualsMax_r3:
db 40

aobMinQualityEqualsMax_r4:
db 14

unregistersymbol(aobMinQualityEqualsMax_r1)
unregistersymbol(aobMinQualityEqualsMax_r2)
unregistersymbol(aobMinQualityEqualsMax_r3)
unregistersymbol(aobMinQualityEqualsMax_r4)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"[jkollss] Set beam time to 300 secs"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobBeamTime,d0 66 ?? 06 66 ?? ?? 60 ?? 01 66 ?? ?? 60 ?? 12 66 ?? ?? 66 ?? ?? 46 ?? ?? 00 24 1e d0 66 ?? 06 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 24 01 66 ?? ?? 46 ?? ?? 00 a2 a0 4f ?? 06 01)

alloc(newmem,256)

label(aobBeamTime_r)
label(aobBeamTime_i)
registersymbol(aobBeamTime_r)
registersymbol(aobBeamTime_i)

newmem:
aobBeamTime_i:
readmem(aobBeamTime+7,128)

aobBeamTime+7:
aobBeamTime_r:
db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 a8 46

[DISABLE]
aobBeamTime_r:
readmem(aobBeamTime_i,64)

unregistersymbol(aobBeamTime_r)
unregistersymbol(aobBeamTime_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>40</ID>
              <Description>"[jkollss] Set bolt ammo to 1000 shots"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobBoltAmmo,d0 66 ?? 06 66 ?? ?? 60 ?? 01 66 ?? ?? 60 ?? 12 66 ?? ?? 66 ?? ?? 46 ?? ?? 00 d0 66 ?? 06 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 24 01 66 ?? ?? 46 ?? ?? 00 a0 4f ?? 06 01 f0 ?? 02 d0 66 ?? 06 66)

alloc(newmem,256)

label(aobBoltAmmo_r)
label(aobBoltAmmo_i)
registersymbol(aobBoltAmmo_r)
registersymbol(aobBoltAmmo_i)

newmem:
aobBoltAmmo_i:
readmem(aobBoltAmmo+7,128)

aobBoltAmmo+7:
aobBoltAmmo_r:
db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 e8 07

[DISABLE]
aobBoltAmmo_r:
readmem(aobBoltAmmo_i,64)

unregistersymbol(aobBoltAmmo_r)
unregistersymbol(aobBoltAmmo_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>41</ID>
              <Description>"[jkollss] Set barrage ammo to 1000 shots"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobBarrageAmmo,d0 66 ?? 06 66 ?? ?? 60 ?? 01 66 ?? ?? 60 ?? 12 66 ?? ?? 66 ?? ?? 46 ?? ?? 00 d0 66 ?? 06 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 24 01 66 ?? ?? 46 ?? ?? 00 a0 4f ?? 06 01 f0 ?? ?? d0 66 ?? 06 20)

alloc(newmem,256)

label(aobBarrageAmmo_r)
label(aobBarrageAmmo_i)
registersymbol(aobBarrageAmmo_r)
registersymbol(aobBarrageAmmo_i)

newmem:
aobBarrageAmmo_i:
readmem(aobBarrageAmmo+7,128)

aobBarrageAmmo+7:
aobBarrageAmmo_r:
db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 e8 07

[DISABLE]
aobBarrageAmmo_r:
readmem(aobBarrageAmmo_i,64)

unregistersymbol(aobBarrageAmmo_r)
unregistersymbol(aobBarrageAmmo_i)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>42</ID>
              <Description>"[Csimbi] Compass check disabler"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobCompassChecker,10 1a 00 00 09 f0 71 d3 d1 66 ?? ?? 62 04 d1 66 ?? ?? 13 04 00 00 f0 72 27 d6 f0 70 c2 01 d1 24 07 15 df ff ff f0 76 d2 48)

label(aobCompassChecker_r)
registersymbol(aobCompassChecker_r)

aobCompassChecker+18:
aobCompassChecker_r:
db 26

[DISABLE]
aobCompassChecker_r:
db 27

unregistersymbol(aobCompassChecker_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>43</ID>
              <Description>"[Csimbi] Add "Shadow Cores" when talisman upgraded (instead of take)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobTalismanAddSCOnUpgrade,60 ?? 01 66 ?? ?? 66 ?? ?? 46 ?? ?? 00 d1 66 ?? ?? 46 ?? ?? 00 a1)

label(aobTalismanAddSCOnUpgrade_r)
registersymbol(aobTalismanAddSCOnUpgrade_r)

aobTalismanAddSCOnUpgrade+15:
aobTalismanAddSCOnUpgrade_r:
db a0

[DISABLE]
aobTalismanAddSCOnUpgrade_r:
db a1

unregistersymbol(aobTalismanAddSCOnUpgrade_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"[jkollss] Gem upgrade costs only "Combine gem cost" and gives "Gem value" back"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobGemUpgradeCost1,d0 66 ?? 06 46 ?? ?? 00 d1 66 ?? ?? 46 ?? 06 00 d0 66 ?? 06 66 ?? ?? 46 ?? 06 00 a0 0f f0 00 00)
aobscan(aobGemUpgradeCost2,d0 66 ?? 06 d1 66 ?? ?? 46 ?? 06 00 90 27 26 4f ?? ?? 03)

alloc(newmem,256)

label(aobGemUpgradeCost1_r)
label(aobGemUpgradeCost1_i)
label(aobGemUpgradeCost2_r)
registersymbol(aobGemUpgradeCost1_r)
registersymbol(aobGemUpgradeCost1_i)
registersymbol(aobGemUpgradeCost2_r)

newmem:
aobGemUpgradeCost1_i:
readmem(aobGemUpgradeCost1,64)

aobGemUpgradeCost1+8:
aobGemUpgradeCost1_r:
db 02 02 02 02 02 02 24 01

aobGemUpgradeCost2+c:
aobGemUpgradeCost2_r:
db 02

[DISABLE]
aobGemUpgradeCost1_r:
readmem(aobGemUpgradeCost1_i+8,8)

aobGemUpgradeCost2_r:
db 90

unregistersymbol(aobGemUpgradeCost1_r)
unregistersymbol(aobGemUpgradeCost1_i)
unregistersymbol(aobGemUpgradeCost2_r)

dealloc(newmem)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"[Csimbi] Disable skill cap"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobSkillCapRemover,66 ?? ?? d1 46 ?? ?? 01 60 ?? 01 66 ?? ?? d1 46 ?? ?? 01 0f 05 00 00 f0 ?? 01 27 48)

label(aobSkillCapRemover_r)
registersymbol(aobSkillCapRemover_r)

aobSkillCapRemover+1a:
aobSkillCapRemover_r:
db 26

[DISABLE]
aobSkillCapRemover_r:
db 27

unregistersymbol(aobSkillCapRemover_r)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>51</ID>
              <Description>"[Csimbi] Disable cooldown on gem insert"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(aobTrapCooldown,d0 24 64 61 ?? ?? f0 c6 01 60 ?? 01 66 ?? ?? 66 ?? ?? 66 ?? 1c d0 66 ?? ?? 4f ?? 28 01)
aobscan(aobTowerCooldown,d0 24 64 61 ?? ?? f0 ?? 05 d0 26 61 ?? ?? f0 ?? 05 60 ?? 01 66 ?? ?? 66 ?? ?? 66 ?? 1c)
aobscan(aobAmplifierCooldown,d0 24 64 61 ?? ?? f0 5e d0 26 61 ?? ?? f0 60 60 ?? 01 66 ?? ?? 66 ?? ?? 66 ?? 1c d0 66)

label(aobTrapCooldown_r)
label(aobTowerCooldown_r)
label(aobAmplifierCooldown_r)
registersymbol(aobTrapCooldown_r)
registersymbol(aobTowerCooldown_r)
registersymbol(aobAmplifierCooldown_r)

aobTrapCooldown+2:
aobTrapCooldown_r:
db 01

aobTowerCooldown+2:
aobTowerCooldown_r:
db 01

aobAmplifierCooldown+2:
aobAmplifierCooldown_r:
db 01

[DISABLE]
aobTrapCooldown_r:
db 64

aobTowerCooldown_r:
db 64

aobAmplifierCooldown_r:
db 64

unregistersymbol(aobTrapCooldown_r)
unregistersymbol(aobTowerCooldown_r)
unregistersymbol(aobAmplifierCooldown_r)

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>Massive sellback value
search this value
7b 14 ae 47 e1 7a 84 3f 71 3d 0a d7 a3 70 ed 3f
right click the value you find and click "browse this memory region"
two or 3 lines above the value u searched will be "33 33 33 33 33 33 F1 3F" replace it with "00 00 00 00 00 00 10 40"
Launch any server slot:
d0 66 d6 02 12 0f 00 00 60 df 01 66 e3 1d 60 8c 0f 66 a3 24 61 86 02
(24 hits)
replace all to:
d0 66 d6 02 11 0f 00 00 60 df 01 66 e3 1d 60 8c 0f 66 a3 24 61 86 02
Works with 1.0.15. Have fun.
</Comments>
</CheatTable>
