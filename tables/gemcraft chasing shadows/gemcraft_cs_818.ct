<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Minor Scripts"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>00C000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Cheap Amplifiers"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Cheap Amplifiers
*
*
*   This makes building amplifiers cheaper than normal. Technically, this
*   changes the price increment when you buy an amplifier.
*
*   Options:
*     Increment- the amount of mana the price increases by when you buy an
*                amplifier. Set this to 0 for it to never increase. This is a
*                signed byte value (max is 127, anything more will be negative).
*
*   NOTICE: I have not tested this yet. It *should* work, but that doesn't mean
*           it will.
*/

[ENABLE]
aobscan(AmplifierIncrement,12 11 00 00 60 ?? ?? 66 ?? ?? 66 ?? ?? 24 1e a0 75 10 0d 00 00 60 ?? ?? 66 ?? ?? 66 ?? ?? 24 14 a1 75 2c ?? ?? 2d ?? ?? 24 0c 2c ?? ?? 60 ?? ?? 46 ?? ?? ?? 24 03 a2 2f ?? a1 24 fc 60 ?? ?? 46 ?? ?? ?? 24 03 a2 a1 24 00 2f ?? 24 0c 24 00 25 e8 07 4f ?? ?? ?? 10 42 01 00 f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 62 ?? 62 ?? 46 ?? ?? ?? 11 2c 01 00 f0 ?? ?? d0 66 ?? ?? 60 ?? ?? 24 00 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 46 ?? ?? ?? 90 27 26 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? d0 66 ?? ?? 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? a0 61 ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 60 ?? ?? 60 ?? ?? 66 ?? ?? 46 ?? ?? ?? 46 ?? ?? ?? a0 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 62 ?? 62 ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 66 ?? ?? 73 63 ?? f0 ?? ?? 24 00 63 ?? 10 1e 00 00)
registersymbol(AmplifierIncrement)

AmplifierIncrement+C4:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 24 0a

[DISABLE]
unregistersymbol(AmplifierIncrement)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>32</ID>
              <Description>"Increment"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F150114"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>AmplifierIncrement+d4</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Cheap Towers"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Cheap Towers
*
*
*   This makes building towers cheaper than normal. Technically, this changes
*   the price increment when you buy a tower.
*
*   Options:
*     Increment- the amount of mana the price increases by when you buy a tower.
*                Set this to 0 for it to never increase. This is a signed byte
*                value (max is 127, anything more will be negative).
*/

[ENABLE]
aobscan(TowerIncrement,f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 62 ?? 62 ?? 46 ?? ?? ?? 11 35 01 00 f0 ?? ?? d0 66 ?? ?? 60 ?? ?? 24 00 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 46 ?? ?? ?? 90 27 26 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 60 ?? ?? 24 00 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 46 ?? ?? ?? a0 61 ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 60 ?? ?? 60 ?? ?? 66 ?? ?? 46 ?? ?? ?? 46 ?? ?? ?? a0 4f ?? ?? ??)
registersymbol(TowerIncrement)

TowerIncrement+73:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 24 07

[DISABLE]
unregistersymbol(TowerIncrement)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>30</ID>
              <Description>"Increment"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F14F53C"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>TowerIncrement+83</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Cheap Traps"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Cheap Traps
*
*
*   This makes building traps cheaper than normal. Technically, this changes the
*   price increment when you buy a trap.
*
*   Options:
*     Increment- the amount of mana the price increases by when you buy a trap.
*                Set this to 0 for it to never increase. This is a signed byte
*                value (max is 127, anything more will be negative).
*/

[ENABLE]
aobscan(TrapIncrement,f0 ?? ?? 62 ?? 12 85 00 00 f0 ?? ?? d0 66 ?? ?? 60 ?? ?? 24 00 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 46 ?? ?? ?? 90 27 26 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 60 ?? ?? 24 00 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 46 ?? ?? ?? a0 61 ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 60 ?? ?? 60 ?? ?? 66 ?? ?? 46 ?? ?? ?? 46 ?? ?? ?? a0 4f ?? ?? ??)
registersymbol(TrapIncrement)

TrapIncrement+66:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 24 07

[DISABLE]
unregistersymbol(TrapIncrement)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>31</ID>
              <Description>"Increment"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F14F29B"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>TrapIncrement+76</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Cheap Walls"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Cheap Walls
*
*
*   This makes building walls cheaper than normal. Technically, this changes the
*   price increment when you buy a wall.
*
*   Options:
*     Increment- the amount of mana the price increases by when you buy a wall.
*                Set this to 0 for it to never increase. This is a signed byte
*                value (max is 127, anything more will be negative).
*/

[ENABLE]
aobscan(WallIncrement,26 63 ?? f0 ?? ?? 26 63 ?? f0 ?? ?? 24 00 75 63 ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 75 63 ?? f0 ?? ?? 60 ?? ?? 60 ?? ?? 66 ?? ?? 46 ?? ?? ?? 46 ?? ?? ?? 75 63 ?? f0 ?? ?? 24 00 63 ??)
registersymbol(WallIncrement)

WallIncrement+25:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 24 00

[DISABLE]
unregistersymbol(WallIncrement)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Increment"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F14F7CC"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>WallIncrement+35</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Infinite Demolitions"</Description>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Infinite Demolitions
*
*
*   This removes the limit on the number of your own buildings that you can
*   demolish. Technically, it just adds one instead of subtracting one when you
*   destroy something.
*
*/

[ENABLE]
aobscan(DemolitionDecrement,f0 ?? ?? d0 66 ?? ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 62 ?? 66 ?? ?? 66 ?? ?? 62 ?? 66 ?? ?? 20 61 ?? ?? f0 ?? ?? 60 ?? ?? 66 ?? ?? 24 11 d1 a2 24 11 24 02 a3 a0 24 11 d2 a2 24 11 24 02 a3 a0 4f ?? ?? ?? f0 ?? ?? d3 12 35 00 00 f0 ?? ?? d0 66 ?? ?? 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 93 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 2a 63 ?? 66 ?? ?? 91 63 ?? 62 ?? 62 ?? 61 ?? ??)

DemolitionDecrement+64:
  db 91

[DISABLE]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Average Scripts"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>00AAAA</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Buy Many Skill Points for Free"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Buy Many Skill Points for Free
*
*
*   In the "Skills" menu, there is a button to the left of the "Close" button
*   with a plus on it that lets you buy skill points with shadow cores.
*
*   This lets you buy lots of skill points at once without needing the shadow
*   cores it would actually cost you. Note that the price per skill point still
*   increases even though you don't actually pay for it.
*
*   Options:
*     0= buy 100; 1= buy 10,000 - Self-explanatory. Leave the byte's value at 0
*                                 to buy 100 skill points at a time, or set it
*                                 to 1 to buy 10,000 at a time.
*/

[ENABLE]
aobscan(BuySkillPts,d0 30 ef ?? ?? ?? ?? ?? ?? ef ?? ?? ?? ?? ?? ?? f0 ?? ?? d1 66 ?? ?? 66 ?? ?? 66 ?? ?? 24 02 4f ?? ?? ?? f0 ?? ?? 25 e8 07 60 ?? ?? 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 24 64 a2 a0 75 d6 f0 ?? ?? d2 60 ?? ?? 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 0e 24 00 00 f0 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? 66 ?? ?? 24 0a 61 ?? ?? f0 ?? ?? 60 ?? ?? 2c ?? ?? 4f ?? ?? ?? 10 ee 00 00 f0 ?? ?? d0 66 ?? ?? d0 66 ?? ?? 46 ?? ?? ?? 24 01 a0 4f ?? ?? ?? f0 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 24 01 a0 4f ?? ?? ?? f0 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? d2 a1 4f ?? ?? ??)
registersymbol(BuySkillPts)

BuySkillPts+3C:
  db 24 64 d6 24 00 24 00 13 22 00 00 25 90 4e d6 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02
BuySkillPts+84:
  db 02 d2
BuySkillPts+A4:
  db 02 d2
BuySkillPts+C4:
  db 02 02

[DISABLE]
unregistersymbol(BuySkillPts)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>24</ID>
              <Description>"0= buy 100; 1= buy 10,000"</Description>
              <LastState Value="96" Activated="0" RealAddress="0F15D45E"/>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>BuySkillPts+40</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Exp Multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Exp Multiplier
*
*
*   After you beat a tile, you gain some exp for it. This multiplies the amount
*   of exp you get by a certain value (default 2).
*
*   Options:
*     Multiplier- the value to multiply your exp by. This is a signed byte
*                 value (max is 127, anything more will be negative).
*
*/

[ENABLE]
aobscan(ExpMultiplier,f0 ?? ?? d0 30 ef ?? ?? ?? ?? ?? ?? ef ?? ?? ?? ?? ?? ?? f0 ?? ?? d2 12 27 00 00 f0 ?? ?? d1 d0 66 ?? ?? 46 ?? ?? ?? 24 01 2f ?? d0 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? a2 a0 a2 a2 75 d5 f0 ?? ?? d0 66 ?? ?? d0 66 ?? ?? 46 ?? ?? ?? d1 a0 4f ?? ?? ?? f0 ?? ?? d1 48)
registersymbol(ExpMultiplier)

ExpMultiplier+1b:
  db d1 24 02 a2

[DISABLE]
unregistersymbol(ExpMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>35</ID>
              <Description>"Multiplier"</Description>
              <LastState Value="4" Activated="0" RealAddress="0F0E6769"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>ExpMultiplier+1d</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Infinite Gem Enhancement Ammo"</Description>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Infinite Gem Enhancement Ammo
*
*
*   If you put a gem enhancement (bolt, beam, or barage) on a gem, it will
*   normally have a limited amount of ammo. This makes it so that when a gem
*   uses its gem enhancement, it won't decrease that ammo amount.
*
*   NOTICE: I have only tested this with the bolt spell. It *should* work with
*   the others, but that doesn't mean it will.
*/

[ENABLE]
aobscan(BarageBeamAmmoDec,f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 14 7e 00 00 f0 ?? ?? 60 ?? ?? 2c ?? ?? 4f ?? ?? ?? f0 ?? ?? 24 00 63 ?? 10 2f 00 00 09 f0 ?? ?? 60 ?? ?? 66 ?? ?? d0 d0 66 ?? ?? d0 66 ?? ?? 24 50 62 ?? 24 1b a2 a0 60 ?? ?? 46 ?? ?? ?? 24 05 a2 a0 4f ?? ?? ?? f0 ?? ?? c2 ?? 62 ?? 24 03 15 c9 ff ff f0 ?? ?? d0 60 ?? ?? 46 ?? ?? ?? 24 05 a2 61 ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 93 4f ?? ?? ?? 10 73 02 00 f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 14 59 00 00 f0 ?? ?? 26 63 ?? f0 ?? ?? 60 ?? ?? 66 ?? ?? d0 d0 66 ?? ?? 4f ?? ?? ?? f0 ?? ?? 60 ?? ?? 2a 63 ?? 66 ?? ?? c0 63 ?? 62 ?? 62 ?? 61 ?? ?? 08 ?? 08 ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? a1 4f ?? ?? ?? 10 06 02 00)
aobscan(BoltAmmoDec,f0 ?? ?? 60 ?? ?? 66 ?? ?? d0 d3 62 ?? d0 66 ?? ?? d0 66 ?? ?? d2 4f ?? ?? ?? f0 ?? ?? d0 60 ?? ?? 46 ?? ?? ?? 24 05 a2 61 ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 93 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 24 01 0c 26 00 00 f0 ?? ?? d0 66 ?? ?? 60 ?? ?? 66 ?? ?? 61 ?? ?? f0 ?? ?? d0 66 ?? ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 4f ?? ?? ??)

BarageBeamAmmoDec+89:
  db 02
BarageBeamAmmoDec+ED:
  db 02 02 02 02 02 02 02 02 02 02

BoltAmmoDec+40:
  db 02

[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Loot More Shadow Cores"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Loot More Shadow Cores
*
*
*   After you beat a tile, you can gain some shadow cores as loot. This
*   multiplies the shadow cores you get by a certain value (default 5).
*
*   Options:
*     Multiplier- the value to multiply your loot by. This is a signed byte
*                 value (max is 127, anything more will be negative).
*
*/

[ENABLE]
aobscan(LootSC,5d ?? d2 66 ?? ?? 46 ?? ?? a0 56 ?? 4a ?? ?? ?? 4f ?? ?? ?? 10 43 00 00 f0 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 5d ?? ?? 60 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 5d ?? d2 66 ?? ?? 46 ?? ?? a0 56 ?? 4a ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 5d ?? d2 66 ?? ?? 46 ?? ?? a0 4f ?? ?? ?? f0 ?? ??)
registersymbol(LootSC)
LootSC+74:
  db 02 02
LootSC+7A:
  db 24 05 a2

[DISABLE]
unregistersymbol(LootSC)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>16</ID>
              <Description>"Multiplier"</Description>
              <LastState Value="7" Activated="0" RealAddress="0F14170F"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>LootSC+7B</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Talisman Loot is High Rarity"</Description>
          <LastState Activated="0"/>
          <Color>C85A00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Talisman Loot is High Rarity
*
*
*   During a battle, you can loot a talisman fragment of a random rarity. This
*   makes it so that it's always the highest rarity possible for that tile.
*
*/

[ENABLE]
aobscan(TalismanMinRarityCalc,f1 ?? ?? f0 ?? d0 30 f0 ?? 60 ?? ?? 60 ?? ?? 24 01 60 ?? ?? 60 ?? ?? 24 50 24 00 24 40 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 14 a1 46 ?? ?? ?? 46 ?? ?? ?? 46 ?? ?? ?? 48)

TalismanMinRarityCalc+9:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02
TalismanMinRarityCalc+2D:
  db 24 01 a1 02 02 02 02 02 02 02 02 02 02 02 02

[DISABLE]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"Powerful Scripts"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>0080FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Mana Replenish"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>C85A00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Mana Replenish
*
*
*   This modifies the rate at which your mana pool generates mana over time.
*
*   Options:
*     Multiplier- the value your mana replenish rate is multiplied by. This is a
*                 signed byte value (max is 127, anything more will be
*                 negative).
*
*     HyperTurbo (1=off, 0=on)- This significantly increases the rate at which
*                               mana is regenerated (about 900x). Stacks with
*                               the multiplier.
*
*/

[ENABLE]
aobscan(ManaReplenish,f0 ?? ?? 60 ?? ?? 66 ?? ?? 46 ?? ?? ?? 24 1e a3 d0 66 ?? ?? 46 ?? ?? ?? a2 d0 66 ?? ?? a2 d0 66 ?? ?? 46 ?? ?? ?? a2 75 63 09 f0 ?? ?? d0 62 ?? 26 27 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 62 ?? a0 61 ?? ??)
registersymbol(ManaReplenish)

ManaReplenish+28:
  db 24 04 a2 63 09

[DISABLE]
unregistersymbol(ManaReplenish)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Multiplier"</Description>
              <LastState Value="9" Activated="0" RealAddress="0F0E7BC8"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>ManaReplenish+29</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"HyperTurbo (1=off, 0=on)"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F0E7BAE"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>800000</Color>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>ManaReplenish+F</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Monsters Move at Reduced Speed"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Monsters Move at Reduced Speed
*
*
*   This makes the monsters move at a reduced speed relative to whatever
*   their normal speed would be.
*
*   Options:
*     Divisor- the value to divide the monsters' speed by. This is a signed byte
*              value (max is 127, anything more will be negative). It is not
*              recomended to put in anything more than 8, as the game becomes
*              tedious if they're too slow.
*
*/

[ENABLE]
aobscan(MonsterSpeed,4a ?? ?? ?? 68 ?? ?? f0 ?? ?? d0 d0 d0 62 05 2a 63 ?? 68 ?? ?? 62 ?? 08 ?? 2a 63 ?? 68 ?? ?? 62 ?? 08 ?? 68 ?? ?? f0 ?? ?? d0 5d ?? ??)
registersymbol(MonsterSpeed)
MonsterSpeed+7:
  db d0 d0 d0 62 05 24 02 a3

[DISABLE]
unregistersymbol(MonsterSpeed)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>36</ID>
              <Description>"Divisor"</Description>
              <LastState Value="98" Activated="0" RealAddress="0F158A78"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>MonsterSpeed+d</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"No Monster Armor"</Description>
          <LastState Activated="0"/>
          <Color>C85A00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** No Monster Armor
*
*
*   When monster waves are created, they're given a certain amount of armor to
*   start off with. This removes that armor they're given.
*
*   Note that it's still possible for monsters to have armor (through buffs or
*   enraging a wave), but it's negligable compared to their initial amount.
*
*   I also don't think it removes the armor on special enemies (i.e. shadows).
*
*/

[ENABLE]
aobscan(ArmorInit,f0 ?? ?? d0 5d ?? ?? 62 ?? 4a ?? ?? ?? 68 ?? ?? f0 ?? ?? d0 5d ?? ?? 62 ?? 4a ?? ?? ?? 68 ?? ?? f0 ?? ?? d0 d0 66 ?? ?? 46 ?? ?? ?? 68 ?? ?? f0 ?? ?? d0 d0 66 ?? ?? 46 ?? ?? ?? 68 ?? ?? f0 ?? ?? d0 5d ?? ?? d3 4a ?? ?? ?? 68 ?? ??)

ArmorInit+7:
  db 24 00
ArmorInit+17:
  db 24 00

[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Spell Recharge"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Spell Recharge
*
*
*   This multiples the rate at which spells recharge by a certain amount
*   (default is 4).
*
*   Options:
*     (SpellName) Multiplier- the value by which each spell's respective
*                             recharge rate is multiplied by. These are signed
*                             byte values (max is 127, anything more will be
*                             negative).
*
*   NOTICE: I have only tested this with the bolt spell. It *should* work with
*   the others, but that doesn't mean it will.
*/

[ENABLE]
aobscan(SpellRecharge,f0 ?? ?? d0 30 27 d6 ef ?? ?? ?? ?? ?? ?? ef ?? ?? ?? ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 12 13 00 00 24 01 d0 66 ?? ?? 66 ?? ?? 93 2f ?? a2 a0 75 10 03 00 00 24 01 75 75 d5 f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 24 00 46 ?? ?? ?? 24 ff 13 dd 00 00 f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 66 ?? ?? 66 ?? ?? 66 ?? ?? 96 d6 f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 60 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? d0 66 ?? ?? 66 ?? ?? d1 a2 24 01 a2 24 1e a3 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? a3 a0 46 ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 66 ?? ?? 60 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? 24 40 a2 24 01 a0 46 ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 66 ?? ?? 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? a1 2f ?? ?? af 61 ?? ?? f0 ?? ?? d2 76 2a 12 12 00 00 29 d0 66 ?? ?? 66 ?? ?? 66 ?? ?? 66 ?? ?? 66 ?? ?? 76 12 0a 00 00 60 ?? ?? 2c ?? ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 24 01 46 ?? ?? ?? 24 ff 13 dd 00 00 f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 66 ?? ?? 66 ?? ?? 66 ?? ?? 96 d6 f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 60 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? d0 66 ?? ?? 66)
registersymbol(SpellRecharge)

SpellRecharge+93:
  db 04
SpellRecharge+186:
  db 04
SpellRecharge+279:
  db 04
SpellRecharge+36C:
  db 04
SpellRecharge+45F:
  db 04
SpellRecharge+552:
  db 04

[DISABLE]
unregistersymbol(SpellRecharge)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>40</ID>
              <Description>"Freeze Multiplier"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F108032"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>SpellRecharge+93</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>41</ID>
              <Description>"Curse Multiplier"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F108125"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>SpellRecharge+186</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>42</ID>
              <Description>"Woe Multiplier"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F108218"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>SpellRecharge+279</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>43</ID>
              <Description>"Bolt Multiplier"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F10830B"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>SpellRecharge+36C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>44</ID>
              <Description>"Beam Multiplier"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F1083FE"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>SpellRecharge+45F</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"Barage Multiplier"</Description>
              <LastState Value="1" Activated="0" RealAddress="0F1084F1"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>SpellRecharge+552</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"OP Scripts"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>49</ID>
          <Description>"One Hit Kills"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>2</ID>
              <Description>"Monsters OHKO"</Description>
              <LastState Activated="0"/>
              <Color>D55500</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/** Monster OHKO
*
*
*   Sets all monsters' health to 1, meaning they can be killed by anything
*   instantly.
*
*   Note that monsters may still be able to have health more than 1 if, for
*   example, you enrage the wave. This increase is usually negligable.
*
*   This does not affect special monsters (i.e. shadows).
*/

[ENABLE]
aobscan(MonsterMaxHP,f0 ?? ?? d0 49 ?? f0 ?? ?? d0 24 00 68 ?? ?? f0 ?? ?? d0 5d ?? 4a ?? ?? 68 ?? ?? f0 ?? ?? d0 5d ?? 4a ?? ?? 68 ?? ?? f0 ?? ?? d0 27 68 ?? ?? f0 ?? ?? d0 27 68 ?? ?? f0 ?? ?? d0 60 ?? ?? 66 ?? ?? 68 ?? ?? f0 ?? ?? d0 d2 68 ?? ?? f0 ?? ?? d0 d1 68 ?? ?? f0 ?? ?? d0 d1 12 07 00 00 24 01 75 10 03 00 00 24 00 75 68 ?? ?? f0 ?? ?? d0 d2 12 07 00 00 24 01 75 10 03 00 00 24 00 75 68 ?? ?? f0 ?? ?? d0 d0 66 ?? ?? 12 0b 00 00 60 ?? ?? 66 ?? ?? 73 10 1a 00 00 d0 66 ?? ?? 12 0b 00 00 60 ?? ?? 66 ?? ?? 73 10 07 00 00 60 ?? ?? 66 ?? ?? 73 68 ?? f0 ?? ?? d0 62 ?? 68 ?? ?? f0 ?? ?? d0 27 68 ?? ?? f0 ?? ?? d0 62 ?? 68 ?? ?? f0 ?? ?? 62 ?? 20 13 09 00 00 f0 ?? ?? d0 24 00 68 ?? ?? f0 ?? ?? 60 ?? ?? 2f ?? ?? 62 ?? 46 ?? ?? ?? 75 63 ?? f0 ?? ?? d0 5d ?? ?? 62 ?? 4a ?? ?? ?? 68 ?? ?? f0 ?? ?? d0 5d ?? ?? 62 ?? 4a ?? ?? ?? 68 ?? ??)

MonsterMaxHP+F9:
  db 24 01
MonsterMaxHP+109:
  db 24 01

[DISABLE]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>48</ID>
              <Description>"Apparations OHKO"</Description>
              <LastState Activated="0"/>
              <Color>D55500</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/** Apparations OHKO
*
*
*   Any shots from gems in towers that hit an apparation will instantly kill it.
*
*   This does not affect normal monsters or other special monsters.
*
*   NOTICE: I have not tested this yet. It *should* work, but that doesn't mean
*           it will.
*
*/

[ENABLE]
aobscan(ApparationGemDamage,d0 66 ?? ?? 46 ?? ?? ?? d0 66 ?? ?? 46 ?? ?? ?? ab 2a 12 0c 00 00 29 62 ?? d0 66 ?? ?? 46 ?? ?? ?? b0 12 1d 00 00 f0 ?? ?? 60 ?? ?? 66 ?? ?? 2a 63 ?? 66 ?? ?? 91 63 ?? 62 ?? 62 ?? 61 ?? ?? 08 ?? 08 ?? f0 ?? ?? 62 ?? d0 66 ?? ?? a2 75 63 ?? f0 ?? ?? 60 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 62 ?? a0 61 ?? ?? f0 ?? ?? d0 66 ?? ?? 60 ?? ?? 24 00 d0 66 ?? ?? 46 ?? ?? ?? 62 ?? a1 46 ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 46 ?? ?? ?? d0 66 ?? ?? 46 ?? ?? ?? 0c 0d 00 00 f0 ?? ?? d0 60 ?? ?? 66 ?? ?? 61 ?? ??)

ApparationGemDamage+74:
  db 2a 02 02 02 02 02 02 02 02 02 02

[DISABLE]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"Specters OHKO"</Description>
              <LastState Activated="0"/>
              <Color>D55500</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/** Specters OHKO
*
*
*   Any shots from gems in towers that hit a specter will instantly kill it.
*
*   This does not affect normal monsters or other special monsters.
*
*   NOTICE: I have not tested this yet. It *should* work, but that doesn't mean
*           it will.
*
*/

[ENABLE]
aobscan(SpecterGemDamage,d0 66 ?? ?? 46 ?? ?? ?? 75 63 ?? f0 ?? ?? 62 ?? d0 66 ?? ?? a2 75 63 ?? f0 ?? ?? 60 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 62 ?? a0 61 ?? ?? f0 ?? ?? d0 66 ?? ?? 60 ?? ?? 24 00 d0 66 ?? ?? 46 ?? ?? ?? 62 ?? a1 46 ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? 62 ?? d0 66 ?? ?? 46 ?? ?? ?? ab 2a 12 0c 00 00 29 62 ?? d0 66 ?? ?? 46 ?? ?? ?? b0)

SpecterGemDamage+3C:
  db 2a 02 02 02 02 02 02 02 02 02 02

[DISABLE]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>52</ID>
              <Description>"Spires OHKO"</Description>
              <LastState Activated="0"/>
              <Color>C85A00</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/** Spires OHKO
*
*
*   Any shots from gems in towers that hit a spire will instantly kill it.
*
*   This does not affect normal monsters or other special monsters.
*
*   NOTICE: I have not tested this yet. It *should* work, but that doesn't mean
*           it will.
*
*/

[ENABLE]
aobscan(SpireDealShotDamage,f0 ?? ?? 60 ?? ?? 62 ?? d0 66 ?? ?? 46 ?? ?? ?? 75 63 ?? f0 ?? ?? d0 66 ?? ?? 46 ?? ?? ?? 75 63 ?? f0 ?? ?? 60 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 62 ?? a0 61 ?? ?? f0 ?? ?? d0 66 ?? ?? 60 ?? ?? 24 00 d0 66 ?? ?? 46 ?? ?? ?? 62 ?? a1 46 ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? 62 ?? d0 66 ?? ?? 46 ?? ?? ?? ab 2a 12 0c 00 00 29)

SpireDealShotDamage+40:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 24 00

[DISABLE]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>26</ID>
              <Description>"Shadows OHKO"</Description>
              <LastState Activated="0"/>
              <Color>D55500</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/** Shadows OHKO
*
*
*   Any shots from gems in towers that hit a shadow will instantly kill it.
*
*   This does not affect normal monsters or other special monsters.
*
*   NOTICE: I have not tested this yet. It *should* work, but that doesn't mean
*           it will.
*
*/

[ENABLE]
aobscan(ShadowGemDamage,d3 11 1a 00 00 f0 ?? ?? 60 ?? ?? 24 01 62 ?? d0 66 ?? ?? 46 ?? ?? ?? a1 46 ?? ?? ?? 75 63 ?? f0 ?? ?? 62 ?? d0 66 ?? ?? a2 75 63 ?? f0 ?? ?? 60 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 62 ?? a0 61 ?? ?? f0 ?? ?? d0 66 ?? ?? 60 ?? ?? 24 00 d0 66 ?? ?? 46 ?? ?? ?? 62 ?? a1 46 ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 46 ?? ?? ?? d0 66 ?? ?? 46 ?? ?? ?? 0c 0d 00 00 f0 ?? ?? d0 60 ?? ?? 66 ?? ?? 61 ?? ??)

ShadowGemDamage+4B:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 24 00

[DISABLE]
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Buying Gems is Free"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Buying Gems is Free
*
*
*   Makes purchasing gems not cost any significant amount of mana.
*
*   Options:
*     Free Upgrade/Cloning Gems- see that script for details.
*
*/

[ENABLE]
aobscan(FreeGems,f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 60 ?? ?? 60 ?? ?? 60 ?? ?? 66 ?? ?? 46 ?? ?? ?? 24 01 d0 66 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 24 00 66 ?? ?? 46 ?? ?? ?? a1 a2 46 ?? ?? ?? 46 ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? 24 00 d5 10 35 00 00 09 f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 60 ?? ?? d0 66 ?? ?? 66 ?? ?? d1 66 ?? ?? 24 02 a2 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? a0 46 ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? c2 ?? d1 24 0b 15 c4 ff ff)

FreeGems+A:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 24 01
FreeGems+58:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 24 01

[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>6</ID>
              <Description>"Free Upgrade/Cloning Gems"</Description>
              <LastState Activated="0"/>
              <Color>D55500</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>/** Free Upgrade/Cloning Gems
*
*
*   Makes upgrading and cloning gems not cost any significant amount of mana.
*
*   Note that while this can be used without the "Buying Gems is Free" script
*   active, it isn't recomended since the pricing becomes a bit glitchy.
*
*/

[ENABLE]
aobscan(GemCostUpdater,f0 ?? ?? 62 ?? 11 0f 00 00 f0 ?? ?? 60 ?? ?? 66 ?? ?? 62 ?? 4f ?? ?? ?? f0 ?? ?? 62 ?? 66 ?? ?? d1 66 ?? ?? 46 ?? ?? ?? d2 66 ?? ?? 46 ?? ?? ?? a0 4f ?? ?? ?? f0 ?? ?? 62 ?? 66 ?? ?? d1 66 ?? ?? 46 ?? ?? ?? d2 66 ?? ?? 46 ?? ?? ?? a0 4f ?? ?? ?? f0 ?? ?? 62 ?? 66 ?? ?? 60 ?? ?? d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? d1 66 ?? ?? 46 ?? ?? ?? a0 d2 66 ?? ?? 46 ?? ?? ?? a0 46 ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? 62 ?? d2 66 ?? ?? 61 ?? ??)
aobscan(GemCombiningMana,d0 66 ?? ?? 66 ?? ?? 60 ?? ?? 60 ?? ?? 66 ?? ?? 46 ?? ?? ?? 24 01 d0 66 ?? ?? 66 ?? ?? 60 ?? ?? 66 ?? ?? 66 ?? ?? 24 01 66 ?? ?? 46 ?? ?? ?? a1 a2 46 ?? ?? ?? 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 5d ?? 4a ?? ?? 61 ?? ??)

GemCostUpdater+5A:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 24 01
GemCombiningMana+7:
  db 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 24 01
[DISABLE]
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Monsters Don't Deal Damage to Orb"</Description>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Monsters Don't Deal Damage to Orb
*
*
*   When monsters reach your orb, they will no longer take away mana from your
*   mana pool when banished, effectively making you invincible.
*
*   Note that special monsters (i.e. Spires) can still probably deal damage to
*   your orb and kill you.
*
*/
[ENABLE]
aobscan(MonsterAttackOrb,d1 66 ?? ?? 24 00 0e 16 00 00 f0 ?? ?? 62 ?? d0 66 ?? ?? 46 ?? ?? ?? d1 66 ?? ?? a2 a0 75 63 ?? f0 ?? ?? d0 66 ?? ?? 62 ?? 90 27 26 4f ?? ?? ?? f0 ?? ?? d0 66 ?? ?? 2a 63 ?? 66 ?? ?? 91 63 ?? 62 ?? 62 ?? 61 ?? ?? 08 ?? 08 ?? f0 ?? ?? d0 66 ?? ?? d0 66 ?? ?? 66 ?? ?? 62 ?? a0 61 ?? ??)

MonsterAttackOrb+27:
  db 02 24 00

[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Set Base Gem Grade"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>D55500</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>/** Set Base Gem Grade
*
*
*   This was made for fun. It makes it so that if you purchase a grade 'g' gem,
*   it actually makes a gem of grade 'g+(n-1)' for the same price, where 'n' is
*   a value you specify (default is 7).
*
*   For example, assuming it's set at 7, purchasing a grade 1 gem will give you
*   a grade 7 gem, purchasing a grade 2 gem will give you a grade 8 gem, etc...
*
*   Interestingly enough, this also affects gems created at the beginning of a
*   level.
*
*   Options:
*     Grade- the grade you want a grade 1 gem to turn into when purchased. This
*            is a signed byte value (max is 127, anything more will be
*            negative).
*
*/

[ENABLE]

aobscan(CreatedGemGrade,24 00 63 ?? 10 1f 00 00 09 f0 ?? ?? d0 66 ?? ?? 66 ?? ?? 62 ?? 62 ?? 26 26 d3 46 ?? ?? ?? 80 ?? 63 ?? f0 ?? ?? c2 ?? 62 ?? d1 15 da ff ff)
registersymbol(CreatedGemGrade)
CreatedGemGrade:
  db 24 07 d1 a0 d5 10 1e 00 00 09 02 02
CreatedGemGrade+25:
  db c3 01 24 01 d1 15 db ff ff

[DISABLE]
unregistersymbol(CreatedGemGrade)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Grade"</Description>
              <LastState Value="0" Activated="0" RealAddress="0F12F4A8"/>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>800000</Color>
              <VariableType>Byte</VariableType>
              <Address>CreatedGemGrade+1</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
