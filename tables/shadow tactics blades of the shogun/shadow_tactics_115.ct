<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>113469</ID>
      <Description>"Inventory Items Set to 99"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
label(inventory_return)

registersymbol(inventory_aob)
registersymbol(inventory_newmem)

aobscan(inventory_aob, 8B F0 8B C6 85 C0 74 05 8B 46 0C EB 02 33 C0 8D 65 FC 5E C9 C3 6A 66 68 37 06 00 00)

alloc(inventory_newmem, 32)

inventory_newmem:
  mov esi,eax	//Original Code
  mov [esi+0C],#99
  mov eax,esi	//Original Code
  test eax,eax	//Original Code
  jmp inventory_return

inventory_aob:
  jmp inventory_newmem
  nop
inventory_return:

[DISABLE]
inventory_aob:
  db 8B F0 8B C6 85 C0

unregistersymbol(inventory_newmem)
unregistersymbol(inventory_aob)

dealloc(inventory_newmem)

{
// ORIGINAL CODE

1B53F5A0 - 83 C4 10              - add esp,10
1B53F5A3 - 8B C8                 - mov ecx,eax
1B53F5A5 - 8B 45 F8              - mov eax,[ebp-08]
1B53F5A8 - 8B 55 F4              - mov edx,[ebp-0C]
1B53F5AB - 89 51 10              - mov [ecx+10],edx
1B53F5AE - C7 41 14 405FC81D     - mov [ecx+14],1DC85F40
1B53F5B5 - C7 41 1C 70B8C71D     - mov [ecx+1C],1DC7B870
1B53F5BC - C7 41 0C 3CED531B     - mov [ecx+0C],1B53ED3C
1B53F5C3 - 83 EC 08              - sub esp,08
1B53F5C6 - 51                    - push ecx
1B53F5C7 - 50                    - push eax
1B53F5C8 - 39 00                 - cmp [eax],eax
1B53F5CA - E8 41ADF6E9           - call 054AA310
1B53F5CF - 83 C4 10              - add esp,10
// ---------- INJECTING HERE ----------
1B53F5D2 - 8B F0                 - mov esi,eax
1B53F5D4 - 8B C6                 - mov eax,esi
1B53F5D6 - 85 C0                 - test eax,eax
// ---------- DONE INJECTING  ----------
1B53F5D8 - 74 05                 - je 1B53F5DF
1B53F5DA - 8B 46 0C              - mov eax,[esi+0C]
1B53F5DD - EB 02                 - jmp 1B53F5E1
1B53F5DF - 33 C0                 - xor eax,eax
1B53F5E1 - 8D 65 FC              - lea esp,[ebp-04]
1B53F5E4 - 5E                    - pop esi
1B53F5E5 - C9                    - leave
1B53F5E6 - C3                    - ret
1B53F5E7 - 6A 66                 - push 66
1B53F5E9 - 68 37060000           - push 00000637
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>113460</ID>
      <Description>"No Cooldown"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
registersymbol(cooldown_aob)

aobscan(cooldown_aob, D9 45 0C D9 47 04 DE E9 D9 07 DE F9 83 EC 0C 83 EC 04 D9 1C 24)

cooldown_aob:
  fld dword ptr [edi] //Load Cooldown Time As Elapsed Time Instead
  nop
  nop
  nop
  nop
  nop
  nop

[DISABLE]
cooldown_aob:
  db D9 45 0C D9 47 04 DE E9

unregistersymbol(cooldown_aob)

{
// ORIGINAL CODE

350F497E - 85 C0                 - test eax,eax
350F4980 - 0F84 37000000         - je 350F49BD
350F4986 - D9 07                 - fld dword ptr [edi]
350F4988 - D9EE                  - fldz
350F498A - DFF1                  - fcomip st(0),st(1)
350F498C - DDD8                  - fstp st(0)
350F498E - 7A 02                 - jp 350F4992
350F4990 - 74 2B                 - je 350F49BD
350F4992 - D9E8                  - fld1
350F4994 - DD 5D F0              - fstp qword ptr [ebp-10]
// ---------- INJECTING HERE ----------
350F4997 - D9 45 0C              - fld dword ptr [ebp+0C]
350F499A - D9 47 04              - fld dword ptr [edi+04]
// ---------- DONE INJECTING  ----------
350F499D - DEE9                  - fsubp st(1),st(0)
350F499F - D9 07                 - fld dword ptr [edi]
350F49A1 - DEF9                  - fdivp st(1),st(0)
350F49A3 - 83 EC 0C              - sub esp,0C
350F49A6 - 83 EC 04              - sub esp,04
350F49A9 - D9 1C 24              - fstp dword ptr [esp]
350F49AC - E8 231D96D0           - call 05A566D4
350F49B1 - 83 C4 10              - add esp,10
350F49B4 - DD 45 F0              - fld qword ptr [ebp-10]
350F49B7 - D9C9                  - fxch st(1)
350F49B9 - DEE9                  - fsubp st(1),st(0)
350F49BB - EB 02                 - jmp 350F49BF
350F49BD - D9EE                  - fldz
350F49BF - 8D 65 FC              - lea esp,[ebp-04]
350F49C2 - 5F                    - pop edi
350F49C3 - C9                    - leave
350F49C4 - C3                    - ret
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>113468</ID>
      <Description>"Freeze Mission Time"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
registersymbol(freezemissiontime_aob)

aobscan(freezemissiontime_aob, DE C1 D9 58 14 * * * * * * * 85 C0 74 23 8B * * * * * 8B 4D 08 8B 49 10 D9 41 14 83 EC 08 83 EC 04)

freezemissiontime_aob:
  nop
  nop

[DISABLE]
freezemissiontime_aob:
  db DE C1 D9 58 14

unregistersymbol(freezemissiontime_aob)

{
// ORIGINAL CODE

1B52F884 - 8B 45 08              - mov eax,[ebp+08]
1B52F887 - D9 40 14              - fld dword ptr [eax+14]
1B52F88A - DEE9                  - fsubp st(1),st(0)
1B52F88C - D9 5D F0              - fstp dword ptr [ebp-10]
1B52F88F - 8B 48 10              - mov ecx,[eax+10]
1B52F892 - 8B 51 18              - mov edx,[ecx+18]
1B52F895 - 42                    - inc edx
1B52F896 - 89 51 18              - mov [ecx+18],edx
1B52F899 - 8B 40 10              - mov eax,[eax+10]
1B52F89C - D9 40 14              - fld dword ptr [eax+14]
1B52F89F - D9 45 F0              - fld dword ptr [ebp-10]
// ---------- INJECTING HERE ----------
1B52F8A2 - DEC1                  - faddp
1B52F8A4 - D9 58 14              - fstp dword ptr [eax+14]
// ---------- DONE INJECTING  ----------
1B52F8A7 - 0FB6 05 A43A4805      - movzx eax,byte ptr [05483AA4]
1B52F8AE - 85 C0                 - test eax,eax
1B52F8B0 - 74 23                 - je 1B52F8D5
1B52F8B2 - 8B 05 A03A4805        - mov eax,[05483AA0]
1B52F8B8 - 8B 4D 08              - mov ecx,[ebp+08]
1B52F8BB - 8B 49 10              - mov ecx,[ecx+10]
1B52F8BE - D9 41 14              - fld dword ptr [ecx+14]
1B52F8C1 - 83 EC 08              - sub esp,08
1B52F8C4 - 83 EC 04              - sub esp,04
1B52F8C7 - D9 1C 24              - fstp dword ptr [esp]
1B52F8CA - 50                    - push eax
1B52F8CB - 39 00                 - cmp [eax],eax
1B52F8CD - E8 4ECDBC19           - call 350FC620
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>113472</ID>
      <Description>"Ignore all objects (Player, Corpse, etc)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
// TrackedObject:setState+e
1C77DA2B - 0F84 AB000000         - je 1C77DADC
1C77DA31 - 0FB6 46 1C            - movzx eax,byte ptr [esi+1C]
1C77DA35 - 85 C0                 - test eax,eax
1C77DA37 - 74 09                 - je 1C77DA42
1C77DA39 - 83 FF 02              - cmp edi,02
1C77DA3C - 7D 04                 - jnl 1C77DA42
1C77DA3E - C6 46 1C 00           - mov byte ptr [esi+1C],00
}

[ENABLE]
registersymbol(TrackedObject_setState)

aobscan(TrackedObject_setState, 0F 84 AB 00 00 00 0F B6 46 1C)

TrackedObject_setState:
db 90 E9

[DISABLE]
TrackedObject_setState:
db 0F 84
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>TrackedObject_setState</Name>
      <Address> 1C77DA2B</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
