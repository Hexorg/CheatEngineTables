<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>204</ID>
      <Description>"Health (v3.3.2.43478)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 3.3.2.43478
  Date   : 2016-06-15
  Updated by: DaHacker878
  Author : Dark

  This script gives your units 0 Damage Taken.
}

[ENABLE]

aobscanmodule(Health,SC2_x64.exe,89 B5 98 01 00 00 89 8C) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+81CACD)

label(code)
label(return)

newmem:
  cmp byte ptr[rbp+00000042],1
  jne code
  mov esi,0

code:
  mov [rbp+00000198],esi
  jmp return

Health:
  jmp newmem
  nop
return:
registersymbol(Health)

[DISABLE]

Health:
  db 89 B5 98 01 00 00

unregistersymbol(Health)
dealloc(newmem)

{
// ORIGINAL CODE for v3.3.2.43482 - INJECTION POINT: "SC2_x64.exe"+81CACD

SC2_x64.exe+81CAA5 - 48 8D 8C 24 D0000000  - lea rcx,[rsp+000000D0]
SC2_x64.exe+81CAAD - EB 16                 - jmp SC2_x64.exe+81CAC5
SC2_x64.exe+81CAAF - 48 8D 8C 24 D8000000  - lea rcx,[rsp+000000D8]
SC2_x64.exe+81CAB7 - 48 8D 94 24 E0000000  - lea rdx,[rsp+000000E0]
SC2_x64.exe+81CABF - 3B C7                 - cmp eax,edi
SC2_x64.exe+81CAC1 - 48 0F4E CA            - cmovle rcx,rdx
SC2_x64.exe+81CAC5 - 8B F7                 - mov esi,edi
SC2_x64.exe+81CAC7 - 2B 31                 - sub esi,[rcx]
SC2_x64.exe+81CAC9 - 8B CF                 - mov ecx,edi
SC2_x64.exe+81CACB - 2B C8                 - sub ecx,eax
// ---------- INJECTING HERE ----------
SC2_x64.exe+81CACD - 89 B5 98 01 00 00        - mov [rbp+00000198],esi
// ---------- DONE INJECTING  ----------
SC2_x64.exe+81CAD3 - 89 8C 24 88 00 00 00     - mov [rsp+00000088],ecx
SC2_x64.exe+81CADA - 3B F3                 - cmp esi,ebx
SC2_x64.exe+81CADC - 74 24                 - je SC2_x64.exe+81CB02
SC2_x64.exe+81CADE - 8B D3                 - mov edx,ebx
SC2_x64.exe+81CAE0 - C6 44 24 30 01        - mov byte ptr [rsp+30],01
SC2_x64.exe+81CAE5 - 44 8B CF              - mov r9d,edi
SC2_x64.exe+81CAE8 - 44 8B C3              - mov r8d,ebx
SC2_x64.exe+81CAEB - 48 8B CD              - mov rcx,rbp
SC2_x64.exe+81CAEE - 2B D6                 - sub edx,esi
SC2_x64.exe+81CAF0 - C7 44 24 28 01 00 00 00  - mov [rsp+28],00000001
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>205</ID>
      <Description>"Energy (v3.3.2.43478)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 3.3.2.43478
  Date   : 2016-06-15
  Updated by: DaHacker878
  Author : Dark

  This script gives all your units 200 Energy.
}

[ENABLE]

aobscanmodule(Energy,SC2_x64.exe,89 9D A0 01 00 00 3B DF) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+81AC7E)

label(code)
label(return)

newmem:
  cmp byte ptr [rbp+00000042],1
  jne code
  mov ebx, rsi // move Max Energy into Current Energy.

code:
  mov [rbp+000001A0],ebx
  jmp return

Energy:
  jmp newmem
  nop
return:
registersymbol(Energy)

[DISABLE]

Energy:
  db 89 9D A0 01 00 00

unregistersymbol(Energy)
dealloc(newmem)

{
cmp byte ptr [rbp+000008FC],1 // 4 Bytes
cmp byte ptr [rbp+00000914],1 // 4 Bytes
cmp byte ptr [rbp+0000092C],1 // 4 Bytes
cmp byte ptr [rbp+00000944],1 // 4 Bytes
cmp byte ptr [rbp+0000095C],1 // 4 Bytes
cmp byte ptr [rbp+000009BC],1 // 4 Bytes
cmp byte ptr [rbp+000009C0],1 // 4 Bytes
cmp byte ptr [rbp+000009D4],1 // 4 Bytes
cmp byte ptr [rbp+00000F5C],1 // Float
// ORIGINAL CODE for v3.3.2.43478 - INJECTION POINT: "SC2_x64.exe"+81AC7E

SC2_x64.exe+81AC5D - 89 44 24 60           - mov [rsp+60],eax
SC2_x64.exe+81AC61 - 85 C0                 - test eax,eax
SC2_x64.exe+81AC63 - 79 07                 - jns SC2_x64.exe+81AC6C
SC2_x64.exe+81AC65 - 48 8D 4C 24 50        - lea rcx,[rsp+50]
SC2_x64.exe+81AC6A - EB 10                 - jmp SC2_x64.exe+81AC7C
SC2_x64.exe+81AC6C - 48 8D 4C 24 58        - lea rcx,[rsp+58]
SC2_x64.exe+81AC71 - 48 8D 54 24 60        - lea rdx,[rsp+60]
SC2_x64.exe+81AC76 - 3B C6                 - cmp eax,esi
SC2_x64.exe+81AC78 - 48 0F4 E CA           - cmovle rcx,rdx
SC2_x64.exe+81AC7C - 8B 19                 - mov ebx,[rcx]
// ---------- INJECTING HERE ----------
SC2_x64.exe+81AC7E - 89 9D A0 01 00 00     - mov [rbp+000001A0],ebx
// ---------- DONE INJECTING  ----------
SC2_x64.exe+81AC84 - 3B DF                 - cmp ebx,edi
SC2_x64.exe+81AC86 - 74 74                 - je SC2_x64.exe+81ACFC
SC2_x64.exe+81AC88 - 2B DF                 - sub ebx,edi
SC2_x64.exe+81AC8A - 74 70                 - je SC2_x64.exe+81ACFC
SC2_x64.exe+81AC8C - 85 F6                 - test esi,esi
SC2_x64.exe+81AC8E - 74 6C                 - je SC2_x64.exe+81ACFC
SC2_x64.exe+81AC90 - E8 0B D0 F8 FF        - call SC2_x64.exe+7A7CA0
SC2_x64.exe+81AC95 - BA 4B 00 00 00        - mov edx,0000004B
SC2_x64.exe+81AC9A - 48 8B C8              - mov rcx,rax
SC2_x64.exe+81AC9D - E8 3E CB F8 FF        - call SC2_x64.exe+7A77E0
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>206</ID>
      <Description>"Shield (v3.3.2.43478)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 3.3.1.43199
  Date   : 2016-05-30
Updated By: DaHacker878
  Author : Dark

  This script Removes all Damage to your Unit's Shields.
}

[ENABLE]

aobscanmodule(Shield,SC2_x64.exe,89 86 9C 01 00 00 3B C3) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+81BAC7)

label(code)
label(return)

newmem:
  cmp byte ptr [rsi+00000042],1
  jne code
  xor eax,eax

code:
  mov [rsi+0000019C],eax
  jmp return

Shield:
  jmp newmem
  nop
return:
registersymbol(Shield)

[DISABLE]

Shield:
  db 89 86 9C 01 00 00

unregistersymbol(Shield)
dealloc(newmem)

{
// ORIGINAL CODE for v3.3.2.43478 - INJECTION POINT: "SC2_x64.exe"+81BAC7

SC2_x64.exe+81BAA3 - 85 FF                    - test edi,edi
SC2_x64.exe+81BAA5 - 79 07                    - jns SC2_x64.exe+81BAAE
SC2_x64.exe+81BAA7 - 48 8D 4C 24 70           - lea rcx,[rsp+70]
SC2_x64.exe+81BAAC - EB 14                    - jmp SC2_x64.exe+81BAC2
SC2_x64.exe+81BAAE - 48 8D 4C 24 78           - lea rcx,[rsp+78]
SC2_x64.exe+81BAB3 - 48 8D 84 24 80 00 00 00  - lea rax,[rsp+00000080]
SC2_x64.exe+81BABB - 41 3B F9                 - cmp edi,r9d
SC2_x64.exe+81BABE - 48 0F 4E C8              - cmovle rcx,rax
SC2_x64.exe+81BAC2 - 41 8B C1                 - mov eax,r9d
SC2_x64.exe+81BAC5 - 2B 01                    - sub eax,[rcx]
// ---------- INJECTING HERE ----------
SC2_x64.exe+81BAC7 - 89 86 9C 01 00 00        - mov [rsi+0000019C],eax
// ---------- DONE INJECTING  ----------
SC2_x64.exe+81BACD - 3B C3                    - cmp eax,ebx
SC2_x64.exe+81BACF - 74 24                    - je SC2_x64.exe+81BAF5
SC2_x64.exe+81BAD1 - 8B D3                    - mov edx,ebx
SC2_x64.exe+81BAD3 - C6 44 24 30 01           - mov byte ptr [rsp+30],01
SC2_x64.exe+81BAD8 - 44 8B C3                 - mov r8d,ebx
SC2_x64.exe+81BADB - 48 8B CE                 - mov rcx,rsi
SC2_x64.exe+81BADE - 2B D0                    - sub edx,eax
SC2_x64.exe+81BAE0 - C7 44 24 28 09 00 00 00  - mov [rsp+28],00000009
SC2_x64.exe+81BAE8 - C7 44 24 20 08 00 00 00  - mov [rsp+20],00000008
SC2_x64.exe+81BAF0 - E8 DB E6 FF FF           - call SC2_x64.exe+81A1D0
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>207</ID>
      <Description>"No Merc Delay  (v3.3.2.43478)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Merc_Delay,SC2_x64.exe,8B 00 29 43 18)
alloc(newmem,$1000,"SC2_x64.exe"+890C8F)

label(code)
label(return)

newmem:

code:
//  mov eax,[rax]
  mov eax, [rbx+18]
  sub [rbx+18],eax
  jmp return

Merc_Delay:
  jmp code
return:
registersymbol(Merc_Delay)

[DISABLE]

Merc_Delay:
  db 8B 00 29 43 18

unregistersymbol(Merc_Delay)
dealloc(newmem)

{
// ORIGINAL CODE for v3.3.2.43478 - INJECTION POINT: "SC2_x64.exe"+890C8F

SC2_x64.exe+890C6A - 48 85 DB                 - test rbx,rbx
SC2_x64.exe+890C6D - 74 77                    - je SC2_x64.exe+890CE6
SC2_x64.exe+890C6F - 48 8D 3D 5A 0D 49 01     - lea rdi,[SC2_x64.exe+1D219D0]
SC2_x64.exe+890C76 - 44 39 63 1C              - cmp [rbx+1C],r12d
SC2_x64.exe+890C7A - 7E 43                    - jle SC2_x64.exe+890CBF
SC2_x64.exe+890C7C - 44 39 63 18              - cmp [rbx+18],r12d
SC2_x64.exe+890C80 - 7E 3D                    - jle SC2_x64.exe+890CBF
SC2_x64.exe+890C82 - 48 8D 54 24 60           - lea rdx,[rsp+60]
SC2_x64.exe+890C87 - 48 8B CD                 - mov rcx,rbp
SC2_x64.exe+890C8A - E8 11 B2 FD FF           - call SC2_x64.exe+86BEA0
// ---------- INJECTING HERE ----------
SC2_x64.exe+890C8F - 8B 00                    - mov eax,[rax]
SC2_x64.exe+890C91 - 29 43 18                 - sub [rbx+18],eax
// ---------- DONE INJECTING  ----------
SC2_x64.exe+890C94 - 44 39 63 18              - cmp [rbx+18],r12d
SC2_x64.exe+890C98 - 7F 25                    - jg SC2_x64.exe+890CBF
SC2_x64.exe+890C9A - 48 8D 4B 20              - lea rcx,[rbx+20]
SC2_x64.exe+890C9E - 48 8D 54 24 20           - lea rdx,[rsp+20]
SC2_x64.exe+890CA3 - 4C 89 64 24 28           - mov [rsp+28],r12
SC2_x64.exe+890CA8 - C7 44 24 30 03 00 0D 00  - mov [rsp+30],000D0003
SC2_x64.exe+890CB0 - 48 89 7C 24 20           - mov [rsp+20],rdi
SC2_x64.exe+890CB5 - 48 89 5C 24 38           - mov [rsp+38],rbx
SC2_x64.exe+890CBA - E8 31 86 FE FF           - call SC2_x64.exe+8792F0
SC2_x64.exe+890CBF - 48 8B 5B 08             - mov rbx,[rbx+08]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>145</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>19</Key>
          </Keys>
          <ID>2</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>208</ID>
      <Description>"Remove Skill Delay (v3.3.2.43478)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Skill_Delay,SC2_x64.exe,8B 00 29 43 18 44 39 63 18)
alloc(newmem,$1000,"SC2_x64.exe"+890C8F)

label(code)
label(return)

newmem:

code:
//  mov eax,[rax]
//  sub [rbx+18],eax
  mov [rbx+18],0
  jmp return

Skill_Delay:
  jmp code
return:
registersymbol(Skill_Delay)

[DISABLE]

Skill_Delay:
  db 8B 00 29 43 18

unregistersymbol(Skill_Delay)
dealloc(newmem)

{
// ORIGINAL CODE for v3.3.2.43478 - INJECTION POINT: "SC2_x64.exe"+890C8F

SC2_x64.exe+890C6A - 48 85 DB                 - test rbx,rbx
SC2_x64.exe+890C6D - 74 77                    - je SC2_x64.exe+890CE6
SC2_x64.exe+890C6F - 48 8D 3D 5A 0D 49 01     - lea rdi,[SC2_x64.exe+1D219D0]
SC2_x64.exe+890C76 - 44 39 63 1C              - cmp [rbx+1C],r12d
SC2_x64.exe+890C7A - 7E 43                    - jle SC2_x64.exe+890CBF
SC2_x64.exe+890C7C - 44 39 63 18              - cmp [rbx+18],r12d
SC2_x64.exe+890C80 - 7E 3D                    - jle SC2_x64.exe+890CBF
SC2_x64.exe+890C82 - 48 8D 54 24 60           - lea rdx,[rsp+60]
SC2_x64.exe+890C87 - 48 8B CD                 - mov rcx,rbp
SC2_x64.exe+890C8A - E8 11 B2 FD FF           - call SC2_x64.exe+86BEA0
// ---------- INJECTING HERE ----------
SC2_x64.exe+890C8F - 8B 00                    - mov eax,[rax]
SC2_x64.exe+890C91 - 29 43 18                 - sub [rbx+18],eax
// ---------- DONE INJECTING  ----------
SC2_x64.exe+890C94 - 44 39 63 18              - cmp [rbx+18],r12d
SC2_x64.exe+890C98 - 7F 25                    - jg SC2_x64.exe+890CBF
SC2_x64.exe+890C9A - 48 8D 4B 20              - lea rcx,[rbx+20]
SC2_x64.exe+890C9E - 48 8D 54 24 20           - lea rdx,[rsp+20]
SC2_x64.exe+890CA3 - 4C 89 64 24 28           - mov [rsp+28],r12
SC2_x64.exe+890CA8 - C7 44 24 30 03 00 0D 00  - mov [rsp+30],000D0003
SC2_x64.exe+890CB0 - 48 89 7C 24 20           - mov [rsp+20],rdi
SC2_x64.exe+890CB5 - 48 89 5C 24 38           - mov [rsp+38],rbx
SC2_x64.exe+890CBA - E8 31 86 FE FF           - call SC2_x64.exe+8792F0
SC2_x64.exe+890CBF - 48 8B 5B 08             - mov rbx,[rbx+08]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>209</ID>
      <Description>"Freeze Resource Pile (v3.3.2.43478)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Resource_Pile,SC2_x64.exe,89 B7 8C 00 00 00 41 3B)
alloc(newmem,$1000,"SC2_x64.exe"+948CB9)

label(code)
label(return)

newmem:
// to let automated refineries get filled on mission start; otherwise it'll be zero
  cmp [rdi+0000008C], 0
  jne return

code:
  mov [rdi+0000008C],esi
  jmp return

Resource_Pile:
  jmp newmem
  nop
return:
registersymbol(Resource_Pile)

[DISABLE]

Resource_Pile:
  db 89 B7 8C 00 00 00

unregistersymbol(Resource_Pile)
dealloc(newmem)

{
// ORIGINAL CODE for v3.3.2.43478 - INJECTION POINT: "SC2_x64.exe"+948CB9

SC2_x64.exe+948C8C - 48 8B C8              - mov rcx,rax
SC2_x64.exe+948C8F - 8B D3                 - mov edx,ebx
SC2_x64.exe+948C91 - E8 6A FF FF FF        - call SC2_x64.exe+948C00
SC2_x64.exe+948C96 - EB 03                 - jmp SC2_x64.exe+948C9B
SC2_x64.exe+948C98 - 8B 5D 58              - mov ebx,[rbp+58]
SC2_x64.exe+948C9B - 44 8B 8F 8C 00 00 00  - mov r9d,[rdi+0000008C]
SC2_x64.exe+948CA2 - 48 8D 87 90 00 00 00  - lea rax,[rdi+00000090]
SC2_x64.exe+948CA9 - 48 8D 4D 58           - lea rcx,[rbp+58]
SC2_x64.exe+948CAD - 3B 18                 - cmp ebx,[rax]
SC2_x64.exe+948CAF - 44 89 4D 50           - mov [rbp+50],r9d
SC2_x64.exe+948CB3 - 48 0F 43 C8           - cmovae rcx,rax
SC2_x64.exe+948CB7 - 8B 31                 - mov esi,[rcx]
// ---------- INJECTING HERE ----------
SC2_x64.exe+948CB9 - 89 B7 8C 00 00 00     - mov [rdi+0000008C],esi
// ---------- DONE INJECTING  ----------
SC2_x64.exe+948CBF - 41 3B F1              - cmp esi,r9d
SC2_x64.exe+948CC2 - 74 42                 - je SC2_x64.exe+948D06
SC2_x64.exe+948CC4 - 48 8B 47 28           - mov rax,[rdi+28]
SC2_x64.exe+948CC8 - 44 8B C6              - mov r8d,esi
SC2_x64.exe+948CCB - BA 16 00 00 00        - mov edx,00000016
SC2_x64.exe+948CD0 - 8B 08                 - mov ecx,[rax]
SC2_x64.exe+948CD2 - 45 2B C1              - sub r8d,r9d
SC2_x64.exe+948CD5 - 89 4D 58              - mov [rbp+58],ecx
SC2_x64.exe+948CD8 - 48 8D 4D 58           - lea rcx,[rbp+58]
SC2_x64.exe+948CDC - E8 8F C9 F7 FF        - call SC2_x64.exe+8C5670
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>210</ID>
      <Description>"Infinite Buff/Debuff (v3.3.2.43478)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game:       SC2_x64.exe
  Version:    3.3.0.42932
  Updated by: DaHacker878
  Date:       May 19th 2016


  Date   : 2015-12-25
  Author : Dark
}

[ENABLE]

aobscanmodule(Buff_Duration,SC2_x64.exe,8B 00 42 29 44 2B 18) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+9AB892)

label(code)
label(return)

newmem:

  cmp r13, 0
  je return

code:
  mov eax,[rax]
  sub [rbx+r13+18],eax
  jmp return

Buff_Duration:
  jmp newmem
  nop
  nop
return:
registersymbol(Buff_Duration)

[DISABLE]

Buff_Duration:
  db 8B 00 42 29 44 2B 18
// mov eax,[rax]
// sub [rbx+r13+18],eax

unregistersymbol(Buff_Duration)
dealloc(newmem)

{
// ORIGINAL CODE for v3.3.2.43478 - INJECTION POINT: "SC2_x64.exe"+9AB892

SC2_x64.exe+9AB866 - 44 3B E0                 - cmp r12d,eax
SC2_x64.exe+9AB869 - 0F 8D 91 00 00 00        - jnl SC2_x64.exe+9AB900
SC2_x64.exe+9AB86F - 48 8D 45 6F              - lea rax,[rbp+6F]
SC2_x64.exe+9AB873 - 44 8B 20                 - mov r12d,[rax]
SC2_x64.exe+9AB876 - 4C 8B 75 BF              - mov r14,[rbp-41]
SC2_x64.exe+9AB87A - 44 8B 7D 67              - mov r15d,[rbp+67]
SC2_x64.exe+9AB87E - 48 8B 9E A0 00 00 00     - mov rbx,[rsi+000000A0]
SC2_x64.exe+9AB885 - 48 8D 55 E7              - lea rdx,[rbp-19]
SC2_x64.exe+9AB889 - 48 8D 4D 77              - lea rcx,[rbp+77]
SC2_x64.exe+9AB88D - E8 0E 06 EC FF           - call SC2_x64.exe+86BEA0
// ---------- INJECTING HERE ----------
SC2_x64.exe+9AB892 - 8B 00                    - mov eax,[rax]
SC2_x64.exe+9AB894 - 42 29 44 2B 18           - sub [rbx+r13+18],eax
// ---------- DONE INJECTING  ----------
SC2_x64.exe+9AB899 - 48 8B 96 A0 00 00 00     - mov rdx,[rsi+000000A0]
SC2_x64.exe+9AB8A0 - 42 8B 4C 2A 18           - mov ecx,[rdx+r13+18]
SC2_x64.exe+9AB8A5 - 41 03 CC                 - add ecx,r12d
SC2_x64.exe+9AB8A8 - 85 C9                    - test ecx,ecx
SC2_x64.exe+9AB8AA - 0F 8F C0 00 00 00        - jg SC2_x64.exe+9AB970
SC2_x64.exe+9AB8B0 - F6 46 69 02              - test byte ptr [rsi+69],02
SC2_x64.exe+9AB8B4 - 74 0A                    - je SC2_x64.exe+9AB8C0
SC2_x64.exe+9AB8B6 - 4A 8D 4C 32 14           - lea rcx,[rdx+r14+14]
SC2_x64.exe+9AB8BB - E8 E0 8B ED FF           - call SC2_x64.exe+8844A0
SC2_x64.exe+9AB8C0 - 48 8B 86 A0 00 00 00     - mov rax,[rsi+000000A0]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>211</ID>
      <Description>"Credit's Auto Assemble Script (Wings of Liberty v3.3.2.43478)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 3.3.2.43478
  Date   : 2016-06-15
  Author : DaHacker878

  This script keeps your Credits from Wings of Liberty above 500,000.
}

define(address,"SC2_x64.exe"+780CB5)
define(bytes,89 58 34 E8 23 F9 1F 00)

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
assert(address,bytes)
alloc(Credits_newmem,$1000,"SC2_x64.exe"+780CB5)

label(Original_Credits_Code)
label(Credits_Code)
label(Credits_return)

Credits_newmem:

Credits_Code:
cmp [rax+34],7A120 //500,000
jge Original_Credits_Code
mov ebx,F2EB8          //995,000
//mov [rsp+30],F2EB8
jmp Original_Credits_Code

Original_Credits_Code:
  mov [rax+34],ebx
  call SC2_x64.exe+9805E0
  jmp Credits_return

address:
  jmp Credits_Code
  nop
  nop
  nop
Credits_return:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
address:
  db bytes
  // mov [rax+34],ebx
  // call SC2_x64.exe+980380

dealloc(Credits_newmem)

{
// ORIGINAL CODE for v3.3.2.43478 - INJECTION POINT: "SC2_x64.exe"+780CB5

"SC2_x64.exe"+780C96: 48 83 EC 20        -  sub rsp,20
"SC2_x64.exe"+780C9A: 41 8B D8           -  mov ebx,r8d
"SC2_x64.exe"+780C9D: 41 B0 01           -  mov al,01
"SC2_x64.exe"+780CA0: 48 8B FA           -  mov rdi,rdx
"SC2_x64.exe"+780CA3: E8 F8 EF FF FF     -  call SC2_x64.exe+77FCA0
"SC2_x64.exe"+780CA8: 48 85 C0           -  test rax,rax
"SC2_x64.exe"+780CAB: 74 10              -  je SC2_x64.exe+780CBD
"SC2_x64.exe"+780CAD: 39 58 34           -  cmp [rax+34],ebx
"SC2_x64.exe"+780CB0: 74 0B              -  je SC2_x64.exe+780CBD
"SC2_x64.exe"+780CB2: 48 8B CF           -  mov rcx,rdi
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+780CB5: 89 58 34           -  mov [rax+34],ebx
"SC2_x64.exe"+780CB8: E8 23 F9 1F 00     - call SC2_x64.exe+9805E0
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+780CBD: 48 8B 5C 24 30     -  mov rbx,[rsp+30]
"SC2_x64.exe"+780CC2: 48 83 C4 20        -  add rsp,20
"SC2_x64.exe"+780CC6: 5F                 -  pop rdi
"SC2_x64.exe"+780CC7: C3                 -  ret
"SC2_x64.exe"+780CC8: 00 00              -  add [rax],al
"SC2_x64.exe"+780CCA: 00 40 01           -  add [rax+01],al
"SC2_x64.exe"+780CCD: 00 00              -  add [rax],al
"SC2_x64.exe"+780CCF: 00 40 53           -  add [rax+53],al
"SC2_x64.exe"+780CD2: 48 83 EC 20        -  sub rsp,20
"SC2_x64.exe"+780CD6: 41 8B D9           -  mov ebx,r9d

RAX=00000000237CCBC0  // Base Address + Offset
RBX=00000000000B98C0  // Current Credit's
RCX=00000000036579E0
RDX=0073746964657243
RSI=000000003C000644
RDI=00000000036579E0
RSP=0000000003657990
RBP=0000000000000322
RIP=000000013F950CB8
R8=FFFFFFFFFFFFFFFF
R9=0000000007BF5118
R10=7EFEFEFEFEFEFEFF
R11=8101010101010100
R12=0000000000000000
R13=0000000000000000
R14=000007FFF02F0605
R15=000000002007007B

Address             Value                Secondary
03657990(rsp+0)     00000000000B98C0     (pointer)000B98C0
03657998(rsp+8)     0000000000000322     (qword)0000000000000322(802)
036579A0(rsp+10)    000000003C000644     (float)0.01
036579A8(rsp+18)    000000002B3C1CA0     (pointer)2B3C1CA0
036579B0(rsp+20)    000000002B3C1CE8     (pointer)2B3C1CE8
036579B8(rsp+28)    0000000140CA5C8D     (pointer)SC2_x64.GetBattlenetAllocator+1A9E4D
036579C0(rsp+30)    00000000000B98C0     (pointer)000B98C0
036579C8(rsp+38)    0000000000000BAD     (qword)0000000000000BAD(2989)
036579D0(rsp+40)    000000016E112C45     (qword)000000016E112C45(6141586501)
036579D8(rsp+48)    0000000004D71527     (pointer)04D71527
036579E0(rsp+50)    000000002B3C1CE0     (pointer)2B3C1CE0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>203</ID>
      <Description>"Resoures Gathered Auto Assemble Script *Human Player Only*"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 3.3.2.43478
  Date   : 2016-06-19
  Author : DaHacker878

  This script Multiply's the Gathered Resources by SCV, Probe, Drone
  for Human Player Only.
}

define(address,"SC2_x64.exe"+91983C)
define(bytes,89 77 60 48 8B 74 24 40)

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
assert(address,bytes)
alloc(Resoures_newmem,$1000,"SC2_x64.exe"+91983C)

label(Resoures_Original_Code)
label(Resoures_Code)
label(Minerals_Resoures_Code)
label(Gas_Resoures_Code)
label(Resoures_return)

Resoures_newmem:

Resoures_Code:
cmp [rdi+148],2
je Resoures_Original_Code
cmp [rdi+60],5
je Minerals_Resoures_Code
jmp Gas_Resoures_Code

Minerals_Resoures_Code:
mov esi,1388 // Minerals Resource set to 5,000 Decimal in hex is 1388
mov rsi,1388 // Resource Multiplied by 1,000 Decimal in hex is 3E8
mov [rdi+60],esi
mov rsi,[rsp+40]
jmp Resoures_return

Gas_Resoures_Code:
mov esi,FA0 // Gas Resource set to 4,000 Decimal in hex is FA0
mov rsi,FA0 // Resource Multiplied by 1,000 Decimal in hex is 3E8
mov [rdi+60],esi
mov rsi,[rsp+40]
jmp Resoures_return

Resoures_Original_Code:
  mov [rdi+60],esi
  mov rsi,[rsp+40]
  jmp Resoures_return

address:
  jmp Resoures_Code
  nop
  nop
  nop
Resoures_return:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
address:
  db bytes
  // mov [rdi+60],esi
  // mov rsi,[rsp+40]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+91983C

"SC2_x64.exe"+919816: 44 2B 41 60              -  sub r8d,[rcx+60]
"SC2_x64.exe"+91981A: 44 8B 08                 -  mov r9d,[rax]
"SC2_x64.exe"+91981D: 48 8B F9                 -  mov rdi,rcx
"SC2_x64.exe"+919820: 8B DA                    -  mov ebx,edx
"SC2_x64.exe"+919822: 48 8D 4C 24 38           -  lea rcx,[rsp+38]
"SC2_x64.exe"+919827: 83 C2 1F                 -  add edx,1F
"SC2_x64.exe"+91982A: 44 89 4C 24 38           -  mov [rsp+38],r9d
"SC2_x64.exe"+91982F: E8 3C BE FA FF           -  call SC2_x64.exe+8C5670
"SC2_x64.exe"+919834: 89 5F 64                 -  mov [rdi+64],ebx
"SC2_x64.exe"+919837: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+91983C: 89 77 60                 -  mov [rdi+60],esi
"SC2_x64.exe"+91983F: 48 8B 74 24 40           -  mov rsi,[rsp+40]
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+919844: 48 83 C4 20              -  add rsp,20
"SC2_x64.exe"+919848: 5F                       -  pop rdi
"SC2_x64.exe"+919849: C3                       -  ret 
"SC2_x64.exe"+91984A: E9 8F A3 43 06           -  jmp SC2_x64.exe+6D53BDE
"SC2_x64.exe"+91984F: 90                       -  nop 
"SC2_x64.exe"+919850: 48 83 EC 28              -  sub rsp,28
"SC2_x64.exe"+919854: 8B 81 B4 00 00 00        -  mov eax,[rcx+000000B4]
"SC2_x64.exe"+91985A: 83 F8 04                 -  cmp eax,04
"SC2_x64.exe"+91985D: 75 07                    -  jne SC2_x64.exe+919866
"SC2_x64.exe"+91985F: B0 01                    -  mov al,01
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>y</Name>
      <Address>0BDB0115</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>p</Name>
      <Address>44C101E4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>x</Name>
      <Address>44C101E8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMap</Name>
      <Address>247A0244</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>God_</Name>
      <Address>00A8EF27</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Energy_</Name>
      <Address>00AACE8D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Cooldown_</Name>
      <Address>00AABAD5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bResources</Name>
      <Address>373E024F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMap</Name>
      <Address>373E0250</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pResources</Name>
      <Address>373E0251</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>rAmount</Name>
      <Address>373E0255</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>dwMapVal</Name>
      <Address>373E0259</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Damage_</Name>
      <Address>00A8EE87</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Resources_Address</Name>
      <Address>014A04DD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnabled_Resources</Name>
      <Address>00BEFE54</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mPoint</Name>
      <Address>02B90040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bySpudgy</Name>
      <Address>00970040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammolabel</Name>
      <Address>005B617C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>thrustlabel</Name>
      <Address>0050F7C6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>overheatlabel</Name>
      <Address>005B710C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>edgelabel</Name>
      <Address>0050F2EA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gmwanzerlabel</Name>
      <Address>00509DC4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hpaddresslab</Name>
      <Address>00D88023</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>0B3E00A9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUnit</Name>
      <Address>0B3E00AD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSel</Name>
      <Address>0B3E00B1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Research</Name>
      <Address>1408DF5DF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Health</Name>
      <Address>13FD2CACD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Shield</Name>
      <Address>13FD2BAC7</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
