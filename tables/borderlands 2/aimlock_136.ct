<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>317</ID>
      <Description>"aim lock"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]

alloc(dataPlace,2048)
registersymbol(dataPlace)
alloc(newmem,4096) //4kb should be enough

AOBScan( SelectTargetHook, 8B 17 8B 82 ?? 08 00 00 8B CF FF D0 85 C0  )
registerSymbol(SelectTargetHook)

label(skipPrediction)
label(skipAngles)

label(SelectTarget)
label(targetChecked)

label(getAACoord)
label(skipAACoord)


registerSymbol(crossHairData)
label(crossHairData)
label(mybaseStructure)
label(eyePosition)
label(inputAngles)
label(gunAngles)
label(NearestEnemy)
label(NearestEnemyData)
label(generatedAngles)
label(NearestEnemyAddr)
label(NearestEnemyAddr2)

label(time)
label(targetPos)
label(targetSpeed)
label(bulletPos)
label(bulletSpeed)
label(bulletSpeedlength)
label(intersectionPos)
label(param_a)
label(param_b)
label(param_c)


registerSymbol(eyePosition)
registerSymbol(inputAngles)
registerSymbol(NearestEnemyAddr)
registerSymbol(NearestEnemyAddr2)
registerSymbol(NearestEnemy)
registersymbol(mybaseStructure)
registerSymbol(crossHairData)

dataPlace:
crossHairData:
dd 00000000
mybaseStructure:
dd 00000000
eyePosition:
DD 00000000
inputAngles:
DD 00000000
gunAngles:
DD 00000000
NearestEnemyAddr:
DD 00000000
NearestEnemyAddr2:
DD 00000000

NearestEnemy:
dd 00000000
NearestEnemyData:
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
generatedAngles:
dd 00000000 00000000

// intersection prediction vars
time:
dd (float)0.0
targetPos:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
targetSpeed:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletPos:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletSpeed:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletSpeedlength:
dd (float)0.0
intersectionPos:
dd (float)0.0
param_a:
dd (float)0.0
param_b:
dd (float)0.0
param_c:
dd (float)0.0

label(startFire)
label(stopFire)
label(gunStat)
label(fireKeyStat)
gunStat:
db 00
fireKeyStat:
db 00

//constant unicode strings "StartFire" , "StopFire"
startFire:
db 53 00 74 00 61 00 72 00 74 00 46 00 69 00 72 00 65 00 00 00 00 00 00 00
stopFire:
db 53 00 74 00 6F 00 70 00 46 00 69 00 72 00 65 00 00 00 00 00 00 00 00 00 00



newmem:

SelectTarget:
pushad
/*  base address
mov eax,[Borderlands2.exe+1E8C464]
mov eax,[eax+0000048C]
mov eax,[eax]
mov ecx,[eax+40]      */
//  get cross-hair pointer
mov esi,[ebp+08]
mov [mybaseStructure],esi
mov ebx,[esi+ACC]
//mov ebx,esi
mov dword ptr [crossHairData],ebx
mov ecx,[ebx+54]
mov dword ptr [NearestEnemyAddr],ecx
mov ecx,[ebx+58]
mov dword ptr [NearestEnemyAddr2],ecx

// detection radius settings
 mov eax,[ebx+3C]
 mov [eax+44],(float)2.0



//Process of fire command simulation
//                           ----&gt;&gt;&gt;
label(doStartFire)
label(endCommands)
push ebp
mov ebp,esp
sub esp,44

mov eax,[mybaseStructure]
test eax,eax
jz endCommands
mov al,[fireKeyStat]
cmp al,[gunStat]
mov [gunStat],al
jz endCommands
test al,al
jnz doStartFire

mov eax,[mybaseStructure]
mov ebx,stopFire
mov ecx,[eax+0000066C]
mov edx,[ecx+3C]
mov edx,[edx]
add ecx,3C
lea eax,[ebp-44]      // 44 input bytes necessary? i'm not sure
push eax
push ebx
call edx

jmp endCommands
doStartFire:

mov eax,[mybaseStructure]
mov ebx,startFire
mov ecx,[eax+0000066C]
mov edx,[ecx+3C]
mov edx,[edx]
add ecx,3C
lea eax,[ebp-44]
push eax
push ebx
call edx
jmp endCommands
endCommands:

mov esp,ebp
pop ebp
//                    &lt;&lt;&lt;----



xor ebx,ebx
push 1
call getkeyState
shr eax,0f
mov [fireKeyStat],al
push eax
push 2
call getkeyState
shr eax,0f
pop edx
or al,dl
test al,al
jz skipAngles

mov eax, NearestEnemyData
add eax,10 //
and eax,FFFFFFF0 // aligning for sse instructions
mov DWORD PTR [NearestEnemy], eax
add eax,10
mov dword ptr [eyePosition], eax

mov esi,[mybaseStructure]
test esi,esi
jz skipAngles
lea eax,[esi+60+0c]
mov dword ptr [inputAngles],eax
//lea eax,[esi+0aF0]
//mov dword ptr [eyePosition],eax

mov edx,[esi]
mov edx,[edx+00000454]
push 00
mov ecx, dword ptr [eyePosition]
lea eax,[ecx+0C]
push eax
push ecx
mov ecx,esi
call edx

mov esi,[mybaseStructure]
mov eax,[esi+694]
test eax,eax
jz skipAngles
mov eax,[eax+470]
test eax,eax
jz skipAngles
fld [eax+EB4]
mov eax,[eax+E30]
mov eax,[eax+2d0]
fmul [eax+88]
fstp [bulletSpeedlength]

mov eax, DWORD PTR [NearestEnemy]

mov ecx, dword ptr [NearestEnemyAddr2]
test ecx,ecx
jz skipAngles
push dword ptr [NearestEnemyAddr2]
push dword ptr [NearestEnemyAddr]
push eax  // [NearestEnemy] output
mov ecx,esi
call getAACoord
test eax,eax
jz skipAngles

mov eax, dword ptr[eyePosition]
movups xmm0,[eax]
movups [bulletPos],xmm0
mov eax, dword ptr[NearestEnemy]
movups xmm0,[eax]
movups [targetPos],xmm0
movups [intersectionPos],xmm0
mov eax,[NearestEnemyAddr]
test eax,eax
jz skipAngles
test eax,0f
jnz skipAngles
lea eax,[eax+0104]
movups xmm0,[eax]
movups [targetSpeed],xmm0

//jmp skipPrediction
movups xmm1,[targetPos]
movups xmm2,[bulletPos]
movaps xmm0,xmm1
subps xmm0,xmm2
mulps xmm0,xmm0
xorps xmm4,xmm4
movaps xmm3,xmm0
shufps xmm3,xmm3,00
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
movss [param_c],xmm4

movaps xmm0,xmm1
subps xmm0,xmm2
movups xmm7,[targetSpeed]
mulps xmm0,xmm7
mov [param_b],(float)2.0
movss xmm3,[param_b]
shufps xmm3,xmm3,00
mulps xmm0,xmm3
xorps xmm4,xmm4
movaps xmm3,xmm0
shufps xmm3,xmm3,00
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
movss [param_b],xmm4

movss xmm4,[bulletSpeedlength]
mulss xmm4,xmm4
movss [param_a],xmm4
movups xmm0,[targetSpeed]
mulps xmm0,xmm0
movaps xmm3,xmm0
shufps xmm3,xmm3,00
xorps xmm4,xmm4
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
subss xmm4,[param_a]
movss [param_a],xmm4

// time = (  -b -+ sqrt( b^2-4ac )  )/( 2a )
fld [param_b]
fmul [param_b]
fld [param_a]
fmul [param_c]
mov [time],(float)4.0
fmul [time]
fstp [time]
fsub [time]
fsqrt
fstp [time]
fld [param_b]
fchs
//fadd [time]
fsub [time]
fld [param_a]
fadd [param_a]
fstp [time]
fdiv [time]
fstp [time]

//intersectionPos = targetSpeed*time+targetPos
movss xmm0,[time]
shufps xmm0,xmm0,00
movups xmm7,[targetSpeed]
mulps xmm0,xmm7
movups xmm7,[targetPos]
addps xmm0,xmm7
movups [intersectionPos],xmm0
skipPrediction:
//bulletSpeed = (intersectionPos - bulletPos) / time
/*  movups xmm1,[intersectionPos]
subps xmm1,[bulletPos]
movss xmm0,[time]
shufps xmm0,xmm0,00
divps xmm1,xmm0
movups [bulletSpeed],xmm1  */


mov eax, dword ptr[eyePosition]
mov ecx, intersectionPos //dword ptr[NearestEnemy]

fld dword ptr [ECX+8]
fsub dword ptr [eax+8]
fld dword ptr [ECX+4]
fsub dword ptr[eax+4]
fld st(0)
fmulp
fld [ECX]
fsub dword ptr [eax]
fld st(0)
fmulp
faddp
fsqrt
fpatan
push (float)65536.0
fmul dword ptr [esp]
fldpi
mov dword ptr [esp],(float)2.0
fmul dword ptr [esp]
fstp dword ptr [esp]
fdiv dword ptr [esp]
add esp,4
fistp [generatedAngles]

mov eax, dword ptr [eyePosition]
fld dword ptr [ECX+4]
fsub dword ptr [eax+4]
fld dword ptr [ECX]
fsub dword ptr [eax]
fpatan
push (float)65536.0
fmul dword ptr [esp]
fldpi
mov dword ptr [esp],(float)2.0
fmul dword ptr [esp]
fstp dword ptr [esp]
fdiv dword ptr [esp]
add esp,4
fistp [generatedAngles+4]



mov ecx, dword ptr[inputAngles]
mov eax, dword ptr[eyePosition]

lea eax, [eax+0C]
and [eax],0000ffff
movq xmm0,[eax]
movq xmm1,[ecx]
psubd xmm0,xmm1 //  calculated recoil = eyeAngles-inputAngles
movq xmm1,[generatedAngles]
psubq xmm1,xmm0  // anti-recoil applied to angles
movq [ecx],xmm1  // new angles set




skipAngles:





popad
// originalcode:
db 8B CF FF D0 85 C0
jmp targetChecked



getAACoord:
push ebp
mov ebp,esp
mov edi,ecx
mov eax,ecx
mov eax,[eax+694]
mov eax,[eax+470]
mov esi,eax
sub esp,0c
sub esp,8
/*  get cross-hair pointer
mov ecx,[esi+000000DC]
mov edx,[ecx+000001B0]
push edx
call Borderlands2.exe+262430  */
/*  get addresses of target
mov ecx,[edi+00000ACC]
push 00
push 01
push 01
push edi
lea eax,[ebp-08]
push eax
call Borderlands2.exe+558370
cmp dword ptr [ebp-08],00
je skipAACoord           */

mov ecx,[ebp+0C]  // addr
mov [ebp-08],ecx
mov ecx,[ebp+10]  // addr2
mov [ebp-04],ecx

/* some extra check.
removes some targets from detection.
right now used for safty of pointers
mov ecx,[ebp-04]
mov edx,[ecx]
mov eax,[edx+54]
call eax
test eax,eax
je skipAACoord  */
mov ecx,[esi+000000DC]
mov edx,[ecx+00000190]
mov eax,[ebp-08]
mov edx,[edx+28]
add ecx,00000190
push eax
call edx
test eax,eax
je skipAACoord
//mov eax,[edi+00000ACC]
//or dword ptr [eax+50],20
mov ecx,[ebp-08]
neg ecx
sbb ecx,ecx
and ecx,[ebp-04]  // and ecx,ffffffff  = ecx ? idk why doing this.
lea edx,[ebp-08-0C]  // output: positions will be stored here
mov eax,[ecx]
mov eax,[eax+50]
push edx
//mov [borderlands2.exe+1edaee4],bf8d
call eax
//mov [borderlands2.exe+1edaee4],a21
mov eax,[ebp+08]
movq xmm1,[ebp-08-0C]
movq [eax],xmm1
mov edx,[ebp-08-0C+08]
mov [eax+08],edx
xor eax,eax
dec eax
add esp,8
add esp,0c
mov esp,ebp
pop ebp
ret 0C
skipAACoord:
xor eax,eax
add esp,8
add esp,0c
mov esp,ebp
pop ebp
ret 0C



SelectTargetHook+8:
jmp SelectTarget
db 90
targetChecked:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregisterSymbol(dataPlace)
unregisterSymbol(eyePosition)
unregisterSymbol(inputAngles)
unregisterSymbol(NearestEnemy)
unregisterSymbol(NearestEnemyAddr)
unregisterSymbol(NearestEnemyAddr2)
unregistersymbol(mybaseStructure)
unregisterSymbol(crossHairData)

dealloc(newmem)
dealloc(dataPlace)

SelectTargetHook+8:
db 8B CF FF D0 85 C0
unregisterSymbol(SelectTargetHook)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>318</ID>
          <Description>"crosshair data"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>crossHairData</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>319</ID>
          <Description>"controller"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>354</ID>
          <Description>"pointer"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>355</ID>
          <Description>"pointer"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>190</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>320</ID>
          <Description>"NearestEnemyAddr"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>NearestEnemyAddr</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>321</ID>
          <Description>"enemy health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>NearestEnemyAddr</Address>
          <Offsets>
            <Offset>6C</Offset>
            <Offset>384</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>322</ID>
          <Description>"Enemy X"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[NearestEnemy]</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>323</ID>
          <Description>"Enemy Y"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[NearestEnemy]+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>324</ID>
          <Description>"Enemy Z"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[NearestEnemy]+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>325</ID>
          <Description>"input pitch"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+6C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>326</ID>
          <Description>"input yaw"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+70</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>327</ID>
          <Description>"input roll"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+74</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>328</ID>
          <Description>"myStructure"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>352</ID>
          <Description>"my esp x"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>60</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>351</ID>
          <Description>"my esp y"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>64</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>350</ID>
          <Description>"my esp z"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>68</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>329</ID>
          <Description>"eYe x"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[mybaseStructure]+af0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>330</ID>
          <Description>"eYe y"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[mybaseStructure]+af4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>331</ID>
          <Description>"eYe z"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[mybaseStructure]+af8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>332</ID>
          <Description>"eYe pitch"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+afC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>333</ID>
          <Description>"eYe yaw"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+b00</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>334</ID>
          <Description>"eYe roll"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+b04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>335</ID>
          <Description>"bullet's shoot time speed"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>88</Offset>
            <Offset>2D0</Offset>
            <Offset>E30</Offset>
            <Offset>470</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>336</ID>
          <Description>"zoom stat - freeze 1 for aim assist"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>A46</Offset>
            <Offset>470</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>337</ID>
          <Description>"gun"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>EB4</Offset>
            <Offset>470</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>338</ID>
          <Description>"health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>6C</Offset>
            <Offset>384</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>339</ID>
          <Description>"bullets left"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>6C</Offset>
            <Offset>9D0</Offset>
            <Offset>470</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>340</ID>
          <Description>"gun"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>470</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>341</ID>
          <Description>"nearest enemy final model"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>NearestEnemyAddr</Address>
          <Offsets>
            <Offset>18</Offset>
            <Offset>48</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>485</ID>
          <Description>"aim lock autoCrit 70% beta- best current"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
alloc(dataPlace,2048)
registersymbol(dataPlace)
alloc(newmem,4096) //4kb should be enough

AOBScan( SelectTargetHook, 8B 17 8B 82 ?? 08 00 00 8B CF FF D0 85 C0  )
registerSymbol(SelectTargetHook)
AOBScan( ArndHitRegionProc,8b fe 8D B5 6C FF FF FF )


label(SelectTarget)
label(skipPrediction)
label(skipAngles)
label(targetChecked)

label(getAACoord)

registerSymbol(AutoAimStrategy)
label(AutoAimStrategy)
label(myController)
label(eyePosition)
label(inputAngles)
label(gunAngles)
label(NearestEnemy)
label(NearestEnemyData)
label(generatedAngles)
label(NearestEnemyAddr)
label(NearestEnemyAddr2)

label(time)
label(preTime)
label(targetPos)
label(targetSpeed)
label(bulletPos)
label(bulletSpeed)
label(bulletSpeedlength)
label(intersectionPos)
label(param_a)
label(param_b)
label(param_c)


registerSymbol(eyePosition)
registerSymbol(inputAngles)
registerSymbol(NearestEnemyAddr)
registerSymbol(NearestEnemyAddr2)
registerSymbol(NearestEnemy)
registersymbol(myController)
registerSymbol(AutoAimStrategy)

dataPlace:
AutoAimStrategy:
dd 00000000
myController:
dd 00000000
eyePosition:
DD 00000000
inputAngles:
DD 00000000
gunAngles:
DD 00000000
NearestEnemyAddr:
DD 00000000
NearestEnemyAddr2:
DD 00000000

NearestEnemy:
dd 00000000
NearestEnemyData:
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
generatedAngles:
dd 00000000 00000000
// intersection prediction vars
time:
dd (float)0.0
preTime:
dd (float)0.0
targetPos:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
targetSpeed:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletPos:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletSpeed:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletSpeedlength:
dd (float)0.0
intersectionPos:
dd (float)0.0
param_a:
dd (float)0.0
param_b:
dd (float)0.0
param_c:
dd (float)0.0


label(startFire)
label(stopFire)
label(gunStat)
label(fireKeyStat)
gunStat:
db 00
fireKeyStat:
db 00

//constant unicode strings "StartFire" , "StopFire"
startFire:
db 53 00 74 00 61 00 72 00 74 00 46 00 69 00 72 00 65 00 00 00 00 00 00 00
stopFire:
db 53 00 74 00 6F 00 70 00 46 00 69 00 72 00 65 00 00 00 00 00 00 00 00 00 00



newmem:

SelectTarget:
pushad
/*  base address
mov eax,[Borderlands2.exe+1E8C464]
mov eax,[eax+0000048C]
mov eax,[eax]
mov ecx,[eax+40]      */
//get cross-hair pointer
//mov ebx,[esi+ACC]
mov ebx,esi
mov dword ptr [AutoAimStrategy],ebx
mov ecx,[ebx+90]
mov dword ptr [NearestEnemyAddr],ecx
mov ecx,[ebx+94]
mov dword ptr [NearestEnemyAddr2],ecx

// detection radius settings
mov eax,[ebx+3C]
mov [eax+44],(float)2.0


//Process of fire command simulation
//                           ----&gt;&gt;&gt;
label(doStartFire)
label(endCommands)
push ebp
mov ebp,esp
sub esp,44

mov eax,[myController]
test eax,eax
jz endCommands

mov al,[fireKeyStat]
cmp al,[gunStat]
mov [gunStat],al
jz endCommands
test al,al
jnz doStartFire

mov eax,[myController]
mov ebx,stopFire
mov ecx,[eax+0000066C]
mov edx,[ecx+3C]
mov edx,[edx]
add ecx,3C
lea eax,[ebp-44]      // 44 input bytes necessary? i'm not sure
push eax
push ebx
call edx

jmp endCommands
doStartFire:
mov eax,[myController]
mov ebx,startFire
mov ecx,[eax+0000066C]
mov edx,[ecx+3C]
mov edx,[edx]
add ecx,3C
lea eax,[ebp-44]
push eax
push ebx
call edx
jmp endCommands
endCommands:

mov esp,ebp
pop ebp
//                    &lt;&lt;&lt;----



xor edx,edx
push 1
call getkeyState
shr eax,0f
mov [fireKeyStat],al
push eax
push 2
call getkeyState
shr eax,0f
pop edx
or al,dl
test al,al
jz skipAngles

mov eax, NearestEnemyData
add eax,10 //
and eax,FFFFFFF0 // aligninment for sse instructions
mov DWORD PTR [NearestEnemy], eax
add eax,10
mov dword ptr [eyePosition], eax

mov esi,[ebp+08]
mov [myController],esi
test esi,esi
jz skipAngles
lea eax,[esi+60+0c]
mov dword ptr [inputAngles],eax
//lea eax,[esi+0aF0]
//mov dword ptr [eyePosition],eax

mov edx,[esi]
mov edx,[edx+00000454]
push 00
mov ecx, dword ptr [eyePosition]
lea eax,[ecx+0C]
push eax
push ecx
mov ecx,esi
call edx

mov eax,[esi+694]
test eax,eax
jz skipAngles
mov eax,[eax+470]
test eax,eax
jz skipAngles
fld [eax+EB4]
mov eax,[eax+E30]
mov eax,[eax+2d0]
fmul [eax+88]
fstp [bulletSpeedlength]

mov eax, DWORD PTR [NearestEnemy]
mov ecx, dword ptr [NearestEnemyAddr2]
test ecx,ecx
jz skipAngles
push dword ptr [NearestEnemyAddr2]
push dword ptr [NearestEnemyAddr]
push eax  // [NearestEnemy] output
mov ecx,esi
call getAACoord
test eax,eax
jz skipAngles

mov eax, dword ptr[eyePosition]
movups xmm0,[eax]
movups [bulletPos],xmm0
mov eax, dword ptr[NearestEnemy]
movups xmm0,[eax]
movups [targetPos],xmm0
movups [intersectionPos],xmm0
mov eax,[NearestEnemyAddr]
test eax,eax
jz skipAngles
test eax,0f
jnz skipAngles
lea eax,[eax+0104]
movups xmm0,[eax]
movups [targetSpeed],xmm0

jmp skipPrediction
movups xmm1,[targetPos]
movups xmm2,[bulletPos]
movaps xmm0,xmm1
subps xmm0,xmm2
mulps xmm0,xmm0
xorps xmm4,xmm4
movaps xmm3,xmm0
shufps xmm3,xmm3,00
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
movss [param_c],xmm4

movaps xmm0,xmm1
subps xmm0,xmm2
movups xmm7,[targetSpeed]
mulps xmm0,xmm7
mov [param_b],(float)2.0
movss xmm3,[param_b]
shufps xmm3,xmm3,00
mulps xmm0,xmm3
xorps xmm4,xmm4
movaps xmm3,xmm0
shufps xmm3,xmm3,00
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
movss [param_b],xmm4

movss xmm4,[bulletSpeedlength]
mulss xmm4,xmm4
movss [param_a],xmm4
movups xmm0,[targetSpeed]
mulps xmm0,xmm0
movaps xmm3,xmm0
shufps xmm3,xmm3,00
xorps xmm4,xmm4
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
subss xmm4,[param_a]
movss [param_a],xmm4

// time = (  -b -+ sqrt( b^2-4ac )  )/( 2a )
fld [param_b]
fmul [param_b]
fld [param_a]
fmul [param_c]
mov [time],(float)4.0
fmul [time]
fstp [time]
fsub [time]
fsqrt
fstp [time]
fld [param_b]
fchs
//fadd [time]
fsub [time]
fld [param_a]
fadd [param_a]
fstp [time]
fdiv [time]
fstp [time]

call getTickCount
cvtsi2ss xmm1,eax
mov eax,1000
cvtsi2ss xmm2,eax
divss xmm1,xmm2
movss xmm0,[preTime]
subss xmm1,xmm0
addss xmm1,[time]
addss xmm1,[time]
movss [time],xmm1

//intersectionPos = targetSpeed*time+targetPos
movss xmm0,[time]
shufps xmm0,xmm0,00
movups xmm7,[targetSpeed]
mulps xmm0,xmm7
movups xmm7,[targetPos]
addps xmm0,xmm7
movups [intersectionPos],xmm0
skipPrediction:
//bulletSpeed = (intersectionPos - bulletPos) / time
/*  movups xmm1,[intersectionPos]
subps xmm1,[bulletPos]
movss xmm0,[time]
shufps xmm0,xmm0,00
divps xmm1,xmm0
movups [bulletSpeed],xmm1  */



mov ecx, intersectionPos //dword ptr[NearestEnemy]

mov eax, dword ptr[eyePosition]
fld dword ptr [ECX+8]
fsub dword ptr [eax+8]
fld dword ptr [ECX+4]
fsub dword ptr[eax+4]
fld st(0)
fmulp
fld [ECX]
fsub dword ptr [eax]
fld st(0)
fmulp
faddp
fsqrt
fpatan
push (float)65536.0
fmul dword ptr [esp]
fldpi
mov dword ptr [esp],(float)2.0
fmul dword ptr [esp]
fstp dword ptr [esp]
fdiv dword ptr [esp]
add esp,4
fistp [generatedAngles]

mov eax, dword ptr [eyePosition]
fld dword ptr [ECX+4]
fsub dword ptr [eax+4]
fld dword ptr [ECX]
fsub dword ptr [eax]
fpatan
push (float)65536.0
fmul dword ptr [esp]
fldpi
mov dword ptr [esp],(float)2.0
fmul dword ptr [esp]
fstp dword ptr [esp]
fdiv dword ptr [esp]
add esp,4
fistp [generatedAngles+4]



mov ecx, dword ptr[inputAngles]
mov eax, dword ptr[eyePosition]

lea eax, [eax+0C]
and [eax],0000ffff
movq xmm0,[eax]
movq xmm1,[ecx]
psubd xmm0,xmm1 //  calculated recoil = eyeAngles-inputAngles
movq xmm1,[generatedAngles]
psubq xmm1,xmm0  // anti-recoil applied to angles
movq [ecx],xmm1  // new angles set
skipAngles:

call getTickCount
cvtsi2ss xmm1,eax
mov eax,1000
cvtsi2ss xmm2,eax
divss xmm1,xmm2
movss [preTime],xmm1

popad
// originalcode:
db 8B CF FF D0 85 C0
jmp targetChecked

label(skipAACoord)
label(checkNext)
label(findBodyMiddle)
label(copyToOutput)
label(selectedCritBone)
registerSymbol(selectedCritBone)
selectedCritBone:
db 00
label(lastKeyState)
lastKeyState:
db 00
getAACoord:
push ebx
mov ebx,esp
sub esp,08
and esp,-10
add esp,04
push ebp
mov ebp,[ebx+04]
mov [esp+04],ebp
mov ebp,esp
sub esp,D0
mov [ebp-0c],ecx
push 'Q'
call GetKeyState
shr ax,0f
mov ah,al
cmp al,[lastKeyState]
seta al
add [selectedCritBone],al
mov [lastKeyState],ah

mov al,[selectedCritBone]
mov [ebp-04],al
//is that crit ?---------&gt;
checkNext:
xor edx,edx
mov ecx,[ebx+0C]
test ecx,0F
jnz findBodyMiddle
mov esi,[ecx+430]
test esi,esi
jle findBodyMiddle

mov ecx,esi
test ecx,ecx
jle findBodyMiddle
mov ecx,[ecx+220]
mov al,[ebp-04]
sub ah,ah
div byte ptr [ecx+11c]        // ecx+40  = max bones
mov [selectedCritBone],ah
xor eax,eax
mov al,[ebp-04]
inc [ebp-04]                 // pointer index
cmp al,[ecx+11c]
jge findBodyMiddle
mov edx,[ecx+118]
xor eax,eax
mov al,[selectedCritBone]
mov edx,[edx+eax*4]
mov [ebp-08],edx


push 00
lea ecx,[ebp-C0]
push ecx
lea ecx,[ebp-C0+10]
push ecx
mov edx,[ebp-08]
push dword ptr [edx+40]
push dword ptr [edx+3C]
mov ecx,esi
mov edx,[ebp-0c]
mov edx,[edx+0B3C]
mov edx,[edx+0190]
mov edx,[edx+4C]
add edx,[edx+49]
add edx,4D
call edx//Borderlands2.exe+A0AB0



push 00000000
xorps xmm0,xmm0
lea edx,[ebp-C0]
movdqa [edx],xmm0
push edx
mov edx,dword ptr [eyePosition]
push edx
lea edx,[ebp-C0+10]
push edx
lea edx,[ebp-A0]
push edx
mov edx,[ebx+0C]
mov edx,[edx+430]
mov ecx,edx
mov edx,[edx]
mov edx,[edx+1CC]
call edx



sub esp,1C
mov eax,esp
xorps xmm0,xmm0
movq [eax],xmm0
movq [eax+8],xmm0
movq xmm0,[ebp-A0+38]
movq [eax+10],xmm0
mov ecx,[ebx+0C]
mov edi,[ecx+430]
mov [eax+18],edi
push 00

mov ecx,[ebx+0C]
push ebp
mov ebp,esp
sub esp,8
push esi
push edi
mov edi,ecx
lea esi,[ebp-8]
//call Borderlands2.exe+1051850
mov edx,ArndHitRegionProc
add edx,[edx+0F]
add edx,13
call edx

lea esi,[ebp-8]
//call Borderlands2.exe+10518D0
mov edx,ArndHitRegionProc
add edx,[edx+2b]
add edx,2F
call edx

mov eax,[eax+4]
pop edi
pop esi
mov esp,ebp
pop ebp
//lea ecx,[ecx+730]
mov ecx,eax
mov edx,[ecx]
mov edx,[edx+08]
call edx
test eax,eax
jz checkNext
test byte ptr [eax+6C],01     // crit if nz
jz checkNext

jmp copyToOutput
findBodyMiddle:
jmp skipAACoord
mov ecx,[ebx+0C]
neg ecx
sbb ecx,ecx
and ecx,[ebx+10]                     // and ecx,ffffffff  = ecx ? idk why doing this.
lea edx,[ebp-C0+10]                  // output: positions will be stored here
mov eax,[ecx]
mov eax,[eax+50]
push edx
call eax
jmp copyToOutput
//&lt;--------------
copyToOutput:
mov eax,[ebx+08]
movq xmm1,[ebp-C0+10]
movq [eax],xmm1
mov edx,[ebp-C0+10+08]
mov [eax+08],edx
xor eax,eax
dec eax
mov esp,ebp
pop ebp
mov esp,ebx
pop ebx
ret 0C
skipAACoord:
xor eax,eax
mov esp,ebp
pop ebp
mov esp,ebx
pop ebx
ret 0C


SelectTargetHook+8:
jmp SelectTarget
db 90
targetChecked:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregisterSymbol(dataPlace)
unregisterSymbol(eyePosition)
unregisterSymbol(inputAngles)
unregisterSymbol(NearestEnemy)
unregisterSymbol(NearestEnemyAddr)
unregisterSymbol(NearestEnemyAddr2)
unregistersymbol(myController)
unregisterSymbol(AutoAimStrategy)
unregisterSymbol(selectedCritBone)
dealloc(newmem)
dealloc(dataPlace)

SelectTargetHook+8:
db 8B CF FF D0 85 C0

unregisterSymbol(SelectTargetHook)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>486</ID>
              <Description>"AutoAimStrategy"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>AutoAimStrategy</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>487</ID>
              <Description>"myController"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>myController</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>488</ID>
              <Description>"pointer"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>489</ID>
              <Description>"pointer"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>190</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>490</ID>
              <Description>"NearestEnemyAddr"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>NearestEnemyAddr</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>491</ID>
              <Description>"enemy health"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>NearestEnemyAddr</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>384</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>492</ID>
              <Description>"Enemy X"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[NearestEnemy]</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>493</ID>
              <Description>"Enemy Y"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[NearestEnemy]+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>494</ID>
              <Description>"Enemy Z"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[NearestEnemy]+8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>495</ID>
              <Description>"input pitch"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+6C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>496</ID>
              <Description>"input yaw"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+70</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>497</ID>
              <Description>"input roll"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+74</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>498</ID>
              <Description>"myStructure"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>499</ID>
              <Description>"my esp x"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>60</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>500</ID>
              <Description>"my esp y"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>64</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>501</ID>
              <Description>"my esp z"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>68</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>502</ID>
              <Description>"eYe x"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[mybaseStructure]+af0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>503</ID>
              <Description>"eYe y"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[mybaseStructure]+af4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>504</ID>
              <Description>"eYe z"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[mybaseStructure]+af8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>505</ID>
              <Description>"eYe pitch"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+afC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>506</ID>
              <Description>"eYe yaw"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+b00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>507</ID>
              <Description>"eYe roll"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+b04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>508</ID>
              <Description>"bullet's shoot time speed"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>88</Offset>
                <Offset>2D0</Offset>
                <Offset>E30</Offset>
                <Offset>470</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>509</ID>
              <Description>"zoom stat - freeze 1 for aim assist"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>A46</Offset>
                <Offset>470</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>510</ID>
              <Description>"gun"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>EB4</Offset>
                <Offset>470</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>511</ID>
              <Description>"health"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>384</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>512</ID>
              <Description>"bullets left"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>9D0</Offset>
                <Offset>470</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>513</ID>
              <Description>"gun"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>470</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>514</ID>
              <Description>"selecetd crit bone"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>selectedCritBone</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>515</ID>
              <Description>"nearest enemy final model"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>NearestEnemyAddr</Address>
              <Offsets>
                <Offset>18</Offset>
                <Offset>48</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>452</ID>
          <Description>"aim lock autoCrit 70% beta- best current"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
alloc(dataPlace,2048)
registersymbol(dataPlace)
alloc(newmem,4096) //4kb should be enough

AOBScan( SelectTargetHook, 8B 17 8B 82 ?? 08 00 00 8B CF FF D0 85 C0  )
registerSymbol(SelectTargetHook)
AOBScan( ArndHitRegionProc,8b fe 8D B5 6C FF FF FF )


label(SelectTarget)
label(skipPrediction)
label(skipAngles)
label(targetChecked)

label(getAACoord)

registerSymbol(AutoAimStrategy)
label(AutoAimStrategy)
label(myController)
label(eyePosition)
label(inputAngles)
label(gunAngles)
label(NearestEnemy)
label(NearestEnemyData)
label(generatedAngles)
label(NearestEnemyAddr)
label(NearestEnemyAddr2)

label(time)
label(preTime)
label(targetPos)
label(targetSpeed)
label(bulletPos)
label(bulletSpeed)
label(bulletSpeedlength)
label(intersectionPos)
label(param_a)
label(param_b)
label(param_c)


registerSymbol(eyePosition)
registerSymbol(inputAngles)
registerSymbol(NearestEnemyAddr)
registerSymbol(NearestEnemyAddr2)
registerSymbol(NearestEnemy)
registersymbol(myController)
registerSymbol(AutoAimStrategy)

dataPlace:
AutoAimStrategy:
dd 00000000
myController:
dd 00000000
eyePosition:
DD 00000000
inputAngles:
DD 00000000
gunAngles:
DD 00000000
NearestEnemyAddr:
DD 00000000
NearestEnemyAddr2:
DD 00000000

NearestEnemy:
dd 00000000
NearestEnemyData:
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
generatedAngles:
dd 00000000 00000000
// intersection prediction vars
time:
dd (float)0.0
preTime:
dd (float)0.0
targetPos:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
targetSpeed:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletPos:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletSpeed:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletSpeedlength:
dd (float)0.0
intersectionPos:
dd (float)0.0
param_a:
dd (float)0.0
param_b:
dd (float)0.0
param_c:
dd (float)0.0


label(startFire)
label(stopFire)
label(gunStat)
label(fireKeyStat)
gunStat:
db 00
fireKeyStat:
db 00

//constant unicode strings "StartFire" , "StopFire"
startFire:
db 53 00 74 00 61 00 72 00 74 00 46 00 69 00 72 00 65 00 00 00 00 00 00 00
stopFire:
db 53 00 74 00 6F 00 70 00 46 00 69 00 72 00 65 00 00 00 00 00 00 00 00 00 00



newmem:

SelectTarget:
pushad
/*  base address
mov eax,[Borderlands2.exe+1E8C464]
mov eax,[eax+0000048C]
mov eax,[eax]
mov ecx,[eax+40]      */
//get cross-hair pointer
//mov ebx,[esi+ACC]
mov ebx,esi
mov dword ptr [AutoAimStrategy],ebx
mov ecx,[ebx+90]
mov dword ptr [NearestEnemyAddr],ecx
mov ecx,[ebx+94]
mov dword ptr [NearestEnemyAddr2],ecx

// detection radius settings
mov eax,[ebx+3C]
mov [eax+44],(float)2.0


//Process of fire command simulation
//                           ----&gt;&gt;&gt;
label(doStartFire)
label(endCommands)
push ebp
mov ebp,esp
sub esp,44

mov eax,[myController]
test eax,eax
jz endCommands

mov al,[fireKeyStat]
cmp al,[gunStat]
mov [gunStat],al
jz endCommands
test al,al
jnz doStartFire

mov eax,[myController]
mov ebx,stopFire
mov ecx,[eax+0000066C]
mov edx,[ecx+3C]
mov edx,[edx]
add ecx,3C
lea eax,[ebp-44]      // 44 input bytes necessary? i'm not sure
push eax
push ebx
call edx

jmp endCommands
doStartFire:
mov eax,[myController]
mov ebx,startFire
mov ecx,[eax+0000066C]
mov edx,[ecx+3C]
mov edx,[edx]
add ecx,3C
lea eax,[ebp-44]
push eax
push ebx
call edx
jmp endCommands
endCommands:

mov esp,ebp
pop ebp
//                    &lt;&lt;&lt;----



xor edx,edx
push 1
call getkeyState
shr eax,0f
mov [fireKeyStat],al
push eax
push 2
call getkeyState
shr eax,0f
pop edx
or al,dl
test al,al
jz skipAngles

mov eax, NearestEnemyData
add eax,10 //
and eax,FFFFFFF0 // aligninment for sse instructions
mov DWORD PTR [NearestEnemy], eax
add eax,10
mov dword ptr [eyePosition], eax

mov esi,[ebp+08]
mov [myController],esi
test esi,esi
jz skipAngles
lea eax,[esi+60+0c]
mov dword ptr [inputAngles],eax
//lea eax,[esi+0aF0]
//mov dword ptr [eyePosition],eax

mov edx,[esi]
mov edx,[edx+00000454]
push 00
mov ecx, dword ptr [eyePosition]
lea eax,[ecx+0C]
push eax
push ecx
mov ecx,esi
call edx

mov eax,[esi+694]
test eax,eax
jz skipAngles
mov eax,[eax+470]
test eax,eax
jz skipAngles
fld [eax+EB4]
mov eax,[eax+E30]
mov eax,[eax+2d0]
fmul [eax+88]
fstp [bulletSpeedlength]

mov eax, DWORD PTR [NearestEnemy]
mov ecx, dword ptr [NearestEnemyAddr2]
test ecx,ecx
jz skipAngles
push dword ptr [NearestEnemyAddr2]
push dword ptr [NearestEnemyAddr]
push eax  // [NearestEnemy] output
mov ecx,esi
call getAACoord
test eax,eax
jz skipAngles

mov eax, dword ptr[eyePosition]
movups xmm0,[eax]
movups [bulletPos],xmm0
mov eax, dword ptr[NearestEnemy]
movups xmm0,[eax]
movups [targetPos],xmm0
movups [intersectionPos],xmm0
mov eax,[NearestEnemyAddr]
test eax,eax
jz skipAngles
test eax,0f
jnz skipAngles
lea eax,[eax+0104]
movups xmm0,[eax]
movups [targetSpeed],xmm0

jmp skipPrediction
movups xmm1,[targetPos]
movups xmm2,[bulletPos]
movaps xmm0,xmm1
subps xmm0,xmm2
mulps xmm0,xmm0
xorps xmm4,xmm4
movaps xmm3,xmm0
shufps xmm3,xmm3,00
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
movss [param_c],xmm4

movaps xmm0,xmm1
subps xmm0,xmm2
movups xmm7,[targetSpeed]
mulps xmm0,xmm7
mov [param_b],(float)2.0
movss xmm3,[param_b]
shufps xmm3,xmm3,00
mulps xmm0,xmm3
xorps xmm4,xmm4
movaps xmm3,xmm0
shufps xmm3,xmm3,00
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
movss [param_b],xmm4

movss xmm4,[bulletSpeedlength]
mulss xmm4,xmm4
movss [param_a],xmm4
movups xmm0,[targetSpeed]
mulps xmm0,xmm0
movaps xmm3,xmm0
shufps xmm3,xmm3,00
xorps xmm4,xmm4
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
subss xmm4,[param_a]
movss [param_a],xmm4

// time = (  -b -+ sqrt( b^2-4ac )  )/( 2a )
fld [param_b]
fmul [param_b]
fld [param_a]
fmul [param_c]
mov [time],(float)4.0
fmul [time]
fstp [time]
fsub [time]
fsqrt
fstp [time]
fld [param_b]
fchs
//fadd [time]
fsub [time]
fld [param_a]
fadd [param_a]
fstp [time]
fdiv [time]
fstp [time]

call getTickCount
cvtsi2ss xmm1,eax
mov eax,1000
cvtsi2ss xmm2,eax
divss xmm1,xmm2
movss xmm0,[preTime]
subss xmm1,xmm0
addss xmm1,[time]
addss xmm1,[time]
movss [time],xmm1

//intersectionPos = targetSpeed*time+targetPos
movss xmm0,[time]
shufps xmm0,xmm0,00
movups xmm7,[targetSpeed]
mulps xmm0,xmm7
movups xmm7,[targetPos]
addps xmm0,xmm7
movups [intersectionPos],xmm0
skipPrediction:
//bulletSpeed = (intersectionPos - bulletPos) / time
/*  movups xmm1,[intersectionPos]
subps xmm1,[bulletPos]
movss xmm0,[time]
shufps xmm0,xmm0,00
divps xmm1,xmm0
movups [bulletSpeed],xmm1  */



mov ecx, intersectionPos //dword ptr[NearestEnemy]

mov eax, dword ptr[eyePosition]
fld dword ptr [ECX+8]
fsub dword ptr [eax+8]
fld dword ptr [ECX+4]
fsub dword ptr[eax+4]
fld st(0)
fmulp
fld [ECX]
fsub dword ptr [eax]
fld st(0)
fmulp
faddp
fsqrt
fpatan
push (float)65536.0
fmul dword ptr [esp]
fldpi
mov dword ptr [esp],(float)2.0
fmul dword ptr [esp]
fstp dword ptr [esp]
fdiv dword ptr [esp]
add esp,4
fistp [generatedAngles]

mov eax, dword ptr [eyePosition]
fld dword ptr [ECX+4]
fsub dword ptr [eax+4]
fld dword ptr [ECX]
fsub dword ptr [eax]
fpatan
push (float)65536.0
fmul dword ptr [esp]
fldpi
mov dword ptr [esp],(float)2.0
fmul dword ptr [esp]
fstp dword ptr [esp]
fdiv dword ptr [esp]
add esp,4
fistp [generatedAngles+4]



mov ecx, dword ptr[inputAngles]
mov eax, dword ptr[eyePosition]

lea eax, [eax+0C]
and [eax],0000ffff
movq xmm0,[eax]
movq xmm1,[ecx]
psubd xmm0,xmm1 //  calculated recoil = eyeAngles-inputAngles
movq xmm1,[generatedAngles]
psubq xmm1,xmm0  // anti-recoil applied to angles
movq [ecx],xmm1  // new angles set
skipAngles:

call getTickCount
cvtsi2ss xmm1,eax
mov eax,1000
cvtsi2ss xmm2,eax
divss xmm1,xmm2
movss [preTime],xmm1

popad
// originalcode:
db 8B CF FF D0 85 C0
jmp targetChecked

label(skipAACoord)
label(checkNext)
label(findBodyMiddle)
label(copyToOutput)
label(selectedCritBone)
registerSymbol(selectedCritBone)
selectedCritBone:
db 00
label(lastKeyState)
lastKeyState:
db 00
getAACoord:
push ebx
mov ebx,esp
sub esp,08
and esp,-10
add esp,04
push ebp
mov ebp,[ebx+04]
mov [esp+04],ebp
mov ebp,esp
sub esp,D0
mov [ebp-0c],ecx
push 'Q'
call GetKeyState
shr ax,0f
mov ah,al
cmp al,[lastKeyState]
seta al
add [selectedCritBone],al
mov [lastKeyState],ah

mov al,[selectedCritBone]
mov [ebp-04],al
//is that crit ?---------&gt;
checkNext:
xor edx,edx
mov ecx,[ebx+0C]
test ecx,0F
jnz findBodyMiddle
mov esi,[ecx+430]
test esi,esi
jle findBodyMiddle

mov ecx,esi
test ecx,ecx
jle findBodyMiddle
mov ecx,[ecx+220]
mov al,[ebp-04]
sub ah,ah
div byte ptr [ecx+11c]        // ecx+40  = max bones
mov [selectedCritBone],ah
xor eax,eax
mov al,[ebp-04]
inc [ebp-04]                 // pointer index
cmp al,[ecx+11c]
jge findBodyMiddle
mov edx,[ecx+118]
xor eax,eax
mov al,[selectedCritBone]
mov edx,[edx+eax*4]
mov [ebp-08],edx


push 00
lea ecx,[ebp-C0]
push ecx
lea ecx,[ebp-C0+10]
push ecx
mov edx,[ebp-08]
push dword ptr [edx+40]
push dword ptr [edx+3C]
mov ecx,esi
mov edx,[ebp-0c]
mov edx,[edx+0B3C]
mov edx,[edx+0190]
mov edx,[edx+4C]
add edx,[edx+49]
add edx,4D
call edx//Borderlands2.exe+A0AB0



push 00000000
xorps xmm0,xmm0
lea edx,[ebp-C0]
movdqa [edx],xmm0
push edx
mov edx,dword ptr [eyePosition]
push edx
lea edx,[ebp-C0+10]
push edx
lea edx,[ebp-A0]
push edx
mov edx,[ebx+0C]
mov edx,[edx+430]
mov ecx,edx
mov edx,[edx]
mov edx,[edx+1CC]
call edx



sub esp,1C
mov eax,esp
xorps xmm0,xmm0
movq [eax],xmm0
movq [eax+8],xmm0
movq xmm0,[ebp-A0+38]
movq [eax+10],xmm0
mov ecx,[ebx+0C]
mov edi,[ecx+430]
mov [eax+18],edi
push 00

mov ecx,[ebx+0C]
push ebp
mov ebp,esp
sub esp,8
push esi
push edi
mov edi,ecx
lea esi,[ebp-8]
//call Borderlands2.exe+1051850
mov edx,ArndHitRegionProc
add edx,[edx+0F]
add edx,13
call edx

lea esi,[ebp-8]
//call Borderlands2.exe+10518D0
mov edx,ArndHitRegionProc
add edx,[edx+2b]
add edx,2F
call edx

mov eax,[eax+4]
pop edi
pop esi
mov esp,ebp
pop ebp
//lea ecx,[ecx+730]
mov ecx,eax
mov edx,[ecx]
mov edx,[edx+08]
call edx
test eax,eax
jz checkNext
test byte ptr [eax+6C],01     // crit if nz
jz checkNext

jmp copyToOutput
findBodyMiddle:
jmp skipAACoord
mov ecx,[ebx+0C]
neg ecx
sbb ecx,ecx
and ecx,[ebx+10]                     // and ecx,ffffffff  = ecx ? idk why doing this.
lea edx,[ebp-C0+10]                  // output: positions will be stored here
mov eax,[ecx]
mov eax,[eax+50]
push edx
call eax
jmp copyToOutput
//&lt;--------------
copyToOutput:
mov eax,[ebx+08]
movq xmm1,[ebp-C0+10]
movq [eax],xmm1
mov edx,[ebp-C0+10+08]
mov [eax+08],edx
xor eax,eax
dec eax
mov esp,ebp
pop ebp
mov esp,ebx
pop ebx
ret 0C
skipAACoord:
xor eax,eax
mov esp,ebp
pop ebp
mov esp,ebx
pop ebx
ret 0C


SelectTargetHook+8:
jmp SelectTarget
db 90
targetChecked:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregisterSymbol(dataPlace)
unregisterSymbol(eyePosition)
unregisterSymbol(inputAngles)
unregisterSymbol(NearestEnemy)
unregisterSymbol(NearestEnemyAddr)
unregisterSymbol(NearestEnemyAddr2)
unregistersymbol(myController)
unregisterSymbol(AutoAimStrategy)
unregisterSymbol(selectedCritBone)
dealloc(newmem)
dealloc(dataPlace)

SelectTargetHook+8:
db 8B CF FF D0 85 C0

unregisterSymbol(SelectTargetHook)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>453</ID>
              <Description>"AutoAimStrategy"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>AutoAimStrategy</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>454</ID>
              <Description>"myController"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>myController</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>455</ID>
              <Description>"pointer"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>456</ID>
              <Description>"pointer"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>190</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>457</ID>
              <Description>"NearestEnemyAddr"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>NearestEnemyAddr</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>458</ID>
              <Description>"enemy health"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>NearestEnemyAddr</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>384</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>459</ID>
              <Description>"Enemy X"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[NearestEnemy]</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>460</ID>
              <Description>"Enemy Y"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[NearestEnemy]+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>461</ID>
              <Description>"Enemy Z"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[NearestEnemy]+8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>462</ID>
              <Description>"input pitch"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+6C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>463</ID>
              <Description>"input yaw"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+70</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>464</ID>
              <Description>"input roll"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+74</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>465</ID>
              <Description>"myStructure"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>466</ID>
              <Description>"my esp x"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>60</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>467</ID>
              <Description>"my esp y"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>64</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>468</ID>
              <Description>"my esp z"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>68</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>469</ID>
              <Description>"eYe x"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[mybaseStructure]+af0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>470</ID>
              <Description>"eYe y"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[mybaseStructure]+af4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>471</ID>
              <Description>"eYe z"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>[mybaseStructure]+af8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>472</ID>
              <Description>"eYe pitch"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+afC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>473</ID>
              <Description>"eYe yaw"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+b00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>474</ID>
              <Description>"eYe roll"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>[mybaseStructure]+b04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>475</ID>
              <Description>"bullet's shoot time speed"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>88</Offset>
                <Offset>2D0</Offset>
                <Offset>E30</Offset>
                <Offset>470</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>476</ID>
              <Description>"zoom stat - freeze 1 for aim assist"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>A46</Offset>
                <Offset>470</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>477</ID>
              <Description>"gun"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>EB4</Offset>
                <Offset>470</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>478</ID>
              <Description>"health"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>384</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>479</ID>
              <Description>"bullets left"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>6C</Offset>
                <Offset>9D0</Offset>
                <Offset>470</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>480</ID>
              <Description>"gun"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>mybaseStructure</Address>
              <Offsets>
                <Offset>470</Offset>
                <Offset>694</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>484</ID>
              <Description>"selecetd crit bone"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>selectedCritBone</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>481</ID>
              <Description>"nearest enemy final model"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>NearestEnemyAddr</Address>
              <Offsets>
                <Offset>18</Offset>
                <Offset>48</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>516</ID>
              <Description>"aim lock autoCrit 70% beta- best current"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[enable]
alloc(dataPlace,2048)
registersymbol(dataPlace)
alloc(newmem,4096) //4kb should be enough

AOBScan( SelectTargetHook, 8B 17 8B 82 ?? 08 00 00 8B CF FF D0 85 C0  )
registerSymbol(SelectTargetHook)
AOBScan( ArndHitRegionProc,8b fe 8D B5 6C FF FF FF )


label(SelectTarget)
label(skipPrediction)
label(skipAngles)
label(targetChecked)

label(getAACoord)

registerSymbol(AutoAimStrategy)
label(AutoAimStrategy)
label(myController)
label(eyePosition)
label(inputAngles)
label(gunAngles)
label(NearestEnemy)
label(NearestEnemyData)
label(generatedAngles)
label(NearestEnemyAddr)
label(NearestEnemyAddr2)

label(time)
label(preTime)
label(targetPos)
label(targetSpeed)
label(bulletPos)
label(bulletSpeed)
label(bulletSpeedlength)
label(intersectionPos)
label(param_a)
label(param_b)
label(param_c)


registerSymbol(eyePosition)
registerSymbol(inputAngles)
registerSymbol(NearestEnemyAddr)
registerSymbol(NearestEnemyAddr2)
registerSymbol(NearestEnemy)
registersymbol(myController)
registerSymbol(AutoAimStrategy)

dataPlace:
AutoAimStrategy:
dd 00000000
myController:
dd 00000000
eyePosition:
DD 00000000
inputAngles:
DD 00000000
gunAngles:
DD 00000000
NearestEnemyAddr:
DD 00000000
NearestEnemyAddr2:
DD 00000000

NearestEnemy:
dd 00000000
NearestEnemyData:
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
generatedAngles:
dd 00000000 00000000
// intersection prediction vars
time:
dd (float)0.0
preTime:
dd (float)0.0
targetPos:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
targetSpeed:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletPos:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletSpeed:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletSpeedlength:
dd (float)0.0
intersectionPos:
dd (float)0.0
param_a:
dd (float)0.0
param_b:
dd (float)0.0
param_c:
dd (float)0.0


label(startFire)
label(stopFire)
label(gunStat)
label(fireKeyStat)
gunStat:
db 00
fireKeyStat:
db 00

//constant unicode strings "StartFire" , "StopFire"
startFire:
db 53 00 74 00 61 00 72 00 74 00 46 00 69 00 72 00 65 00 00 00 00 00 00 00
stopFire:
db 53 00 74 00 6F 00 70 00 46 00 69 00 72 00 65 00 00 00 00 00 00 00 00 00 00



newmem:

SelectTarget:
pushad
/*  base address
mov eax,[Borderlands2.exe+1E8C464]
mov eax,[eax+0000048C]
mov eax,[eax]
mov ecx,[eax+40]      */
//get cross-hair pointer
//mov ebx,[esi+ACC]
mov ebx,esi
mov dword ptr [AutoAimStrategy],ebx
mov ecx,[ebx+90]
mov dword ptr [NearestEnemyAddr],ecx
mov ecx,[ebx+94]
mov dword ptr [NearestEnemyAddr2],ecx

// detection radius settings
mov eax,[ebx+3C]
mov [eax+44],(float)2.0


//Process of fire command simulation
//                           ----&gt;&gt;&gt;
label(doStartFire)
label(endCommands)
push ebp
mov ebp,esp
sub esp,44

mov eax,[myController]
test eax,eax
jz endCommands

mov al,[fireKeyStat]
cmp al,[gunStat]
mov [gunStat],al
jz endCommands
test al,al
jnz doStartFire

mov eax,[myController]
mov ebx,stopFire
mov ecx,[eax+0000066C]
mov edx,[ecx+3C]
mov edx,[edx]
add ecx,3C
lea eax,[ebp-44]      // 44 input bytes necessary? i'm not sure
push eax
push ebx
call edx

jmp endCommands
doStartFire:
mov eax,[myController]
mov ebx,startFire
mov ecx,[eax+0000066C]
mov edx,[ecx+3C]
mov edx,[edx]
add ecx,3C
lea eax,[ebp-44]
push eax
push ebx
call edx
jmp endCommands
endCommands:

mov esp,ebp
pop ebp
//                    &lt;&lt;&lt;----



xor edx,edx
push 1
call getkeyState
shr eax,0f
mov [fireKeyStat],al
push eax
push 2
call getkeyState
shr eax,0f
pop edx
or al,dl
test al,al
jz skipAngles

mov eax, NearestEnemyData
add eax,10 //
and eax,FFFFFFF0 // aligninment for sse instructions
mov DWORD PTR [NearestEnemy], eax
add eax,10
mov dword ptr [eyePosition], eax

mov esi,[ebp+08]
mov [myController],esi
test esi,esi
jz skipAngles
lea eax,[esi+60+0c]
mov dword ptr [inputAngles],eax
//lea eax,[esi+0aF0]
//mov dword ptr [eyePosition],eax

mov edx,[esi]
mov edx,[edx+00000454]
push 00
mov ecx, dword ptr [eyePosition]
lea eax,[ecx+0C]
push eax
push ecx
mov ecx,esi
call edx

mov eax,[esi+694]
test eax,eax
jz skipAngles
mov eax,[eax+470]
test eax,eax
jz skipAngles
fld [eax+EB4]
mov eax,[eax+E30]
mov eax,[eax+2d0]
fmul [eax+88]
fstp [bulletSpeedlength]

mov eax, DWORD PTR [NearestEnemy]
mov ecx, dword ptr [NearestEnemyAddr2]
test ecx,ecx
jz skipAngles
push dword ptr [NearestEnemyAddr2]
push dword ptr [NearestEnemyAddr]
push eax  // [NearestEnemy] output
mov ecx,esi
call getAACoord
test eax,eax
jz skipAngles

mov eax, dword ptr[eyePosition]
movups xmm0,[eax]
movups [bulletPos],xmm0
mov eax, dword ptr[NearestEnemy]
movups xmm0,[eax]
movups [targetPos],xmm0
movups [intersectionPos],xmm0
mov eax,[NearestEnemyAddr]
test eax,eax
jz skipAngles
test eax,0f
jnz skipAngles
lea eax,[eax+0104]
movups xmm0,[eax]
movups [targetSpeed],xmm0

//jmp skipPrediction
movups xmm1,[targetPos]
movups xmm2,[bulletPos]
movaps xmm0,xmm1
subps xmm0,xmm2
mulps xmm0,xmm0
xorps xmm4,xmm4
movaps xmm3,xmm0
shufps xmm3,xmm3,00
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
movss [param_c],xmm4

movaps xmm0,xmm1
subps xmm0,xmm2
movups xmm7,[targetSpeed]
mulps xmm0,xmm7
mov [param_b],(float)2.0
movss xmm3,[param_b]
shufps xmm3,xmm3,00
mulps xmm0,xmm3
xorps xmm4,xmm4
movaps xmm3,xmm0
shufps xmm3,xmm3,00
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
movss [param_b],xmm4

movss xmm4,[bulletSpeedlength]
mulss xmm4,xmm4
movss [param_a],xmm4
movups xmm0,[targetSpeed]
mulps xmm0,xmm0
movaps xmm3,xmm0
shufps xmm3,xmm3,00
xorps xmm4,xmm4
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
subss xmm4,[param_a]
movss [param_a],xmm4

// time = (  -b -+ sqrt( b^2-4ac )  )/( 2a )
fld [param_b]
fmul [param_b]
fld [param_a]
fmul [param_c]
mov [time],(float)4.0
fmul [time]
fstp [time]
fsub [time]
fsqrt
fstp [time]
fld [param_b]
fchs
//fadd [time]
fsub [time]
fld [param_a]
fadd [param_a]
fstp [time]
fdiv [time]
fstp [time]

call getTickCount
cvtsi2ss xmm1,eax
mov eax,1000
cvtsi2ss xmm2,eax
divss xmm1,xmm2
movss xmm0,[preTime]
subss xmm1,xmm0
addss xmm1,[time]
addss xmm1,[time]
movss [time],xmm1

//intersectionPos = targetSpeed*time+targetPos
movss xmm0,[time]
shufps xmm0,xmm0,00
movups xmm7,[targetSpeed]
mulps xmm0,xmm7
movups xmm7,[targetPos]
addps xmm0,xmm7
movups [intersectionPos],xmm0
skipPrediction:
//bulletSpeed = (intersectionPos - bulletPos) / time
/*  movups xmm1,[intersectionPos]
subps xmm1,[bulletPos]
movss xmm0,[time]
shufps xmm0,xmm0,00
divps xmm1,xmm0
movups [bulletSpeed],xmm1  */



mov ecx, intersectionPos //dword ptr[NearestEnemy]

mov eax, dword ptr[eyePosition]
fld dword ptr [ECX+8]
fsub dword ptr [eax+8]
fld dword ptr [ECX+4]
fsub dword ptr[eax+4]
fld st(0)
fmulp
fld [ECX]
fsub dword ptr [eax]
fld st(0)
fmulp
faddp
fsqrt
fpatan
push (float)65536.0
fmul dword ptr [esp]
fldpi
mov dword ptr [esp],(float)2.0
fmul dword ptr [esp]
fstp dword ptr [esp]
fdiv dword ptr [esp]
add esp,4
fistp [generatedAngles]

mov eax, dword ptr [eyePosition]
fld dword ptr [ECX+4]
fsub dword ptr [eax+4]
fld dword ptr [ECX]
fsub dword ptr [eax]
fpatan
push (float)65536.0
fmul dword ptr [esp]
fldpi
mov dword ptr [esp],(float)2.0
fmul dword ptr [esp]
fstp dword ptr [esp]
fdiv dword ptr [esp]
add esp,4
fistp [generatedAngles+4]



mov ecx, dword ptr[inputAngles]
mov eax, dword ptr[eyePosition]

lea eax, [eax+0C]
and [eax],0000ffff
movq xmm0,[eax]
movq xmm1,[ecx]
psubd xmm0,xmm1 //  calculated recoil = eyeAngles-inputAngles
movq xmm1,[generatedAngles]
psubq xmm1,xmm0  // anti-recoil applied to angles
movq [ecx],xmm1  // new angles set
skipAngles:

call getTickCount
cvtsi2ss xmm1,eax
mov eax,1000
cvtsi2ss xmm2,eax
divss xmm1,xmm2
movss [preTime],xmm1

popad
// originalcode:
db 8B CF FF D0 85 C0
jmp targetChecked

label(skipAACoord)
label(checkNext)
label(findBodyMiddle)
label(copyToOutput)
label(selectedCritBone)
registerSymbol(selectedCritBone)
selectedCritBone:
db 00
label(lastKeyState)
lastKeyState:
db 00
getAACoord:
push ebx
mov ebx,esp
sub esp,08
and esp,-10
add esp,04
push ebp
mov ebp,[ebx+04]
mov [esp+04],ebp
mov ebp,esp
sub esp,D0
mov [ebp-0c],ecx
push 'Q'
call GetKeyState
shr ax,0f
mov ah,al
cmp al,[lastKeyState]
seta al
add [selectedCritBone],al
mov [lastKeyState],ah

mov al,[selectedCritBone]
mov [ebp-04],al
//is that crit ?---------&gt;
checkNext:
xor edx,edx
mov ecx,[ebx+0C]
test ecx,0F
jnz findBodyMiddle
mov esi,[ecx+430]
test esi,esi
jle findBodyMiddle

mov ecx,esi
test ecx,ecx
jle findBodyMiddle
mov ecx,[ecx+220]
mov al,[ebp-04]
sub ah,ah
div byte ptr [ecx+11c]        // ecx+40  = max bones
mov [selectedCritBone],ah
xor eax,eax
mov al,[ebp-04]
inc [ebp-04]                 // pointer index
cmp al,[ecx+11c]
jge findBodyMiddle
mov edx,[ecx+118]
xor eax,eax
mov al,[selectedCritBone]
mov edx,[edx+eax*4]
mov [ebp-08],edx


push 00
lea ecx,[ebp-C0]
push ecx
lea ecx,[ebp-C0+10]
push ecx
mov edx,[ebp-08]
push dword ptr [edx+40]
push dword ptr [edx+3C]
mov ecx,esi
mov edx,[ebp-0c]
mov edx,[edx+0B3C]
mov edx,[edx+0190]
mov edx,[edx+4C]
add edx,[edx+49]
add edx,4D
call edx//Borderlands2.exe+A0AB0



push (float)0.0
xorps xmm0,xmm0
lea edx,[ebp-C0]
movdqa [edx],xmm0
push edx
mov edx,dword ptr [eyePosition]
push edx
lea edx,[ebp-C0+10]
push edx
lea edx,[ebp-A0]
push edx
mov edx,[ebx+0C]
mov edx,[edx+430]
mov ecx,edx
mov edx,[edx]
mov edx,[edx+1CC]
call edx



sub esp,1C
mov eax,esp
xorps xmm0,xmm0
movq [eax],xmm0
movq [eax+8],xmm0
movq xmm0,[ebp-A0+38]
movq [eax+10],xmm0
mov ecx,[ebx+0C]
mov edi,[ecx+430]
mov [eax+18],edi
push 00

mov ecx,[ebx+0C]
push ebp
mov ebp,esp
sub esp,8
push esi
push edi
mov edi,ecx
lea esi,[ebp-8]
//call Borderlands2.exe+1051850
mov edx,ArndHitRegionProc
add edx,[edx+0F]
add edx,13
call edx

lea esi,[ebp-8]
//call Borderlands2.exe+10518D0
mov edx,ArndHitRegionProc
add edx,[edx+2b]
add edx,2F
call edx

mov eax,[eax+4]
pop edi
pop esi
mov esp,ebp
pop ebp
//lea ecx,[ecx+730]
mov ecx,eax
mov edx,[ecx]
mov edx,[edx+08]
call edx
test eax,eax
jz checkNext
test byte ptr [eax+6C],01     // crit if nz
jz checkNext

jmp copyToOutput
findBodyMiddle:
jmp skipAACoord
mov ecx,[ebx+0C]
neg ecx
sbb ecx,ecx
and ecx,[ebx+10]                     // and ecx,ffffffff  = ecx ? idk why doing this.
lea edx,[ebp-C0+10]                  // output: positions will be stored here
mov eax,[ecx]
mov eax,[eax+50]
push edx
call eax
jmp copyToOutput
//&lt;--------------
copyToOutput:
mov eax,[ebx+08]
movq xmm1,[ebp-C0+10]
movq [eax],xmm1
mov edx,[ebp-C0+10+08]
mov [eax+08],edx
xor eax,eax
dec eax
mov esp,ebp
pop ebp
mov esp,ebx
pop ebx
ret 0C
skipAACoord:
xor eax,eax
mov esp,ebp
pop ebp
mov esp,ebx
pop ebx
ret 0C


SelectTargetHook+8:
jmp SelectTarget
db 90
targetChecked:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregisterSymbol(dataPlace)
unregisterSymbol(eyePosition)
unregisterSymbol(inputAngles)
unregisterSymbol(NearestEnemy)
unregisterSymbol(NearestEnemyAddr)
unregisterSymbol(NearestEnemyAddr2)
unregistersymbol(myController)
unregisterSymbol(AutoAimStrategy)
unregisterSymbol(selectedCritBone)
dealloc(newmem)
dealloc(dataPlace)

SelectTargetHook+8:
db 8B CF FF D0 85 C0

unregisterSymbol(SelectTargetHook)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>517</ID>
                  <Description>"AutoAimStrategy"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>AutoAimStrategy</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>518</ID>
                  <Description>"myController"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>myController</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>519</ID>
                  <Description>"pointer"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>520</ID>
                  <Description>"pointer"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>190</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>521</ID>
                  <Description>"NearestEnemyAddr"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>NearestEnemyAddr</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>522</ID>
                  <Description>"enemy health"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>NearestEnemyAddr</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>384</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>523</ID>
                  <Description>"Enemy X"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[NearestEnemy]</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>524</ID>
                  <Description>"Enemy Y"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[NearestEnemy]+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>525</ID>
                  <Description>"Enemy Z"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[NearestEnemy]+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>526</ID>
                  <Description>"input pitch"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>[mybaseStructure]+6C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>527</ID>
                  <Description>"input yaw"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>[mybaseStructure]+70</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>528</ID>
                  <Description>"input roll"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>[mybaseStructure]+74</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>529</ID>
                  <Description>"myStructure"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>530</ID>
                  <Description>"my esp x"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>60</Offset>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>531</ID>
                  <Description>"my esp y"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>64</Offset>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>532</ID>
                  <Description>"my esp z"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>68</Offset>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>533</ID>
                  <Description>"eYe x"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[mybaseStructure]+af0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>534</ID>
                  <Description>"eYe y"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[mybaseStructure]+af4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>535</ID>
                  <Description>"eYe z"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>[mybaseStructure]+af8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>536</ID>
                  <Description>"eYe pitch"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>[mybaseStructure]+afC</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>537</ID>
                  <Description>"eYe yaw"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>[mybaseStructure]+b00</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>538</ID>
                  <Description>"eYe roll"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>[mybaseStructure]+b04</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>539</ID>
                  <Description>"bullet's shoot time speed"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>88</Offset>
                    <Offset>2D0</Offset>
                    <Offset>E30</Offset>
                    <Offset>470</Offset>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>540</ID>
                  <Description>"zoom stat - freeze 1 for aim assist"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>A46</Offset>
                    <Offset>470</Offset>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>541</ID>
                  <Description>"gun"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>EB4</Offset>
                    <Offset>470</Offset>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>542</ID>
                  <Description>"health"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>384</Offset>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>543</ID>
                  <Description>"bullets left"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>6C</Offset>
                    <Offset>9D0</Offset>
                    <Offset>470</Offset>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>544</ID>
                  <Description>"gun"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>mybaseStructure</Address>
                  <Offsets>
                    <Offset>470</Offset>
                    <Offset>694</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>545</ID>
                  <Description>"selecetd crit bone"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>selectedCritBone</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>546</ID>
                  <Description>"nearest enemy final model"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>NearestEnemyAddr</Address>
                  <Offsets>
                    <Offset>18</Offset>
                    <Offset>48</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>547</ID>
      <Description>"aim lock autoCrit 70% beta- best current"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
alloc(dataPlace,2048)
registersymbol(dataPlace)
alloc(newmem,4096) //4kb should be enough

AOBScan( SelectTargetHook, 8B 17 8B 82 ?? 08 00 00 8B CF FF D0 85 C0  )
registerSymbol(SelectTargetHook)
AOBScan( ArndHitRegionProc,8b fe 8D B5 6C FF FF FF )


label(SelectTarget)
label(skipPrediction)
label(skipAngles)
label(targetChecked)

label(getAACoord)

registerSymbol(AutoAimStrategy)
label(AutoAimStrategy)
label(myController)
label(eyePosition)
label(inputAngles)
label(gunAngles)
label(NearestEnemy)
label(NearestEnemyData)
label(generatedAngles)
label(NearestEnemyAddr)
label(NearestEnemyAddr2)

label(time)
label(preTime)
label(targetPos)
label(targetSpeed)
label(bulletPos)
label(bulletSpeed)
label(bulletSpeedlength)
label(intersectionPos)
label(param_a)
label(param_b)
label(param_c)


registerSymbol(eyePosition)
registerSymbol(inputAngles)
registerSymbol(NearestEnemyAddr)
registerSymbol(NearestEnemyAddr2)
registerSymbol(NearestEnemy)
registersymbol(myController)
registerSymbol(AutoAimStrategy)

dataPlace:
AutoAimStrategy:
dd 00000000
myController:
dd 00000000
eyePosition:
DD 00000000
inputAngles:
DD 00000000
gunAngles:
DD 00000000
NearestEnemyAddr:
DD 00000000
NearestEnemyAddr2:
DD 00000000

NearestEnemy:
dd 00000000
NearestEnemyData:
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
DD (float)0.0 (float)0.0 (float)0.0 (float)0.0
generatedAngles:
dd 00000000 00000000
// intersection prediction vars
time:
dd (float)0.0
preTime:
dd (float)0.0
targetPos:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
targetSpeed:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletPos:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletSpeed:
dd (float)0.0 dd (float)0.0 dd (float)0.0 (float)0.0
bulletSpeedlength:
dd (float)0.0
intersectionPos:
dd (float)0.0
param_a:
dd (float)0.0
param_b:
dd (float)0.0
param_c:
dd (float)0.0


label(startFire)
label(stopFire)
label(gunStat)
label(fireKeyStat)
gunStat:
db 00
fireKeyStat:
db 00

//constant unicode strings "StartFire" , "StopFire"
startFire:
db 53 00 74 00 61 00 72 00 74 00 46 00 69 00 72 00 65 00 00 00 00 00 00 00
stopFire:
db 53 00 74 00 6F 00 70 00 46 00 69 00 72 00 65 00 00 00 00 00 00 00 00 00 00



newmem:

SelectTarget:
pushad
/*  base address
mov eax,[Borderlands2.exe+1E8C464]
mov eax,[eax+0000048C]
mov eax,[eax]
mov ecx,[eax+40]      */
//get cross-hair pointer
//mov ebx,[esi+ACC]
mov ebx,esi
mov dword ptr [AutoAimStrategy],ebx
mov ecx,[ebx+90]
mov dword ptr [NearestEnemyAddr],ecx
mov ecx,[ebx+94]
mov dword ptr [NearestEnemyAddr2],ecx

// detection radius settings
mov eax,[ebx+3C]
mov [eax+44],(float)2.0


//Process of fire command simulation
//                           ----&gt;&gt;&gt;
label(doStartFire)
label(endCommands)
push ebp
mov ebp,esp
sub esp,44

mov eax,[myController]
test eax,eax
jz endCommands

mov al,[fireKeyStat]
cmp al,[gunStat]
mov [gunStat],al
jz endCommands
test al,al
jnz doStartFire

mov eax,[myController]
mov ebx,stopFire
mov ecx,[eax+0000066C]
mov edx,[ecx+3C]
mov edx,[edx]
add ecx,3C
lea eax,[ebp-44]      // 44 input bytes necessary? i'm not sure
push eax
push ebx
call edx

jmp endCommands
doStartFire:
mov eax,[myController]
mov ebx,startFire
mov ecx,[eax+0000066C]
mov edx,[ecx+3C]
mov edx,[edx]
add ecx,3C
lea eax,[ebp-44]
push eax
push ebx
call edx
jmp endCommands
endCommands:

mov esp,ebp
pop ebp
//                    &lt;&lt;&lt;----



xor edx,edx
push 1
call getkeyState
shr eax,0f
mov [fireKeyStat],al
push eax
push 2
call getkeyState
shr eax,0f
pop edx
or al,dl
test al,al
jz skipAngles

mov eax, NearestEnemyData
add eax,10 //
and eax,FFFFFFF0 // aligninment for sse instructions
mov DWORD PTR [NearestEnemy], eax
add eax,10
mov dword ptr [eyePosition], eax

mov esi,[ebp+08]
mov [myController],esi
test esi,esi
jz skipAngles
lea eax,[esi+60+0c]
mov dword ptr [inputAngles],eax
//lea eax,[esi+0aF0]
//mov dword ptr [eyePosition],eax

mov edx,[esi]
mov edx,[edx+00000454]
push 00
mov ecx, dword ptr [eyePosition]
lea eax,[ecx+0C]
push eax
push ecx
mov ecx,esi
call edx

mov eax,[esi+694]
test eax,eax
jz skipAngles
mov eax,[eax+470]
test eax,eax
jz skipAngles
fld [eax+EB4]
mov eax,[eax+E30]
mov eax,[eax+2d0]
fmul [eax+88]
fstp [bulletSpeedlength]

mov eax, DWORD PTR [NearestEnemy]
mov ecx, dword ptr [NearestEnemyAddr2]
test ecx,ecx
jz skipAngles
push dword ptr [NearestEnemyAddr2]
push dword ptr [NearestEnemyAddr]
push eax  // [NearestEnemy] output
mov ecx,esi
call getAACoord
test eax,eax
jz skipAngles

mov eax, dword ptr[eyePosition]
movups xmm0,[eax]
movups [bulletPos],xmm0
mov eax, dword ptr[NearestEnemy]
movups xmm0,[eax]
movups [targetPos],xmm0
movups [intersectionPos],xmm0
mov eax,[NearestEnemyAddr]
test eax,eax
jz skipAngles
test eax,0f
jnz skipAngles
lea eax,[eax+0104]
movups xmm0,[eax]
movups [targetSpeed],xmm0

//jmp skipPrediction
movups xmm1,[targetPos]
movups xmm2,[bulletPos]
movaps xmm0,xmm1
subps xmm0,xmm2
mulps xmm0,xmm0
xorps xmm4,xmm4
movaps xmm3,xmm0
shufps xmm3,xmm3,00
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
movss [param_c],xmm4

movaps xmm0,xmm1
subps xmm0,xmm2
movups xmm7,[targetSpeed]
mulps xmm0,xmm7
mov [param_b],(float)2.0
movss xmm3,[param_b]
shufps xmm3,xmm3,00
mulps xmm0,xmm3
xorps xmm4,xmm4
movaps xmm3,xmm0
shufps xmm3,xmm3,00
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
movss [param_b],xmm4

movss xmm4,[bulletSpeedlength]
mulss xmm4,xmm4
movss [param_a],xmm4
movups xmm0,[targetSpeed]
mulps xmm0,xmm0
movaps xmm3,xmm0
shufps xmm3,xmm3,00
xorps xmm4,xmm4
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,55
addss xmm4,xmm3
movaps xmm3,xmm0
shufps xmm3,xmm3,AA
addss xmm4,xmm3
//shufps xmm3,xmm0,FF
//addss xmm4,xmm3
subss xmm4,[param_a]
movss [param_a],xmm4

// time = (  -b -+ sqrt( b^2-4ac )  )/( 2a )
fld [param_b]
fmul [param_b]
fld [param_a]
fmul [param_c]
mov [time],(float)4.0
fmul [time]
fstp [time]
fsub [time]
fsqrt
fstp [time]
fld [param_b]
fchs
//fadd [time]
fsub [time]
fld [param_a]
fadd [param_a]
fstp [time]
fdiv [time]
fstp [time]

call getTickCount
cvtsi2ss xmm1,eax
mov eax,1000
cvtsi2ss xmm2,eax
divss xmm1,xmm2
movss xmm0,[preTime]
subss xmm1,xmm0
addss xmm1,[time]
addss xmm1,[time]
movss [time],xmm1

//intersectionPos = targetSpeed*time+targetPos
movss xmm0,[time]
shufps xmm0,xmm0,00
movups xmm7,[targetSpeed]
mulps xmm0,xmm7
movups xmm7,[targetPos]
addps xmm0,xmm7
movups [intersectionPos],xmm0
skipPrediction:
//bulletSpeed = (intersectionPos - bulletPos) / time
/*  movups xmm1,[intersectionPos]
subps xmm1,[bulletPos]
movss xmm0,[time]
shufps xmm0,xmm0,00
divps xmm1,xmm0
movups [bulletSpeed],xmm1  */



mov ecx, intersectionPos //dword ptr[NearestEnemy]

mov eax, dword ptr[eyePosition]
fld dword ptr [ECX+8]
fsub dword ptr [eax+8]
fld dword ptr [ECX+4]
fsub dword ptr[eax+4]
fld st(0)
fmulp
fld [ECX]
fsub dword ptr [eax]
fld st(0)
fmulp
faddp
fsqrt
fpatan
push (float)65536.0
fmul dword ptr [esp]
fldpi
mov dword ptr [esp],(float)2.0
fmul dword ptr [esp]
fstp dword ptr [esp]
fdiv dword ptr [esp]
add esp,4
fistp [generatedAngles]

mov eax, dword ptr [eyePosition]
fld dword ptr [ECX+4]
fsub dword ptr [eax+4]
fld dword ptr [ECX]
fsub dword ptr [eax]
fpatan
push (float)65536.0
fmul dword ptr [esp]
fldpi
mov dword ptr [esp],(float)2.0
fmul dword ptr [esp]
fstp dword ptr [esp]
fdiv dword ptr [esp]
add esp,4
fistp [generatedAngles+4]



mov ecx, dword ptr[inputAngles]
mov eax, dword ptr[eyePosition]

lea eax, [eax+0C]
and [eax],0000ffff
movq xmm0,[eax]
movq xmm1,[ecx]
psubd xmm0,xmm1 //  calculated recoil = eyeAngles-inputAngles
movq xmm1,[generatedAngles]
psubq xmm1,xmm0  // anti-recoil applied to angles
movq [ecx],xmm1  // new angles set
skipAngles:

call getTickCount
cvtsi2ss xmm1,eax
mov eax,1000
cvtsi2ss xmm2,eax
divss xmm1,xmm2
movss [preTime],xmm1

popad
// originalcode:
db 8B CF FF D0 85 C0
jmp targetChecked

label(skipAACoord)
label(checkNext)
label(findBodyMiddle)
label(copyToOutput)
label(selectedCritBone)
registerSymbol(selectedCritBone)
selectedCritBone:
db 00
label(lastKeyState)
lastKeyState:
db 00
getAACoord:
push ebx
mov ebx,esp
sub esp,08
and esp,-10
add esp,04
push ebp
mov ebp,[ebx+04]
mov [esp+04],ebp
mov ebp,esp
sub esp,D0
mov [ebp-0c],ecx
push 'Q'
call GetKeyState
shr ax,0f
mov ah,al
cmp al,[lastKeyState]
seta al
add [selectedCritBone],al
mov [lastKeyState],ah

mov al,[selectedCritBone]
mov [ebp-04],al
//is that crit ?---------&gt;
checkNext:
xor edx,edx
mov ecx,[ebx+0C]
test ecx,0F
jnz findBodyMiddle
mov esi,[ecx+430]
test esi,esi
jle findBodyMiddle

mov ecx,esi
test ecx,ecx
jle findBodyMiddle
mov ecx,[ecx+220]
mov al,[ebp-04]
sub ah,ah
div byte ptr [ecx+11c]        // ecx+40  = max bones
mov [selectedCritBone],ah
xor eax,eax
mov al,[ebp-04]
inc [ebp-04]                 // pointer index
cmp al,[ecx+11c]
jge findBodyMiddle
mov edx,[ecx+118]
xor eax,eax
mov al,[selectedCritBone]
mov edx,[edx+eax*4]
mov [ebp-08],edx


push 00
lea ecx,[ebp-C0]
push ecx
lea ecx,[ebp-C0+10]
push ecx
mov edx,[ebp-08]
push dword ptr [edx+40]
push dword ptr [edx+3C]
mov ecx,esi
mov edx,[ebp-0c]
mov edx,[edx+0B3C]
mov edx,[edx+0190]
mov edx,[edx+4C]
add edx,[edx+49]
add edx,4D
call edx//Borderlands2.exe+A0AB0



push (float)0.0
xorps xmm0,xmm0
lea edx,[ebp-C0]
movdqa [edx],xmm0
push edx
mov edx,dword ptr [eyePosition]
push edx
lea edx,[ebp-C0+10]
push edx
lea edx,[ebp-A0]
push edx
mov edx,[ebx+0C]
mov edx,[edx+430]
mov ecx,edx
mov edx,[edx]
mov edx,[edx+1CC]
call edx



sub esp,1C
mov eax,esp
xorps xmm0,xmm0
movq [eax],xmm0
movq [eax+8],xmm0
movq xmm0,[ebp-A0+38]
movq [eax+10],xmm0
mov ecx,[ebx+0C]
mov edi,[ecx+430]
mov [eax+18],edi
push 00

mov ecx,[ebx+0C]
push ebp
mov ebp,esp
sub esp,8
push esi
push edi
mov edi,ecx
lea esi,[ebp-8]
//call Borderlands2.exe+1051850
mov edx,ArndHitRegionProc
add edx,[edx+0F]
add edx,13
call edx

lea esi,[ebp-8]
//call Borderlands2.exe+10518D0
mov edx,ArndHitRegionProc
add edx,[edx+2b]
add edx,2F
call edx

mov eax,[eax+4]
pop edi
pop esi
mov esp,ebp
pop ebp
//lea ecx,[ecx+730]
mov ecx,eax
mov edx,[ecx]
mov edx,[edx+08]
call edx
test eax,eax
jz checkNext
test byte ptr [eax+6C],01     // crit if nz
jz checkNext

jmp copyToOutput
findBodyMiddle:
jmp skipAACoord
mov ecx,[ebx+0C]
neg ecx
sbb ecx,ecx
and ecx,[ebx+10]                     // and ecx,ffffffff  = ecx ? idk why doing this.
lea edx,[ebp-C0+10]                  // output: positions will be stored here
mov eax,[ecx]
mov eax,[eax+50]
push edx
call eax
jmp copyToOutput
//&lt;--------------
copyToOutput:
mov eax,[ebx+08]
movq xmm1,[ebp-C0+10]
movq [eax],xmm1
mov edx,[ebp-C0+10+08]
mov [eax+08],edx
xor eax,eax
dec eax
mov esp,ebp
pop ebp
mov esp,ebx
pop ebx
ret 0C
skipAACoord:
xor eax,eax
mov esp,ebp
pop ebp
mov esp,ebx
pop ebx
ret 0C


SelectTargetHook+8:
jmp SelectTarget
db 90
targetChecked:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregisterSymbol(dataPlace)
unregisterSymbol(eyePosition)
unregisterSymbol(inputAngles)
unregisterSymbol(NearestEnemy)
unregisterSymbol(NearestEnemyAddr)
unregisterSymbol(NearestEnemyAddr2)
unregistersymbol(myController)
unregisterSymbol(AutoAimStrategy)
unregisterSymbol(selectedCritBone)
dealloc(newmem)
dealloc(dataPlace)

SelectTargetHook+8:
db 8B CF FF D0 85 C0

unregisterSymbol(SelectTargetHook)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>548</ID>
          <Description>"AutoAimStrategy"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>AutoAimStrategy</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>549</ID>
          <Description>"myController"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>myController</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>550</ID>
          <Description>"pointer"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>551</ID>
          <Description>"pointer"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>190</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>552</ID>
          <Description>"NearestEnemyAddr"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>NearestEnemyAddr</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>553</ID>
          <Description>"enemy health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>NearestEnemyAddr</Address>
          <Offsets>
            <Offset>6C</Offset>
            <Offset>384</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>554</ID>
          <Description>"Enemy X"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[NearestEnemy]</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>555</ID>
          <Description>"Enemy Y"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[NearestEnemy]+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>556</ID>
          <Description>"Enemy Z"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[NearestEnemy]+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>557</ID>
          <Description>"input pitch"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+6C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>558</ID>
          <Description>"input yaw"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+70</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>559</ID>
          <Description>"input roll"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+74</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>560</ID>
          <Description>"myStructure"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>561</ID>
          <Description>"my esp x"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>60</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>562</ID>
          <Description>"my esp y"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>64</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>563</ID>
          <Description>"my esp z"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>68</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>564</ID>
          <Description>"eYe x"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[mybaseStructure]+af0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>565</ID>
          <Description>"eYe y"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[mybaseStructure]+af4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>566</ID>
          <Description>"eYe z"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>[mybaseStructure]+af8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>567</ID>
          <Description>"eYe pitch"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+afC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>568</ID>
          <Description>"eYe yaw"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+b00</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>569</ID>
          <Description>"eYe roll"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>[mybaseStructure]+b04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>570</ID>
          <Description>"bullet's shoot time speed"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>88</Offset>
            <Offset>2D0</Offset>
            <Offset>E30</Offset>
            <Offset>470</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>571</ID>
          <Description>"zoom stat - freeze 1 for aim assist"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>A46</Offset>
            <Offset>470</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>572</ID>
          <Description>"gun"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>EB4</Offset>
            <Offset>470</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>573</ID>
          <Description>"health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>6C</Offset>
            <Offset>384</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>574</ID>
          <Description>"bullets left"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>6C</Offset>
            <Offset>9D0</Offset>
            <Offset>470</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>575</ID>
          <Description>"gun"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mybaseStructure</Address>
          <Offsets>
            <Offset>470</Offset>
            <Offset>694</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>576</ID>
          <Description>"selecetd crit bone"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>selectedCritBone</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>577</ID>
          <Description>"nearest enemy final model"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>NearestEnemyAddr</Address>
          <Offsets>
            <Offset>18</Offset>
            <Offset>48</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>setAnglesHook</Name>
      <Address>00A526ED</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>currentSuspectBoneOffset</Name>
      <Address>0832000C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>isActive</Name>
      <Address>1FCD0824</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>selectedBoneDiference</Name>
      <Address>38640088</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>myPosition</Name>
      <Address>19AC0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>myAngles</Name>
      <Address>19AC0004</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>currentSuspect</Name>
      <Address>19AC0010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>selectedBone</Name>
      <Address>19AC0018</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NearestEnemy</Name>
      <Address>19AC0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>NearestEnemyDistance</Name>
      <Address>19AC010C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SelectedBoneIndex</Name>
      <Address>19AC0100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>maxBones</Name>
      <Address>19AC0104</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Stop</Name>
      <Address>0C22305C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>count</Name>
      <Address>058B0025</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>WeapLevel_Hook</Name>
      <Address>005D4FBC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>WeapLevel_Lvl</Name>
      <Address>0AB40000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobBasePointer_r</Name>
      <Address>007B6463</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBasePointer</Name>
      <Address>34450010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobKeyBasePointer_r</Name>
      <Address>00B6A438</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pKeyBasePointer</Name>
      <Address>13ED0010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRes</Name>
      <Address>01CA0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MapData</Name>
      <Address>03210011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>avg</Name>
      <Address>006EA7AB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>label1</Name>
      <Address>006748DA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>codeLab</Name>
      <Address>1D474029</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AtLeastOneEnemySpotted</Name>
      <Address>0B0B068B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>locBanLbl</Name>
      <Address>062C40DD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>dataPlace</Name>
      <Address>0DB30636</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>WeaponID</Name>
      <Address>0DB3068A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>myActionStat</Name>
      <Address>0DB3068E</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>06870000</Address>
      <Comment>jmp 06870000</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
