<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>37</ID>
      <Description>"Infinite Time (God Mode)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(TimeCode,1024) //1kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(aob_timer)
label(aob_hit_timer)
registersymbol(TimeCode)
registersymbol(aob_timer)
registersymbol(aob_hit_timer)
aobscan(AOBTimer,F2 * * * 66 * * * F3 0F 11 * 18 A3 07 00 F3 0F 10 * 18 A3 07 *)
aobscan(AOBHitTimer,66 0F 5A * F3 0F 11 * 18 A3 07 00 F3 0F 5A * 66 0F 2F)

{=============================================================================}

TimeCode: //this is allocated memory, you have read,write,execute access
originalcode:
mov [esi+0007A318],(float)50.0

exit:
jmp returnhere

AOBTimer+8:
aob_timer:
jmp TimeCode
nop
nop
nop
returnhere:

{=============================================================================}

AOBHitTimer+4:
aob_hit_timer:
db 90 90 90 90 90 90 90 90

{=============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(TimeCode)
aob_timer:
db F3 0F 11 86 18 A3 07 00
aob_hit_timer:
db F3 0F 11 81 18 A3 07 00
unregistersymbol(TimeCode)
unregistersymbol(aob_timer)
unregistersymbol(aob_hit_timer)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>38</ID>
      <Description>"Unlimited Bullet/Speed-Up Time Usage"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(SlowCode,1024) //1kb should be enough
alloc(SlowCode_Start,1024)
label(returnhere)
label(originalcode)
label(exit)
label(returnhere2)
label(originalcode2)
label(exit2)
label(aob_slow)
label(aob_slow_start)
registersymbol(SlowCode)
registersymbol(SlowCode_Start)
registersymbol(aob_slow)
registersymbol(aob_slow_start)
aobscan(AOBSlow,0F 5A * F2 0F 5C * 66 0F 5A * F3 0F 11 * E8 * * * *)
aobscan(AOBSlowStart,33 * F3 0F 11 * 50 02 00 00 F3 0F 11 * 4C 02 00 00 0F 57 *)

{=============================================================================}

SlowCode: //this is allocated memory, you have read,write,execute access
originalcode:
cvtpd2ps xmm0,xmm1
mov [eax],(float)100.0

exit:
jmp returnhere

AOBSlow+7:
aob_slow:
jmp SlowCode
nop
nop
nop
returnhere:

{=============================================================================}

SlowCode_Start: //this is allocated memory, you have read,write,execute access
originalcode2:
mov [ecx+0000024C],(float)100.0

exit2:
jmp returnhere2

AOBSlowStart+A:
aob_slow_start:
jmp SlowCode_Start
nop
nop
nop
returnhere2:

{=============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(SlowCode)
aob_slow:
db 66 0F 5A C1 F3 0F 11 00
dealloc(SlowCode_Start)
aob_slow_start:
db F3 0F 11 81 4C 02 00 00
unregistersymbol(SlowCode)
unregistersymbol(SlowCode_Start)
unregistersymbol(aob_slow)
unregistersymbol(aob_slow_start)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"Max/Infinite Alternate Weapon Ammo "</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(AmmoCode,1024) //1kb should be enough
alloc(AmmoCode_Start,1024)
label(returnhere)
label(originalcode)
label(exit)
label(returnhere2)
label(originalcode2)
label(exit2)
label(aob_ammo)
label(aob_ammo_start)
registersymbol(AmmoCode)
registersymbol(AmmoCode_Start)
registersymbol(aob_ammo)
registersymbol(aob_ammo_start)
aobscan(AOBAmmo,80 * * * * * 00 * * A1 * * * * * * 48 02 00 00 8B * 08 03 00 *)
aobscan(AOBAmmoStart,D9 * * * * * 8A * * * * * 88 * * * * * 88 * 48 02 00 00 33)

{=============================================================================}

AmmoCode: //this is allocated memory, you have read,write,execute access
originalcode:
mov byte ptr [eax+00000248],5

exit:
jmp returnhere

AOBAmmo+E:
aob_ammo:
jmp AmmoCode
nop
returnhere:

{=============================================================================}

AmmoCode_Start: //this is allocated memory, you have read,write,execute access
originalcode2:
mov al,5
mov [ecx+00000248],al

exit2:
jmp returnhere2

AOBAmmoStart+12:
aob_ammo_start:
jmp AmmoCode_Start
nop
returnhere2:

{=============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(AmmoCode)
aob_ammo:
db FE 88 48 02 00 00
dealloc(AmmoCode_Start)
aob_ammo_start:
db 88 81 48 02 00 00
unregistersymbol(AmmoCode)
unregistersymbol(AmmoCode_Start)
unregistersymbol(aob_ammo)
unregistersymbol(aob_ammo_start)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Max/Infinite Firepower/Upgrades "</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(UpgCode,1024) //1kb should be enough
alloc(UpgCode_Start,1024)
label(returnhere)
label(originalcode)
label(exit)
label(returnhere2)
label(originalcode2)
label(exit2)
label(aob_Upg)
label(aob_Upg_start)
label(aob_Upg_Hit)
registersymbol(UpgCode)
registersymbol(UpgCode_Start)
registersymbol(aob_Upg)
registersymbol(aob_Upg_start)
registersymbol(aob_Upg_Hit)
aobscan(AOBUpg,3C * 7D * * * 88 * * 44 02 00 00 C2)
aobscan(AOBUpgStart,D9 * * * * * 88 * 45 02 00 00 88 * 44 02 00 00 D9)
aobscan(AOBUpgHit,A1 * * * * 28 * * 44 02 00 00 8B * * * * * * E8)

{=============================================================================}

UpgCode: //this is allocated memory, you have read,write,execute access
originalcode:
mov al,9
mov [edx+ecx+00000244],al

exit:
jmp returnhere

AOBUpg+4:
aob_Upg:
jmp UpgCode
nop
nop
nop
nop
returnhere:

{=============================================================================}

UpgCode_Start: //this is allocated memory, you have read,write,execute access
originalcode2:
mov al,9
mov [ecx+00000244],al

exit2:
jmp returnhere2

AOBUpgStart+C:
aob_Upg_start:
jmp UpgCode_Start
nop
returnhere2:

{=============================================================================}

AOBUpgHit+5:
aob_Upg_Hit:
db 90 90 90 90 90 90 90

{=============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(UpgCode)
aob_Upg:
db FE C0 88 84 0A 44 02 00 00
dealloc(UpgCode_Start)
aob_Upg_start:
db 88 81 44 02 00 00
aob_Upg_Hit:
db 28 8C 30 44 02 00 00
unregistersymbol(UpgCode)
unregistersymbol(UpgCode_Start)
unregistersymbol(aob_Upg)
unregistersymbol(aob_Upg_start)
unregistersymbol(aob_Upg_Hit)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>39</ID>
      <Description>"Always Have Shield (Unlimited Shield) "</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(ShieldCode,1024) //1kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(aob_shield)
registersymbol(ShieldCode)
registersymbol(aob_shield)
aobscan(AOBShield,A1 * * * * 0F 57 * F3 0F 11 * 5C 02 00 00 * * * 8B * * C2 * *)


ShieldCode: //this is allocated memory, you have read,write,execute access
originalcode:
mov [eax+0000025C],(float)5.0

exit:
jmp returnhere

AOBShield+8:
aob_shield:
jmp ShieldCode
nop
nop
nop
returnhere:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(ShieldCode)
aob_shield:
db F3 0F 11 80 5C 02 00 00
unregistersymbol(ShieldCode)
unregistersymbol(aob_shield)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"Invincibility + Touch Of Demise "</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(InviCode,1024) //1kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(aob_invi)
registersymbol(InviCode)
registersymbol(aob_invi)
aobscan(AOBInvi,8B * 8B * * 2C A3 07 00 F3 0F 10 * 34 02 00 00 0F 2F)


InviCode: //this is allocated memory, you have read,write,execute access
originalcode:
mov dword ptr [eax+00000234],1
movss xmm0,[eax+00000234]

exit:
jmp returnhere

AOBInvi+9:
aob_invi:
jmp InviCode
nop
nop
nop
returnhere:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(InviCode)
aob_invi:
db F3 0F 10 80 34 02 00 00
unregistersymbol(InviCode)
unregistersymbol(aob_invi)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Invisible Player/Textures? (TEST Code)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
"SineMora.exe"+C8FAC:
db 90 90 90 90 90


[DISABLE]
"SineMora.exe"+C8FAC:
db F3 0F 11 4B 18
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>aob_timer</Name>
      <Address>013E96E9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_hit_timer</Name>
      <Address>013E2D42</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_slow</Name>
      <Address>01395354</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_slow_start</Name>
      <Address>013D806B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_ammo</Name>
      <Address>01396CE8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_ammo_start</Name>
      <Address>013D8036</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_Upg</Name>
      <Address>013D10BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_Upg_start</Name>
      <Address>013D801E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_Upg_Hit</Name>
      <Address>013E589A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_invi</Name>
      <Address>013E541A</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Info about this table: 
Created by: ColdFusion73.
</Comments>
</CheatTable>
