<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>363</ID>
      <Description>"Activate All Hacks In This Group"</Description>
      <Options moBindActivation="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>59</ID>
          <Description>"Unlimited Health"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(health,gamedll_x64_rwdi.dll,0F 28 C6 EB 08 0F 2F F8)
health:
  db 90 90 90
health+A:
  db 90 90 90
registersymbol(health)

[DISABLE]
health:
  db 0F 28 C6
health+A:
  db 0F 28 C7
unregistersymbol(health)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Unlimited Durability"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(durability,gamedll_x64_rwdi.dll,76 11 48 8B 47 18)
durability:
  db 90 90
registersymbol(durability)

[DISABLE]
durability:
  db 76 11
unregistersymbol(durability)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Unlimited Stamina"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(stamina,gamedll_x64_rwdi.dll,76 05 0F 28 F8 EB 03 0F 28 F9 0F)
stamina:
  db 90 90
registersymbol(stamina)

[DISABLE]
stamina:
  db 76 05
unregistersymbol(stamina)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>362</ID>
          <Description>"Never Tire"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(tire,gamedll_x64_rwdi.dll,F3 0F 5C C7 F3 0F 11 43 10)
tire:
  db 90 90 90 90
registersymbol(tire)

[DISABLE]
tire:
  db F3 0F 5C C7
unregistersymbol(tire)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Unlimited Equipment"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(equipment,gamedll_x64_rwdi.dll,83 39 01 7E 39)
equipment+3:
  db 90 90
equipment+7:
  db 90 90
registersymbol(equipment)

[DISABLE]
equipment+3:
  db 7E 39
equipment+7:
  db FF CA
unregistersymbol(equipment)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>325</ID>
          <Description>"Unlimited Grappling Hook"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(grapple,gamedll_x64_rwdi.dll,F3 0F 5C C6 0F 2F C1 F3 0F 11 43) // should be unique
grapple:
  db 90 90 90 90
registersymbol(grapple)

[DISABLE]
grapple:
  db F3 0F 5C C6
unregistersymbol(grapple)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>320</ID>
          <Description>"Unlimited UV Flashlight"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(uvlight,gamedll_x64_rwdi.dll,F3 0F 5C C2 89 41 28)
uvlight:
  db 90 90 90 90
registersymbol(uvlight)

[DISABLE]
uvlight:
  db F3 0F 5C C2
unregistersymbol(uvlight)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>313</ID>
          <Description>"Unlimited Ammo"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(ammo,gamedll_x64_rwdi.dll,45 2B EF 49 8B D6)
ammo:
  db 90 90 90
registersymbol(ammo)

[DISABLE]
ammo:
  db 45 2B EF
unregistersymbol(ammo)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>309</ID>
          <Description>"No Reload"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(noreload,gamedll_x64_rwdi.dll,FF CA E8 AE EF A5 FF)
noreload:
  db 90 90
registersymbol(noreload)

[DISABLE]
noreload:
  db FF CA
unregistersymbol(noreload)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>353</ID>
          <Description>"Unlimited Crafting Materials"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(materials,gamedll_x64_rwdi.dll,41 2B F4 8B D6)
materials:
  db 90 90 90
registersymbol(materials)

[DISABLE]
materials:
  db 41 2B F4
unregistersymbol(materials)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>288</ID>
          <Description>"Easy Lock Picking"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(EasyLockAOB,gamedll_x64_rwdi.dll,F3 0F 10 4E 34 B1 01)
alloc(newmem,2048,EasyLockAOB)
label(returnhere)
label(originalcode)
label(exit)
registersymbol(EasyLockAOB)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [rsi+34],(float)900000
movss xmm1,[rsi+34]


exit:
jmp returnhere

EasyLockAOB:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
EasyLockAOB:
db F3 0F 10 4E 34
unregistersymbol(EasyLockAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>354</ID>
          <Description>"Instant Hold Actions"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(instantloot,gamedll_x64_rwdi.dll,0F 28 F7 F3 0F 11 B3 FC 01 00 00) // should be unique
instantloot:
  db 90 90 90
registersymbol(instantloot)

[DISABLE]
instantloot:
  db 0F 28 F7
unregistersymbol(instantloot)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>332</ID>
      <Description>"Super Run Speed"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(playerStats,gamedll_x64_rwdi.dll,09 89 70 14 F3 0F 10 40 10)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+A0B12C)

label(code)
label(return)
label(bypass)
label(runspeed)
label(stun)
label(throwmelee)
label(critical)

newmem:
  cmp r9,1250
  je runspeed
  cmp r9,4D0
  je stun
  cmp r9,190
  je throwmelee
  cmp r9,1510
  je critical
  jmp code

runspeed:
  mov [rax+10],(float)50.0
  jmp bypass

stun:
  mov [rax+10],(float)100.0 // default 1.0
  jmp bypass

throwmelee:
  mov [rax+10],(float)50.0 // default 4.0
  jmp bypass

critical:
  mov [rax+10],(float)100.0 // default 1.0
  jmp bypass

bypass:
  movss xmm0,[rax+10]
  jmp return

code:
  movss xmm0,[rax+10]
  jmp return

playerStats+04:
  jmp newmem
return:
registersymbol(playerStats)

[DISABLE]
playerStats+04:
  db F3 0F 10 40 10

unregistersymbol(playerStats)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>345</ID>
      <Description>"Unlimited Challenge Timer"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(challenge,gamedll_x64_rwdi.dll,F3 0F 58 83 F0 00 00 00 F3 0F 11 83 F0 00 00 00 48 8B)
challenge:
  db C7 83 F0 00 00 00 00 00 80 3F 90 90 90 90 90 90
registersymbol(challenge)

[DISABLE]
challenge:
  db F3 0F 58 83 F0 00 00 00 F3 0F 11 83 F0 00 00 00
unregistersymbol(challenge)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>328</ID>
      <Description>"Unlimited Potion Duration"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(potion,gamedll_x64_rwdi.dll,0F 28 F9 F3 0F 5C C7)
potion+3:
  db 90 90 90 90
registersymbol(potion)

[DISABLE]
potion+3:
  db F3 0F 5C C7
unregistersymbol(potion)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Set Inventory to 10"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(inventory,gamedll_x64_rwdi.dll,83 39 01 4C 8B E2)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+5CDCCA)

label(code)
label(return)

newmem:
  cmp dword ptr [rcx],#10
  ja code
  mov [rcx],#10

code:
  cmp dword ptr [rcx],01
  mov r12,rdx
  jmp return

inventory:
  jmp newmem
  nop
return:
registersymbol(inventory)

[DISABLE]
inventory:
  db 83 39 01 4C 8B E2

unregistersymbol(inventory)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>304</ID>
      <Description>"Invisibility"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(invisibility,gamedll_x64_rwdi.dll,73 73 48 85 D2)
invisibility:
  db 90 90
registersymbol(invisibility)

[DISABLE]
invisibility:
  db 73 73
unregistersymbol(invisibility)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>350</ID>
      <Description>"Slow Motion"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(slowmotion,engine_x64_rwdi.dll,F3 0F 10 80 48 0F 00 00)
alloc(newmem,$1000,"engine_x64_rwdi.dll"+289DA4)

label(code)
label(return)

newmem:

code:
  mov [rax+00000F48],(float)0.5
  movss xmm0,[rax+00000F48]
  jmp return

slowmotion:
  jmp code
  nop
  nop
  nop
return:
registersymbol(slowmotion)

[DISABLE]
slowmotion:
  db F3 0F 10 80 48 0F 00 00

unregistersymbol(slowmotion)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1088</ID>
      <Description>"Teleportation"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]

alloc(teleport,1024,engine_x64_rwdi.dll)
//--------------------------------------------------//
aobscanmodule(teleport_aob1,engine_x64_rwdi.dll,F3 0F 58 83 C4 00 00 00 48 8B 5C 24 40)
registersymbol(teleport_aob1)
aobscanmodule(waypoint_aob1,gamedll_x64_rwdi.dll,F3 0F 10 83 38 08 00 00 F3 0F 10 8B 3C 08 00 00)
registersymbol(waypoint_aob1)
//--------------------------------------------------//
label(current_X)
registersymbol(current_X)
label(current_Y)
registersymbol(current_Y)
label(current_Z)
registersymbol(current_Z)
//--------------------------------------------------//
label(saved_X)
registersymbol(saved_X)
label(saved_Y)
registersymbol(saved_Y)
label(saved_Z)
registersymbol(saved_Z)
label(savelocation_status)
registersymbol(savelocation_status)
label(gotosaved_status)
registersymbol(gotosaved_status)
//--------------------------------------------------//
label(waypoint_get_X)
label(returnhere_waypoint_get_X)
label(waypoint_X)
registersymbol(waypoint_X)
label(waypoint_get_Y)
label(returnhere_waypoint_get_Y)
label(waypoint_Y)
registersymbol(waypoint_Y)
label(waypoint_get_Z)
label(returnhere_waypoint_get_Z)
label(waypoint_Z)
registersymbol(waypoint_Z)
label(gotowaypoint_status)
registersymbol(gotowaypoint_status)
//--------------------------------------------------//
label(savelocation)
label(gotosaved)
label(gotowaypoint)
label(returnhere_teleport)
//--------------------------------------------------//
teleport:
cmp [savelocation_status],1
je savelocation
cmp [gotosaved_status],1
je gotosaved
cmp [gotowaypoint_status],1
je gotowaypoint
fld [rbx+BC]
fstp [current_X]
fld [rbx+C0]
fstp [current_Z]
fld [rbx+C4]
fstp [current_Y]
addss xmm0,[rbx+000000C4]
jmp returnhere_teleport
//--------------------------------------------------//
savelocation:
fld [rbx+BC]
fstp [saved_X]
fld [rbx+C0]
fstp [saved_Z]
fld [rbx+C4]
fstp [saved_Y]
mov [savelocation_status],0
jmp returnhere_teleport
//--------------------------------------------------//
gotosaved:
fld [saved_X]
fstp [rbx+BC]
fld [saved_Z]
fstp [rbx+C0]
fld [saved_Y]
fstp [rbx+C4]
mov [gotosaved_status],0
jmp returnhere_teleport
//--------------------------------------------------//
gotowaypoint:
fld [waypoint_X]
fstp [rbx+BC]
fld [waypoint_Z]
fstp [rbx+C0]
fld [waypoint_Y]
fstp [rbx+C4]
mov [gotowaypoint_status],0
jmp returnhere_teleport
//--------------------------------------------------//
waypoint_get_X:
movss xmm0,[rbx+00000838]
fld [rbx+838]
fstp [waypoint_X]
jmp returnhere_waypoint_get_X
//--------------------------------------------------//
waypoint_get_Z:
movss xmm1,[rbx+0000083C]
mov [rbx+83C],(float)200
fld [rbx+83C]
fstp [waypoint_Z]
jmp returnhere_waypoint_get_Z
//--------------------------------------------------//
waypoint_get_Y:
movss xmm0,[rbx+00000840]
fld [rbx+840]
fstp [waypoint_Y]
jmp returnhere_waypoint_get_Y
//--------------------------------------------------//
current_X:
dd 0
current_Y:
dd 0
current_Z:
dd 0
saved_X:
dd 0
saved_Y:
dd 0
saved_Z:
dd 0
savelocation_status:
dd 0
gotosaved_status:
dd 0
waypoint_X:
dd 0
waypoint_Y:
dd 0
waypoint_Z:
dd 0
gotowaypoint_status:
dd 0
//--------------------------------------------------//

teleport_aob1:
jmp teleport
nop
nop
nop
returnhere_teleport:

waypoint_aob1:
jmp waypoint_get_X
nop
nop
nop
returnhere_waypoint_get_X:

waypoint_aob1+8:
jmp waypoint_get_Z
nop
nop
nop
returnhere_waypoint_get_Z:

waypoint_aob1+19:
jmp waypoint_get_Y
nop
nop
nop
returnhere_waypoint_get_Y:

[Disable]

teleport_aob1:
db F3 0F 58 83 C4 00 00 00
unregistersymbol(teleport_aob1)

waypoint_aob1:
db F3 0F 10 83 38 08 00 00

waypoint_aob1+8:
db F3 0F 10 8B 3C 08 00 00

waypoint_aob1+19:
db F3 0F 10 83 40 08 00 00
unregistersymbol(waypoint_aob1)

unregistersymbol(current_X)
unregistersymbol(current_Z)
unregistersymbol(current_Y)
unregistersymbol(saved_X)
unregistersymbol(saved_Z)
unregistersymbol(saved_Y)
unregistersymbol(savelocation_status)
unregistersymbol(gotosaved_status)
unregistersymbol(waypoint_X)
unregistersymbol(waypoint_Z)
unregistersymbol(waypoint_Y)
unregistersymbol(gotowaypoint_status)

dealloc(teleport)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1089</ID>
          <Description>"Save Location"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>savelocation_status</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>56</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>1090</ID>
          <Description>"Go To Saved"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>gotosaved_status</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>57</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>1091</ID>
          <Description>"Go To Waypoint"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>gotowaypoint_status</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>48</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>1092</ID>
          <Description>"See Coordinates"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1093</ID>
              <Description>"Saved X"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>saved_X</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1094</ID>
              <Description>"Saved Y"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>saved_Y</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>1095</ID>
              <Description>"Saved Z"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>saved_Z</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>1096</ID>
                  <Description>"Waypoint X"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>waypoint_X</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1097</ID>
                  <Description>"Waypoint Z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>waypoint_Z</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1098</ID>
                      <Description>"Current X"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>current_X</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1099</ID>
                      <Description>"Current Z"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>current_Z</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1100</ID>
                      <Description>"Current Y"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>current_Y</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1101</ID>
                  <Description>"Waypoint Y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>waypoint_Y</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>245</ID>
      <Description>"Time of Day Controller"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(TODAOB,gamedll_x64_rwdi.dll,F3 0F 11 B3 A8 00 00 00 0f)
alloc(newmem,2048,TODAOB)
label(returnhere)
label(originalcode)
label(exit)
label(TimePoint)
registersymbol(TimePoint)
registersymbol(TODAOB)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [TimePoint],rbx

originalcode:
cmp [TimePoint+10],1
je exit
movss [rbx+000000A8],xmm6

exit:
jmp returnhere

TimePoint:


TODAOB:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
TODAOB:
db F3 0F 11 B3 A8 00 00 00
unregistersymbol(TimePoint)
unregistersymbol(TODAOB)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>247</ID>
          <Description>"Time Freeze"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>TimePoint+10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>246</ID>
          <Description>"Time of Day"</Description>
          <DropDownList DisplayValueAsItem="1">0:Midnight
0.292:Morning
0.5:Noon
0.834:Evening
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>TimePoint</Address>
          <Offsets>
            <Offset>A8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>80</ID>
      <Description>"Give 100 Backpack Slots"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(backpack,gamedll_x64_rwdi.dll,F3 0F 58 40 0C F3 0F 11 40 08 EB 27 49 8D 40 05)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+A0A788)

label(code)
label(return)

newmem:
  cmp r9,D50
  jne code
  mov [rax+0C],(float)100.0

code:
  addss xmm0,[rax+0C]
  jmp return

backpack:
  jmp newmem
return:
registersymbol(backpack)

[DISABLE]
backpack:
  db F3 0F 58 40 0C

unregistersymbol(backpack)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>305</ID>
      <Description>"The Level Up Hacks Below May Prevent You From Purchasing Survivor Ranked Weapons"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Instantly Level Up Agility/Power"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(autoLevel,gamedll_x64_rwdi.dll,03 44 0B 0C 39 44 0B 08 0F 82)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+A0CC1A)

label(code)
label(return)

newmem:

code:
  add eax,[rbx+rcx+0C]
  mov [rbx+rcx+08],eax
  cmp [rbx+rcx+08],eax
  jmp return

autoLevel:
  jmp code
  nop
  nop
  nop
return:
registersymbol(autoLevel)

[DISABLE]
autoLevel:
  db 03 44 0B 0C 39 44 0B 08

unregistersymbol(autoLevel)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"Instantly Level Up Survivor (slow)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(survivor,gamedll_x64_rwdi.dll,8B 50 68 01 78 68)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+D11FB)

label(code)
label(return)

newmem:

code:
  mov edx,[rax+68]
//mov edi,[rax+70]
  add [rax+68],edi
  jmp return

survivor:
  jmp code
  nop
return:
registersymbol(survivor)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
survivor:
  db 8B 50 68 01 78 68

unregistersymbol(survivor)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+D11FB

"gamedll_x64_rwdi.dll"+D11D6: 48 83 78 50 00        -  cmp qword ptr [rax+50],00
"gamedll_x64_rwdi.dll"+D11DB: 74 1A                 -  je gamedll_x64_rwdi.dll+D11F7
"gamedll_x64_rwdi.dll"+D11DD: 48 8B 48 58           -  mov rcx,[rax+58]
"gamedll_x64_rwdi.dll"+D11E1: 48 85 C9              -  test rcx,rcx
"gamedll_x64_rwdi.dll"+D11E4: 74 11                 -  je gamedll_x64_rwdi.dll+D11F7
"gamedll_x64_rwdi.dll"+D11E6: 48 8B 01              -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+D11E9: FF 90 40 07 00 00     -  call qword ptr [rax+00000740]
"gamedll_x64_rwdi.dll"+D11EF: 84 C0                 -  test al,al
"gamedll_x64_rwdi.dll"+D11F1: 0F 85 87 00 00 00     -  jne gamedll_x64_rwdi.dll+D127E
"gamedll_x64_rwdi.dll"+D11F7: 48 8B 43 40           -  mov rax,[rbx+40]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+D11FB: 8B 50 68              -  mov edx,[rax+68]
"gamedll_x64_rwdi.dll"+D11FE: 01 78 68              -  add [rax+68],edi
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+D1201: 80 3D 63 D5 80 01 00  -  cmp byte ptr [gamedll_x64_rwdi.dll+18DE76B],00
"gamedll_x64_rwdi.dll"+D1208: 75 25                 -  jne gamedll_x64_rwdi.dll+D122F
"gamedll_x64_rwdi.dll"+D120A: 40 84 ED              -  test bpl,bpl
"gamedll_x64_rwdi.dll"+D120D: 74 20                 -  je gamedll_x64_rwdi.dll+D122F
"gamedll_x64_rwdi.dll"+D120F: 48 8B 05 B2 D7 80 01  -  mov rax,[gamedll_x64_rwdi.dll+18DE9C8]
"gamedll_x64_rwdi.dll"+D1216: 48 85 C0              -  test rax,rax
"gamedll_x64_rwdi.dll"+D1219: 74 14                 -  je gamedll_x64_rwdi.dll+D122F
"gamedll_x64_rwdi.dll"+D121B: 48 8B 88 58 02 00 00  -  mov rcx,[rax+00000258]
"gamedll_x64_rwdi.dll"+D1222: 48 85 C9              -  test rcx,rcx
"gamedll_x64_rwdi.dll"+D1225: 74 08                 -  je gamedll_x64_rwdi.dll+D122F
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"Instantly Level Up Survivor"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(survival,gamedll_x64_rwdi.dll,03 44 0B 0C 39 44 0B 08)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+A0CD2A)

label(code)
label(return)

newmem:

code:
  add eax,[rbx+rcx+0C]
//mov [rbx+rcx+08],eax
  cmp [rbx+rcx+08],eax
  jmp return

survival:
  jmp code
  nop
  nop
  nop
return:
registersymbol(survival)

[DISABLE]
survival:
  db 03 44 0B 0C 39 44 0B 08
unregistersymbol(survival)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>376</ID>
      <Description>"Please Backup Your Save Before Resetting Survivor Rank"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>375</ID>
          <Description>"Reset Survivor Rank"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(survivorRank,gamedll_x64_rwdi.dll,0F B7 48 74 89 4B 6C)
aobscanmodule(survivorXP,gamedll_x64_rwdi.dll,8B 48 68 89 4B 4C)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+38F0E2)
alloc(newmem2,$1000,"gamedll_x64_rwdi.dll"+38F0ED)

label(code)
label(return)
label(code2)
label(return2)

newmem:

code:
  mov word ptr [rax+74],1
  movzx ecx,word ptr [rax+74]
  mov [rbx+6C],ecx
  jmp return

survivorRank:
  jmp code
  nop
  nop
return:
registersymbol(survivorRank)

newmem2:

code2:
  mov [rax+68],0
  mov ecx,[rax+68]
  mov [rbx+4C],ecx
  jmp return2

survivorXP:
  jmp code2
  nop
return2:
registersymbol(survivorXP)

[DISABLE]
survivorRank:
  db 0F B7 48 74 89 4B 6C
survivorXP:
  db 8B 48 68 89 4B 4C
unregistersymbol(survivorRank)
dealloc(newmem)
unregistersymbol(survivorXP)
dealloc(newmem2)

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>346</ID>
      <Description>"Ignore This Stuff"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>60</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(findXP,gamedll_x64_rwdi.dll,43 8B 4C 3B 08) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+7C1A33)

label(code)
label(return)

newmem:

code:
  mov ecx,[r11+r15+08]
  jmp return

findXP:
  jmp code
return:
registersymbol(findXP)

[DISABLE]
findXP:
  db 43 8B 4C 3B 08

unregistersymbol(findXP)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>338</ID>
          <Description>"Player Stats 2"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(playerStats2,gamedll_x64_rwdi.dll,20 89 70 14 F3 0F 10 40 10)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+A0B323)

label(code)
label(return)
label(bypass)
label(value1)
label(value2)
label(value3)
label(value4)
label(value5)

newmem:
  cmp r9,AD0
  je value1
  cmp r9,B10
  je value2
  cmp r9,B50
  je value3
  cmp r9,D50
  je value4
  cmp r9,D90
  je value5
  jmp code

value1:
  mov [rax+10],(float)100.0
  jmp bypass

value2:
  mov [rax+10],(float)100.0
  jmp bypass

value3:
  mov [rax+10],(float)100.0
  jmp bypass

value4:
  mov [rax+10],(float)100.0
  jmp bypass

value5:
  mov [rax+10],(float)103.3
  jmp bypass

bypass:
  movss xmm0,[rax+10]
  jmp return

code:
  movss xmm0,[rax+10]
  jmp return

playerStats2+04:
  jmp newmem
return:
registersymbol(playerStats2)

[DISABLE]
playerStats2+04:
  db F3 0F 10 40 10

unregistersymbol(playerStats2)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>343</ID>
          <Description>"Player Stats 2"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(playerStats2,gamedll_x64_rwdi.dll,F3 0F 58 63 10)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+A23286)

label(code)
label(return)

newmem:
  cmp r9,82
  jne code
  mov [rbx+10],(float)0.5

code:
  addss xmm4,[rbx+10]
  jmp return

playerStats2:
  jmp newmem
return:
registersymbol(playerStats2)

[DISABLE]
playerStats2:
  db F3 0F 58 63 10

unregistersymbol(playerStats2)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>371</ID>
          <Description>"Survivor Points???"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(playerlevel,gamedll_x64_rwdi.dll,F3 41 0F 10 41 08 C3)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+A2321A)

label(code)
label(return)

newmem:

code:
  movss xmm0,[r9+08]
  jmp return

playerlevel:
  jmp code
  nop
return:
registersymbol(playerlevel)

[DISABLE]
playerlevel:
  db F3 41 0F 10 41 08

unregistersymbol(playerlevel)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>agility</Name>
      <Address>7FEE56DFA83</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>detect</Name>
      <Address>7FEE6EFF1CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>autoLevel</Name>
      <Address>7FEE9BDD7BA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>challenge</Name>
      <Address>7FEE9137FA1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InstaLoogAOB</Name>
      <Address>7FEE9356D66</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>playerStats</Name>
      <Address>7FEE77EB128</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address>7FEE78F8D80</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>durability</Name>
      <Address>7FEE752ADBB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stamina</Name>
      <Address>7FEE7A21786</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>tire</Name>
      <Address>7FEE7A148FF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>grapple</Name>
      <Address>7FEE7AAE472</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>uvlight</Name>
      <Address>7FEE79C9895</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo</Name>
      <Address>7FEE7A06E92</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>noreload</Name>
      <Address>7FEE7ACB81B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>materials</Name>
      <Address>7FEE7A07CBB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>EasyLockAOB</Name>
      <Address>7FEE75953F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>instantloot</Name>
      <Address>7FEE7C06D63</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>potion</Name>
      <Address>7FEE928210C</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
