<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>39</ID>
      <Description>"Walk Speed +"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(speed,4)
alloc(newmem2,128) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [speed],(float)1

originalcode2:
fld dword ptr [056DAAC4]
fmul dword ptr [speed]
fstp dword ptr [speed]
fld dword ptr [056DAAC4]
fadd dword ptr [speed]

exit2:
jmp returnhere2

"recettear.exe"+83A1B:
jmp newmem2
nop
returnhere2:

alloc(newmem,128) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [speed],(float)1

originalcode:
fld dword ptr [056DAABC]
fmul dword ptr [speed]
fstp dword ptr [speed]
fld dword ptr [056DAABC]
fadd dword ptr [speed]

exit:
jmp returnhere

"recettear.exe"+839E7:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(speed)
dealloc(newmem2)
"recettear.exe"+83A1B:
fld dword ptr [056DAAC4]
//Alt: db D9 05 C4 AA 6D 05
dealloc(newmem)
"recettear.exe"+839E7:
fld dword ptr [056DAABC]
//Alt: db D9 05 BC AA 6D 05
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"Attack Speed +"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,128) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+00000E94],edi

originalcode2:
cmp [esi+00000E94],edi

exit2:
jmp returnhere2

"recettear.exe"+984A6:
jmp newmem2
nop
returnhere2:

alloc(newmem,128) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [esi+00000E94],04

originalcode:
cmp dword ptr [esi+00000E94],04

exit:
jmp returnhere

"recettear.exe"+983E2:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"recettear.exe"+984A6:
cmp [esi+00000E94],edi
//Alt: db 39 BE 94 0E 00 00
dealloc(newmem)
"recettear.exe"+983E2:
cmp dword ptr [esi+00000E94],04
//Alt: db 83 BE 94 0E 00 00 04
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Time of Day"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,128) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
alloc(timeofday,4)
registersymbol(timeofday)

/*
Time of Day - Code:
0 = Morning
...
6 = Night
*/

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[timeofday]
mov [esi+2C3F0],eax
pop eax

originalcode:
//inc [esi+0002C3F0]

exit:
jmp returnhere

"recettear.exe"+629AD:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(timeofday)
unregistersymbol(timeofday)

"recettear.exe"+629AD:
inc [esi+0002C3F0]
//Alt: db FF 86 F0 C3 02 00
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>41</ID>
          <Description>"- Code (default: morning)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>timeofday</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Succeed Any Sale"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,128) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,[005C6BB8]
mov [0730B574],eax

exit:
jmp returnhere

"recettear.exe"+5FF9A:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"recettear.exe"+5FF9A:
mov eax,[005C6BB8]
//Alt: db A1 B8 6B 5C 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
