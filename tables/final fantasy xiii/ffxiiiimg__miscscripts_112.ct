<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>268</ID>
      <Description>"[Battle Scripts]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>231</ID>
          <Description>"6 ATB Bars (activate before battle)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(readATBBarsBeforeBattleStartAOB,8B 84 8A B4 0D 00 00 89)
registersymbol(readATBBarsBeforeBattleStartAOB)

label(b6ATBLeaderOnly)
registersymbol(b6ATBLeaderOnly)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(set6atbbars)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[edx+ecx*4+db4]
cmp byte ptr [b6ATBLeaderOnly],1
jne set6atbbars
test esi,esi
jnz originalcode

set6atbbars:
cmp ebx,1
jne originalcode
cmp ecx,3
jne originalcode
mov eax,#60

originalcode:
//mov eax,[edx+ecx*4+00000DB4]

exit:
jmp returnhere

///
b6ATBLeaderOnly:
db 1
///

readATBBarsBeforeBattleStartAOB: //"ffxiiiimg.exe"+768088:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
readATBBarsBeforeBattleStartAOB: //"ffxiiiimg.exe"+768088:
db 8B 84 8A B4 0D 00 00
//Alt: mov eax,[edx+ecx*4+00000DB4]
unregistersymbol(readATBBarsBeforeBattleStartAOB)

unregistersymbol(b6ATBLeaderOnly)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>232</ID>
              <Description>"Apply to"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Leader Only
0:Party
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>b6ATBLeaderOnly</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>267</ID>
          <Description>"Freeze Chain Bar"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(chainBarSubAOB,2B 4D 08 8B 55 F8 89 4A 18 8B 45 F8)
registersymbol(chainBarSubAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ebp+8],0

originalcode6:
sub ecx,[ebp+08]
mov edx,[ebp-08]

exit6:
jmp returnhere6

///

chainBarSubAOB: //"ffxiiiimg.exe"+C319F:
jmp newmem6
nop
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
chainBarSubAOB: //"ffxiiiimg.exe"+C319F:
db 2B 4D 08 8B 55 F8
//Alt: sub ecx,[ebp+08]
//Alt: mov edx,[ebp-08]
unregistersymbol(chainBarSubAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>266</ID>
          <Description>"Easy Full Chain"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(chainPercentChkFullAOB,8B 48 0C 89 4D E4 8B 55 E4 3B 55 F4)
registersymbol(chainPercentChkFullAOB)
aobscan(chainBarChkNotFullJmp,7C 0E 8B ** ** ** ** ** A1 ** ** ** ** 89)
registersymbol(chainBarChkNotFullJmp)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[ebp-4]
cmp [eax+c],ecx
jge originalcode
mov [eax+c],ecx

originalcode:
mov ecx,[eax+0C]
mov [ebp-1C],ecx

exit:
jmp returnhere

///

chainPercentChkFullAOB: //"ffxiiiimg.exe"+C348B:
jmp newmem
nop
returnhere:

chainBarChkNotFullJmp: //"ffxiiiimg.exe"+C2E3E:
db 90 90




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chainPercentChkFullAOB: //"ffxiiiimg.exe"+C348B:
db 8B 48 0C 89 4D E4
//Alt: mov ecx,[eax+0C]
//Alt: mov [ebp-1C],ecx
unregistersymbol(chainPercentChkFullAOB)
chainBarChkNotFullJmp: //"ffxiiiimg.exe"+C2E3E:
db 7C 0E
//Alt: jnge chainBarChkNotFullJmp+10 //ffxiiiimg.exe+C2E4E
unregistersymbol(chainBarChkNotFullJmp)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>274</ID>
      <Description>"[Camera Scripts]"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(camDistReadAOB,F3 0F 11 45 FC F3 0F 10 45 0C F3 0F 59 45 08)
registersymbol(camDistReadAOB)

label(bCamDistMod)
registersymbol(bCamDistMod)
label(bOneZoom)
registersymbol(bOneZoom)
label(pCamInfo1)
registersymbol(pCamInfo1)
label(fStandCamDist)
registersymbol(fStandCamDist)
label(fMoveCamDist)
registersymbol(fMoveCamDist)
label(fCamDistInterval)
registersymbol(fCamDistInterval)
label(fCamDistMinThreshold)
registersymbol(fCamDistMinThreshold)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(setmycamdist)
label(addpressed)
label(subtractpressed)
label(endingmod)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCamInfo1],eax

cmp byte ptr [bCamDistMod],1
jne originalcode

pushad
push 22 //Page Down
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je addpressed

pushad
push 21 //Page Up
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je subtractpressed

setmycamdist:
movss xmm0,[fStandCamDist+edx*4]
comiss xmm0,[fCamDistMinThreshold] //[eax+edx*4+104]
ja endingmod
movss xmm0,[fCamDistMinThreshold] //[eax+edx*4+104]
movss [fStandCamDist+edx*4],xmm0
jmp endingmod

addpressed:
fld dword ptr [fStandCamDist+edx*4]
fadd dword ptr [fCamDistInterval]
fstp dword ptr [fStandCamDist+edx*4]
jmp setmycamdist

subtractpressed:
fld dword ptr [fStandCamDist+edx*4]
fsub dword ptr [fCamDistInterval]
fstp dword ptr [fStandCamDist+edx*4]
jmp setmycamdist

endingmod:
cmp byte ptr [bOneZoom],1
jne originalcode
push edx
xor edx,1
movss [fStandCamDist+edx*4],xmm0
pop edx

originalcode:
movss [ebp-04],xmm0

exit:
jmp returnhere

///
bCamDistMod:
db 0
bOneZoom:
db 0
pCamInfo1:
dd 0
fStandCamDist:
dd (float)2.25
fMoveCamDist:
dd (float)4.0625
fCamDistInterval:
dd (float)0.0625
fCamDistMinThreshold:
dd (float)0.875
///

camDistReadAOB: //"ffxiiiimg.exe"+22378E:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
camDistReadAOB: //"ffxiiiimg.exe"+22378E:
db F3 0F 11 45 FC
//Alt: movss [ebp-04],xmm0
unregistersymbol(camDistReadAOB)

unregistersymbol(bCamDistMod)
unregistersymbol(bOneZoom)
unregistersymbol(pCamInfo1)
unregistersymbol(fStandCamDist)
unregistersymbol(fMoveCamDist)
unregistersymbol(fCamDistInterval)
unregistersymbol(fCamDistMinThreshold)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>303</ID>
          <Description>"No Cam Helper"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(horizontalCamAngleAutoFixAOB,F3 0F 11 00 8B 4D FC F3 0F 10 01)
registersymbol(horizontalCamAngleAutoFixAOB)

horizontalCamAngleAutoFixAOB: //"ffxiiiimg.exe"+225441:
db 90 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
horizontalCamAngleAutoFixAOB: //"ffxiiiimg.exe"+225441:
db F3 0F 11 00
//Alt: movss [eax],xmm0
unregistersymbol(horizontalCamAngleAutoFixAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>283</ID>
          <Description>"Cam Distance Mod (Page Up/Page Down/Home)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(movDistanceReadAOB,F3 0F 10 84 01 ** ** ** ** F3 0F 11 84 24 E8 00 00 00)
registersymbol(movDistanceReadAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[fMoveCamDist]

originalcode2:
movss [esp+000000E8],xmm0

exit2:
jmp returnhere2

///

movDistanceReadAOB+9: //"ffxiiiimg.exe"+23503F:
jmp newmem2
nop
nop
nop
nop
returnhere2:

bCamDistMod:
db 1

bOneZoom:
db 0




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
movDistanceReadAOB+9: //"ffxiiiimg.exe"+23503F:
db F3 0F 11 84 24 E8 00 00 00
//Alt: movss [esp+000000E8],xmm0
unregistersymbol(movDistanceReadAOB)
bCamDistMod:
db 0
bOneZoom:
db 0
fStandCamDist:
dd (float)2.25
fMoveCamDist:
dd (float)4.0625
fCamDistInterval:
dd (float)0.0625
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>308</ID>
              <Description>"One Zoom"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bOneZoom:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bOneZoom:
db 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>278</ID>
              <Description>"Standing Cam Distance"</Description>
              <VariableType>Float</VariableType>
              <Address>fStandCamDist</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>36</Key>
                  </Keys>
                  <Value>(Game Default Standing Cam Distance)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>279</ID>
              <Description>"Moving Cam Distance"</Description>
              <VariableType>Float</VariableType>
              <Address>fMoveCamDist</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>36</Key>
                  </Keys>
                  <Value>(Game Default Moving Cam Distance)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>277</ID>
              <Description>"fCamDistInterval"</Description>
              <VariableType>Float</VariableType>
              <Address>fCamDistInterval</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>282</ID>
              <Description>"fCamDistMinThreshold"</Description>
              <VariableType>Float</VariableType>
              <Address>fCamDistMinThreshold</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>288</ID>
          <Description>"Cam Pan Mod"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(camPanReadAOB,8B 45 EC F3 0F 10 02)
registersymbol(camPanReadAOB)

label(fMyCamPan)
registersymbol(fMyCamPan)
label(pCamPan)
registersymbol(pCamPan)
label(bCamKeyPressed)
registersymbol(bCamKeyPressed)
label(bCamPanCounter)
registersymbol(bCamPanCounter)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(resetcamkey)
label(setcentercam)
label(setrightcam)
label(setleftcam)
label(setcampana)
label(setcampanb)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebp-14]//
movss xmm0,[edx]//
mov [pCamPan],eax
pushfd

pushad
push 'F'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne resetcamkey
cmp byte ptr [bCamKeyPressed],00
jne originalcode
mov byte ptr [bCamKeyPressed],01

cmp byte ptr [bCamPanCounter],1
je setcentercam
cmp byte ptr [bCamPanCounter],2
je setrightcam
cmp byte ptr [bCamPanCounter],0
je setleftcam
jmp originalcode

setcentercam:
mov dword ptr [fMyCamPan],(float)0
jmp setcampana

setrightcam:
mov dword ptr [fMyCamPan],(float)-1.0
jmp setcampana

setleftcam:
mov dword ptr [fMyCamPan],(float)1.0
jmp setcampana

setcampana:
inc byte ptr [bCamPanCounter]
cmp byte ptr [bCamPanCounter],2
jle setcampanb
mov byte ptr [bCamPanCounter],0

setcampanb:
fld dword ptr [fMyCamPan]
fstp dword ptr [eax+f4]
jmp originalcode

resetcamkey:
mov byte ptr [bCamKeyPressed],00
jmp setcampanb

originalcode:
popfd//
//mov eax,[ebp-14]
//movss xmm0,[edx]

exit:
jmp returnhere

///
fMyCamPan:
dd (float)0
pCamPan:
dd 0
bCamKeyPressed:
db 1
bCamPanCounter:
db 2
///

camPanReadAOB: //"ffxiiiimg.exe"+2241BC:
jmp newmem
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
camPanReadAOB: //"ffxiiiimg.exe"+2241BC:
db 8B 45 EC F3 0F 10 02
//Alt: mov eax,[ebp-14]
//Alt: movss xmm0,[edx]
unregistersymbol(camPanReadAOB)

unregistersymbol(fMyCamPan)
unregistersymbol(pCamPan)
unregistersymbol(bCamKeyPressed)
unregistersymbol(bCamPanCounter)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>290</ID>
              <Description>"Position"</Description>
              <Options moHideChildren="1"/>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Left
0:Center
-1:Right
</DropDownList>
              <VariableType>Float</VariableType>
              <Address>fMyCamPan</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>106</Key>
                    <Key>32</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>106</Key>
                    <Key>111</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>106</Key>
                    <Key>109</Key>
                  </Keys>
                  <Value>-1</Value>
                  <ID>2</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>312</ID>
                  <Description>"bCamKeyPressed"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>bCamKeyPressed</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>313</ID>
                  <Description>"bCamPanCounter"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>bCamPanCounter</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>106</Key>
                        <Key>32</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>106</Key>
                        <Key>109</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>106</Key>
                        <Key>111</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>2</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>291</ID>
              <Description>"Cam Pan"</Description>
              <VariableType>Float</VariableType>
              <Address>pCamPan</Address>
              <Offsets>
                <Offset>F4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>275</ID>
          <Description>"Current Cam Distance"</Description>
          <VariableType>Float</VariableType>
          <Address>pCamInfo1</Address>
          <Offsets>
            <Offset>10C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>294</ID>
          <Description>"Current Cam Pan"</Description>
          <VariableType>Float</VariableType>
          <Address>pCamInfo1</Address>
          <Offsets>
            <Offset>F4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>284</ID>
          <Description>"Game Default Standing Cam Distance"</Description>
          <VariableType>Float</VariableType>
          <Address>pCamInfo1</Address>
          <Offsets>
            <Offset>104</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>276</ID>
          <Description>"Game Default Moving Cam Distance"</Description>
          <VariableType>Float</VariableType>
          <Address>pCamInfo1</Address>
          <Offsets>
            <Offset>108</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>280</ID>
          <Description>"Vertical Angle"</Description>
          <VariableType>Float</VariableType>
          <Address>pCamInfo1</Address>
          <Offsets>
            <Offset>1D4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>281</ID>
          <Description>"Horizontal Angle"</Description>
          <VariableType>Float</VariableType>
          <Address>pCamInfo1</Address>
          <Offsets>
            <Offset>1E0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"[Misc. Scripts]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>234</ID>
          <Description>"Fake Gil (Ctrl)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 11 //Ctrl
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov dword ptr [ebp-04],#100000000

originalcode:
mov eax,[ebp-04]
mov esp,ebp

exit:
jmp returnhere

///

gilReadAOB+1a: //"ffxiiiimg.exe"+76B6D8:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
gilReadAOB+1a: //"ffxiiiimg.exe"+76B6D8:
db 8B 45 FC 8B E5
//Alt: mov eax,[ebp-04]
//Alt: mov esp,ebp
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>220</ID>
          <Description>"Inf. Item"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(setZeroItemQuantityAOB,77 ** 8B 45 FC C7 00)
registersymbol(setZeroItemQuantityAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ebp+c],0
//mov [ecx+10],1//
jmp setZeroItemQuantityAOB+2f

originalcode:
mov eax,[ebp-04]
mov [eax],00000000

exit:
jmp returnhere

///

setZeroItemQuantityAOB+2: //"ffxiiiimg.exe"+757C8C:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
setZeroItemQuantityAOB+2: //"ffxiiiimg.exe"+757C8C:
db 8B 45 FC C7 00 00 00 00 00
//Alt: mov eax,[ebp-04]
//Alt: mov [eax],00000000
unregistersymbol(setZeroItemQuantityAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>222</ID>
          <Description>"Free Upgrade (should be used together with Inf. Item)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(itemQuantityCheckOnUpgradeAOB,8B 91 F8 00 00 00 89 55 E0 8B 45 FC)
registersymbol(itemQuantityCheckOnUpgradeAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[ebp-4] //[ecx+000000F8]
add edx,#10
mov [ebp-1c],edx
mov eax,[ebp-24]
mov [eax+d0],edx

originalcode:
mov edx,[ecx+000000F8]

exit:
jmp returnhere

///

itemQuantityCheckOnUpgradeAOB: //"ffxiiiimg.exe"+59D95D:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
itemQuantityCheckOnUpgradeAOB: //"ffxiiiimg.exe"+59D95D:
db 8B 91 F8 00 00 00
//Alt: mov edx,[ecx+000000F8]
unregistersymbol(itemQuantityCheckOnUpgradeAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>217</ID>
          <Description>"Ignore CP"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(CPCmpZero1AOB,83 B9 C0 44 00 00 00 0F 84)
registersymbol(CPCmpZero1AOB)
aobscan(CPCmpZero2AOB,83 B8 C0 44 00 00 00 75)
registersymbol(CPCmpZero2AOB)
aobscan(CPReadOnUse2AOB,8B 88 C0 44 00 00 2B)
registersymbol(CPReadOnUse2AOB)
aobscan(CPReadOnUse1AOB,8B 11 89 54 24 24 8B ** ** ** ** ** ** 8B)
registersymbol(CPReadOnUse1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)

label(newmem32)
label(returnhere32)
label(originalcode32)
label(exit32)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp ecx,0

originalcode:
//cmp dword ptr [ecx+000044C0],00

exit:
jmp returnhere

///

newmem2:
cmp eax,0

originalcode2:
//cmp dword ptr [eax+000044C0],00

exit2:
jmp returnhere2

///

newmem11:
mov ecx,[eax+000044C0]
test ecx,ecx
jnz originalcode11
//mov [esp+14],ecx
mov ecx,a

originalcode11:
//mov ecx,[eax+000044C0]

exit11:
jmp returnhere11

///

newmem32:
mov edx,[ecx]
test edx,edx
jnz originalcode32
mov edx,a

originalcode32:
//mov edx,[ecx]
mov [esp+24],edx

exit32:
jmp returnhere32

///

CPCmpZero1AOB: //"ffxiiiimg.exe"+57CFD1:
jmp newmem
nop
nop
returnhere:

CPCmpZero2AOB: //"ffxiiiimg.exe"+57E6C5:
jmp newmem2
nop
nop
returnhere2:

CPReadOnUse2AOB: //"ffxiiiimg.exe"+57D2AC:
jmp newmem11
nop
returnhere11:

CPReadOnUse1AOB: //"ffxiiiimg.exe"+57D217:
jmp newmem32
nop
returnhere32:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
CPCmpZero1AOB: //"ffxiiiimg.exe"+57CFD1:
db 83 B9 C0 44 00 00 00
//Alt: cmp dword ptr [ecx+000044C0],00
unregistersymbol(CPCmpZero1AOB)
CPCmpZero2AOB: //"ffxiiiimg.exe"+57E6C5:
db 83 B8 C0 44 00 00 00
//Alt: cmp dword ptr [eax+000044C0],00
unregistersymbol(CPCmpZero2AOB)
CPReadOnUse2AOB: //"ffxiiiimg.exe"+57D2AC:
db 8B 88 C0 44 00 00
//Alt: mov ecx,[eax+000044C0]
unregistersymbol(CPReadOnUse2AOB)
CPReadOnUse1AOB: //"ffxiiiimg.exe"+57D217:
db 8B 11 89 54 24 24
//Alt: mov edx,[ecx]
//Alt: mov [esp+24],edx
unregistersymbol(CPReadOnUse1AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Walk Key (Shift)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(runPushAOB,6A 02 8B 4D 08 E8 ** ** ** ** EB 0A 6A 01 8B 4D 08 E8 ** ** ** ** C6)
registersymbol(runPushAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(shiftpressed)
label(shiftnotpressd)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 10 //Shift
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je shiftpressed
jne shiftnotpressd

shiftpressed:
push 01
jmp originalcode

shiftnotpressd:
push 02
jmp originalcode

originalcode:
//push 02
mov ecx,[ebp+08]

exit:
jmp returnhere

///

runPushAOB: //"ffxiiiimg.exe"+21A579:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
runPushAOB: //"ffxiiiimg.exe"+21A579:
db 6A 02 8B 4D 08
//Alt: push 02
//Alt: mov ecx,[ebp+08]
unregistersymbol(runPushAOB)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>237</ID>
      <Description>"[Highlighted Item Pointers]"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(highlightedItemQuantityReadAOB,8B 42 10 89 41 10 8B 45 08)
registersymbol(highlightedItemQuantityReadAOB)
aobscan(highlightedAccessoryEXPReadAOB,8B 48 14 89 8D ** ** ** ** 8B 95 ** ** ** ** 89 55 EC)
registersymbol(highlightedAccessoryEXPReadAOB)
aobscan(highlightedWeaponEXPReadAOB,8B 48 14 89 8D ** ** ** ** 8B 95 ** ** ** ** 89 55 E8)
registersymbol(highlightedWeaponEXPReadAOB)

label(pHighlightedItemInfo1)
registersymbol(pHighlightedItemInfo1)
label(pHighlightedItemInfo2)
registersymbol(pHighlightedItemInfo2)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHighlightedItemInfo1],edx
//clean string
xor eax,eax
@@:
cmp byte ptr [edx+eax],00
je @f
inc eax
cmp eax,10
jl @b
@@:
cmp eax,10
je originalcode
@@:
mov byte ptr [edx+eax],00
mov byte ptr [ecx+eax],00
inc eax
cmp eax,10
jl @b
//

originalcode:
mov eax,[edx+10]
mov [ecx+10],eax

exit:
jmp returnhere

///

newmem2:
mov [pHighlightedItemInfo2],eax

originalcode2:
mov ecx,[eax+14]
mov [ebp-000000AC],ecx

exit2:
jmp returnhere2

///

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHighlightedItemInfo2],eax

originalcode6:
mov ecx,[eax+14]
mov [ebp-000000B4],ecx

exit6:
jmp returnhere6

///
pHighlightedItemInfo1:
dd 0
pHighlightedItemInfo2:
dd 0
///

highlightedItemQuantityReadAOB: //"ffxiiiimg.exe"+757ED5:
jmp newmem
nop
returnhere:

highlightedAccessoryEXPReadAOB: //"ffxiiiimg.exe"+6478C8:
jmp newmem2
nop
nop
nop
nop
returnhere2:

highlightedWeaponEXPReadAOB: //"ffxiiiimg.exe"+6463E5:
jmp newmem6
nop
nop
nop
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
highlightedItemQuantityReadAOB: //"ffxiiiimg.exe"+757ED5:
db 8B 42 10 89 41 10
//Alt: mov eax,[edx+10]
//Alt: mov [ecx+10],eax
unregistersymbol(highlightedItemQuantityReadAOB)
highlightedAccessoryEXPReadAOB: //"ffxiiiimg.exe"+6478C8:
db 8B 48 14 89 8D 54 FF FF FF
//Alt: mov ecx,[eax+14]
//Alt: mov [ebp-000000AC],ecx
unregistersymbol(highlightedAccessoryEXPReadAOB)
highlightedWeaponEXPReadAOB: //"ffxiiiimg.exe"+6463E5:
db 8B 48 14 89 8D 4C FF FF FF
//Alt: mov ecx,[eax+14]
//Alt: mov [ebp-000000B4],ecx
unregistersymbol(highlightedWeaponEXPReadAOB)

unregistersymbol(pHighlightedItemInfo1)
unregistersymbol(pHighlightedItemInfo2)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>239</ID>
          <Description>"ID 1 (for Items/Components/Key Items)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">=== [items] ============
it_potion:Potion
it_phenxtal:Phoenix Down
it_elixir:Elixir
it_libra:Librascope
it_antidote:Antidote
it_holywater:Holywater
it_sedative:Painkiller
it_tonkati:Mallet
it_stinkwater:Foul Liquid
it_wax:Wax
it_powersmoke:Fortisol
it_barsmoke:Aegisol
it_sneaksmoe:Deceptisol
it_tpsmoke:Ethersol
=== [components] ============
material_m000:Begrimed Claw
material_m001:Bestail Claw
material_m002:Gargantuan Claw
material_m003:Hellish Tallon
material_m004:Shattered Bone
material_m005:Sturdy Bone
material_m006:Otherworldly Bone
material_m007:Ancient Bone
material_m008:Material_M008
material_m009:Moistened Scale
material_m010:Seapetal Scale
material_m011:Abyssal Scale
material_m012:Seaking'S Beard
material_m013:Segmented Carapace
material_m014:Iron Shell
material_m015:Armored Shell
material_m016:Regenerating Carapace
material_m017:Chipped Fang
material_m018:Wicked Fang
material_m019:Monstrous Fang
material_m020:Sinister Fang
material_m021:Severed Wing
material_m022:Scaled Wing
material_m023:Abonimable Wing
material_m024:Menacing Wings
material_m025:Moited Tail
material_m026:Barbed Tail
material_m027:Diabolical Tail
material_m028:Entrancing Tail
material_m029:Torn Leather
material_m030:Thickend Hide
material_m031:Smooth Hide
material_m032:Supple Leather
material_m033:Gummy Oil
material_m034:Fragrant Oil
material_m035:Medicanal Oil
material_m036:Esteric Oil
material_m037:Scraggly Wool
material_m038:Rough Wool
material_m039:Thick Wool
material_m040:Fluffy Wool
material_m041:Bomb Ashes
material_m042:Bomb Fragment
material_m043:Bomb Sheel
material_m044:Bomb Core
material_m045:Murky Ooze
material_m046:Vibrant Ooze
material_m047:Transperent Ooze
material_m048:Wonder Gel
material_m049:Fractured Horn
material_m050:Spined Horn
material_m051:Fiendish Horn
material_m052:Infernal Horn
material_m053:Strange Fluid
material_m054:Enigamatic Fluid
material_m055:Mysterous Fluid
material_m056:Ineffable Fluid
material_m057:Cie'Th Tear
material_m058:Tear Of Frustratoin
material_m059:Tear Of Remorce
material_m060:Tear Or Woe
material_m061:Chocoblo Plume
material_m062:Chocobo Tail Feather
material_m063:Green Needle
material_m064:Dawnlight Dew
material_m065:Dusklight Dew
material_m066:Gloom Stalk
material_m067:Sunpetal
material_m068:Red Mycelium
material_m069:Blue Mycelium
material_m070:White Mycelium
material_m071:Black Mycelium
material_m072:Succulent Fruit
material_m073:Malodouros fruit
material_m074:Moonblossom Seed
material_m075:Sunblossom Seed
material_m076:Perfume
material_j000:Insulated Cabling
material_j001:Fiber-Optic Cable
material_j002:Liquid Crystal Lens
material_j003:Ring Joint
material_j004:Epicyclic Gear
material_j005:Crankshaft
material_j006:Electrolytic Capacitor
material_j007:Flywheel
material_j008:Sprocket
material_j009:Actuator
material_j010:Spark Plug
material_j011:Iridium Plug
material_j012:Needle Valve
material_j013:Butterfly Valve
material_j014:Analog Circet
material_j015:Digital Circut
material_j016:Gyroscope
material_j017:Electrode
material_j018:Ceramic Armor
material_j019:Chobham Armor
material_j020:Radial Bearing
material_j021:Thrust Bearing
material_j022:Solenoid
material_j023:Mobius Coil
material_j024:Tungesten Tube
material_j025:Titanium Tube
material_j026:Passive Detector
material_j027:Active Detector
material_j028:Transformer
material_j029:Amplifer
material_j030:Carburetor
material_j031:Supercharger
material_j032:Piezoelectric Element
material_j033:Cystal Oscillator
material_j034:Paraffin Oil
material_j035:Silicone Oil
material_j036:Synthetic Muscle
material_j037:Turboprop
material_j038:Turbo Jet
material_j039:Tesla Turbine
material_j040:Polymer Emulsion
material_j041:Ferroelectric Film
material_j042:Super Conductor
material_j043:Perfect Conductor
material_j044:Particle Accelerator
material_j045:Ulracompact Reactor
material_j046:Credit Chip
material_j047:Incentive Chip
material_j048:Cactar Doll
material_j049:Moogle Puppet
material_j050:Tonberry Figure
material_j051:Plush Chocobo
material_o000:Millerite
material_o001:Rhodochrosite
material_o002:Cobaltie
material_o003:Persovskite
material_o004:Uraninite
material_o005:Minar Stone
material_o006:Scarletite
material_o007:Adamantite
material_o008:Dark Matter
material_o009:Trapezohedron
material_o010:Gold Dust
material_o011:Gold Nugget
material_o012:Platinum Ingot
=== [keyitems] ============
key_c_alexa:Alexander Eidolith
key_c_baha:Bahamut Eidolith
key_c_bryn:Byrnhildr Eidolith
key_c_hecat:Hecatoncheir Eidolith
key_c_odin:Odin Eidolith
key_c_shiva:Shiva Eidolith
key_commun:Com Unit
key_ctool:Omni-Kit
key_field_00:Gysahl Reins
key_field_01:Power Cable
key_field_02:Trochoid Gear
key_field_03:Metal Plate
key_field_04:Battery Pack
key_field_05:Aspheric Lense
key_ggear:Grav-con Unit
key_knife:Survival Knife
key_receiver:Datalog
key_shop_00:Unicorn Mart
key_shop_01:Eden Pharmaceuticals
key_shop_02:Up In Arms
key_shop_03:Plautu'S Workshop
key_shop_05:Gigamesh Inc
key_shop_06:B&amp;W Outfitters
key_shop_07:Magical Moments
key_shop_08:Moogleworks
key_shop_09:Sanctom Labs
key_shop_10:Creature Comforts
key_shop_11:The Motherlode
key_shop_12:Lenora'S Garage
key_shop_13:R&amp;D Depot
key_tears:Serah's Tear
</DropDownList>
          <VariableType>String</VariableType>
          <Length>16</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pHighlightedItemInfo1</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>238</ID>
              <Description>"Quantity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pHighlightedItemInfo1</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>242</ID>
          <Description>"ID 2 (fot Weapons/Accessories)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">[weapons]
wea_fan_001:Bladed Lance
wea_fan_002:Glaive
wea_fan_003:Dragoon Lance
wea_fan_004:Dragonhorn
wea_fan_005:Partisan
wea_fan_006:Rhomphaia
wea_fan_007:Shamanic Spear
wea_fan_008:Heretic's Halberd
wea_fan_009:Punisher
wea_fan_010:Banescissor Spear
wea_fan_011:Pandoran Spear
wea_fan_012:Calamity Spear
wea_fan_013:Taming Pole
wea_fan_014:Venus Gospel
wea_fan_015:Gae Bolg
wea_fan_016:Gungnir
wea_fan_017:Kain's Lance(from Bladed Lance)
wea_fan_018:Kain's Lance(from Dragoon Lance)
wea_fan_019:Kain's Lance(from Partisan)
wea_fan_020:Kain's Lance(from Shamanic Spear)
wea_fan_021:Kain's Lance(from Punisher)
wea_fan_022:Kain's Lance(from Pandoran Spear)
wea_fan_023:Kain's Lance(from Taming Pole)
wea_fan_024:Kain's Lance(from Gae Bolg)
wea_hop_001:Airwing
wea_hop_002:Skycutter
wea_hop_003:Hawkeye
wea_hop_004:Eagletalon
wea_hop_005:Otshirvani
wea_hop_006:Urubutsin
wea_hop_007:Ninurta
wea_hop_008:Jatayu
wea_hop_009:Vidofnir
wea_hop_010:Hresvelgr
wea_hop_011:Simurgh
wea_hop_012:Tezcatlipoca
wea_hop_013:Malphas
wea_hop_014:Naberius
wea_hop_015:Alicanto
wea_hop_016:Caladrius
wea_hop_017:Nue(from Airwing)
wea_hop_018:Nue(from Hawkeye)
wea_hop_019:Nue(from Otshirvani)
wea_hop_020:Nue(from Ninurta)
wea_hop_021:Nue(from Vidofnir)
wea_hop_022:Nue(from Simurgh)
wea_hop_023:Nue(from Malphas)
wea_hop_024:Nue(from Alicanto)
wea_lig_001:Blazefire Saber
wea_lig_002:Flamberge
wea_lig_003:Axis Blade
wea_lig_004:Enkindler
wea_lig_005:Edged Carbine
wea_lig_006:Razor Carbine
wea_lig_007:Lifesaber
wea_lig_008:Peacemaker
wea_lig_009:Gladius
wea_lig_010:Helter-skelter
wea_lig_011:Organyx
wea_lig_012:Apocalypse
wea_lig_013:Hauteclaire
wea_lig_014:Durandal
wea_lig_015:Lionheart
wea_lig_016:Ultima Weapon
wea_lig_017:Omega Weapon(from Blazefire Saber)
wea_lig_018:Omega Weapon(from Axis Blade)
wea_lig_019:Omega Weapon(from Edged Carbine)
wea_lig_020:Omega Weapon(from Lifesaber)
wea_lig_021:Omega Weapon(from Gladius)
wea_lig_022:Omega Weapon(from Organyx)
wea_lig_023:Omega Weapon(from Hauteclaire)
wea_lig_024:Omega Weapon(from Lionheart)
wea_saz_001:Vega 42s
wea_saz_002:Altairs
wea_saz_003:Spica Defenders
wea_saz_004:Sirius Sidearms
wea_saz_005:Deneb Duellers
wea_saz_006:Canopus AMPs
wea_saz_007:Rigels
wea_saz_008:Polaris Specials
wea_saz_009:Aldebarabs
wea_saz_010:Sadalmeliks
wea_saz_011:Pleiades Hi-Powers
wea_saz_012:Hyades Magnums
wea_saz_013:Antares Deluxes
wea_saz_014:Fomalhaut Elites
wea_saz_015:Procyons
wea_saz_016:Betelgeuse Customs
wea_saz_017:Total Eclipse(from Vega 42s)
wea_saz_018:Total Eclipse(from Spica Defenders)
wea_saz_019:Total Eclipse(from Deneb Duellers)
wea_saz_020:Total Eclipse(from Rigels)
wea_saz_021:Total Eclipse(from Aldebarabs)
wea_saz_022:Total Eclipse(from Pleiades Hi-Powers)
wea_saz_023:Total Eclipse(from Antares Deluxes)
wea_saz_024:Total Eclipse(from Procyons)
wea_sno_001:Wild Bear
wea_sno_002:Feral Pride
wea_sno_003:Paladin
wea_sno_004:Winged Saint
wea_sno_005:Rebel Heart
wea_sno_006:Warrior's Emblem
wea_sno_007:Power Circle
wea_sno_008:Battle Standard
wea_sno_009:Feymark
wea_sno_010:Soul Blazer
wea_sno_011:Sacrificial Circle
wea_sno_012:Indomitus
wea_sno_013:Unsetting Sun
wea_sno_014:Midnight Sun
wea_sno_015:Umbra
wea_sno_016:Solaris
wea_sno_017:Save the Queen(from Wild Bear)
wea_sno_018:Save the Queen(from Paladin)
wea_sno_019:Save the Queen(from Rebel Heart)
wea_sno_020:Save the Queen(from Power Circle)
wea_sno_021:Save the Queen(from Feymark)
wea_sno_022:Save the Queen(from Sacrificial Circle)
wea_sno_023:Save the Queen(from Unsetting Sun)
wea_sno_024:Save the Queen(from Umbra)
wea_van_001:Binding Rod
wea_van_002:Hunter's Rod
wea_van_003:Tigerclaw
wea_van_004:Wyrmfang
wea_van_005:Healer's Staff
wea_van_006:Physician's Staff
wea_van_007:Pearlwing Staff
wea_van_008:Brightwing Staff
wea_van_009:Rod of Thorns
wea_van_010:Orochi Rod
wea_van_011:Mistilteinn
wea_van_012:Erinye's Cane
wea_van_013:Belladonna Wand
wea_van_014:Malboro Wand
wea_van_015:Heavenly Axis
wea_van_016:Abraxas
wea_van_017:Nirvana(from Binding Rod)
wea_van_018:Nirvana(from Tigerclaw)
wea_van_019:Nirvana(from Healer's Staff)
wea_van_020:Nirvana(from Pearlwing Staff)
wea_van_021:Nirvana(from Rod of Thorns)
wea_van_022:Nirvana(from Mistilteinn)
wea_van_023:Nirvana(from Belladonna Wand)
wea_van_024:Nirvana(from Heavenly Axis)
[accessories]
acc_000_000:Iron Bangle
acc_000_001:Silver Bangle
acc_000_002:Tungsten Bangle
acc_000_003:Titanium Bangle
acc_000_004:Gold Bangle
acc_000_005:Mythril Bangle
acc_000_006:Platinum Bangle
acc_000_007:Diamond Bangle
acc_000_008:Adamant Bangle
acc_000_009:Wurtzite Bangle
acc_000_100:Power Wristband
acc_000_101:Brawler's Wristband
acc_000_102:Warrior's Wristband
acc_000_103:Power Glove
acc_000_104:Kaiser Knuckles
acc_000_200:Magician's Mark
acc_000_201:Shaman's Mark
acc_000_202:Sorcerer's Mark
acc_000_203:Weirding Glyph
acc_000_204:Magistral Crest
acc_000_300:Black Belt
acc_000_301:General's Belt
acc_000_302:Champion's Belt
acc_000_400:Rune Bracelet
acc_000_401:Witch's Bracelet
acc_000_402:Magus's Bracelet
acc_000_500:Royal Armlet
acc_000_501:Imperial Armlet
acc_001_000:Ember Ring
acc_001_001:Blaze Ring
acc_001_002:Salamandrine Ring
acc_002_000:Frost Ring
acc_002_001:Icicle Ring
acc_002_002:Boreal Ring
acc_003_000:Spark Ring
acc_003_001:Fulmen Ring
acc_003_002:Raijin Ring
acc_004_000:Aqua Ring
acc_004_001:Riptide Ring
acc_004_002:Nereid Ring
acc_005_000:Zephyr Ring
acc_005_001:Gale Ring
acc_005_002:Sylphid Ring
acc_006_000:Clay Ring
acc_006_001:Siltstone Ring
acc_006_002:Gaian Ring
acc_007_000:Entite Ring
acc_009_000:Giant's Glove
acc_009_001:Warlord's Glove
acc_010_000:Glass Buckle
acc_010_001:Tektite Buckle
acc_011_000:Metal Armband
acc_011_001:Ceramic Armband
acc_012_000:Serenity Sachet
acc_012_001:Safeguard Sachet
acc_013_000:Glass Orb
acc_013_001:Dragonfly Orb
acc_014_000:Star Pendant
acc_014_001:Starfall Pendant
acc_015_000:Pearl Necklace
acc_015_001:Gemstone Necklace
acc_016_000:Warding Talisman
acc_016_001:Hexbane Talisman
acc_017_000:Pain Dampener
acc_017_001:Pain Deflector
acc_018_000:White Cape
acc_018_001:Effulgent Cape
acc_019_000:Rainbow Anklet
acc_019_001:Moonbow Anklet
acc_020_000:Cherub's Crown
acc_020_001:Seraph's Crown
acc_023_000:Ribbon
acc_023_001:Supper Ribbon
acc_025_000:Guardian Amulet
acc_025_001:Shield Talisman
acc_026_000:Auric Amulet
acc_026_001:Soulfont Talisman
acc_027_000:Watchman's Amulet
acc_027_001:Shrouding Talisman
acc_028_000:Hero's Amulet
acc_028_001:Morale Talisman
acc_029_000:Saint's Amulet
acc_029_001:Blessed Talisman
acc_030_000:Hermes Sandals
acc_030_001:Sprint Shoes
acc_031_000:Flamebane Brooch
acc_031_001:Flameshield Talisman
acc_032_000:Frostbane Brooch
acc_032_001:Frostshield Talisman
acc_033_000:Sparkbane Brooch
acc_033_001:Sparkshield Talisman
acc_034_000:Aquabane Brooch
acc_034_001:Aquashield Talisman
acc_035_000:Zealot's Amulet
acc_035_001:Battle Talisman
acc_036_000:Tetradic Crown
acc_036_001:Tetradic Tiara
acc_037_000:Whistlewind Scarf
acc_037_001:Aurora Scarf
acc_038_000:Nimbletoe Boots
acc_039_000:Collector Catalog
acc_039_001:Connoisseur Catalog
acc_040_000:Gold Watch
acc_040_001:Champion's Badge
acc_040_002:Survivalist Catalog
acc_041_000:Hunter's Friend
acc_041_001:Speed Sash
acc_041_002:Energy Sash
acc_042_001:Genji Glove
acc_045_000:Growth Egg
acc_046_000:Twenty-sided Die
acc_047_000:Fire Charm
acc_048_000:Ice Charm
acc_049_000:Lightning Charm
acc_050_000:Water Charm
acc_051_000:Wind Charm
acc_052_000:Earth Charm
acc_053_000:Doctor's Code
acc_054_000:Goddess's Favor
</DropDownList>
          <VariableType>String</VariableType>
          <Length>16</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pHighlightedItemInfo2</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>245</ID>
              <Description>"Equipped?"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>pHighlightedItemInfo2</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>248</ID>
              <Description>"Lv."</Description>
              <VariableType>Byte</VariableType>
              <Address>pHighlightedItemInfo2</Address>
              <Offsets>
                <Offset>11</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>243</ID>
              <Description>"EXP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pHighlightedItemInfo2</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>246</ID>
                  <Description>"..."</Description>
                  <VariableType>2 Bytes</VariableType>
                  <Address>pHighlightedItemInfo2</Address>
                  <Offsets>
                    <Offset>12</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>244</ID>
              <Description>"Mod (+??)"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pHighlightedItemInfo2</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>gilReadAOB</Name>
      <Address>00B6B6BE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>battlePartyHPReadCallRetAOB</Name>
      <Address>0048DB89</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CPReadOnMenuAccessAOB</Name>
      <Address>00B6844E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGil</Name>
      <Address>03B3003A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pParty</Name>
      <Address>03B3003E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemQuantityCheckOnUpgradeAOB</Name>
      <Address>0099D95D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>setZeroItemQuantityAOB</Name>
      <Address>00B57C8A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>battleHPReadAOB</Name>
      <Address>0046E323</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>battleHPCalAOB</Name>
      <Address>0046E71B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bUndead</Name>
      <Address>3F2F00B3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFullATB</Name>
      <Address>3F2F00B4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBPartyHP</Name>
      <Address>3F2F00B5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CPCmpZero1AOB</Name>
      <Address>0097CFD1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CPCmpZero2AOB</Name>
      <Address>0097E6C5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CPReadOnUse2AOB</Name>
      <Address>0097D2AC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CPReadOnUse1AOB</Name>
      <Address>0097D217</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>runPushAOB</Name>
      <Address>0061A579</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>readATBBarsBeforeBattleStartAOB</Name>
      <Address>00B68088</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>b6ATBLeaderOnly</Name>
      <Address>3E490038</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TPWriteAOB</Name>
      <Address>00B62D46</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTP</Name>
      <Address>3E4A0016</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>chainBarSubAOB</Name>
      <Address>004C319F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>chainPercentChkFullAOB</Name>
      <Address>004C348B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>chainBarChkNotFullJmp</Name>
      <Address>004C2E3E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedItemQuantityReadAOB</Name>
      <Address>00B57ED5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedAccessoryEXPReadAOB</Name>
      <Address>00A478C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedWeaponEXPReadAOB</Name>
      <Address>00A463E5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHighlightedItemInfo1</Name>
      <Address>03B40039</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHighlightedItemInfo2</Name>
      <Address>03B4003D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>camDistReadAOB</Name>
      <Address>0062378E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCamDistMod</Name>
      <Address>3DF700BE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bOneZoom</Name>
      <Address>3DF700BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCamInfo1</Name>
      <Address>3DF700C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fStandCamDist</Name>
      <Address>3DF700C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMoveCamDist</Name>
      <Address>3DF700C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fCamDistInterval</Name>
      <Address>3DF700CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fCamDistMinThreshold</Name>
      <Address>3DF700D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>horizontalCamAngleAutoFixAOB</Name>
      <Address>00625441</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>movDistanceReadAOB</Name>
      <Address>00635036</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5554931#5554931
</Comments>
</CheatTable>
