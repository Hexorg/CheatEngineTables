<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"NOX"</Description>
      <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
globalalloc(_NOX,$4000)

_NOX+3FC0:
mov eax,_NOX
mov [eax],eax
ret

createThread(_NOX+3FC0)
 
[DISABLE]
{

-note

di &lt;- base

isplayer
[di+08] &amp; 04 != 0 -&gt; player

mana-
[[di+2ec]+04] -&gt; mana max
[[di+2ec]+08] -&gt; mana now

hp-
[[di+22c]+04] -&gt; hp max
[[di+22c]+00] -&gt; hp now


money -
[[di+2ec]+114]+874] $ target
[[di+2ec]+114]+878] $ now


many encrypted game values...

}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"mana quick regen"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
AOBScan(_qmana,75 0b 6a 01 57 e8 ?? ?? ?? ?? 83 c4 08 5f 5e 5b c3)
_qmana+1:
db 00

// following only for debugging
//_NOX+100:
//readmem(_qmana-9,5)
//mov [_NOX+10],edi
//jmp _qmana-4

//_qmana-9:
//jmp _NOX+100
 
 
[DISABLE]
AOBScan(_qmana,75 00 6a 01 57 e8 ?? ?? ?? ?? 83 c4 08 5f 5e 5b c3)
_qmana+1:
db 0b

// following only for debugging
//_qmana-9:
//readmem(_NOX+100,5)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"hp quick regen"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
AOBScan(_qmana,75 11 6a 01 57 e8 ?? ?? ?? ?? 83)
_qmana+1:
db 00


[DISABLE]
AOBScan(_qmana,75 00 6a 01 57 e8 ?? ?? ?? ?? 83)
_qmana+1:
db 11

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"shop item cost 1"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//                00 01 02 03 04 05
AOBScan(_shopcost,8b ?? 24 04 8b 4c 24 08 ?? 8b ?? ?? ?? 00 00 8b ?? ?? ?? 00 00 8b ?? ?? ?? 00 00 3b ?? 73 ?? c7)
_shopcost+04:
db 31 c9 41 90

[DISABLE]
AOBScan(_shopcost,8b ?? 24 04 31 c9 41 90 ?? 8b ?? ?? ?? 00 00 8b ?? ?? ?? 00 00 8b ?? ?? ?? 00 00 3b ?? 73 ?? c7)
_shopcost+04:
db 8b 4c 24 08
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"OPTIONs"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"custom screen size / 1920x1080"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//              00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15
AOBScan(_screen,e9 ?? ?? ?? ?? c7 05 ?? ?? ?? ?? ?? ?? 00 00 c7 05 ?? ?? ?? ?? ?? ?? 00 00 e9 ?? 01 00 00)
_screen+0b:
dd (int)1920
_screen+15:
dd (int)1080

[DISABLE]

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"custom screen size / 1366x768"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//              00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15
AOBScan(_screen,e9 ?? ?? ?? ?? c7 05 ?? ?? ?? ?? ?? ?? 00 00 c7 05 ?? ?? ?? ?? ?? ?? 00 00 e9 ?? 01 00 00)
_screen+0b:
dd (int)1366
_screen+15:
dd (int)768

[DISABLE]

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"restore screen size / 800x600"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//              00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15
AOBScan(_screen,e9 ?? ?? ?? ?? c7 05 ?? ?? ?? ?? ?? ?? 00 00 c7 05 ?? ?? ?? ?? ?? ?? 00 00 e9 ?? 01 00 00)
_screen+0b:
dd (int)800
_screen+15:
dd (int)600

[DISABLE]

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Use Big Font (disk copy)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
--
-- from Zanzer's code http://forum.cheatengine.org/viewtopic.php?p=5601685#5601685
AppPath = rawget(_G,'AppPath') or io.popen("PowerShell Get-Process -Id "..getOpenedProcessID().." ^| Format-List Path"):read("*all"):gsub("^%s*Path : (.-)%s*","%1");

function exist(f) return os.rename(f,f) and true or false end
function copy(a,b)
  a,b = assert(io.open(a,'rb')),assert(io.open(b,'wb'))
  b:write(a:read('*a'))
  a:close()
  b:close()
end
function font(small,backup,check)
  if AppPath then
    local f = small and 'small.fnt' or 'large.fnt'
    if backup then f = f..[[.ori]] end
    f = AppPath:match([[.*\]])..f
    return not check and f or exist(f)
  end
end
{$asm}
[ENABLE]
{$lua}
if font(true,false,true) and not font(true,true,true) then
  copy(font(true),font(true,true))
end
copy(font(false),font(true))
{$asm}

[DISABLE]

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"Restore small Font (disk copy)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
--
-- from Zanzer's code http://forum.cheatengine.org/viewtopic.php?p=5601685#5601685
AppPath = rawget(_G,'AppPath') or io.popen("PowerShell Get-Process -Id "..getOpenedProcessID().." ^| Format-List Path"):read("*all"):gsub("^%s*Path : (.-)%s*","%1");

function exist(f) return os.rename(f,f) and true or false end
function copy(a,b)
  a,b = assert(io.open(a,'rb')),assert(io.open(b,'wb'))
  b:write(a:read('*a'))
  a:close()
  b:close()
end
function font(small,backup,check)
  if AppPath then
    local f = small and 'small.fnt' or 'large.fnt'
    if backup then f = f..[[.ori]] end
    f = AppPath:match([[.*\]])..f
    return not check and f or exist(f)
  end
end
{$asm}
[ENABLE]
{$lua}
if font(true,true,true) then copy(font(true,true),font(true)) end
{$asm}
[DISABLE]

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"DEACTIVATED"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"-- move unused cheat here  --"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//              00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15

[DISABLE]
//              00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"(failed) itm use"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//              00 01 02 03 04 05
AOBScan(_itmuse,8a 4d 04 8a 55 03)
_NOX+200:
mov   cl,[ebp+4]
mov   dl,cl
mov   [ebp+3],dl
ret

_itmuse:
call _NOX+200
nop


[DISABLE]


// game.exe+719E0 - 8A 4D 04              - mov cl,[ebp+04]
// game.exe+719E3 - 8A 55 03              - mov dl,[ebp+03]

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_NOX</Name>
      <Address>00290000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>--
-- auto attach and activate, only effective execute the script before game luanch

local target = [[game.exe]]
getAutoAttachList().Text = target
onOpenProcess = function(pid)
  if pid == getProcessIDFromProcessName(target) then
    local mr = getAddressList().getMemoryRecordByDescription('NOX')
    if mr~=nil then
      local t = createTimer()
      t.Interval = 5000
      t.OnTimer = function(sender)
        mr.Active = true
        sender.Destroy()
      end
    end
    onOpenProcess = nil
  end
end





-- ignore
function dummyxx()
AppPath = rawget(_G,'AppPath') or io.popen("PowerShell Get-Process -Id "..getOpenedProcessID().." ^| Format-List Path"):read("*all"):gsub("^%s*Path : (.-)%s*","%1");

function exist(f) return os.rename(f,f) and true or false end
function copy(a,b)
  a,b = assert(io.open(a,'rb')),assert(io.open(b,'wb'))
  b:write(a:read('*a'))
  a:close()
  b:close()
end
function font(small,backup,check)
  if AppPath then
    local f = small and 'small.fnt' or 'large.fnt'
    if backup then f = f..[[.ori]] end
    f = AppPath:match([[.*\]])..f
    return not check and f or exist(f)
  end
end


if font(true,false,true) and not font(true,true,true) then
  copy(font(true),font(true,true))
end
copy(font(false),font(true))

end


</LuaScript>
</CheatTable>
