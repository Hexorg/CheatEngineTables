<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Score Multiplier (x100)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(aoblabel)
registersymbol(aoblabel)
aobscan(AOB1,01 58 14 8B 57 14)

{============================================================================}

newmem: //this is allocated memory, you have read,write,execute access
originalcode:
add [eax+14],64
mov edx,[edi+14]

exit:
jmp returnhere

AOB1:
aoblabel:
jmp newmem
nop
returnhere:

{============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
aoblabel:
db 01 58 14 8B 57 14
unregistersymbol(aoblabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Always Have Protection (Invisible Shield)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(aoblabel)
registersymbol(aoblabel)
aobscan(AOB1,8A 54 24 5C 88 51 4D 8B 4C 24 48)

{============================================================================}

newmem: //this is allocated memory, you have read,write,execute access
originalcode:
mov [ecx+4D],1
mov ecx,[esp+48]

exit:
jmp returnhere

AOB1:
aoblabel:
jmp newmem
nop
nop
returnhere:

{============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
aoblabel:
db 88 51 4D 8B 4C 24 48
unregistersymbol(aoblabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Score Multiplier (x100) FIXED"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(aoblabel2)
registersymbol(aoblabel2)
aobscan(AOB2,01 58 14 8B 57 14)

{============================================================================}

newmem: //this is allocated memory, you have read,write,execute access
originalcode:
add [eax+14],64
mov edx,[edi+14]

exit:
jmp returnhere

AOB2:
aoblabel2:
jmp newmem
nop
returnhere:

{============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
aoblabel2:
db 01 58 14 8B 57 14
unregistersymbol(aoblabel2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Always Have Protection (Invisible Shield) FIXED"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(aoblabel)
registersymbol(aoblabel)
aobscan(AOB1,8A 54 24 5C 88 51 4D 8B 4C 24 48)

{============================================================================}

newmem: //this is allocated memory, you have read,write,execute access
originalcode:
mov [ecx+4D],1
mov ecx,[esp+48]

exit:
jmp returnhere

AOB1+4:
aoblabel:
jmp newmem
nop
nop
returnhere:

{============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
aoblabel:
db 88 51 4D 8B 4C 24 48
unregistersymbol(aoblabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Invincibility"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.2
//24th October, 2012
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(label3)
registersymbol(label3)
aobscan(aob3,80 7D 4D 01 75 15)

newmem: //this is allocated memory, you have read,write,execute access
mov byte ptr [ebp+4D],01

originalcode:
cmp byte ptr [ebp+4D],01
jne aob3+1B

exit:
jmp returnhere

aob3:
label3:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
label3:
db 80 7D 4D 01 75 15
unregistersymbol(label3)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Unlimited Jump and Dash"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.2
//24th October, 2012
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(label4)
registersymbol(label4)
aobscan(aob4,83 7E 20 00 76 59)

newmem: //this is allocated memory, you have read,write,execute access
mov [esi+20],2

originalcode:
cmp dword ptr [esi+20],00
jna aob4+5F

exit:
jmp returnhere

aob4:
label4:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
label4:
db 83 7E 20 00 76 59
unregistersymbol(label4)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>Info about this table: 
Created by: 416c6558.
</Comments>
</CheatTable>
