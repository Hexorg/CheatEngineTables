<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"health + instant build"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(here)
label(go)
globalalloc(temp,4)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [temp],eax
mov eax,[esi+04]
test eax,eax
jz here
mov eax,[eax+e8]
test eax,eax
jz here
cmp dword ptr [eax+188],0
jne here
pushad
pushfd
push 'B'
call GetAsyncKeyState
shr ax,0F
cmp ax,1
jne go
popfd
popad
fstp st
mov dword ptr [esi+14],(float)10000
mov dword ptr [esi+10],(float)10000
mov eax,[temp]
je 00552982
jmp returnhere
here:
mov eax,[temp]
fstp dword ptr [esi+10]
//mov dword ptr [esi+10],0
je 00552982
jmp returnhere
go:
popfd
popad
mov eax,[temp]
fstp dword ptr [esi+10]
je 00552982

exit:
jmp returnhere

"k2.exe"+152975:
jmp newmem
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"k2.exe"+152975:
fstp dword ptr [esi+10]
je 00552982
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"health + instant build + one hit kill"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(here)
label(go)
globalalloc(temp,4)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [temp],eax
mov eax,[esi+04]
test eax,eax
jz here
mov eax,[eax+e8]
test eax,eax
jz here
cmp dword ptr [eax+188],0
jne here
pushad
pushfd
push 'B'
call GetAsyncKeyState
shr ax,0F
cmp ax,1
jne go
popfd
popad
fstp st
mov dword ptr [esi+14],(float)10000
mov dword ptr [esi+10],(float)10000
mov eax,[temp]
je 00552982
jmp returnhere
here:
mov eax,[temp]
fstp dword ptr [esi+10]
mov dword ptr [esi+10],0
je 00552982
jmp returnhere
go:
popfd
popad
mov eax,[temp]
fstp dword ptr [esi+10]
je 00552982

exit:
jmp returnhere

"k2.exe"+152975:
jmp newmem
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"k2.exe"+152975:
fstp dword ptr [esi+10]
je 00552982
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"morale"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(here)
globalalloc(temp,4)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [temp],eax
mov eax,[esi+04]
test eax,eax
jz here
mov eax,[eax+e8]
test eax,eax
jz here
cmp dword ptr [eax+188],0
jne here
fstp st
mov eax,[esi+60]
mov [esi+5c],eax
mov eax,[temp]
fld dword ptr [esi+5C]
jmp returnhere
here:
mov eax,[temp]
fstp dword ptr [esi+5C]
fld dword ptr [esi+5C]

exit:
jmp returnhere

"k2.exe"+16856E:
jmp newmem
nop
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"k2.exe"+16856E:
fstp dword ptr [esi+5C]
fld dword ptr [esi+5C]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"wood 1 try this first"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fstp dword ptr [ecx+7C]
mov dword ptr [ecx+7C],(float)100
mov byte ptr [ecx+00000089],01

exit:
jmp returnhere

"k2.exe"+1EC290:
jmp newmem
nop
nop
nop
nop
nop
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"k2.exe"+1EC290:
fstp dword ptr [ecx+7C]
mov byte ptr [ecx+00000089],01
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Gold 1 try this first"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fstp dword ptr [eax]
mov dword ptr [eax],(float)10000
mov eax,[esi+44]

exit:
jmp returnhere

"k2.exe"+DF47E:
jmp newmem
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"k2.exe"+DF47E:
fstp dword ptr [eax]
mov eax,[esi+44]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"wood 2 try this only if above wood option do not work"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fld dword ptr [ecx+7C]
mov dword ptr [ecx+7c],(float)100
fucompp 

exit:
jmp returnhere

"k2.exe"+1EC273:
jmp newmem
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"k2.exe"+1EC273:
fld dword ptr [ecx+7C]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Gold 2 try this only if above gold option do not work"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fstp dword ptr [ecx+00000080]
mov dword ptr [ecx+00000080],(float)100000
exit:
jmp returnhere

"k2.exe"+1EC29A:
jmp newmem
nop
returnhere:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"k2.exe"+1EC29A:
fstp dword ptr [ecx+00000080]
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>temp</Name>
      <Address>003B0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
