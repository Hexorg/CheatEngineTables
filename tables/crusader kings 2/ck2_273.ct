<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"GOLD"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>ck2.exe+00B28498</Address>
      <Offsets>
        <Offset>10A</Offset>
        <Offset>30</Offset>
        <Offset>E4</Offset>
        <Offset>28</Offset>
        <Offset>90</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Construction Pointer"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>ck2.exe+00B28488</Address>
      <Offsets>
        <Offset>1C</Offset>
        <Offset>1E8</Offset>
        <Offset>20</Offset>
        <Offset>40C</Offset>
        <Offset>10</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Fast Construction"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
sub eax,999999
mov [esi+14],edx

originalcode:
sub eax,[esi+1C]
mov [esi+14],edx

exit:
jmp returnhere

"ck2.exe"+1432ED:
jmp newmem
nop
returnhere:

 
 
[DISABLE]
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
sub eax,[esi+1C]
mov [esi+14],edx

exit:
jmp returnhere

"ck2.exe"+1432ED:
jmp newmem
nop
returnhere:

//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
