<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(enableAOB6,8B F0 8B 83 A4 01 00 00 83 C4 08 3B C6)
label(enableAOB6_jmp)
registersymbol(enableAOB6_jmp)
aobscan(enableAOB2,8B 40 04 50 E8 ** ** ** ** 85 C0 74 ** 8B 40 04 C2 08 00 CC 8B)
label(enableAOB2_jmp)
registersymbol(enableAOB2_jmp)
aobscan(enableAOB1,8B F0 85 F6 74 ** F3)
label(enableAOB1_jmp)
registersymbol(enableAOB1_jmp)

label(pAmmoClip)
label(pAmmoPouch)
label(pHero)
label(vCenterCamera)
registersymbol(pAmmoClip)
registersymbol(pAmmoPouch)
registersymbol(pHero)
registersymbol(vCenterCamera)

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
//mov eax,ebx
//add eax,000001A4
//mov [pAmmoClip],eax
//mov [pAmmoClip],ebx
//cmp [esp+8],0
cmp [pHero],ebp
jne originalcode6
lea eax,[ebx+000001A4]
mov [pAmmoClip],eax

originalcode6:
mov eax,[ebx+000001A4]

exit6:
jmp returnhere6

///

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAmmoPouch],eax

originalcode2:
mov eax,[eax+04]
ret 0008

exit2:
jmp returnhere2

///

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHero],esi

originalcode:
movss xmm0,[esi+00001CB8]

exit:
jmp returnhere

///
pAmmoClip:
dd 0
pAmmoPouch:
dd 0
pHero:
dd 0
vCenterCamera:
db 0
///

enableAOB6+2: //"saintsrowthethird.exe"+5D2BE1:
enableAOB6_jmp:
jmp newmem6
nop
returnhere6:

enableAOB2+D: //"saintsrowthethird.exe"+76EAF9:
enableAOB2_jmp:
jmp newmem2
nop
returnhere2:

enableAOB1+6: //"saintsrowthethird.exe"+3B74D4:
enableAOB1_jmp:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
enableAOB6_jmp: //"saintsrowthethird.exe"+5D2BE1:
db 8B 83 A4 01 00 00
//Alt: mov eax,[ebx+000001A4]
dealloc(newmem2)
enableAOB2_jmp: //"saintsrowthethird.exe"+76EAF9:
db 8B 40 04 C2 08 00
//Alt: mov eax,[eax+04]
//Alt: ret 0008
dealloc(newmem)
enableAOB1_jmp: //"saintsrowthethird.exe"+3B74D4:
db F3 0F 10 86 B8 1C 00 00
//Alt: movss xmm0,[esi+00001CB8]
unregistersymbol(enableAOB6_jmp)
unregistersymbol(enableAOB2_jmp)
unregistersymbol(enableAOB1_jmp)
unregistersymbol(pAmmoClip)
unregistersymbol(pAmmoPouch)
unregistersymbol(pHero)
unregistersymbol(vCenterCamera)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>36</ID>
          <Description>"[Scripts]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>29</ID>
              <Description>"Inf. Health"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthAOB1,83 C4 08 3C 01 75 ** F3 0F 10 44 24 08 F3)
label(healthAOB1_jmp)
registersymbol(healthAOB1_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHero],esi
jne originalcode

push eax
mov eax,[esp+08]
cmp [esi+00001CB8],eax
pop eax
jle originalcode
movss xmm0,[esi+00001CB8]

originalcode:
movss [esi+00001CB8],xmm0

exit:
jmp returnhere

healthAOB1+D: //"saintsrowthethird.exe"+54D059:
healthAOB1_jmp:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthAOB1_jmp: //"saintsrowthethird.exe"+54D059:
db F3 0F 11 86 B8 1C 00 00
//Alt: movss [esi+00001CB8],xmm0
unregistersymbol(healthAOB1_jmp)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Inf. Ammo"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infammoAOB2,8B 74 24 48 0F B7 ** ** ** ** ** 8B 44 24 50)
label(infammoAOB2_jmp)
registersymbol(infammoAOB2_jmp)
aobscan(infammoAOB1,8B C2 2B D0 89 56 04 8B 56 08)
label(infammoAOB1_jmp)
registersymbol(infammoAOB1_jmp)

globalalloc(mAmmoPouch,4)

mAmmoPouch:
dd #10

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esp+50]
sub [eax],ecx
cmp [pAmmoClip],eax
jne originalcode2
cmp [eax],1
jge originalcode2
mov [eax],1

originalcode2:
//mov eax,[esp+50]
//sub [eax],ecx

exit2:
jmp returnhere2

infammoAOB2+B: //"saintsrowthethird.exe"+5D128B:
infammoAOB2_jmp:
jmp newmem2
nop
returnhere2:

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pAmmoPouch],esi
jne originalcode
cmp edx,[mAmmoPouch]
jge originalcode
mov edx,[esi+04]

originalcode:
mov [esi+04],edx
mov edx,[esi+08]

exit:
jmp returnhere

infammoAOB1+4: //"saintsrowthethird.exe"+76E312:
infammoAOB1_jmp:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
infammoAOB2_jmp: //"saintsrowthethird.exe"+5D128B:
db 8B 44 24 50 29 08
//Alt: mov eax,[esp+50]
//Alt: sub [eax],ecx
dealloc(newmem)
infammoAOB1_jmp: //"saintsrowthethird.exe"+76E312:
db 89 56 04 8B 56 08
//Alt: mov [esi+04],edx
//Alt: mov edx,[esi+08]
unregistersymbol(infammoAOB2_jmp)
unregistersymbol(infammoAOB1_jmp)
dealloc(mAmmoPouch)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"Reload Anytime"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(reloadanytimeAOB1,57 55 E8 ** ** ** ** 83 C4 08 39 85 A4 01 00 00)
label(reloadanytimeAOB1_jmp)
registersymbol(reloadanytimeAOB1_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebp+000001A4],eax
jl originalcode
dec [ebp+000001A4]
cmp [pAmmoPouch],0
je originalcode
push eax
mov eax,[pAmmoPouch]
inc [eax+4]
pop eax

originalcode:
cmp [ebp+000001A4],eax

exit:
jmp returnhere

reloadanytimeAOB1+a: //"SaintsRowTheThird.exe"+5AF1FE:
reloadanytimeAOB1_jmp:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
reloadanytimeAOB1_jmp: //"SaintsRowTheThird.exe"+5AF1FE:
db 39 85 A4 01 00 00
//Alt: cmp [ebp+000001A4],eax
unregistersymbol(reloadanytimeAOB1_jmp)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"Inf. Throwing Weapons"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infthrowingweaponsAOB1,8B F1 2B CE 89 48 04 8B 48 08)
label(infthrowingweaponsAOB1_jmp)
registersymbol(infthrowingweaponsAOB1_jmp)

label(tECX)
label(pThrowingWeapon)
registersymbol(tECX)
registersymbol(pThrowingWeapon)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//cmp dword ptr [eax+04],ecx
//jle originalcode
//mov ecx,[eax+04]
mov [tECX],ecx
mov [pThrowingWeapon],eax
cmp ecx,1
jge originalcode
mov ecx,1

originalcode:
mov [eax+04],ecx
mov ecx,[eax+08]

exit:
jmp returnhere

///
tECX:
dd 0
pThrowingWeapon:
dd 0
///

infthrowingweaponsAOB1+4: //"saintsrowthethird.exe"+76EF11:
infthrowingweaponsAOB1_jmp:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infthrowingweaponsAOB1_jmp: //"saintsrowthethird.exe"+76EF11:
db 89 48 04 8B 48 08
//Alt: mov [eax+04],ecx
//Alt: mov ecx,[eax+08]
unregistersymbol(infthrowingweaponsAOB1_jmp)
unregistersymbol(tECX)
unregistersymbol(pThrowingWeapon)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>55</ID>
              <Description>"Camera Toggle (press MM)"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(cameratoggleAOB1,D9 47 34 D9 9E C4 00 00 00)
label(cameratoggleAOB1_jmp)
registersymbol(cameratoggleAOB1_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(setCenter)
label(setCenterStand)
label(setCenterCrouch)
label(setLeft)
label(setLeftStand)
label(setLeftCrouch)
label(setRight)
label(setRightStand)
label(setRightCrouch)
label(resetCamKey)
label(camKeyPressed)
label(b2CamerasOnly)
registersymbol(b2CamerasOnly)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 04      //key MM
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne resetCamKey
cmp byte ptr [camKeyPressed],00
jne originalcode
mov byte ptr [camKeyPressed],01
cmp dword ptr [edi+34],(float)0.6
jge setCenter
cmp dword ptr [edi+34],0
jge setLeft
cmp dword ptr [edi+34],(float)-0.6
jle setRight
jmp originalcode

setCenter:
mov byte ptr [vCenterCamera],0
mov dword ptr [edi+34],0
cmp dword ptr [edi+04],(float)1.8
je setCenterStand
cmp dword ptr [edi+04],(float)1.6
je setCenterStand
cmp dword ptr [edi+04],(float)1.65
je setCenterStand
cmp dword ptr [edi+04],(float)1.650000095
je setCenterStand
cmp dword ptr [edi+04],(float)1.3
je setCenterCrouch
jmp originalcode

setCenterStand:
mov dword ptr [edi+04],(float)1.95
jmp originalcode

setCenterCrouch:
mov dword ptr [edi+04],(float)1.4
jmp originalcode

setLeft:
cmp byte ptr [b2CamerasOnly],01
je setRight
mov byte ptr [vCenterCamera],02
mov dword ptr [edi+34],(float)-0.6
cmp dword ptr [edi+04],(float)1.95
je setLeftStand
cmp dword ptr [edi+04],(float)1.4
je setLeftCrouch
jmp originalcode

setLeftStand:4
mov dword ptr [edi+04],(float)1.65
jmp originalcode

setLeftCrouch:4
mov dword ptr [edi+04],(float)1.3
jmp originalcode

setRight:
mov byte ptr [vCenterCamera],01
mov dword ptr [edi+34],(float)0.6
cmp dword ptr [edi+04],(float)1.95
je setRightStand
cmp dword ptr [edi+04],(float)1.4
je setRightCrouch
jmp originalcode

setRightStand:
mov dword ptr [edi+04],(float)1.65
jmp originalcode

setRightCrouch:
mov dword ptr [edi+04],(float)1.3
jmp originalcode

resetCamKey:
mov byte ptr [camKeyPressed],00
jmp originalcode

originalcode:
fld dword ptr [edi+34]
fstp dword ptr [esi+000000C4]

exit:
jmp returnhere

///
camKeyPressed:
db 01
b2CamerasOnly:
db 00
///

cameratoggleAOB1: //"saintsrowthethird.exe"+1743D1:
cameratoggleAOB1_jmp:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
cameratoggleAOB1_jmp: //"saintsrowthethird.exe"+1743D1:
db D9 47 34 D9 9E C4 00 00 00
//Alt: fld dword ptr [edi+34]
//Alt: fstp dword ptr [esi+000000C4]
unregistersymbol(camKeyPressed)
unregistersymbol(cameratoggleAOB1_jmp)
unregistersymbol(b2CamerasOnly)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>135</ID>
                  <Description>"Stay in Toggled Camera"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(cameratogglesubAOB2,0F 28 07 0F 5C C1 0F 29 44 24 20)
label(cameratogglesubAOB2_jmp)
registersymbol(cameratogglesubAOB2_jmp)
aobscan(cameratogglesubAOB1,0F 58 C1 0F 29 06 F3 0F 10 47 34)
label(cameratogglesubAOB1_jmp)
registersymbol(cameratogglesubAOB1_jmp)

label(tEAX)

label(fXShift)
registersymbol(fXShift)
label(fLookatOffsetY)
registersymbol(fLookatOffsetY)


alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
label(setCenterLookatOffsetY)
label(setCenterStand)
label(setCenterCrouch)
label(setNotCenterLookatOffsetY)
label(setNotCenterStand)
label(setNotCenterCrouch)
label(setCameraLookatOffsetY)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
movaps xmm0,[edi]
mov [tEAX],eax

cmp byte ptr [vCenterCamera],00
je setCenterLookatOffsetY
cmp byte ptr [vCenterCamera],01
je setNotCenterLookatOffsetY
cmp byte ptr [vCenterCamera],02
je setNotCenterLookatOffsetY
jmp originalcode2

setCenterLookatOffsetY:
cmp dword ptr [edi+04],(float)1.8
je setCenterStand
cmp dword ptr [edi+04],(float)1.6
je setCenterStand
cmp dword ptr [edi+04],(float)1.65
je setCenterStand
cmp dword ptr [edi+04],(float)1.650000095
je setCenterStand
cmp dword ptr [edi+04],(float)1.3
je setCenterCrouch
jmp originalcode2

setCenterStand:
mov dword ptr [fLookatOffsetY],(float)1.95
jmp setCameraLookatOffsetY

setCenterCrouch:
mov dword ptr [fLookatOffsetY],(float)1.4
jmp setCameraLookatOffsetY

setNotCenterLookatOffsetY:
cmp dword ptr [edi+04],(float)1.95
je setNotCenterStand
cmp dword ptr [edi+04],(float)1.4
je setNotCenterCrouch
jmp originalcode2

setNotCenterStand:
mov dword ptr [fLookatOffsetY],(float)1.65
jmp setCameraLookatOffsetY

setNotCenterCrouch:
mov dword ptr [fLookatOffsetY],(float)1.3
jmp setCameraLookatOffsetY

setCameraLookatOffsetY:
//movss xmm1,[fLookatOffsetY]
movaps [esp+20],xmm0
mov eax,[fLookatOffsetY]
mov dword ptr [esp+24],eax
movaps xmm0,[esp+20]

jmp originalcode2

originalcode2:
//movaps xmm0,[edi]
mov eax,[tEAX]
subps xmm0,xmm1

exit2:
jmp returnhere2

///

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(setCenterXShift)
label(setRightXShift)
label(setLeftXShift)
label(setCameraXShift)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [vCenterCamera],00
je setCenterXShift
cmp byte ptr [vCenterCamera],01
je setRightXShift
cmp byte ptr [vCenterCamera],02
je setLeftXShift
jmp originalcode

setCenterXShift:
mov dword ptr [fXShift],(float)0.0
jmp setCameraXShift

setRightXShift:
mov dword ptr [fXShift],(float)0.6
jmp setCameraXShift

setLeftXShift:
mov dword ptr [fXShift],(float)-0.6
jmp setCameraXShift

setCameraXShift:
movss xmm0,[fXShift]
jmp exit

originalcode:
movss xmm0,[edi+34]

exit:
jmp returnhere

///
tEAX:
dd 0
fXShift:
dd 0
fLookatOffsetY:
dd 0
///

cameratogglesubAOB2: //"saintsrowthethird.exe"+16C5D0:
cameratogglesubAOB2_jmp:
jmp newmem2
nop
returnhere2:

cameratogglesubAOB1+6: //"saintsrowthethird.exe"+16C64B:
cameratogglesubAOB1_jmp:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
cameratogglesubAOB2_jmp: //"saintsrowthethird.exe"+16C5D0:
db 0F 28 07 0F 5C C1
//Alt: movaps xmm0,[edi]
//Alt: subps xmm0,xmm1
dealloc(newmem)
cameratogglesubAOB1_jmp: //"saintsrowthethird.exe"+16C64B:
db F3 0F 10 47 34
//Alt: movss xmm0,[edi+34]
unregistersymbol(cameratogglesubAOB2_jmp)
unregistersymbol(cameratogglesubAOB1_jmp)
unregistersymbol(fXShift)
unregistersymbol(fLookatOffsetY)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>56</ID>
                  <Description>"b2CamerasOnly"</Description>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>b2CamerasOnly</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"Zoom Center (press ~)"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(cameratoggleAOB2,8A 4F 30 88 8E C0 00 00 00)
label(cameratoggleAOB2_jmp)
registersymbol(cameratoggleAOB2_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(resetCamKeyB)
label(camKeyBPressed)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push C0      //key ~
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne resetCamKeyB
cmp byte ptr [camKeyBPressed],00
jne originalcode
mov byte ptr [camKeyBPressed],01
mov dword ptr [edi+04],(float)1.5
mov dword ptr [edi+34],0
fld dword ptr [edi+28]
mov dword ptr [edi+28],(float)1.0
fsub dword ptr [edi+28]
fstp dword ptr [edi+28]
cmp dword ptr [edi+28],(float)1.5
jge originalcode
mov dword ptr [edi+28],(float)4.5
jmp originalcode

resetCamKeyB:
mov byte ptr [camKeyBPressed],00
jmp originalcode

originalcode:
mov cl,[edi+30]
mov [esi+000000C0],cl

exit:
jmp returnhere

///
camKeyBPressed:
db 01
///

cameratoggleAOB2: //"saintsrowthethird.exe"+1743C8:
cameratoggleAOB2_jmp:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
cameratoggleAOB2_jmp: //"saintsrowthethird.exe"+1743C8:
db 8A 4F 30 88 8E C0 00 00 00
//Alt: mov cl,[edi+30]
//Alt: mov [esi+000000C0],cl
unregistersymbol(camKeyBPressed)
unregistersymbol(cameratoggleAOB2_jmp)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"[Pointers / Addresses]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>28</ID>
              <Description>"Health"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>1CB8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"current Ammo Pouch"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>35</ID>
              <Description>"current Ammo Clip"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoClip</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"=Camera"</Description>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>44</ID>
                  <Description>"lookat_offset: Y"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>saintsrowthethird.exe+EE4104</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>111</Key>
                      </Keys>
                      <Value>1.5</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>106</Key>
                      </Keys>
                      <Value>1.5</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>109</Key>
                      </Keys>
                      <Value>1.5</Value>
                      <ID>2</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>107</Key>
                      </Keys>
                      <Value>1.5</Value>
                      <ID>3</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>87</ID>
                      <Description>"default in-door value"</Description>
                      <Options moHideChildren="1"/>
                      <Color>80000008</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>60</ID>
                          <Description>"stand"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC93F4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>69</ID>
                          <Description>"stand - fine aim"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC98B4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>83</ID>
                          <Description>"crouch"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9BF4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>91</ID>
                          <Description>"crouch - fine aim"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9934</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>93</ID>
                          <Description>"sprint"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9434</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>94</ID>
                      <Description>"default out-door value"</Description>
                      <Options moHideChildren="1"/>
                      <Color>80000008</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>95</ID>
                          <Description>"stand"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC93B4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>100</ID>
                          <Description>"stand - fine aim"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC98B4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>101</ID>
                          <Description>"crouch"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9BB4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>102</ID>
                          <Description>"crouch - fine aim"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9934</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>104</ID>
                          <Description>"sprint"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9B74</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>48</ID>
                  <Description>"z_dist"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>saintsrowthethird.exe+EE4128</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>111</Key>
                      </Keys>
                      <Value>2</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>106</Key>
                      </Keys>
                      <Value>3</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>109</Key>
                      </Keys>
                      <Value>4</Value>
                      <ID>2</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>107</Key>
                      </Keys>
                      <Value>5</Value>
                      <ID>3</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>42</ID>
                  <Description>"x_shift"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>saintsrowthethird.exe+EE4134</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>111</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>106</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>109</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>2</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>107</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>3</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>129</ID>
                      <Description>"default in-door value"</Description>
                      <Options moHideChildren="1"/>
                      <Color>80000008</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>130</ID>
                          <Description>"stand"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9424</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>131</ID>
                          <Description>"stand - fine aim"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC98E4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>132</ID>
                          <Description>"crouch"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9C24</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>133</ID>
                          <Description>"crouch - fine aim"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9964</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>134</ID>
                          <Description>"sprint"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9464</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>128</ID>
                      <Description>"default out-door value"</Description>
                      <Options moHideChildren="1"/>
                      <Color>80000008</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>106</ID>
                          <Description>"stand"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC93E4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>111</ID>
                          <Description>"stand - fine aim"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC98E4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>123</ID>
                          <Description>"crouch"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9BE4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>113</ID>
                          <Description>"crouch - fine aim"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9964</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>122</ID>
                          <Description>"sprint"</Description>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>saintsrowthethird.exe+FC9BA4</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"[old / testing]"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Inf. Health"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmemHHA,128)
label(returnhereHHA)
label(originalcodeHHA)
label(exitHHA)
label(pHeroHealth)
registersymbol(pHeroHealth)
alloc(newmemHAS,128)
label(returnhereHAS)
label(originalcodeHAS)
label(exitHAS)

newmemHHA:
mov [pHeroHealth],esi

originalcodeHHA:
movss xmm0,[esi+00001CC8]

exitHHA:
jmp returnhereHHA

///

newmemHAS:
cmp [pHeroHealth],esi
jne originalcodeHAS

push eax
mov eax,[esp+08]
cmp [esi+00001CC8],eax
pop eax
jle originalcodeHAS
movss xmm0,[esi+00001CC8]

originalcodeHAS:
movss [esi+00001CC8],xmm0

exitHAS:
jmp returnhereHAS

///
pHeroHealth:
dd 0
///

"SaintsRowTheThird.exe"+3A7BE4:
jmp newmemHHA
nop
nop
nop
returnhereHHA:

///

"SaintsRowTheThird.exe"+538C99:
jmp newmemHAS
nop
nop
nop
returnhereHAS:


 
 
[DISABLE]
dealloc(newmemHHA)
dealloc(newmemHAS)
"SaintsRowTheThird.exe"+3A7BE4:
db F3 0F 10 86 C8 1C 00 00
//Alt: movss xmm0,[esi+00001CC8]
"SaintsRowTheThird.exe"+538C99:
db F3 0F 11 86 C8 1C 00 00
//Alt: movss [esi+00001CC8],xmm0
unregistersymbol(pHeroHealth)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Health"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHeroHealth</Address>
              <Offsets>
                <Offset>1CC8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Inf. Ammo"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmemAPRS,128)
label(returnhereAPRS)
label(originalcodeAPRS)
label(exitAPRS)
label(pAmmoPouch)
registersymbol(pAmmoPouch)
alloc(newmemAS,128)
label(returnhereAS)
label(originalcodeAS)
label(exitAS)
label(pAmmoClip)
registersymbol(pAmmoClip)
globalalloc(mAmmoPouch,4)

newmemAPRS:
mov [pAmmoPouch],esi
cmp edx,[mAmmoPouch]
jge originalcodeAPRS
//cmp dword ptr [esi+04],edx
//jle originalcodeAPRS
mov edx,[esi+04]

originalcodeAPRS:
mov [esi+04],edx
mov edx,[esi+08]

exitAPRS:
jmp returnhereAPRS

///

newmemAS:
movzx eax,word ptr [edx+0000011A]
mov [pAmmoClip],edi
push ebx
mov ebx,[edi]
sub ebx,eax
cmp ebx,0
pop ebx
jle exitAS

originalcodeAS:
//movzx eax,word ptr [edx+0000011A]
sub [edi],eax

exitAS:
jmp returnhereAS

///
pAmmoPouch:
dd 0
pAmmoClip:
dd 0
mAmmoPouch:
dd #10
///

"SaintsRowTheThird.exe"+752F42:
jmp newmemAPRS
nop
returnhereAPRS:

///

"SaintsRowTheThird.exe"+5BBB50:
jmp newmemAS
nop
nop
nop
nop
returnhereAS:


 
 
[DISABLE]
dealloc(newmemAPRS)
dealloc(newmemAS)
"SaintsRowTheThird.exe"+752F42:
db 89 56 04 8B 56 08
//Alt: mov [esi+04],edx
//Alt: mov edx,[esi+08]
"SaintsRowTheThird.exe"+5BBB50:
db 0F B7 82 1A 01 00 00 29 07
//Alt: movzx eax,word ptr [edx+0000011A]
//Alt: sub [edi],eax
unregistersymbol(pAmmoPouch)
unregistersymbol(pAmmoClip)
dealloc(mAmmoPouch)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Ammo Pouch (Current Weapon)"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Ammo Clip (Current Weapon)"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pAmmoClip</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>82</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Inf. Money"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmemMA,128)
label(returnhereMA)
label(originalcodeMA)
label(exitMA)
label(pMoney)
registersymbol(pMoney)
alloc(newmemMAS,128)
label(returnhereMAS)
label(originalcodeMAS)
label(exitMAS)

newmemMA:
mov [pMoney],ebx
add [pMoney],1CB0

originalcodeMA:
cvtsi2ss xmm0,[ebx+00001CB0]

exitMA:
jmp returnhereMA

///

newmemMAS:
cmp ecx,[pMoney]
jne originalcodeMAS

cmp [ecx],eax
jle originalcodeMAS
mov eax,[ecx]

originalcodeMAS:
mov [ecx],eax
ret 0004

exitMAS:
jmp returnhereMAS

///
pMoney:
dd 0
///

"SaintsRowTheThird.exe"+3E46C5:
jmp newmemMA
nop
nop
nop
returnhereMA:

///

"SaintsRowTheThird.exe"+54BA44:
jmp newmemMAS
returnhereMAS:


 
 
[DISABLE]
dealloc(newmemMA)
dealloc(newmemMAS)
"SaintsRowTheThird.exe"+54BA44:
db 89 01 C2 04 00
//Alt: mov [ecx],eax
//Alt: ret 0004
"SaintsRowTheThird.exe"+3E46C5:
db F3 0F 2A 83 B0 1C 00 00
//Alt: cvtsi2ss xmm0,[ebx+00001CB0]
unregistersymbol(pMoney)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Money"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMoney</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Money gain multiplier"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmemMA,128)
label(returnhereMA)
label(originalcodeMA)
label(exitMA)
label(pMoney)
registersymbol(pMoney)
label(moneyMultiplier)
registersymbol(moneyMultiplier)
alloc(newmemMAS,128)
label(returnhereMAS)
label(originalcodeMAS)
label(exitMAS)

newmemMA:
mov [pMoney],ebx
add [pMoney],1CB0

originalcodeMA:
cvtsi2ss xmm0,[ebx+00001CB0]

exitMA:
jmp returnhereMA

///

newmemMAS:
cmp ecx,[pMoney]
jne originalcodeMAS

cmp [ecx],eax
jg originalcodeMAS
mul [moneyMultiplier]

originalcodeMAS:
mov [ecx],eax
ret 0004

exitMAS:
jmp returnhereMAS

///
pMoney:
dd 0
moneyMultiplier:
dd 2
///

"SaintsRowTheThird.exe"+3E46C5:
jmp newmemMA
nop
nop
nop
returnhereMA:

///

"SaintsRowTheThird.exe"+54BA44:
jmp newmemMAS
returnhereMAS:


 
 
[DISABLE]
dealloc(newmemMA)
dealloc(newmemMAS)
"SaintsRowTheThird.exe"+54BA44:
db 89 01 C2 04 00
//Alt: mov [ecx],eax
//Alt: ret 0004
"SaintsRowTheThird.exe"+3E46C5:
db F3 0F 2A 83 B0 1C 00 00
//Alt: cvtsi2ss xmm0,[ebx+00001CB0]
unregistersymbol(pMoney)
unregistersymbol(moneyMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>10</ID>
              <Description>"Money"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMoney</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>"x?"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>moneyMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Inf. Throw"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,128)
label(returnhere)
label(originalcode)
label(exit)

newmem:
cmp dword ptr [eax+04],ecx
jle originalcode
mov ecx,[eax+04]

originalcode:
mov [eax+04],ecx
mov ecx,[eax+08]

exit:
jmp returnhere

"SaintsRowTheThird.exe"+753B51:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
"SaintsRowTheThird.exe"+753B51:
db 89 48 04 8B 48 08
//Alt: mov [eax+04],ecx
//Alt: mov ecx,[eax+08]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>0BFFF754</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0c0108b4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>saintsrowthethird.exe+EE40C4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>saintsrowthethird.exe+EE40E8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>saintsrowthethird.exe+EE4128</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>saintsrowthethird.exe+1EB791C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>saintsrowthethird.exe+1EB7920</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Camera Toggle (press MM) editing"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(cameratoggleAOB1,D9 47 34 D9 9E C4 00 00 00)
label(cameratoggleAOB1_jmp)
registersymbol(cameratoggleAOB1_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(check1)
label(setCenter)
label(setCenterStand)
label(setCenterCrouch)
label(setRight)
label(setRightStand)
label(setRightCrouch)
label(resetCamKey)
label(camKeyPressed)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 04      //key MM
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne resetCamKey
cmp byte ptr [camKeyPressed],00
jne check1
mov byte ptr [camKeyPressed],01
xor byte ptr [bCenterCamera],01
jmp check1

check1:
cmp byte ptr [bCenterCamera],01
je setCenter
cmp byte ptr [bCenterCamera],00
je setRight
jmp originalcode

setCenter:
cmp dword ptr [edi+04],(float)1.8
je setCenterStand
cmp dword ptr [edi+04],(float)1.6
je setCenterStand
cmp dword ptr [edi+04],(float)1.65
je setCenterStand
cmp dword ptr [edi+04],(float)1.650000095
je setCenterStand
cmp dword ptr [edi+04],(float)1.3
je setCenterCrouch
jmp originalcode

setCenterStand:
mov dword ptr [edi+34],0
mov dword ptr [edi+04],(float)1.95
jmp originalcode

setCenterCrouch:
mov dword ptr [edi+34],0
mov dword ptr [edi+04],(float)1.4
jmp originalcode

setRight:
cmp dword ptr [edi+04],(float)1.95
je setRightStand
cmp dword ptr [edi+04],(float)1.4
je setRightCrouch
jmp originalcode

setRightStand:
mov dword ptr [edi+34],(float)0.6
mov dword ptr [edi+04],(float)1.65
jmp originalcode

setRightCrouch:
mov dword ptr [edi+34],(float)0.6
mov dword ptr [edi+04],(float)1.3
jmp originalcode

resetCamKey:
mov byte ptr [camKeyPressed],00
jmp check1

originalcode:
fld dword ptr [edi+34]
fstp dword ptr [esi+000000C4]

exit:
jmp returnhere

///
camKeyPressed:
db 01
///

cameratoggleAOB1: //"saintsrowthethird.exe"+1743D1:
cameratoggleAOB1_jmp:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
cameratoggleAOB1_jmp: //"saintsrowthethird.exe"+1743D1:
db D9 47 34 D9 9E C4 00 00 00
//Alt: fld dword ptr [edi+34]
//Alt: fstp dword ptr [esi+000000C4]
unregistersymbol(camKeyPressed)
unregistersymbol(cameratoggleAOB1_jmp)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>57</ID>
              <Description>"sup1"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bCenterCamera],01
jne originalcode
mov dword ptr [esi+34],0
movss xmm1,[esi+34]

originalcode:
movss [esi+34],xmm1

exit:
jmp returnhere

"saintsrowthethird.exe"+16C67F:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"saintsrowthethird.exe"+16C67F:
db F3 0F 11 4E 34
//Alt: movss [esi+34],xmm1
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>ammo pouch reload - Code :mov [esi+04],edx</Description>
      <Address>00B52F42</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>752F42</ModuleNameOffset>
      <Before>
        <Byte>02</Byte>
        <Byte>8B</Byte>
        <Byte>C2</Byte>
        <Byte>2B</Byte>
        <Byte>D0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>56</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>56</Byte>
        <Byte>08</Byte>
        <Byte>85</Byte>
        <Byte>D2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo - Code :sub [edi],eax</Description>
      <Address>009BBB57</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>5BBB57</ModuleNameOffset>
      <Before>
        <Byte>82</Byte>
        <Byte>1A</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>FE</Byte>
        <Byte>E8</Byte>
        <Byte>30</Byte>
        <Byte>AB</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health +- Code :movss [esi+00001CC8],xmm0</Description>
      <Address>00938C99</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>538C99</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>86</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>94</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health access 1 Code :movss xmm0,[eax+00001CC8]</Description>
      <Address>005525FE</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>1525FE</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
        <Byte>7E</Byte>
        <Byte>19</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>80</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2A</Byte>
        <Byte>C9</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health access 2 Code :movss xmm0,[ecx+00001CC8]</Description>
      <Address>004D0BCD</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>D0BCD</ModuleNameOffset>
      <Before>
        <Byte>08</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>7E</Byte>
        <Byte>29</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>81</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2A</Byte>
        <Byte>C8</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>*health access 3 Code :movss xmm0,[esi+00001CC8]</Description>
      <Address>007A7BE4</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>3A7BE4</ModuleNameOffset>
      <Before>
        <Byte>F0</Byte>
        <Byte>85</Byte>
        <Byte>F6</Byte>
        <Byte>74</Byte>
        <Byte>77</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>0D</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>*health access 4 Code :movss xmm1,[esi+00001CC8]</Description>
      <Address>007A7C1D</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>3A7C1D</ModuleNameOffset>
      <Before>
        <Byte>05</Byte>
        <Byte>88</Byte>
        <Byte>B6</Byte>
        <Byte>24</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8E</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C0</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health access 5 (not in combat) Code :movss xmm0,[esi+00001CC8]</Description>
      <Address>00984881</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>584881</ModuleNameOffset>
      <Before>
        <Byte>15</Byte>
        <Byte>64</Byte>
        <Byte>F6</Byte>
        <Byte>47</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>C8</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C9</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ +- Code :mov [ecx],eax</Description>
      <Address>0094BA44</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>54BA44</ModuleNameOffset>
      <Before>
        <Byte>CA</Byte>
        <Byte>88</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>$ access Code :cvtsi2ss xmm0,[ebx+00001CB0]</Description>
      <Address>007E46C5</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>3E46C5</ModuleNameOffset>
      <Before>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>1C</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2A</Byte>
        <Byte>83</Byte>
        <Byte>B0</Byte>
        <Byte>1C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C0</Byte>
        <Byte>F2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>thorw +- Code :mov [eax+04],ecx</Description>
      <Address>00B53B51</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>753B51</ModuleNameOffset>
      <Before>
        <Byte>02</Byte>
        <Byte>8B</Byte>
        <Byte>F1</Byte>
        <Byte>2B</Byte>
        <Byte>CE</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>48</Byte>
        <Byte>08</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>throw access Code :mov eax,[eax+04]</Description>
      <Address>00B539C1</Address>
      <ModuleName>SaintsRowTheThird.exe</ModuleName>
      <ModuleNameOffset>7539C1</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>03</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>C8</Byte>
        <Byte>84</Byte>
        <Byte>DB</Byte>
        <Byte>5B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>CE ammo pouch read Code :mov eax,[eax+04]</Description>
      <Address>00B6EAF9</Address>
      <ModuleName>saintsrowthethird.exe</ModuleName>
      <ModuleNameOffset>76EAF9</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>CF</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>C2</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>CE ammo clip read Code :mov eax,[ebx+000001A4]</Description>
      <Address>009D2BE1</Address>
      <ModuleName>saintsrowthethird.exe</ModuleName>
      <ModuleNameOffset>5D2BE1</ModuleNameOffset>
      <Before>
        <Byte>F0</Byte>
        <Byte>1A</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>F0</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>08</Byte>
        <Byte>3B</Byte>
        <Byte>C6</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>x_shift read Code :fld dword ptr [edi+34]</Description>
      <Address>005743D1</Address>
      <ModuleName>saintsrowthethird.exe</ModuleName>
      <ModuleNameOffset>1743D1</ModuleNameOffset>
      <Before>
        <Byte>8E</Byte>
        <Byte>C0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>47</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>9E</Byte>
        <Byte>C4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>lookat_offset: Y load default Code :movaps xmm0,[edi]</Description>
      <Address>0056C5D0</Address>
      <ModuleName>saintsrowthethird.exe</ModuleName>
      <ModuleNameOffset>16C5D0</ModuleNameOffset>
      <Before>
        <Byte>56</Byte>
        <Byte>57</Byte>
        <Byte>8B</Byte>
        <Byte>7D</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>C1</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>x_shift load default Code :movss xmm0,[edi+34]</Description>
      <Address>0056C64B</Address>
      <ModuleName>saintsrowthethird.exe</ModuleName>
      <ModuleNameOffset>16C64B</ModuleNameOffset>
      <Before>
        <Byte>58</Byte>
        <Byte>C1</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>06</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>47</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>74</Byte>
        <Byte>07</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>05</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pHeroHealth</Name>
      <Address>0FFF00B3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mAmmoPouch</Name>
      <Address>2BCA0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>heyho</Name>
      <Address>2AF80000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCenterCamera</Name>
      <Address>3C7B101F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB6_jmp</Name>
      <Address>009D2BE1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB2_jmp</Name>
      <Address>00B6EAF9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB1_jmp</Name>
      <Address>007B74D4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoClip</Name>
      <Address>2BC01013</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoPouch</Name>
      <Address>2BC01017</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>2BC0101B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vCenterCamera</Name>
      <Address>2BC0101F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthAOB1_jmp</Name>
      <Address>0094D059</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infammoAOB2_jmp</Name>
      <Address>009D128B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infammoAOB1_jmp</Name>
      <Address>00B6E312</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infthrowingweaponsAOB1_jmp</Name>
      <Address>00B6EF11</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>tECX</Name>
      <Address>2BCE0025</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pThrowingWeapon</Name>
      <Address>2BCE0029</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cameratoggleAOB2_jmp</Name>
      <Address>005743C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cameratoggleAOB1_jmp</Name>
      <Address>005743D1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>b2CamerasOnly</Name>
      <Address>2BCF0172</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cameratogglesubAOB2_jmp</Name>
      <Address>0056C5D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cameratogglesubAOB1_jmp</Name>
      <Address>0056C64B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fXShift</Name>
      <Address>3B300874</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fLookatOffsetY</Name>
      <Address>3B300878</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>reloadanytimeAOB1_jmp</Name>
      <Address>009C48AE</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
