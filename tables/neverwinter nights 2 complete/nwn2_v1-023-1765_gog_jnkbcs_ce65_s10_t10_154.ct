<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>22</ID>
      <Description>"[X] &lt;== Neverwinter Nights 2 v1.023 GOG Script v1.0"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Never Winter Nights 2 - Complete (GOG)
 Game Version  : 1.023 (1765)
 Game Sponsor  : jnkbcs
 Process Name  : nwn2main.exe
 Relevant Info : GOG/32bits/RPG
 Script Version: 1.0
 CE Version    : 6.5
 Release date  : 22-May-2016
 Author        : Recifense
 History:
 22-May-16: First Release
 Features:
 - God Mode
 - Minimum Level for Existing Skills
 - Items in use will not decrease (Arrow)
 - Some Pointers
===========================================
}

//=========================================
// Checking CE version
{$lua}
  if(getCEVersion() &lt; 6.5) then
    ShowMessage('Sorry. CE version should be 6.5 or above')
  end
{$asm}

//=========================================
// Checking Selected Process
{$lua}
  if(process == nil) then
    ShowMessage('No process was selected')
  elseif (process ~= "nwn2main.exe") then
    ShowMessage('Error. Expected Process = nwn2main.exe')
  end
{$asm}

//=========================================
// Definitions
define(LUDO,"nwn2main.exe")
define(MOPU,nwn2main.exe+001d325a)
define(GDMD,nwn2main.exe+0018bdb5)
define(MOSU,nwn2main.exe+002459c3)
define(MOUI,nwn2main.exe+001a98e4)

//=========================================
// Constants used in the script (that can be changed)
define(ctCE65,(float)6.5)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MOPU,8b 8e c4 1f 00 00 e8 ?? ?? ?? ?? 3b 87 88 09 00 00 ?? ?? 8b 8e)
assert(GDMD,89 86 64 01 00 00 e8 ?? ?? ?? ?? 66 85 c0 0f 8f ?? ?? ?? ?? 8b)
assert(MOSU,8b 8e c4 1f 00 00 8b 01 8b 50 14 6a 00 6a 01 68 71 05 00 00 ff)
assert(MOUI,89 86 c0 03 00 00 ?? ?? 8b 15 ?? ?? ?? ?? 8b 4a 04 8b 15 ?? ??)

//=========================================
alloc(MyCode,4096,$process)
//=========================================
// Declaration section
label(_MonPlayerUnits)
label(_MonPU00)
label(_MonPU01)
label(_MonPU02)
label(_MonPU03)
label(_BackMPU)
label(_ExitMPU)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)
label(_MonSelUnit)
label(_BackMSU)
label(_ExitMSU)
label(_MonUsedItem)
label(_BackMUI)
label(_ExitMUI)

label(_ChkPUnits)
label(_ChkPU00)
label(_ChkPU01)
label(_ExitCPU)

label(iEnableGMD)
label(iEnableMUS)
label(iEnableMUI)

label(iIndex)
label(pSel)
label(pItem)
label(pLast)
label(pUnits)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableGMD)
registersymbol(iEnableMUS)
registersymbol(iEnableMUI)
registersymbol(iIndex)
registersymbol(pSel)
registersymbol(pItem)
registersymbol(pLast)
registersymbol(pUnits)

//=========================================
MyCode:
//=========================================
// At main game screen
_MonPlayerUnits:
 push eax
 push ebx

 mov [pLast],esi

 mov ecx,[iIndex]
 test ecx,ecx
 jz _MonPU00

 call _ChkPUnits
 jz _MonPU01

 cmp ecx,#4
 js _MonPU00

 xor ecx,ecx
 mov [iIndex],ecx

_MonPU00:
 mov ecx,[iIndex]
 mov [pUnits+ecx*4],esi
 inc ecx
 mov [iIndex],ecx

_MonPU01:
 cmp dword ptr [iEnableMUS],0
 je _ExitMPU                       // Jump if feature is disabled

 mov ecx,[esi+00001FC4]
 test ecx,ecx
 jz _ExitMPU

 mov ebx,[ecx+50]
 test ebx,ebx
 jz _ExitMPU

 lea ecx,[ebx+1e]
 mov eax,#20

_MonPU02:
 cmp byte ptr [ebx],00
 je _MonPU03

 cmp al,[ebx]
 js _MonPU03

 mov [ebx],al

_MonPU03:
 inc ebx
 cmp ebx,ecx
 js _MonPU02

_ExitMPU:
 pop ebx
 pop eax

 mov ecx,[esi+00001FC4]            // Original code (set pUnit)
 jmp _BackMPU                      // Back to main code

//=========================================
// During Combat (Health)
_GodMode:
 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 call _ChkPUnits
 jnz _ExitGMD

 cmp eax,[esi+00000164]
 jns _ExitGMD

 mov eax,[esi+00000164]

_ExitGMD:
 mov [esi+00000164],eax            // Original code (set HP)
 jmp _BackGMD                      // Back to main code

//=========================================
// At main game screen (current controlled unit)
_MonSelUnit:
 mov [pSel],esi

_ExitMSU:
 mov ecx,[esi+00001FC4]            // Original code (get pXP)
 jmp _BackMSU                      // Back to main code

//=========================================
// When updating item #
_MonUsedItem:
 cmp dword ptr [iEnableMUI],0
 je _ExitMUI                       // Jump if feature is disabled

 push esi
 mov esi,edi
 call _ChkPUnits
 pop esi
 jnz _ExitMUI

 mov [pItem],esi                   // Base 2

 mov eax,[esi+000003C0]

_ExitMUI:
 mov [esi+000003C0],eax            // Original code (get pXP)
 jmp _BackMUI                      // Back to main code

//=========================================
// Checks if unit is in the list
// ESI = pUnit
// ZF = ON if unit is in the list
_ChkPUnits:
 push ecx

 mov ecx,[iIndex]

_ChkPU00:
 test ecx,ecx
 jz _ChkPU01

 cmp esi,[pUnits+ecx*4-04]
 je _ExitCPU

 dec ecx
 jmp _ChkPU00
//--
_ChkPU01:
 inc ecx
 test ecx,ecx

_ExitCPU:
 pop ecx
 ret

//=========================================
 db '=========================================&gt;'
 db 'CE6.5 Script by Recifense 052216'
//=========================================
// Variables
iEnableGMD:
 dd 0
iEnableMUS:
 dd 0
iEnableMUI:
 dd 0
iIndex:
 dd 0
pSel:
 dd 0
pItem:
 dd 0
pLast:
 dd 0
pUnits:
 dd 0
 dd 0
 dd 0
 dd 0

//=========================================
// Hacking Points
MOPU:
 jmp _MonPlayerUnits
 nop
_BackMPU:

GDMD:
 jmp _GodMode
 nop
_BackGMD:

MOSU:
 jmp _MonSelUnit
 nop
_BackMSU:

MOUI:
 jmp _MonUsedItem
 nop
_BackMUI:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MOPU:
// mov ecx,[esi+00001FC4]
 db 8b 8e c4 1f 00 00

GDMD:
// mov [esi+00000164],eax
 db 89 86 64 01 00 00

MOSU:
// mov ecx,[esi+00001FC4]
 db 8b 8e c4 1f 00 00

MOUI:
// mov [esi+000003C0],eax
 db 89 86 c0 03 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMUS)
unregistersymbol(iEnableMUI)
unregistersymbol(iIndex)
unregistersymbol(pSel)
unregistersymbol(pItem)
unregistersymbol(pLast)
unregistersymbol(pUnits)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>96</ID>
          <Description>"[X] &lt;== God Mode -------------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableGMD",1)
getAddressList().getMemoryRecordByID(96).Color = 0x00008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableGMD",0)
getAddressList().getMemoryRecordByID(96).Color = 0x00c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>97</ID>
          <Description>"[X] &lt;== Minimum Existing Skill Value  ---------------&gt; (HK: CTRL+PageUp / CTRL+PageDown)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMUS",1)
getAddressList().getMemoryRecordByID(97).Color = 0x00008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMUS",0)
getAddressList().getMemoryRecordByID(97).Color = 0x00c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"[X] &lt;== Item in Use does not decrease ------------&gt; (HK: CTRL+Insert / CTRL+Delete)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMUI",1)
getAddressList().getMemoryRecordByID(98).Color = 0x00008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMUI",0)
getAddressList().getMemoryRecordByID(98).Color = 0x00c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"[X] &lt;================= Current Controlled Unit Info"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>404080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Fist Name ==&gt;"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>FF00FF</Color>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pSel</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>4</Offset>
                <Offset>0</Offset>
                <Offset>2D8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"Current XP ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pSel</Address>
              <Offsets>
                <Offset>60</Offset>
                <Offset>1FC4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Current Gold (Valid for Main Character) ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pSel</Address>
              <Offsets>
                <Offset>EE8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"[X] &lt;== Table/Script Information"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
getMainForm().CommentButton.doClick()
{$ASM}

[disable]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Recifense</Name>
      <Address>20160522</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Never Winter Nights 2 - Complete (GOG)
 Game Version  : 1.023 (1765)
 Game Sponsor  : jnkbcs
 Process Name  : nwn2main.exe
 Relevant Info : GOG/32bits/RPG
 Script Version: 1.0
 CE Version    : 6.5
 Release date  : 22-May-2016
 Author        : Recifense
 History:
 22-May-16: First Release
 Features:
 - God Mode                               [1]
 - Minimum Level for Existing Skills      [2]
 - Items in use will not decrease (Arrow) [3]
 - Some Pointers                          [4]
===========================================
[1] For all player's characters;
[2] Minimum value = 20 (it may not appear like that);
[3] Items like arrows will not decrease when in use (not in the inventory), 
[4] Used at the table;
===========================================
[USAGE]
1) Run CE65;
2) Run Game;
3) Load the game process "nwn2main.exe" in CE;
4) Load this table and activate the main script;
5) Now Activate the script of each cheat you want to use;
6) Game On;
===========================================
HOTKEYS:
[HOTKEYS]
CTRL+Home      = Enable  GM cheat;
CTRL+End       = Disable GM cheat;
---------------
CTRL+PageUp    = Enable  ESV cheat;
CTRL+PageDown  = Disable ESV cheat;
---------------
CTRL+Insert    = Enable  IUnd cheat;
CTRL+Delete    = Disable IUnd cheat;
===========================================
[IMPORTANT]
Save your game before unsing the cheats.
===========================================
[INFO]
Tested on Win 10 64bits
===========================================
BIG THANKS to jnkbcs for helpimg me out with this game.
===========================================
Have fun!
</Comments>
</CheatTable>
