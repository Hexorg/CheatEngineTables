<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>43</ID>
      <Description>"Suit"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>804000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Infinite Mining Gun"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Infinite Mining Laser, Infinite Photon Cannon, no heat }


[ENABLE]

aobscanmodule(mining,NMS.exe,29 43 18 44 01 AC BE 38 0F 00 00) // should be unique
alloc(newmem,$100,"NMS.exe"+A29859)

label(code)
label(return)

newmem:

code:
  //sub [rbx+18],eax
  sub [rbx+18],0
  add [rsi+rdi*4+00000F38],r13d
  jmp return

mining:
  jmp code
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(mining)

aobscanmodule(heat,NMS.exe,F3 41 0F 11 86 C0 0E 00 00 41 0F) // should be unique
alloc(newmem1,$100,"NMS.exe"+A26D03)

label(heat1)
label(return1)

newmem1:

heat1:
  movss [r14+00000EC0],xmm12
  jmp return1

heat:
  jmp heat1
  nop
  nop
  nop
  nop
return1:
registersymbol(heat)



[DISABLE]

mining:
  db 29 43 18 44 01 AC BE 38 0F 00 00

unregistersymbol(mining)
dealloc(newmem)

heat:
  db F3 41 0F 11 86 C0 0E 00 00

unregistersymbol(heat)
dealloc(newmem1)




</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Infinite Elements/Inventory"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(inventory,NMS.exe,29 47 18 4C 8B 35)
inventory:
  db 90 90 90
registersymbol(inventory)

[DISABLE]
inventory:
  db 29 47 18
unregistersymbol(inventory)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Infinite Life Support"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(lifeSupport,NMS.exe,2B CE 85 C9 7F 04) // should be unique
alloc(newmem,$100,"NMS.exe"+A04DCE)

label(code)
label(return)

newmem:

code:
  sub ecx,edi
  test ecx,ecx
  jg NMS.exe+A04DD8
  jmp return

lifeSupport:
  jmp code
  nop
return:
registersymbol(lifeSupport)

[DISABLE]

lifeSupport:
  db 2B CE 85 C9 7F 04

unregistersymbol(lifeSupport)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A04DCE

"NMS.exe"+A04DB2: 41 F6 C1 01                    -  test r9l,01
"NMS.exe"+A04DB6: 75 0B                          -  jne NMS.exe+A04DC3
"NMS.exe"+A04DB8: 48 83 C0 30                    -  add rax,30
"NMS.exe"+A04DBC: 48 3B C1                       -  cmp rax,rcx
"NMS.exe"+A04DBF: 75 DF                          -  jne NMS.exe+A04DA0
"NMS.exe"+A04DC1: EB 1D                          -  jmp NMS.exe+A04DE0
"NMS.exe"+A04DC3: 48 85 C0                       -  test rax,rax
"NMS.exe"+A04DC6: 74 18                          -  je NMS.exe+A04DE0
"NMS.exe"+A04DC8: 8B 50 1C                       -  mov edx,[rax+1C]
"NMS.exe"+A04DCB: 8B 48 18                       -  mov ecx,[rax+18]
// ---------- INJECTING HERE ----------
"NMS.exe"+A04DCE: 2B CE                          -  sub ecx,esi
"NMS.exe"+A04DD0: 85 C9                          -  test ecx,ecx
"NMS.exe"+A04DD2: 7F 04                          -  jg NMS.exe+A04DD8
// ---------- DONE INJECTING  ----------
"NMS.exe"+A04DD4: 8B CF                          -  mov ecx,edi
"NMS.exe"+A04DD6: EB 05                          -  jmp NMS.exe+A04DDD
"NMS.exe"+A04DD8: 3B CA                          -  cmp ecx,edx
"NMS.exe"+A04DDA: 0F 4D CA                       -  cmovge ecx,edx
"NMS.exe"+A04DDD: 89 48 18                       -  mov [rax+18],ecx
"NMS.exe"+A04DE0: 48 8B 0D 21 69 C2 00           -  mov rcx,[NMS.exe+162B708]
"NMS.exe"+A04DE7: 48 81 C1 E0 03 00 00           -  add rcx,000003E0
"NMS.exe"+A04DEE: E8 0D A5 A5 FF                 -  call NMS.exe+45F300
"NMS.exe"+A04DF3: 44 0F 2F C8                    -  comiss xmm9,xmm0
"NMS.exe"+A04DF7: 72 64                          -  jb NMS.exe+A04E5D
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Infinite Run"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(run,NMS.exe,F3 0F 5C C8 F3 0F 11 8F 44 23 00 00 44 0F 2F E1 0F) // should be unique
alloc(newmem,$100,"NMS.exe"+A0A5EA)

label(code)
label(return)

newmem:

code:
  subss xmm0,xmm1
  movss [rdi+00002344],xmm1
  jmp return

run:
  jmp code
  nop
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(run)

[DISABLE]

run:
  db F3 0F 5C C8 F3 0F 11 8F 44 23 00 00

unregistersymbol(run)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A0A5EA

"NMS.exe"+A0A5AE: F3 0F 10 7C 24 54                 -  movss xmm7,[rsp+54]
"NMS.exe"+A0A5B4: F3 0F 59 F8                       -  mulss xmm7,xmm0
"NMS.exe"+A0A5B8: F3 0F 11 7C 24 54                 -  movss [rsp+54],xmm7
"NMS.exe"+A0A5BE: F3 0F 10 35 2A B0 C1 00           -  movss xmm6,[NMS.exe+16255F0]
"NMS.exe"+A0A5C6: F3 0F 59 F7                       -  mulss xmm6,xmm7
"NMS.exe"+A0A5CA: F3 41 0F 59 F7                    -  mulss xmm6,xmm15
"NMS.exe"+A0A5CF: F3 0F 10 05 3D AA C1 00           -  movss xmm0,[NMS.exe+1625014]
"NMS.exe"+A0A5D7: F3 41 0F 59 C6                    -  mulss xmm0,xmm14
"NMS.exe"+A0A5DC: F3 0F 5E 44 24 58                 -  divss xmm0,[rsp+58]
"NMS.exe"+A0A5E2: F3 0F 10 8F 44 23 00 00           -  movss xmm1,[rdi+00002344]
// ---------- INJECTING HERE ----------
"NMS.exe"+A0A5EA: F3 0F 5C C8                       -  subss xmm1,xmm0
"NMS.exe"+A0A5EE: F3 0F 11 8F 44 23 00 00           -  movss [rdi+00002344],xmm1
// ---------- DONE INJECTING  ----------
"NMS.exe"+A0A5F6: 44 0F 2F E1                       -  comiss xmm12,xmm1
"NMS.exe"+A0A5FA: 0F 82 B3 00 00 00                 -  jb NMS.exe+A0A6B3
"NMS.exe"+A0A600: 48 C7 87 40 23 00 00 01 00 00 00  -  mov [rdi+00002340],00000001
"NMS.exe"+A0A60B: 44 89 74 24 38                    -  mov [rsp+38],r14d
"NMS.exe"+A0A610: 4C 89 74 24 30                    -  mov [rsp+30],r14
"NMS.exe"+A0A615: 44 89 74 24 28                    -  mov [rsp+28],r14d
"NMS.exe"+A0A61A: 4C 89 74 24 20                    -  mov [rsp+20],r14
"NMS.exe"+A0A61F: 45 33 C9                          -  xor r9d,r9d
"NMS.exe"+A0A622: 45 33 C0                          -  xor r8d,r8d
"NMS.exe"+A0A625: 48 8B 97 F8 00 00 00              -  mov rdx,[rdi+000000F8]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Infinite Jetpack"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(jetpack,NMS.exe,F3 41 0F 5C C6 F3 0F 11 87 14) // should be unique
alloc(newmem,$100,"NMS.exe"+A09E80)

label(code)
label(return)

newmem:

code:
  subss xmm0,xmm12
  jmp return

jetpack:
  jmp code
return:
registersymbol(jetpack)

[DISABLE]

jetpack:
  db F3 41 0F 5C C6

unregistersymbol(jetpack)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A09E80

"NMS.exe"+A09E44: F3 0F 10 15 F8 78 95 00  -  movss xmm2,[NMS.exe+1361744]
"NMS.exe"+A09E4C: 48 8D 15 3D 2F B6 00     -  lea rdx,[NMS.exe+156CD90]
"NMS.exe"+A09E53: E8 E8 7B 0F 00           -  call NMS.exe+B01A40
"NMS.exe"+A09E58: 41 0F 28 C6              -  movaps xmm0,xmm14
"NMS.exe"+A09E5C: F3 0F 58 87 10 14 00 00  -  addss xmm0,[rdi+00001410]
"NMS.exe"+A09E64: F3 0F 11 87 10 14 00 00  -  movss [rdi+00001410],xmm0
"NMS.exe"+A09E6C: 80 BF 18 14 00 00 00     -  cmp byte ptr [rdi+00001418],00
"NMS.exe"+A09E73: 75 4F                    -  jne NMS.exe+A09EC4
"NMS.exe"+A09E75: F3 0F 10 8F 14 14 00 00  -  movss xmm1,[rdi+00001414]
"NMS.exe"+A09E7D: 0F 28 C1                 -  movaps xmm0,xmm1
// ---------- INJECTING HERE ----------
"NMS.exe"+A09E80: F3 41 0F 5C C6           -  subss xmm0,xmm14
// ---------- DONE INJECTING  ----------
"NMS.exe"+A09E85: F3 0F 11 87 14 14 00 00  -  movss [rdi+00001414],xmm0
"NMS.exe"+A09E8D: 44 0F 2F E0              -  comiss xmm12,xmm0
"NMS.exe"+A09E91: 72 31                    -  jb NMS.exe+A09EC4
"NMS.exe"+A09E93: 41 0F 2F CC              -  comiss xmm1,xmm12
"NMS.exe"+A09E97: 76 2B                    -  jna NMS.exe+A09EC4
"NMS.exe"+A09E99: 44 89 74 24 38           -  mov [rsp+38],r14d
"NMS.exe"+A09E9E: 4C 89 74 24 30           -  mov [rsp+30],r14
"NMS.exe"+A09EA3: 44 89 74 24 28           -  mov [rsp+28],r14d
"NMS.exe"+A09EA8: 4C 89 74 24 20           -  mov [rsp+20],r14
"NMS.exe"+A09EAD: 45 33 C9                 -  xor r9d,r9d
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Infinite Health"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(health,NMS.exe,41 89 87 E8 00 00 00 E9 90) // should be unique
alloc(newmem,$100,"NMS.exe"+A0763B)

label(code)
label(return)

newmem:

code:
  mov [r15+000000E8],ecx
  jmp return

health:
  jmp code
  nop
  nop
return:
registersymbol(health)

[DISABLE]

health:
  db 41 89 87 E8 00 00 00

unregistersymbol(health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A0763B

"NMS.exe"+A07610: 85 C0                 -  test eax,eax
"NMS.exe"+A07612: 7F 16                 -  jg NMS.exe+A0762A
"NMS.exe"+A07614: 49 FF 87 80 00 00 00  -  inc [r15+00000080]
"NMS.exe"+A0761B: 41 8B C5              -  mov eax,r13d
"NMS.exe"+A0761E: 41 89 87 E8 00 00 00  -  mov [r15+000000E8],eax
"NMS.exe"+A07625: E9 AD 00 00 00        -  jmp NMS.exe+A076D7
"NMS.exe"+A0762A: B9 64 00 00 00        -  mov ecx,00000064
"NMS.exe"+A0762F: 3B C1                 -  cmp eax,ecx
"NMS.exe"+A07631: 0F 4D C1              -  cmovge eax,ecx
"NMS.exe"+A07634: 49 FF 87 80 00 00 00  -  inc [r15+00000080]
// ---------- INJECTING HERE ----------
"NMS.exe"+A0763B: 41 89 87 E8 00 00 00  -  mov [r15+000000E8],eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+A07642: E9 90 00 00 00        -  jmp NMS.exe+A076D7
"NMS.exe"+A07647: 41 83 FC 02           -  cmp r12d,02
"NMS.exe"+A0764B: 0F 85 8E 00 00 00     -  jne NMS.exe+A076DF
"NMS.exe"+A07651: 45 8B C4              -  mov r8d,r12d
"NMS.exe"+A07654: 41 BC 3A 00 00 00     -  mov r12d,0000003A
"NMS.exe"+A0765A: 45 33 C9              -  xor r9d,r9d
"NMS.exe"+A0765D: 41 8B D4              -  mov edx,r12d
"NMS.exe"+A07660: 49 8B CF              -  mov rcx,r15
"NMS.exe"+A07663: E8 C8 D5 A5 FF        -  call NMS.exe+464C30
"NMS.exe"+A07668: 48 8B F8              -  mov rdi,rax
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"Ship"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>804000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Infinite Launch Thruster"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(launchThrust,NMS.exe,2B C8 C6 44 24 28 01) // should be unique
alloc(newmem,$1000,"NMS.exe"+ACD8BD)

label(code)
label(return)

newmem:

code:
  mov ecx,258
  mov byte ptr [rsp+28],01
  jmp return

launchThrust:
  jmp code
  nop
  nop
return:
registersymbol(launchThrust)

[DISABLE]

launchThrust:
  db 2B C8 C6 44 24 28 01

unregistersymbol(launchThrust)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+ACD8BD

"NMS.exe"+ACD895: 48 8B 7C 24 30              -  mov rdi,[rsp+30]
"NMS.exe"+ACD89A: 48 8B 74 24 50              -  mov rsi,[rsp+50]
"NMS.exe"+ACD89F: 48 85 DB                    -  test rbx,rbx
"NMS.exe"+ACD8A2: 74 3D                       -  je NMS.exe+ACD8E1
"NMS.exe"+ACD8A4: 8B 53 18                    -  mov edx,[rbx+18]
"NMS.exe"+ACD8A7: 3B D0                       -  cmp edx,eax
"NMS.exe"+ACD8A9: 7C 36                       -  jl NMS.exe+ACD8E1
"NMS.exe"+ACD8AB: F3 0F 10 1D 29 3D 89 00     -  movss xmm3,[NMS.exe+13615DC]
"NMS.exe"+ACD8B3: F3 0F 10 15 5D 3F 89 00     -  movss xmm2,[NMS.exe+1361818]
"NMS.exe"+ACD8BB: 8B CA                       -  mov ecx,edx
// ---------- INJECTING HERE ----------
"NMS.exe"+ACD8BD: 2B C8                       -  sub ecx,eax
"NMS.exe"+ACD8BF: C6 44 24 28 01              -  mov byte ptr [rsp+28],01
// ---------- DONE INJECTING  ----------
"NMS.exe"+ACD8C4: 89 54 24 20                 -  mov [rsp+20],edx
"NMS.exe"+ACD8C8: 89 4B 18                    -  mov [rbx+18],ecx
"NMS.exe"+ACD8CB: 48 8B 0D 36 DE B5 00        -  mov rcx,[NMS.exe+162B708]
"NMS.exe"+ACD8D2: 48 8B D3                    -  mov rdx,rbx
"NMS.exe"+ACD8D5: 48 81 C1 B0 9A 2F 00        -  add rcx,002F9AB0
"NMS.exe"+ACD8DC: E8 5F 8B 9C FF              -  call NMS.exe+496440
"NMS.exe"+ACD8E1: 48 8B 5C 24 48              -  mov rbx,[rsp+48]
"NMS.exe"+ACD8E6: 48 83 C4 38                 -  add rsp,38
"NMS.exe"+ACD8EA: C3                          -  ret 
"NMS.exe"+ACD8EB: CC                          -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Infinite Pulse Engine"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(pulse,NMS.exe,FF 4F 18 33 C0) // should be unique
alloc(newmem,$1000,"NMS.exe"+AF9612)

label(code)
label(return)

newmem:

code:
  mov [rdi+18],C8
  xor eax,eax
  jmp return

pulse:
  jmp code
return:
registersymbol(pulse)

[DISABLE]

pulse:
  db FF 4F 18 33 C0

unregistersymbol(pulse)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+AF9612

"NMS.exe"+AF95D8: 48 8B 15 29 21 B3 00        -  mov rdx,[NMS.exe+162B708]
"NMS.exe"+AF95DF: 48 81 C2 10 09 00 00        -  add rdx,00000910
"NMS.exe"+AF95E6: C6 44 24 20 00              -  mov byte ptr [rsp+20],00
"NMS.exe"+AF95EB: 45 33 C9                    -  xor r9d,r9d
"NMS.exe"+AF95EE: 4C 8D 85 F0 00 00 00        -  lea r8,[rbp+000000F0]
"NMS.exe"+AF95F5: E8 96 A3 96 FF              -  call NMS.exe+463990
"NMS.exe"+AF95FA: F3 44 0F 5E 9D FC 01 00 00  -  divss xmm11,[rbp+000001FC]
"NMS.exe"+AF9603: F3 41 0F 10 86 C4 00 00 00  -  movss xmm0,[r14+000000C4]
"NMS.exe"+AF960C: 41 0F 2F C3                 -  comiss xmm0,xmm11
"NMS.exe"+AF9610: 76 0C                       -  jna NMS.exe+AF961E
// ---------- INJECTING HERE ----------
"NMS.exe"+AF9612: FF 4F 18                    -  dec [rdi+18]
"NMS.exe"+AF9615: 33 C0                       -  xor eax,eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+AF9617: 41 89 86 C4 00 00 00        -  mov [r14+000000C4],eax
"NMS.exe"+AF961E: 49 8B 04 24                 -  mov rax,[r12]
"NMS.exe"+AF9622: BA 06 00 00 00              -  mov edx,00000006
"NMS.exe"+AF9627: 49 8B CC                    -  mov rcx,r12
"NMS.exe"+AF962A: FF 50 10                    -  call qword ptr [rax+10]
"NMS.exe"+AF962D: 0F 2F 05 04 72 86 00        -  comiss xmm0,[NMS.exe+1360838]
"NMS.exe"+AF9634: 77 17                       -  ja NMS.exe+AF964D
"NMS.exe"+AF9636: 49 8B 04 24                 -  mov rax,[r12]
"NMS.exe"+AF963A: BA 28 00 00 00              -  mov edx,00000028
"NMS.exe"+AF963F: 49 8B CC                    -  mov rcx,r12
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Infinite Phase Beam"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(phaseBeam,NMS.exe,2B CF 89 48 18) // should be unique
alloc(newmem,$100,"NMS.exe"+AFD32F)

label(code)
label(return)

newmem:

code:
  mov ecx,3E8
  mov [rax+18],ecx
  jmp return

phaseBeam:
  jmp code
return:
registersymbol(phaseBeam)

aobscanmodule(shipHeat,NMS.exe,F3 41 0F 11 86 1C 0A 00 00) // should be unique
alloc(newmem2,$100,"NMS.exe"+AFC52E)

label(code2)
label(return2)

newmem2:

code2:
  movss [r14+00000A1C],xmm14
  jmp return2

shipHeat:
  jmp code2
  nop
  nop
  nop
  nop
return2:
registersymbol(shipHeat)

[DISABLE]

phaseBeam:
  db 2B CF 89 48 18

unregistersymbol(phaseBeam)
dealloc(newmem)


shipHeat:
  db F3 41 0F 11 86 1C 0A 00 00

unregistersymbol(shipHeat)
dealloc(newmem2)


</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Pointers"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>804000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Units"</Description>
          <LastState Value="9008600" RealAddress="1BA761D54E4"/>
          <VariableType>4 Bytes</VariableType>
          <Address>"NMS.exe"+0163FCB0</Address>
          <Offsets>
            <Offset>4E4</Offset>
            <Offset>48</Offset>
            <Offset>50</Offset>
            <Offset>60</Offset>
            <Offset>C0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of dec [rdi+18]</Description>
      <Address>7FF71D289612</Address>
      <ModuleName>NMS.exe</ModuleName>
      <ModuleNameOffset>AF9612</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C3</Byte>
        <Byte>76</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>4F</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>41</Byte>
        <Byte>89</Byte>
        <Byte>86</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>craft</Name>
      <Address>7FF6D5750C53</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>craft2</Name>
      <Address>7FF6D57511DA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mouseover_item</Name>
      <Address>7FF6A628934B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mouseover_item_ptr</Name>
      <Address>7FF6A5D60020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sprint</Name>
      <Address>7FF7B253AF1A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sell</Name>
      <Address>7FF7B1F8F760</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>unlock</Name>
      <Address>7FF7B2560A9D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>unlock2</Name>
      <Address>7FF7B1F8F7A4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting1</Name>
      <Address>7FF7B1F90C68</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting2</Name>
      <Address>7FF7B1F911DA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting3</Name>
      <Address>7FF7B2045124</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting4</Name>
      <Address>7FF7B1F9054C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting5</Name>
      <Address>7FF7B1F920CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>reload</Name>
      <Address>7FF7B255C175</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>grenades</Name>
      <Address>7FF7B255BDF9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>overheat</Name>
      <Address>7FF7B2557626</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>laser</Name>
      <Address>7FF7B255A185</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>environment</Name>
      <Address>7FF7B255DAAB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>onehit</Name>
      <Address>7FF7B23F0ADF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory_slots</Name>
      <Address>7FF7B1F7636B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory_slots_ptr</Name>
      <Address>7FF7B1B20023</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>elements</Name>
      <Address>7FF71CBF0F74</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>elements1</Name>
      <Address>7FF71CBEF130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory</Name>
      <Address> 7FF71CBF0F74</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lifeSupport</Name>
      <Address> 7FF71D194DCE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>run</Name>
      <Address> 7FF71D19A5EA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jetpack</Name>
      <Address> 7FF71D199E80</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address> 7FF71D19763B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>launchThrust</Name>
      <Address> 7FF71D25D8BD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pulse</Name>
      <Address> 7FF71D289612</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mining</Name>
      <Address> 7FF71D1B9859</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>heat</Name>
      <Address> 7FF71D1B6D03</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>phaseBeam</Name>
      <Address> 7FF71D28D32F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>shipHeat</Name>
      <Address> 7FF71D28C52E</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
