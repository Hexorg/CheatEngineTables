<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Use these only before hitting 'Start' (i.e. main menu, just when SWF was loaded)"</Description>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>8000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"[jasondudly468] Drop only rarity 80-100 fragments"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(aobOnlyHighRarityDrops,a2 82 d0 66 ?? ?? 66 ?? ?? 46 ?? ?? ?? a0 25 e8 07 a3 2f ?? ?? 2f ?? ??)

label(aobOnlyHighRarityDrops_r)
registersymbol(aobOnlyHighRarityDrops_r)

aobOnlyHighRarityDrops+11:
aobOnlyHighRarityDrops_r:
db a2

[DISABLE]
aobOnlyHighRarityDrops_r:
db a3

unregistersymbol(aobOnlyHighRarityDrops_r)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"[jasondudly468] Min Rarity Equals Max Rarity "</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(aobMinQualityEqualsMax,24 50 24 00 24 40 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 14 a1)
//    !!    !!    !!                                                    !!
// 24 50 24 00 24 40 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 14 a1
// 24 64 24 14 24 69 d0 46 ?? ?? ?? a2 a0 46 ?? ?? ?? d0 46 ?? ?? ?? 24 00 a1
//  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f 10 11 12 13 14 15 16 17 18

label(aobMinQualityEqualsMax_r1)
label(aobMinQualityEqualsMax_r2)
label(aobMinQualityEqualsMax_r3)
label(aobMinQualityEqualsMax_r4)
registersymbol(aobMinQualityEqualsMax_r1)
registersymbol(aobMinQualityEqualsMax_r2)
registersymbol(aobMinQualityEqualsMax_r3)
registersymbol(aobMinQualityEqualsMax_r4)

aobMinQualityEqualsMax+1:
aobMinQualityEqualsMax_r1:
db 64

aobMinQualityEqualsMax+3:
aobMinQualityEqualsMax_r2:
db 14

aobMinQualityEqualsMax+5:
aobMinQualityEqualsMax_r3:
db 69

aobMinQualityEqualsMax+17:
aobMinQualityEqualsMax_r4:
db 00

[DISABLE]
aobMinQualityEqualsMax_r1:
db 50

aobMinQualityEqualsMax_r2:
db 00

aobMinQualityEqualsMax_r3:
db 40

aobMinQualityEqualsMax_r4:
db 14

unregistersymbol(aobMinQualityEqualsMax_r1)
unregistersymbol(aobMinQualityEqualsMax_r2)
unregistersymbol(aobMinQualityEqualsMax_r3)
unregistersymbol(aobMinQualityEqualsMax_r4)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"[jkollss] Set beam time to 100 secs"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(aobBeamTime,d0 66 c5 06 66 d2 05 60 df 01 66 dd 1d 60 b1 12 66 86 25 66 ee 2a 46 f8 2a 00 24 1e d0 66 c5 06 66 91 05 60 94 0f 66 86 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a2 a0 4f c4 06 01)

label(aobBeamTime_r)
registersymbol(aobBeamTime_r)

aobBeamTime:
aobBeamTime_r:
db d0 66 c5 06 66 d2 05 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 b8 17 4f c4 06 01

[DISABLE]
aobBeamTime_r:
db d0 66 c5 06 66 d2 05 60 df 01 66 dd 1d 60 b1 12 66 86 25 66 ee 2a 46 f8 2a 00 24 1e d0 66 c5 06 66 91 05 60 94 0f 66 86 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a2 a0 4f c4 06 01

unregistersymbol(aobBeamTime_r)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"[jkollss] Set bolt ammo to 1000 shots"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(aobBoltAmmo,d0 66 c5 06 66 d6 05 60 df 01 66 dd 1d 60 b1 12 66 81 25 66 ee 2a 46 f8 2a 00 d0 66 c5 06 66 91 05 60 94 0f 66 81 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a0 4f c4 06 01)

label(aobBoltAmmo_r)
registersymbol(aobBoltAmmo_r)

aobBoltAmmo:
aobBoltAmmo_r:
db d0 66 c5 06 66 d6 05 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 e8 07 4f c4 06 01

[DISABLE]
aobBoltAmmo_r:
db d0 66 c5 06 66 d6 05 60 df 01 66 dd 1d 60 b1 12 66 81 25 66 ee 2a 46 f8 2a 00 d0 66 c5 06 66 91 05 60 94 0f 66 81 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a0 4f c4 06 01

unregistersymbol(aobBoltAmmo_r)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"[jkollss] Set barrage ammo to 1000 shots"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(aobBarrageAmmo,d0 66 c5 06 66 da 05 60 df 01 66 dd 1d 60 b1 12 66 8b 25 66 ee 2a 46 f8 2a 00 d0 66 c5 06 66 91 05 60 94 0f 66 8b 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a0 4f c4 06 01)

label(aobBarrageAmmo_r)
registersymbol(aobBarrageAmmo_r)

aobBarrageAmmo:
aobBarrageAmmo_r:
db d0 66 c5 06 66 da 05 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 25 e8 07 4f c4 06 01

[DISABLE]
aobBarrageAmmo_r:
db d0 66 c5 06 66 da 05 60 df 01 66 dd 1d 60 b1 12 66 8b 25 66 ee 2a 46 f8 2a 00 d0 66 c5 06 66 91 05 60 94 0f 66 8b 25 66 ee 2a 24 01 66 ee 2a 46 f8 2a 00 a0 4f c4 06 01

unregistersymbol(aobBarrageAmmo_r)

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Use these only during battle"</Description>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>8000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"[Patr1ck] Add "Shadow Cores" when talisman upgraded (instead of take)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(aobTalismanAddSCOnUpgrade,60 df 01 66 e3 1d 66 81 02 46 c3 06 00 d1 66 da 0e 46 c3 06 00 a1)

label(aobTalismanAddSCOnUpgrade_r)
registersymbol(aobTalismanAddSCOnUpgrade_r)

aobTalismanAddSCOnUpgrade:
aobTalismanAddSCOnUpgrade_r:
db 60 df 01 66 e3 1d 66 81 02 46 c3 06 00 d1 66 da 0e 46 c3 06 00 a0

[DISABLE]
aobTalismanAddSCOnUpgrade_r:
db 60 df 01 66 e3 1d 66 81 02 46 c3 06 00 d1 66 da 0e 46 c3 06 00 a1

unregistersymbol(aobTalismanAddSCOnUpgrade_r)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"[jkollss] Gem upgrade costs only "Combine gem cost" and gives "Gem value" back"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(aobGemUpgradeCost1,d0 66 c5 06 46 9b 06 00 d1 66 ef 09 46 c3 06 00 d0 66 c5 06 66 db 04 46 c3 06 00 a0 0f)
aobscan(aobGemUpgradeCost2,d0 66 c5 06 d1 66 ef 09 46 c3 06 00 90 27 26 4f 9a 06 03)

label(aobGemUpgradeCost1_r)
label(aobGemUpgradeCost2_r)
registersymbol(aobGemUpgradeCost1_r)
registersymbol(aobGemUpgradeCost2_r)

aobGemUpgradeCost1:
aobGemUpgradeCost1_r:
db d0 66 c5 06 46 9b 06 00 02 02 02 02 02 02 24 01 d0 66 c5 06 66 db 04 46 c3 06 00 a0 0f

aobGemUpgradeCost2:
aobGemUpgradeCost2_r:
db d0 66 c5 06 d1 66 ef 09 46 c3 06 00 02 27 26 4f 9a 06 03

[DISABLE]
aobGemUpgradeCost1_r:
db d0 66 c5 06 46 9b 06 00 d1 66 ef 09 46 c3 06 00 d0 66 c5 06 66 db 04 46 c3 06 00 a0 0f
aobGemUpgradeCost2_r:
db d0 66 c5 06 d1 66 ef 09 46 c3 06 00 90 27 26 4f 9a 06 03

unregistersymbol(aobGemUpgradeCost1_r)
unregistersymbol(aobGemUpgradeCost2_r)

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Can be enabled only having started at least one battle (no effect in first battle!)"</Description>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>8000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"[waruituti] Mana gain"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(aobManaGain,7B 14 AE 47 E1 7A A4 3F B8 1E 85 EB 51 B8 9E)

label(aobManaGain_r)
registersymbol(aobManaGain_r)

aobManaGain:
aobManaGain_r:
db 7B 14 AE 47 E1 7A A4 40 B8 1E 85 EB 51 B8 9E

[DISABLE]
aobManaGain_r:
db 7B 14 AE 47 E1 7A A4 3F B8 1E 85 EB 51 B8 9E

unregistersymbol(aobManaGain_r)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"[waruituti] XP gain"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(aobXPGain,B8 1E 85 EB 51 B8 9E 3F 9C C4 20 B0 72 68 D1 3F)

label(aobXPGain_r)
registersymbol(aobXPGain_r)

aobXPGain:
aobXPGain_r:
db B8 1E 85 EB 51 B8 9E 40 9C C4 20 B0 72 68 D1 3F

[DISABLE]
aobXPGain_r:
db B8 1E 85 EB 51 B8 9E 3F 9C C4 20 B0 72 68 D1 3F

unregistersymbol(aobXPGain_r)

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>aobGemUpgradeCost1_r</Name>
      <Address>040B87B1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobGemUpgradeCost2_r</Name>
      <Address>040B88AA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobTalismanAddSCOnUpgrade_r</Name>
      <Address>040CABAC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobBarrageAmmo_r</Name>
      <Address>040912ED</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobBoltAmmo_r</Name>
      <Address>0409123C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobBeamTime_r</Name>
      <Address>04091188</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobOnlyHighRarityDrops_r</Name>
      <Address>040D0E5A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMinQualityEqualsMax_r1</Name>
      <Address>040D0D82</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMinQualityEqualsMax_r2</Name>
      <Address>040D0D84</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMinQualityEqualsMax_r3</Name>
      <Address>040D0D86</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobMinQualityEqualsMax_r4</Name>
      <Address>040D0D98</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobXPGain_r</Name>
      <Address>0CF18270</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Massive sellback value
search this value
7b 14 ae 47 e1 7a 84 3f 71 3d 0a d7 a3 70 ed 3f
right click the value you find and click "browse this memory region"
two or 3 lines above the value u searched will be "33 33 33 33 33 33 F1 3F" replace it with "00 00 00 00 00 00 10 40"
Launch any server slot:
d0 66 d6 02 12 0f 00 00 60 df 01 66 e3 1d 60 8c 0f 66 a3 24 61 86 02
(24 hits)
replace all to:
d0 66 d6 02 11 0f 00 00 60 df 01 66 e3 1d 60 8c 0f 66 a3 24 61 86 02
Works with 1.0.15. Have fun.
</Comments>
</CheatTable>
