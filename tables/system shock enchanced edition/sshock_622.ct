<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>4</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>202B3490</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>9</ID>
          <Description>"iDisplayedHealth"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>202B3490</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"iDisplayedEnergy"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>202B3492</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>303032B4</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"iEncodedHealth"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Byte</VariableType>
          <Address>303032B4</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"--aobDamagePreTest"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobDamagePreTest,89 45 EC 83 7D EC 00 0F 8E)

alloc(newmem,4096)

label(aobDamagePreTest_r)
registersymbol(aobDamagePreTest_r)

label(lblDamagePreTest)
label(lblDamagePreTestSkip)
label(lblDamagePreTestRet)

label(bEnableZeroDamage)
registersymbol(bEnableZeroDamage)

newmem:
bEnableZeroDamage:
dd 1

lblDamagePreTest:
cmp dword ptr [bEnableZeroDamage],1
jne short lblDamagePreTestSkip
xor eax,eax
lblDamagePreTestSkip:
//Alt: mov [ebp-14],eax
//Alt: cmp dword ptr [ebp-14],00
db 89 45 EC 83 7D EC 00
jmp lblDamagePreTestRet

aobDamagePreTest:
aobDamagePreTest_r:
jmp lblDamagePreTest
nop
nop
lblDamagePreTestRet:

[DISABLE]
aobDamagePreTest_r:
//Alt: mov [ebp-14],eax
//Alt: cmp dword ptr [ebp-14],00
db 89 45 EC 83 7D EC 00

unregistersymbol(aobDamagePreTest_r)

unregistersymbol(bEnableZeroDamage)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"bEnableZeroDamage"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableZeroDamage</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>GetHealthOnTick :cmp si,[202B3490]</Description>
      <Address>1023B668</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>34</Byte>
        <Byte>2B</Byte>
        <Byte>20</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>3B</Byte>
        <Byte>35</Byte>
        <Byte>90</Byte>
        <Byte>34</Byte>
        <Byte>2B</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>90</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>CheckHealthOnMismatch :cmp si,[202B3490]</Description>
      <Address>1023B690</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>EB</Byte>
        <Byte>13</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>3B</Byte>
        <Byte>35</Byte>
        <Byte>90</Byte>
        <Byte>34</Byte>
        <Byte>2B</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>7E</Byte>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>F0</Byte>
        <Byte>EB</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>SetHealthOnMismatch :mov [202B3490],si</Description>
      <Address>1023B6FE</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>F6</Byte>
        <Byte>7A</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>89</Byte>
        <Byte>35</Byte>
        <Byte>90</Byte>
        <Byte>34</Byte>
        <Byte>2B</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>80</Byte>
        <Byte>3D</Byte>
        <Byte>14</Byte>
        <Byte>0F</Byte>
        <Byte>2B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>GetHealthOnDamage1 :mov dl,[eax-01]</Description>
      <Address>1025CB63</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>BC</Byte>
        <Byte>B8</Byte>
        <Byte>47</Byte>
        <Byte>30</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>8A</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>A3</Byte>
        <Byte>BC</Byte>
        <Byte>B8</Byte>
        <Byte>47</Byte>
        <Byte>30</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>CheckHealthOnDamage :cmp byte ptr [303032B4],00</Description>
      <Address>101E9453</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>C3</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>7E</Byte>
        <Byte>F6</Byte>
      </Before>
      <Actual>
        <Byte>80</Byte>
        <Byte>3D</Byte>
        <Byte>B4</Byte>
        <Byte>32</Byte>
        <Byte>30</Byte>
        <Byte>30</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>74</Byte>
        <Byte>ED</Byte>
        <Byte>A1</Byte>
        <Byte>74</Byte>
        <Byte>43</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>GetHealthOnDamage2 :movzx eax,byte ptr [303032B4]</Description>
      <Address>101E9186</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>50</Byte>
        <Byte>88</Byte>
        <Byte>5D</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>05</Byte>
        <Byte>B4</Byte>
        <Byte>32</Byte>
        <Byte>30</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>C6</Byte>
        <Byte>45</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>0B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>GetHealthOnDamage3 :movzx eax,byte ptr [esi]</Description>
      <Address>101E953D</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>8E</Byte>
        <Byte>0C</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>06</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>45</Byte>
        <Byte>EC</Byte>
        <Byte>7F</Byte>
        <Byte>66</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>TakeHealthOnDamage :sub [esi],al</Description>
      <Address>101E95B4</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>75</Byte>
        <Byte>0E</Byte>
        <Byte>8A</Byte>
        <Byte>45</Byte>
        <Byte>EC</Byte>
      </Before>
      <Actual>
        <Byte>28</Byte>
        <Byte>06</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>EC</Byte>
        <Byte>01</Byte>
        <Byte>05</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>GetHealthAfterDamage :movzx ebx,byte ptr [esi]</Description>
      <Address>101E95C5</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>EC</Byte>
        <Byte>C1</Byte>
        <Byte>E0</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>1E</Byte>
      </Actual>
      <After>
        <Byte>99</Byte>
        <Byte>F7</Byte>
        <Byte>FB</Byte>
        <Byte>89</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>CheckForZeroDamageBeforeDamageApply :cmp dword ptr [ebp-14],00</Description>
      <Address>101E9533</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>89</Byte>
        <Byte>45</Byte>
        <Byte>EC</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>7D</Byte>
        <Byte>EC</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>8E</Byte>
        <Byte>0C</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
