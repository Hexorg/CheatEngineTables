<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>63272</ID>
      <Description>"Credits Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(credits_basepointer)
registersymbol(creditsupdate_enable)
registersymbol(creditsset_enable)

alloc(credits_basepointer,4)
alloc(creditsupdate_enable,4)
alloc(creditsset_enable,4)


[DISABLE]

unregistersymbol(credits_basepointer)
unregistersymbol(creditsupdate_enable)
unregistersymbol(creditsset_enable)

dealloc(credits_basepointer)
dealloc(creditsupdate_enable)
dealloc(creditsset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>63273</ID>
          <Description>"Credits Base Address Scan (To Activate: Battle, To Update: Battle)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(credits_savedAOB)
label(credits_returnhere)
label(credits_originalcode)
label(credits_exit)

label(creditsupdate_exit)
label(creditsset_exit)

registersymbol(credits_savedAOB)

aobscan(searchedAOB,39 12 8B 89 A0 01 00 00 3B C1)

alloc(credits_newmem,2048) //2kb should be enough


credits_newmem:
cmp dword ptr [creditsupdate_enable], #0
je creditsupdate_exit
mov [credits_basepointer], ecx
creditsupdate_exit:

cmp dword ptr [creditsset_enable], #0
je creditsset_exit
mov [ecx+1a0], #9999999
creditsset_exit:


credits_originalcode:
db 8B 89 A0 01 00 00
//mov ecx,[ecx+000001A0]


credits_exit:
jmp credits_returnhere


searchedAOB + 2:
credits_savedAOB:
jmp credits_newmem
nop
credits_returnhere:


[DISABLE]
credits_savedAOB:
db 8B 89 A0 01 00 00
//mov ecx,[ecx+000001A0]

unregistersymbol(credits_savedAOB)

dealloc(credits_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63274</ID>
          <Description>"Credits Set to 9999999? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>creditsset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63275</ID>
          <Description>"Credits Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>creditsupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63276</ID>
          <Description>"Credits"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>credits_basepointer</Address>
          <Offsets>
            <Offset>1A0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>63226</ID>
      <Description>"Currency Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(currency_basepointer)
registersymbol(currencyupdate_enable)
registersymbol(currencyset_enable)

alloc(currency_basepointer,4)
alloc(currencyupdate_enable,4)
alloc(currencyset_enable,4)


[DISABLE]

unregistersymbol(currency_basepointer)
unregistersymbol(currencyupdate_enable)
unregistersymbol(currencyset_enable)

dealloc(currency_basepointer)
dealloc(currencyupdate_enable)
dealloc(currencyset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>63227</ID>
          <Description>"Currency Base Address Scan (To Activate: View Mission Details, To Update: View Mission Details)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(currency_savedAOB)
label(currency_returnhere)
label(currency_originalcode)
label(currency_exit)

label(currencyupdate_exit)
label(currencyset_exit)

registersymbol(currency_savedAOB)

aobscan(searchedAOB,83 C4 10 8B 47 5C * * * * * * * * * * * * 83 EC 0C 6A 00 6A 00 52 51 50)


alloc(currency_newmem,2048) //2kb should be enough


currency_newmem:
mov eax, [currency_savedAOB+8]

cmp dword ptr [currencyupdate_enable], #0
je currencyupdate_exit
mov [currency_basepointer], eax
currencyupdate_exit:

cmp dword ptr [currencyset_enable], #0
je currencyset_exit
mov [eax], #9999999
mov [eax+4], #9999999
currencyset_exit:


currency_originalcode:
db 83 C4 10 8B 47 5C
//add esp,10
//mov eax,[edi+5C]


currency_exit:
jmp currency_returnhere


searchedAOB:
currency_savedAOB:
jmp currency_newmem
nop
currency_returnhere:


[DISABLE]
currency_savedAOB:
db 83 C4 10 8B 47 5C
//add esp,10
//mov eax,[edi+5C]

unregistersymbol(currency_savedAOB)

dealloc(currency_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63228</ID>
          <Description>"Coins and Medals Set to 9999999? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>currencyset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63229</ID>
          <Description>"Currency Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>currencyupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63230</ID>
          <Description>"Coins"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>currency_basepointer</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>63231</ID>
          <Description>"Medals"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>currency_basepointer</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>63239</ID>
      <Description>"Hero Stats Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(herostats_basepointer)
registersymbol(herostatsupdate_enable)
registersymbol(herostatsset_enable)

alloc(herostats_basepointer,4)
alloc(herostatsupdate_enable,4)
alloc(herostatsset_enable,4)


[DISABLE]

unregistersymbol(herostats_basepointer)
unregistersymbol(herostatsupdate_enable)
unregistersymbol(herostatsset_enable)

dealloc(herostats_basepointer)
dealloc(herostatsupdate_enable)
dealloc(herostatsset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>63240</ID>
          <Description>"Hero Stats Base Address Scan (To Activate: View Hero, To Update: View Hero)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(herostats_savedAOB)
label(herostats_returnhere)
label(herostats_originalcode)
label(herostats_exit)

label(herostatsupdate_exit)
label(herostatsset_exit)

registersymbol(herostats_savedAOB)

aobscan(searchedAOB,00 00 55 8B EC 56 83 EC 04 8B 45 08 8B 40 38 83 EC 0C 50)


alloc(herostats_newmem,2048) //2kb should be enough


herostats_newmem:
cmp dword ptr [herostatsupdate_enable], #0
je herostatsupdate_exit
mov [herostats_basepointer], eax
herostatsupdate_exit:

cmp dword ptr [herostatsset_enable], #0
je herostatsset_exit
mov [eax+34], #9999
herostatsset_exit:


herostats_originalcode:
db 8B 40 38 83 EC 0C
//mov eax,[eax+38]
//sub esp,0C


herostats_exit:
jmp herostats_returnhere


searchedAOB + c:
herostats_savedAOB:
jmp herostats_newmem
nop
herostats_returnhere:


[DISABLE]
herostats_savedAOB:
db 8B 40 38 83 EC 0C
//mov eax,[eax+38]
//sub esp,0C

unregistersymbol(herostats_savedAOB)

dealloc(herostats_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63241</ID>
          <Description>"Hero Level Set to 9999? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>herostatsset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63242</ID>
          <Description>"Hero Stats Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>herostatsupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63244</ID>
          <Description>"Class"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>herostats_basepointer</Address>
          <Offsets>
            <Offset>30</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>63247</ID>
          <Description>"Level"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>herostats_basepointer</Address>
          <Offsets>
            <Offset>34</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>63246</ID>
          <Description>"Equipped Weapon"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>herostats_basepointer</Address>
          <Offsets>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>63245</ID>
          <Description>"Equipped Armour"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>herostats_basepointer</Address>
          <Offsets>
            <Offset>3C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>63265</ID>
      <Description>"Hero Skill Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(heroskill_basepointer)
registersymbol(heroskillupdate_enable)
registersymbol(heroskillset_enable)
registersymbol(heroskilllevel_value)

alloc(heroskill_basepointer,4)
alloc(heroskillupdate_enable,4)
alloc(heroskillset_enable,4)
alloc(heroskilllevel_value,4)

heroskilllevel_value:
dd #9999

[DISABLE]

unregistersymbol(heroskill_basepointer)
unregistersymbol(heroskillupdate_enable)
unregistersymbol(heroskillset_enable)
unregistersymbol(heroskilllevel_value)

dealloc(heroskill_basepointer)
dealloc(heroskillupdate_enable)
dealloc(heroskillset_enable)
dealloc(heroskilllevel_value)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>63266</ID>
          <Description>"Hero Skill Base Address Scan (To Activate: Select Hero Skill, To Update: Select Hero Skill)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(heroskill_savedAOB)
label(heroskill_returnhere)
label(heroskill_originalcode)
label(heroskill_exit)

label(heroskillupdate_exit)
label(heroskillset_exit)

registersymbol(heroskill_savedAOB)

aobscan(searchedAOB,8B 45 0C 8B 48 54 8B 49 0C)


alloc(heroskill_newmem,2048) //2kb should be enough
alloc(heroskill_temp,4)


heroskill_newmem:
mov [heroskill_temp], ebx
mov ecx,[eax+54]

cmp dword ptr [heroskillupdate_enable], #0
je heroskillupdate_exit
mov [heroskill_basepointer], ecx
heroskillupdate_exit:

cmp dword ptr [heroskillset_enable], #0
je heroskillset_exit
mov ebx, [heroskilllevel_value]
mov [ecx+c], ebx
heroskillset_exit:

mov ebx, [heroskill_temp]


heroskill_originalcode:
db 8B 48 54 8B 49 0C
//mov ecx,[eax+54]
//mov ecx,[ecx+0C]


heroskill_exit:
jmp heroskill_returnhere


searchedAOB + 3:
heroskill_savedAOB:
jmp heroskill_newmem
nop
heroskill_returnhere:


[DISABLE]
heroskill_savedAOB:
db 8B 48 54 8B 49 0C
//mov ecx,[eax+54]
//mov ecx,[ecx+0C]

unregistersymbol(heroskill_savedAOB)

dealloc(heroskill_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63268</ID>
          <Description>"Hero Skill Level Set to Skill Level Value? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>heroskillset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63267</ID>
          <Description>"Skill Level Value"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>heroskilllevel_value</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63270</ID>
          <Description>"Hero Skill Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>heroskillupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63271</ID>
          <Description>"Skill Level"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>heroskill_basepointer</Address>
          <Offsets>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
