<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries/>
  <UserdefinedSymbols/>
  <LuaScript>function CreateTrainer()

  function setHack_Information()
  --########### Trainer Appearance edit ############--
  --Trainer Name
  control_setCaption(ht[1], 'Unnamed Trainer')
  --Game hacks title
  control_setCaption(ht[1.2] ,'Unknown game Trainer')
  --Creator credits
  control_setCaption(ht[1.1] ,'Hack was made by Unknown  author Trainer')
  --Hack enteries
  t =
  {
--Entry 0:
{'Freeze',[[aobscanmodule(timer,JewelQuest3.ifn,89 86 BC 05 00 00 8B 82) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //mov [esi+000005BC],eax
  jmp return

timer:
  jmp code
  nop
return:
registersymbol(timer)]],[[Freeze's game timer]],[[]], 'yes',[[timer:
  db 89 86 BC 05 00 00

unregistersymbol(timer)
dealloc(newmem)]],[[Freeze!]]}
}
end
ht = {}
ht[1] = createForm()
ht[2] = createPanel(ht[1])
ht[1.1] = createLabel(ht[2])
ht[1.2] = createLabel(ht[2])
ht[1.3] = createLabel(ht[2])
ht[3] = createGroupBox(ht[2])
ht[3.1] = createLabel(ht[3])
ht[3.2] = createLabel(ht[3])
ht[3.3] = createLabel(ht[3])
ht[3.4] = createLabel(ht[3])
ht[4] = createListBox(ht[3])
ht[5] = createButton(ht[3])
setProperty(ht[1] , 'Position', 'poScreenCenter')
setProperty(ht[1] , 'BorderIcons', '[biSystemMenu]')
setProperty(ht[1] , 'BiDiMode', 'bdLeftToRight')
setProperty(ht[2] , 'BiDiMode', 'bdLeftToRight')
local FontHeight = getProperty(ht[1.2] , 'Font')
setProperty(FontHeight , 'Color', 0x000000FE)
setProperty(FontHeight , 'Style', '[fsBold]')
setProperty(FontHeight , 'Height', '20')
local FontHeight = getProperty(ht[3.1] , 'Font')
setProperty(FontHeight , 'Color', 0x00007F00)
setProperty(FontHeight , 'Style', '[fsBold]')
setProperty(FontHeight , 'Height', '16')
local FontHeight = getProperty(ht[3.3] , 'Font')
setProperty(FontHeight , 'Color', 0x00F21200)
local FontHeight = getProperty(ht[1.3] , 'Font')
setProperty(FontHeight , 'Color', 0x00FF0482)
setProperty(FontHeight , 'Style', '[fsBold]')
control_setSize(ht[1], 400, 300)
x,y = control_getSize(ht[1])
control_setSize(ht[2], x,y)
control_setPosition(ht[1.1], 5, y-17)
control_setPosition(ht[1.3], 313, y-17)
control_setPosition(ht[1.2], 10, 2.5)
control_setSize(ht[3], x*0.965, y*0.85)
control_setPosition(ht[3], 5,y*1.095-y)
control_setCaption(ht[3], 'Hacks')
control_setPosition(ht[3.1], 5, 0)
control_setCaption(ht[3.1],'Select an hack from the list, then press enable!')
X,Y = control_getSize(ht[3])
control_setSize(ht[4], X*0.75-6, 64)
X,Y = control_getSize(ht[4])
control_setPosition(ht[4],5, 20)
control_setSize(ht[5], X*0.34-6, 64)
control_setPosition(ht[5],X+6, 20)
control_setCaption(ht[5], 'Enable')
control_setPosition(ht[3.3] ,5, Y+20)
control_setCaption(ht[3.3] , 'Selected hack description :')
control_setPosition(ht[3.4] ,5, Y+35)
control_setCaption(ht[3.4] , 'No hack was selected...')
setHack_Information()
local TeL = listbox_getItems(ht[4])
TempSave = {}
strings_clear(TeL)
check = 0
i = 0
repeat
  if t[i+1]==nil then
    check = 1
  else
    i = i+1
    strings_add(TeL, t[i][1])
    if t[i][8]==nil then t[i][8]=2 end
    if t[i][5]=='no' then t[i][5]=nil end
    TempSave[i] = {}
    TempSave[i][1] = t[i][1]
    TempSave[i][2] = t[i][2]
    TempSave[i][3] = t[i][3]
    TempSave[i][4] = t[i][4]
    TempSave[i][5] = t[i][5]
    TempSave[i][6] = t[i][6]
    TempSave[i][7] = t[i][7]
    TempSave[i][8] = t[i][8]
    check = 0
  end
until check == 1
function ExecuteHacksScripts()
  HLS = listbox_getItemIndex(ht[4])
  if HLS == -1 then return end
  i = HLS+1
  if t[i][5]=='no' or t[i][5]==nil and t[i][2]==nil then return showMessage(t[i][4]) end
  if t[i][5]=='yes' and TempSave[i][8]==1 then
    Asm=false
    if type(t[i][6])=='string' then
      Asm = autoAssemble(t[i][6])
    elseif type(t[i][6])=='function' then
      t[i][6]() --Executes it as an function
      Asm=true
    end
    if Asm~=true then
      return showMessage('Hack failed to disable!')
    end
    if AobSwapCheck~=true and AobSwapCheck~=nil then
      AobSwapCheck=nil
      return showMessage('Hack failed to disable!')
    end
    AobSwapCheck=nil
    t[i][1] = TempSave[i][1]
    t[i][2] = TempSave[i][2]
    t[i][3] = TempSave[i][3]
    t[i][4] = TempSave[i][4]
    t[i][5] = TempSave[i][5]
    t[i][6] = TempSave[i][6]
    t[i][7] = TempSave[i][7]
    t[i][8] = TempSave[i][8]
    local TempText
    TempText = t[i][1]
    strings_setString( TeL, HLS, TempText )
    OriginalCap=nil
    control_setCaption(ht[5], 'Enable')
    if t[i][7]=='' then
      showMessage('Done disabling hack')
    else
      showMessage(t[i][7])
    end
    TempSave[i][8] = 0
  end
  if TempSave[i][8] == 2 then
    if type(t[i][2])=='string' then
      Asm = autoAssemble(t[i][2])
    elseif type(t[i][2])=='function' then
      t[i][2]() --Executes it as an function
      Asm=true
    elseif type(t[i][2])=='nil' then
      Asm=true
    end
    if Asm~=true then
      return showMessage('Hack failed to enable!')
    end
    if AobSwapCheck~=true and AobSwapCheck~=nil then
      AobSwapCheck=nil
      return showMessage('Hack failed to enable!')
    end
    AobSwapCheck=nil
    local TempText
    TempText = t[i][1]..' - Enabled!'
    strings_setString( TeL, HLS, TempText )
    if t[i][5]=='yes' then control_setCaption(ht[5], 'Disable') end
    if t[i][4]=='' then
      showMessage('Done enabling hack')
    else
      showMessage(t[i][4])
    end
    t[i][2] = nil
    t[i][4] = 'You already enabled this hack!'
    TempSave[i][8] = 1
  end
  if TempSave[i][8] == 0 then TempSave[i][8] = 2 end
end
function HackDescriptionsChange()
  HLS = listbox_getItemIndex(ht[4])
  if HLS == -1 then return end
  i = HLS+1
  if t[i][3]~='' and t[i][3]~=nil then
    control_setCaption(ht[3.4],t[i][3])
  else
    control_setCaption(ht[3.4],'Theres no descriptions available about this hack')
  end
  if t[i][5]=='yes' and TempSave[i][8]==1 then control_setCaption(ht[5], 'Disable') end
  if t[i][5]=='yes' and TempSave[i][8]==2 then control_setCaption(ht[5], 'Enable') end
  if t[i][5]==nil then control_setCaption(ht[5], 'Enable') end
end
function CloseProgram()
  closeCE()
end
form_onClose(ht[1],CloseProgram)
control_onClick(ht[5],ExecuteHacksScripts)
setMethodProperty(ht[4], 'OnSelectionChange', HackDescriptionsChange)
end
function DEC_HEX(IN)
local B,K,OUT,I,D=16,"0123456789ABCDEF","",0
   if IN&lt;1 then
  OUT=0
  return OUT
   end
while IN&gt;0 do
I=I+1
IN,D=math.floor(IN/B),math.mod(IN,B)+1
OUT=string.sub(K,D,D)..OUT
end
return OUT
end
function Aobswap(search, change)
   aobs = AOBScan(search)
   if(aobs ~= nil) then
   j = stringlist_getCount(aobs)
   for i = 1, j do
   address=stringlist_getString(aobs,i-1)
   for i = 1, string.len(change), 3 do
   z = string.sub(change, i, i+2)
   x, y = string.find(z, "%?+")
   if (x == nil) then
   script=[[
   ]]..address.."+"..(DEC_HEX((i-1)/3))..[[:
   db ]]..z..[[
   ]]
   autoAssemble(script)
   end
   end
   end
   object_destroy(aobs);
   aobs=nil
end
end
function AobswapC(search, change)
   aobs = AOBScan(search)
   if(aobs == nil) then AobSwapCheck=false else
   j = stringlist_getCount(aobs)
   for i = 1, j do
   address=stringlist_getString(aobs,i-1)
   for i = 1, string.len(change), 3 do
   z = string.sub(change, i, i+2)
   x, y = string.find(z, "%?+")
   if (x == nil) then
   script=[[
   ]]..address.."+"..(DEC_HEX((i-1)/3))..[[:
   db ]]..z..[[
   ]]
   autoAssemble(script)
   end
   end
   end
   object_destroy(aobs);
   aobs=nil
   AobSwapCheck=true
  end
end
processes = {'JewelQuest3.ifn'}
retryamount = 0
function CheckIfFound()
if retryamount==600 then return object_destroy(AutoAttachWhenFound), Failure() end
retryamount = retryamount+1
  local SL=createStringlist()
        getProcesslist(SL)
  function inTable(tbl, item)
    for key, value in pairs(tbl) do
        if value:upper() == item:upper() then return true end
    end
    return false
  end
  for i=0,strings_getCount(SL)-1 do
    local entry = strings_getString(SL,i)
    local processname = entry:sub(10,255)
    if inTable(processes,processname) then
      openProcess(processes[1])
      object_destroy(AutoAttachWhenFound)
      showMessage("Game was found!\nYou may enable now the hacks!")
      CreateTrainer()
      break
    end
  end
end
function Failure()
showMessage("Sorry but we couldn't find the game opened!\nThe program will shut down now")
closeCE()
end
showMessage("Please make sure the game is opened\nPress OK to attach")
AutoAttachWhenFound = createTimer(nil,true)
timer_setInterval(AutoAttachWhenFound, 500)
timer_onTimer(AutoAttachWhenFound, CheckIfFound)

</LuaScript>
</CheatTable>
