<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Always Zero Offsprings"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(test,89 88 68 01 00 00 8B 50 08 8B 8A 44 02 00 00 8D 95 58 FF FF FF 89 85 58 FF)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(offsprings)

registersymbol(offsprings)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,0
originalcode:
mov [eax+00000168],ecx

exit:
jmp returnhere

test:
offsprings:
jmp newmem
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
offsprings:
mov [eax+00000168],ecx
unregistersymbol(offsprings)
//Alt: db 89 88 68 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"Stop Timer"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(time,89 98 2C 01 00 00)
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(timer)

registersymbol(timer)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here


originalcode:


exit:
jmp returnhere

time:
timer:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
timer:
mov [eax+0000012C],ebx
unregistersymbol(timer)
//Alt: db 89 98 2C 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Timer Always Zero"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(time,89 98 2C 01 00 00)
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(timer)

registersymbol(timer)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here


originalcode:
mov [eax+0000012C],00

exit:
jmp returnhere

time:
timer:
jmp newmem
nop
returnhere:

 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
timer:
mov [eax+0000012C],ebx
unregistersymbol(timer)
//Alt: db 89 98 2C 01 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of mov [eax+0000012C],ebx</Description>
      <Address>0FFB9776</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8D</Byte>
        <Byte>5B</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>98</Byte>
        <Byte>2C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>09</Byte>
        <Byte>EB</Byte>
        <Byte>00</Byte>
        <Byte>8D</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Comments>Info about this table:
</Comments>
</CheatTable>
