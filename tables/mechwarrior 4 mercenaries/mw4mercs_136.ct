<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>41</ID>
      <Description>"MW4: Mercenaries [MekTek] AOB script"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobCreditsUpdater,MW4Mercs.exe,89 4E 1C 8D 4C 24 24 E8)
aobscanmodule(aobMarketPileUpdater,MW4Mercs.exe,8D 79 14 8D 44 24 0C 50 8B CF)
aobscanmodule(aobWeightCalc01,MW4Mercs.exe,D9 87 64 06 00 00 D8 86 EC 03 00 00 5F)
aobscanmodule(aobWeightCalc02,MW4Mercs.exe,D9 44 24 04 D8 80 EC 03 00 00 8B CE)
aobscanmodule(aobWeightCalc03,MW4Mercs.exe,D9 44 24 10 D8 80 EC 03 00 00 5F 5E)
aobscanmodule(aobWeightCalc04,MW4Mercs.exe,D9 87 48 06 00 00 D8 86 EC 03 00 00 5F)
aobscanmodule(aobWeightCalc05,MW4Mercs.exe,D9 44 24 10 D8 87 EC 03 00 00 D9 9F)
aobscanmodule(aobWeightCalc06,MW4Mercs.exe,D8 4F 38 D8 80 EC 03 00 00 D9)
aobscanmodule(aobWeightCalc07,MW4Mercs.exe,D8 86 EC 03 00 00 5F D9 9E EC 03 00 00 8B 4D 20)
aobscanmodule(aobWeightCalc08,MW4Mercs.exe,D9 44 24 08 D8 86 EC 03 00 00)
aobscanmodule(aobWeightCalc09,MW4Mercs.exe,D9 87 64 06 00 00 D8 AE EC 03 00 00)
aobscanmodule(aobWeightCalc10,MW4Mercs.exe,D9 80 64 06 00 00 D8 AE EC 03 00 00)
aobscanmodule(aobWeightCalc11,MW4Mercs.exe,D9 87 48 06 00 00 D8 AE EC 03 00 00)
aobscanmodule(aobWeightCalc12,MW4Mercs.exe,D8 AF EC 03 00 00 D9 9F EC 03 00 00)
aobscanmodule(aobWeightCalc13,MW4Mercs.exe,D8 48 38 D8 A9 EC 03 00 00 D9)
aobscanmodule(aobWeightCalc14,MW4Mercs.exe,D9 43 1C D8 AE EC 03 00 00 D9)
aobscanmodule(aobWeightCalc15,MW4Mercs.exe,5F D8 AE EC 03 00 00 D9)
aobscanmodule(aobGetJumpJetFlag1,MW4Mercs.exe,8A 88 40 06 00 00 89 0B)
aobscanmodule(aobGetJumpJetFlag2,MW4Mercs.exe,8A 83 40 06 00 00 84 C0)
aobscanmodule(aobGetJumpJetFlag3,MW4Mercs.exe,8A 87 40 06 00 00 84 C0)
aobscanmodule(aobGetECMFlag1,MW4Mercs.exe,8A 88 41 06 00 00 89 0B)
aobscanmodule(aobGetECMFlag2,MW4Mercs.exe,8A 83 41 06 00 00 84 C0)
aobscanmodule(aobGetECMFlag3,MW4Mercs.exe,8A 87 41 06 00 00 84 C0)
aobscanmodule(aobGetBeagleProbeFlag1,MW4Mercs.exe,8A 88 42 06 00 00 89 0B)
aobscanmodule(aobGetBeagleProbeFlag2,MW4Mercs.exe,8A 83 42 06 00 00 84 C0)
aobscanmodule(aobGetBeagleProbeFlag3,MW4Mercs.exe,8A 87 42 06 00 00 84 C0)
aobscanmodule(aobGetLAMSFlag1,MW4Mercs.exe,8A 88 45 06 00 00 89 4D 00)
aobscanmodule(aobGetLAMSFlag2,MW4Mercs.exe,8A 83 45 06 00 00 84 C0)
aobscanmodule(aobGetLAMSFlag3,MW4Mercs.exe,8A 87 45 06 00 00 84 C0)
aobscanmodule(aobGetEnhOpticsFlag1,MW4Mercs.exe,8A 88 68 06 00 00 89 0B)
aobscanmodule(aobGetEnhOpticsFlag2,MW4Mercs.exe,8A 83 68 06 00 00 84 C0)
aobscanmodule(aobGetEnhOpticsFlag3,MW4Mercs.exe,8A 87 68 06 00 00 84 C0)
aobscanmodule(aobGetIFFJammerFlag1,MW4Mercs.exe,8A 88 69 06 00 00 89 0B)
aobscanmodule(aobGetIFFJammerFlag2,MW4Mercs.exe,8A 83 69 06 00 00 84 C0)
aobscanmodule(aobGetIFFJammerFlag3,MW4Mercs.exe,8A 87 69 06 00 00 84 C0)
aobscanmodule(aobGetAdvancedGyroFlag1,MW4Mercs.exe,8A 88 6A 06 00 00 89 0B)
aobscanmodule(aobGetAdvancedGyroFlag2,MW4Mercs.exe,8A 83 6A 06 00 00 84 C0)
aobscanmodule(aobGetAdvancedGyroFlag3,MW4Mercs.exe,8A 87 6A 06 00 00 84 C0)
aobscanmodule(aobWeaponCycleTicker,MW4Mercs.exe,89 8E C4 01 00 00 5E C2 04 00)
aobscanmodule(aobHeatReader,MW4Mercs.exe,C7 44 24 00 00 00 80 3F DF E0 F6 C4 40 74 08 D9 05 ?? ?? ?? ?? EB ?? D9 41 4C D8 71 50)
aobscanmodule(aobModuleHealthUpdater,MW4Mercs.exe,D9 46 14 D8 64 24 0C 8B 46 40)
aobscanmodule(aobJetCalc,MW4Mercs.exe,D9 44 24 08 D8 64 24 0C D9 5C 24 08)
aobscanmodule(aobRadarReader,MW4Mercs.exe,D9 81 90 01 00 00 C3)

alloc(newmem,8192)

label(aobCreditsUpdater_r)
registersymbol(aobCreditsUpdater_r)

label(lblCreditsUpdater)
label(lblCreditsUpdaterSkip)
label(lblCreditsUpdaterRet)

label(bEnableMinCredits)
label(iMinCredits)
registersymbol(bEnableMinCredits)
registersymbol(iMinCredits)

label(aobMarketPileUpdater_r)
registersymbol(aobMarketPileUpdater_r)

label(lblMarketPileUpdater)
label(lblMarketPileUpdaterSkip)
label(lblMarketPileUpdaterRet)

label(bEnableInfiniteMarket)
registersymbol(bEnableInfiniteMarket)

label(aobWeightCalc01_r)
label(aobWeightCalc02_r)
label(aobWeightCalc03_r)
label(aobWeightCalc04_r)
label(aobWeightCalc05_r)
label(aobWeightCalc06_r)
label(aobWeightCalc07_r)
label(aobWeightCalc08_r)
label(aobWeightCalc09_r)
label(aobWeightCalc10_r)
label(aobWeightCalc11_r)
label(aobWeightCalc12_r)
label(aobWeightCalc13_r)
label(aobWeightCalc14_r)
label(aobWeightCalc15_r)
registersymbol(aobWeightCalc01_r)
registersymbol(aobWeightCalc02_r)
registersymbol(aobWeightCalc03_r)
registersymbol(aobWeightCalc04_r)
registersymbol(aobWeightCalc05_r)
registersymbol(aobWeightCalc06_r)
registersymbol(aobWeightCalc07_r)
registersymbol(aobWeightCalc08_r)
registersymbol(aobWeightCalc09_r)
registersymbol(aobWeightCalc10_r)
registersymbol(aobWeightCalc11_r)
registersymbol(aobWeightCalc12_r)
registersymbol(aobWeightCalc13_r)
registersymbol(aobWeightCalc14_r)
registersymbol(aobWeightCalc15_r)

label(lblWeightCalc01)
label(lblWeightCalc01Skip)
label(lblWeightCalc01Ret)

label(lblWeightCalc02)
label(lblWeightCalc02Skip)
label(lblWeightCalc02Ret)

label(lblWeightCalc03)
label(lblWeightCalc03Skip)
label(lblWeightCalc03Ret)

label(lblWeightCalc04)
label(lblWeightCalc04Skip)
label(lblWeightCalc04Ret)

label(lblWeightCalc05)
label(lblWeightCalc05Skip)
label(lblWeightCalc05Ret)

label(lblWeightCalc06)
label(lblWeightCalc06Skip)
label(lblWeightCalc06Ret)

label(lblWeightCalc07)
label(lblWeightCalc07Skip)
label(lblWeightCalc07Ret)

label(lblWeightCalc08)
label(lblWeightCalc08Skip)
label(lblWeightCalc08Ret)

label(lblWeightCalc09)
label(lblWeightCalc09Skip)
label(lblWeightCalc09Ret)

label(lblWeightCalc10)
label(lblWeightCalc10Skip)
label(lblWeightCalc10Ret)

label(lblWeightCalc11)
label(lblWeightCalc11Skip)
label(lblWeightCalc11Ret)

label(lblWeightCalc12)
label(lblWeightCalc12Skip)
label(lblWeightCalc12Ret)

label(lblWeightCalc13)
label(lblWeightCalc13Skip)
label(lblWeightCalc13Ret)

label(lblWeightCalc14)
label(lblWeightCalc14Skip)
label(lblWeightCalc14Ret)

label(lblWeightCalc15)
label(lblWeightCalc15Skip)
label(lblWeightCalc15Ret)

label(bEnableWeightHack)
registersymbol(bEnableWeightHack)

label(pMechInLab)
registersymbol(pMechInLab)

label(aobGetJumpJetFlag1_r)
label(aobGetJumpJetFlag2_r)
label(aobGetJumpJetFlag3_r)
label(aobGetECMFlag1_r)
label(aobGetECMFlag2_r)
label(aobGetECMFlag3_r)
label(aobGetBeagleProbeFlag1_r)
label(aobGetBeagleProbeFlag2_r)
label(aobGetBeagleProbeFlag3_r)
label(aobGetLAMSFlag1_r)
label(aobGetLAMSFlag2_r)
label(aobGetLAMSFlag3_r)
label(aobGetEnhOpticsFlag1_r)
label(aobGetEnhOpticsFlag2_r)
label(aobGetEnhOpticsFlag3_r)
label(aobGetIFFJammerFlag1_r)
label(aobGetIFFJammerFlag2_r)
label(aobGetIFFJammerFlag3_r)
label(aobGetAdvancedGyroFlag1_r)
label(aobGetAdvancedGyroFlag2_r)
label(aobGetAdvancedGyroFlag3_r)
registersymbol(aobGetJumpJetFlag1_r)
registersymbol(aobGetJumpJetFlag2_r)
registersymbol(aobGetJumpJetFlag3_r)
registersymbol(aobGetECMFlag1_r)
registersymbol(aobGetECMFlag2_r)
registersymbol(aobGetECMFlag3_r)
registersymbol(aobGetBeagleProbeFlag1_r)
registersymbol(aobGetBeagleProbeFlag2_r)
registersymbol(aobGetBeagleProbeFlag3_r)
registersymbol(aobGetLAMSFlag1_r)
registersymbol(aobGetLAMSFlag2_r)
registersymbol(aobGetLAMSFlag3_r)
registersymbol(aobGetEnhOpticsFlag1_r)
registersymbol(aobGetEnhOpticsFlag2_r)
registersymbol(aobGetEnhOpticsFlag3_r)
registersymbol(aobGetIFFJammerFlag1_r)
registersymbol(aobGetIFFJammerFlag2_r)
registersymbol(aobGetIFFJammerFlag3_r)
registersymbol(aobGetAdvancedGyroFlag1_r)
registersymbol(aobGetAdvancedGyroFlag2_r)
registersymbol(aobGetAdvancedGyroFlag3_r)

label(lblGetJumpJetFlag1)
label(lblGetJumpJetFlag1Skip)
label(lblGetJumpJetFlag1Ret)

label(lblGetJumpJetFlag2)
label(lblGetJumpJetFlag2Skip)
label(lblGetJumpJetFlag2Ret)

label(lblGetJumpJetFlag3)
label(lblGetJumpJetFlag3Skip)
label(lblGetJumpJetFlag3Ret)

label(lblGetECMFlag1)
label(lblGetECMFlag1Skip)
label(lblGetECMFlag1Ret)

label(lblGetECMFlag2)
label(lblGetECMFlag2Skip)
label(lblGetECMFlag2Ret)

label(lblGetECMFlag3)
label(lblGetECMFlag3Skip)
label(lblGetECMFlag3Ret)

label(lblGetBeagleProbeFlag1)
label(lblGetBeagleProbeFlag1Skip)
label(lblGetBeagleProbeFlag1Ret)

label(lblGetBeagleProbeFlag2)
label(lblGetBeagleProbeFlag2Skip)
label(lblGetBeagleProbeFlag2Ret)

label(lblGetBeagleProbeFlag3)
label(lblGetBeagleProbeFlag3Skip)
label(lblGetBeagleProbeFlag3Ret)

label(lblGetLAMSFlag1)
label(lblGetLAMSFlag1Skip)
label(lblGetLAMSFlag1Ret)

label(lblGetLAMSFlag2)
label(lblGetLAMSFlag2Skip)
label(lblGetLAMSFlag2Ret)

label(lblGetLAMSFlag3)
label(lblGetLAMSFlag3Skip)
label(lblGetLAMSFlag3Ret)

label(lblGetEnhOpticsFlag1)
label(lblGetEnhOpticsFlag1Skip)
label(lblGetEnhOpticsFlag1Ret)

label(lblGetEnhOpticsFlag2)
label(lblGetEnhOpticsFlag2Skip)
label(lblGetEnhOpticsFlag2Ret)

label(lblGetEnhOpticsFlag3)
label(lblGetEnhOpticsFlag3Skip)
label(lblGetEnhOpticsFlag3Ret)

label(lblGetIFFJammerFlag1)
label(lblGetIFFJammerFlag1Skip)
label(lblGetIFFJammerFlag1Ret)

label(lblGetIFFJammerFlag2)
label(lblGetIFFJammerFlag2Skip)
label(lblGetIFFJammerFlag2Ret)

label(lblGetIFFJammerFlag3)
label(lblGetIFFJammerFlag3Skip)
label(lblGetIFFJammerFlag3Ret)

label(lblGetAdvancedGyroFlag1)
label(lblGetAdvancedGyroFlag1Skip)
label(lblGetAdvancedGyroFlag1Ret)

label(lblGetAdvancedGyroFlag2)
label(lblGetAdvancedGyroFlag2Skip)
label(lblGetAdvancedGyroFlag2Ret)

label(lblGetAdvancedGyroFlag3)
label(lblGetAdvancedGyroFlag3Skip)
label(lblGetAdvancedGyroFlag3Ret)

label(cEnableComponents)

label(bEnableComponentEnabler)
registersymbol(bEnableComponentEnabler)

label(aobWeaponCycleTicker_r)
registersymbol(aobWeaponCycleTicker_r)

label(lblWeaponCycleTicker)
label(lblWeaponCycleTickerSkip)
label(lblWeaponCycleTickerSkipAmmo)
label(lblWeaponCycleTickerSkipHeat)
label(lblWeaponCycleTickerSkipCoolant)
label(lblWeaponCycleTickerSkipMech)
label(lblWeaponCycleTickerRet)

label(bEnableInstantWeaponCycles)
label(bEnableInfiniteAmmo)
label(bEnableNoHeat)
label(bEnableInfiniteCoolant)
registersymbol(bEnableInstantWeaponCycles)
registersymbol(bEnableInfiniteAmmo)
registersymbol(bEnableNoHeat)
registersymbol(bEnableInfiniteCoolant)

label(pWeapon)
registersymbol(pWeapon)

label(aobHeatReader_r)
registersymbol(aobHeatReader_r)

label(lblHeatReader)
label(lblHeatReaderSkip)
label(lblHeatReaderRet)

label(aobModuleHealthUpdater_r)
registersymbol(aobModuleHealthUpdater_r)

label(lblModuleHealthUpdater)
label(lblModuleHealthUpdaterNonFriendly)
label(lblModuleHealthUpdaterSkip)
label(lblModuleHealthUpdaterRet)

label(bEnableFriendlyDamageMod)
label(fFriendlyDamageMod)
label(bEnableNonFriendlyDamageMod)
label(fNonFriendlyDamageMod)
registersymbol(bEnableFriendlyDamageMod)
registersymbol(fFriendlyDamageMod)
registersymbol(bEnableNonFriendlyDamageMod)
registersymbol(fNonFriendlyDamageMod)

label(aobJetCalc_r)
registersymbol(aobJetCalc_r)

label(lclJetCalc)
label(lclJetCalcSkip)
label(lclJetCalcRet)

label(bEnableJetFuelMod)
label(fJetFuelMod)
registersymbol(bEnableJetFuelMod)
registersymbol(fJetFuelMod)

label(aobRadarReader_r)
registersymbol(aobRadarReader_r)

label(lblRadarReader)
label(lblRadarReaderSkip)
label(lblRadarReaderRet)

label(bEnableRadarRangeMod)
label(fRadarRangeMod)
registersymbol(bEnableRadarRangeMod)
registersymbol(fRadarRangeMod)

///////////////////////////////////////////////////////////////
// Configure the default settings using the variables below. //
///////////////////////////////////////////////////////////////

newmem:
bEnableWeightHack:
dd 1
bEnableComponentEnabler:
dd 1
bEnableFriendlyDamageMod:
dd 1
fFriendlyDamageMod:
dd (float)0.75
bEnableNonFriendlyDamageMod:
dd 1
fNonFriendlyDamageMod:
dd (float)1.25
bEnableJetFuelMod:
dd 1
fJetFuelMod:
dd (float)0.5
bEnableRadarRangeMod:
dd 1
fRadarRangeMod:
dd (float)1.5
bEnableInstantWeaponCycles:
dd 1
bEnableInfiniteAmmo:
dd 1
bEnableNoHeat:
dd 1
bEnableInfiniteCoolant:
dd 1
bEnableInfiniteMarket:
dd 1
bEnableMinCredits:
dd 1
iMinCredits:
dd (int)50000000

lblCreditsUpdater:
cmp dword ptr [bEnableMinCredits], 1
jne short lblCreditsUpdaterSkip
cmp dword ptr [iMinCredits], ecx
jl short lblCreditsUpdaterSkip
mov ecx, [iMinCredits]
lblCreditsUpdaterSkip:
db 89 4E 1C 8D 4C 24 24
jmp lblCreditsUpdaterRet

lblMarketPileUpdater:
pushad
push 11
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblMarketPileUpdaterSkip
cmp dword ptr [bEnableInfiniteMarket],1
jne short lblMarketPileUpdaterSkip
add esp,8
ret 0004
lblMarketPileUpdaterSkip:
db 8D 79 14 8D 44 24 0C
jmp lblMarketPileUpdaterRet

lblWeightCalc01:
mov dword ptr [pMechInLab],esi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc01Skip
fldz
jmp lblWeightCalc01Ret
lblWeightCalc01Skip:
db D9 87 64 06 00 00 D8 86 EC 03 00 00
jmp lblWeightCalc01Ret

lblWeightCalc02:
mov dword ptr [pMechInLab],eax
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc02Skip
fldz
jmp lblWeightCalc02Ret
lblWeightCalc02Skip:
db D9 44 24 04 D8 80 EC 03 00 00
jmp lblWeightCalc02Ret

lblWeightCalc03:
mov dword ptr [pMechInLab],eax
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc03Skip
fldz
jmp lblWeightCalc03Ret
lblWeightCalc03Skip:
db D9 44 24 10 D8 80 EC 03 00 00
jmp lblWeightCalc03Ret

lblWeightCalc04:
mov dword ptr [pMechInLab],esi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc04Skip
fldz
jmp lblWeightCalc04Ret
lblWeightCalc04Skip:
db D9 87 48 06 00 00 D8 86 EC 03 00 00
jmp lblWeightCalc04Ret

lblWeightCalc05:
mov dword ptr [pMechInLab],edi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc05Skip
fldz
jmp lblWeightCalc05Ret
lblWeightCalc05Skip:
db D9 44 24 10 D8 87 EC 03 00 00
jmp lblWeightCalc05Ret

lblWeightCalc06:
mov dword ptr [pMechInLab],eax
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc06Skip
fstp st(0)
fldz
jmp lblWeightCalc06Ret
lblWeightCalc06Skip:
db D8 4F 38 D8 80 EC 03 00 00
jmp lblWeightCalc06Ret

lblWeightCalc07:
mov dword ptr [pMechInLab],esi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc07Skip
fstp st(0)
fldz
jmp lblWeightCalc07Ret
lblWeightCalc07Skip:
db D8 86 EC 03 00 00
jmp lblWeightCalc07Ret

lblWeightCalc08:
mov dword ptr [pMechInLab],esi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc08Skip
fldz
jmp lblWeightCalc08Ret
lblWeightCalc08Skip:
db D9 44 24 08 D8 86 EC 03 00 00
jmp lblWeightCalc08Ret

lblWeightCalc09:
mov dword ptr [pMechInLab],esi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc09Skip
fldz
jmp lblWeightCalc09Ret
lblWeightCalc09Skip:
db D9 87 64 06 00 00 D8 AE EC 03 00 00
jmp lblWeightCalc09Ret

lblWeightCalc10:
mov dword ptr [pMechInLab],esi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc10Skip
fldz
jmp lblWeightCalc10Ret
lblWeightCalc10Skip:
db D9 80 64 06 00 00 D8 AE EC 03 00 00
jmp lblWeightCalc10Ret

lblWeightCalc11:
mov dword ptr [pMechInLab],esi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc11Skip
fldz
jmp lblWeightCalc11Ret
lblWeightCalc11Skip:
db D9 87 48 06 00 00 D8 AE EC 03 00 00
jmp lblWeightCalc11Ret

lblWeightCalc12:
mov dword ptr [pMechInLab],edi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc12Skip
fstp st(0)
fldz
jmp lblWeightCalc12Ret
lblWeightCalc12Skip:
db D8 AF EC 03 00 00
jmp lblWeightCalc12Ret

lblWeightCalc13:
mov dword ptr [pMechInLab],ecx
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc13Skip
fstp st(0)
fldz
jmp lblWeightCalc13Ret
lblWeightCalc13Skip:
db D8 48 38 D8 A9 EC 03 00 00
jmp lblWeightCalc13Ret

lblWeightCalc14:
mov dword ptr [pMechInLab],esi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc14Skip
fldz
jmp lblWeightCalc14Ret
lblWeightCalc14Skip:
db D9 43 1C D8 AE EC 03 00 00
jmp lblWeightCalc14Ret

lblWeightCalc15:
mov dword ptr [pMechInLab],esi
cmp dword ptr [bEnableWeightHack],1
jne short lblWeightCalc15Skip
fstp st(0)
fldz
jmp lblWeightCalc15Ret
lblWeightCalc15Skip:
db D8 AE EC 03 00 00
jmp lblWeightCalc15Ret
pMechInLab:
dd 0

lblGetJumpJetFlag1:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetJumpJetFlag1Skip
call cEnableComponents
lblGetJumpJetFlag1Skip:
db 8A 88 40 06 00 00
jmp lblGetJumpJetFlag1Ret

lblGetJumpJetFlag2:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetJumpJetFlag2Skip
mov eax,ebx
call cEnableComponents
lblGetJumpJetFlag2Skip:
db 8A 83 40 06 00 00
jmp lblGetJumpJetFlag2Ret

lblGetJumpJetFlag3:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetJumpJetFlag3Skip
mov eax,edi
call cEnableComponents
lblGetJumpJetFlag3Skip:
db 8A 87 40 06 00 00
jmp lblGetJumpJetFlag3Ret

lblGetECMFlag1:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetECMFlag1Skip
call cEnableComponents
lblGetECMFlag1Skip:
db 8A 88 41 06 00 00
jmp lblGetECMFlag1Ret

lblGetECMFlag2:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetECMFlag2Skip
mov eax,ebx
call cEnableComponents
lblGetECMFlag2Skip:
db 8A 83 41 06 00 00
jmp lblGetECMFlag2Ret

lblGetECMFlag3:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetECMFlag3Skip
mov eax,edi
call cEnableComponents
lblGetECMFlag3Skip:
db 8A 87 41 06 00 00
jmp lblGetECMFlag3Ret

lblGetBeagleProbeFlag1:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetBeagleProbeFlag1Skip
call cEnableComponents
lblGetBeagleProbeFlag1Skip:
db 8A 88 42 06 00 00
jmp lblGetBeagleProbeFlag1Ret

lblGetBeagleProbeFlag2:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetBeagleProbeFlag2Skip
mov eax,ebx
call cEnableComponents
lblGetBeagleProbeFlag2Skip:
db 8A 83 42 06 00 00
jmp lblGetBeagleProbeFlag2Ret

lblGetBeagleProbeFlag3:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetBeagleProbeFlag3Skip
mov eax,edi
call cEnableComponents
lblGetBeagleProbeFlag3Skip:
db 8A 87 42 06 00 00
jmp lblGetBeagleProbeFlag3Ret

lblGetLAMSFlag1:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetLAMSFlag1Skip
call cEnableComponents
lblGetLAMSFlag1Skip:
db 8A 88 45 06 00 00
jmp lblGetLAMSFlag1Ret

lblGetLAMSFlag2:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetLAMSFlag2Skip
mov eax,ebx
call cEnableComponents
lblGetLAMSFlag2Skip:
db 8A 83 45 06 00 00
jmp lblGetLAMSFlag2Ret

lblGetLAMSFlag3:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetLAMSFlag3Skip
mov eax,edi
call cEnableComponents
lblGetLAMSFlag3Skip:
db 8A 87 45 06 00 00
jmp lblGetLAMSFlag3Ret

lblGetEnhOpticsFlag1:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetEnhOpticsFlag1Skip
call cEnableComponents
lblGetEnhOpticsFlag1Skip:
db 8A 88 68 06 00 00
jmp lblGetEnhOpticsFlag1Ret

lblGetEnhOpticsFlag2:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetEnhOpticsFlag2Skip
mov eax,ebx
call cEnableComponents
lblGetEnhOpticsFlag2Skip:
db 8A 83 68 06 00 00
jmp lblGetEnhOpticsFlag2Ret

lblGetEnhOpticsFlag3:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetEnhOpticsFlag3Skip
mov eax,edi
call cEnableComponents
lblGetEnhOpticsFlag3Skip:
db 8A 87 68 06 00 00
jmp lblGetEnhOpticsFlag3Ret

lblGetIFFJammerFlag1:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetIFFJammerFlag1Skip
call cEnableComponents
lblGetIFFJammerFlag1Skip:
db 8A 88 69 06 00 00
jmp lblGetIFFJammerFlag1Ret

lblGetIFFJammerFlag2:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetIFFJammerFlag2Skip
mov eax,ebx
call cEnableComponents
lblGetIFFJammerFlag2Skip:
db 8A 83 69 06 00 00
jmp lblGetIFFJammerFlag2Ret

lblGetIFFJammerFlag3:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetIFFJammerFlag3Skip
mov eax,edi
call cEnableComponents
lblGetIFFJammerFlag3Skip:
db 8A 87 69 06 00 00
jmp lblGetIFFJammerFlag3Ret

lblGetAdvancedGyroFlag1:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetAdvancedGyroFlag1Skip
call cEnableComponents
lblGetAdvancedGyroFlag1Skip:
db 8A 88 6A 06 00 00
jmp lblGetAdvancedGyroFlag1Ret

lblGetAdvancedGyroFlag2:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetAdvancedGyroFlag2Skip
mov eax,ebx
call cEnableComponents
lblGetAdvancedGyroFlag2Skip:
db 8A 83 6A 06 00 00
jmp lblGetAdvancedGyroFlag2Ret

lblGetAdvancedGyroFlag3:
cmp dword ptr [bEnableComponentEnabler],1
jne short lblGetAdvancedGyroFlag3Skip
mov eax,edi
call cEnableComponents
lblGetAdvancedGyroFlag3Skip:
db 8A 87 6A 06 00 00
jmp lblGetAdvancedGyroFlag3Ret

cEnableComponents:
mov word ptr [eax+00000640],0101
mov byte ptr [eax+00000642],01
mov byte ptr [eax+00000645],01
mov word ptr [eax+00000668],0101
mov byte ptr [eax+0000066A],01
ret

lblWeaponCycleTicker:
push ecx
db 89 8E C4 01 00 00
mov dword ptr [pWeapon],esi
cmp dword ptr [bEnableInstantWeaponCycles],1
jne short lblWeaponCycleTickerSkip
mov dword ptr [esi+E4],0
mov dword ptr [esi+E8],0
mov dword ptr [esi+EC],0
mov dword ptr [esi+F0],0
mov dword ptr [esi+000001BC],0
mov dword ptr [esi+000001C0],0
lblWeaponCycleTickerSkip:
cmp dword ptr [bEnableInfiniteAmmo],1
jne short lblWeaponCycleTickerSkipAmmo
mov ecx,[esi+000001B4]
cmp ecx,-1
je short lblWeaponCycleTickerSkipAmmo
xor ecx,AAAAAAAA
mov dword ptr [esi+000001B0],ecx
lblWeaponCycleTickerSkipAmmo:
mov esi,[esi+00000198]
test esi,esi
jz short lblWeaponCycleTickerSkipMech
cmp dword ptr [bEnableNoHeat],1
jne short lblWeaponCycleTickerSkipHeat
mov dword ptr [esi+4C],0
lblWeaponCycleTickerSkipHeat:
cmp dword ptr [bEnableInfiniteCoolant],1
jne short lblWeaponCycleTickerSkipCoolant
mov ecx,[esi+58]
mov dword ptr [esi+54],ecx
lblWeaponCycleTickerSkipCoolant:
lblWeaponCycleTickerSkipMech:
pop ecx
jmp lblWeaponCycleTickerRet
pWeapon:
dd 0

lblHeatReader:
cmp dword ptr [bEnableNoHeat],1
jne short lblHeatReaderSkip
mov dword ptr [ecx+4C],0
lblHeatReaderSkip:
db D9 41 4C D8 71 50
jmp lblHeatReaderRet

lblModuleHealthUpdater:
mov eax,[esi+3C]
test eax,eax
jz short lblModuleHealthUpdaterSkip
mov eax,[esi+40]
test eax,eax
jz short lblModuleHealthUpdaterSkip
sub eax,308
cmp dword ptr [eax+000000140],1
jne short lblModuleHealthUpdaterNonFriendly
cmp dword ptr [bEnableFriendlyDamageMod],1
jne short lblModuleHealthUpdaterSkip
fld dword ptr [esp+0C]
fmul dword ptr [fFriendlyDamageMod]
fstp dword ptr [esp+0C]
lblModuleHealthUpdaterSkip:
db D9 46 14 D8 64 24 0C
lblModuleHealthUpdaterDone:
jmp lblModuleHealthUpdaterRet
lblModuleHealthUpdaterNonFriendly:
cmp dword ptr [bEnableNonFriendlyDamageMod],1
jne short lblModuleHealthUpdaterSkip
fld dword ptr [esp+0C]
fmul dword ptr [fNonFriendlyDamageMod]
fstp dword ptr [esp+0C]
jmp short lblModuleHealthUpdaterSkip

lclJetCalc:
mov ecx,[esi+0000017C]
test ecx,ecx
jz short lclJetCalcSkip
cmp dword ptr [ecx+00000140],1
jne short lclJetCalcSkip
cmp dword ptr [bEnableJetFuelMod],1
jne short lclJetCalcSkip
fld dword ptr [esp+0C]
fmul dword ptr [fJetFuelMod]
fstp dword ptr [esp+0C]
lclJetCalcSkip:
db D9 44 24 08 D8 64 24 0C
jmp lclJetCalcRet

lblRadarReader:
db D9 81 90 01 00 00
push eax
mov eax,[ecx+C4]
test eax,eax
jz short lblRadarReaderSkip
cmp dword ptr [eax+000000140],1
jne short lblRadarReaderSkip
cmp dword ptr [bEnableRadarRangeMod],1
jne short lblRadarReaderSkip
fmul dword ptr [fRadarRangeMod]
lblRadarReaderSkip:
pop eax
jmp lblRadarReaderRet

aobRadarReader:
aobRadarReader_r:
jmp lblRadarReader
nop
lblRadarReaderRet:

aobJetCalc:
aobJetCalc_r:
jmp lclJetCalc
nop
nop
nop
lclJetCalcRet:

aobModuleHealthUpdater:
aobModuleHealthUpdater_r:
jmp lblModuleHealthUpdater
nop
nop
lblModuleHealthUpdaterRet:

aobHeatReader+17:
aobHeatReader_r:
jmp lblHeatReader
nop
lblHeatReaderRet:

aobWeaponCycleTicker:
aobWeaponCycleTicker_r:
jmp lblWeaponCycleTicker
nop
lblWeaponCycleTickerRet:

aobGetAdvancedGyroFlag3:
aobGetAdvancedGyroFlag3_r:
jmp lblGetAdvancedGyroFlag3
nop
lblGetAdvancedGyroFlag3Ret:

aobGetAdvancedGyroFlag2:
aobGetAdvancedGyroFlag2_r:
jmp lblGetAdvancedGyroFlag2
nop
lblGetAdvancedGyroFlag2Ret:

aobGetAdvancedGyroFlag1:
aobGetAdvancedGyroFlag1_r:
jmp lblGetAdvancedGyroFlag1
nop
lblGetAdvancedGyroFlag1Ret:

aobGetIFFJammerFlag3:
aobGetIFFJammerFlag3_r:
jmp lblGetIFFJammerFlag3
nop
lblGetIFFJammerFlag3Ret:

aobGetIFFJammerFlag2:
aobGetIFFJammerFlag2_r:
jmp lblGetIFFJammerFlag2
nop
lblGetIFFJammerFlag2Ret:

aobGetIFFJammerFlag1:
aobGetIFFJammerFlag1_r:
jmp lblGetIFFJammerFlag1
nop
lblGetIFFJammerFlag1Ret:

aobGetEnhOpticsFlag3:
aobGetEnhOpticsFlag3_r:
jmp lblGetEnhOpticsFlag3
nop
lblGetEnhOpticsFlag3Ret:

aobGetEnhOpticsFlag2:
aobGetEnhOpticsFlag2_r:
jmp lblGetEnhOpticsFlag2
nop
lblGetEnhOpticsFlag2Ret:

aobGetEnhOpticsFlag1:
aobGetEnhOpticsFlag1_r:
jmp lblGetEnhOpticsFlag1
nop
lblGetEnhOpticsFlag1Ret:

aobGetLAMSFlag3:
aobGetLAMSFlag3_r:
jmp lblGetLAMSFlag3
nop
lblGetLAMSFlag3Ret:

aobGetLAMSFlag2:
aobGetLAMSFlag2_r:
jmp lblGetLAMSFlag2
nop
lblGetLAMSFlag2Ret:

aobGetLAMSFlag1:
aobGetLAMSFlag1_r:
jmp lblGetLAMSFlag1
nop
lblGetLAMSFlag1Ret:

aobGetBeagleProbeFlag3:
aobGetBeagleProbeFlag3_r:
jmp lblGetBeagleProbeFlag3
nop
lblGetBeagleProbeFlag3Ret:

aobGetBeagleProbeFlag2:
aobGetBeagleProbeFlag2_r:
jmp lblGetBeagleProbeFlag2
nop
lblGetBeagleProbeFlag2Ret:

aobGetBeagleProbeFlag1:
aobGetBeagleProbeFlag1_r:
jmp lblGetBeagleProbeFlag1
nop
lblGetBeagleProbeFlag1Ret:

aobGetECMFlag3:
aobGetECMFlag3_r:
jmp lblGetECMFlag3
nop
lblGetECMFlag3Ret:

aobGetECMFlag2:
aobGetECMFlag2_r:
jmp lblGetECMFlag2
nop
lblGetECMFlag2Ret:

aobGetECMFlag1:
aobGetECMFlag1_r:
jmp lblGetECMFlag1
nop
lblGetECMFlag1Ret:

aobGetJumpJetFlag3:
aobGetJumpJetFlag3_r:
jmp lblGetJumpJetFlag3
nop
lblGetJumpJetFlag3Ret:

aobGetJumpJetFlag2:
aobGetJumpJetFlag2_r:
jmp lblGetJumpJetFlag2
nop
lblGetJumpJetFlag2Ret:

aobGetJumpJetFlag1:
aobGetJumpJetFlag1_r:
jmp lblGetJumpJetFlag1
nop
lblGetJumpJetFlag1Ret:

aobWeightCalc15+1:
aobWeightCalc15_r:
jmp lblWeightCalc15
nop
lblWeightCalc15Ret:

aobWeightCalc14:
aobWeightCalc14_r:
jmp lblWeightCalc14
nop
nop
nop
nop
lblWeightCalc14Ret:

aobWeightCalc13:
aobWeightCalc13_r:
jmp lblWeightCalc13
nop
nop
nop
nop
lblWeightCalc13Ret:

aobWeightCalc12:
aobWeightCalc12_r:
jmp lblWeightCalc12
nop
lblWeightCalc12Ret:

aobWeightCalc11:
aobWeightCalc11_r:
jmp lblWeightCalc11
nop
nop
nop
nop
nop
nop
nop
lblWeightCalc11Ret:

aobWeightCalc10:
aobWeightCalc10_r:
jmp lblWeightCalc10
nop
nop
nop
nop
nop
nop
nop
lblWeightCalc10Ret:

aobWeightCalc09:
aobWeightCalc09_r:
jmp lblWeightCalc09
nop
nop
nop
nop
nop
nop
nop
lblWeightCalc09Ret:

aobWeightCalc08:
aobWeightCalc08_r:
jmp lblWeightCalc08
nop
nop
nop
nop
nop
lblWeightCalc08Ret:

aobWeightCalc07:
aobWeightCalc07_r:
jmp lblWeightCalc07
nop
lblWeightCalc07Ret:

aobWeightCalc06:
aobWeightCalc06_r:
jmp lblWeightCalc06
nop
nop
nop
nop
lblWeightCalc06Ret:

aobWeightCalc05:
aobWeightCalc05_r:
jmp lblWeightCalc05
nop
nop
nop
nop
nop
lblWeightCalc05Ret:

aobWeightCalc04:
aobWeightCalc04_r:
jmp lblWeightCalc04
nop
nop
nop
nop
nop
nop
nop
lblWeightCalc04Ret:

aobWeightCalc03:
aobWeightCalc03_r:
jmp lblWeightCalc03
nop
nop
nop
nop
nop
lblWeightCalc03Ret:

aobWeightCalc02:
aobWeightCalc02_r:
jmp lblWeightCalc02
nop
nop
nop
nop
nop
lblWeightCalc02Ret:

aobWeightCalc01:
aobWeightCalc01_r:
jmp lblWeightCalc01
nop
nop
nop
nop
nop
nop
nop
lblWeightCalc01Ret:

aobMarketPileUpdater:
aobMarketPileUpdater_r:
jmp lblMarketPileUpdater
nop
nop
lblMarketPileUpdaterRet:

aobCreditsUpdater:
aobCreditsUpdater_r:
jmp lblCreditsUpdater
nop
nop
lblCreditsUpdaterRet:

[DISABLE]
aobCreditsUpdater_r:
db 89 4E 1C 8D 4C 24 24

unregistersymbol(aobCreditsUpdater_r)

unregistersymbol(bEnableMinCredits)
unregistersymbol(iMinCredits)

aobMarketPileUpdater_r:
db 8D 79 14 8D 44 24 0C

unregistersymbol(aobMarketPileUpdater_r)

unregistersymbol(bEnableInfiniteMarket)

aobWeightCalc01_r:
db D9 87 64 06 00 00 D8 86 EC 03 00 00

aobWeightCalc02_r:
db D9 44 24 04 D8 80 EC 03 00 00

aobWeightCalc03_r:
db D9 44 24 10 D8 80 EC 03 00 00

aobWeightCalc04_r:
db D9 87 48 06 00 00 D8 86 EC 03 00 00

aobWeightCalc05_r:
db D9 44 24 10 D8 87 EC 03 00 00

aobWeightCalc06_r:
db D8 4F 38 D8 80 EC 03 00 00

aobWeightCalc07_r:
db D8 86 EC 03 00 00

aobWeightCalc08_r:
db D9 44 24 08 D8 86 EC 03 00 00

aobWeightCalc09_r:
db D9 87 64 06 00 00 D8 AE EC 03 00 00

aobWeightCalc10_r:
db D9 80 64 06 00 00 D8 AE EC 03 00 00

aobWeightCalc11_r:
db D9 87 48 06 00 00 D8 AE EC 03 00 00

aobWeightCalc12_r:
db D8 AF EC 03 00 00

aobWeightCalc13_r:
db D8 48 38 D8 A9 EC 03 00 00

aobWeightCalc14_r:
db D9 43 1C D8 AE EC 03 00 00

aobWeightCalc15_r:
db D8 AE EC 03 00 00

unregistersymbol(aobWeightCalc01_r)
unregistersymbol(aobWeightCalc02_r)
unregistersymbol(aobWeightCalc03_r)
unregistersymbol(aobWeightCalc04_r)
unregistersymbol(aobWeightCalc05_r)
unregistersymbol(aobWeightCalc06_r)
unregistersymbol(aobWeightCalc07_r)
unregistersymbol(aobWeightCalc08_r)
unregistersymbol(aobWeightCalc09_r)
unregistersymbol(aobWeightCalc10_r)
unregistersymbol(aobWeightCalc11_r)
unregistersymbol(aobWeightCalc12_r)
unregistersymbol(aobWeightCalc13_r)
unregistersymbol(aobWeightCalc14_r)
unregistersymbol(aobWeightCalc15_r)

unregistersymbol(bEnableWeightHack)

unregistersymbol(pMechInLab)

aobGetJumpJetFlag1_r:
db 8A 88 40 06 00 00

aobGetJumpJetFlag2_r:
db 8A 83 40 06 00 00

aobGetJumpJetFlag3_r:
db 8A 87 40 06 00 00

aobGetECMFlag1_r:
db 8A 88 41 06 00 00

aobGetECMFlag2_r:
db 8A 83 41 06 00 00

aobGetECMFlag3_r:
db 8A 87 41 06 00 00

aobGetBeagleProbeFlag1_r:
db 8A 88 42 06 00 00

aobGetBeagleProbeFlag2_r:
db 8A 83 42 06 00 00

aobGetBeagleProbeFlag3_r:
db 8A 87 42 06 00 00

aobGetLAMSFlag1_r:
db 8A 88 45 06 00 00

aobGetLAMSFlag2_r:
db 8A 83 45 06 00 00

aobGetLAMSFlag3_r:
db 8A 87 45 06 00 00

aobGetEnhOpticsFlag1_r:
db 8A 88 68 06 00 00

aobGetEnhOpticsFlag2_r:
db 8A 83 68 06 00 00

aobGetEnhOpticsFlag3_r:
db 8A 87 68 06 00 00

aobGetIFFJammerFlag1_r:
db 8A 88 69 06 00 00

aobGetIFFJammerFlag2_r:
db 8A 83 69 06 00 00

aobGetIFFJammerFlag3_r:
db 8A 87 69 06 00 00

aobGetAdvancedGyroFlag1_r:
db 8A 88 6A 06 00 00

aobGetAdvancedGyroFlag2_r:
db 8A 83 6A 06 00 00

aobGetAdvancedGyroFlag3_r:
db 8A 87 6A 06 00 00

unregistersymbol(aobGetJumpJetFlag1_r)
unregistersymbol(aobGetJumpJetFlag2_r)
unregistersymbol(aobGetJumpJetFlag3_r)
unregistersymbol(aobGetECMFlag1_r)
unregistersymbol(aobGetECMFlag2_r)
unregistersymbol(aobGetECMFlag3_r)
unregistersymbol(aobGetBeagleProbeFlag1_r)
unregistersymbol(aobGetBeagleProbeFlag2_r)
unregistersymbol(aobGetBeagleProbeFlag3_r)
unregistersymbol(aobGetLAMSFlag1_r)
unregistersymbol(aobGetLAMSFlag2_r)
unregistersymbol(aobGetLAMSFlag3_r)
unregistersymbol(aobGetEnhOpticsFlag1_r)
unregistersymbol(aobGetEnhOpticsFlag2_r)
unregistersymbol(aobGetEnhOpticsFlag3_r)
unregistersymbol(aobGetIFFJammerFlag1_r)
unregistersymbol(aobGetIFFJammerFlag2_r)
unregistersymbol(aobGetIFFJammerFlag3_r)
unregistersymbol(aobGetAdvancedGyroFlag1_r)
unregistersymbol(aobGetAdvancedGyroFlag2_r)
unregistersymbol(aobGetAdvancedGyroFlag3_r)

unregistersymbol(bEnableComponentEnabler)

aobWeaponCycleTicker_r:
db 89 8E C4 01 00 00

aobHeatReader_r:
db D9 41 4C D8 71 50

unregistersymbol(aobHeatReader_r)
unregistersymbol(aobWeaponCycleTicker_r)

unregistersymbol(bEnableInstantWeaponCycles)
unregistersymbol(bEnableInfiniteAmmo)
unregistersymbol(bEnableNoHeat)
unregistersymbol(bEnableInfiniteCoolant)

unregistersymbol(pWeapon)

aobModuleHealthUpdater_r:
db D9 46 14 D8 64 24 0C

unregistersymbol(aobModuleHealthUpdater_r)

unregistersymbol(bEnableFriendlyDamageMod)
unregistersymbol(fFriendlyDamageMod)
unregistersymbol(bEnableNonFriendlyDamageMod)
unregistersymbol(fNonFriendlyDamageMod)

aobJetCalc_r:
db D9 44 24 08 D8 64 24 0C

unregistersymbol(aobJetCalc_r)

unregistersymbol(bEnableJetFuelMod)
unregistersymbol(fJetFuelMod)

aobRadarReader_r:
db D9 81 90 01 00 00

unregistersymbol(aobRadarReader_r)

unregistersymbol(bEnableRadarRangeMod)
unregistersymbol(fRadarRangeMod)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>371</ID>
          <Description>"Mech Lab"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>372</ID>
              <Description>"bEnableComponentEnabler"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableComponentEnabler</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>373</ID>
              <Description>"bEnableWeightHack"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableWeightHack</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>376</ID>
          <Description>"Combat"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>377</ID>
              <Description>"bEnableFriendlyDamageMod"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableFriendlyDamageMod</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>378</ID>
                  <Description>"fFriendlyDamageMod"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fFriendlyDamageMod</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>379</ID>
              <Description>"bEnableNonFriendlyDamageMod"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableNonFriendlyDamageMod</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>380</ID>
                  <Description>"fNonFriendlyDamageMod"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fNonFriendlyDamageMod</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>411</ID>
              <Description>"bEnableJetFuelMod"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableJetFuelMod</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>412</ID>
                  <Description>"fJetFuelMod"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fJetFuelMod</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>421</ID>
              <Description>"bEnableRadarRangeMod (Cycle radar range to refresh; default key is 'R'.)"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableRadarRangeMod</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>422</ID>
                  <Description>"fRadarRangeMod"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fRadarRangeMod</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>381</ID>
              <Description>"bEnableInstantWeaponCycles"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableInstantWeaponCycles</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>382</ID>
              <Description>"bEnableInfiniteAmmo"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableInfiniteAmmo</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>383</ID>
              <Description>"bEnableNoHeat"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableNoHeat</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>384</ID>
              <Description>"bEnableInfiniteCoolant"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableInfiniteCoolant</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>385</ID>
          <Description>"Market"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>386</ID>
              <Description>"bEnableInfiniteMarket (hold CTRL on add)"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableInfiniteMarket</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>42</ID>
              <Description>"bEnableMinCredits"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableMinCredits</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>43</ID>
                  <Description>"iMinCredits"</Description>
                  <Color>FF0000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iMinCredits</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
