<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="11">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Dragon Age 2 V1.03 Script AOB"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Dragon Age 2
 Game Version  : 1.03
 Script Version: 2.2
 CE Version    : 6.1
 GodMode, Stamina/mana, Injury and Money
 08-Mar-2011 Adapted from DAOrigins V1.4
 10-Mar-2011 Added CoolDown
 14-Mar-2011 Added _GodMode1
 15-Mar-2011 Adapted to V1.01
 17-Mar-2011 AOB version of the script
 29-Jul-2011 AOB version for v1.03
 By Recifense
===========================================
}

[ENABLE]
//=========================================
AOBScan(aobGodMode,d9 5e 2c 8b 76 14 85 f6 ?? ?? c6 46 34 01) //ok
AOBScan(aobMonSel,8B 8E 00 02 00 00 8B 86 04 02 00 00 2b c1 c1 f8 02 83 7C 24 10 02)
AOBScan(aobMonMoney,8B 80 C4 00 00 00 50 ?? ?? ?? ?? ?? 8b cf) //ok
AOBScan(aobMonCoolDown,D9 80 B0 00 00 00 c2 08 00 d9 ee c2 08 00) //ok
AOBScan(aobGodMode1,56 8b f1 57 8b 3e 8b 47 0c ff d0)

//=========================================
alloc(MyCode,1024)
//=========================================
// Declaration section
label(pGodMode)
label(pMonSel)
label(pMonMoney)
label(pMonCoolDown)
label(pGodMode1)
label(_GodMode)
label(_BackGM)
label(_ExitGM)
label(_MonSel)
label(_BackMS)
label(_ExitMS)
label(_MonMoney)
label(_BackMM)
label(_ExitMM)
label(_MonCoolDown)
label(_BackMC)
label(_ExitMC)
label(_GodMode1)
label(_BackGM1)
label(_ExitGM1)
label(pHero)
label(pUnit)
label(pSel)
label(pMoney)
label(iEnableGM)
label(iEnableMM)
label(iEnableMI)
label(iEnableMC)
label(iEAX)
label(fValue)
label(iMinMoney)

registersymbol(MyCode)
registersymbol(pHero)
registersymbol(pUnit)
registersymbol(pSel)
registersymbol(pMoney)
registersymbol(iEnableGM)
registersymbol(iEnableMM)
registersymbol(iEnableMI)
registersymbol(iEnableMC)
registersymbol(iMinMoney)
registersymbol(pGodMode)
registersymbol(pMonSel)
registersymbol(pMonMoney)
registersymbol(pMonCoolDown)
registersymbol(pGodMode1)

//=========================================
MyCode:
//========================================= ok V1.00/1.01/1.03
// Health and Mana
_GodMode:
 push eax

 cmp dword ptr [iEnableGM],0
 je _ExitGM                     // Jump if feature is disabled

 mov eax,[esi+14]               // Get pointer to base+01f4
 or eax,eax                     // Null?
 je _ExitGM                     // Jump if true

 lea eax,[eax-1f4]              // Point to unit structure *
 mov [pHero],eax                // Save it for debugging

 cmp dword ptr [eax+50],#10     // PlayerÂ´s unit?
 jne _ExitGM                    // Jump if false

 fst dword ptr [fValue]

 mov eax,[fValue]               // Get next value
 cmp eax,[esi+2c]               // Greater than current value?
 jge _ExitGM                    // Jump if true

 fstp st(0)                     // Discard value

 fld dword ptr [esi+2c]         // Get current value

_ExitGM:
 pop eax

 fstp dword ptr [esi+2c]        // Original code
 mov esi,[esi+14]               // Original code
 jmp _BackGM                    // Back to main code

//========================================= ok V1.01/1.03
// Selected Hero
_MonSel:
 mov [pUnit],esi                // Save pointer for debugging
 mov ecx,[esi+00000200]         // Original code *

 cmp dword ptr [esi+50],#10     // PlayerÂ´s unit?
 jne _ExitMS                    // Jump if false

 cmp dword ptr [iEnableMI],0
 je _ExitMS                     // Jump if feature is disabled

 mov eax,[ecx+20]               // Get ptr to Injury
 test eax,eax
 je _ExitMS

 mov dword ptr [eax+24],0       // No injury

_ExitMS:
 jmp _BackMS                    // Back to main code

//========================================= ok V1.00/1.01/1.03
_MonMoney:
 mov [pMoney],eax               // Save pointer for debugging

 cmp dword ptr [iEnableMM],0
 je _ExitMM                     // Jump if feature is disabled

 mov ecx,[iMinMoney]            // Get minimum value
 cmp ecx,[eax+000000c4]         // Current value &gt; minimum?
 jle _ExitMM                    // Jump if true

 mov [eax+000000c4],ecx         // Money = minimum

_ExitMM:
 mov eax,[eax+000000C4]         // Original code
 jmp _BackMM                    // Back to main code

//========================================= ok V1.01/1.03
// For Selected Hero
_MonCoolDown:
 push ecx

 cmp dword ptr [iEnableMC],0
 je _ExitMC                     // Jump if feature is disabled

 or esi,esi
 jz _ExitMC                     // Jump if invalid pointer

 cmp dword ptr [esi+50],#10     // PlayerÂ´s unit?
 jne _ExitMC                    // Jump if false

 mov ecx,(float)0.5             // 1/2 second cooldown
 cmp ecx,[eax+000000B0]
 jge _ExitMC

 mov [eax+000000B0],ecx

_ExitMC:
 pop ecx

 fld dword ptr [eax+000000B0]
 jmp _BackMC                    // Back to main code

//========================================= ok V1.01/1.03
_GodMode1:
 cmp dword ptr [ecx+44],8       // HP?
 jne _ExitGM1

 cmp dword ptr [iEnableGM],0
 je _ExitGM1                    // Jump if feature is disabled

 mov eax,[ecx+14]               // Get pointer to base+0190
 or eax,eax                     // Null?
 je _ExitGM1                    // Jump if true

 lea eax,[eax-1dc]              // Point to unit structure

 cmp dword ptr [eax+50],#10     // PlayerÂ´s unit?
 jne _ExitGM1                   // Jump if false

 mov dword ptr [ecx+2c],(float)90000.0

// ret 0004                       // Avoid routine

_ExitGM1:
 push esi                       // Original code
 mov esi,ecx                    // Original code
 push edi                       // Original code
 mov edi,[esi]                  // Original code
 jmp _BackGM1                   // Back to main code

//=========================================
// Variables
pHero:
 dd 0
pUnit:
 dd 0
pSel:
 dd 0
pMoney:
 dd 0
iEnableGM:
 dd 1
iEnableMM:
 dd 1
iEnableMI:
 dd 1
iEnableMC:
 dd 1
iEAX:
 dd 0
fValue:
 dd 0
iMinMoney:
 dd #409988

//=========================================
// Hacking Points
//"DragonAge2.exe"+1bb3a9: //v1.0
//"DragonAge2.exe"+1bd1f9: //v1.01
//"DragonAge2.exe"+1bcc09: //v1.03
aobGodMode:
pGodMode:
 jmp _GodMode
 nop
_BackGM:

//"DragonAge2.exe"+15ef26: //v1.0
//"DragonAge2.exe"+1604e6: //v1.01
//"DragonAge2.exe"+15f376: //v1.03 *
aobMonSel:
pMonSel:
 jmp _MonSel
 nop
_BackMS:

//"DragonAge2.exe"+08fad0: //v1.0
//"DragonAge2.exe"+0901c0: //v1.01
//"DragonAge2.exe"+08feb0: //v1.03
aobMonMoney:
pMonMoney:
 jmp _MonMoney
 nop
_BackMM:

//"DragonAge2.exe"+15ebea: //v1.0
//"DragonAge2.exe"+1601aa: //v1.01
//"DragonAge2.exe"+15f03a: //v1.03
aobMonCoolDown:
pMonCoolDown:
 jmp _MonCoolDown
 nop
_BackMC:

//"DragonAge2.exe"+1a84f0: //v1.0
//"DragonAge2.exe"+1aa000: //v1.01
//"DragonAge2.exe"+1a97f0: //v1.03
aobGodMode1:
pGodMode1:
 jmp _GodMode1
 nop
_BackGM1:

//=========================================
// Original Codes
[DISABLE]
//"DragonAge2.exe"+1bb3a9: //v1.0
//"DragonAge2.exe"+1bd1f9: //v1.01
//"DragonAge2.exe"+1bcc09: //v1.03
pGodMode:
 fstp dword ptr [esi+2c]
 mov esi,[esi+14]

//"DragonAge2.exe"+15ef26: //v1.0
//"DragonAge2.exe"+1604e6: //v1.01
//pMonSel:
// mov ecx,[esi+000001E8]
//"DragonAge2.exe"+15f376: //v1.03 *
pMonSel:
 mov ecx,[esi+00000200]

//"DragonAge2.exe"+08fad0: //v1.0
//"DragonAge2.exe"+0901c0: //v1.01
//"DragonAge2.exe"+08feb0: //v1.03
pMonMoney:
 mov eax,[eax+000000C4]

//"DragonAge2.exe"+15ebea: //v1.0
//"DragonAge2.exe"+1601aa: //v1.01
//"DragonAge2.exe"+15f03a: //v1.03
pMonCoolDown:
 fld dword ptr [eax+000000B0]

//"DragonAge2.exe"+1a84f0: //v1.0
//"DragonAge2.exe"+1aa000: //v1.01
//"DragonAge2.exe"+1a97f0: //v1.03
pGodMode1:
 push esi
 mov esi,ecx
 push edi
 mov edi,[esi]

unregistersymbol(MyCode)
unregistersymbol(pHero)
unregistersymbol(pUnit)
unregistersymbol(pSel)
unregistersymbol(pMoney)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMM)
unregistersymbol(iEnableMI)
unregistersymbol(iEnableMC)
unregistersymbol(iMinMoney)
unregistersymbol(pGodMode)
unregistersymbol(pMonSel)
unregistersymbol(pMonMoney)
unregistersymbol(pMonCoolDown)
unregistersymbol(pGodMode1)

dealloc(MyCode)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Enable/Disable God Mode"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Enable/Disable Minimum Money"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Enable/Disable No Injury"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMI</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Enable/Disable Fast Cooldown"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Minimum Money Value"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iMinMoney</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Selected Unit XP"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pUnit</Address>
          <Offsets>
            <Offset>1C</Offset>
            <Offset>8C</Offset>
            <Offset>200</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Selected Unit Attribute Points"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pUnit</Address>
          <Offsets>
            <Offset>1C</Offset>
            <Offset>98</Offset>
            <Offset>200</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Selected Unit Skill Points"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pUnit</Address>
          <Offsets>
            <Offset>1C</Offset>
            <Offset>9C</Offset>
            <Offset>200</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Selected Unit Specialization Points"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pUnit</Address>
          <Offsets>
            <Offset>1C</Offset>
            <Offset>A0</Offset>
            <Offset>200</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pHero1</Name>
      <Address>0217018D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MyCode</Name>
      <Address>02260000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>0226014B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUnit</Name>
      <Address>0226014F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSel</Name>
      <Address>02260153</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMoney</Name>
      <Address>02260157</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGM</Name>
      <Address>0226015B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMM</Name>
      <Address>0226015F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMI</Name>
      <Address>02260163</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMC</Name>
      <Address>02260167</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iMinMoney</Name>
      <Address>02260173</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGodMode</Name>
      <Address>005BCC09</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonSel</Name>
      <Address>0055F376</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonMoney</Name>
      <Address>0048FEB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonCoolDown</Name>
      <Address>0055F03A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGodMode1</Name>
      <Address>005A97F0</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Dragon Age 2
 Game Version  : 1.03
 Script Version: 2.2
 CE Version    : 6.1
 GodMode, Stamina/mana, Injury and Money
 08-Mar-2011 Adapted from DAOrigins V1.4
 10-Mar-2011 Added CoolDown
 14-Mar-2011 Added _GodMode1
 15-Mar-2011 Adapted to V1.01
 17-Mar-2011 AOB version of the script
 29-Jul-2011 AOB version for v1.03
 By Recifense
===========================================
[Note] In order to make Money cheat work, just access the inventory (twice). 
</Comments>
</CheatTable>
