<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>82</ID>
      <Description>"[X] &lt;== King Arthur Collection v1.07 (steam) Script v1.2"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : King Arthur Collection - The Roleplay Wargame
 Game Version  : 1.07
 Game Sponsor  : Myself
 Process Name  : Launcher.exe
 Relevant Info : 32bits/TBS-RTS
 Script Version: 1.2
 CE Version    : 6.6
 Release date  : 19-Jan-2017
 Author        : Recifense
 History:
 16-Sep-2012: First Release (CE62)
 11-Dec-2012: Fix a bug related to GM (Player ID)
 19-Jan-2017: Release for KAC v1.07 (CE66)
 Features:
 - God Mode
 - Full Mana
 - Full Stamina
 - Minimum Gold
 - Minimum Food
 - Unlimited Movement
 - Troop Size Recover
 - Useful Pointers
===========================================
}

//=========================================
// Checking CE version
{$lua}
  if(getCEVersion() &lt; 6.5) then
    ShowMessage('Sorry. CE version should be 6.5 or above')
  end
{$asm}

//=========================================
// Checking Selected Process
{$lua}
  if(process == nil) then
    ShowMessage('No process was selected')
  elseif (process ~= "Launcher.exe") then
    ShowMessage('Error. Expected Process = Launcher.exe')
  end
{$asm}

//=========================================
// Definitions
define(LUDO,"Launcher.exe")
define(MOPU,Game.dll+0091d1bb)
define(GDMD,Game.dll+0095c915)
define(MOUM,Game.dll+00886d36)
define(MOUS,Game.dll+0091da99)
define(MOSA,Game.dll+00cb2a7a)
define(MOPR,Game.dll+005cd110)
define(MOMP,Game.dll+00cb6aac)
define(MMP1,Game.dll+00cb6a70)
define(MOSH,Game.dll+009401b0)
define(MOST,Game.dll+00cb7023)

define(BMPR,Game.dll+00108894)

//=========================================
// Constants used in the script (that can be changed)
define(ctCE65,(float)6.5)
define(ctMMON,#66000)  // Minimum Money
define(ctMATT,#10)     // Minimum Attributes

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MOPU,03 a8 6c 31 00 00 03 98 c4 32 00 00 47 3b be 6c 32 00 00 ?? ?? 89)
assert(GDMD,29 96 6c 31 00 00 80 7c 24 38 00 ?? ?? 8b 16 50 8b 42 14 8b ce ff)
assert(MOUM,29 85 7c 31 00 00 80 7e 5d 00 ?? ?? 55 8b ce e8 ?? ?? ?? ?? 85 ed)
assert(MOUS,89 86 34 33 00 00 5e 83 c4 0c c2 04 00 cc cc cc cc cc cc ?? ?? ??)
assert(MOSA,8b 4e 08 33 ff e8 ?? ?? ?? ?? 85 c0 ?? ?? ?? ?? 8d 9b 00 00 00 00)
assert(MOPR,8b 81 20 01 00 00 c3 cc cc cc cc cc cc cc cc cc 8b 44 24 04 89 81)
assert(MOMP,23 d0 66 89 51 34 c2 04 00 cc cc cc cc cc cc cc cc cc cc ?? ?? ??)
assert(MMP1,66 8b 41 34 c3 cc cc cc cc cc cc cc cc ?? ?? ?? ?? ?? ?? ?? ?? ??)
assert(MOSH,8b 81 e0 36 00 00 c3 cc cc cc cc cc cc cc cc cc 8b 81 e4 36 00 00)
assert(MOST,8b 92 08 30 00 00 33 c0 83 fa 05 ?? ?? 39 81 b8 00 00 00 ?? ?? b8)

//=========================================
alloc(MyCode,4096,$process)
//=========================================
// Declaration section
label(_MonPlayerUnits)
label(_BackMPU)
label(_ExitMPU)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)
label(_MonUnitMana)
label(_BackMUM)
label(_ExitMUM)
label(_MonUnitStamina)
label(_BackMUS)
label(_ExitMUS)
label(_MonSelArmy)
label(_BackMSA)
label(_ExitMSA)
label(_MonPlayerRes)
label(_BackMPR)
label(_ExitMPR)
label(_MonMovePoints)
label(_BackMMP)
label(_ExitMMP)
label(_MonMovePoints1)
label(_BackMP1)
label(_ExitMP1)
label(_MonSelHero)
label(_BackMSH)
label(_ExitMSH)
label(_MonSelTroop)
label(_BackMST)
label(_ExitMST)

label(iEnableGMD)
label(iEnableMUM)
label(iEnableMUS)
label(iEnableMPR)
label(iEnableMMP)
label(iEnableMTS)

label(iSpecialHP)
label(iMinGold)
label(iMinFood)

label(pUnit)
label(pArmy)
label(pPlayer)
label(pHero)
label(pTroop)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableGMD)
registersymbol(iEnableMUM)
registersymbol(iEnableMUS)
registersymbol(iEnableMPR)
registersymbol(iEnableMMP)
registersymbol(iEnableMTS)
registersymbol(iMinGold)
registersymbol(iMinFood)
registersymbol(pUnit)
registersymbol(pArmy)
registersymbol(pPlayer)
registersymbol(pHero)
registersymbol(pTroop)

//=========================================
MyCode:
//-----------------------------------------------------------
// RTS
//-----------------------------------------------------------
//=========================================
// RTS - Troop under cursor
_MonPlayerUnits:
 push ecx

 mov ecx,[esi+0000303c]            // get pCommon
 test ecx,ecx
 jz _ExitMPU

 cmp byte ptr [ecx+44],00
 jne _ExitMPU

 cmp dword ptr [iEnableGMD],0
 je _MonPU00                       // Jump if feature is disabled

 mov ecx,[iSpecialHP]
 mov [eax+000032c4],ecx            // imHP
 mov [eax+0000316c],ecx            // icHP

_MonPU00:
 cmp dword ptr [iEnableMUM],0
 je _MonPU01                       // Jump if feature is disabled

 cmp dword ptr [eax+000032d4],00
 je _MonPU01

 mov ecx,#5000
 mov [eax+000032d4],ecx            // imMana
 mov [eax+0000317c],ecx            // icMana

_MonPU01:
 cmp dword ptr [iEnableMUS],0
 je _ExitMPU                       // Jump if feature is disabled

 mov ecx,[esi+0000332c]            // imStamina
 mov [esi+00003334],ecx            // icStamina

_ExitMPU:
 pop ecx

 add ebp,[eax+0000316C]            // Original code (rds HP)
 jmp _BackMPU                      // Back to main code

//=========================================
// RTS - Heroes+Soldiers
_GodMode:
 push ecx

 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 mov ecx,[esi+00003404]            // get pTroop
 test ecx,ecx
 jz _ExitGMD

 mov ecx,[ecx+0000303c]            // get pCommon
 test ecx,ecx
 jz _ExitGMD

 cmp byte ptr [ecx+44],00
 jne _ExitGMD

 cmp edx,[esi+0000316C]
 jge _ExitGMD

 mov ecx,[iSpecialHP]
 mov [esi+000032c4],ecx            // imHP
 mov [esi+0000316c],ecx            // icHP

 xor edx,edx                       // value2decrease = 0

_ExitGMD:
 pop ecx

 sub [esi+0000316C],edx            // Original code (decs HP)
 jmp _BackGMD                      // Back to main code

//=========================================
// RTS - Heroes
_MonUnitMana:
 push ecx

 mov [pUnit],ebp                   // Save ptr for debugging

 mov ecx,[ebp+00003404]            // get pTroop
 test ecx,ecx
 jz _ExitMUM

 mov ecx,[ecx+0000303c]            // get pCommon
 test ecx,ecx
 jz _ExitMUM

 cmp byte ptr [ecx+44],00
 jne _ExitMUM

 cmp dword ptr [iEnableMUM],0
 je _ExitMUM                       // Jump if feature is disabled

 cmp dword ptr [ebp+000032d4],00
 je _ExitMUM

 mov ecx,#5000
 mov [ebp+000032d4],ecx            // imMana
 mov [ebp+0000317c],ecx            // icMana

 xor eax,eax                       // value2decrease = 0

_ExitMUM:
 pop ecx

 sub [ebp+0000317C],eax            // Original code (decs Mana)
 jmp _BackMUM                      // Back to main code

//=========================================
// RTS - Troops' Stamina
_MonUnitStamina:
 push ecx

 mov ecx,[esi+0000303c]            // get pCommon
 test ecx,ecx
 jz _ExitMUS

 cmp byte ptr [ecx+44],00
 jne _ExitMUS

 cmp dword ptr [iEnableMUS],0
 je _ExitMUS                       // Jump if feature is disabled

 mov eax,[esi+0000332c]            // imStamina

_ExitMUS:
 pop ecx

 mov [esi+00003334],eax            // Original code (upds Stamina)
 jmp _BackMUS                      // Back to main code

//-----------------------------------------------------------
// TBS
//-----------------------------------------------------------
//=========================================
// TBS - On Selecting an Army
_MonSelArmy:
 mov ecx,[esi+08]                  // Original code (rds pOwner)
 mov [pPlayer],ecx

 mov [pArmy],esi

_ExitMSA:
 xor edi,edi                       // Original code
 jmp _BackMSA                      // Back to main code

//=========================================
// TBS - Resource
_MonPlayerRes:
 mov eax,[esp]
 cmp eax,BMPR
 jne _ExitMPR

 cmp ecx,[pPlayer]
 jne _ExitMPR

 cmp dword ptr [iEnableMPR],0
 je _ExitMPR                       // Jump if feature is disabled

 mov eax,[iMinGold]
 cmp eax,[ecx+00000110]
 jle _MonPR00

 mov [ecx+00000110],eax

_MonPR00:
 mov eax,[iMinFood]
 cmp eax,[ecx+00000120]
 jle _ExitMPR

 mov [ecx+00000120],eax

_ExitMPR:
 mov eax,[ecx+00000120]            // Original code (upds Stamina)
 jmp _BackMPR                      // Back to main code

//=========================================
// TBS - Unlimited MP and Size Recover
_MonMovePoints:
 and edx,eax                    // Original code

 push eax
 push ebx

 mov ebx,[ecx+68]               // Get ptr to Army
 cmp ebx,[pArmy]
 jne _ExitMMP

 mov ebx,[ebx+08]               // Get ptr to Owner
 cmp ebx,[pPlayer]              // Is it a player's troop?
 jne _ExitMMP

 mov ebx,[ecx+10]               // Get pTroopInfo
 test ebx,ebx
 jz _ExitMMP

 cmp dword ptr [iEnableMMP],0
 je _MonMP00                    // Jump if feature is disabled

 mov dx,[ebx+00003068]          // Get max MP
 mov [ecx+34],dx                // Update MP

_MonMP00:
 cmp dword ptr [iEnableMTS],0
 je _ExitMMP                    // Jump if feature is disabled

 mov eax,[ebx+00003088]         // Get max size
 mov [ecx+14],eax               // Update max troop size
 mov [ecx+18],eax               // Update current troop size

_ExitMMP:
 pop ebx
 pop eax

 mov [ecx+34],dx                // Original code (Update MP)
 jmp _BackMMP                   // Back to main code

//=========================================
// TBS - Troops of Selected Army
_MonMovePoints1:
 push ebx

 mov ebx,[ecx+68]               // get pArmy
 cmp ebx,[pArmy]
 jne _ExitMP1

 mov ebx,[ecx+10]               // get pTroopInfo
 test ebx,ebx
 jz _ExitMP1

 cmp dword ptr [iEnableMMP],0
 je _ExitMP1                    // Jump if feature is disabled

 mov ax,[ebx+00003068]          // Get max MP
 mov [ecx+34],ax                // Update MP

_ExitMP1:
 pop ebx

 mov ax,[ecx+34]                // Original code
 ret                            // Original code
 jmp _BackMP1                   // Back to main code (never executed) :D

//=========================================
// TBS - On Status Screen
_MonSelHero:
 mov [pHero],ecx

_ExitMSH:
 mov eax,[ecx+000036E0]            // Original code (rds level)
 jmp _BackMSH                      // Back to main code

//=========================================
// TBS - On Status Screen
_MonSelTroop:
 mov [pTroop],edx

_ExitMST:
 mov edx,[edx+00003008]            // Original code (rds level)
 jmp _BackMST                      // Back to main code

//=========================================
 db '==========================================&gt;'
 db 'CE6.6 Script by Recifense 011917'
//=========================================
// Variables
iEnableGMD:
 dd 0
iEnableMUM:
 dd 0
iEnableMUS:
 dd 0
iEnableMPR:
 dd 0
iEnableMMP:
 dd 0
iEnableMTS:
 dd 0
iMinGold:
 dd #6600
iMinFood:
 dd #16600
iSpecialHP:
 dd #99990
pUnit:
 dd 0
pArmy:
 dd 0
pPlayer:
 dd 0
pHero:
 dd 0
pTroop:
 dd 0

//=========================================
// Hacking Points
MOPU:
 jmp _MonPlayerUnits
 nop
_BackMPU:

GDMD:
 jmp _GodMode
 nop
_BackGMD:

MOUM:
 jmp _MonUnitMana
 nop
_BackMUM:

MOUS:
 jmp _MonUnitStamina
 nop
_BackMUS:

MOSA:
 jmp _MonSelArmy
_BackMSA:

MOPR:
 jmp _MonPlayerRes
 nop
_BackMPR:

MOMP:
 jmp _MonMovePoints
 nop
_BackMMP:

MMP1:
 jmp _MonMovePoints1
_BackMP1:

MOSH:
 jmp _MonSelHero
 nop
_BackMSH:

MOST:
 jmp _MonSelTroop
 nop
_BackMST:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MOPU:
// add ebp,[eax+0000316C]
 db 03 a8 6c 31 00 00

GDMD:
// sub [esi+0000316C],edx
 db 29 96 6c 31 00 00

MOUM:
// sub [ebp+0000317C],eax
 db 29 85 7c 31 00 00

MOUS:
// mov [esi+00003334],eax
 db 89 86 34 33 00 00

MOSA:
// mov ecx,[esi+08]
// xor edi,edi
 db 8b 4e 08 33 ff

MOPR:
// mov eax,[ecx+00000120]
 db 8b 81 20 01 00 00

MOMP:
// and edx,eax
// mov [ecx+34],dx
 db 23 d0 66 89 51 34

MMP1:
// mov ax,[ecx+34]
// ret
 db 66 8b 41 34 c3

MOSH:
// mov eax,[ecx+000036E0]
 db 8b 81 e0 36 00 00

MOST:
// mov edx,[edx+00003008]
 db 8b 92 08 30 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMUM)
unregistersymbol(iEnableMUS)
unregistersymbol(iEnableMPR)
unregistersymbol(iEnableMMP)
unregistersymbol(iEnableMTS)
unregistersymbol(iMinGold)
unregistersymbol(iMinFood)
unregistersymbol(pUnit)
unregistersymbol(pArmy)
unregistersymbol(pPlayer)
unregistersymbol(pHero)
unregistersymbol(pTroop)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>98</ID>
          <Description>"[X] &lt;== God Mode ----------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableGMD",1)
getAddressList().getMemoryRecordByID(98).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableGMD",0)
getAddressList().getMemoryRecordByID(98).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>99</ID>
          <Description>"[X] &lt;== Full Mana -----------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMUM",1)
getAddressList().getMemoryRecordByID(99).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMUM",0)
getAddressList().getMemoryRecordByID(99).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"[X] &lt;== Full Stamina --------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMUS",1)
getAddressList().getMemoryRecordByID(100).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMUS",0)
getAddressList().getMemoryRecordByID(100).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"[X] &lt;== Move Unlimited Times ---------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMMP",1)
getAddressList().getMemoryRecordByID(101).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMMP",0)
getAddressList().getMemoryRecordByID(101).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"[X] &lt;== Recover Troop Size (on Move)  -------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMTS",1)
getAddressList().getMemoryRecordByID(102).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMTS",0)
getAddressList().getMemoryRecordByID(102).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"[X] &lt;== Minimum Resources  -----------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMPR",1)
getAddressList().getMemoryRecordByID(103).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMPR",0)
getAddressList().getMemoryRecordByID(103).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Minimum Gold Value ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinGold</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Minimum Food Value ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinFood</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>104</ID>
          <Description>"[X] &lt;======= Selected Hero Info"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>404080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>74</ID>
              <Description>"Current Level [**1] ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>36E0</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>111</Key>
                  </Keys>
                  <Value>99</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>77</ID>
              <Description>"Current XP [**2] ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>3070</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>75</ID>
              <Description>"Available Skill Points [**3] ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>36E4</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>111</Key>
                  </Keys>
                  <Value>48</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>106</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>76</ID>
              <Description>"Available Attributes Points [**4] ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>Byte</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>3871</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>111</Key>
                  </Keys>
                  <Value>99</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>106</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"[X] &lt;======= Selected Troop Info"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>404080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>78</ID>
              <Description>"Current Level/Ability Points [**5] ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pTroop</Address>
              <Offsets>
                <Offset>3008</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>96</Key>
                  </Keys>
                  <Value>10</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>80</ID>
              <Description>"Current XP [**6] ==&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pTroop</Address>
              <Offsets>
                <Offset>3070</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>96</Key>
                  </Keys>
                  <Value>5500</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"[X] &lt;== Table/Script Information"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
getMainForm().CommentButton.doClick()
{$ASM}

[disable]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Recifense</Name>
      <Address>20170119</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : King Arthur Collection - The Roleplay Wargame
 Game Version  : 1.07
 Game Sponsor  : Myself
 Process Name  : Launcher.exe
 Relevant Info : 32bits/TBS-RTS
 Script Version: 1.2
 CE Version    : 6.6
 Release date  : 19-Jan-2017
 Author        : Recifense
 History:
 16-Sep-2012: First Release (CE62)
 11-Dec-2012: Fix a bug related to GM (Player ID)
 19-Jan-2017: Release for KAC v1.07 (CE66)
 Features:
 16-Sep-12: First Release
 11-Dec-12: Fix a bug related to GM (Player ID)
 Features:
 - God Mode     [*1]
 - Full Mana    [*2]
 - Full Stamina [*3]
 - Minimum Gold [*4]
 - Minimum Food [*5]
 - Unlimited Movement [*6]
 - Troop Size Recover [*7]
 - Useful Pointers    [**][***]
===========================================
[*1] RTS - During battle, the player units will be harder to kill (but some may still die); (Pass the cursor over each troop on the list)
[*2] RTS - the player heroes will always have full mana;
[*3] RTS - the player troops will always have full stamina;
[*4] TBS - Player's gold will go under minimum value; (you have to select one of yuor armies for it taking effect)
[*5] TBS - Player's food will go under minimum value; (you have to select one of yuor armies for it taking effect)
[*6] Player's select army will have free movement;
[*7] Player's troops will recover size when moving;
===========================================
[**1] Hero's maximum level is 99;
[**2] Hero's maximum XP is 1320000;
[**3] Hero's maximum Skill points is 48;
[**4] Hero's maximum Attribute points is 100;
[**5] Troop's maximum ability points is 10
[**6] Troop's maximum XP is 5500
===========================================
[USAGE]
 - Run CE 6.5 or greater;
 - Run the GAME;
 - Load game process "Launcher.exe" via CE;
 - Load this Table;
 - Activate the first script  by clicking on its box [X];
 - Now Activate the script of each cheat you want to use;
 - Go back to the game and have fun.
===========================================
[HOTKEYS]:
[CTRL]+Home = Enable  all cheats
[CTRL]+End  = Disable all cheats
//------
[CTRL]+numeric / = Make currernt selected HERO's:
- Level = 99
- Available Skill Points = 48
- Available Attribute Points = 99
[CTRL]+numeric * = Make currernt selected HERO's:
- Available Skill Points = 0
- Available Attribute Points = 0
[CTRL]+numeric 0 = Make currernt selected TROOP's:
- Level/Ability Points = 10
- XP = 5500 (Maximum)
-------------------------------------------
[NOTE] You can create/modify HOTKEYS for each table entry.
===========================================
[***] You can get Ability/Skill/Attribute points by:
- Changing the XP value in any season, but it will only take effect on next WINTER;
- Changing (during winter) the ability points + XP for troops or/and the level + Skill points + attribute points for heroes.
[NOTE] While the troop's or hero's status detail is displayed (the screen that is used to distribute the points)   
===========================================
[INFO]
Tested on Win10 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
