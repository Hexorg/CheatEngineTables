<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somereadAOB,D9 00 8B 4C 24 04 D9 19 C2 14 00 8B)
registersymbol(somereadAOB)
aobscan(healthcheckzeroonhitAOB,F3 0F 10 4C 24 10 F3 0F 10 44 24 04 0F 2F C8)
registersymbol(healthcheckzeroonhitAOB)

label(pPlayer)
registersymbol(pPlayer)
label(pPlayerCheck1)
registersymbol(pPlayerCheck1)
label(pPlayerCheck2)
registersymbol(pPlayerCheck2)
label(pTrip)
registersymbol(pTrip)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(checktrip)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp ebx,0
jne originalcode
cmp edi,0
jne originalcode
cmp [eax-4],0
je originalcode
cmp [eax-8],4
jne originalcode
cmp [eax+64],0
je originalcode
cmp [eax+4],0
je originalcode
cmp [eax+8],0
je originalcode
cmp [eax+c],0
je originalcode
cmp [eax+10],0
je originalcode
cmp [eax+18],0
je checktrip
mov [pPlayer],eax
mov ecx,[eax+10]
mov [pPlayerCheck1],ecx
mov ecx,[eax+14]
mov [pPlayerCheck2],ecx
fld dword ptr [eax]
mov ecx,[esp+04]
jmp exit

checktrip:
mov ecx,[pPlayerCheck1]
cmp [eax+10],ecx
jne originalcode
mov ecx,[pPlayerCheck2]
cmp [eax+14],ecx
jne originalcode
mov [pTrip],eax

originalcode:
mov eax,[esp+08]
fld dword ptr [eax]
mov ecx,[esp+04]

exit:
jmp returnhere

///
pPlayer:
dd 0
pPlayerCheck1:
dd 0
pPlayerCheck2:
dd 0
pTrip:
dd 0
///

somereadAOB: //"Enslaved.exe"+1C676C:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somereadAOB: //"Enslaved.exe"+1C676C:
db D9 00 8B 4C 24 04
//Alt: fld dword ptr [eax]
//Alt: mov ecx,[esp+04]
unregistersymbol(somereadAOB)
unregistersymbol(healthcheckzeroonhitAOB)
unregistersymbol(pPlayer)
unregistersymbol(pPlayerCheck1)
unregistersymbol(pPlayerCheck2)
unregistersymbol(pTrip)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>28</ID>
          <Description>"[scripts]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>12</ID>
              <Description>"Undead - Monkey"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(bFullPlayerHealth)
registersymbol(bFullPlayerHealth)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(setfullhealth)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esp+14]
lea eax,[eax+4]
cmp eax,edx
mov eax,[esp+14]
jne originalcode
cmp [eax+18],0
je originalcode
mov [pPlayer],eax
push ecx
mov ecx,[eax+10]
mov [pPlayerCheck1],ecx
mov ecx,[eax+14]
mov [pPlayerCheck1],ecx
pop ecx
movss xmm1,[esp+10]
cmp byte ptr [bFullPlayerHealth],01
je setfullhealth
cmp dword ptr [esp+04],(float)1.0
jge exit
mov dword ptr [esp+04],(float)1.0
jmp exit

setfullhealth:
movss xmm0,[eax+4]
movss [esp+04],xmm0
jmp exit

originalcode:
movss xmm1,[esp+10]

exit:
jmp returnhere

///
bFullPlayerHealth:
db 0
///

healthcheckzeroonhitAOB: //"Enslaved.exe"+16AFE2:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthcheckzeroonhitAOB: //"Enslaved.exe"+16AFE2:
db F3 0F 10 4C 24 10
//Alt: movss xmm1,[esp+10]
unregistersymbol(bFullPlayerHealth)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"Full Health"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFullPlayerHealth:
db 01

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFullPlayerHealth:
db 00
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>20</ID>
              <Description>"Undead - Trip"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(bFullTripHealth)
registersymbol(bFullTripHealth)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(setfullhealth)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
mov eax,[esp+18]
//lea eax,[eax+4]
//cmp eax,edx
//mov eax,[esp+14]
//jne originalcode
test eax,eax
jz originalcode
cmp [eax-8],4
jne originalcode
mov ecx,[pPlayer]
cmp ecx,eax
je originalcode
mov ecx,[ecx+10]
lea eax,[eax+10]
cmp [eax],ecx
jne originalcode
mov ecx,[pPlayer]
mov ecx,[ecx+14]
lea eax,[eax+04]
cmp [eax],ecx
jne originalcode
mov eax,[esp+18]
cmp [eax+64],0
je originalcode
mov [pTrip],eax
cmp byte ptr [bFullTripHealth],01
je setfullhealth
cmp dword ptr [esp+08],(float)1.0
jge originalcode
mov dword ptr [esp+08],(float)1.0
jmp originalcode

setfullhealth:
mov ecx,[eax+4]
mov [eax],ecx
mov [esp+08],ecx
jmp originalcode

originalcode:
pop ecx
movss xmm0,[esp+04]

exit:
jmp returnhere

///
bFullTripHealth:
db 0
///

healthcheckzeroonhitAOB+6: //"Enslaved.exe"+16AFE8:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthcheckzeroonhitAOB+6: //"Enslaved.exe"+16AFE8:
db F3 0F 10 44 24 04
//Alt: movss xmm0,[esp+04]
unregistersymbol(bFullTripHealth)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>21</ID>
                  <Description>"Full Health"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFullTripHealth:
db 01

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFullTripHealth:
db 00
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"Inf. Ammo *"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoreadAOB,8B 44 24 08 8B 08 8B 54 24 04 89 0A C2 14 00 8B)
registersymbol(ammoreadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//cmp [esp+08],3B616BC8
//jne originalcode
cmp ebp,0
jne originalcode
mov eax,[esp+08]
mov ecx,[pPlayer]
test ecx,ecx
jz originalcode
lea ecx,[ecx-a5c]
mov eax,[eax-10]
cmp eax,ecx
jne originalcode
mov eax,[esp+08]
lea eax,[eax-48]
cmp eax,edi
jne originalcode
mov eax,[esp+08]
cmp [eax],1
jge originalcode
mov [eax],1
mov ecx,[eax]
jmp exit

originalcode:
mov eax,[esp+08]
mov ecx,[eax]

exit:
jmp returnhere

ammoreadAOB: //"Enslaved.exe"+1C6528:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoreadAOB: //"Enslaved.exe"+1C6528:
db 8B 44 24 08 8B 08
//Alt: mov eax,[esp+08]
//Alt: mov ecx,[eax]
unregistersymbol(ammoreadAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"Inf. Energy Serum *"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somesubAOB,FF 0F 8B 3F 8B 4C 24 14)
registersymbol(somesubAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
dec [edi]
mov ecx,[pPlayer]
lea ecx,[ecx+6a0]
cmp edi,ecx
jne originalcode
cmp [edi],1
jge originalcode
mov [edi],1

originalcode:
//dec [edi]
mov edi,[edi]
mov ecx,[esp+14]

exit:
jmp returnhere

somesubAOB: //"Enslaved.exe"+169739:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somesubAOB: //"Enslaved.exe"+169739:
db FF 0F 8B 3F 8B 4C 24 14
//Alt: dec [edi]
//Alt: mov edi,[edi]
//Alt: mov ecx,[esp+14]
unregistersymbol(somesubAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>29</ID>
              <Description>"Inf. Tech Orbs *"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somewriteAOB,89 01 83 C4 08 C2 08 00 8B 54 24 10 89 0A)
registersymbol(somewriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[pPlayer]
lea eax,[eax+6b0]
cmp eax,ecx
jne originalcode
mov eax,[esp]
cmp [ecx],eax
jle originalcode
mov eax,[ecx]
mov [esp],eax

originalcode:
pop eax
mov [ecx],eax
add esp,08

exit:
jmp returnhere

somewriteAOB: //"Enslaved.exe"+169AE4:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somewriteAOB: //"Enslaved.exe"+169AE4:
db 89 01 83 C4 08
//Alt: mov [ecx],eax
//Alt: add esp,08
unregistersymbol(somewriteAOB)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"[pointers]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>14</ID>
              <Description>"Health - Monkey"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>107</Key>
                  </Keys>
                  <Value>(Max - Monkey)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>16</ID>
                  <Description>"Max - Monkey"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayer</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Health -Trip"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pTrip</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>107</Key>
                  </Keys>
                  <Value>(Max - Trip)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>23</ID>
                  <Description>"Max - Trip"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pTrip</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>26</ID>
              <Description>"Energy Serum"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>6A0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>38</ID>
                  <Description>"Max"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pPlayer</Address>
                  <Offsets>
                    <Offset>6A4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"Tech Orbs"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>6B0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"-------------------------------------------"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0C1A786C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>2A352080</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>2C4388DC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>2C4D8B40</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>33CE6B44</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0BFE325C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0BFE38C8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0BFE38CC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea ecx,[ecx+4]
cmp ecx,edx
mov ecx,[esp+10]
jne originalcode
cmp [ecx+18],0
je originalcode
movss [ecx],xmm0
cmp dword ptr [ecx],(float)1.0
add esp,08
jge exit
mov dword ptr [ecx],(float)1.0
jmp exit

originalcode:
movss [ecx],xmm0
add esp,08

exit:
jmp returnhere

"Enslaved.exe"+16B014:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Enslaved.exe"+16B014:
db F3 0F 11 01 83 C4 08
//Alt: movss [ecx],xmm0
//Alt: add esp,08
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>3DDBE65C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[eax+4]
cmp eax,edx
mov eax,[esp+10]
jne originalcode
cmp [eax+18],0
je originalcode
movss [eax],xmm0
cmp dword ptr [eax],(float)1.0
add esp,08
jge exit
mov dword ptr [eax],(float)1.0
movss xmm0,[eax]
movss xmm1,[eax]
jmp exit

originalcode:
movss [eax],xmm0
add esp,08

exit:
jmp returnhere

"Enslaved.exe"+16AFFB:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Enslaved.exe"+16AFFB:
db F3 0F 11 00 83 C4 08
//Alt: movss [eax],xmm0
//Alt: add esp,08
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>40435A5C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>3D53325C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [ecx],xmm0
push eax
cmp [ecx-8],4
jne originalcode
mov eax,[pPlayer]
mov eax,[eax+10]
lea ecx,[ecx+10]
cmp [ecx],eax
jne originalcode
mov eax,[pPlayer]
mov eax,[eax+14]
lea ecx,[ecx+04]
cmp [ecx],eax
jne originalcode
mov ecx,[esp+14]
mov eax,[ecx+4]
mov [ecx],eax

originalcode:
pop eax
mov ecx,[esp+10]
//movss [ecx],xmm0
add esp,08

exit:
jmp returnhere

"Enslaved.exe"+16B014:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Enslaved.exe"+16B014:
db F3 0F 11 01 83 C4 08
//Alt: movss [ecx],xmm0
//Alt: add esp,08
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28BB2174</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>3E28890C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>3AAD37A4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>3B616BC8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>3EDCEA50</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>3B616BC8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>3B616B28</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>somereadAOB</Name>
      <Address> 005C676C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthcheckzeroonhitAOB</Name>
      <Address> 0056AFE2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>0A3600B8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayerCheck1</Name>
      <Address>0A3600BC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayerCheck2</Name>
      <Address>0A3600C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTrip</Name>
      <Address>0A3600C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFullPlayerHealth</Name>
      <Address>0A390080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFullTripHealth</Name>
      <Address>0B56009D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoreadAOB</Name>
      <Address> 005C6528</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somesubAOB</Name>
      <Address> 00569739</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somewriteAOB</Name>
      <Address> 00569AE4</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>forum.cheatengine.org/viewtopic.php?t=569232#5504193</Comments>
</CheatTable>
