<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Unlimited Flashlight"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert("gamedll_x86_rwdi.dll"+522EC0,D8 5E 34 DF E0 F6 C4 41 75 0C)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov dword ptr [esi+34],(float)100.0

originalcode:
fcomp dword ptr [esi+34]
fnstsw ax

exit:
jmp returnhere

"gamedll_x86_rwdi.dll"+522EC0:
jmp newmem
returnhere:

 
[DISABLE]
dealloc(newmem)
"gamedll_x86_rwdi.dll"+522EC0:
db D8 5E 34 DF E0
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Unlimited Stamina"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert("gamedll_x86_rwdi.dll"+4DA2F8,D9 86 7C 09 00 00 8D 4E 1C D9 5D 08)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov dword ptr [esi+97C],(float)5.0

originalcode:
fld dword ptr [esi+0000097C]

exit:
jmp returnhere

"gamedll_x86_rwdi.dll"+4DA2F8:
jmp newmem
nop
returnhere:


[DISABLE]
dealloc(newmem)
"gamedll_x86_rwdi.dll"+4DA2F8:
db D9 86 7C 09 00 00
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Unlimited Cash"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert("gamedll_x86_rwdi.dll"+2C3870,8B 82 AC 07 00 00 8D 4D E8)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov [edx+7AC],#9999999

originalcode:
mov eax,[edx+000007AC]

exit:
jmp returnhere

"gamedll_x86_rwdi.dll"+2C3870:
jmp newmem
nop
returnhere:


[DISABLE]
dealloc(newmem)
"gamedll_x86_rwdi.dll"+2C3870:
db 8B 82 AC 07 00 00
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"Unlimited Magazine"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert("gamedll_x86_rwdi.dll"+16C9B9,8B 94 81 80 0B 00 00 89 54 24 0C)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov [ecx+eax*4+00000B80],#999

originalcode:
mov edx,[ecx+eax*4+00000B80]

exit:
jmp returnhere

"gamedll_x86_rwdi.dll"+16C9B9:
jmp newmem
nop
nop
returnhere:

 
[DISABLE]
dealloc(newmem)
"gamedll_x86_rwdi.dll"+16C9B9:
db 8B 94 81 80 0B 00 00
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Unlimited Item"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert("gamedll_x86_rwdi.dll"+49C9C4,8B 5F 20 8B CE FF D0 2B C3 8B 5D F8 3B C3 72 02)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
mov [edi+20],#990

originalcode:
mov ebx,[edi+20]
mov ecx,esi

exit:
jmp returnhere

"gamedll_x86_rwdi.dll"+49C9C4:
jmp newmem
returnhere:


[DISABLE]
dealloc(newmem)
"gamedll_x86_rwdi.dll"+49C9C4:
db 8B 5F 20 8B CE
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"Unbreakable Weapons"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert("gamedll_x86_rwdi.dll"+49F380,D9 40 24 D9 EE ?? ?? ?? ?? F6 C4 44 0F 8A ?? ?? ?? ?? 53)
alloc(newmem,1024)
label(returnhere)
label(gohere)

gamedll_x86_rwdi.dll+49F380:
jmp newmem //Replace original code with our hook.
returnhere: //Set location of returnhere.

newmem:
cmp [eax+24],0xBF800000 //Check for fists.
je gohere //If it's fists, don't set it to 200f.
mov dword ptr [eax+24],(float)200 //100 doesn't work on some weapons. 200 works on all.
gohere: //Set location of gohere.
fld dword ptr [eax+24] //Original code.
fldz //Original code.
jmp returnhere //Return.
 
[DISABLE]
dealloc(newmem)
dealloc(returnher)
dealloc(gohere)

gamedll_x86_rwdi.dll+49F380:
fld dword ptr [eax+24]
fldz
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Boomerang 100%"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [edx+04],(float)1

originalcode:
fld dword ptr [edx+04]
mov ecx,[gamedll_x86_rwdi.dll+C3D4F8]

exit:
jmp returnhere

gamedll_x86_rwdi.dll+5481E7:
jmp newmem
nop
nop
nop
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
gamedll_x86_rwdi.dll+5481E7:
fld dword ptr [edx+04]
mov ecx,[gamedll_x86_rwdi.dll+C3D4F8]
unregistersymbol(aobBoomerang_)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"No blood on weapons"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
"gamedll_x86_rwdi.dll"+573BA6:
db 90 90 90
[Disable]
"gamedll_x86_rwdi.dll"+573BA6:
mov [ecx+28],eax
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"NoSpread/NoRecoil/AlwaysPickup/BigBackpack/BulletPen"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(pBase)
registersymbol(pBase)
label(returnhere)
registersymbol(cheatOn)
label(cheatOn)
label(originalcode)
label(exit)

newmem:
//----------BACKPACK----------//
push esi
mov esi,[ecx+348]
mov [esi+4],(float)99
pop esi
//----------BACKPACK----------//
//----------SPREAD, RECOIL----------//
push esi
mov esi,[ecx+c0]
mov [esi+4],(float)2
mov esi,[ecx+e4]
mov [esi+4],(float)0
mov esi,[ecx+2d8]
mov [esi+4],(float)0
pop esi
//----------SPREAD, RECOIL----------//
//----------REVIVE----------//
push esi
mov esi,[ecx+68]
mov [esi+4],(float)1
pop esi
//----------REVIVE----------//
//----------Bullet Penetration----------//
push esi
mov esi,[ecx+814]
mov [esi+4],(float)1
pop esi
//----------Bullet Penetration----------//
originalcode:
mov [pBase],ecx
mov edx,[ecx]
fcomp dword ptr [edx+04]

exit:
jmp returnhere

pBase:
dd 00

cheatOn:
dd 00

gamedll_x86_rwdi.dll+563726:
jmp newmem
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
gamedll_x86_rwdi.dll+563726:
mov edx,[ecx]
fcomp dword ptr [edx+04]
unregistersymbol(pBase)
unregistersymbol(cheatOn)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
