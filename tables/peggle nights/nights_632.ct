<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(enableAOB6,8B 40 24 89 46 30 3B C3)
label(enableAOB6_jmp)
registersymbol(enableAOB6_jmp)
aobscan(enableAOB2,8B 94 C1 24 0B 00 00 89 56 30)
label(enableAOB2_jmp)
registersymbol(enableAOB2_jmp)
aobscan(enableAOB1,8B 42 1C 89 86 A8 00 00 00)
label(enableAOB1_jmp)
registersymbol(enableAOB1_jmp)

label(pScore)
registersymbol(pScore)
label(pPlayer)
registersymbol(pPlayer)
label(bInfRemainingTimeV2)
registersymbol(bInfRemainingTimeV2)
label(iMinRemainingTime)
registersymbol(iMinRemainingTime)

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
mov [pPlayer],eax
cmp byte ptr [bInfRemainingTimeV2],1
jne originalcode6
mov ecx,[iMinRemainingTime]
cmp dword ptr [eax+24],ecx
jge originalcode6
mov [eax+24],ecx

originalcode6:
pop ecx
mov eax,[eax+24]
mov [esi+30],eax

exit6:
jmp returnhere6

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
lea edx,[ecx+eax*8+00000B24]
mov [pScore],edx

originalcode2:
mov edx,[ecx+eax*8+00000B24]

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pPlayer],edx

originalcode:
mov eax,[edx+1C]
mov [esi+000000A8],eax

exit:
jmp returnhere

///
pPlayer:
dd 0
pScore:
dd 0
bInfRemainingTimeV2:
db 1
iMinRemainingTime:
dd #70
///

enableAOB6: //"Nights.exe"+1290D7:
enableAOB6_jmp:
jmp newmem6
nop
returnhere6:

enableAOB2: //"Nights.exe"+1298B9:
enableAOB2_jmp:
jmp newmem2
nop
nop
returnhere2:

enableAOB1: //"Nights.exe"+113457:
enableAOB1_jmp:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
enableAOB6_jmp: //"Nights.exe"+1290D7:
db 8B 40 24 89 46 30
//Alt: mov eax,[eax+24]
//Alt: mov [esi+30],eax
dealloc(newmem2)
enableAOB2_jmp: //"Nights.exe"+1298B9:
db 8B 94 C1 24 0B 00 00
//Alt: mov edx,[ecx+eax*8+00000B24]
dealloc(newmem)
enableAOB1_jmp: //"Nights.exe"+113457:
db 8B 42 1C 89 86 A8 00 00 00
//Alt: mov eax,[edx+1C]
//Alt: mov [esi+000000A8],eax
unregistersymbol(enableAOB6_jmp)
unregistersymbol(enableAOB2_jmp)
unregistersymbol(enableAOB1_jmp)
unregistersymbol(pPlayer)
unregistersymbol(pScore)
unregistersymbol(bInfRemainingTimeV2)
unregistersymbol(iMinRemainingTime)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>8</ID>
          <Description>"[scripts]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Inf. Remaining Time V1"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>22</ID>
                  <Description>"Enemies' Attack"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(stopcountdownAOB6,89 42 24 8B 01 8B 50 04)
label(stopcountdownAOB6_jmp)
registersymbol(stopcountdownAOB6_jmp)

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edx+24],eax
jle originalcode6
mov eax,[edx+24]

originalcode6:
mov [edx+24],eax
mov eax,[ecx]

exit6:
jmp returnhere6

stopcountdownAOB6: //"Nights.exe"+11BE71:
stopcountdownAOB6_jmp:
jmp newmem6
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
stopcountdownAOB6_jmp: //"Nights.exe"+11BE71:
db 89 42 24 8B 01
//Alt: mov [edx+24],eax
//Alt: mov eax,[ecx]
unregistersymbol(stopcountdownAOB6_jmp)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1</ID>
                  <Description>"Normal Levels"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(stopcountdownAOB1,48 89 46 24)
label(stopcountdownAOB1_jmp)
registersymbol(stopcountdownAOB1_jmp)

stopcountdownAOB1+1: //"Nights.exe"+15D3BD:
stopcountdownAOB1_jmp:
db 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
stopcountdownAOB1_jmp: //"Nights.exe"+15D3BD:
db 89 46 24
//Alt: mov [esi+24],eax
unregistersymbol(stopcountdownAOB1_jmp)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>20</ID>
                  <Description>"Last 2 Levels"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(stopcountdown2AOB1,89 41 24 80 79 34 00)
label(stopcountdown2AOB1_jmp)
registersymbol(stopcountdown2AOB1_jmp)

stopcountdown2AOB1: //"Nights.exe"+1644FD:
stopcountdown2AOB1_jmp:
db 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
stopcountdown2AOB1_jmp: //"Nights.exe"+1644FD:
db 89 41 24
//Alt: mov [ecx+24],eax
unregistersymbol(stopcountdown2AOB1_jmp)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>23</ID>
                  <Description>"Boss Battle"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(stopcountdownAOB2,89 41 24 83 79 24 00)
label(stopcountdownAOB2_jmp)
registersymbol(stopcountdownAOB2_jmp)

stopcountdownAOB2: //"Nights.exe"+15DC7A:
stopcountdownAOB2_jmp:
db 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
stopcountdownAOB2_jmp: //"Nights.exe"+15DC7A:
db 89 41 24
//Alt: mov [ecx+24],eax
unregistersymbol(stopcountdownAOB2_jmp)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Inf. Remaining Time V2"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>25</ID>
                  <Description>"Switch"</Description>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bInfRemainingTimeV2</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"Minimum Remaining Time (in seconds)"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iMinRemainingTime</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13</ID>
              <Description>"Inf. Dash"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infdashAOB1,01 BE 8C 00 00 00 8B 86 8C 00 00 00)
label(infdashAOB1_jmp)
registersymbol(infdashAOB1_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add [esi+0000008C],edi
cmp dword ptr [esi+0000008C],01
jge originalcode
mov dword ptr [esi+0000008C],01

originalcode:
//add [esi+0000008C],edi

exit:
jmp returnhere

infdashAOB1: //"Nights.exe"+A25E1:
infdashAOB1_jmp:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infdashAOB1_jmp: //"Nights.exe"+A25E1:
db 01 BE 8C 00 00 00
//Alt: add [esi+0000008C],edi
unregistersymbol(infdashAOB1_jmp)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"Blue Chips Multiplier"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(chipsmultiplierAOB1,89 77 1C 5F 5E C3)
label(chipsmultiplierAOB1_jmp)
registersymbol(chipsmultiplierAOB1_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(iChipsMultiplier)
registersymbol(iChipsMultiplier)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edi+1C],esi
jge originalcode
pushad
sub esi,[edi+1C]
xor edx,edx
mov eax,esi
mul [iChipsMultiplier]
add [edi+1C],eax
popad
cmp [edi+1C],63
jle exit
mov [edi+1C],63
jmp exit

originalcode:
mov [edi+1C],esi
//pop edi
//pop esi

exit:
pop edi
pop esi
jmp returnhere

///
iChipsMultiplier:
dd 2
///

chipsmultiplierAOB1: //"Nights.exe"+15FD4E:
chipsmultiplierAOB1_jmp:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chipsmultiplierAOB1_jmp: //"Nights.exe"+15FD4E:
db 89 77 1C 5F 5E
//Alt: mov [edi+1C],esi
//Alt: pop edi
//Alt: pop esi
unregistersymbol(chipsmultiplierAOB1_jmp)
unregistersymbol(iChipsMultiplier)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"x?"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iChipsMultiplier</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"Score Multiplier"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(scoremultiplierAOB1,8B 4C 24 10 01 08 5F 5E 5B)
label(scoremultiplierAOB1_jmp)
registersymbol(scoremultiplierAOB1_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(tAddScore)

label(iScoreMultiplier)
registersymbol(iScoreMultiplier)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[esp+10]
cmp ecx,0
jle originalcode
cmp [iScoreMultiplier],0
je originalcode
pushad
xor edx,edx
mov eax,ecx
mul [iScoreMultiplier]
mov [tAddScore],eax
popad
mov ecx,[tAddScore]

originalcode:
//mov ecx,[esp+10]
add [eax],ecx

exit:
jmp returnhere

///
tAddScore:
dd 0
iScoreMultiplier:
dd 2
///

scoremultiplierAOB1: //"Nights.exe"+16165C:
scoremultiplierAOB1_jmp:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
scoremultiplierAOB1_jmp: //"Nights.exe"+16165C:
db 8B 4C 24 10 01 08
//Alt: mov ecx,[esp+10]
//Alt: add [eax],ecx
unregistersymbol(scoremultiplierAOB1_jmp)
unregistersymbol(iScoreMultiplier)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"x?"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iScoreMultiplier</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"[pointers]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Blue Chips"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"Remaining Time (in seconds)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>10</ID>
              <Description>"Time? (in seconds)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"Score"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pScore</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>27</ID>
              <Description>"Score"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>B24</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>count down read 1 Code :mov eax,[esi+24]</Description>
      <Address>0055D3ED</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>15D3ED</ModuleNameOffset>
      <Before>
        <Byte>75</Byte>
        <Byte>03</Byte>
        <Byte>FF</Byte>
        <Byte>46</Byte>
        <Byte>2C</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>79</Byte>
        <Byte>2D</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>count down read 2 Code :mov eax,[eax+24]</Description>
      <Address>005290D7</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>1290D7</ModuleNameOffset>
      <Before>
        <Byte>A1</Byte>
        <Byte>94</Byte>
        <Byte>4E</Byte>
        <Byte>4C</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>30</Byte>
        <Byte>3B</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>count down read 3 Code :mov eax,[esi+24]</Description>
      <Address>0055D3B5</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>15D3B5</ModuleNameOffset>
      <Before>
        <Byte>D2</Byte>
        <Byte>2B</Byte>
        <Byte>CA</Byte>
        <Byte>75</Byte>
        <Byte>0B</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>78</Byte>
        <Byte>04</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>count down write 1 Code :mov [esi+24],eax</Description>
      <Address>0055D3BD</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>15D3BD</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>78</Byte>
        <Byte>04</Byte>
        <Byte>48</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>80</Byte>
        <Byte>7E</Byte>
        <Byte>34</Byte>
        <Byte>00</Byte>
        <Byte>75</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>chips read Code :mov eax,[edx+1C]</Description>
      <Address>00513457</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>113457</ModuleNameOffset>
      <Before>
        <Byte>15</Byte>
        <Byte>94</Byte>
        <Byte>4E</Byte>
        <Byte>4C</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>1C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>A8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>chips write Code :mov [edi+1C],esi</Description>
      <Address>0055FD4E</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>15FD4E</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>B2</Byte>
        <Byte>EF</Byte>
        <Byte>FB</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>77</Byte>
        <Byte>1C</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>dash read Code :fild dword ptr [ecx+0000008C]</Description>
      <Address>005111A5</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>1111A5</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>F1</Byte>
        <Byte>8B</Byte>
        <Byte>48</Byte>
        <Byte>50</Byte>
      </Before>
      <Actual>
        <Byte>DB</Byte>
        <Byte>81</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>28</Byte>
        <Byte>33</Byte>
        <Byte>DB</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>dash write Code :add [esi+0000008C],edi</Description>
      <Address>004A25E1</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>A25E1</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>1F</Byte>
        <Byte>C9</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>BE</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>score read Code :mov edx,[ecx+eax*8+00000B24]</Description>
      <Address>005298B9</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>1298B9</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>80</Byte>
        <Byte>9E</Byte>
        <Byte>52</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>94</Byte>
        <Byte>C1</Byte>
        <Byte>24</Byte>
        <Byte>0B</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>56</Byte>
        <Byte>30</Byte>
        <Byte>E9</Byte>
        <Byte>A0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>score write Code :add [eax],ecx</Description>
      <Address>00561660</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>161660</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>5B</Byte>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>count down boss write Code :mov [ecx+24],eax</Description>
      <Address>0055DC7A</Address>
      <ModuleName>Nights.exe</ModuleName>
      <ModuleNameOffset>15DC7A</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>78</Byte>
        <Byte>04</Byte>
        <Byte>48</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>79</Byte>
        <Byte>24</Byte>
        <Byte>00</Byte>
        <Byte>7D</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>tECX</Name>
      <Address>04DE002B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stopcountdownAOB1_jmp</Name>
      <Address>0055D3BD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB6_jmp</Name>
      <Address>005290D7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB2_jmp</Name>
      <Address>005298B9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB1_jmp</Name>
      <Address>00513457</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pScore</Name>
      <Address>04C51018</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>04C51014</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfRemainingTimeV2</Name>
      <Address>04C5101C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iMinRemainingTime</Name>
      <Address>04C5101D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infdashAOB1_jmp</Name>
      <Address>004A25E1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>chipsmultiplierAOB1_jmp</Name>
      <Address>0055FD4E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iChipsMultiplier</Name>
      <Address>04C7003B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>scoremultiplierAOB1_jmp</Name>
      <Address>0056165C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iScoreMultiplier</Name>
      <Address>04C8003D</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
