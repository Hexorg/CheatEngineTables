<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>27</ID>
      <Description>"[X] &lt;== SpecOps - The Line v1.0 U02 preCRC Script 1.0 (ACTIVATE ME FIRST)"</Description>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Spec Ops - The Line
 Game Version  : 1.0 (Up02)
 Game Sponsor  : SKIDROW
 Process Name  : SpecOpsTheLine.exe
 Script Version: 5.0
 CE Version    : 6.2
 Release date  : 02-Dec-2012
 Author        : Recifense
 History:
 13-Nov-12: First Release
 02-Dec-12: Adapted to build 5918
 Features:
 - Prepare environment for disabling CRC Checking
===========================================
}

//=========================================
// Definitions
define(CODESIZE,0x00d08000)
define(LUDO,SpecOpsTheLine.exe)

//=========================================
[ENABLE]
//=========================================
alloc(CodeCopy,CODESIZE,LUDO)
alloc(_IniMem,4096,LUDO)
//=========================================
label(iFlagOK)
label(pCodeCopy)
//=========================================
registersymbol(CodeCopy)
registersymbol(_IniMem)
registersymbol(iFlagOK)
registersymbol(pCodeCopy)
//=========================================
_IniMem:
 pushad
 pushfd

 mov ecx,CODESIZE
 shr ecx,2
 mov esi,LUDO
 mov edi,CodeCopy
 cld
 rep movsd

 mov dword ptr [iFlagOK],55555555

 popfd
 popad
 ret
//=========================================
 db '===========================&gt;'
 db 'CE6.2 Script by Recifense 120212'
//=========================================
// Variables
pCodeCopy:
 dd CodeCopy
iFlagOK:
 dd 0

//=========================================
CREATETHREAD(_IniMem)
//=========================================
// Script for Restoring Original Codes
[DISABLE]
//=========================================
// mov dword ptr [iFlagOK],0
//=========================================
unregistersymbol(CodeCopy)
unregistersymbol(_IniMem)
unregistersymbol(iFlagOK)
unregistersymbol(pCodeCopy)
//=========================================
dealloc(CodeCopy)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"[X] &lt;== SpecOps - The Line v1.0 U02 Script v1.0 AOB CPB"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Special Operations - The Line
 Game Version  : 1.0.6890.0 (UP2)
 Game Sponsor  : SKIDROW (via Internet)
 Proces Name   : SpecOpsTheLine.exe
 Script Version: 1.0 (AOB)
 CE Version    : 6.2
 Release date  : 18-Jan-2013
 Author        : Recifense
 History:
 03-Jul-12: First Release
 18-Jan-13: AOB version for Update 2 + CRC Protection Bypass
 Features:
 - God Mode
 - Unlimited Ammo
===========================================
}

//=========================================
// Definitions
define(LUDO,"SpecOpsTheLine.exe")
define(LUDOEND,LUDO+00c00000)

//=========================================
[ENABLE]
//=========================================
alloc(MyCode,4096,LUDO)
//=========================================

AOBScan(aob_MonUnits,0f 57 c0 0f 2f 47 04 0f 83 ?? ?? ?? ?? 8b 47 0c)
AOBScan(aob_GodMode,f3 0f 11 44 24 1c d9 44 24 1c d8 64 24 44 f3 0f)
AOBScan(aob_MonAmmo,89 86 64 07 00 00 ?? ?? 8b 16 8b 82 b8 03 00 00)
AOBScan(aob_HackPoint,8b 75 0c 57 8b c1 8b b8 b0 00 00 00 b9 10 00 00 00)

//=========================================
// Declaration section
label(p_MonUnits)
label(p_GodMode)
label(p_MonAmmo)
label(p_HackPoint)

label(_MonUnits)
label(_BackMU)
label(_ExitMU)
label(_GodMode)
label(_BackGM)
label(_ExitGM)
label(_MonAmmo)
label(_BackMA)
label(_ExitMA)
label(_HackPoint)
label(_BackHP)
label(_ExitHP)
label(pUnit)
label(iEnableGM)
label(iEnableMA)
label(iEnableCRC)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pUnit)
registersymbol(iEnableGM)
registersymbol(iEnableMA)
registersymbol(iEnableCRC)

registersymbol(p_MonUnits)
registersymbol(p_GodMode)
registersymbol(p_MonAmmo)
registersymbol(p_HackPoint)

//=========================================
MyCode:
//=========================================
_MonUnits:
 cmp dword ptr [iEnableGM],0
 je _ExitMU                        // Jump if feature is disabled

 test ecx,ecx
 jz _ExitMU

 cmp ebx,ecx
 jne _ExitMU

 mov eax,[ecx+00001b28]
 cmp eax,[ecx+00001b50]
 jne _ExitMU

 cmp eax,[ecx+00001b58]
 jne _ExitMU

 cmp dword ptr [ecx+00000b48],0
 jne _ExitMU

 mov [pUnit],ecx

 mov eax,#6200
 mov [ecx+00000304],eax
 mov eax,(float)6200
 mov [ecx+00001b28],eax
 mov [ecx+00001b24],eax
 mov [ecx+00001b50],eax
 mov [ecx+00001b58],eax

_ExitMU:
 xorps xmm0,xmm0                   // Original code
 comiss xmm0,[edi+04]              // Original code
 jmp _BackMU                       // Back to main code

//=========================================
_GodMode:
 push eax

 cmp dword ptr [iEnableGM],0
 je _ExitGM                        // Jump if feature is disabled

 mov eax,(float)6200
 cmp eax,[edi+04]
 jne _ExitGM

 movss xmm0,[edi+04]

_ExitGM:
 pop eax

 movss [esp+1C],xmm0               // Original code
 jmp _BackGM                       // Back to main code

//=========================================
_MonAmmo:
 pushfd

 cmp dword ptr [iEnableMA],0
 je _ExitMA                        // Jump if feature is disabled

 mov edx,[edi+000000e8]
 test edx,edx
 jz _ExitMA

 cmp edx,[edi+000002cc]
 jne _ExitMA

 cmp dword ptr [edx+00000b48],0
 jne _ExitMA

 mov eax,[edi+00000760]

 mov edx,#162
 cmp edx,[edi+00000778]
 jle _ExitMA

 mov [edi+00000778],edx

_ExitMA:
 popfd
 mov [esi+00000764],eax            // Original code
 jmp _BackMA                       // Back to main code

//=========================================
_HackPoint:
 cmp dword ptr [iFlagOK],55555555
 jne _ExitHP

 cmp dword ptr [iEnableCRC],0
 je _ExitHP                        // Jump if feature is disabled

 mov esi,[ebp+0C]                  // Get pSource

 cmp esi,LUDO
 jl _ExitHP

 cmp esi,LUDOEND
 jge _ExitHP

 mov eax,LUDO
 sub esi,eax
 mov eax,CodeCopy
 add esi,eax

 mov [ebp+0C],esi

_ExitHP:
 mov esi,[ebp+0C]                  // Original code
 push edi                          // Original code
 mov eax,ecx                       // Original code
 jmp _BackHP                       // Back to main code

//=========================================
 db '==============================&gt;'
 db 'CE6.2 Script by Recifense 011813'
//=========================================
// Variables
iEnableGM:
 dd 0
iEnableMA:
 dd 0
iEnableCRC:
 dd 1
pUnit:
 dd 0

//=========================================
// Hacking Points
//LUDO+0004be4b:
aob_MonUnits:
p_MonUnits:
 jmp _MonUnits
 nop
 nop
_BackMU:

//LUDO+0004c148:
aob_GodMode:
p_GodMode:
 jmp _GodMode
 nop
_BackGM:

//LUDO+008e38bc:
aob_MonAmmo:
p_MonAmmo:
 jmp _MonAmmo
 nop
_BackMA:

//LUDO+00be2bb8:
aob_HackPoint:
p_HackPoint:
 jmp _HackPoint
 nop
_BackHP:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
//LUDO+0004be4b:
p_MonUnits:
// xorps xmm0,xmm0
// comiss xmm0,[edi+04]
 db 0f 57 c0 0f 2f 47 04

//LUDO+0004c148:
p_GodMode:
// movss [esp+1C],xmm0
 db f3 0f 11 44 24 1c

//LUDO+008e38bc:
p_MonAmmo:
// mov [esi+00000764],eax
 db 89 86 64 07 00 00

//LUDO+00be2bb8:
p_HackPoint:
// mov esi,[ebp+0C]
// push edi
// mov eax,ecx
 db 8b 75 0c 57 8b c1

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pUnit)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMA)

unregistersymbol(p_MonUnits)
unregistersymbol(p_GodMode)
unregistersymbol(p_MonAmmo)
unregistersymbol(p_HackPoint)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Enable/Disable God Mode =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Enable/Disable Full Ammo =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMA</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>iEnableCRC</Name>
      <Address>028101A8</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Special Operations - The Line
 Game Version  : 1.0.6890.0 (UP2)
 Game Sponsor  : SKIDROW (via Internet)
 Proces Name   : SpecOpsTheLine.exe
 Script Version: 1.0 (AOB)
 CE Version    : 6.2
 Release date  : 18-Jan-2013
 Author        : Recifense
 History:
 03-Jul-12: First Release
 18-Jan-13: AOB version for Update 2 + CRC Protection Bypass
 Features:
 - God Mode
 - Unlimited Ammo
===========================================
[HOW TO USE THIS TABLE]
1 - Run CE6.2;
2 - Run Game;
3 - ALT+TAB to CE6.2, select the game process and load the table;
4 - Click on first box to load (Activate) the first script;
5 - Click on the sencond box (just below the first one) to load the second script;
6 - Go back to the game and start or continue a campaign. As soon as the scenario has started press CTRL+Home to enable the cheats.
7 - Now kill them all, I mean, have fun. :)
===========================================
HOTKEYS:
CTRL+Home = ENABLE  both cheats;
CTRL+End  = DISABLE both cheats;
===========================================
Cheers!
</Comments>
</CheatTable>
