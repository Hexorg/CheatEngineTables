<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>73</ID>
      <Description>"[X] &lt;== X Rebirth 3.61-202267 x64 Steam Script 2.1"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : X-REBIRTH
 Game Version  : 3.61 (202267)
 Game Sponsor  : Fennix102
 Proces Name   : XRebirth.exe (64 bits)
 Script Version: 2.1
 CE Version    : 6.4
 Release date  : 04-Nov-2015
 Author        : Recifense
 History:
 27-Jun-14: First Release (version 2.20 - Steam)
 09-Jul-14: Release for (version 2.20-184360 - Steam)
 29-Oct-14: Release for (version 2.51-187332 - Steam)
 11-Dec-14: Release for (version 3.00-189926 - Steam)
 18-Dec-14: Release for (version 3.10-190048 - Steam)
 03-Feb-15: Release for (version 3.20-190820 - Steam) (S1.2)
 15-Mar-15: Release for (version 3.50-192864 - Steam)
 20-Mar-15: Release for (version 3.51-193058 - Steam) (S2.0)
 21-Mar-15: Fixed a crash (S2.1)
 27-Mar-15: Release for (version 3.52-193370 - Steam)
 02-Apr-15: Release for (version 3.53-193580 - Steam)
 05-Sep-15: Release for (version 3.60-198327 - Steam)
 25-Sep-15: Release for (version 3.61-200382 - Steam)
 10-Oct-15: Release for (version 3.61-201320 - Steam)
 04-Nov-15: Release for (version 3.61-202267 - Steam)
 Features:
 - Minimum Money
 - God Mode
 - Unlimited Shield
 - Unlimited Missiles
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"XRebirth.exe")
define(MHPR,XRebirth.exe+0078e7ea) //##==*=======
define(MPSP,XRebirth.exe+000ed638) //#====#==#===
define(MSSD,XRebirth.exe+000975e2) //#=#####=#=##
define(MSME,XRebirth.exe+00163040) //=#======#===
define(MSM1,XRebirth.exe+001638bf) //--======#===
define(MPIY,XRebirth.exe+0079f78a) //------==#===
define(MSHL,XRebirth.exe+000ebf85) //--------N===

define(RPSP,XRebirth.exe+00762925) //----========

//=========================================
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.4)
define(ctMMMY,#640000000)   // Minimum Money

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MHPR,48 8b c8 48 8b 10 ff 52 08 ?? ?? 33 c0 66 0f ef c9 48 8b cb f2 48)
assert(MPSP,48 8b 83 a0 02 00 00 f3 0f 59 05 ?? ?? ?? ?? f3 0f 5e 40 68 0f 28)
assert(MSSD,f2 0f 11 51 f0 89 41 e8 c3 cc cc cc cc cc f3 0f 10 41 e8 c3 cc cc)
assert(MSME,48 0f 42 c1 8b 00 29 01 48 83 c4 20 5b c3 cc cc 48 89 74 24 10 57)
assert(MSM1,48 0f 42 c1 8b 00 29 01 48 83 c4 20 5b c3 cc cc cc 48 89 5c 24 08)
assert(MPIY,48 83 7e 10 01 ?? ?? 48 8b 3e ?? ?? 48 8b fe 49 8b 3c 3e 48 85 ff)
assert(MSHL,f3 0f 11 8f 98 02 00 00 41 0f 28 c1 0f 54 c7 0f 2f 05 ?? ?? ?? ??)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_MonPlayerShip)
label(_MonPS00)
label(_MonPS01)
label(_BackMPS)
label(_ExitMPS)
label(_MonShipShield)
label(_BackMSS)
label(_ExitMSS)
label(_MonShipMissile)
label(_BackMSM)
label(_ExitMSM)
label(_MonShipMissile1)
label(_BackSM1)
label(_ExitSM1)
label(_MonPlayerInv)
label(_BackMPI)
label(_ExitMPI)
label(_MonShipHull)
label(_BackMSH)
label(_ExitMSH)
label(iEnableMMM)
label(iEnableMSD)
label(iEnableGMD)
label(iEnableMSM)
label(liMinMoney)
label(pPlayer)
label(pShipHull)
label(pShipShield)
label(pShield)
label(pHull)
label(pInv)
label(pItem)
label(iInvIndex)
label(iMaxIndex)
label(aLast)
label(iCount1)
label(iCount2)
label(pShield2)
label(pHull2)
label(pInfo2)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMMM)
registersymbol(iEnableMSD)
registersymbol(iEnableGMD)
registersymbol(iEnableMSM)
registersymbol(liMinMoney)
registersymbol(pPlayer)
registersymbol(pShipHull)
registersymbol(pShipShield)
registersymbol(pShield2)
registersymbol(pHull2)
registersymbol(pInfo2)
registersymbol(pInv)
registersymbol(pItem)
registersymbol(iInvIndex)
registersymbol(iMaxIndex)
registersymbol(aLast)
registersymbol(iCount1)
registersymbol(iCount2)

//=========================================
MyCode:
//========================================= 360
// When Money is Visible
_MonHumanPlayer:
 push r15

 mov r15,aLast
 mov dword ptr [r15],'_MHP'

 mov r15,pPlayer
 mov [r15],rax

 mov r15,iEnableMMM
 cmp dword ptr [r15],0
 je _ExitMHP                       // Jump if feature is disabled

 mov r15,liMinMoney
 mov rdx,[r15]
 cmp rdx,[rax+10]
 js _ExitMHP

 mov [rax+10],rdx

_ExitMHP:
 pop r15

 mov rcx,rax                       // Original code
 mov rdx,[rax]                     // Original code
 jmp _BackMHP                      // Back to main code (template sake only)

//========================================= 360
// Called all the time
// RBX = Hull_64_Real
_MonPlayerShip:
 mov rax,[rsp+38]

 push r15

 mov r15,aLast
 mov dword ptr [r15],'_MHS'

 push rcx

 mov rcx,RPSP

 cmp rax,rcx
 jne _ExitMPS

 mov r15,pHull2
 mov [pHull2],rbx

 mov r15,iCount1
 inc dword ptr [r15]

 mov rax,[rbx+000002f8] //* 2f8 // 4a8
 mov r15,pInfo2
 mov [r15],rax
 test rax,rax
 jz _ExitMPS

 mov r15,iCount1
 dec dword ptr [r15]

 mov eax,[rax+08]
 cmp eax,'play'
 jne _ExitMPS

 mov rax,[rbx+00000368] //*368 //518
 test rax,rax
 jnz _ExitMPS

 mov rcx,[rbx+000002a0]            // Get pShield *2a0 //438

 mov r15,pShipHull
 mov [r15],rbx
 mov r15,pShipShield
 mov [r15],rcx
 lea rax,[rcx+000000a8]
 mov r15,pShield
 mov [r15],rax
 mov r15,pHull
 mov [r15],rbx

 mov r15,iEnableMSD
 cmp dword ptr [r15],0
 je _MonPS00                       // Jump if feature is disabled

 mov eax,[rcx+68]
 mov [rcx+00000090],eax

_MonPS00:
 mov r15,iEnableGMD
 cmp dword ptr [r15],0
 je _MonPS01                       // Jump if feature is disabled

 mov eax,[rbx+00000294]  //*294 //3a4
 mov [rbx+00000298],eax  //*298 //3f8

_MonPS01:
 mov r15,pInv
 mov rcx,[r15]
 test rcx,rcx
 jz _ExitMPS

 mov r15,iInvIndex
 mov eax,[r15]
 test eax,eax
 jz _ExitMPS

 mov eax,[rcx+18]
 mov r15,iMaxIndex
 mov [r15],eax
 mov r15,iInvIndex
 cmp eax,[r15]
 js _ExitMPS

 mov rcx,[rcx]
 test rcx,rcx
 jz _ExitMPS

 mov r15,iInvIndex
 xor rax,rax
 mov eax,[r15]
 lea rax,[rax*4]
 lea rax,[rcx+rax*4-10]
 mov r15,pItem
 mov [r15],rax

_ExitMPS:
 pop rcx
 pop r15

 mov rax,[rbx+000002a0]            // Original code (get pShield) //*2a0 //438
 jmp _BackMPS                      // Back to main code

//========================================= 360
// Called when shield or turbo bust is used
// RCX = pShield
_MonShipShield:
 push r15

 mov r15,aLast
 mov dword ptr [r15],'_MSS'

 movsd [rcx-10],xmm2               // Original code

 mov r15,pShield
 cmp rcx,[r15]
 jne _ExitMSS

 mov r15,iEnableMSD
 cmp dword ptr [r15],0
 je _ExitMSS                       // Jump if feature is disabled

 mov dword ptr [rcx-10],0
 mov dword ptr [rcx-0c],0

 cmp eax,[rcx-18]
 jns _ExitMSS

 mov eax,[rcx-18]

_ExitMSS:
 pop r15
 jmp _BackMSS                      // Back to main code

//========================================= 360
// Called when missile is shot
// RBP = ppHull
_MonShipMissile:
 push r15

 mov r15,aLast
 mov dword ptr [r15],'_MSM'

 cmovb rax,rcx                     // Original code

 mov rbx,[rbp+00000080]
 mov r15,pShipHull
 cmp rbx,[r15]
 jne _ExitMSM

 mov r15,iEnableMSM
 cmp dword ptr [r15],0
 je _ExitMSM                       // Jump if feature is disabled

 xor ebx,ebx
 mov [rax],ebx

_ExitMSM:
 pop r15

 mov eax,[rax]                     // Original code
 sub [rcx],eax                     // Original code (upd missile)
 jmp _BackMSM                      // Back to main code

//========================================= 360
// Called when missile is shot
// RBP = ppHull
_MonShipMissile1:
 push r15

 mov r15,aLast
 mov dword ptr [r15],'_SM1'

 cmovb rax,rcx                     // Original code

 mov rbx,[rbp+00000080]
 mov r15,pShipHull
 cmp rbx,[r15]
 jne _ExitSM1

 mov r15,iEnableMSM
 cmp dword ptr [r15],0
 je _ExitSM1                       // Jump if feature is disabled

 xor ebx,ebx
 mov [rax],ebx

_ExitSM1:
 pop r15

 mov eax,[rax]                     // Original code
 sub [rcx],eax                     // Original code (upd missile)
 jmp _BackSM1                      // Back to main code

//========================================= 360
// When opening the inventory
_MonPlayerInv:
 push r15

 mov r15,pInv
 mov [r15],rsi

_ExitMPI:
 pop r15

 cmp qword ptr [rsi+10],01         // Original code
 jmp _BackMPI                      // Back to main code

//========================================= new 360
// Called when Hull is changed
// RDI = pShipHull
_MonShipHull:
 push r15

 mov r15,aLast
 mov dword ptr [r15],'_MSH'

 mov r15,pShipHull
 cmp rdi,[r15]
 jne _ExitMSH

 mov r15,iEnableGMD
 cmp dword ptr [r15],0
 je _ExitMSH                       // Jump if feature is disabled

 movss xmm1,[rdi+00000294]

_ExitMSH:
 pop r15
 movss [rdi+00000298],xmm1         // Original Code (set cHull)
 jmp _BackMSH                      // Back to main code

//=========================================
 db '============================================&gt;'
 db 'CE6.4 Script by Recifense 110415'
//=========================================
// Variables
iEnableMMM:
 dd 0
iEnableMSD:
 dd 0
iEnableGMD:
 dd 0
iEnableMSM:
 dd 0
liMinMoney:
 dq ctMMMY
pPlayer:
 dq 0
pShipHull:
 dq MyCode
pShipShield:
 dq MyCode
pHull:
 dq MyCode
pShield:
 dq MyCode
pInv:
 dq 0
pItem:
 dq 0
iMaxIndex:
 dd 0
iInvIndex:
 dd 1
aLast:
 db 'CE64'
iCount1:
 dd 0
iCount2:
 dd 0
pHull2:
 dq 0
pShield2:
 dq 0
pInfo2:
 dq 0

//=========================================
// Hacking Points
MHPR:
 jmp _MonHumanPlayer
 nop
_BackMHP:

MPSP:
 jmp _MonPlayerShip
 nop
 nop
_BackMPS:

MSSD:
 jmp _MonShipShield
_BackMSS:

MSME:
 jmp _MonShipMissile
 nop
 nop
 nop
_BackMSM:

MSM1:
 jmp _MonShipMissile1
 nop
 nop
 nop
_BackSM1:

MPIY:
 jmp _MonPlayerInv
_BackMPI:

MSHL:
 jmp _MonShipHull
 nop
 nop
 nop
_BackMSH:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MHPR:
// mov rcx,rax
// mov rdx,[rax]
 db 48 8b c8 48 8b 10

MPSP:
// mov rax,[rbx+000002a0]
 db 48 8b 83 a0 02 00 00

MSSD:
// movsd [rcx-10],xmm2
 db f2 0f 11 51 f0

MSME:
// cmovb rax,rcx
// mov eax,[rax]
// sub [rcx],eax
 db 48 0f 42 c1 8b 00 29 01

MSM1:
// cmovb rax,rcx
// mov eax,[rax]
// sub [rcx],eax
 db 48 0f 42 c1 8b 00 29 01

MPIY:
// cmp qword ptr [rsi+10],01
 db 48 83 7e 10 01

MSHL:
// movss [rdi+00000298],xmm1
 db f3 0f 11 8f 98 02 00 00

//=========================================
// Unloading Scripts
{$lua}
getAddressList().getMemoryRecordByID(100).Active=false
getAddressList().getMemoryRecordByID(101).Active=false
getAddressList().getMemoryRecordByID(102).Active=false
getAddressList().getMemoryRecordByID(103).Active=false
{$asm}

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMMM)
unregistersymbol(iEnableMSD)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMSM)
unregistersymbol(liMinMoney)
unregistersymbol(pPlayer)
unregistersymbol(pShipHull)
unregistersymbol(pShipShield)
unregistersymbol(pShield2)
unregistersymbol(pHull2)
unregistersymbol(pInfo2)
unregistersymbol(pInv)
unregistersymbol(pItem)
unregistersymbol(iInvIndex)
unregistersymbol(iMaxIndex)
unregistersymbol(aLast)
unregistersymbol(iCount1)
unregistersymbol(iCount2)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{

}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>100</ID>
          <Description>"[X] &lt;== Minimum Money"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMMM",1)
getAddressList().getMemoryRecordByID(100).Color = 0x00008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMMM",0)
getAddressList().getMemoryRecordByID(100).Color = 0x00c08000
{$ASM}

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"[X] &lt;== Unlimited Shield - Longer Boost"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMSD",1)
getAddressList().getMemoryRecordByID(101).Color = 0x00008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMSD",0)
getAddressList().getMemoryRecordByID(101).Color = 0x00c08000
{$ASM}

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"[X] &lt;== God Mode"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableGMD",1)
getAddressList().getMemoryRecordByID(102).Color = 0x00008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableGMD",0)
getAddressList().getMemoryRecordByID(102).Color = 0x00c08000
{$ASM}

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"[X] &lt;== Unlimited Missiles"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMSM",1)
getAddressList().getMemoryRecordByID(103).Color = 0x00008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMSM",0)
getAddressList().getMemoryRecordByID(103).Color = 0x00c08000
{$ASM}

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>243</ID>
          <Description>"[X] &lt;===================== Inventory Item ======================="</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>404080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>248</ID>
              <Description>"******* [NOTE] Only Valid When you Open the Inventory (Game Paused) *******"</Description>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>FF00FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>242</ID>
              <Description>"Maximum Item Index (DONNOT CHANGE THIS) =============&gt;"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>FF00FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMaxIndex</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>245</ID>
              <Description>"Current Item Index (Choose the Item to See) =================&gt;"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iInvIndex</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>244</ID>
              <Description>"Item Description (String Size &lt; 16) (DONNOT CHANGE THIS) ===&gt;"</Description>
              <LastState Activated="0" RealAddress="00000000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF00FF</Color>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pItem</Address>
              <Offsets>
                <Offset>8</Offset>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>246</ID>
              <Description>"Item Description (String Size &gt; 15) (DONNOT CHANGE THIS) ===&gt;"</Description>
              <LastState Activated="0" RealAddress="00000000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>FF00FF</Color>
              <VariableType>String</VariableType>
              <Length>32</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pItem</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>8</Offset>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>247</ID>
              <Description>"Current Amount (Change it if you want) =====================&gt;"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"[X] &lt;== Table/Script Information"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
getMainForm().CommentButton.doClick()
{$ASM}

[disable]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Recifense</Name>
      <Address>20151104</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : X-REBIRTH
 Game Version  : 3.61 (202267)
 Game Sponsor  : Fennix102
 Proces Name   : XRebirth.exe (64 bits)
 Script Version: 2.1
 CE Version    : 6.4
 Release date  : 04-Nov-2015
 Author        : Recifense
 History:
 27-Jun-14: First Release (version 2.20 - Steam)
 09-Jul-14: Release for (version 2.20-184360 - Steam)
 29-Oct-14: Release for (version 2.51-187332 - Steam)
 11-Dec-14: Release for (version 3.00-189926 - Steam)
 18-Dec-14: Release for (version 3.10-190048 - Steam)
 03-Feb-15: Release for (version 3.20-190820 - Steam) (S1.2)
 15-Mar-15: Release for (version 3.50-192864 - Steam)
 20-Mar-15: Release for (version 3.51-193058 - Steam) (S2.0)
 21-Mar-15: Fixed a crash (S2.1)
 27-Mar-15: Release for (version 3.52-193370 - Steam)
 02-Apr-15: Release for (version 3.53-193580 - Steam)
 05-Sep-15: Release for (version 3.60-198327 - Steam)
 25-Sep-15: Release for (version 3.61-200382 - Steam)
 10-Oct-15: Release for (version 3.61-201320 - Steam)
 04-Nov-15: Release for (version 3.61-202267 - Steam)
 Features:
 - Minimum Money      [1]
 - Unlimited Shield   [2]
 - God Mode           [3]
 - Unlimited Missile  [4]
 - Some Pointers
===========================================
[1] Just look at the player's info or make the money change;
[2] For player's current controlled ship;
[3] For player's current controlled ship;
[4] For player's current controlled ship;
===========================================
[USAGE]
1) Run CE64;
2) Run Game;
3) Load the game process "XRebirth.exe" in CE;
4) Load this table and activate the main script;
5) Now Activate the script of each cheat you want to use;
6) Game On;
===========================================
[HOTKEYS]
None defined
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat. So you can always come back in case you don't like the result.
===========================================
[INFO]
Tested on Win 10 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
