<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Game Version (CHECK THIS FIRST)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobHealth, 69 C9 20 03 00 00 83 B9 ** ** ** ** 00 7E 6C 6A) //Health,XP,SKILL.
aobscan(aobAmmo,   33 C0 5E C2 04 00 66 8B 42 08 5E C2) //Ammo,Salvage.
aobscan(aobReload, 01 97 A4 00 00 00 8B 4F 08 85 C9 74) //weapon
aobscan(aobPWay,   83 F8 08 74 0A 83 F8 09 74 05 E8)
aobscan(aobCoord,  0F 28 04 18 0F 58 44 24 30 0F 29 04 18 03 C3 8B)
aobscan(aobSalvage,8D 54 24 10 52 E8 ** ** ** ** 0F B7 C0 3B C5 73)

label(PWayCall)
registersymbol(PWayCall)
label(PWayOffset)
registersymbol(PWayOffset)

label(locHealth)
registersymbol(locHealth)
label(baseHealth)
registersymbol(baseHealth)
label(locReload)
registersymbol(locReload)
label(locAmmo)
registersymbol(locAmmo)

label(offsetCoordLara)
registersymbol(offsetCoordLara)
label(offsetSalvage)
registersymbol(offsetSalvage)

label(offsetSkillPoints)
registersymbol(offsetSkillPoints)

aobHealth+6:
locHealth:

[aobHealth+8]: {dirty label! But, as a  base address, it's ok.}
baseHealth:

aobAmmo+6:
locAmmo:

aobReload:
locReload:

[aobPWay+B]:
PWayCall:

aobPWay+15:
PWayOffset:

[aobCoord+11]:
offsetCoordLara:

[aobSalvage-4]:
offsetSalvage:

[aobCoord+11]+60: //Hope won't change!
offsetSkillPoints:

[DISABLE]
unregistersymbol(locHealth)
unregistersymbol(baseHealth)
unregistersymbol(locReload)
unregistersymbol(locAmmo)
unregistersymbol(PWayCall)
unregistersymbol(PWayOffset)
unregistersymbol(offsetCoordLara)
unregistersymbol(offsetSalvage)
unregistersymbol(offsetSkillPoints)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>135</ID>
      <Description>"Open Process (Tomb Raider)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

{$lua}
function EasyAttach(timer)
  if getProcessIDFromProcessName("tombraider.exe") ~= nil then
    object_destroy(timer)
    openProcess("tombraider.exe")
  end
end

EasyAttachTimer=createTimer(nil);
timer_setInterval(EasyAttachTimer,10)
timer_onTimer(EasyAttachTimer,EasyAttach)

-- Courtesy DB  --


controlMainForm = getMainForm()
--Rename Main Form
control_setCaption(controlMainForm,"Tomb Raider")






{$asm}




[DISABLE]
//code from here till the end of the code will be used to disable the cheat

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Ammo Hack - Fully upgraded Capacity"</Description>
      <Options moHideChildren="1" moRecursiveSetValue="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Handgun Ammo (Works with fully upgrade capacity)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>"TombRaider.exe"+01FD17DC</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>0</Offset>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Shotgun (Works with fully upgraded capacity)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>"TombRaider.exe"+01FD17DC</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>28</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Bow + Arrow (Works with fully upgraded capacity)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>"TombRaider.exe"+01FD17DC</Address>
          <Offsets>
            <Offset>18</Offset>
            <Offset>10</Offset>
            <Offset>0</Offset>
            <Offset>0</Offset>
            <Offset>34</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Machine Gun (Works with fully upgraded capacity)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>"TombRaider.exe"+01FD17DC</Address>
          <Offsets>
            <Offset>28</Offset>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Grenades (Might work when you first got it)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>"TombRaider.exe"+01FD17DC</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>20</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Ammo Hack - When you first get the gun (No capacity Upgrades)"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Bow + Arrow (Works when you get the bow)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>"TombRaider.exe"+01FD17C8</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>68</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Handgun (Without any upgrades)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>"TombRaider.exe"+01FD17DC</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Machine Gun (works without any ammo upgrades)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>"TombRaider.exe"+01FD17DC</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>0</Offset>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Shotgun (No capacity Upgrades)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>"TombRaider.exe"+01FD17DC</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>28</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Cheats!"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(cheater,2048)
label(iCheat)
registersymbol(iCheat)
label(chtHealth)
label(retHealth)
label(orgHealth)
label(ptrLara)
registersymbol(ptrLara)

label(chtAmmo)
label(retAmmo)
label(orgAmmo)
label(ptrSalvage)
registersymbol(ptrSalvage)

cheater:
iCheat:
 dw 0000   //Byte:Health,reserved.
 dw 0000   //Word:Minimum Ammo.
ptrLara:
 dd 00
ptrSalvage:
 dd 00

{
  posPlayer: pointer of Lara's coord.
     X = [[[ptrLara]+22FC]+0]
     Y = [[[ptrLara]+22FC]+4]
     Z = [[[ptrLara]+22FC]+8]
  posArrow: pointer of LookAt's coord.
     X = [[ptrLara]+AF0]
     Y = [[ptrLara]+AF4]
     Z = [[ptrLara]+AF8]
  wayPoint: Pointer of local waypoint's coord.
     X = [[wayPoint]+7D0]
     Y = [[wayPoint]+7D4]
     Z = [[wayPoint]+7D8]
}

chtHealth:
 mov [ptrLara],esi     //XP, SKILL POINTS, Coordinates
 cmp dword ptr [ecx+baseHealth],00 {originalcode, ecx=0}
 jna retHealth                 {if Health=0,Lara must be dead}
 pushfd                        {if Health&gt;0,we cheat}
 push eax
 cmp byte ptr [iCheat],00
 je orgHealth
 mov eax,[ecx+baseHealth+4]
 mov [ecx+baseHealth],eax
orgHealth:
 pop eax
 popfd
 jmp retHealth


chtAmmo:
 pushfd
 mov ax,[iCheat+2]        //minAmmo(iCheat+2):word
 cmp word ptr [edx+8],ax
 jnl orgAmmo
 mov word [edx+8],ax
orgAmmo:
 popfd
 mov ax,[edx+08]
 pop esi
 jmp retAmmo


{-------------Hacked--------------}
locAmmo:
 jmp chtAmmo
retAmmo:

locHealth:
 jmp chtHealth
 db 90 90
retHealth:

[DISABLE]
locHealth:
 cmp dword ptr [ecx+baseHealth],00
locAmmo:
 db 66 8B 42 08 5E
dealloc(cheater)
unregistersymbol(iCheat)
unregistersymbol(ptrLara)
unregistersymbol(ptrSalvage)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>93</ID>
          <Description>"Unlimited Health"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iCheat:
 db 01

[DISABLE]
iCheat:
 db 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"No Reloading"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
locReload:
 db 90 90 90 90 90 90

[DISABLE]
locReload:
 db 01 97 A4 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"Unlimited Ammo"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
iCheat+2:
 dw 000C  //Set your Minimum Ammo here.

[DISABLE]
iCheat+2:
 dw 0000
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"Coordinates"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>119</ID>
              <Description>"Where you're looking at. AXIS-X"</Description>
              <VariableType>Float</VariableType>
              <Address>ptrLara</Address>
              <Offsets>
                <Offset>AF0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>101</ID>
              <Description>"AXIS Y"</Description>
              <VariableType>Float</VariableType>
              <Address>ptrLara</Address>
              <Offsets>
                <Offset>AF4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>102</ID>
              <Description>"AXIS Z"</Description>
              <VariableType>Float</VariableType>
              <Address>ptrLara</Address>
              <Offsets>
                <Offset>AF8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>105</ID>
              <Description>"Way point axis-X"</Description>
              <VariableType>Float</VariableType>
              <Address>PWayCall+PWayOffset</Address>
              <Offsets>
                <Offset>7D0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>107</ID>
              <Description>"Way point axis-Y"</Description>
              <VariableType>Float</VariableType>
              <Address>PWayCall+PWayOffset</Address>
              <Offsets>
                <Offset>7D4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>106</ID>
              <Description>"WayPoint Axis-Z"</Description>
              <VariableType>Float</VariableType>
              <Address>PWayCall+PWayOffset</Address>
              <Offsets>
                <Offset>7D8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"BACKUP Pointers"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Bow + Arrow (No capacity upgrades)"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>"TombRaider.exe"+01FD17DC</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>34</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>120</ID>
      <Description>"Scripts"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>124</ID>
          <Description>"Unlimited Ammo"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//mov [eax],si
//test si,si
mov eax,99
exit:
jmp returnhere

"TombRaider.exe"+41FF70:
jmp originalcode
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(originalcode)
"TombRaider.exe"+41FF70:
mov [eax],si
test si,si
//Alt: db 66 89 30 66 85 F6
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>131</ID>
          <Description>"Unlimited Skill Points"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : TombRaider.exe
  Version: 
  Date   : 2015-10-17
  Author : xxdem

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(unlimitedskillpoint,TombRaider.exe,29 51 18 C2 04 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //sub [ecx+18],edx
  ret 0004
  jmp return

unlimitedskillpoint:
  jmp code
  nop
return:
registersymbol(unlimitedskillpoint)

[DISABLE]

unlimitedskillpoint:
  db 29 51 18 C2 04 00

unregistersymbol(unlimitedskillpoint)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "TombRaider.exe"+506C21

"TombRaider.exe"+506C09: 3B CA                 -  cmp ecx,edx
"TombRaider.exe"+506C0B: 74 02                 -  je TombRaider.exe+506C0F
"TombRaider.exe"+506C0D: 33 C0                 -  xor eax,eax
"TombRaider.exe"+506C0F: C3                    -  ret 
"TombRaider.exe"+506C10: 8B 41 18              -  mov eax,[ecx+18]
"TombRaider.exe"+506C13: 8B 54 24 04           -  mov edx,[esp+04]
"TombRaider.exe"+506C17: 3B C2                 -  cmp eax,edx
"TombRaider.exe"+506C19: 73 06                 -  jae TombRaider.exe+506C21
"TombRaider.exe"+506C1B: 29 41 18              -  sub [ecx+18],eax
"TombRaider.exe"+506C1E: C2 04 00              -  ret 0004
// ---------- INJECTING HERE ----------
"TombRaider.exe"+506C21: 29 51 18              -  sub [ecx+18],edx
"TombRaider.exe"+506C24: C2 04 00              -  ret 0004
// ---------- DONE INJECTING  ----------
"TombRaider.exe"+506C27: CC                    -  int 3 
"TombRaider.exe"+506C28: CC                    -  int 3 
"TombRaider.exe"+506C29: CC                    -  int 3 
"TombRaider.exe"+506C2A: CC                    -  int 3 
"TombRaider.exe"+506C2B: CC                    -  int 3 
"TombRaider.exe"+506C2C: CC                    -  int 3 
"TombRaider.exe"+506C2D: CC                    -  int 3 
"TombRaider.exe"+506C2E: CC                    -  int 3 
"TombRaider.exe"+506C2F: CC                    -  int 3 
"TombRaider.exe"+506C30: 8B 81 90 00 00 00     -  mov eax,[ecx+00000090]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>125</ID>
      <Description>"Game Progress"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>128</ID>
          <Description>"Coastal Forest"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>129</ID>
      <Description>"Stats"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>132</ID>
      <Description>"Salvage"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>134</ID>
          <Description>"Reduces Amount Of Salvage"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : TombRaider.exe
  Version: 
  Date   : 2015-12-20
  Author : xxdem

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infinitesalvage,TombRaider.exe,66 8B 00 66 2B C6) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //mov ax,[eax]
  sub ax,si
  jmp return

infinitesalvage:
  jmp code
  nop
return:
registersymbol(infinitesalvage)

[DISABLE]

infinitesalvage:
  db 66 8B 00 66 2B C6

unregistersymbol(infinitesalvage)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "TombRaider.exe"+41FF1A

"TombRaider.exe"+41FEFB: 8B E9                 -  mov ebp,ecx
"TombRaider.exe"+41FEFD: 57                    -  push edi
"TombRaider.exe"+41FEFE: 89 6C 24 10           -  mov [esp+10],ebp
"TombRaider.exe"+41FF02: 66 85 F6              -  test si,si
"TombRaider.exe"+41FF05: 0F 8C 93 01 00 00     -  jl TombRaider.exe+42009E
"TombRaider.exe"+41FF0B: 8B 5C 24 24           -  mov ebx,[esp+24]
"TombRaider.exe"+41FF0F: 8D 7D 2C              -  lea edi,[ebp+2C]
"TombRaider.exe"+41FF12: 53                    -  push ebx
"TombRaider.exe"+41FF13: 8B CF                 -  mov ecx,edi
"TombRaider.exe"+41FF15: E8 46 E6 FF FF        -  call TombRaider.exe+41E560
// ---------- INJECTING HERE ----------
"TombRaider.exe"+41FF1A: 66 8B 00              -  mov ax,[eax]
"TombRaider.exe"+41FF1D: 66 2B C6              -  sub ax,si
// ---------- DONE INJECTING  ----------
"TombRaider.exe"+41FF20: 0F B7 F0              -  movzx esi,ax
"TombRaider.exe"+41FF23: 66 85 F6              -  test si,si
"TombRaider.exe"+41FF26: 7F 02                 -  jg TombRaider.exe+41FF2A
"TombRaider.exe"+41FF28: 33 F6                 -  xor esi,esi
"TombRaider.exe"+41FF2A: 8B CD                 -  mov ecx,ebp
"TombRaider.exe"+41FF2C: E8 9F 00 EB FF        -  call TombRaider.exe+2CFFD0
"TombRaider.exe"+41FF31: 84 C0                 -  test al,al
"TombRaider.exe"+41FF33: 74 33                 -  je TombRaider.exe+41FF68
"TombRaider.exe"+41FF35: 8B 45 08              -  mov eax,[ebp+08]
"TombRaider.exe"+41FF38: 85 C0                 -  test eax,eax
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of call TombRaider.exe+52F3F0</Description>
      <Address>00468A93</Address>
      <ModuleName>TombRaider.exe</ModuleName>
      <ModuleNameOffset>2D8A93</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>64</Byte>
        <Byte>52</Byte>
        <Byte>8B</Byte>
        <Byte>C8</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>58</Byte>
        <Byte>69</Byte>
        <Byte>25</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>84</Byte>
        <Byte>DB</Byte>
        <Byte>74</Byte>
        <Byte>7E</Byte>
        <Byte>80</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>infinitesalvage</Name>
      <Address>00F7FF1A</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Release Notes: 
V1.0 
Released the cheat table. 
Added 4 pointers for ammo in single-player. 
V1.1 
Added a pointer that changes bow + arrow value when you get it in the begining 
Added a pointer that changes the handgun ammo, it also works with silencer. 
v1.2 
Added shotgun ammo changer. 
Added backup pointer just incase the pointers don't work. 
Added Bow + Arrow ammo hack in the backup pointers group! 
V2.0
Now this is the greatest update i ever made on this table.
Manage to add infinite health
Manage to add infinite ammo
manage to add no reloading
manage to find co-ordinates whereever lara is.
v1.1.3:
-Added unlimited skill points which require 1 skill point to work.
Bugs: 
When changing the value for grenades the value of the explosive arrows also change. Current status - Not fixing yet 
You can accidently pick ammo that has more than it's capacity. It will display up a - then the number, it will reset your ammo to default so be careful and try not to pick ammo also this could occur when looting enemies. - Impossible to fix 
Sometimes when you die, the pointers sometimes doesn't work. - Trying to add alternative pointer soon as possible 
While you playing some addresses/pointers won't work so check the backup pointers and see if they are working.
When you enable infinite health and you jump from higher place you will die.
don't change your coordinates to a random number otherwise it cause crashes or deaths in the game. 
Infinite ammo only make the explosive infinite.
Infinite health will make your screen red until you died
Warnings: 
CHECK the game version to verify the game version. Then cheats, and the volla it works!
If you collapse all the headers the pointers might not work until you relaunch the game. 
If the pointers are showing wrong values restart the game, it should allow C.E to find automatically the value. 
Other addresses in other category changes to a random value, don't worry this usually happens. 
</Comments>
  <LuaScript>function BlinkTeleport()
 local playerAddres = getAddress('[[ptrLara]+offsetCoordLara]')
 local destinationAddress = getAddress('[ptrLara]')

 if playerAddres==nil or destinationAddress==nil then return end
 if playerAddres==0 or destinationAddress==0 then return end

 local destX,destY,destZ = readInteger(destinationAddress+0xAF0)
                          ,readInteger(destinationAddress+0xAF4)
                          ,readInteger(destinationAddress+0xAF8)

 if not(destX==0 and destY==0 and destZ==0)then
    writeInteger(playerAddres+0,destX)
    writeInteger(playerAddres+4,destY)
    writeInteger(playerAddres+8,destZ)
 end;
end

function WayPointTeleport()
 local playerAddres = readInteger('[ptrLara]+offsetCoordLara')
 local destinationAddress = readInteger('PWayCall+PWayOffset')

 if playerAddres==nil or destinationAddress==nil then return end
 if playerAddres==0 or destinationAddress==0 then return end

 local destX = readInteger(destinationAddress+0x7D0)
 local destY = readInteger(destinationAddress+0x7D4)
 local destZ = readInteger(destinationAddress+0x7D8)

 if not(destX==0 and destY==0 and destZ==0)then
    writeInteger(playerAddres+0,destX)
    writeInteger(playerAddres+4,destY)
    writeInteger(playerAddres+8,destZ)
 end;
end


--Salvage Pointer is a real dynamic pointer.--
--Salvage = [[ptrSalvage]+8]--
---------------------------------------------
function GetSalvagePointer(Sender)
  local vEcx,vEdx = readInteger('[[ptrLara]+offsetSalvage]+2C'),
                    readInteger('[[ptrLara]+offsetSalvage]+38');
  if vEcx==nil or vEcx==0 or vEdx==nil or vEdx==0 then
    writeInteger('ptrSalvage',0)
  else
    vEdx = 0x8720EBCE % vEdx
    vEdx = readInteger(vEcx + 4*vEdx)
    while(vEdx~=0)do
      vEcx = readInteger(vEdx+4)
      --AOB:0x8720EBCE==Int(-2027885618)--
      if vEcx ~= -2027885618 then
        vEdx = readInteger(vEdx)
      else
        do break end
      end
    end
    writeInteger('ptrSalvage',vEdx)
  end;
end

t=createTimer(Sender)
timer_setInterval(t, 1000)
timer_onTimer(t,GetSalvagePointer)
timer_setEnabled(t,true)
---End of Get Salvage Pointer---
</LuaScript>
</CheatTable>
