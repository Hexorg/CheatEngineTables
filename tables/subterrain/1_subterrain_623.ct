<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <Files>
    <monojunk160117.lua Encoding="Ascii85">/vnY2,sKjms#N7aAaoQEt05zLlf8;/$ks}UJ;S^ut,i9NRWz+vK}RE401N:q)*pyS]z7}RuOIUUC}Nb$FXwC_avnWBJ@h-Vp3)pO[pg5Sn[u)*?=}(-ewHosGF!a/:}Z:c7q_5$3*.*93]V11K}:$gRi#)hKJc0cae)c*3K{J:.AEYoR^;Te@HnycZ(e,r-@*#zws{/!$K!ESXYHmggU?B$WUDM}hvB18U/LlT(B{!V]/Id,D6pGS0pw4n.aRpyZnDK]vRZx1JwD%;,S5(4XJz}PC!W75R#+k}rhI+KLZ5%Evtdz-pv+osZPI2DHV,I0glyN{ay/iFC*fy?6!rK:]pmUJaMeDDnRr1]E?b/:xXf49[wiZQq./YVbdHLoO*rOo5Bt.UhyB?Xv[Bg{cH7fxQ=_zwT00)0AyZ]eLKInhv)5.imuCWgzJsr$k,^g)lf_OWn(wsBw8Kbs1x#g@c-x,A,UlffvI1yd==SNI%!iM}/LE99e.X19DOiC5HTv[P_Ex:4eUZnq;vXkQWB}(Tu$[y3BIZEIo(kXm7Y.$1uj1o?J%c$?*Fw(L1F0W8(SxU#)Rd8hvMMb6*yE_.Vjdp}dnrbfU^RS-c]oT=zFO$vruob=0CcGqmM6H2Y0-$%Y8AK:SIwJG090h==Pb#D2wnlQ8$pBBE8x2tCZ)k=l1-82x4?FYGFdelPAxKht%;T7?]EFzy.4+GQ%Ny-3v4ffW_O8[w#d^7,.?=^.GXPGiC1T:h@Qt:QnLa.Fr;[IkwkGEl3oZM))tN0S_nm3dRK#;iY1K9;IFc-l2_jR=?$d*/SZ18yToDDoI[eG#s^HBAl[lQDdt%ncGk-+g}R}lQ78iW@m*h%@sGTz73-:2EX73;NJYDhwSu_WrHq%u3.G)7d{]:b]8q3p%2LpZFRrt61Nsa3Ob+hmH7wSnLlp(GZR=Vg6v%z++ib?ZZr4i6L;{[Mj0+c6/V_e^],nB#n,E^-!bB^IAY5(?yC(t0=?rIGx#p]9cnVk17O[@Wan@MPE#Bn=w2A}-;!E4cj$fA0e,$il;s8sClG;wsP.[aFs4Y,^wsmy[YGgT-BD4l!TaU^q;M+EA6HJb[qC=G]#._sKtf}vr4NO5LHO{mSP_}a[VfKare+b+yE!?LJSXUJ[[SrO9y-3:]sQ[ga=U4E{D;+[;HQ(*D1[-JNsHVvQ:)btRE_+7=ox{%Dd^e$vjHDG1vH%+AU;W31V6)r@Mr%+_5},4f8yU]Lu=!51o]f77,f4,2/MuZDYMJO}0{I#PIuy^:g_TsRjf!1jf1ii?lx{nnUB656*uzt:UsCn%A4XM8*3Xfi^T8GeBp3t[,n]?sOMk@$NK/G#G1x(X)%/}rhks(2m!jjsXGom@XxJ}qU.db^$pSMYNbnc2c1pEjCSw}_.AGbx1AQ?EvVn#!ayk8RPjAvyc3Q2fT62hWr4x},4*,LFI[xS/#G?nuKS^G.LjI7*hC!O5;Pb@nNYui)3I;0{KMtR#]Qlonh,0^FBK]!r5}_!vBLa9DhYfw;6b1q;SaoGg02%/vgZ%)I90ZeK4*+P./0S:w8U^@ZI;nANEcT48/U%Z$M3uV}e/v):(nGA6t4.C}b(svR#(3Sj$gAC.wROFBM.!cuE%D_^TViaAf)uRP7n,#:SS3vpf4(v4oh$J7Syd!=8ILC72N2]/@Iyumy=Ieyz-,N[8p=g((FJ+*Wm2!hnO965-qPlX;Ta#:c2=J}tFro]YJbX-#SI]57VteNs{@PoC1H:{nicEz/^i#y+ha)/SK;U#OYnoPThStaw$rN[Q5#oBlC0ga8F[cQs!9aK/v4i;bn60b5a]wh+%(;4ja0mDjhVh}$LH?{zj+!Tlq(QW-9RG%m2Hs}6)_CwIdPB1dOq?ej0FNXM2-V8wcvGCn--Zb+^oVyj,UuNkr$o8r%UNah@iT/%(OSMZ2_f+b:Y2WAZUkGmejU-rve=SaFsh$Coye}SQ]CdfY4{]-12FnSI#mMsXvdNO+T(*WFHnTrrCi53ta*Ch4A9_kO.Xo!4y.%$H8[wnK7PQL7lK)C=+1eOKMxNwt,Q0fAa^$qm4YE5lC!60WAWtMmHQ5JBcEPR=uPkct#lE$FFC7!HGa(2e6?*fdAjW4b-b;O[(wHa4WtRTQIoD6M6@Rw^c)B,4jemXE5ZU;)ii!q5!irI+Poy5_RQm-B$@8y2Q3..1,_XMdel1#?_MfuSh+XH((JE@Pyu4HFG$77f^^FLI)5f3eaW,hS@{=@9%$?s--,?hGuMRWT@89zaAg/gbL99A-ry,Ai,Vf(I#FYU9J(.9mmTexyZh(D{}6-FexIxN2z/^+c_)vmr0QgbGt3-;?lk8X/3jsB{JSRA{]^,5M;dU#jR.P8m.TRY:;nb!eDe9gu.U5MXGFdN]s+0cP0%qGoyo6;{6ElRVrhPPeJNE5M!XyUF]I@7ofCRR)HE4vjch_^0W/1Js?17IYRaWE/j7n=0+--I:oqDWw!XSuF_Y(UY-pj8%gzB5j)82CTsKZA}d8n#+6SLdmFhb;/Y](1gU_(I:}#TIO].?o1vyi1j^oTA%jXuuvbfk_A=)5X=C!w!(44XrF,*6oQWcJiWq]CAq0y)ji:T*+l19w*6*hp0aIkn)P}ku!KeX;!FQY0;IamBG;x2y8NpGt2-x8qSWzPCG%a@%RkzJJL48ojR-pTxf4sP9DZ:NWu:^{2MJ]ZVgCY.A#)pcVz+YceJPv.wj;pgpx:8l}tD@p1rQ6_in#O4:5;x.pE#tJj=eE9U9l/m@#r];mud5oZd^PEq2TFqlm(q1+JZO.ev^C@ot7p$b4]IioyIayOUSF7o1FPTe8LQPNx1Reijf+RC-CaD0Gdsk=?{F$(z%[;LndczGLLb9Iw@h?@dRz;lLnIzYU3:*+JjU2Ic)%1urjGke$=Yuhkj8d99}I.zJdNQ4xlH*:5ttov.0op:LrpV.EoU03Mn}QxF$=EdsZT/cx!=_WG0Uc1hQM96K)$o2L+Gjg9#Nw(hR+f!Blc%mo1}W)F(Ei/b8)(}/,r%C1TW9V,(C;J4uf,9Kx@2,[f1vRjTb6/stG7-Y-[4@H,0O{ap3UNXr!Evf6v;O/,2*jv-(:3kshzJ[7ac!P[q?KX!46v0F)rZ,).[417cgftR7BF;/V)xz{@H]2U.4w!+9_RXBA%,;wJ{,V_le0.xE?RML!MTbt#rpbOh@q19yzd$Go,=FhvM!ZW0o-;o+XR(QL#2t3]I,v]O6[n6LSNX8j7u)Q:v=IPxyO){Qtq%N?63I7M:mA.E[Q3r_su?vC;9T^NO4lg,h$G@a4WtZW}vAajAPEOk0sRiE%M.OGKRJj3Y,F+@uN0Ps@)prcjH.!oDOAV!FqDVBDq$;oUXXYf^UZ?U3X#@tZ+tx#K4^#P96uhbQL=%uF0z,]GlSetqFn%XAP)=)y9ws8{w1e;YWu2/14^]=vDg_IJk?w6SXk3h+Q$HkEci])wGqKVDqf8AuUky[L75+KFc@(().dUD;o!qOmCAA!2t;81R9ueUNd9+A6g6qmwu7K3.oO#hC1!APojsb5QhwEGRb]xRy(r].!{miwFCke^ko0j%E0wt63/zHS(T^7jR3JhLWw,aV)=F${R_)=YB-8,-/sw_(l0pNEIsDm)fO4BLL^({%fxmu=_P;+{niwi#@E@T.D9[i%L0XheKy:?Tx:wS/gD3UgfvB4LN8SwZNqrlo1p%PhTmi;ikFGjMW@rk7fyP];TBpq,yXly@,I,-gu%cA[N@!Py;3.iah%D8jFA)R?v*Ha+j,E0K.4knkc.(RAHkqOQb)SF1HjXN$9=[,W$U,%(V8]E)4]MFOH11pAK^!G1GPY$,t0MxKQ5:+$3VRi?Ax:pDW/!;IqTAE!C%i-j=TkyfA%icQnHsx:i0fo6f!yG_Txz8dZ=zKW*Q+dGP6XYhHXKTkj4hyBIuEB-VaMbP_rZZgdoIzoOj4Nb{N46H)zO2?},*BVQ!F%Vkf*5v@YSf86HiWJZuDyV)/U}*vjBpe9;dmBMQHk70YKk(5o7YAXabKQz$g;q8[Y0[kZxGn(vA{[beDz^dIXd8#2p#L1K*EC/M9/8!,7*ci;bzB[_056.t3$Fz(pVOjIhFZ5Y#z4}H?q[4*b]PL16pD,88xY:[^5Evwg!D7%BdH[KBx:)XRPMxg;xoZI3*I/?ne96v,]B%wi#_V1S]Z9-4,gL!mZoFjYJ!jK]_zMwS2Iru7/Ge^U[)GuC2KTMU+y1/gzPf$%s_In=%KgxZ2RuT,jlR2[/qnAr}?QnTx,Fx!#Fri%CHRx,aSAMuky4dF.8F{vm;C1Tt+?UkOutr$5D=9;Nuh;k_8]![i2pl%HBITii[+nn6=GXc[:QPbnibtY:ZrN^h8FD;VjbcVfWWxw89^Ky58=%Q;?7)rJ{G5)UluE1BQ}8:(I=rL/M%ZBD1C3O!5#g7U@?B4Eq4;j+gIUNW_/qZ]#m^-%.=cXrw]Plfs$=x7Iz$Xgb6a.K;fT@4u!w-$[s=aD*E,#8_ba:^IQD5Yat$Loy1fcCsTw(N6e0YsZD2L;(*R(j9xI@$qeCbm{.jYRv7uLu#81M%x.8,c(DE-^8{K1.FE1S2*]v#9]YFn^[/X-lF?QSvTNB=5-EAyDQP],rQ]T=w.;ES4lg.VG}cJ@EfE,d0oe(sWx:a?7QbWbF5UI:l7T;K.y/_G1l}(w)nqJsIL;HHM;sg,P5u_p#@Gy,fNP#@t3}iN^.mE#.i;Y1R=jsgds!1z5iRK3@}Sd;j^LK@t2#:ySE8]L*w,z-XGwU(V61_V9JLeis%:HI4$=v04ryX-?MyQI(Sy[U2*4On0+0[=eTDD2704m*cqF%Z,o]1Aiw7,#ivS/v?OPM[WDF,(pBYQ#02TW^t%@$jH[j1pWo@t3;PEB?A7Q5XfS^a5-LsPef^MGsU0A{:Np#80$oz$:j{-[W[k8dMeLd7nWLYHYkMeqW4U^5ruVFfLs6KJ!:Am:@Ug@M*05@X@ZSPs?*0Dnd(a9L,}.;HE^#_Lu:x]!k!DY;osE)Fg%Gd?0f7%1j.vQ[QwtTtb*vkAbat2+W.(Ya-nt*uIF6.atlKJLo1x=kzDN!O/Io{sZolPBj9eLVA!nk;a4R)TV?F-e]eDx%N?hW69@NdMP1Z[:7a@)cJxf{laSs}ac*/a-vue$n1?8LMC.rVp=UdZENPJNMcbKZZeoM9IXkb7(=oLhDp_.I2KPkl?n6z^2u^/}O%o9)+woZGVal(qv[-JSV3##bc*T:]7t4M:.i!.uf*2eLR=(_1ij8jlcF%IX3=UcPnN7MDB!}N0W+WgC}9Eu7cAb-GzCC*1vk4u_D/n^@iVD]Qbk;+{Rnq7z)Ec!.?F..%;Soz.Dmdnu..4+B?5wktpbSYGPj[;o*q!5CaR,R$p+WBx,)FL5CewpoXn1]rG-s!tbf4eW_viA/T^DOkuzR1pq)ahFgSmo={cE}_h(br#IG8$X0l(gX{]sUu#Hc-TviU8]+WF[O-X+WD!A3VwfOxRs85AgwJsY4}@,;la9:(%[}rUs!#Rb%RasLJ%LD9h8Nc]DMpeqoLrbZ,1E$)wKArb#)$ZVHi9bFr=gHcQ*xLrPa!u-YVnY!qyo4e{CcqmvVP/.}[8Oixu1ZD?M-@*7zl/LP;OsJ,A5T,i=h6GP5s9iklG.67KtC#Zu?QTV0%1KGvN$!W0_ro{:m?ka=LHf;}r3Y-@v]fo2z_HIDEmg0_%F]WPt8VdWy3m:/jTA!+z3K$VK.aTlmLOiXC0?fX_)6f^0!FcwbSZ%Ql%xp,lhLIR-N=HV/=K-PhH#]JxD-AG9xmgJS??$WD0PG:zJA_:y*s?Wm!;*H$I:L.A[Ylj;-Xodif/2H%d.d?)bzKVQUJW,txdrtFEQz07j/_/5btaRtJx/znBktd[;uy%ZWp,)LU$v?@T?oRh.nGMSET=yFA@WrTc^:%qF[fiocnG,uA-XA;vgSee]QBAOP]/^n5p)Yr6NQ_VGVD#IqyVMLIiCAD$MdK0+Wd6b+bUNeRO@#)oETwSl]aCiFm1B,u+p[S?%F]!BD-$u#36bu8j%aW*C.a1^5PRZjXNjkyX+Rka@-LgraO+:db]F0ntB#f4IXCaB0qq-)IoOhtArNr=re$d1Tty^n$P0Tk{u^rZ8pRbLOHta-=pns?Z?0^@Qu}9N$IYR%,jr,9=qz{Xe}{Kb_[.TKdi-QuaL?^iAz,VJJPri;YVY?We#GUuo+Ei8b!LmqFn,r*JG/GdNk%!AroNY6EVA2qPY^ufcr=il%W.$J$RYi2+xC@Q85fpB);Ag?1dq=Ze8P11nwqdh^kaT]ZzmTX5aIDc^^a4-/H85_FVpPj(*r/Nj*ASyfQgP-btr$=)h0.7:lJa4Njvem4@ACVj!V^0?r^ZBMXbri5E)P#bIL!2{T/z8Vo#H:@Ie?b0SZk=sVeQW+}/Y-od#UN9!V0CMMrR[opUw2I@ZSJ.Z(^VCyu{x/g0TUC@8WT*;b^Yu:Qvs[JU9R?VZF4I]mdxr?1,n_YAI:CNLQ*[rPDk8,dRsmwZ3WOD]h86Q#(D*HW#sie{G^F]R5T93g]/sA{yAcUlg!5m*AtyL9aUamJSrAH=62/a#@:e@k4I[[!e6rWU{3?7x4,4,V},7X8qDs5@1t([I2j.JRp6Z$ZV+E*SkD_iO)rbw.%d4^(pIn--8#CZJ78es0Hb/eMD(YU,kPXf,{3H)CEHn(dO:GQ8wHNSrP[*pRfU#l:!:X#]Bl4^O-mcTnZYx8-oHxSFZDuBKsZwSe#N2@[.TjXr4]b5J(=;l[[@FUzO6g8]M5#(0Sk$ojl,I=I#iH7v%+fmZT--1/bUa/nJO$jX).E$%j)!5xtu4;_Ee?CQ,z1pQu7$M,!S{?zh=H@E/#PvaBv=8}_pQIVp0z-kl!Yo](vKDvIg!us#cE!rV?y==,b,,dVZM-BnZ9W^}k@*WA)UD8lwMRDPAstT6kdvose-1]e^q+p9atQz2)(Ixhc+(U)gaIsL!b%K{q#gMNhxnS.5D*J$-5I^a93zgtvvaSS2wkV8Ow=joZA#3bsOLk.-x7@LAYUown0JnY6O83OBFS,ay+c!UI:nw;Tp}4!oy4cI3!t%gUj]-o/Lo#Nm??qJE{l;GgO4M1@GtyxL-54As[MIt,=Zt$Bxf]Up7dXCb?c,j(r:?_Jydi=]_2u4^,BOb9yM^AlXI/88quVRz6}%B#l3W93UU+eP+-z:p^ocmQliunbF1^-f,1{k1el2@3LJh:)Url]fcp-Po*TkG#:JrZq4]T+n:G]nCovI=pXBIno,]N-J:!$dA/gx!Ela-,l}I]eM)qC[y*Op;XIV!)4w!%QYaMzC6.h$F*,XxpSzmxqk^Tfr8izs{^v9r?*^x^w@m?0+Ww?oLazB$;[4LzM!WZ{{u/#0W5bC+_14;Yx%oRJ#6{}U}LRe}8jAOkoLoe65=GI;W+FR.6ih]iW0q_f}DT:)rUyG+o,/dO,,7;HX#6F/+@CYOrp$eRE0cP-REPac.fH,+}238O,z)nYd[PRl3B/upj+)s1H8(RlJ:V)({h4PgM!f%sBAU*8}-Aw@pryG4IU;#8}M6(sXOOLUKb8$q=ia)5=eusofu*fU%MFCUT6dYNF78jVS1bynHSXV1x6z?qfnBG}wTr(2?I1kFOtJ4vF1^m/mprJi%;}nm0^Vz-Y$2Ksj?!n[i%@$zb,o7L7rl(UfV{G8HZt$nw+9FYYXPgRp!-qm.Z18;[;YhqS#x7A}bUW$8EDmeK:pZc:534;MAp2O6-yq/Z8Sv*.=nYjgz};thmbdwTX1dRgC1UZ{;3aD%IdTjgr6@0{T+MyI]FxS3d6BGytxY@ghOm.HPD)Bna#pURL8yH9qi6gs.?g^IUad(kZauxR=YP!k[SBq%u%AQd+rn;$4if-;DpFg.em-aTQt!3MF+]!b8^1@T^,LK5wodUj@0$Az2L?YB)Or;1Fit.ZD$x7lXX8BlE$*Nk$0g@mMN5h%:4hkfowe*L^m}W$=p9yWlO=jVbxBrx*b*i(Xei,zqrbZj96.[)%UvSeYhH^4qydVF[;-fpyN0x;Hg%dQFPm1mSp){Y@K3Ep@fnJ@!QcWkq}{28S6LaVJhu)):Hzn_+a};rWK9yr##^{1=3,0f=J,-G87Ym.K;+${NTJpA/2l.QV]iuH],TFbvyW]^m7[)yE8tz@w2i.]g7G)ZI?#IF,D[.WX7zCcE1DI#ezikA9Ro?zFbdc_lJm6)j^YYUPEbSRaZjzK;O##da/ay6MkMcbgSrx^-=OpB*oTWGF2Iu.Hc::4byqkueD;@[qkC_2Sk{#VlVM[x5r[NJ?o0Z]M9KQLIlk,h5^KkVQfPC2K:FAeI==QU4B![jB1#6$R!fQ%I/igqa-vQ=HS%/WlIn$.hrsZHzBBF30G{VZ%/2rE3Bv;9=0Su2O@-,,VmD:+TysXAosggQUbSLOVuup[(PO8}O)?pCTYK#qi@[4Zz9dAt!Qi0m-/6bP^gT$K?kKJ([lUG!Ek(_w]EG:LGBMr%bUynEPbZ!ar%yi2o/,]i1:1H5MjBf,?-uU*E:MrRO[exl1wON%e=JXDV)9Rko6mYrJ-H6mt:rnW2ccjZV0Rs0S}EhEKpve27DzPbQYkuCz{eOsg#2e:I4:dr,/OhzB}y2]4HARlG^%2ZJa2#ngOV8*%!C}eYCO-:We_yqYksK,N%:(JBbB6:NiDR[ec}b)N@C.LhU2-!P2{bQ4idZYzIQ]VS}wE=@awnl(!M[9dvpw6Z!OVg9Ic([G/Svv/wnqe,#eoM:y5*bB7ml!e%qhuVW5d!GmH!Z]]Cv9#WMS#/1(HaOKHi=p%7yNJ3b_epgqlTkarl:d!nzX/pH.oGWt$[6t7E_yN-NRGFP#1pO*!q1G/@:ZEk^j#wPevQsTv!MHXbsWtO%NxV$Z8;lGQm.kkZ^jmqh:fwFsuI7%9ZEKuS1s7=!V2d*%QOUpk5]WF%eK))CEHvWgIeYmHMg_:qz2JQ6W7GE_Jcm(;1BuPf@a4#yl;UcamK/z7{BG#wI[XnQjMq3GwJPyD_X*ok}S:7zgmjqV6up%!-GqJmU((D{Yt;!y^S/(oHS18k]PS=-An)/HPa470KYtRn!ynAwBOb;j}2SM:pxU:t_6}JvUeVE12$YNr7CoI.VtOIzL-,efv$/CKK/zYGjj4^UDM{FXj%LKO}dT0V1[Iu+QFWJJnBX7d-+v*/Zk#WsucYvjPZbVFRkc0nn7pqpC8@knJ[olmZX_LDqQC*50tHn%*:v5nHmCn(:[?ynfiO}M-,vD9^sf[yecudLpjOFwzTTbl,4{GreZ$6c9JV*I59#()]^6Qif[jwquF6x1E#s;Z@ImD.vT+@=TpW$O]kzati$E5%42*K!UKOJ=#-)(-P1pirKaA3rDz(k)kam)LpK0I[eq=R;lvd)1MR}v]#,fbA-dSJJ{zoQ@Y)]-$lIC?_T;=3zT+G?hkro5(1={yX2,,WP[Li:xR(6{!sa:G(}r6*0Elno)43*E]+wUa0B%lEbS.*x$/v_m2aT8e^+MoaOIo4e{2BH)EQhxX/=M@l}-bo95#ZFNqydVlWKvU[oF6Ro)YmHy[n%C.C%uoRP5Z%1XQom}*hZbDjbDtT/Bxalq*AU6#-Zj=F=N$++}m)D^;;Tx0S)vp5_:%mFF@@0I{?7sQzOkDjmlgyl!Z@n3}!@pXi.J)[[ml*f#..%JTLSZQ6Kj?E/1HN(I;,tQ3x!Z@W)yWs-6LgC{-.Jym@ikgk7qkKId+8^x^:4Dw--[uz^@a{-7/E5z+JDs!CwH%h4u2P{dv5-NZeV994V3q(YX^s?e}$,r/TZP}b5Dw7?MIw1e_@]ZXvR1LdPuPk;qy/1.$0Cv8EGAHfx?A)oiC.C+-Kk3n*tp.yY67JhjnS49*9D{r/0xIIhTE+sku]nnSmDpEwF5%uJF1-C%u#h,}k!Y[?i?$k)QS,*fcO/h.H#}RL0{Mf7$B;-.aWA6R0.6T%nd%W%b*w?[7io:)0T8aSyPA?GrfPmn7$#CX;)S?jVe%o[o=y!jfOSo7/z/aG!!yfcw.;(v*wju8awp=OCYaUpud;sy+immSNPr(tsfcIs[n8Ffd1tgC{d.JS0d45j0o%,6:}GOLOlWrg3p;#g=d/p136?*fMU72R!Gv:SBXp8/InR*H8E0pke5DkkV5fd6}C7G5mueL8[n,ti[ktPPHY8cU=M]uOai1GdO=OvAiqW#{muE+1H9{%Y;0tudn#sKuPrV8ufOQj_:TjC!.@lem97@^mi]qvmmhWRk@z1+fuN^czlce0[em_0^_u$UB)^HcD#3Ku_..}DY5MA;BJUKYiR/xHmH?sVBN[3#O^+l96d7]Pb+tB!P8+k6()Wxo*:?(1qo[%PT,ux5r0,XT)xwjfv;_=OLd6G7n+YfFr17*uK@5Db5Y/V.o0-*RYj5.@.?V=zVy=mHUNWL_I44+,0/%2!$]au#M(S4@;_2H^e^9-hLMw,hJ%6!]u(S^uiyOe:Iy)m^(M/mNN1;7o7IhwCnsbMkmK}9[.4hR^u,bo6UT#rTViBG]l/RvM#J5.1,w?2sUWw,[$t}H.8v-AR{9aKtVyt6.XmD@p8lX^Coyt,nKyy.*-uA64ID1i!+@.lI/Y#E)GL{UN7*I%M7;m]D,mxUm-J$sIx]a98nb,z4g=-mf{t/c5jOFv)THXT_0RJ-ydw:7@;kwXKAeyJ/AHt#i=EW@M)?q$n288deHdo3#g69b0d#m_N,PxB[buqrz/AC;ej;t695Phdi6tYcpB(S}emI[fM9@k^CtbikzgR}M_7ZN5h9offgAGtHu/s]gNSgF$]qR#}W:z9X^cSC2CXallZy(f5q.-{*yuH%4yYTK)J,E!g9Nko#Uho{!h_Ow2UdcS.804TY#z;dO/9l96)5T6#%!i:ehL2RqE@P0]Pey=m#:yB%Wv.j5=eQkIAG6KvyBUE+!G6h:OVFw2=sr}jTmqf==Pjql.ddN%pQkic-DV52p_N;iHZ@Zl$wACZRnD6}R)Ie5]]QLK!,N]sleEj%gyR9^,bK2xioP!g^/[k8#B%*{Spc1+YTY!pT1,Ri)cu#%x@hhZ1w)BK(m%0KBL;!JP9VeWMF]5@g/e2wOz)}j*6hW+bFqx-lo@jGzG[kBQubmk$#fJ9OmxYHeK6[yvjF_X!L{nFtE)ZkmO;vHT-eM!-DjXpFv)ulcQmC;xGtRyHT9pO;Z3SRHM-qs*Ld4dUc-JZxxmaMY!j)_(QsGpjutp*s3Vx@I2z?/RO0oEvC}XO*?k/LI^inXonRJ%)-{kkk87ALBJYMP-,VQHP^V(*PCYb2VMXhb/a4z-r1KAb;Ct{dsoQA}%J),0Y))iZT-pWoIO=V@?hiGpM48[8:@VX*IXN0m[dopp:,X0d[ADAsKOD^ctF]j2q1}=#nY0LcG8%^TG9?rIg6v7dufy.qK0j39zP*v2LPS/)%9j5GaTuFCw.Uh7QF77*)_TEj31Z(#;H(O2]ziJ9gY*h8p+I}bqN2?5BcF+@55pO7R$F;$Nj4xdI*]E)[J.wUTMwVn:luxRC3;coX3u+]O;ZAKR@)8h;g_x3]Lj}q#9X4$lYxe0q8pnEdU{_{GrfeS$WFRHH=*.ZLV8H0l_G1D=qAtQJ4X1WtmD3pwfmVFbsRlFbwfVVRat#1DawcUN#xz#(YyxjIZvA6RbJ%nL,=2447UB?58jQZ8V_ifW-!6Wt*X3eA(RUJtII_d]9jqA=xNBd7@jrav*uE,zIF?UNoiOY@5n#b2G(*(j_Etbn*J1Ihk:sHxRU0^8$v+mo=a{{,1c-BFn+eBWpagmH0h=b/5S(5wFTPaWhY;)v^.*jA1@Zc?[gyFdj9.#Z?Rj#sZ$aJvzbt_B[bn%*ug!u$xR;XP8F44SNP(wMN:uY[JOM8rjw;PCraZhK8B({n[DNcj1JCJ19?nso#g*o</monojunk160117.lua>
    <MRAA.lua Encoding="Ascii85">=LB^U,qkj*H/])IVCC}rj3Gu,l51Wrbe]j,cbT4)yx9FUIweDil,6:GG9*G2(+Oa9[etLF.s+hcvXkp_rqiB#u{NaFSS%L1i@T%^zv6eli{HJS2ZN+cFXKhHPV3^iu9NK437poaymYQkE^izW*CcQ2Kd7pBHB002yW?G86m=LC?aE6,Y#!GAD_hnh(B2QwUrk-,PF{t}:Fiux[fyvMuJ7Ib$],67625%L^^(aZ$@XW_?EY+kyPM_oFm*E_Y,fgM/@aU1U(ZNyMM;%1yX!c}!hy#isLOTi*Ms)#lySW-GY6rbuEKhL*@_VbR];h/!28CfI(oUXvfd)um,cj=7F6!2m=i10=U@-oNGHysdw1zqtCLk,?ID@DddK36x)o;ghbmdc5+D%/?bv1M!G9z8-)VzoQ3FT(P_phjH)Re{ap?A3SnN0pV0sda7{1*;S;MApoG5q7$!Kq/oCZ]/t!Mp(C3^dd7/rsjtPc2z9481I#cy8J.NB?YzGNC*RWzdh=6Qvg[:PC-t]$P^AUIPJtN2GGEHL]RvAIr_MN_q6g8U(YX9v-}NU^hku!NX*ewL*M6Mm-Q!s$S+iOx3SB*S^_bsmSQ5T:=6tXK=/h[VD4n;l.Vh])-cU35jX:V-[hDZIo]ou7(qs/wD%l?b^IpAwgOye@]C(I.!HzBd;,XTYFKZO-Hl0EBf6kj{b[OLz[,oUW638djAqH-,})aA}Hy1{V8D1.:;FHcpZ]MVOQo*KE.7NH#cB8WJfVTzrc-UIHKT$#ROSi5KBpz$t*Ytv-%4=.aMgjfZ1y0LuPsf!*Z}sR@=fTK?(8a3UK;H-.#SKfnwa;UduF-5r/4B=yMyJQeS96cJX9vl[#sI)pyFJqb+7:WU^M^{9LYO{L7o=Bpn3/;lr3c%GM$ODHvj2S0v2!h/L)/El!Ns(.J;VRnu_/Mb.{7pcltL]n)D^sa2BtoseLnC7e{FgoW,edc7m3A7wZR.:r%J;Rc$^sro38Zuw9c}+mv74Vk!;zp@w6k%Cj1CSCW07khth}#5xVM[BbVy;Xy[5I3Ik]L(RT=!v]Lo(vk1r_z#-6B7}l++;RZ1k/6g?oX;NtH-R=g16F3F?+fg.iXG7[Leoq;_xbd0IKaRTfwxkH4-)Z%BYwrAKXG1wY##3eNCua9mMbhoGs@wwWf2+HPL:;65U.u45[K7g=qh8kBBPM[tMcq0xA8B4}0qCQ7qbf-f4=KmxDizl/yLn1ElVUW^xL7I6y/Y^0iwsaF,[MC2JXgT}TeoG;lp5Hvl)G9Wy2YiADH_5RzHHc/hMtknzjX+lFt0.*bM[eSx^1ZX-eK0G{_v+vyW7MZ!8c-x2Psd^@c-lFT;(@r2qP1D%lRe0(l);N?h96psOg5+7#Qm^eOD*f)r%G2awqfZ)90fuw.v-zY_1%!%G[Q;OdO{WsF(S$E)mHd3MfF8)RJh$c5M5YT2ABsB}?d79=;j*T4YAph[esv1}QFxfIK?WUYXBr]GaYb^MThuf=L3(8Wi!$EC(@(yM;+u$Qv[_o51FnH}jJw_T8-]!/3?FXwm{@o8Rz?2zV:xn+cXL!SQ_Vrl99s;WrTfmX!]B]%6KXKh*MJ_h)2pI^]gYDjJx;Q$ywyKy;.-s0wJ{R:j3$FEk##z=u7zZaBy(FsY!nCf/ag:lfSb*fsXC(B7J[Y=m(NB]xyn4R1xDNWp_LuRYazrxf?^;+ilO=dL/5!jbI^gxtovjfkXuy)w40EI6PxFzfFtz7q5wiq?;f{1Uh-no$]e=-H;c8qw;yN,cmc]:TrufZfxTwxg(O(ij[cN5[xM)(wuBZ[V4HUc;[SpCUcI/^^Sqs5/1p1E%{rd2L7UD?7*Z1ly7eTlvW(s?+L4g^[R-.rFTy$e^/IF$q]vet@_(gzxwidyC7#e@yejHT9j9/u!{L77tfZX:hj,b-k$PAIlx1ED0R^eYj;-WyzT,RRN6CXq)MiK@ia/=JP(:T1--wO9NXHVNYdT$Jh!BHlZjuZ{*25IVdzY7D4_HkH/yI_PB!di(7_zCyy0T]63P7a]^8#_#5p)Lesu4e+S{625.xw_tk)B/z@XFTP=N.{(nMiW{U,Hets:T(mYnP^;hk49d[}P/iSc8iPI6,+[Y-Gw2=xvL-NDcx,Dv],e){QnZ=rC;L-GtU]^O5]S6NMs0xN8p^=197f!1d?=6HM8mI;K$G:L!EbZDt5K)L7;U!W7/cN4!#zq@*;Hx1nH7IEvE]tJ6BZ0Ns.B7fijd]ML!2xJ5guhMNHgcs2JVDW1Ln88co;n:UAKYdsJ,11Ve?0RqRMFGvQXj+/YdbVz!eq-5Ik)6jtePRwVeAdGecPCNJq]cwmW#-pFQ4+SPu+B8w#(QYDhy%AF,8v01W,]tKD%ecoqGnlp:h.(7SOJ.$tga6yw7P77pAUfM;[U1,f9tkW4rNPQQmD@NF8J]^.@yjOH!M{x,?K6ikW1.W(]d+I:Ls!wstK$/aCh1sbfD.IaOJgJ8Fkh]eu(_1!MJce:(w4EU:Bk^@=yjuDW(8$2E^@^6mwwGK=xshQx*/[X3oNAyTMFH@;rZz5De5mD[1CU1mz[fOET!IA!ayu/)p/_+3xIdj9@F]%S;bbDwH,4alf7:m)wD6n!TXEABF,P=m;xP7E+niiA+7]*/PA?u+}xNhM{7I%.Oe?_7E8s%fx6}RCxyslMdKC/5k{K}TY^@$+hK49aWYFmVyZaKSh]@[f$CKr#lpLeGigQfS=ese4V{zO0y1T-ffB](diuGw:fhb/*?UOeNjG_(4%-,aj(!3L-BJa)1nNM{b]Ahd@VJyco_GWhuH)4SHLo*WUpGN]vFKnJkXkmr]@GcX@AbsvJ}O%mp!An(@J=.OH:M$,@C_9L8PbZZbSJJBdR:/H=?ryeIr?UlfRa^masW4S0Kpm/Ln!ACfLoIXS1h:/Qj{BNq4fO;h)X?_lp(4y1uDU{:H0z@mCzcNdJ85ET*B2yJ*?(}bWir,v$ivdqvG}{641KvSD!WAts]hxcvvoG@-bBLWG.h#cI,O6.qms!Et8),6@3is*pgez(Wy$GP^h^]#iC5ANNlr#I^6Sx[q=F+-^.${a=@+eHJ7Xhm3q3U8bO=^h:pM(gxf5w#a17j(;bASjA!dpeYcpCA!Sft%fvrgpLiD6RTNxB7}1@*Xe^$9R=Vd=t3Xb.Qo#*sFueR[-m!!2l7tKf.E9tj:9.dr2z{FTF:5x.,x:kFvXZpSSk+kbi9ley82uejb@E5TBtG.eA9}aKJyZl;-moa3ax{AJHW,L6jkmHY17m?M(;,pQgb*rA[;f_IgF8C7CkYNExNzXZ?n}9}yGx$AxHW}5ugYs9Vl3C_dMQyl0z)Y@zVE7FW{4?PgA-JbL2,SlFF]NWxs$AlG,xCS2%4,eSK7*qe+hn;X[HM7t(sy3R(DyNvm%?=$(,Mb($9wvw,OHj3oa5F4o8XZI_dQJZ%Z,VI:jRz/,#j%koaOAlhgToR_u(XqOcG#=yJeeF/5%U^@u.21K{bG!!:Sf82^r[X2$sOWBD%Xkmxc!xH:MV^xBF]%-La^:CB}Uc:BWjKQ5#F^V![hE0Mm-VF2UuCalA*I2FdlqQQuJopS/pWi*$l(IJ0G:eV/}.AUYJYhX^/FQEd[U9-uzkN*Z7GJ5pez/lk%T,2DMsc{.r+Bw[?%2Y5KF,o8vhNl.oHKN[rf5k6Y[CHkiP=Q}%Wq27pfw%9:d_ku/@9Wv!fuuAJ?X-^3KOpve4NV1*ne0RGEj%8st2$o:Bf@_yVR.$,7d%SdkH)66S{;uhCug#8B{K1D+Domr27K}h$u$s{e?4(:2VZhXQEMXqE}l!FWfk*+_5YrbX%W$-kd7Fd9%$u^Nt^O2%dig7*iw9xRcH=@d}XH7u-ZVzIo#?yX}Mn!UfbTXC8k5f6+FvUV{cv:JJw89XC:!3@S:,LG7ux(Bdn;[@Zr%sw6fF*-x;aQU2DU!WxIc:-Tnfr^gpQRc8hJAXztSrI-Y@oPU8mL,.:@huhnq:v?9xix^NQ]EUDoMd(^75UMBS:/4F^8#1/sND$TD3(pNJOSKmH+k/?*2-u=CwPLYRW:DLhS.hff}:^W/ZC,LZ[gcb3jS?Q*uQ*^iq:?Njrp0uj.v5u$GDowwhSEkmP+_.eL7Si3;vwcAZ4v@%9lhpC5vNAt[Wx%$*YL-y(iXXaY1uFZ9,_$xPwW+2ov5bA6(^-:KF=oB:XXs0zY8GPR7pjqGh/pDV3@.w*w4fGE1x=IJ0jr}Fkm!p**lHzHy@wCPsPAbkl5,EFv8eC.Gg-9Tr=gn[MkZ-9TXM@A;m_EHVdtK/g260K?r._!g%JmHEL.Gfpl^oZR+W_Xtu/]jYOE@ad4iE1oF-0u;O15HJiv^L2S0=;+-:/LN5H=oIzg;Ai:Ed.=_yuB@y/yYtC!_5SA^SsdXr/!w0*Z9:W+HBSJV/Xa6?d,ZN+bahk=tpE+uVFC^Y6g/pJJ:fB-x?dRfo2nvqY2]5$}OGC?@1ow(-YbEixexzdGmtq;.QX],Y))G?PxhtKMP/DLPlZ_njB03nts!Oh-g;sG6?(X!qzo+Co(*QFb{W$3kb8o?x*^tL(/oS)rdLDO5]7:RKYP_ln2Z%/ruP_CU5$TMTi0+oIPF#D58/.[FPO_ftzu?LYd+J17d3121,^8V3!H:i3iF-+k6@{pwVdg=!VkYI8trDh*1v5rL}crGfjCu2BzeS:g?P7vOX4oF/eJH4pO^+rB2(E{q(x{vg5Ls(oXe0*{2u7CvEJww_I_J5*b5,3=/1M+zm9oIyJBFmxL+*xu8K.=0Y:r0TtC^NZbUUvWHvW=GkuPjQ/faX]BMXX0{-?JADb8uUp^x@v1#;cVn;@7P$0drfR$%O6do!I6OiVB?;oZ2V)U(8W*.-?{-tM#NkD=Le6m1[)[HML/eWJrKrG(IF93Tj#8Zh[@^iY)L=$e?oWe{DJt/MGM,+KfYxTGNr_By9C(tmNEjSKY2byb-7DM;jS-6XUifWCMnb@!bu}w+s.29G?,XaQBrm][*cndsu6fF(tJOapQ_n37AIeeCMd-QMD/t;rd}yOwQZ;c=Ug%f!qe10G4M8$1a^%,IPLKzDrXowB?/JX:wh*FmN(1sfuYQHw.y(Pk-tlcZPZ(UMBNe=z)by,i/{XsaW+f$zPFqoM(_vZerSQ6DDT%9$XkOh7sR.:.)ypz5,GIwVE}Lz1]{.Znawh:u;C6VlSbUV]wFSrG#wJ[j=SAcB;v:pCYa$BZ4)e:^d_/UfUG3I?BeR!lKU4.yJ_{0NqoU8M_7_Gq(h.upO.j#wsns!Pm!xI_C6LI4.xA5p;XIelQ{nVq8y!QrRKJFW/T{OKbBEjFVq@hSzJE9kETu*i+E![d1vh*3MXu-KK},y_DPinW:e8cWf^T!*I@17#6YUT.tzqfHby%[?K6Ga@7147p;DGP0-#*(q3mx-M]]Qo;({9d(ibI#(/e_;CP^0Skyq5OKTXVzTLQ%3//WkMamaRPN(:izf5kDUm!Qhf1:zVcSrw5!eg(UjZl:)o5+0$m(E8M=nAGgDJaSl(dUhaj2EqCTR^.3zUZA=Odd[m*mULf]-TiY7(ME5i@+upB[3VnF(]O}DRMCxtF7bRi#-ezh)k/PxB1q0m6vs(!fDDMXijNrlObdo]Zc@}VY[[BvY9HMS+r(,=wZfc(}f,-YIOB451-^TjbN]a7QC?[5zzvd!9(W@%ZBXgx,Ar{E2(=M6,bv{c$TCQOyiE6To.3LeJzv2bG]QRPKo5gV=AeoA12Ngv=fm$(9YksP!=MvF$m6GL4.?;8_FWfDbO$ZxHoEnAiDsI6F6.]axl.,;4Z;JK(gRSPbXJE-3O;UaXEX/](Uj]Z5fVYyd}9)bY=PzDc2nbGc}gA0=8x]iQ)bYyNM)-tmooTfC]Z#LIN{ig2{zRIH;C2^Jpy)+1W(JuVr$]YC$m695oeR,uxDO#AE6sQy/Bx@r$6$p97aVsTQbi+,q#-bMuzW9k?n?$?cTilBC.fH?@l0.J/$MQ0qC)k(Zr[+0U]HcW#z}JKbW=w#jxXiXjMhx}!lTF8g)8*H#B:3Suq.#gtz6;v!OewKt;oLr!szwR,k!45Kz9RWMFFB{Bh=rmc)dfK{/Tj?=XB@%6^gn8mV=zLxx4b[ZDNMu@RL+^?adAB^py+]_{*,*a;*VS.A.aP}nI?uQmkyr=UdWadF[^HSLIlC^H,f$M4,RQRQd:1)Y@Kb2X6REl/V8/4S_3iIGJ$v{%RI=#/3v7fm5CJON!smJ6epqGEquEHSymYYt,7lpOC=IEt_^*M:n2C7tS1891HY70uVI{PX/c2kSWX^$gt3VIU=/fas!2}S6CviG2Xx,jt.Tch[fPX9AUPi]r5uIl5reF+GP^*a{v9ETsm;fdG?eg(!54o,@+QYBB!xaww)]8.nI3(tNXt9W:ZpFbKt8Zw#Xqu,3XAt3TfkKXs8N+Web%/D=-)}EI0jr@oMLE,^pNbTky397oHyM)-+(t2{ItS7pm@/7fQ3.E,]t$_z4P_8)6n6[2^GJAs]D%CBAl6E=-$WOPcBqw;QSkH9_@mX81AW!lOnOo(QBvDLkFXPN?:U)CpMevd^0^({#gi+%t@xWzGOHAnf,vl9,xngzafMLg*66Q]!YNxI?7{y]#DnCfm^QM{**=s:mhUFlOUR?Nx9Vq4^^8g4uU5lDSd)d?9M-6t%k;NF_Fj7*@r,cknMMG@CG^*dI7C7y%H{,/,xOv-qOG2u4F%gPs%YWgAvTK%m=Kl;;,Fj:b/jp4:@I963uyu2t4=ePuN87Tsy0e4,Nd?F,xv$M3%yrVQSW*H$n/H}X-hxQcQAbAXynZ!3jK%dgeDhMfQ_VM/g$8hv1DZeP/w^)#LMQ6+z297EbZR(C?%xF)A.C[aPVurO@p-hdx/Bojqo,q_*PKXbQ+NRCgF+b^1O9ahJI7#H2i{{iKXVZr02d#-#Xll1MWU1{XCwB:*32Z5qjgFYdz$o_TDIZO++n04eIU!s)bA%Uo)zM0c$Vi=,)+G,;hRmbjzg%3Xbk#0TBw,*iWzx:6vX4;R{r{BxZH:MXy5NcAsK/,oFw{FM%aLLh=hql41{yF403gruYvWmnDc[+CDeeZHEuy7=09fwVPqUEJQ0K9d]S3ZK_2U7k9yFjz*-%?xcB8+2x2lwoD04I9j32y5C-JG;lybc$Q/+Fj4fb;+Nlg[us-HHHXfg$2Z)r71),Oj7NVYZ:4qY?MOdrTV5+%aWCM+?$GYfSI}l{YJyABo75:=8Mol-tJ9X:dGrAJP9L62_wvU{Q8l);aFKuUbB[a=?l:w+(#TNjav]A6y]k8%C2z,v$IjUXCkW5wy)4167iWj!z;3WrkoDe_^RO%Qp3}K+1iRv=l[LwiSXMyvW8W{wv=mZsfr]o]kN9dgCwSI[]):!{p6eOtigla+h?#Fi6xKL^Rc(IlPMoGyc[:TsOs[3Aa12uH+7rbHIQM]8EOM#WOkP?OXWjq48aa!Ki0[P}IDwoUc15)KB$[VWphWvcL%XJISAy,?dpFnYn?ty_[6HM=!FwAus0]XOFb)Cbh]gk}G?FME_.qkRu:;;)MkL${c4%{IVo+Ky,dzV*Ur;*3:Maw!b4rAK-XUAvx]RnW=td:jr5_#b_T^)f(8?S)Qhbi/bP@xdSviE=5mWWUk7b]#A[@/1D@%^lKf/y[9F7_[A[lA,!.OCfBgug*v3ySDs;I.T?7Ns.?]+f[IGzUISg%ZN(Yn$%Qq:pXlbui0I;qO6%BnBZx9q9_u2@fI7%rE.k8WJ,:YMVx#(ci;Jv55]Z*yMyuUD53(AW[]bf+Gj8vNq}mx#?.d1@/%7:e7jn(q11.W(t=4X#x[$5R41drg_S2zyS6;4x[hOddbg-9M4PeO:n=Q1yzNo8D4.rXZS!O])s$uhone2c(oi+KuPNj5WSQ5q6UeCFE5iaCNT=Wy5lE-Wz/ITK0iOEK%i]+1?Sg{Il}@2cc3J:%A(F;PXoXE==Ui-;!)8O]*xRj]]QSko9,AuAQQwE9zEmX,8$36+ic-ct,8)loFj+g:2n_RsDaIeAlL8Qf%n5Gl6}ageH[9HG;9R]IB@4O,6s83^;U1,R[RfA!7W4p]n/[SMEf*uPPJT2c/a1w%4$Waa8bdt,Y;4i,Iu]}:RR*3mV5}w%f@cQ9{v.kq[D@rq+pS[xJ]++,P-6LZaRt,1*!k=9)5/0ywhkRuuq?O*T5xm)_wMS=sGJkb8*F4(8ZLcM*qG%0csoyPaJfR,FSH/LpfK,;*GojZ5()w8Co{[Oi?6w3dB44S;Nk]=[Ei@*rM$nwoSs,@STdS3sA}[b#Fez,YHn;4)B1ph2n[K:W}@fX=PjnK$5b@E1w=Cdt-3Y.Mcx)xeW%sNbk![RGdBM,o7^BA/:JCX@+g!na5Ri1pmU+xKdM)$QkYR?nP2*4e7]6WSj-KHbi$?FE]S[M7xifXtZ(4@lodPWd)2rMHQ]ZvGB{GD6o$?BE7HU1[gJd7hShi/Y}put2O1oE)9D1XY)YL7aQug/v[KreXk+g?,u=HrQ#x?75cMB7+MilGFuxy/}_QrU[c5%HakVQJmdru#)hVE+zp=mowvPhb4d]XGgDWz9rsqq^EXAMM*#9C-RIuxU=A4BS6A-bWsgQ9Fhy=YvWE{H[%y=);,44CpmUVeD@{C}E=ZTnB5hC/.BpK9jHjN_F+g!mUG_!yeE0DeND[/E6#f^_Zc*=/c#H3)7AP)wKZw8bSb]Q2:gVW;gpH1W:57[or?rt98:vqznK)SfV//fEnW[+g@#2^7zx1s#..z,{uxr6k(6+b,;_X47^-8hE4L=rxlQW]566x-5)d4rftxVhA=(HXL.Osv7TaQ6K^O8H#FJG#ThJ*k+Dhz,f3QRlCuGO;[%q8j0BufODa-?vOOv-#T4aDEU+eDo[g7MV%-TSUKj_KNlg*bIfP:tXH:/QJ,ty55nO)%34vqO,)[L?Kq[Jx8[Ru[bDbgVV)evCSbA5H@}z*lgBOG]OED+Gtfb3Hrxoo?L0s!J:*SWsmy8[=@*QFUp;2TNbz75oN5.WsAIx-]1A:7*(Xm70gCG(i[I7x49(ZdlrSLC#Ms#X2H%,Oe0c:[jcg-0IA}zw5@rusEfSap2fs!2U?zb#07Sl:?!uE4G2Pi,:BBj?.4X6zZTy3NvkK%,XB}-ceT.34:[25{:-FB}wnIDq2prTzu1c?41./Pp3INW4}!+UuY=-YL]+-=%^9o_3YABzKUU}ypnnM1L(snkJCNRW!QP?]kZkT@8x)jR,;9NbJ}QF6Y}o(b;gyaOzF7n3#0]Xut*Fvi!uihiB_/,j9Gkv%hTh[*hti7?m#6P?WgRttYzL;DsBU1:1tnHgW/UCu]Y3CC}sP3?:D%q-^l8s_5l}kP%}=@!p:1(!)Yl%yn2Z_0B55xZgS$mTD/4]HAwm=rYAzRz2U^(kl?+R5q85pG2m7m[?Ju5rym?*Ez;x1:pUFSB#I#;hIKs@xe/{;%s7@ZZ}H@mdz0f+0gPe6kE;KY(pZ[kz8$MU2uL9cR:DW*xYt)nRfx*sw,rGLO2Bm]*v+O#RwO}p3yaW?lbql8o=37AVQ1qSBfQ6Gqgf2-5vC--A3F5b6ks;81pkr(+szb@PZrbbn^Jwy^h{eXS7,jgmp!ha9s0;(/lTP,Ps5ARP)KNZb?uTiE;60P]6ndJmID{nI%^z*uG!t59F57*0-C0]+Kz}Kj96f}0is8!cZ7B*e+KKLoqh7!ptSN8Amgc#-_IM@kkOy$zUi+i$b?}GKyi0gBwA:3CanEw])5yuRt/w{WmThb5A3^N,*m3:zWG2Aj^t:vnRZ_]t@Qbk^6f25ugv=D@..i%r*fS5Q]{;j[j_stt6V)Q@ThipYkhW}^++/Z?J2FjtUX6[6=A98T/%yZpAI=yrt@PIolhu%CBNzZ-+o=Py8k!b_1YWgQ8;lfXBZ:S+E?VX7CX8O=-b,L!JE0S1!$J0N?z3yfBqi</MRAA.lua>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Subterrain (click 1st: load Scripts)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
if syntaxcheck==true then return '' end
--

-- common function
local Apack,Unpack = table.pack or pack,table.unpack or unpack
if loadTableFile == nil then
  local loaded = {}
  function getLoadedChunks(p)
    p = type(p)=='string' and {p} or p
    local r,c = {},0
    for i=1,#p do
      local v = loaded[p[i]]
      if v~=nil then
        r[p[i]]=v
        c = c + 1
      end
    end
    return c, r
  end
  function loadChunks(t)
    for i,m in ipairs(t) do
      loadTableFile(t[i],true)
    end
  end
  function loadTableFile(n,mode)
    local hdr = 'loadTableFile: '
    assert(type(n)=='string',hdr.."input should be a string -"..tostring(n).." of "..type(n))
    local m = assert(findTableFile(n),hdr.."can't find table file -"..n).Stream
    m = assert(readStringLocal(m.Memory,m.Size),hdr.."can't read content -"..n)
    if type(mode)~='boolean' then return m end
    m = assert(loadstring(m,n),hdr.."lua script load fail -"..n)
    if type(m)=='function' then loaded[n]=m end
    return mode and m() or m or nil
  end
end

local target= {"monojunk160117.lua","MRAA.lua"}

local skip_Print = AA_CHECK~=true and ( true )
-- suppress informative or warning message, not error throw

if getLoadedChunks(target)==0 then
  local original_print = _G['print']

  if skip_Print then _G['print'] = function()end end
  loadChunks(target)
  _G['print'] = original_print
end

Bit64 = targetIs64Bit() and 1 or 2

{$asm}

[ENABLE]

useDomain()

[DISABLE]

monoDetach()

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>225</ID>
          <Description>"Start Setup &amp; Tools (click 2nd: Global Storage)"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//LuaRet(AddAssm('BBI.Game'))
globalalloc(__,$4000)
__:
dq __

__+08:
{$lua}
if getOpenedProcessID()==0 then
  return "db 0"
elseif targetIs64Bit() then
  autoAssemble("define(PSIZE,8)\nregistersymbol(PSIZE)")
  PSIZE = 8

  return "db 8\nMR(64,Color=0xff)\nMR(32,Color=0x00)"
else
  autoAssemble("define(PSIZE,4)\nregistersymbol(PSIZE)")
  PSIZE = 4
  return "db 4\nMR(32,Color=0xff)\nMR(64,Color=0x00)"
end
{$asm}

//__+2c:
//dd 1

//MR(32,Active = true)
//MR(64,Active = true)


[DISABLE]

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>250</ID>
      <Description>"32bit &gt;"</Description>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert(__+08,4)
[DISABLE]

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>371</ID>
          <Description>"check Capacity &lt;must on before LOAD GAME and keep ENABLE&gt;"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,checkCapacity)
define(hack,chkcap)
define(hac2,tvcount)

[ENABLE]

//eval(tvweight,$MONO'TabViewCtrl::UpdateWeight')
eval(tvinv,$MONO'TabViewCtrl:=inventory')

eval(itminfo,$MONO'ItemCtrl::get_itemInfo')
eval(contitem,$MONO'ItemContainer:=item')
eval(itmGen,$MONO'Item:=general') // float

eval(tv,$MONO'InvCtrl:=tabView')
eval(chkcap,$MONO'InvCtrl::CheckCapacity')

eval(cap,$MONO'InvCtrl:=capacity') // int
eval(tvcount,$MONO'TabViewCtrl::GetCount')

//eval(invcap2,$MONO'InvCtrl::UpdateCapacity(int)')

eval(upditm,$MONO'InvCtrl::UpdateItem')
//eval(chkitm,$MONO'InvCtrl::CheckCapacity')
//eval(initsz,$MONO'InvCtrl::InitSize')

globalalloc(checkCapacity,$400,hack)
//registersymbol(checkCapacity)

assert(hack,55)

cave:
dq cave,hack,hac2

cave+20:
readmem(hack,24)
cave+40:
readmem(hac2,24)


cave+70:
dd 0

label(done)
cave+80: // check cap
push   ebp
mov    ebp,esp
push   edi
push   esi
push   eax

mov    edi,[ebp+0c]


test   edi,edi
je     done


sub    esp,0c
push   edi
call   itminfo
add    esp,10

mov    edi,eax


test   edi,edi
je     done

mov    edi,[edi+contitem]
lea    edi,[edi+itmGen]


fld    dword ptr [edi]
fistp  dword ptr [cave+74]

mov    esi,[ebp+08]
mov    esi,[esi+tv]



test   esi,esi
je     done

sub    esp,0c
push   esi
call   tvcount
add    esp,10

mov    [cave+78],eax
add    eax,[cave+70]
cmp    eax,[cave+74]
jle    @f
mov    [cave+7c],eax
fild   dword ptr [cave+7c]
fstp   dword ptr [edi]
@@:

done:
pop    eax
pop    esi
pop    edi

pop    ebp

ReassembleEx(hack,_Len)
jmp   hack+_Len


label(skip)
cave+180://upditm
cmp    dword ptr [cave+70],#10
jge    @f
mov    dword ptr [cave+70],#10
@@:
cmp    dword ptr [cave+70],#100
jle    @f
mov    dword ptr [cave+70],#100
@@:

pop   dword ptr [cave+17c]
push  @f
ReassembleEx(hac2,_Le2)
jmp   hac2+_Le2
@@:
push   dword ptr [cave+17c]
push   esi
push   eax

mov    esi,[esp+0c]
mov    esi,[esi+tvinv]
test   esi,esi
je     skip

add    eax,[cave+70]
cmp    eax,[esi+cap]
jle    @f
mov    [esi+cap],eax
@@:

skip:
pop    eax
pop    esi
ret




hack:
jmp   cave+80
hac2:
jmp   cave+180

[DISABLE]


[cave+08]:
readmem(cave+20,24)
[cave+10]:
readmem(cave+40,24)
{

unregistersymbol(checkCapacity)
dealloc(checkCapacity)
}

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>402</ID>
              <Description>"+ extra capacity amount (10 is enough, autoupdate)"</Description>
              <LastState Value="10" RealAddress="02F24070"/>
              <VariableType>4 Bytes</VariableType>
              <Address>checkCapacity+70</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>388</ID>
          <Description>"Weight Divisor ( ^ same as above )"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,weight)
define(hack,tweight)

[ENABLE]

Eval(tweight,$MONO'ItemCtrl::GetWeight(0)')
//Eval(wtotal,$MONO'Inventory:=weightTotal')
//Eval(tweight,$MONO'Inventory::CalculateTotalWeight')
//Eval(wtotal,$MONO'Inventory:=weightTotal')

alloc(weight,$200,hack)
registersymbol(weight)

assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)



cave+80:
pop   dword ptr [cave+7c]
push  @f
ReassembleEx(hack,_Len)
jmp   hack+_Len
@@:
push  dword ptr [cave+7c]

push  eax

mov   eax,[cave+70]
cmp   eax,(float)0.1
jge   @f
mov   eax,(float)8
@@:
cmp   eax,(float)100
jle   @f
mov   eax,(float)100
@@:
mov   [cave+70],eax


fdiv  dword ptr [cave+70]

pop   eax
ret


hack:
jmp   cave+80

[DISABLE]


[cave+08]:
readmem(cave+20,24)


unregistersymbol(weight)
dealloc(weight)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>389</ID>
              <Description>"div"</Description>
              <LastState Value="8" RealAddress="19E30070"/>
              <VariableType>Float</VariableType>
              <Address>weight+70</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>403</ID>
          <Description>"inf usable itm"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,usei)
define(hack,iuse)

[ENABLE]

Eval(iuse,$MONO'Item_Usable::HandleDoubleClick')
Eval(ctrl,$MONO'ItemCtrl::get_itemInfo')
Eval(cnt,$MONO'ItemContainer:=count') // int

alloc(usei,$200,hack)
registersymbol(usei)

assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)


cave+70:
dd 0

cave+80:
pop   dword ptr [cave+7c]
push  eax
xor   eax,eax
mov   [cave+78],eax

mov   eax,[__+5c]
test  eax,eax
jne   @f

mov   eax,[esp+08] // itemControl

sub   esp,0c
push  eax
call  ctrl
add   esp,10

test  eax,eax
je    @f

lea   eax,[eax+cnt]
mov   [cave+78],eax

mov   eax,[eax]
mov   [cave+74],eax

@@:

pop   eax
push  @f
ReassembleEx(hack,_Len)
jmp   hack+_Len
@@:
push  dword ptr [cave+7c]

push  esi
push  eax

mov   esi,[cave+78]
test  esi,esi
je    @f
mov   eax,[cave+74]
cmp   eax,[esi]
jle   @f
mov   [esi],eax
@@:

pop   eax
pop   esi
ret


hack:
jmp   cave+80

[DISABLE]


[cave+08]:
readmem(cave+20,24)


unregistersymbol(usei)
dealloc(usei)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>404</ID>
              <Description>"inf itm/throwWeap ON/off"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:ON
1:off
</DropDownList>
              <LastState Value="1" RealAddress="02F2005C"/>
              <VariableType>4 Bytes</VariableType>
              <Address>__+5c</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>219</Key>
                  </Keys>
                  <Value>1</Value>
                  <Description>off</Description>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>221</Key>
                  </Keys>
                  <Value>0</Value>
                  <Description>ON</Description>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>367</ID>
          <Description>"inf throwing weapon"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,usew)
define(hack,iuse)

[ENABLE]

Eval(iuse,$MONO'Item_ThrowWeapon::HandleDoubleClick')
Eval(ctrl,$MONO'ItemCtrl::get_itemInfo')
Eval(cnt,$MONO'ItemContainer:=count') // int

alloc(usew,$200,hack)
registersymbol(usew)

assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)


cave+70:
dd 0

cave+80:
pop   dword ptr [cave+7c]
push  eax

xor   eax,eax
mov   [cave+78],eax

mov   eax,[__+5c]
test  eax,eax
jne   @f

mov   eax,[esp+08] // itemControl

sub   esp,0c
push  eax
call  ctrl
add   esp,10

test  eax,eax
je    @f

lea   eax,[eax+cnt]
mov   [cave+78],eax

mov   eax,[eax]
mov   [cave+74],eax
@@:
pop   eax
push  @f
ReassembleEx(hack,_Len)
jmp   hack+_Len
@@:
push  dword ptr [cave+7c]

push  esi
push  eax

mov   esi,[cave+78]
test  esi,esi
je    @f
mov   eax,[cave+74]
cmp   eax,[esi]
jle   @f
mov   [esi],eax
@@:

pop   eax
pop   esi
ret


hack:
jmp   cave+80

[DISABLE]


[cave+08]:
readmem(cave+20,24)


unregistersymbol(usew)
dealloc(usew)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>411</ID>
          <Description>"Craft restore Material"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,crfMat)
define(hack,cmat)

[ENABLE]

Eval(cmat,$MONO'CraftSystemCtrl::OnFinishJob')
Eval(rmat,$MONO'CraftSystemCtrl::RestoreMaterial')
//Eval(ctrl,$MONO'ItemCtrl::get_itemInfo')
//Eval(cnt,$MONO'ItemContainer:=count') // int

alloc(crfMat,$200,hack)
registersymbol(crfMat)

assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)


cave+70:
dd #10

label(skip)
cave+80:

push  ebp
mov   ebp,esp
push  edi
push  esi
push  eax

mov   eax,[cave+70]
cmp   eax,1
jge   @f
mov   eax,1
@@:
cmp   eax,#10
jle   @f
mov   eax,#10
@@:
mov   [cave+70],eax

mov   edi,[ebp+08]
test  edi,edi
je    skip
mov   esi,[ebp+0c]
test  esi,esi
je    skip

push  ebp

mov   ebp,[cave+70]
@@:
dec   ebp
test  ebp,ebp
jle   @f

sub   esp,8
push  esi
push  edi
call  rmat
add   esp,10

jmp   @b
@@:


pop   ebp
skip:
pop   eax
pop   esi
pop   edi
pop   ebp
ReassembleEx(hack,_Len)
jmp   hack+_Len


hack:
jmp   cave+80

[DISABLE]


[cave+08]:
readmem(cave+20,24)


unregistersymbol(crfMat)
dealloc(crfMat)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>414</ID>
              <Description>"restore cnt (10 is +8)"</Description>
              <LastState Value="10" RealAddress="19E60070"/>
              <VariableType>4 Bytes</VariableType>
              <Address>crfMat+70</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>412</ID>
          <Description>"Combine restore Material"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,cmbMat)
define(hack,cmat)

[ENABLE]

Eval(cmat,$MONO'CombineSystemCtrl::OnFinishJob')
Eval(rmat,$MONO'CombineSystemCtrl::RestoreMaterial')
//Eval(ctrl,$MONO'ItemCtrl::get_itemInfo')
//Eval(cnt,$MONO'ItemContainer:=count') // int

alloc(cmbMat,$200,hack)
registersymbol(cmbMat)

assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)


cave+70:
dd #10

label(skip)
cave+80:

push  ebp
mov   ebp,esp
push  edi
push  esi
push  eax

mov   eax,[cave+70]
cmp   eax,1
jge   @f
mov   eax,1
@@:
cmp   eax,#10
jle   @f
mov   eax,#10
@@:
mov   [cave+70],eax

mov   edi,[ebp+08]
test  edi,edi
je    skip
mov   esi,[ebp+0c]
test  esi,esi
je    skip

push  ebp

mov   ebp,[cave+70]
@@:
dec   ebp
test  ebp,ebp
jle   @f

sub   esp,8
push  esi
push  edi
call  rmat
add   esp,10

jmp   @b
@@:


pop   ebp
skip:
pop   eax
pop   esi
pop   edi
pop   ebp
ReassembleEx(hack,_Len)
jmp   hack+_Len


hack:
jmp   cave+80

[DISABLE]


[cave+08]:
readmem(cave+20,24)


unregistersymbol(cmbMat)
dealloc(cmbMat)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>413</ID>
              <Description>"restore cnt (10 is +8)"</Description>
              <LastState Value="10" RealAddress="19E70070"/>
              <VariableType>4 Bytes</VariableType>
              <Address>cmbMat+70</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>415</ID>
          <Description>"Dissemble restore Material"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,disMat)
define(hack,cmat)

[ENABLE]

Eval(cmat,$MONO'DisassembleSystemCtrl::OnFinishJob')
Eval(rmat,$MONO'DisassembleSystemCtrl::RestoreMaterial')
//Eval(ctrl,$MONO'ItemCtrl::get_itemInfo')
//Eval(cnt,$MONO'ItemContainer:=count') // int

alloc(disMat,$200,hack)
registersymbol(disMat)

assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)


cave+70:
dd #10

label(skip)
cave+80:

push  ebp
mov   ebp,esp
push  edi
push  esi
push  eax

mov   eax,[cave+70]
cmp   eax,1
jge   @f
mov   eax,1
@@:
cmp   eax,#10
jle   @f
mov   eax,#10
@@:
mov   [cave+70],eax

mov   edi,[ebp+08]
test  edi,edi
je    skip
mov   esi,[ebp+0c]
test  esi,esi
je    skip

push  ebp

mov   ebp,[cave+70]
@@:
dec   ebp
test  ebp,ebp
jle   @f

sub   esp,8
push  esi
push  edi
call  rmat
add   esp,10

jmp   @b
@@:


pop   ebp
skip:
pop   eax
pop   esi
pop   edi
pop   ebp
ReassembleEx(hack,_Len)
jmp   hack+_Len


hack:
jmp   cave+80

[DISABLE]


[cave+08]:
readmem(cave+20,24)


unregistersymbol(disMat)
dealloc(disMat)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>416</ID>
              <Description>"restore cnt (10 is +8)"</Description>
              <LastState Value="10" RealAddress="19E80070"/>
              <VariableType>4 Bytes</VariableType>
              <Address>disMat+70</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>319</ID>
          <Description>"quick item job"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,qjob)
define(hack,jobq)

[ENABLE]

Eval(jobq,$MONO'JobQueueCtrl::Queue')

alloc(qjob,$200,hack)
registersymbol(qjob)

assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)



cave+80:
push eax

mov  eax,[cave+70]
cmp  eax,(float)0.1
jge  @f
mov  eax,(float)100
@@:
cmp  eax,(float)400
jle  @f
mov  eax,(float)400
@@:
mov  [cave+70],eax

mov  eax,[cave+74]
cmp  eax,(float)0.1
jge  @f
mov  eax,(float)4
@@:
cmp  eax,(float)16
jle  @f
mov  eax,(float)16
@@:
mov  [cave+74],eax


mov  eax,[cave+78]
cmp  eax,0
jge  @f
mov  eax,0
@@:
cmp  eax,99
jle  @f
mov  eax,99
@@:
mov  [cave+78],eax

mov  eax,[esp+14] // count
add  eax,[cave+78]
mov  [esp+14],eax


fld  dword ptr [esp+18]//durability
fmul dword ptr [cave+74]
fstp dword ptr [esp+18]

fld  dword ptr [esp+1c]//value
fmul dword ptr [cave+74]
fstp dword ptr [esp+1c]

fld  dword ptr [esp+20]//job time
fdiv dword ptr [cave+70]
fstp dword ptr [esp+20]


pop  eax

ReassembleEx(hack,_Len)
jmp   hack+_Len

hack:
jmp   cave+80

[DISABLE]


[cave+08]:
readmem(cave+20,24)


unregistersymbol(qjob)
dealloc(qjob)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>320</ID>
              <Description>"time div"</Description>
              <LastState Value="100" RealAddress="19E90070"/>
              <VariableType>Float</VariableType>
              <Address>qjob+70</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>384</ID>
              <Description>"value mul"</Description>
              <LastState Value="4" RealAddress="19E90074"/>
              <VariableType>Float</VariableType>
              <Address>qjob+74</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>410</ID>
              <Description>"output add amount"</Description>
              <LastState Value="0" RealAddress="19E90078"/>
              <VariableType>4 Bytes</VariableType>
              <Address>qjob+78</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>398</ID>
          <Description>"Player Move Speed"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,mspd)
define(hack,mupd)
define(hac2,nupd)

[ENABLE]

//Eval(oxy,$MONO'Planetbase.Module::canPlaceComponent')
Eval(mupd,$MONO'Player_Manager::FixedUpdate')
Eval(nupd,$MONO'Player_Manager::Update')
Eval(dspd,$MONO'UnitMovement_Player:=defaultSpeed')

alloc(mspd,$200,hack)
registersymbol(mspd)

assert(hack,55)

cave:
dq cave,hack,hac2

cave+20:
readmem(hack,24)
cave+40:
readmem(hac2,24)

cave+70:
dd (float)1.5

//label(return)
//label(loopact)
cave+80:
pop   dword ptr [cave+7c]
mov   eax,[esp]// this ptr
push  edi
lea   edi,[eax+dspd]
mov   [cave+78],edi
mov   eax,[edi]
mov   [cave+74],eax

mov   eax,[cave+70]
cmp   eax,(float)0.1
jge   @f
mov   eax,(float)1.4
@@:
cmp   eax,(float)4
jle   @f
mov   eax,(float)4
@@:
mov   [cave+70],eax

fld   dword ptr [edi]
fmul  dword ptr [cave+70]
fstp  dword ptr [edi]

pop   edi

push  @f
ReassembleEx(hack,_Len)
jmp   hack+_Len
@@:
push  dword ptr [cave+7c]

push  edi
mov   edi,[cave+78]
mov   eax,[cave+74]
mov   [edi],eax
pop   edi

ret


{
mov   eax,[cave+70]
cmp   eax,1
jge   @f
mov   eax,1
@@:
cmp   eax,8
jle   @f
mov   eax,8
@@:
mov   [cave+70],eax


pop   dword ptr [cave+7c]

cmp   dword ptr [cave+70],8
jl    @f
call  loopact
@@:

cmp   dword ptr [cave+70],7
jl    @f
call  loopact
@@:
cmp   dword ptr [cave+70],6
jl    @f
call  loopact
@@:
cmp   dword ptr [cave+70],5
jl    @f
call  loopact
@@:
cmp   dword ptr [cave+70],4
jl    @f
call  loopact
@@:
cmp   dword ptr [cave+70],3
jl    @f
call  loopact
@@:
cmp   dword ptr [cave+70],2
jl    @f
call  loopact
@@:

push  return
loopact:
ReassembleEx(hack,_Len)
jmp   hack+_Len
return:
push  dword ptr [cave+7c]
ret
}
{
label(return2)
label(loopact2)
cave+140:
mov   eax,[cave+70]
cmp   eax,1
jge   @f
mov   eax,1
@@:
cmp   eax,8
jle   @f
mov   eax,8
@@:
mov   [cave+70],eax


pop   dword ptr [cave+78]

cmp   dword ptr [cave+70],8
jl    @f
call  loopact2
@@:

cmp   dword ptr [cave+70],7
jl    @f
call  loopact2
@@:
cmp   dword ptr [cave+70],6
jl    @f
call  loopact2
@@:
cmp   dword ptr [cave+70],5
jl    @f
call  loopact2
@@:
cmp   dword ptr [cave+70],4
jl    @f
call  loopact2
@@:
cmp   dword ptr [cave+70],3
jl    @f
call  loopact2
@@:
cmp   dword ptr [cave+70],2
jl    @f
call  loopact2
@@:

push  return2
loopact2:
ReassembleEx(hack,_Len)
jmp   hack+_Len
return2:
push  dword ptr [cave+78]
ret
}

{
pop   dword ptr [cave+7c]
push  @f
ReassembleEx(hack,_Len)
jmp   hack+_Len
@@:
push  dword ptr [cave+7c]

test  eax,eax
jge   @f
neg   eax
@@:
shl   eax,3

ret
}

hack:
jmp   cave+80
//hac2:
//jmp   cave+140

[DISABLE]


[cave+08]:
readmem(cave+20,24)
[cave+10]:
readmem(cave+40,24)


unregistersymbol(mspd)
dealloc(mspd)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>399</ID>
              <Description>"mul"</Description>
              <LastState Value="1.5" RealAddress="19EA0070"/>
              <VariableType>Float</VariableType>
              <Address>mspd+70</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>392</ID>
          <Description>"inverse wep durability/heat"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,mheat)
define(hack,heat)
define(hac2,dura)

[ENABLE]

Eval(heat,$MONO'Player_Weapon::Handle_Heat')
Eval(dura,$MONO'Player_Weapon::Handle_Durability')

alloc(mheat,$200,hack)
registersymbol(mheat)

assert(hack,55)

cave:
dq cave,hack,hac2

cave+20:
readmem(hack,24)
cave+40:
readmem(hack,24)


cave+70:
dd (float)-1

cave+80:
push  eax
mov   eax,[esp+0c]
test  eax,eax
jle   @f
fld   dword ptr [esp+0c]
fmul  dword ptr [cave+70]
fstp  dword ptr [esp+0c]
@@:
pop   eax
ReassembleEx(hack,_Len)
jmp   hack+_Len

cave+100:
push  eax
mov   eax,[esp+0c]
test  eax,eax
jle   @f
fld   dword ptr [esp+0c]
fmul  dword ptr [cave+70]
fstp  dword ptr [esp+0c]
@@:
pop   eax
ReassembleEx(hac2,_Le2)
jmp   hac2+_Le2


hack:
jmp   cave+80
hac2:
jmp   cave+100

[DISABLE]


[cave+08]:
readmem(cave+20,24)
[cave+10]:
readmem(cave+40,24)


unregistersymbol(mheat)
dealloc(mheat)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>417</ID>
          <Description>"wearable no external durability loss"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>Eval(wear,$MONO'UnitMovement_Player::ReduceWearableDurability')

[ENABLE]

assert(wear,55)
wear:
ret

[DISABLE]
assert(wear,c3)
wear:
push ebp

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>393</ID>
          <Description>"battery energy"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,batt)
define(hack,ener)
define(hac2,eset)

Eval(flsh,$MONO'Player_Flash::HandleBattery')


[ENABLE]

Eval(ener,$MONO'PlayerBatteryInventory::DecreaseEnergy')
Eval(eset,$MONO'PlayerBatteryInventory::set_currentEnergy')
Eval(eget,$MONO'PlayerBatteryInventory::get_currentEnergy')

alloc(batt,$200,hack)
registersymbol(batt)

assert(hack,55)

flsh:
db c3


cave:
dq cave,hack,hac2,flsh

cave+20:
readmem(hack,24)
cave+40:
readmem(hack,24)


cave+70:
dd (float)-1

cave+80:
push  eax
mov   eax,[esp+0c]
test  eax,eax
jle   @f
fld   dword ptr [esp+0c]
fmul  dword ptr [cave+70]
fstp  dword ptr [esp+0c]
@@:
pop   eax
ReassembleEx(hack,_Len)
jmp   hack+_Len

cave+68:
dd (float)-1
cave+100:
push  eax

mov   eax,[esp+08]

sub   esp,0c
push  eax
call  eget
add   esp,10

fstp  dword ptr [cave+68]

mov   eax,[cave+68]
cmp   eax,[esp+0c]
jle   @f

mov   [esp+0c],eax

@@:
pop   eax
ReassembleEx(hac2,_Le2)
jmp   hac2+_Le2


hack:
jmp   cave+80
hac2:
jmp   cave+100

[DISABLE]


[cave+08]:
readmem(cave+20,24)
[cave+10]:
readmem(cave+40,24)

flsh:
db 55

unregistersymbol(batt)
dealloc(batt)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>397</ID>
              <Description>"amount (display only)"</Description>
              <LastState Value="750" RealAddress="1A820068"/>
              <VariableType>Float</VariableType>
              <Address>batt+68</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>409</ID>
          <Description>"Canister-O2/Temp"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,CanisterO2)
define(hack,canO2)

[ENABLE]

eval(delta,$MONO'UnityEngine.Time::get_deltaTime')

eval(canO2,$MONO'GameStats::Handle_Oxygen')

eval(GM,$MONO'GameStats:=GM')
eval(pinfo,$MONO'GameManager:=playerInfo')

eval(invO2,$MONO'PlayerInfo:=playerOxygenInventory')

eval(invTm,$MONO'PlayerInfo:=playerTemperatureInventory')

eval(itmcont,$MONO'Inventory:=itemContainer')

eval(itmItm,$MONO'ItemContainer:=item')
eval(itmVal,$MONO'ItemContainer:=value')
eval(itmGen,$MONO'Item:=general')



//eval(cam,$MONO'FxCycle:=cam')

//eval(sfov,$MONO'UnityEngine.Camera::set_fieldOfView')
//eval(gfov,$MONO'UnityEngine.Camera::get_fieldOfView')

//Eval(iuse,$MONO'Item_ThrowWeapon::HandleDoubleClick')
//Eval(ctrl,$MONO'ItemCtrl::get_itemInfo')
//Eval(cnt,$MONO'ItemContainer:=count') // int

alloc(CanisterO2,$400,hack)
registersymbol(CanisterO2)

assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)



cave+80:
push  ebp
mov   ebp,esp
push  edi
push  esi
push  edx
push  eax

mov   edi,[ebp+08]

mov   edx,edi
mov   eax,invO2
call  cave+280

mov   edx,edi
mov   eax,invTm
call  cave+280

pop   eax
pop   edx
pop   esi
pop   edi
pop   ebp
ReassembleEx(hack,_Len)
jmp   hack+_Len

label(skip)
cave+280:
push  esi
push  edi
mov   edx,[edx+GM]
test  edx,edx
je    skip
mov   edx,[edx+pinfo]
test  edx,edx
je    skip
mov   eax,[edx+eax]
test  eax,eax
je    skip
mov   eax,[eax+itmcont]
test  eax,eax
je    skip
mov   [cave+60],eax
mov   eax,[eax+08]
test  eax,eax
je    skip
mov   [cave+64],eax
mov   eax,[eax+10]  //  itmcont[0]
test  eax,eax
je    skip
mov   [cave+68],eax

mov   esi,eax
test  esi,esi
je    skip

mov   edi,[esi+itmItm]
mov   [cave+6c],edi
test  edi,edi
je    skip

sub   esp,10
call  delta
add   esp,10

fadd  dword ptr [esi+itmVal]
fstp  dword ptr [esi+itmVal]

mov   edx,[edi+itmGen]
mov   [cave+78],edx
cmp   edx,[esi+itmVal]
jge   @f
mov   [esi+itmVal],edx
@@:


skip:
pop   edi
pop   esi
ret

hack:
jmp   cave+80

[DISABLE]


[cave+08]:
readmem(cave+20,24)


unregistersymbol(CanisterO2)
dealloc(CanisterO2)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>363</ID>
          <Description>"playerWeapon"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>//===============  user config start
define(mulpreset,4)  //   type float, just enter a number, shared by all other properties
define(shotpreset,8)//   type integer, just enter a whole number, use by shotsPerFire
define(anglemulpreset,8)  //   type float, just enter a number, use by (weapon) angle
//===============  user config ebd


define(cave,wmod)
define(hack,modw)


[ENABLE]

Eval(modw,$MONO'Player_Weapon::SetUpWeapon')

Eval(wname,$MONO'Pixellore.Weapon:=gunName')
Eval(wintv,$MONO'Pixellore.Weapon:=shotInterval')
Eval(wrnge,$MONO'Pixellore.Weapon:=range')
Eval(wcrit,$MONO'Pixellore.Weapon:=criticalChance')
Eval(warad,$MONO'Pixellore.Weapon:=area_radious')
Eval(wcost,$MONO'Pixellore.Weapon:=energyCost') // int
Eval(wsink,$MONO'Pixellore.Weapon:=heatSinkRate')
Eval(wshot,$MONO'Pixellore.Weapon:=shotsPerFire')
Eval(wangle,$MONO'Pixellore.Weapon:=angle')

Eval(psta,$MONO'Player_Weapon:=playerStatus')
Eval(pwep,$MONO'PlayerStatus:=currentWeapon')


mr(32/playerWeapon/Base,Address=[wmod+78],Type=vtString)
mr(32/playerWeapon/Base/Name,Address=[[wmod+78]+wname]+0c,Type=vtString)
mr(32/playerWeapon/Base/EnergyCost,Address=+wcost,Type=vtDword)
mr(32/playerWeapon/Base/ShotInterval,Address=+wintv,Type=vtSingle)
mr(32/playerWeapon/Base/Range,Address=+wrnge,Type=vtSingle)
mr(32/playerWeapon/Base/CritChance,Address=+wcrit,Type=vtSingle)
mr(32/playerWeapon/Base/AreaRadius,Address=+warad,Type=vtSingle)
mr(32/playerWeapon/Base/HeatSink,Address=+wsink,Type=vtSingle)
mr(32/playerWeapon/Base/ShotsPerFire,Address=+wshot,Type=vtSingle)
mr(32/playerWeapon/Base/Angle,Address=+wangle,Type=vtSingle)


alloc(wmod,$400,hack)
registersymbol(wmod)

assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)


cave+70:
dd (float)mulpreset

cave+68:
dd shotpreset
cave+6c:
dd (float)anglemulpreset

label(done)
cave+80:
pop   dword ptr [cave+7c]
push  @f
ReassembleEx(hack,_Len)
jmp   hack+_Len
@@:
push  dword ptr [cave+7c]

push  ebp
mov   ebp,esp
push  esi
push  eax

mov   esi,[ebp+08]
mov   esi,[esi+psta]
test  esi,esi
je    done
mov   esi,[esi+pwep]
test  esi,esi
je    done
mov   [cave+78],esi

//wcost,wname
//wintv,wrnge,wcrit,warad,wsink,wshot

mov   eax,[esi+wcost]
shr   eax,3
mov   [esi+wcost],eax

fld   dword ptr [esi+wintv]
fdiv  dword ptr [cave+70]
fstp  dword ptr [esi+wintv]

fld   dword ptr [esi+wrnge]
fmul  dword ptr [cave+70]
fstp  dword ptr [esi+wrnge]

fld   dword ptr [esi+wcrit]
fmul  dword ptr [cave+70]
fstp  dword ptr [esi+wcrit]

fld   dword ptr [esi+warad]
fmul  dword ptr [cave+70]
fstp  dword ptr [esi+warad]

fld   dword ptr [esi+wsink]
fmul  dword ptr [cave+70]
fstp  dword ptr [esi+wsink]

fld   dword ptr [esi+wangle]
fmul  dword ptr [cave+6c]
fstp  dword ptr [esi+wangle]

fild  dword ptr [cave+68]
fadd  dword ptr [esi+wshot]
fstp  dword ptr [esi+wshot]


done:
pop   eax
pop   esi
pop   ebp
ret


hack:
jmp   cave+80

[DISABLE]


[cave+08]:
readmem(cave+20,24)

cave+78:
dd 0


unregistersymbol(wmod)
dealloc(wmod)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>364</ID>
              <Description>"mul/div"</Description>
              <LastState Value="4" RealAddress="1A840070"/>
              <VariableType>Float</VariableType>
              <Address>wmod+70</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>418</ID>
              <Description>"shot num (+2*i)"</Description>
              <LastState Value="16" RealAddress="1A840068"/>
              <VariableType>4 Bytes</VariableType>
              <Address>wmod+68</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>419</ID>
              <Description>"angle/ spread mul"</Description>
              <LastState Value="16" RealAddress="1A84006C"/>
              <VariableType>Float</VariableType>
              <Address>wmod+6c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>375</ID>
              <Description>"BasePtr &gt;&gt;"</Description>
              <Options moHideChildren="1"/>
              <LastState RealAddress="201E6200"/>
              <Color>FF0000</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>[wmod+78]</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>376</ID>
                  <Description>"Name"</Description>
                  <LastState RealAddress="2BC8D2CC"/>
                  <VariableType>String</VariableType>
                  <Length>255</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>[[wmod+78]+020]+0c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>377</ID>
                  <Description>"EnergyCost"</Description>
                  <LastState Value="0" RealAddress="201E6260"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+060</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>378</ID>
                  <Description>"ShotInterval"</Description>
                  <LastState Value="0.07500000298" RealAddress="201E6244"/>
                  <VariableType>Float</VariableType>
                  <Address>+044</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>379</ID>
                  <Description>"Range"</Description>
                  <LastState Value="24" RealAddress="201E6248"/>
                  <VariableType>Float</VariableType>
                  <Address>+048</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>380</ID>
                  <Description>"CritChance"</Description>
                  <LastState Value="16" RealAddress="201E6258"/>
                  <VariableType>Float</VariableType>
                  <Address>+058</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>381</ID>
                  <Description>"AreaRadius"</Description>
                  <LastState Value="0" RealAddress="201E625C"/>
                  <VariableType>Float</VariableType>
                  <Address>+05C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>382</ID>
                  <Description>"HeatSink"</Description>
                  <LastState Value="16" RealAddress="201E6268"/>
                  <VariableType>Float</VariableType>
                  <Address>+068</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>383</ID>
                  <Description>"ShotsPerFire"</Description>
                  <LastState Value="17" RealAddress="201E623C"/>
                  <VariableType>Float</VariableType>
                  <Address>+03C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>420</ID>
                  <Description>"Angle"</Description>
                  <LastState Value="112" RealAddress="201E6250"/>
                  <VariableType>Float</VariableType>
                  <Address>+050</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>340</ID>
          <Description>"PlayerStatRegen/Degen"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,regn)
define(hack,iupd)

[ENABLE]

//Eval(oxy,$MONO'Planetbase.Module::canPlaceComponent')
Eval(iupd,$MONO'GameStats::Handle_Immune')

Eval(dtm,$MONO'UnityEngine.Time::get_deltaTime')


Eval(pHp,$MONO'GameStats:=hp')
Eval(pHpMax,$MONO'GameStats:=hp_max')
Eval(pImm,$MONO'GameStats:=immune')
Eval(pStm,$MONO'GameStats:=stamina')
Eval(pStmMax,$MONO'GameStats:=stamina_max')
Eval(pO2,$MONO'GameStats:=oxygen')
Eval(pTemp,$MONO'GameStats:=temperature')
Eval(pBody,$MONO'GameStats:=bodyCondition')



Eval(pHunger,$MONO'GameStats:=hunger')
Eval(pThirst,$MONO'GameStats:=thirst')
Eval(pBleed,$MONO'GameStats:=bleeding')
Eval(pBladder,$MONO'GameStats:=bladder')
Eval(pDump,$MONO'GameStats:=dump')
Eval(pContam,$MONO'GameStats:=contamination')
Eval(pSleep,$MONO'GameStats:=sleepiness')

Eval(pFracture,$MONO'GameStats:=fracture')
Eval(pInfect,$MONO'GameStats:=infection')


//base
MR(32/PlayerStatRegen/Base,Address=[regn+3c],Type=vtString)
//positive
MR(32/PlayerStatRegen/Base/hp,Address=+pHp,Type=vtSingle)
MR(32/PlayerStatRegen/Base/hpMax,Address=+pHpMax,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Stm,Address=+pStm,Type=vtSingle)
MR(32/PlayerStatRegen/Base/StmMax,Address=+pStmMax,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Immune,Address=+pImm,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Oxygen,Address=+pO2,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Temperature,Address=+pTemp,Type=vtSingle)
MR(32/PlayerStatRegen/Base/BodyCondition,Address=+pBody,Type=vtSingle)
//negative
MR(32/PlayerStatRegen/Base/Hunger,Address=+pHunger,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Thirst,Address=+pThirst,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Bleeding,Address=+pBleed,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Bladder,Address=+pBladder,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Dump,Address=+pDump,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Contamination,Address=+pContam,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Sleepness,Address=+pSleep,Type=vtSingle)

MR(32/PlayerStatRegen/Base/Infection,Address=+pInfect,Type=vtSingle)
MR(32/PlayerStatRegen/Base/Fracture,Address=+pFracture,Type=vtSingle)

alloc(regn,$300,hack)
registersymbol(regn)

assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)

cave+40:
dd pHp,pHpMax,pStm,pStmMax,0

cave+60:
dd pImm,pO2,pTemp,pBody,0

cave+90:
dd pHunger,pThirst,pBleed,pBladder,pDump,pSleep,pInfect,pContam,pFracture,0

cave+0e0:
dd (float)-1,(float)5,(float)100,(float)1


label(done1)
label(done2)
label(done3)
label(change)
cave+100:
ReassembleEx(hack,_Len)
push  eax
push  edi
push  esi
push  edx
push  ecx


sub   esp,10
call  dtm
add   esp,10

fstp  dword ptr [cave+0dc] // deltaTime

fld   dword ptr [cave+0e4] // +%
fdiv  dword ptr [cave+0e8] // 100 for %
fmul  dword ptr [cave+0dc] // scale with deltatime
fstp  dword ptr [cave+0f0] // change %

mov   esi,[ebp+08] // this ptr
mov   [cave+3c],esi

mov   edi,cave+40

@@:
mov   ecx,[edi]
test  ecx,ecx
jle   done1
mov   edx,[edi+4]
mov   eax,[esi+edx]
mov   [cave+0f4],eax // max
mov   eax,[esi+ecx]
mov   [cave+0f8],eax // cur value
call  change
mov   eax,[cave+0fc] // new value
mov   [esi+ecx],eax
add   edi,8
jmp   @b

done1:
mov   edi,cave+60
mov   eax,[cave+0ec]
mov   [cave+0f4],eax // max

@@:
mov   ecx,[edi]
test  ecx,ecx
jle   done2
mov   eax,[esi+ecx]
mov   [cave+0f8],eax // cur value
call  change
mov   eax,[cave+0fc] // new value
mov   [esi+ecx],eax
add   edi,4
jmp   @b

done2:

fld   dword ptr [cave+0e0] // -%
fdiv  dword ptr [cave+0e8]
fmul  dword ptr [cave+0dc]
fstp  dword ptr [cave+0f0] // change %

mov   edi,cave+90

@@:
mov   ecx,[edi]
test  ecx,ecx
jle   done3
mov   eax,[esi+ecx]
mov   [cave+0f8],eax // cur value
call  change
mov   eax,[cave+0fc] // new value
mov   [esi+ecx],eax
add   edi,4
jmp   @b

done3:

pop   ecx
pop   edx
pop   esi
pop   edi
pop   eax
jmp   hack+_Len
change:

// 0f0 - change %
// 0f4 - max value
// 0f8 - current value
// 0fc - new value

fld   dword ptr [cave+0f8]
fadd  dword ptr [cave+0f0]
fstp  dword ptr [cave+0fc]

mov   eax,[cave+0fc]
cmp   eax,[cave+0f4]
jle   @f
mov   eax,[cave+0f4]
@@:
test  eax,eax
jge   @f
xor   eax,eax
@@:
mov   [cave+0fc],eax
ret




hack:
jmp   cave+100

[DISABLE]


[cave+08]:
readmem(cave+20,24)


unregistersymbol(regn)
dealloc(regn)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>357</ID>
              <Description>"increase %/s"</Description>
              <LastState Value="5" RealAddress="1AD600E4"/>
              <VariableType>Float</VariableType>
              <Address>regn+0e4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>358</ID>
              <Description>"decrease %/s"</Description>
              <LastState Value="-1" RealAddress="1AD600E0"/>
              <VariableType>Float</VariableType>
              <Address>regn+0e0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>342</ID>
              <Description>"BasePtrGameStats &gt;&gt;"</Description>
              <Options moHideChildren="1"/>
              <LastState RealAddress="201E57E0"/>
              <Color>FF0000</Color>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>[regn+3c]</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>343</ID>
                  <Description>"hp"</Description>
                  <LastState Value="1" RealAddress="201E5814"/>
                  <VariableType>Float</VariableType>
                  <Address>+034</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>344</ID>
                  <Description>"hpMax"</Description>
                  <LastState Value="1" RealAddress="201E5818"/>
                  <VariableType>Float</VariableType>
                  <Address>+038</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>345</ID>
                  <Description>"Stm"</Description>
                  <LastState Value="3" RealAddress="201E58B4"/>
                  <VariableType>Float</VariableType>
                  <Address>+0D4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>346</ID>
                  <Description>"StmMax"</Description>
                  <LastState Value="3" RealAddress="201E58BC"/>
                  <VariableType>Float</VariableType>
                  <Address>+0DC</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>347</ID>
                  <Description>"Immune"</Description>
                  <LastState Value="1" RealAddress="201E583C"/>
                  <VariableType>Float</VariableType>
                  <Address>+05C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>348</ID>
                  <Description>"Oxygen"</Description>
                  <LastState Value="1" RealAddress="201E5860"/>
                  <VariableType>Float</VariableType>
                  <Address>+080</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>349</ID>
                  <Description>"Temperature"</Description>
                  <LastState Value="1" RealAddress="201E5868"/>
                  <VariableType>Float</VariableType>
                  <Address>+088</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>350</ID>
                  <Description>"Hunger"</Description>
                  <LastState Value="1.568157359E-6" RealAddress="201E582C"/>
                  <VariableType>Float</VariableType>
                  <Address>+04C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>351</ID>
                  <Description>"Thirst"</Description>
                  <LastState Value="2.352235924E-6" RealAddress="201E5820"/>
                  <VariableType>Float</VariableType>
                  <Address>+040</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>353</ID>
                  <Description>"Bladder"</Description>
                  <LastState Value="0" RealAddress="201E587C"/>
                  <VariableType>Float</VariableType>
                  <Address>+09C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>354</ID>
                  <Description>"Dump"</Description>
                  <LastState Value="0" RealAddress="201E5884"/>
                  <VariableType>Float</VariableType>
                  <Address>+0A4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>355</ID>
                  <Description>"Contamination"</Description>
                  <LastState Value="0" RealAddress="201E5838"/>
                  <VariableType>Float</VariableType>
                  <Address>+058</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>356</ID>
                  <Description>"Sleepness"</Description>
                  <LastState Value="2.940294735E-6" RealAddress="201E5858"/>
                  <VariableType>Float</VariableType>
                  <Address>+078</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>394</ID>
                  <Description>"Bleeding"</Description>
                  <LastState Value="0" RealAddress="201E5854"/>
                  <VariableType>Float</VariableType>
                  <Address>+074</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>395</ID>
                  <Description>"Infection"</Description>
                  <LastState Value="0" RealAddress="201E584C"/>
                  <VariableType>Float</VariableType>
                  <Address>+06C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>396</ID>
                  <Description>"Fracture"</Description>
                  <LastState Value="0" RealAddress="201E5874"/>
                  <VariableType>Float</VariableType>
                  <Address>+094</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>408</ID>
                  <Description>"BodyCondition"</Description>
                  <LastState Value="1" RealAddress="201E5840"/>
                  <VariableType>Float</VariableType>
                  <Address>+060</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>262</ID>
      <Description>"64bit &gt;(empty)"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert(__+08,8)
[DISABLE]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>__</Name>
      <Address>02F20000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>checkCapacity</Name>
      <Address>02F24000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PSIZE</Name>
      <Address>4</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
