<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"GMP (edit here 1st)"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>mgsvtpp.exe+2AC9C88</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"GMP (2nd)"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>05FD2F04</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"GMP (3rd)"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>30739F78</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"heroism value"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>30739F7C</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Value+77250= Heroism (edit here)"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>mgsvtpp.exe+2AC9C90</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Demon Stats Value"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>mgsvtpp.exe+2AC9C98</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>89</ID>
      <Description>"Waiting Room War Heroes (increasing staff stats with medals)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{
This code will give medals to all the waiting room staff.
Sometimes you have to cycle around a few tims to get it to work.
}
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(WaitStaffAOB,mgsvtpp.exe,44 8B 04 91 31 C9)
alloc(newmem,2048,"mgsvtpp.exe"+44985B6) 
label(returnhere)
label(originalcode)
label(exit)
registersymbol(WaitStaffAOB)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
movzx eax,byte ptr [rcx+rdx*4+3]
and eax,#56
cmp eax,0
jne originalcode
or byte ptr [rcx+rdx*4+1],#112


originalcode:
pop rax
mov r8d,[rcx+rdx*4]
xor ecx,ecx

exit:
jmp returnhere

WaitStaffAOB:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
WaitStaffAOB:
db 44 8B 04 91 31 C9
unregistersymbol(WaitStaffAOB)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
