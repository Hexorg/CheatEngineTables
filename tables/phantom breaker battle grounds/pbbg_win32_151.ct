<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Enable v1.041"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthReadAOB,66 8B 9C 13 9A 0F 00 00) //v1.04: player offset - 0xf9a
registersymbol(healthReadAOB)
aobscan(SCReadAOB,8B 80 CC 0A 00 00)
registersymbol(SCReadAOB)
aobscan(currentSkillPtsReadAOB,8B 84 88 B8 00 00 00)
registersymbol(currentSkillPtsReadAOB)
aobscan(SPReadAOB,0F BF 83 24 0A 00 00 ** ** ** 0F B7 83 28 0A 00 00) //v1.04: offset - 0xa24 &amp; 0xa28
registersymbol(SPReadAOB)
aobscan(healthWriteAOB,66 89 87 A2 00 00 00 ** ** ** 0F BF 42 02)
registersymbol(healthWriteAOB)

label(bFullSP)
registersymbol(bFullSP)
label(bUndead)
registersymbol(bUndead)
label(bEasyKill)
registersymbol(bEasyKill)
label(pPlayer)
registersymbol(pPlayer)
label(pPlayerStats)
registersymbol(pPlayerStats)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)
label(setspfull11)

label(newmem17)
label(returnhere17)
label(originalcode17)
label(exit17)
label(notplayer17)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test cl,cl
jnz originalcode
test edx,edx
jnz originalcode
push ecx
lea ecx,[ebx+edx+f9a]
lea ecx,[ecx-a2]
mov [pPlayer],ecx
pop ecx

originalcode:
mov bx,[ebx+edx+00000F9A]

exit:
jmp returnhere

///

newmem2:
mov [pPlayerStats],eax

originalcode2:
mov eax,[eax+00000ACC]

exit2:
jmp returnhere2

///

newmem6:
push ebx
lea ebx,[eax+ecx*4]
mov [pPlayerStats],ebx
pop ebx

originalcode6:
mov eax,[eax+ecx*4+000000B8]

exit6:
jmp returnhere6

///

newmem11:
//mov [pPlayer],ebx
cmp [pPlayer],ebx
jne originalcode11

cmp byte ptr [bFullSP],1
je setspfull11

pushad
push 20 //Spacebar
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setspfull11
jmp originalcode11

setspfull11:
movsx eax,word ptr [ebx+a28]
shl eax,1
mov [ebx+a24],eax
jmp exit11

originalcode11:
movsx eax,word ptr [ebx+00000A24]

exit11:
jmp returnhere11

///

newmem17:
cmp [pPlayer],edi
jne notplayer17

cmp byte ptr [bUndead],1
jne originalcode17
cmp ax,1
jge originalcode17
mov ax,1
jmp originalcode17

notplayer17:
cmp byte ptr [bEasyKill],1
jne originalcode17
cmp ax,1
jle originalcode17
mov ax,1
jmp originalcode17

originalcode17:
mov [edi+000000A2],ax

exit17:
jmp returnhere17

///
bFullSP:
db 0
bUndead:
db 0
bEasyKill:
db 0
pPlayer:
dd 0
pPlayerStats:
dd 0
///

healthReadAOB: //"pbbg_win32.exe"+14FEE7:
jmp newmem
nop
nop
nop
returnhere:

SCReadAOB: //"pbbg_win32.exe"+1071A:
jmp newmem2
nop
returnhere2:

currentSkillPtsReadAOB: //"pbbg_win32.exe"+3EA5B:
jmp newmem6
nop
nop
returnhere6:

SPReadAOB: //"pbbg_win32.exe"+F31DA:
jmp newmem11
nop
nop
returnhere11:

healthWriteAOB: //"pbbg_win32.exe"+E43CF:
jmp newmem17
nop
nop
returnhere17:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthReadAOB: //"pbbg_win32.exe"+14FEE7:
db 66 8B 9C 13 9A 0F 00 00
//Alt: mov bx,[ebx+edx+00000F9A]
unregistersymbol(healthReadAOB)
SCReadAOB: //"pbbg_win32.exe"+1071A:
db 8B 80 CC 0A 00 00
//Alt: mov eax,[eax+00000ACC]
unregistersymbol(SCReadAOB)
currentSkillPtsReadAOB: //"pbbg_win32.exe"+3EA5B:
db 8B 84 88 B8 00 00 00
//Alt: mov eax,[eax+ecx*4+000000B8]
unregistersymbol(currentSkillPtsReadAOB)
SPReadAOB: //"pbbg_win32.exe"+F31DA:
db 0F BF 83 24 0A 00 00
//Alt: movsx eax,word ptr [ebx+00000A24]
unregistersymbol(SPReadAOB)
healthWriteAOB: //"pbbg_win32.exe"+E43CF:
db 66 89 87 A2 00 00 00
//Alt: mov [edi+000000A2],ax
unregistersymbol(healthWriteAOB)

unregistersymbol(bFullSP)
unregistersymbol(bUndead)
unregistersymbol(bEasyKill)
unregistersymbol(pPlayer)
unregistersymbol(pPlayerStats)

/*
healthReadAOB:
pbbg_win32.exe+14FE90 - 55                    - push ebp
pbbg_win32.exe+14FE91 - 8B EC                 - mov ebp,esp
pbbg_win32.exe+14FE93 - 51                    - push ecx
pbbg_win32.exe+14FE94 - A1 C817A400           - mov eax,[pbbg_win32.exe+6417C8]
pbbg_win32.exe+14FE99 - 53                    - push ebx
pbbg_win32.exe+14FE9A - 56                    - push esi
pbbg_win32.exe+14FE9B - 32 C9                 - xor cl,cl
pbbg_win32.exe+14FE9D - 57                    - push edi
pbbg_win32.exe+14FE9E - 88 4D FF              - mov [ebp-01],cl
pbbg_win32.exe+14FEA1 - BF 98000000           - mov edi,00000098
pbbg_win32.exe+14FEA6 - 80 F9 03              - cmp cl,03
pbbg_win32.exe+14FEA9 - 77 06                 - ja pbbg_win32.exe+14FEB1
pbbg_win32.exe+14FEAB - 8B 74 07 54           - mov esi,[edi+eax+54]
pbbg_win32.exe+14FEAF - EB 06                 - jmp pbbg_win32.exe+14FEB7
pbbg_win32.exe+14FEB1 - 8B B0 EC000000        - mov esi,[eax+000000EC]
pbbg_win32.exe+14FEB7 - 0FBE 55 FF            - movsx edx,byte ptr [ebp-01]
pbbg_win32.exe+14FEBB - 8B 58 24              - mov ebx,[eax+24]
pbbg_win32.exe+14FEBE - 69 D2 440A0000        - imul edx,edx,00000A44
pbbg_win32.exe+14FEC4 - 66 8B 9C 13 9E0F0000  - mov bx,[ebx+edx+00000F9E]
pbbg_win32.exe+14FECC - 66 89 9E B00A0000     - mov [esi+00000AB0],bx
pbbg_win32.exe+14FED3 - 80 F9 03              - cmp cl,03
pbbg_win32.exe+14FED6 - 77 06                 - ja pbbg_win32.exe+14FEDE
pbbg_win32.exe+14FED8 - 8B 74 07 54           - mov esi,[edi+eax+54]
pbbg_win32.exe+14FEDC - EB 06                 - jmp pbbg_win32.exe+14FEE4
pbbg_win32.exe+14FEDE - 8B B0 EC000000        - mov esi,[eax+000000EC]
pbbg_win32.exe+14FEE4 - 8B 58 24              - mov ebx,[eax+24]
&gt;&gt;&gt;&gt;pbbg_win32.exe+14FEE7 - 66 8B 9C 13 9A0F0000  - mov bx,[ebx+edx+00000F9A]
pbbg_win32.exe+14FEEF - 66 89 9E B20A0000     - mov [esi+00000AB2],bx
pbbg_win32.exe+14FEF6 - 80 F9 03              - cmp cl,03
pbbg_win32.exe+14FEF9 - 77 06                 - ja pbbg_win32.exe+14FF01
pbbg_win32.exe+14FEFB - 8B 74 07 54           - mov esi,[edi+eax+54]
pbbg_win32.exe+14FEFF - EB 06                 - jmp pbbg_win32.exe+14FF07
pbbg_win32.exe+14FF01 - 8B B0 EC000000        - mov esi,[eax+000000EC]
pbbg_win32.exe+14FF07 - 8B 58 24              - mov ebx,[eax+24]
pbbg_win32.exe+14FF0A - 66 8B 9C 13 9C0F0000  - mov bx,[ebx+edx+00000F9C]
pbbg_win32.exe+14FF12 - 66 89 9E B40A0000     - mov [esi+00000AB4],bx
pbbg_win32.exe+14FF19 - 80 F9 03              - cmp cl,03
pbbg_win32.exe+14FF1C - 77 06                 - ja pbbg_win32.exe+14FF24
pbbg_win32.exe+14FF1E - 8B 74 07 54           - mov esi,[edi+eax+54]
pbbg_win32.exe+14FF22 - EB 06                 - jmp pbbg_win32.exe+14FF2A
pbbg_win32.exe+14FF24 - 8B B0 EC000000        - mov esi,[eax+000000EC]
pbbg_win32.exe+14FF2A - 66 83 BE B20A0000 00  - cmp word ptr [esi+00000AB2],00
pbbg_win32.exe+14FF32 - 7D 1A                 - jnl pbbg_win32.exe+14FF4E
pbbg_win32.exe+14FF34 - 80 F9 03              - cmp cl,03
pbbg_win32.exe+14FF37 - 77 06                 - ja pbbg_win32.exe+14FF3F
pbbg_win32.exe+14FF39 - 8B 74 07 54           - mov esi,[edi+eax+54]
pbbg_win32.exe+14FF3D - EB 06                 - jmp pbbg_win32.exe+14FF45
pbbg_win32.exe+14FF3F - 8B B0 EC000000        - mov esi,[eax+000000EC]
pbbg_win32.exe+14FF45 - 33 DB                 - xor ebx,ebx
pbbg_win32.exe+14FF47 - 66 89 9E B20A0000     - mov [esi+00000AB2],bx
*/
/*
SPReadAOB:
pbbg_win32.exe+F31D0 - 55                    - push ebp
pbbg_win32.exe+F31D1 - 8B EC                 - mov ebp,esp
pbbg_win32.exe+F31D3 - 53                    - push ebx
pbbg_win32.exe+F31D4 - 8B 5D 0C              - mov ebx,[ebp+0C]
pbbg_win32.exe+F31D7 - 56                    - push esi
pbbg_win32.exe+F31D8 - 8B F0                 - mov esi,eax
&gt;&gt;&gt;&gt;pbbg_win32.exe+F31DA - 0FBF 83 240A0000      - movsx eax,word ptr [ebx+00000A24]
pbbg_win32.exe+F31E1 - 89 45 0C              - mov [ebp+0C],eax
pbbg_win32.exe+F31E4 - 0FB7 83 280A0000      - movzx eax,word ptr [ebx+00000A28]
pbbg_win32.exe+F31EB - 0FBF C8               - movsx ecx,ax
pbbg_win32.exe+F31EE - 57                    - push edi
pbbg_win32.exe+F31EF - 8D 3C 09              - lea edi,[ecx+ecx]
pbbg_win32.exe+F31F2 - 39 7D 0C              - cmp [ebp+0C],edi
pbbg_win32.exe+F31F5 - 7E 0A                 - jle pbbg_win32.exe+F3201
pbbg_win32.exe+F31F7 - 8D 14 00              - lea edx,[eax+eax]
pbbg_win32.exe+F31FA - 66 89 93 240A0000     - mov [ebx+00000A24],dx
pbbg_win32.exe+F3201 - 0FBF 83 A8000000      - movsx eax,word ptr [ebx+000000A8]
*/
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Undead"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bUndead:
db 1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bUndead:
db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Damage Multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(damageToScreenAOB,0F 57 C0 F3 0F 2A C6 8B D0)
registersymbol(damageToScreenAOB)

label(fDamageToPlayerMultiplier)
registersymbol(fDamageToPlayerMultiplier)
label(fDamageToEnemyMultiplier)
registersymbol(fDamageToEnemyMultiplier)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isplayer)
label(notplayer)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[pPlayer]
cmp [ebp-4],edx
je isplayer
jne notplayer

isplayer:
push esi
fild dword ptr [esp]
fmul dword ptr [fDamageToPlayerMultiplier]
fistp word ptr [esp]
pop esi
jmp originalcode

notplayer:
push esi
fild dword ptr [esp]
fmul dword ptr [fDamageToEnemyMultiplier]
fistp word ptr [esp]
pop esi
jmp originalcode

originalcode:
xorps xmm0,xmm0
cvtsi2ss xmm0,esi

exit:
jmp returnhere

///
fDamageToPlayerMultiplier:
dd (float)1.0
fDamageToEnemyMultiplier:
dd (float)1.0
///

damageToScreenAOB: //"pbbg_win32.exe"+E41F2:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
damageToScreenAOB: //"pbbg_win32.exe"+E41F2:
db 0F 57 C0 F3 0F 2A C6
//Alt: xorps xmm0,xmm0
//Alt: cvtsi2ss xmm0,esi
unregistersymbol(damageToScreenAOB)

unregistersymbol(fDamageToPlayerMultiplier)
unregistersymbol(fDamageToEnemyMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>41</ID>
              <Description>"Damage to Player x?"</Description>
              <LastState Value="1" Activated="0" RealAddress="07280047"/>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>fDamageToPlayerMultiplier</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>46</ID>
              <Description>"Damage to Enemy x?"</Description>
              <LastState Value="1" Activated="0" RealAddress="0728004B"/>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>fDamageToEnemyMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Easy Kill"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bEasyKill:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bEasyKill:
db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Full SP"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFullSP:
db 1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFullSP:
db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Get SP Orb with Full SP"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(SPChkFullOnPickUpAOB,0F BF ** ** ** ** 00 00 03 FF 3B CF)
registersymbol(SPChkFullOnPickUpAOB)

SPChkFullOnPickUpAOB+a: //"pbbg_win32.exe"+10037B:
db 39 F8
//Alt: cmp eax,edi



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
SPChkFullOnPickUpAOB+a: //"pbbg_win32.exe"+10037B:
db 3B CF
//Alt: cmp ecx,edi
unregistersymbol(SPChkFullOnPickUpAOB)

/*
SPChkFullOnPickUpAOB:
pbbg_win32.exe+100EC7 - BE 02000000           - mov esi,00000002
pbbg_win32.exe+100ECC - 8B CB                 - mov ecx,ebx
pbbg_win32.exe+100ECE - E8 3D6BFEFF           - call pbbg_win32.exe+E7A10
pbbg_win32.exe+100ED3 - 8B F7                 - mov esi,edi
pbbg_win32.exe+100ED5 - E9 36030000           - jmp pbbg_win32.exe+101210
pbbg_win32.exe+100EDA - 8B C8                 - mov ecx,eax
pbbg_win32.exe+100EDC - 69 C9 440A0000        - imul ecx,ecx,00000A44
pbbg_win32.exe+100EE2 - 0FBF BC 19 20190000   - movsx edi,word ptr [ecx+ebx+00001920]
&gt;&gt;&gt;&gt;pbbg_win32.exe+100EEA - 0FBF 8C 19 1C190000   - movsx ecx,word ptr [ecx+ebx+0000191C]
pbbg_win32.exe+100EF2 - 03 FF                 - add edi,edi
pbbg_win32.exe+100EF4 - 3B CF                 - cmp ecx,edi
pbbg_win32.exe+100EF6 - 0F8D 99030000         - jnl pbbg_win32.exe+101295
pbbg_win32.exe+100EFC - 83 EA 5D              - sub edx,5D
pbbg_win32.exe+100EFF - 74 2A                 - je pbbg_win32.exe+100F2B
pbbg_win32.exe+100F01 - 4A                    - dec edx
pbbg_win32.exe+100F02 - 74 17                 - je pbbg_win32.exe+100F1B
pbbg_win32.exe+100F04 - 4A                    - dec edx
pbbg_win32.exe+100F05 - 0F85 05030000         - jne pbbg_win32.exe+101210
pbbg_win32.exe+100F0B - 53                    - push ebx
pbbg_win32.exe+100F0C - B9 C8000000           - mov ecx,000000C8
pbbg_win32.exe+100F11 - E8 DA68FEFF           - call pbbg_win32.exe+E77F0
pbbg_win32.exe+100F16 - E9 F5020000           - jmp pbbg_win32.exe+101210
pbbg_win32.exe+100F1B - 53                    - push ebx
pbbg_win32.exe+100F1C - B9 64000000           - mov ecx,00000064
pbbg_win32.exe+100F21 - E8 CA68FEFF           - call pbbg_win32.exe+E77F0
pbbg_win32.exe+100F26 - E9 E5020000           - jmp pbbg_win32.exe+101210
pbbg_win32.exe+100F2B - 53                    - push ebx

*/
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Hit Multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(hitIncAOB,66 01 BC 11 0C 11 00 00)
registersymbol(hitIncAOB)

label(wHitMultiplier)
registersymbol(wHitMultiplier)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov di,[wHitMultiplier]

originalcode:
add [ecx+edx+0000110C],di

exit:
jmp returnhere

///
wHitMultiplier:
dw 4
///

hitIncAOB: //"pbbg_win32.exe"+FD2C0:
jmp newmem
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hitIncAOB: //"pbbg_win32.exe"+FD2C0:
db 66 01 BC 11 0C 11 00 00
//Alt: add [ecx+edx+0000110C],di
unregistersymbol(hitIncAOB)

unregistersymbol(wHitMultiplier)

/*
hitIncAOB:
pbbg_win32.exe+FD278 - 0FBF 80 FC010000      - movsx eax,word ptr [eax+000001FC]
pbbg_win32.exe+FD27F - 8B C8                 - mov ecx,eax
pbbg_win32.exe+FD281 - 69 C9 22050000        - imul ecx,ecx,00000522
pbbg_win32.exe+FD287 - 03 4D 08              - add ecx,[ebp+08]
pbbg_win32.exe+FD28A - 66 83 BC 4A 10110000 00 - cmp word ptr [edx+ecx*2+00001110],00
pbbg_win32.exe+FD293 - 8D 8C 4A 10110000     - lea ecx,[edx+ecx*2+00001110]
pbbg_win32.exe+FD29A - 75 1C                 - jne pbbg_win32.exe+FD2B8
pbbg_win32.exe+FD29C - 8B F0                 - mov esi,eax
pbbg_win32.exe+FD29E - 69 F6 440A0000        - imul esi,esi,00000A44
pbbg_win32.exe+FD2A4 - 66 01 BC 16 0E110000  - add [esi+edx+0000110E],di
pbbg_win32.exe+FD2AC - 8D B4 16 0E110000     - lea esi,[esi+edx+0000110E]
pbbg_win32.exe+FD2B3 - 8B F7                 - mov esi,edi
pbbg_win32.exe+FD2B5 - 66 89 31              - mov [ecx],si
pbbg_win32.exe+FD2B8 - 8B C8                 - mov ecx,eax
pbbg_win32.exe+FD2BA - 69 C9 440A0000        - imul ecx,ecx,00000A44
&gt;&gt;&gt;&gt;pbbg_win32.exe+FD2C0 - 66 01 BC 11 0C110000  - add [ecx+edx+0000110C],di
pbbg_win32.exe+FD2C8 - 8D 34 11              - lea esi,[ecx+edx]
pbbg_win32.exe+FD2CB - 66 8B 8E 0C110000     - mov cx,[esi+0000110C]
pbbg_win32.exe+FD2D2 - 99                    - cdq
pbbg_win32.exe+FD2D3 - 2B C2                 - sub eax,edx
pbbg_win32.exe+FD2D5 - 8B 15 C817A400        - mov edx,[pbbg_win32.exe+6417C8]
pbbg_win32.exe+FD2DB - D1 F8                 - sar eax,1
pbbg_win32.exe+FD2DD - 0FBF D9               - movsx ebx,cx
pbbg_win32.exe+FD2E0 - 83 F8 04              - cmp eax,04
*/
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>38</ID>
              <Description>"x?"</Description>
              <LastState Value="4" Activated="0" RealAddress="07290014"/>
              <Color>C08000</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>wHitMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Health (x10)"</Description>
          <LastState Value="??" Activated="0" RealAddress="000000A2"/>
          <Color>0000FF</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>A2</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"SP"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000A24"/>
          <Color>0000FF</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>A24</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Hit"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="??" Activated="0" RealAddress="00000214"/>
          <Color>0000FF</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>214</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>36</ID>
              <Description>"Hit"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000378"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>378</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Skill Points"</Description>
          <LastState Value="??" Activated="0" RealAddress="000000B8"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerStats</Address>
          <Offsets>
            <Offset>B8</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Max Skill Points"</Description>
              <LastState Value="??" Activated="0" RealAddress="000000BC"/>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerStats</Address>
              <Offsets>
                <Offset>BC</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"SC (x10)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000ACC"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerStats</Address>
          <Offsets>
            <Offset>ACC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Red Orb (1)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000AD0"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerStats</Address>
          <Offsets>
            <Offset>AD0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Red Orb (5)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000AD4"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerStats</Address>
          <Offsets>
            <Offset>AD4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Red Orb (10)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000AD8"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerStats</Address>
          <Offsets>
            <Offset>AD8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>48</ID>
      <Description>"Enable v1.03"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthReadAOB,66 8B 9C 13 16 0C 00 00)
registersymbol(healthReadAOB)
aobscan(SCReadAOB,8B 80 CC 0A 00 00)
registersymbol(SCReadAOB)
aobscan(currentSkillPtsReadAOB,8B 84 88 B8 00 00 00)
registersymbol(currentSkillPtsReadAOB)
aobscan(SPReadAOB,0F BF 83 A4 06 00 00 ** ** ** 0F B7 83 A8 06 00 00)
registersymbol(SPReadAOB)
aobscan(healthWriteAOB,66 89 87 A2 00 00 00 ** ** ** 0F BF 42 02)
registersymbol(healthWriteAOB)

label(bFullSP)
registersymbol(bFullSP)
label(bUndead)
registersymbol(bUndead)
label(bEasyKill)
registersymbol(bEasyKill)
label(pPlayer)
registersymbol(pPlayer)
label(pPlayerStats)
registersymbol(pPlayerStats)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)
label(setspfull11)

label(newmem17)
label(returnhere17)
label(originalcode17)
label(exit17)
label(notplayer17)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test cl,cl
jnz originalcode
test edx,edx
jnz originalcode
push ecx
lea ecx,[ebx+edx+c16]
lea ecx,[ecx-a2]
mov [pPlayer],ecx
pop ecx

originalcode:
mov bx,[ebx+edx+00000C16]

exit:
jmp returnhere

///

newmem2:
mov [pPlayerStats],eax

originalcode2:
mov eax,[eax+00000ACC]

exit2:
jmp returnhere2

///

newmem6:
push ebx
lea ebx,[eax+ecx*4]
mov [pPlayerStats],ebx
pop ebx

originalcode6:
mov eax,[eax+ecx*4+000000B8]

exit6:
jmp returnhere6

///

newmem11:
//mov [pPlayer],ebx
cmp [pPlayer],ebx
jne originalcode11

cmp byte ptr [bFullSP],1
je setspfull11

pushad
push 20 //Spacebar
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setspfull11
jmp originalcode11

setspfull11:
movsx eax,word ptr [ebx+6a8]
shl eax,1
mov [ebx+6a4],eax
jmp exit11

originalcode11:
movsx eax,word ptr [ebx+000006A4]

exit11:
jmp returnhere11

///

newmem17:
cmp [pPlayer],edi
jne notplayer17

cmp byte ptr [bUndead],1
jne originalcode17
cmp ax,1
jge originalcode17
mov ax,1
jmp originalcode17

notplayer17:
cmp byte ptr [bEasyKill],1
jne originalcode17
cmp ax,1
jle originalcode17
mov ax,1
jmp originalcode17

originalcode17:
mov [edi+000000A2],ax

exit17:
jmp returnhere17

///
bFullSP:
db 0
bUndead:
db 0
bEasyKill:
db 0
pPlayer:
dd 0
pPlayerStats:
dd 0
///

healthReadAOB: //"pbbg_win32.exe"+14B0E7:
jmp newmem
nop
nop
nop
returnhere:

SCReadAOB: //"pbbg_win32.exe"+1071A:
jmp newmem2
nop
returnhere2:

currentSkillPtsReadAOB: //"pbbg_win32.exe"+3EA5B:
jmp newmem6
nop
nop
returnhere6:

SPReadAOB: //"pbbg_win32.exe"+F294A:
jmp newmem11
nop
nop
returnhere11:

healthWriteAOB: //"pbbg_win32.exe"+E43CF:
jmp newmem17
nop
nop
returnhere17:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthReadAOB: //"pbbg_win32.exe"+14B0E7:
db 66 8B 9C 13 16 0C 00 00
//Alt: mov bx,[ebx+edx+00000C16]
unregistersymbol(healthReadAOB)
SCReadAOB: //"pbbg_win32.exe"+1071A:
db 8B 80 CC 0A 00 00
//Alt: mov eax,[eax+00000ACC]
unregistersymbol(SCReadAOB)
currentSkillPtsReadAOB: //"pbbg_win32.exe"+3EA5B:
db 8B 84 88 B8 00 00 00
//Alt: mov eax,[eax+ecx*4+000000B8]
unregistersymbol(currentSkillPtsReadAOB)
SPReadAOB: //"pbbg_win32.exe"+F294A:
db 0F BF 83 A4 06 00 00
//Alt: movsx eax,word ptr [ebx+000006A4]
unregistersymbol(SPReadAOB)
healthWriteAOB: //"pbbg_win32.exe"+E43CF:
db 66 89 87 A2 00 00 00
//Alt: mov [edi+000000A2],ax
unregistersymbol(healthWriteAOB)

unregistersymbol(bFullSP)
unregistersymbol(bUndead)
unregistersymbol(bEasyKill)
unregistersymbol(pPlayer)
unregistersymbol(pPlayerStats)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Undead"</Description>
          <LastState Activated="0"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bUndead:
db 1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bUndead:
db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Damage Multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(damageToScreenAOB,0F 57 C0 F3 0F 2A C6 8B D0)
registersymbol(damageToScreenAOB)

label(fDamageToPlayerMultiplier)
registersymbol(fDamageToPlayerMultiplier)
label(fDamageToEnemyMultiplier)
registersymbol(fDamageToEnemyMultiplier)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isplayer)
label(notplayer)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[pPlayer]
cmp [ebp-4],edx
je isplayer
jne notplayer

isplayer:
push esi
fild dword ptr [esp]
fmul dword ptr [fDamageToPlayerMultiplier]
fistp word ptr [esp]
pop esi
jmp originalcode

notplayer:
push esi
fild dword ptr [esp]
fmul dword ptr [fDamageToEnemyMultiplier]
fistp word ptr [esp]
pop esi
jmp originalcode

originalcode:
xorps xmm0,xmm0
cvtsi2ss xmm0,esi

exit:
jmp returnhere

///
fDamageToPlayerMultiplier:
dd (float)1.0
fDamageToEnemyMultiplier:
dd (float)1.0
///

damageToScreenAOB: //"pbbg_win32.exe"+E41F2:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
damageToScreenAOB: //"pbbg_win32.exe"+E41F2:
db 0F 57 C0 F3 0F 2A C6
//Alt: xorps xmm0,xmm0
//Alt: cvtsi2ss xmm0,esi
unregistersymbol(damageToScreenAOB)

unregistersymbol(fDamageToPlayerMultiplier)
unregistersymbol(fDamageToEnemyMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>51</ID>
              <Description>"Damage to Player x?"</Description>
              <LastState Value="1" Activated="0" RealAddress="07280047"/>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>fDamageToPlayerMultiplier</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>52</ID>
              <Description>"Damage to Enemy x?"</Description>
              <LastState Value="1" Activated="0" RealAddress="0728004B"/>
              <Color>C08000</Color>
              <VariableType>Float</VariableType>
              <Address>fDamageToEnemyMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Easy Kill"</Description>
          <LastState Activated="0"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bEasyKill:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bEasyKill:
db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Full SP"</Description>
          <LastState Activated="0"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFullSP:
db 1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFullSP:
db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Get SP Orb with Full SP"</Description>
          <LastState Activated="0"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(SPChkFullOnPickUpAOB,0F BF 8C 31 18 12 00 00 03 FF 3B CF)
registersymbol(SPChkFullOnPickUpAOB)

SPChkFullOnPickUpAOB+a: //"pbbg_win32.exe"+10037B:
db 39 F8
//Alt: cmp eax,edi



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
SPChkFullOnPickUpAOB+a: //"pbbg_win32.exe"+10037B:
db 3B CF
//Alt: cmp ecx,edi
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"Hit Multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(hitIncAOB,66 FF 04 18 56 66)
registersymbol(hitIncAOB)

label(wHitMultiplier)
registersymbol(wHitMultiplier)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
movsx ecx,word ptr [wHitMultiplier]
add word ptr [eax+ebx],cx

originalcode:
pop ecx//
//inc word ptr [eax+ebx]
push esi

exit:
jmp returnhere

///
wHitMultiplier:
dw 4
///

hitIncAOB: //"pbbg_win32.exe"+FC9B2:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hitIncAOB: //"pbbg_win32.exe"+FC9B2:
db 66 FF 04 18 56
//Alt: inc word ptr [eax+ebx]
//Alt: push esi
unregistersymbol(hitIncAOB)

unregistersymbol(wHitMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>57</ID>
              <Description>"x?"</Description>
              <LastState Value="4" Activated="0" RealAddress="07290014"/>
              <Color>C08000</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>wHitMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"Health (x10)"</Description>
          <LastState Value="??" Activated="0" RealAddress="000000A2"/>
          <Color>0000FF</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>A2</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"SP"</Description>
          <LastState Value="??" Activated="0" RealAddress="000006A4"/>
          <Color>0000FF</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>6A4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"Hit"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="??" Activated="0" RealAddress="00000214"/>
          <Color>0000FF</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>214</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>61</ID>
              <Description>"Hit"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000378"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>378</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Skill Points"</Description>
          <LastState Value="??" Activated="0" RealAddress="000000B8"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerStats</Address>
          <Offsets>
            <Offset>B8</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>63</ID>
              <Description>"Max Skill Points"</Description>
              <LastState Value="??" Activated="0" RealAddress="000000BC"/>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerStats</Address>
              <Offsets>
                <Offset>BC</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"SC (x10)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000ACC"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerStats</Address>
          <Offsets>
            <Offset>ACC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"Red Orb (1)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000AD0"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerStats</Address>
          <Offsets>
            <Offset>AD0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"Red Orb (5)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000AD4"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerStats</Address>
          <Offsets>
            <Offset>AD4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"Red Orb (10)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000AD8"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerStats</Address>
          <Offsets>
            <Offset>AD8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>healthReadAOB</Name>
      <Address> 0054FEE7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SCReadAOB</Name>
      <Address> 0041079A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>currentSkillPtsReadAOB</Name>
      <Address> 0043E62B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SPReadAOB</Name>
      <Address> 004F31DA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthWriteAOB</Name>
      <Address> 004E4C2F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFullSP</Name>
      <Address>07270107</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bUndead</Name>
      <Address>07270108</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bEasyKill</Name>
      <Address>07270109</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>0727010A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayerStats</Name>
      <Address>0727010E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>damageToScreenAOB</Name>
      <Address> 004E4A52</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDamageToPlayerMultiplier</Name>
      <Address>07280047</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDamageToEnemyMultiplier</Name>
      <Address>0728004B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SPChkFullOnPickUpAOB</Name>
      <Address> 00500EEA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hitIncAOB</Name>
      <Address> 004FD2C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wHitMultiplier</Name>
      <Address>07290014</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5575423#5575423
</Comments>
</CheatTable>
