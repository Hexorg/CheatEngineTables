<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Stop Decreasing Sun"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : popcapgame1.exe
  Version: 
  Date   : 2015-08-06
  Author :
  Comment: This script generates random sun number when this script is being used and when you decrease the sun by planting something.

}

[ENABLE]

aobscanmodule(Stopdecreasingsun,popcapgame1.exe,8B B7 78 55 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //mov esi,[edi+00005578]
  jmp return

Stopdecreasingsun:
  jmp code
  nop
return:
registersymbol(Stopdecreasingsun)

[DISABLE]

Stopdecreasingsun:
  db 8B B7 78 55 00 00

unregistersymbol(Stopdecreasingsun)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "popcapgame1.exe"+1F621

"popcapgame1.exe"+1F615: 75 AF                          -  jne popcapgame1.exe+1F5C6
"popcapgame1.exe"+1F617: 8B C7                          -  mov eax,edi
"popcapgame1.exe"+1F619: 5F                             -  pop edi
"popcapgame1.exe"+1F61A: 5E                             -  pop esi
"popcapgame1.exe"+1F61B: 59                             -  pop ecx
"popcapgame1.exe"+1F61C: C3                             -  ret 
"popcapgame1.exe"+1F61D: CC                             -  int 3 
"popcapgame1.exe"+1F61E: CC                             -  int 3 
"popcapgame1.exe"+1F61F: CC                             -  int 3 
"popcapgame1.exe"+1F620: 56                             -  push esi
// ---------- INJECTING HERE ----------
"popcapgame1.exe"+1F621: 8B B7 78 55 00 00              -  mov esi,[edi+00005578]
// ---------- DONE INJECTING  ----------
"popcapgame1.exe"+1F627: 8B D7                          -  mov edx,edi
"popcapgame1.exe"+1F629: E8 12 FF FF FF                 -  call popcapgame1.exe+1F540
"popcapgame1.exe"+1F62E: 03 C6                          -  add eax,esi
"popcapgame1.exe"+1F630: 3B D8                          -  cmp ebx,eax
"popcapgame1.exe"+1F632: 7F 0C                          -  jg popcapgame1.exe+1F640
"popcapgame1.exe"+1F634: 2B F3                          -  sub esi,ebx
"popcapgame1.exe"+1F636: 89 B7 78 55 00 00              -  mov [edi+00005578],esi
"popcapgame1.exe"+1F63C: B0 01                          -  mov al,01
"popcapgame1.exe"+1F63E: 5E                             -  pop esi
"popcapgame1.exe"+1F63F: C3                             -  ret 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Stop Adding Sun"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : popcapgame1.exe
  Version: 
  Date   : 2015-08-06
  Author :
  Comment: This will do the same thing that I commented about *Stop Decreasing Sun* script.

}

[ENABLE]

aobscanmodule(Stopaddingsun,popcapgame1.exe,01 88 78 55 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //add [eax+00005578],ecx
  mov ecx, c8
  jmp return

Stopaddingsun:
  jmp code
  nop
return:
registersymbol(Stopaddingsun)

[DISABLE]

Stopaddingsun:
  db 01 88 78 55 00 00

unregistersymbol(Stopaddingsun)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "popcapgame1.exe"+1F4D0

"popcapgame1.exe"+1F4C4: C2 04 00                       -  ret 0004
"popcapgame1.exe"+1F4C7: CC                             -  int 3 
"popcapgame1.exe"+1F4C8: CC                             -  int 3 
"popcapgame1.exe"+1F4C9: CC                             -  int 3 
"popcapgame1.exe"+1F4CA: CC                             -  int 3 
"popcapgame1.exe"+1F4CB: CC                             -  int 3 
"popcapgame1.exe"+1F4CC: CC                             -  int 3 
"popcapgame1.exe"+1F4CD: CC                             -  int 3 
"popcapgame1.exe"+1F4CE: CC                             -  int 3 
"popcapgame1.exe"+1F4CF: CC                             -  int 3 
// ---------- INJECTING HERE ----------
"popcapgame1.exe"+1F4D0: 01 88 78 55 00 00              -  add [eax+00005578],ecx
// ---------- DONE INJECTING  ----------
"popcapgame1.exe"+1F4D6: 8B 88 78 55 00 00              -  mov ecx,[eax+00005578]
"popcapgame1.exe"+1F4DC: 83 EC 0C                       -  sub esp,0C
"popcapgame1.exe"+1F4DF: 81 F9 06 27 00 00              -  cmp ecx,00002706
"popcapgame1.exe"+1F4E5: 7E 0A                          -  jle popcapgame1.exe+1F4F1
"popcapgame1.exe"+1F4E7: C7 80 78 55 00 00 06 27 00 00  -  mov [eax+00005578],00002706
"popcapgame1.exe"+1F4F1: 81 B8 78 55 00 00 40 1F 00 00  -  cmp [eax+00005578],00001F40
"popcapgame1.exe"+1F4FB: 7C 32                          -  jnge popcapgame1.exe+1F52F
"popcapgame1.exe"+1F4FD: 8B 80 A4 00 00 00              -  mov eax,[eax+000000A4]
"popcapgame1.exe"+1F503: 8B 88 4C 09 00 00              -  mov ecx,[eax+0000094C]
"popcapgame1.exe"+1F509: C6 44 24 04 01                 -  mov byte ptr [esp+04],01
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Instant Refill"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : popcapgame1.exe
  Version: 
  Date   : 2016-05-29
  Author : xxdem

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(instantrefill,popcapgame1.exe,FF 47 24 8B 47 24) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
inc [edi+0]
  mov eax,[edi+0]
  jmp return
code:
  inc [edi+24]
  mov eax,[edi+24]
  jmp return

instantrefill:
  jmp newmem
  nop
return:
registersymbol(instantrefill)

[DISABLE]

instantrefill:
  db FF 47 24 8B 47 24

unregistersymbol(instantrefill)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "popcapgame1.exe"+958BC

"popcapgame1.exe"+95895: 83 7F 34 FF           -  cmp dword ptr [edi+34],-01
"popcapgame1.exe"+95899: 0F 84 05 01 00 00     -  je popcapgame1.exe+959A4
"popcapgame1.exe"+9589F: 8B 4F 04              -  mov ecx,[edi+04]
"popcapgame1.exe"+958A2: 83 B9 80 55 00 00 00  -  cmp dword ptr [ecx+00005580],00
"popcapgame1.exe"+958A9: 75 05                 -  jne popcapgame1.exe+958B0
"popcapgame1.exe"+958AB: E8 10 FF FF FF        -  call popcapgame1.exe+957C0
"popcapgame1.exe"+958B0: 80 7F 48 00           -  cmp byte ptr [edi+48],00
"popcapgame1.exe"+958B4: 75 25                 -  jne popcapgame1.exe+958DB
"popcapgame1.exe"+958B6: 80 7F 49 00           -  cmp byte ptr [edi+49],00
"popcapgame1.exe"+958BA: 74 1F                 -  je popcapgame1.exe+958DB
// ---------- INJECTING HERE ----------
"popcapgame1.exe"+958BC: FF 47 24              -  inc [edi+24]
"popcapgame1.exe"+958BF: 8B 47 24              -  mov eax,[edi+24]
// ---------- DONE INJECTING  ----------
"popcapgame1.exe"+958C2: 3B 47 28              -  cmp eax,[edi+28]
"popcapgame1.exe"+958C5: 7E 14                 -  jle popcapgame1.exe+958DB
"popcapgame1.exe"+958C7: C7 47 24 00 00 00 00  -  mov [edi+24],00000000
"popcapgame1.exe"+958CE: C6 47 49 00           -  mov byte ptr [edi+49],00
"popcapgame1.exe"+958D2: C6 47 48 01           -  mov byte ptr [edi+48],01
"popcapgame1.exe"+958D6: E8 E5 FE FF FF        -  call popcapgame1.exe+957C0
"popcapgame1.exe"+958DB: 8B 47 3C              -  mov eax,[edi+3C]
"popcapgame1.exe"+958DE: 85 C0                 -  test eax,eax
"popcapgame1.exe"+958E0: 0F 8E BE 00 00 00     -  jng popcapgame1.exe+959A4
"popcapgame1.exe"+958E6: 8D 48 FF              -  lea ecx,[eax-01]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Sunflower Instantly Provides Sun Repeatedly [Use if you have one Sunflower]"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : popcapgame1.exe
  Version: 
  Date   : 2016-05-29
  Author : xxdem

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(givesuninstantly,popcapgame1.exe,FF 4F 58 8B 77 58) // should be unique
alloc(newmem,$5000)

label(code)
label(return)

newmem:

code:
dec [edi+aa]
 mov esi,[edi+aa]
  jmp return

givesuninstantly:
  jmp code
  nop
  nop
  nop
return:
registersymbol(givesuninstantly)

[DISABLE]

givesuninstantly:
  db FF 4F 58 8B 77 58

unregistersymbol(givesuninstantly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "popcapgame1.exe"+65DF8

"popcapgame1.exe"+65DC9: 89 47 3C              -  mov [edi+3C],eax
"popcapgame1.exe"+65DCC: C7 47 54 70 17 00 00  -  mov [edi+54],00001770
"popcapgame1.exe"+65DD3: EB 0A                 -  jmp popcapgame1.exe+65DDF
"popcapgame1.exe"+65DD5: 83 7F 54 00           -  cmp dword ptr [edi+54],00
"popcapgame1.exe"+65DD9: 0F 84 38 01 00 00     -  je popcapgame1.exe+65F17
"popcapgame1.exe"+65DDF: 83 BA 18 09 00 00 1F  -  cmp dword ptr [edx+00000918],1F
"popcapgame1.exe"+65DE6: 75 10                 -  jne keepgivingsun
"popcapgame1.exe"+65DE8: 8B 89 78 01 00 00     -  mov ecx,[ecx+00000178]
"popcapgame1.exe"+65DEE: 83 79 54 0A           -  cmp dword ptr [ecx+54],0A
"popcapgame1.exe"+65DF2: 0F 85 1F 01 00 00     -  jne popcapgame1.exe+65F17
// ---------- INJECTING HERE ----------
"popcapgame1.exe"+65DF8: FF 4F 58              -  dec [edi+58]
"popcapgame1.exe"+65DFB: 8B 77 58              -  mov esi,[edi+58]
// ---------- DONE INJECTING  ----------
"popcapgame1.exe"+65DFE: 83 FE 64              -  cmp esi,64
"popcapgame1.exe"+65E01: 7F 27                 -  jg popcapgame1.exe+65E2A
"popcapgame1.exe"+65E03: 6A 01                 -  push 01
"popcapgame1.exe"+65E05: 33 C9                 -  xor ecx,ecx
"popcapgame1.exe"+65E07: 6A 64                 -  push 64
"popcapgame1.exe"+65E09: 6A 00                 -  push 00
"popcapgame1.exe"+65E0B: 8B C6                 -  mov eax,esi
"popcapgame1.exe"+65E0D: 8D 51 64              -  lea edx,[ecx+64]
"popcapgame1.exe"+65E10: E8 8B A1 0B 00        -  call popcapgame1.exe+11FFA0
"popcapgame1.exe"+65E15: 8B 8F B8 00 00 00     -  mov ecx,[edi+000000B8]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of add [edi+24],200</Description>
      <Address>00200000</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before/>
      <Actual>
        <Byte>81</Byte>
        <Byte>47</Byte>
        <Byte>24</Byte>
        <Byte>00</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>24</Byte>
        <Byte>E9</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>keepgivingsun</Name>
      <Address> 00465DF8</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
