<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"fast sun"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
imul ecx,ecx,0a
originalcode:
add [eax+00005560],ecx

exit:
jmp returnhere

"popcapgame1.exe"+30A11:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
"popcapgame1.exe"+30A11:
add [eax+00005560],ecx
//Alt: db 01 88 60 55 00 00

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"sun"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
0041BA74:
db 90 90

 
 
[DISABLE]
0041BA74:
sub esi,ebx

//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"charge"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
add [edi+24],(int)500
mov eax,[edi+24]

exit:
jmp returnhere

"popcapgame1.exe"+8728C:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+8728C:
add dword ptr [edi+24],01
mov eax,[edi+24]
//Alt: db 83 47 24 01 8B 47 24
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"money"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
imul edx,edx,3e8
originalcode:
add [eax+28],edx
mov ecx,[eax+28]

exit:
jmp returnhere

"popcapgame1.exe"+30A6C:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"popcapgame1.exe"+30A6C:
add [eax+28],edx
mov ecx,[eax+28]
//Alt: db 01 50 28 8B 48 28
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"chew"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
0046154E:
mov [edi+54],0000001

 
 
[DISABLE]
0046154E:
mov [edi+54],00000FA0

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Invincilbe"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
0052FCF0:
db 90 90 90 90
 
 
[DISABLE]
0052FCF0:
add dword ptr [esi+40],FC
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"OHK"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov edi,[esp+20]
originalcode:
sub edi,[esp+20]
mov [esp+1C],eax

exit:
jmp returnhere

"popcapgame1.exe"+13130F:
jmp newmem
nop
nop
nop
returnhere:
00531044:
sub ecx,ecx


 
 
[DISABLE]
dealloc(newmem)
"popcapgame1.exe"+13130F:
sub edi,[esp+20]
mov [esp+1C],eax
//Alt: db 2B 7C 24 20 89 44 24 1C
00531044:
sub ecx,eax

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"magnet"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
00461637:
mov [ebp+54],00000001


 
 
[DISABLE]
00461637:
mov [ebp+54],000005DC
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"corn"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
00464D4A:
mov [edi+54],00000001
[DISABLE]
00464D4A:
mov [edi+54],00000BB8
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of add dword ptr [esi+40],FC</Description>
      <Address>0052FCF0</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>12FCF0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>20</Byte>
        <Byte>CE</Byte>
        <Byte>ED</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>46</Byte>
        <Byte>40</Byte>
        <Byte>FC</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
        <Byte>40</Byte>
        <Byte>C7</Byte>
        <Byte>86</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub edi,[esp+20]</Description>
      <Address>0053130F</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>13130F</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>01</Byte>
        <Byte>C4</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>1C</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
