<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>88</ID>
      <Description>"[X] &lt;== Civ 5 Gods and Kings V1.0.1.705 Script v11"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Civilization V - Gods and Kings
 Game Version  : 1.0.1.705
 Proces Name   : CivilizationV.exe
 Script Version: 1.1
 CE Version    : 6.2
 Release date  : 15-Jul-2012
 Author        : Recifense
 History:
 28-Jun-12: First Release
 15-Jul-12: Adapted to version 1.0.1.705
 24-Jul-12: Killing a bug
 Features:
 - Minimum Gold
 - Minimum Faith
 - Unlimited Fights per turn
 - Unlimited Movement for selected unit
 - God Mode
   - Stronger Units
 - Quick Research
 - Quick Unit Production
 - Quick Building Construction
   - All
   - Only Wonders
 - Quick Golden Age progress
 - Long Golden Age (minimum 50 turns)
 - Quick Great People Production (selected city)
===========================================
}

//=========================================
// Definitions
define(LUDO,"CvGameCore_Expansion1.dll")

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(LUDO+000bd86b,8d 1c 0e 8b cb)          // _MPlyr
assert(LUDO+001cd170,8b 49 08 b8 1f 85 eb 51) // _MGold
assert(LUDO+001dae56,83 bb d0 00 00 00 00)    // _MSel
assert(LUDO+001d7f64,39 86 d0 00 00 00)       // _MMP
assert(LUDO+001f387a,8b ac 24 84 00 00 00)    // _GM
assert(LUDO+001c7b6e,8b 0c aa b8 1f 85 eb 51) // _MR
assert(LUDO+0003b43e,8b 0c 81 b8 1f 85 eb 51) // _MUP
assert(LUDO+00032a04,8b 51 18 8b 14 82)       // _MBC
assert(LUDO+0015f2a9,83 b8 18 04 00 00 00)    // _GM1
assert(LUDO+001f6bf0,8b 81 f4 01 00 00)       // _MGA
assert(LUDO+00121492,39 81 18 02 00 00)       // _MGAD
assert(LUDO+00055f97,8b 0c 88 b8 1f 85 eb 51) // _MGP

//=========================================
alloc(MyCode,2048,LUDO)
//=========================================
// Declaration section
label(_MonPlayer)
label(_BackMP)
label(_ExitMP)
label(_MonGold)
label(_MonG00)
label(_BackMG)
label(_ExitMG)
label(_MonSel)
label(_BackMS)
label(_ExitMS)
label(_MonMP)
label(_MonM0)
label(_MonM1)
label(_BackMMP)
label(_ExitMMP)
label(_GodMode)
label(_GodM00)
label(_BackGM)
label(_ExitGM)
label(_MonResearch)
label(_BackMR)
label(_ExitMR)
label(_MonUnitProduction)
label(_BackMUP)
label(_ExitMUP)
label(_MonBuildingConstruction)
label(_MonBC0)
label(_BackMBC)
label(_ExitMBC)
label(_GodMode1)
label(_GodM10)
label(_GodM11)
label(_BackGM1)
label(_ExitGM1)
label(_MonGA)
label(_BackMGA)
label(_ExitMGA)
label(_MonGADuration)
label(_MonGAD0)
label(_MonGAD1)
label(_BackMGAD)
label(_ExitMGAD)
label(_MonGP)
label(_BackMGP)
label(_ExitMGP)
label(pUnit)
label(pPlayer)
label(pSel)
label(pRes)
label(pCity)
label(iEnableMG)
label(iEnableMCF)
label(iEnableMDA)
label(iEnableMMP)
label(iEnableGM)
label(iEnableMR)
label(iEnableMUP)
label(iEnableMBC)
label(iEnableMF)
label(iEnableMGA)
label(iEnableMGAD)
label(iEnableMNP)
label(iEnableMEC)
label(iEnableOW)
label(iEnableMGP)
label(iPolicyPoints)
label(iEmpireCulture)
label(iMinFaith)
label(iLastGAL)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pUnit)
registersymbol(pPlayer)
registersymbol(pSel)
registersymbol(pRes)
registersymbol(pCity)
registersymbol(iEnableMG)
registersymbol(iEnableMCF)
registersymbol(iEnableMDA)
registersymbol(iEnableMMP)
registersymbol(iEnableGM)
registersymbol(iEnableMR)
registersymbol(iEnableMUP)
registersymbol(iEnableMBC)
registersymbol(iEnableMF)
registersymbol(iEnableMGA)
registersymbol(iEnableMGAD)
registersymbol(iEnableMNP)
registersymbol(iEnableMEC)
registersymbol(iEnableOW)
registersymbol(iEnableMGP)
registersymbol(iPolicyPoints)
registersymbol(iEmpireCulture)
registersymbol(iMinFaith)

//=========================================
MyCode:
//========================================= 705
_MonPlayer:
 mov [pPlayer],ecx              // Save pointer for further use

_ExitMP:
 lea ebx,[esi+ecx]              // Original code
 mov ecx,ebx                    // Original code
 jmp _BackMP                    // Back to main code

//========================================= 705
// Gold and Faith
_MonGold:
 push ebx

 mov eax,[ecx+04]
 cmp eax,[pPlayer]
 jne _ExitMG

 cmp dword ptr [iEnableMG],0
 je _MonG00                     // Jump if feature is disabled

 mov eax,#6200000               // 62000
 cmp eax,[ecx+08]
 jle _MonG00

 mov [ecx+08],eax

_MonG00:
 cmp dword ptr [iEnableMF],0
 je _ExitMG                     // Jump if feature is disabled

 mov ebx,[pPlayer]
 mov eax,[iMinFaith]
 cmp dword ptr [ebx+000000dc],eax
 jge _ExitMG

 mov dword ptr [ebx+000000dc],eax
 mov dword ptr [ebx+000000e0],eax

_ExitMG:
 pop ebx

 mov ecx,[ecx+08]               // Original code
 mov eax,51eb851f               // Original code
 jmp _BackMG                    // Back to main code

//========================================= 705
_MonSel:
 mov [pSel],ebx

_ExitMS:
 cmp dword ptr [ebx+000000D0],0 // Original code (rds MP)
 jmp _BackMS                    // Back to main code

//========================================= 705
_MonMP:
 push eax

 cmp dword ptr [esi+000005bc],2 // Player's unit? (*)
 jne _ExitMMP

 cmp dword ptr [iEnableMCF],0
 je _MonM0                      // Jump if feature is disabled

 mov dword ptr [esi+0000053c],#50 // Max # Fights per turn (*)
 mov dword ptr [esi+00000548],0   // Cur # Fights = 0 (*)

_MonM0:
 cmp dword ptr [iEnableMDA],0
 je _MonM1                      // Jump if feature is disabled

 mov eax,[esi+000000d0]         // Get MP (*)
 test eax,eax
 jz _MonM1                      // Jump if MP = 0

 test eax,1                     // Already cheated?
 jnz _MonM1                     // Jump if true

 shl eax,3                      // Multiply it by 8
 or eax,1                       // Flag it as already cheated
 mov [esi+000000d0],eax         // Update MP  (*)

_MonM1:
 cmp esi,[pSel]                 // Selected PlayerÂ´s unit?
 jne _ExitMMP

 cmp dword ptr [iEnableMMP],0
 je _ExitMMP                    // Jump if feature is disabled

 cmp dword ptr [esi+000000d0],#120 // (*)
 jge _ExitMMP

 mov dword ptr [esi+000000d0],#120 // MP = 2 (*)

_ExitMMP:
 pop eax

 cmp [esi+000000D0],eax          // Original code (*)
 jmp _BackMMP                    // Back to main code

//========================================= 705
_GodMode:
 cmp dword ptr [ecx+000005bc],2 // Player's unit? (*)
 jne _ExitGM

 cmp dword ptr [iEnableGM],0
 je _GodM00                     // Jump if feature is disabled

 mov [pUnit],ecx

 xor ebp,ebp                    // Negative HP = 0  (*)
 mov [esp+00000084],ebp         // Value2Decrease = 0 (*)
 mov [ecx+000000c4],ebp         // NegHP = 0 (*)

 cmp dword ptr [iEnableMDA],0
 je _GodM00                     // Jump if feature is disabled

 mov ebp,#541
 mov [ecx+000000d0],ebp         // Unit earns 10 MP (**)

_GodM00:
 cmp dword ptr [iEnableMCF],0
 je _ExitGM                     // Jump if feature is disabled

 mov dword ptr [ecx+0000053c],#50 // Max # Fights per turn (*)
 mov dword ptr [ecx+00000548],0   // Cur # Fights = 0 (*)

_ExitGM:
 mov ebp,[esp+00000084]         // Original code (*)
 jmp _BackGM                    // Back to main code

//========================================= 705
_MonResearch:
 cmp edi,[pPlayer]
 jne _ExitMR

 mov [pRes],edx                  // Save pointer for debugging

 cmp dword ptr [iEnableMR],0
 je _ExitMR                      // Jump if feature is disabled

 cmp dword ptr [edx+ebp*4],0     // Under research?
 je _ExitMR                      // Jump if false

 mov ecx,#50000                  // Update with minimum research value (500)
 cmp ecx,[edx+ebp*4]
 jle _ExitMR

 mov [edx+ebp*4],ecx             // Update with minimum research value (500)

_ExitMR:
 mov ecx,[edx+ebp*4]             // Original code
 mov eax,51eb851f                // Original code
 jmp _BackMR                     // Back to main code

//========================================= 705
// Open the City Info
_MonUnitProduction:
 mov [pCity],edi

 cmp dword ptr [iEnableMUP],0
 je _ExitMUP                     // Jump if feature is disabled

 cmp edi,10000000                // Just to avoid crashing
 jle _ExitMUP

 cmp dword ptr [edi+50],0        // Is it a player City?
 jne _ExitMUP                    // Jump if false

 mov [pCity],edi                 // Save pointer for debugging

 mov dword ptr [ecx+eax*4],#100000 // Update with maximum production value (1000)

_ExitMUP:
 mov ecx,[ecx+eax*4]            // Original code
 mov eax,51eb851f               // Original code
 jmp _BackMUP                   // Back to main code

//========================================= 705
// During Turn (Only Wonders)
_MonBuildingConstruction:
 mov edx,[ecx+18]               // Original code (*)

 cmp dword ptr [iEnableMBC],0
 je _ExitMBC                    // Jump if feature is disabled

 cmp dword ptr [iEnableOW],0
 je _MonBC0                     // Jump if feature is disabled

 cmp eax,#56
 jle _ExitMBC

_MonBC0:
 cmp dword ptr [edx+eax*4],00   // Construction on going? (*)
 je _ExitMBC                    // Jump if false

 cmp esi,10000000               // Just to avoid crashing
 jle _ExitMBC

 cmp dword ptr [esi+50],0       // Is it a player's City?
 jne _ExitMBC                   // Jump if false

 cmp dword ptr [edx+eax*4],#100000  // (*)
 jge _ExitMBC

 mov dword ptr [edx+eax*4],#100000 // Update with current prod value (1000) (*)

_ExitMBC:
 mov edx,[edx+eax*4]            // Original code (*)
 jmp _BackMBC                   // Back to main code

//========================================= NHP 705
// Get unit during battle
_GodMode1:
 cmp dword ptr [eax+000005bc],2 // Player's unit?
 jne _ExitGM1

 cmp dword ptr [iEnableGM],0
 je _ExitGM1                    // Jump if feature is disabled

 cmp dword ptr [eax+00000418],0 // Combat unit? (strength)
 je _ExitGM1                    // Jump if false

 cmp dword ptr [eax+00000418],#500
 jge _GodM10

 mov dword ptr [eax+00000418],#500  // Make strength = 500

_GodM10:
 cmp dword ptr [eax+0000033c],#80
 jge _ExitGM1

 mov dword ptr [eax+0000033c],#80   // Make Defense = 80%

_GodM11:
 cmp dword ptr [iEnableMCF],0
 je _ExitGM1                     // Jump if feature is disabled

 mov dword ptr [eax+0000053c],#50 // Max # Fights per turn (*)
 mov dword ptr [eax+00000548],0   // Cur # Fights = 0 (*)
 mov byte ptr [eax+00000783],1    // bCanMoveAfterAttack = ON

_ExitGM1:
 cmp dword ptr [eax+00000418],00 // Original code
 jmp _BackGM1                   // Back to main code

//========================================= 705
// Golden Age (Under cursor)
_MonGA:
 cmp dword ptr [iEnableMGA],0
 je _ExitMGA                     // Jump if feature is disabled

 cmp ecx,[pPlayer]
 jne _ExitMGA

 mov eax,[ecx+0000020c]          // Get Golden Age counter (*)

 push edx
 mov edx,#250
 mul edx
 mov edx,#500
 add eax,edx
 pop edx

 dec eax
 mov [ecx+000001F4],eax          // Make GAProgress = [(counter+1)*500] - 1

_ExitMGA:
 mov eax,[ecx+000001F4]          // Original code
 jmp _BackMGA                    // Back to main code

//========================================= 705
_MonGADuration:
 cmp ecx,[pPlayer]
 jne _ExitMGAD

 cmp dword ptr [iEnableMNP],0
 je _MonGAD0                    // Jump if feature is disabled

 mov eax,[iPolicyPoints]
 cmp eax,[ecx+000000a4]
 jle _MonGAD0

 mov [ecx+000000a4],eax         // Update policy points

_MonGAD0:
 cmp dword ptr [iEnableMEC],0
 je _MonGAD1                    // Jump if feature is disabled

 mov eax,[iEmpireCulture]
 cmp eax,[ecx+00000098]
 jle _MonGAD1

 mov [ecx+00000098],eax         // Update policy points

_MonGAD1:
 cmp dword ptr [iEnableMGAD],0
 je _ExitMGAD                   // Jump if feature is disabled

 mov eax,[ecx+0000020c]         // Get current GA counter (*)
 cmp eax,[iLastGAL]             // Was it changed?
 je _ExitMGAD                   // Jump if false

 mov [iLastGAL],eax             // Save GA counter
 inc eax

 imul eax,eax,#20

 cmp eax,[ecx+00000218]         // New value &lt;= current GA turn? (*)
 jle _ExitMGAD                  // Jump if true

 mov [ecx+00000218],eax         // Make GA Turns = GACounter * 20  (*)

_ExitMGAD:
 xor eax,eax                    // Original code
 cmp [ecx+00000218],eax         // Original code  (*)
 jmp _BackMGAD                  // Back to main code

//========================================= 705
// Great People (Selected City)
_MonGP:
 push ebx

 cmp dword ptr [iEnableMGP],0
 je _ExitMGP                    // Jump if feature is disabled

 cmp edi,10000000               // Just to avoid crashing
 jle _ExitMGP

 cmp dword ptr [edi+50],0       // Is it a player's City?
 jne _ExitMGP                   // Jump if false

 mov [pCity],edi

 mov ebx,[eax+ecx*4]
 test ebx,ebx
 jz _ExitMGP

 mov ebx,[pPlayer]
 mov ebx,[ebx+00000248]          // Get # Great People
 inc ebx                         // Adjust it
 imul ebx,ebx,#100               // #GP * 100
 dec ebx                         // (#GP * 100) - 1
 imul ebx,ebx,#100               // [(#GP * 100) - 1] * 100

 cmp ebx,[eax+ecx*4]
 jle _ExitMGP

 mov [eax+ecx*4],ebx

_ExitMGP:
 pop ebx

 mov ecx,[eax+ecx*4]             // Original code
 mov eax,51EB851F                // Original code
 jmp _BackMGP                    // Back to main code

//=========================================
 db '========================================&gt;'
 db 'CE6.2 Script by Recifense 071512'
//=========================================
// Variables
iEnableMG:
 dd 0
iEnableMCF:
 dd 0
iEnableMDA:
 dd 0
iEnableMMP:
 dd 0
iEnableGM:
 dd 0
iEnableMR:
 dd 0
iEnableMUP:
 dd 0
iEnableMBC:
 dd 0
iEnableOW:
 dd 0
iEnableMF:
 dd 0
iEnableMGA:
 dd 0
iEnableMGAD:
 dd 0
iEnableMEC:
 dd 0
iEnableMNP:
 dd 0
iEnableMGP:
 dd 0
pUnit:
 dd 0
pPlayer:
 dd MyCode
pSel:
 dd 0
pRes:
 dd 0
pCity:
 dd 0
iLastGAL:
 dd 0
iMinFaith:
 dd #620
iPolicyPoints:
 dd #500
iEmpireCulture:
 dd #500                               // Additional Empire Culture = 5%

//=========================================
// Hacking Points
LUDO+000bd86b:
 jmp _MonPlayer
_BackMP:

LUDO+001cd170:
 jmp _MonGold
 nop
 nop
 nop
_BackMG:

LUDO+001dae56:
 jmp _MonSel
 nop
 nop
_BackMS:

LUDO+001d7f64:
 jmp _MonMP
 nop
_BackMMP:

LUDO+001f387a:
 jmp _GodMode
 nop
 nop
_BackGM:

LUDO+001c7b6e:
 jmp _MonResearch
 nop
 nop
 nop
_BackMR:

LUDO+0003b43e:
 jmp _MonUnitProduction
 nop
 nop
 nop
_BackMUP:

LUDO+00032a04:
 jmp _MonBuildingConstruction
 nop
_BackMBC:

LUDO+0015f2a9:
 jmp _GodMode1
 nop
 nop
_BackGM1:

LUDO+001f6bf0:
 jmp _MonGA
 nop
_BackMGA:

LUDO+00121492:
 jmp _MonGADuration
 nop
_BackMGAD:

LUDO+00055f97:
 jmp _MonGP
 nop
 nop
 nop
_BackMGP:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
LUDO+000bd86b:
// lea ebx,[esi+ecx]
// mov ecx,ebx
 db 8d 1c 0e 8b cb

LUDO+001cd170:
// mov ecx,[ecx+08]
// mov eax,51EB851F
 db 8b 49 08 b8 1f 85 eb 51

LUDO+001dae56:
// cmp dword ptr [ebx+000000D0],00
 db 83 bb d0 00 00 00 00

LUDO+001d7f64:
// cmp [esi+000000D0],eax
 db 39 86 d0 00 00 00

LUDO+001f387a:
// mov ebp,[esp+00000084]
 db 8b ac 24 84 00 00 00

LUDO+001c7b6e:
// mov ecx,[edx+ebp*4]
// mov eax,51EB851F
 db 8b 0c aa b8 1f 85 eb 51

LUDO+0003b43e:
// mov ecx,[edx+ebp*4]
// mov eax,51EB851F
 db 8b 0c 81 b8 1f 85 eb 51

LUDO+00032a04:
// mov edx,[ecx+18]
// mov edx,[edx+eax*4]
 db 8b 51 18 8b 14 82

LUDO+0015f2a9:
// cmp dword ptr [eax+00000418],00
 db 83 b8 18 04 00 00 00

LUDO+001f6bf0:
// mov eax,[ecx+000001F4]
 db 8b 81 f4 01 00 00

LUDO+00121492:
// cmp [ecx+00000218],eax
 db 39 81 18 02 00 00

LUDO+00055f97:
// mov ecx,[eax+ecx*4]
// mov eax,51EB851F
 db 8b 0c 88 b8 1f 85 eb 51

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pUnit)
unregistersymbol(pPlayer)
unregistersymbol(pSel)
unregistersymbol(pRes)
unregistersymbol(pCity)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMCF)
unregistersymbol(iEnableMDA)
unregistersymbol(iEnableMMP)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMR)
unregistersymbol(iEnableMUP)
unregistersymbol(iEnableMBC)
unregistersymbol(iEnableMF)
unregistersymbol(iEnableMGA)
unregistersymbol(iEnableMGAD)
unregistersymbol(iEnableMNP)
unregistersymbol(iEnableMEC)
unregistersymbol(iEnableOW)
unregistersymbol(iEnableMGP)
unregistersymbol(iPolicyPoints)
unregistersymbol(iEmpireCulture)
unregistersymbol(iMinFaith)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Enable/Disable Minimum Gold"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMG</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"Enable/Disable Minimum Faith"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMF</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>89</ID>
              <Description>"Minimum Faith Value ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinFaith</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Enable/Disable Additional % Empire Culture"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMEC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Enable/Disable Quick Research"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Enable/Disable Quick Golden Age Entering"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMGA</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Enable/Disable Extended Golden Age Duration"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMGAD</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Enable/Disable Unlimited Move Points"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMMP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Enable/Disable God Mode"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Enable/Disable Can Fight Again"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMCF</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Enable/Disable Quick Unit Production"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMUP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>96</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>110</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Enable/Disable Quick Building Contruction"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMBC</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>97</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>98</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>85</ID>
              <Description>"Enable/Disable Only Wonders"</Description>
              <Color>808000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableOW</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Enable/Disable Quick Great People"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMGP</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>0F63047B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero1</Name>
      <Address>0F63047F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iLastGAL</Name>
      <Address>0F630493</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMBP</Name>
      <Address>0F6304B3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iSR</Name>
      <Address>0F6304D7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGM2</Name>
      <Address>0F6304D3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMG</Name>
      <Address>222E04A0</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Civilization V - Gods and Kings
 Game Version  : 1.0.1.705
 Proces Name   : CivilizationV.exe
 Script Version: 1.1
 CE Version    : 6.2
 Release date  : 15-Jul-2012
 Author        : Recifense
 History:
 28-Jun-12: First Release
 15-Jul-12: Adapted to version 1.0.1.705
 24-Jul-12: Killing a bug
 Features:
 - Minimum Gold
 - Minimum Faith
 - Unlimited Fights per turn
 - Unlimited Movement for selected unit
 - God Mode
   - Stronger Units
 - Quick Research
 - Quick Unit Production
 - Quick Building Construction
   - All
   - Only Wonders
 - Quick Golden Age progress
 - Long Golden Age (minimum 50 turns)
 - Quick Great People Production (selected city)
===========================================
[NOTE] Activate the script by clicking on the [] on its left side.
[NOTE] Enable the cheats by changing the 0's to 1's according to your will.
===========================================
HOTKEYS:
CTRL+Home = Enable  Unlimited Movement for selected unit;
CTRL+End  = Disable Unlimited Movement for selected unit;
===========================================
[NOTE] You can create hotkeys for enable/disable the other cheats.
===========================================
[IMPORTANT] Visit Cheat Engine Forum at www.cheatengine.org.
===========================================
Cheers!
 
</Comments>
</CheatTable>
