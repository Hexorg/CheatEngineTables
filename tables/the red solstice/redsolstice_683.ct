<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Unlimited Ammo"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(ammo,Game.exe,29 84 DE 28 03 00 00)
alloc(ammo_save,7)
ammo_save:
  readmem(ammo,7)
ammo:
  db 90 90 90 90 90 90 90
registersymbol(ammo)
registersymbol(ammo_save)

[DISABLE]
ammo:
  readmem(ammo_save,7)
unregistersymbol(ammo)
unregistersymbol(ammo_save)
dealloc(ammo_save)

{
// ORIGINAL CODE - INJECTION POINT: "Game.exe"+288569

"Game.exe"+288546: 84 C0                 -  test al,al
"Game.exe"+288548: 75 1C                 -  jne Game.exe+288566
"Game.exe"+28854A: 8D 86 FC 02 00 00     -  lea eax,[esi+000002FC]
"Game.exe"+288550: 68 E4 15 CE 00        -  push Game.exe+BC15E4
"Game.exe"+288555: 50                    -  push eax
"Game.exe"+288556: E8 85 10 DD FF        -  call Game.exe+595E0
"Game.exe"+28855B: 83 C4 08              -  add esp,08
"Game.exe"+28855E: 84 C0                 -  test al,al
"Game.exe"+288560: 0F 84 DB 00 00 00     -  je Game.exe+288641
"Game.exe"+288566: 8B 45 B8              -  mov eax,[ebp-48]
// ---------- INJECTING HERE ----------
"Game.exe"+288569: 29 84 DE 28 03 00 00  -  sub [esi+ebx*8+00000328],eax
// ---------- DONE INJECTING  ----------
"Game.exe"+288570: E9 CF 00 00 00        -  jmp Game.exe+288644
"Game.exe"+288575: 8D 86 FC 02 00 00     -  lea eax,[esi+000002FC]
"Game.exe"+28857B: 68 98 DF CA 00        -  push Game.exe+B8DF98
"Game.exe"+288580: 50                    -  push eax
"Game.exe"+288581: E8 5A 10 DD FF        -  call Game.exe+595E0
"Game.exe"+288586: 83 C4 08              -  add esp,08
"Game.exe"+288589: 84 C0                 -  test al,al
"Game.exe"+28858B: 75 5E                 -  jne Game.exe+2885EB
"Game.exe"+28858D: 8B 4D B4              -  mov ecx,[ebp-4C]
"Game.exe"+288590: 8D 45 D8              -  lea eax,[ebp-28]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>50</ID>
      <Description>"Unlimited Inventory"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(inventory,Game.exe,FF 89 * * * * 79 * C7 81)
alloc(inventory_save,6)
inventory_save:
  readmem(inventory,6)
inventory:
  db 90 90 90 90 90 90
registersymbol(inventory)
registersymbol(inventory_save)

[DISABLE]
inventory:
  readmem(inventory_save,6)
unregistersymbol(inventory)
unregistersymbol(inventory_save)
dealloc(inventory_save)

{
// ORIGINAL CODE - INJECTION POINT: "Game.exe"+2AF380

"Game.exe"+2AF369: C6 81 A0 02 00 00 01           -  mov byte ptr [ecx+000002A0],01
"Game.exe"+2AF370: A1 5C 5A 2A 02                 -  mov eax,[Game.exe+10D5A5C]
"Game.exe"+2AF375: 66 FF 40 0C                    -  inc word ptr [eax+0C]
"Game.exe"+2AF379: C3                             -  ret 
"Game.exe"+2AF37A: CC                             -  int 3 
"Game.exe"+2AF37B: CC                             -  int 3 
"Game.exe"+2AF37C: CC                             -  int 3 
"Game.exe"+2AF37D: CC                             -  int 3 
"Game.exe"+2AF37E: CC                             -  int 3 
"Game.exe"+2AF37F: CC                             -  int 3 
// ---------- INJECTING HERE ----------
"Game.exe"+2AF380: FF 89 A8 02 00 00              -  dec [ecx+000002A8]
// ---------- DONE INJECTING  ----------
"Game.exe"+2AF386: 79 0A                          -  jns Game.exe+2AF392
"Game.exe"+2AF388: C7 81 A8 02 00 00 00 00 00 00  -  mov [ecx+000002A8],00000000
"Game.exe"+2AF392: C3                             -  ret 
"Game.exe"+2AF393: CC                             -  int 3 
"Game.exe"+2AF394: CC                             -  int 3 
"Game.exe"+2AF395: CC                             -  int 3 
"Game.exe"+2AF396: CC                             -  int 3 
"Game.exe"+2AF397: CC                             -  int 3 
"Game.exe"+2AF398: CC                             -  int 3 
"Game.exe"+2AF399: CC                             -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Unlimited Flares"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(flares,Game.exe,0F 8E * * * * 48 8D 5F)
alloc(flares_save,6)
flares_save:
  readmem(flares,6)
flares:
  db 90 90 90 90 90 90 90
registersymbol(flares)
registersymbol(flares_save)

[DISABLE]
inventory:
  readmem(flares_save,6)
  db 48
unregistersymbol(flares)
unregistersymbol(flares_save)
dealloc(flares_save)

{
// ORIGINAL CODE - INJECTION POINT: "Game.exe"+52510D

"Game.exe"+5250EA: A1 2C D3 03 01           -  mov eax,[Game.exe+F1D32C]
"Game.exe"+5250EF: 33 C4                    -  xor eax,esp
"Game.exe"+5250F1: 50                       -  push eax
"Game.exe"+5250F2: 8D 44 24 48              -  lea eax,[esp+48]
"Game.exe"+5250F6: 64 A3 00 00 00 00        -  mov fs:[00000000],eax
"Game.exe"+5250FC: 8B F1                    -  mov esi,ecx
"Game.exe"+5250FE: 89 74 24 14              -  mov [esp+14],esi
"Game.exe"+525102: 8B 7D 08                 -  mov edi,[ebp+08]
"Game.exe"+525105: 8B 87 80 02 00 00        -  mov eax,[edi+00000280]
"Game.exe"+52510B: 85 C0                    -  test eax,eax
// ---------- INJECTING HERE ----------
"Game.exe"+52510D: 0F 8E DF 04 00 00        -  jng Game.exe+5255F2
// ---------- DONE INJECTING  ----------
"Game.exe"+525113: 48                       -  dec eax
"Game.exe"+525114: 8D 5F 5C                 -  lea ebx,[edi+5C]
"Game.exe"+525117: 89 87 80 02 00 00        -  mov [edi+00000280],eax
"Game.exe"+52511D: 8B 0D A0 5A 1F 01        -  mov ecx,[Game.exe+10D5AA0]
"Game.exe"+525123: 53                       -  push ebx
"Game.exe"+525124: E8 B7 75 CF FF           -  call Game.exe+21C6E0
"Game.exe"+525129: 84 C0                    -  test al,al
"Game.exe"+52512B: 0F 85 E7 02 00 00        -  jne Game.exe+525418
"Game.exe"+525131: 8D 8F 30 02 00 00        -  lea ecx,[edi+00000230]
"Game.exe"+525137: 68 58 47 03 01           -  push Game.exe+F14758
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"No Cooldown"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(cooldown,Game.exe,F3 0F 5C C2 F3 0F 11 * * 0F 2F * * 76 * C7 * * * * * * C7)
cooldown:
  db 0F 57 C0 90
registersymbol(cooldown)

[DISABLE]
cooldown:
  db F3 0F 5C C2
unregistersymbol(cooldown)

{
// ORIGINAL CODE - INJECTION POINT: "Game.exe"+2AB395

"Game.exe"+2AB37D: CC                    -  int 3 
"Game.exe"+2AB37E: CC                    -  int 3 
"Game.exe"+2AB37F: CC                    -  int 3 
"Game.exe"+2AB380: 55                    -  push ebp
"Game.exe"+2AB381: 8B EC                 -  mov ebp,esp
"Game.exe"+2AB383: F3 0F 10 41 2C        -  movss xmm0,[ecx+2C]
"Game.exe"+2AB388: 0F 57 C9              -  xorps xmm1,xmm1
"Game.exe"+2AB38B: 0F 2F C1              -  comiss xmm0,xmm1
"Game.exe"+2AB38E: F3 0F 10 55 08        -  movss xmm2,[ebp+08]
"Game.exe"+2AB393: 76 09                 -  jna Game.exe+2AB39E
// ---------- INJECTING HERE ----------
"Game.exe"+2AB395: F3 0F 5C C2           -  subss xmm0,xmm2
"Game.exe"+2AB399: F3 0F 11 41 2C        -  movss [ecx+2C],xmm0
// ---------- DONE INJECTING  ----------
"Game.exe"+2AB39E: 0F 2F 49 2C           -  comiss xmm1,[ecx+2C]
"Game.exe"+2AB3A2: 76 0E                 -  jna Game.exe+2AB3B2
"Game.exe"+2AB3A4: C7 41 2C 00 00 00 00  -  mov [ecx+2C],00000000
"Game.exe"+2AB3AB: C7 41 30 00 00 80 3F  -  mov [ecx+30],3F800000
"Game.exe"+2AB3B2: F3 0F 10 41 30        -  movss xmm0,[ecx+30]
"Game.exe"+2AB3B7: 0F 2F C1              -  comiss xmm0,xmm1
"Game.exe"+2AB3BA: 76 09                 -  jna Game.exe+2AB3C5
"Game.exe"+2AB3BC: F3 0F 5C C2           -  subss xmm0,xmm2
"Game.exe"+2AB3C0: F3 0F 11 41 30        -  movss [ecx+30],xmm0
"Game.exe"+2AB3C5: 0F 2F 49 30           -  comiss xmm1,[ecx+30]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"No Overheat"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(overheat,Game.exe,72 * C7 41 * 00 00 00 00 C6)
alloc(overheat_save,2)
overheat_save:
  readmem(overheat,2)
overheat:
  db 90 90
registersymbol(overheat)
registersymbol(overheat_save)

[DISABLE]
overheat:
  readmem(overheat_save,2)
unregistersymbol(overheat)
unregistersymbol(overheat_save)
dealloc(overheat_save)

{
// ORIGINAL CODE - INJECTION POINT: "Game.exe"+2B2208

"Game.exe"+2B21ED: CC                    -  int 3 
"Game.exe"+2B21EE: CC                    -  int 3 
"Game.exe"+2B21EF: CC                    -  int 3 
"Game.exe"+2B21F0: 55                    -  push ebp
"Game.exe"+2B21F1: 8B EC                 -  mov ebp,esp
"Game.exe"+2B21F3: F3 0F 10 49 04        -  movss xmm1,[ecx+04]
"Game.exe"+2B21F8: 0F 57 C0              -  xorps xmm0,xmm0
"Game.exe"+2B21FB: F3 0F 5C 4D 08        -  subss xmm1,[ebp+08]
"Game.exe"+2B2200: 0F 2F C1              -  comiss xmm0,xmm1
"Game.exe"+2B2203: F3 0F 11 49 04        -  movss [ecx+04],xmm1
// ---------- INJECTING HERE ----------
"Game.exe"+2B2208: 72 0A                 -  jb Game.exe+2B2214
"Game.exe"+2B220A: C7 41 04 00 00 00 00  -  mov [ecx+04],00000000
// ---------- DONE INJECTING  ----------
"Game.exe"+2B2211: C6 01 00              -  mov byte ptr [ecx],00
"Game.exe"+2B2214: F3 0F 10 41 04        -  movss xmm0,[ecx+04]
"Game.exe"+2B2219: 0F 2F 41 08           -  comiss xmm0,[ecx+08]
"Game.exe"+2B221D: 72 03                 -  jb Game.exe+2B2222
"Game.exe"+2B221F: C6 01 01              -  mov byte ptr [ecx],01
"Game.exe"+2B2222: 5D                    -  pop ebp
"Game.exe"+2B2223: C2 04 00              -  ret 0004
"Game.exe"+2B2226: CC                    -  int 3 
"Game.exe"+2B2227: CC                    -  int 3 
"Game.exe"+2B2228: CC                    -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Unlimited Health"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(health,Game.exe,F3 0F 5C C8 F3 0F 11 8B * * * * 85 F6 0F)
health:
  db 90 90 90 90
registersymbol(health)

[DISABLE]
health:
  db F3 0F 5C C8
unregistersymbol(health)

{
// ORIGINAL CODE - INJECTION POINT: "Game.exe"+2709FF

"Game.exe"+2709C9: 8D 8B 94 03 00 00        -  lea ecx,[ebx+00000394]
"Game.exe"+2709CF: C7 04 24 00 00 00 00     -  mov [esp],00000000
"Game.exe"+2709D6: D9 5C 24 1C              -  fstp dword ptr [esp+1C]
"Game.exe"+2709DA: E8 91 44 F0 FF           -  call Game.exe+174E70
"Game.exe"+2709DF: F3 0F 10 44 24 18        -  movss xmm0,[esp+18]
"Game.exe"+2709E5: C6 83 28 06 00 00 01     -  mov byte ptr [ebx+00000628],01
"Game.exe"+2709EC: F3 0F 10 8B 08 02 00 00  -  movss xmm1,[ebx+00000208]
"Game.exe"+2709F4: F3 0F 2C C0              -  cvttss2si eax,xmm0
"Game.exe"+2709F8: 66 0F 6E C0              -  movd xmm0,eax
"Game.exe"+2709FC: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
// ---------- INJECTING HERE ----------
"Game.exe"+2709FF: F3 0F 5C C8              -  subss xmm1,xmm0
"Game.exe"+270A03: F3 0F 11 8B 08 02 00 00  -  movss [ebx+00000208],xmm1
// ---------- DONE INJECTING  ----------
"Game.exe"+270A0B: 85 F6                    -  test esi,esi
"Game.exe"+270A0D: 0F 85 C3 00 00 00        -  jne Game.exe+270AD6
"Game.exe"+270A13: A1 A0 5A AE 01           -  mov eax,[Game.exe+10D5AA0]
"Game.exe"+270A18: 39 98 48 03 00 00        -  cmp [eax+00000348],ebx
"Game.exe"+270A1E: 0F 85 B2 00 00 00        -  jne Game.exe+270AD6
"Game.exe"+270A24: 83 BB 0C 04 00 00 FF     -  cmp dword ptr [ebx+0000040C],-01
"Game.exe"+270A2B: 0F 85 A5 00 00 00        -  jne Game.exe+270AD6
"Game.exe"+270A31: E8 BA 0A DE FF           -  call Game.exe+514F0
"Game.exe"+270A36: D8 0D 20 F3 84 01        -  fmul dword ptr [Game.exe+E3F320]
"Game.exe"+270A3C: F3 0F 10 05 F0 F2 84 01  -  movss xmm0,[Game.exe+E3F2F0]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Unlimited Duration"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(duration,Game.exe,77 * F3 0F 5C 4D)
alloc(duration_save,5)
duration_save:
  readmem(duration+2,5)
duration+2:
  db 90 90 90 90 90
registersymbol(duration)
registersymbol(duration_save)

[DISABLE]
duration+2:
  readmem(duration_save,5)
unregistersymbol(duration)
unregistersymbol(duration_save)
dealloc(duration_save)

{
// ORIGINAL CODE - INJECTION POINT: "Game.exe"+2B2814

"Game.exe"+2B27F3: 51                       -  push ecx
"Game.exe"+2B27F4: F3 0F 11 04 24           -  movss [esp],xmm0
"Game.exe"+2B27F9: 8B 40 04                 -  mov eax,[eax+04]
"Game.exe"+2B27FC: FF D0                    -  call eax
"Game.exe"+2B27FE: 84 C0                    -  test al,al
"Game.exe"+2B2800: 74 2B                    -  je Game.exe+2B282D
"Game.exe"+2B2802: F3 0F 10 4E 60           -  movss xmm1,[esi+60]
"Game.exe"+2B2807: F3 0F 10 05 94 F3 F5 00  -  movss xmm0,[Game.exe+E3F394]
"Game.exe"+2B280F: 0F 2F C1                 -  comiss xmm0,xmm1
"Game.exe"+2B2812: 77 20                    -  ja Game.exe+2B2834
// ---------- INJECTING HERE ----------
"Game.exe"+2B2814: F3 0F 5C 4D 08           -  subss xmm1,[ebp+08]
// ---------- DONE INJECTING  ----------
"Game.exe"+2B2819: 0F 57 C0                 -  xorps xmm0,xmm0
"Game.exe"+2B281C: 0F 2F C1                 -  comiss xmm0,xmm1
"Game.exe"+2B281F: F3 0F 11 4E 60           -  movss [esi+60],xmm1
"Game.exe"+2B2824: 76 0E                    -  jna Game.exe+2B2834
"Game.exe"+2B2826: C7 46 60 00 00 00 00     -  mov [esi+60],00000000
"Game.exe"+2B282D: 32 C0                    -  xor al,al
"Game.exe"+2B282F: 5E                       -  pop esi
"Game.exe"+2B2830: 5D                       -  pop ebp
"Game.exe"+2B2831: C2 04 00                 -  ret 0004
"Game.exe"+2B2834: B0 01                    -  mov al,01
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Instant Recharge"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(recharge,Game.exe,F3 0F 10 87 * * * * F3 0F 10 * * * F3)
alloc(recharge_save,8)
recharge_save:
  readmem(recharge,8)
recharge:
  db 0F 57 C0 90 90 90 90 90
registersymbol(recharge)
registersymbol(recharge_save)

[DISABLE]
recharge:
  readmem(recharge_save,8)
unregistersymbol(recharge)
unregistersymbol(recharge_save)
dealloc(recharge_save)

{
// ORIGINAL CODE - INJECTION POINT: "Game.exe"+272664

"Game.exe"+272634: 74 2E                             -  je Game.exe+272664
"Game.exe"+272636: F3 0F 10 57 5C                    -  movss xmm2,[edi+5C]
"Game.exe"+27263B: F3 0F 10 4F 60                    -  movss xmm1,[edi+60]
"Game.exe"+272640: F3 0F 58 D3                       -  addss xmm2,xmm3
"Game.exe"+272644: F3 0F 10 47 64                    -  movss xmm0,[edi+64]
"Game.exe"+272649: F3 0F 58 0D 94 0E CE 00           -  addss xmm1,[Game.exe+BC0E94]
"Game.exe"+272651: F3 0F 58 C3                       -  addss xmm0,xmm3
"Game.exe"+272655: F3 0F 11 50 5C                    -  movss [eax+5C],xmm2
"Game.exe"+27265A: F3 0F 11 48 60                    -  movss [eax+60],xmm1
"Game.exe"+27265F: F3 0F 11 40 64                    -  movss [eax+64],xmm0
// ---------- INJECTING HERE ----------
"Game.exe"+272664: F3 0F 10 87 84 02 00 00           -  movss xmm0,[edi+00000284]
// ---------- DONE INJECTING  ----------
"Game.exe"+27266C: F3 0F 10 4C 24 14                 -  movss xmm1,[esp+14]
"Game.exe"+272672: F3 0F 5C C1                       -  subss xmm0,xmm1
"Game.exe"+272676: 0F 2F D8                          -  comiss xmm3,xmm0
"Game.exe"+272679: F3 0F 11 87 84 02 00 00           -  movss [edi+00000284],xmm0
"Game.exe"+272681: 76 1C                             -  jna Game.exe+27269F
"Game.exe"+272683: 8B 87 80 02 00 00                 -  mov eax,[edi+00000280]
"Game.exe"+272689: C7 87 84 02 00 00 00 00 0C 42     -  mov [edi+00000284],420C0000
"Game.exe"+272693: 83 F8 03                          -  cmp eax,03
"Game.exe"+272696: 7D 07                             -  jnl Game.exe+27269F
"Game.exe"+272698: 40                                -  inc eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Max Suit Energy"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(energy,Game.exe,8B 81 EC 00 00 00 8B 04 90 5D)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,[ecx+000000EC]
  mov [eax+edx*4],5
  jmp return

energy:
  jmp code
  nop
return:
registersymbol(energy)

[DISABLE]
energy:
  db 8B 81 EC 00 00 00
unregistersymbol(energy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Game.exe"+2D582B

"Game.exe"+2D581A: 8B E5                 -  mov esp,ebp
"Game.exe"+2D581C: 5D                    -  pop ebp
"Game.exe"+2D581D: C3                    -  ret 
"Game.exe"+2D581E: CC                    -  int 3 
"Game.exe"+2D581F: CC                    -  int 3 
"Game.exe"+2D5820: 55                    -  push ebp
"Game.exe"+2D5821: 8B EC                 -  mov ebp,esp
"Game.exe"+2D5823: 8B 55 08              -  mov edx,[ebp+08]
"Game.exe"+2D5826: 83 FA 03              -  cmp edx,03
"Game.exe"+2D5829: 77 0D                 -  ja Game.exe+2D5838
// ---------- INJECTING HERE ----------
"Game.exe"+2D582B: 8B 81 EC 00 00 00     -  mov eax,[ecx+000000EC]
// ---------- DONE INJECTING  ----------
"Game.exe"+2D5831: 8B 04 90              -  mov eax,[eax+edx*4]
"Game.exe"+2D5834: 5D                    -  pop ebp
"Game.exe"+2D5835: C2 04 00              -  ret 0004
"Game.exe"+2D5838: 83 C8 FF              -  or eax,-01
"Game.exe"+2D583B: 5D                    -  pop ebp
"Game.exe"+2D583C: C2 04 00              -  ret 0004
"Game.exe"+2D583F: CC                    -  int 3 
"Game.exe"+2D5840: 55                    -  push ebp
"Game.exe"+2D5841: 8B EC                 -  mov ebp,esp
"Game.exe"+2D5843: 8B 55 08              -  mov edx,[ebp+08]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Character Profile"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(stats,Game.exe,8B 81 F8 00 00 00 8B 04 90 5D)
alloc(newmem,$1000)
alloc(stats_ptr,4)

label(code)
label(return)

newmem:

code:
  mov [stats_ptr],ecx
  mov eax,[ecx+000000F8]
  jmp return

stats:
  jmp code
  nop
return:
registersymbol(stats)
registersymbol(stats_ptr)

[DISABLE]
stats:
  db 8B 81 F8 00 00 00
unregistersymbol(stats)
unregistersymbol(stats_ptr)
dealloc(newmem)
dealloc(stats_ptr)

{
// ORIGINAL CODE - INJECTION POINT: "Game.exe"+2D5B2B

"Game.exe"+2D5B1B: CC                    -  int 3 
"Game.exe"+2D5B1C: CC                    -  int 3 
"Game.exe"+2D5B1D: CC                    -  int 3 
"Game.exe"+2D5B1E: CC                    -  int 3 
"Game.exe"+2D5B1F: CC                    -  int 3 
"Game.exe"+2D5B20: 55                    -  push ebp
"Game.exe"+2D5B21: 8B EC                 -  mov ebp,esp
"Game.exe"+2D5B23: 8B 55 08              -  mov edx,[ebp+08]
"Game.exe"+2D5B26: 83 FA 0C              -  cmp edx,0C
"Game.exe"+2D5B29: 77 0D                 -  ja Game.exe+2D5B38
// ---------- INJECTING HERE ----------
"Game.exe"+2D5B2B: 8B 81 F8 00 00 00     -  mov eax,[ecx+000000F8]
// ---------- DONE INJECTING  ----------
"Game.exe"+2D5B31: 8B 04 90              -  mov eax,[eax+edx*4]
"Game.exe"+2D5B34: 5D                    -  pop ebp
"Game.exe"+2D5B35: C2 04 00              -  ret 0004
"Game.exe"+2D5B38: 83 C8 FF              -  or eax,-01
"Game.exe"+2D5B3B: 5D                    -  pop ebp
"Game.exe"+2D5B3C: C2 04 00              -  ret 0004
"Game.exe"+2D5B3F: CC                    -  int 3 
"Game.exe"+2D5B40: 55                    -  push ebp
"Game.exe"+2D5B41: 8B EC                 -  mov ebp,esp
"Game.exe"+2D5B43: 56                    -  push esi
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>30</ID>
          <Description>"Base Address"</Description>
          <LastState RealAddress="00000000"/>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>stats_ptr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>31</ID>
              <Description>"Stat Points"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>+f8</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>32</ID>
                  <Description>"Health"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>33</ID>
                  <Description>"Armor"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>34</ID>
                  <Description>"Speed"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>35</ID>
                  <Description>"HP Reg"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>36</ID>
                  <Description>"AR Reg"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>37</ID>
                  <Description>"AR Res"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+14</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>38</ID>
                  <Description>"AL Res"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+18</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>39</ID>
                  <Description>"Evade"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>40</ID>
                  <Description>"DMG"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>42</ID>
                  <Description>"RPM"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+2c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>43</ID>
                  <Description>"Reload"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+30</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>44</ID>
              <Description>"Suit Components"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>+ec</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>45</ID>
                  <Description>"Skill 1"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>46</ID>
                  <Description>"Skill 2"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>47</ID>
                  <Description>"Skill 3"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>48</ID>
                  <Description>"Skill 4"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+c</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>51</ID>
      <Description>"No description"</Description>
      <LastState Value="100" RealAddress="3C6C0858"/>
      <VariableType>4 Bytes</VariableType>
      <Address>3C6C0858</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>stats</Name>
      <Address>014A5B2B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory</Name>
      <Address> 005E5C40</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>flares</Name>
      <Address> 008B119D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cooldown</Name>
      <Address> 005E6C03</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>overheat</Name>
      <Address> 005F6066</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address> 005938CD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>recharge</Name>
      <Address> 003E0CD6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo</Name>
      <Address> 005C8917</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
