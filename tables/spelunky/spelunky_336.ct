<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <Forms>
    <UDF1 Class="TCEForm" Encoding="Ascii85">@JZXR2nldAU:MM2b.}cxWeIh0Gi32eO*Ft]WMuP5%{mcIVgA6t9Fkwal+{5QnNpI$=7,zGoLEqjnV-i7R=Z%lS*7?algi1!000</UDF1>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>17</ID>
      <Description>"hp/rope/bomb to 99"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Spelunky.exe
  Version: 
  Date   : 2016-01-01
  Author : Keith S

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECTHPBOMBROPE,Spelunky.exe,BF 04 00 00 00 89) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov edi,00000099
  jmp return

INJECTHPBOMBROPE:
  jmp code
return:
registersymbol(INJECTHPBOMBROPE)

[DISABLE]

INJECTHPBOMBROPE:
  db BF 04 00 00 00

unregistersymbol(INJECTHPBOMBROPE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Spelunky.exe"+63B99

"Spelunky.exe"+63B69: 89 9E 78 06 44 00                 -  mov [esi+00440678],ebx
"Spelunky.exe"+63B6F: D9 E8                             -  fld1 
"Spelunky.exe"+63B71: 89 9E 7C 06 44 00                 -  mov [esi+0044067C],ebx
"Spelunky.exe"+63B77: 89 9E 84 59 44 00                 -  mov [esi+00445984],ebx
"Spelunky.exe"+63B7D: 89 9E 64 59 44 00                 -  mov [esi+00445964],ebx
"Spelunky.exe"+63B83: 89 9E 58 73 44 00                 -  mov [esi+00447358],ebx
"Spelunky.exe"+63B89: 89 9E C4 59 44 00                 -  mov [esi+004459C4],ebx
"Spelunky.exe"+63B8F: 33 ED                             -  xor ebp,ebp
"Spelunky.exe"+63B91: 8B D5                             -  mov edx,ebp
"Spelunky.exe"+63B93: 69 D2 A4 14 00 00                 -  imul edx,edx,000014A4
// ---------- INJECTING HERE ----------
"Spelunky.exe"+63B99: BF 04 00 00 00                    -  mov edi,00000004
// ---------- DONE INJECTING  ----------
"Spelunky.exe"+63B9E: 89 AC 32 AC 06 44 00              -  mov [edx+esi+004406AC],ebp
"Spelunky.exe"+63BA5: 89 BC 32 94 06 44 00              -  mov [edx+esi+00440694],edi
"Spelunky.exe"+63BAC: 89 BC 32 98 06 44 00              -  mov [edx+esi+00440698],edi
"Spelunky.exe"+63BB3: 89 BC 32 A4 06 44 00              -  mov [edx+esi+004406A4],edi
"Spelunky.exe"+63BBA: 89 BC 32 A8 06 44 00              -  mov [edx+esi+004406A8],edi
"Spelunky.exe"+63BC1: C7 84 32 B0 06 44 00 FF FF FF FF  -  mov [edx+esi+004406B0],FFFFFFFF
"Spelunky.exe"+63BCC: 8B 86 28 59 44 00                 -  mov eax,[esi+00445928]
"Spelunky.exe"+63BD2: B9 02 00 00 00                    -  mov ecx,00000002
"Spelunky.exe"+63BD7: 3B C1                             -  cmp eax,ecx
"Spelunky.exe"+63BD9: 75 10                             -  jne Spelunky.exe+63BEB
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"damsel buff"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Spelunky.exe
  Version: 
  Date   : 2016-01-01
  Author : Keith S

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,Spelunky.exe,FF 00 8B 8D 80 02 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add [eax],5
  mov ecx,[ebp+00000280]
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 00 8B 8D 80 02 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Spelunky.exe"+5041D

"Spelunky.exe"+503E3: C6 85 71 02 00 00 01           -  mov byte ptr [ebp+00000271],01
"Spelunky.exe"+503EA: C6 85 13 02 00 00 00           -  mov byte ptr [ebp+00000213],00
"Spelunky.exe"+503F1: C6 85 9D 00 00 00 00           -  mov byte ptr [ebp+0000009D],00
"Spelunky.exe"+503F8: 80 BF EC 05 44 00 00           -  cmp byte ptr [edi+004405EC],00
"Spelunky.exe"+503FF: 74 2C                          -  je Spelunky.exe+5042D
"Spelunky.exe"+50401: 8B 85 80 02 00 00              -  mov eax,[ebp+00000280]
"Spelunky.exe"+50407: 80 B8 A0 14 00 00 00           -  cmp byte ptr [eax+000014A0],00
"Spelunky.exe"+5040E: 74 1D                          -  je Spelunky.exe+5042D
"Spelunky.exe"+50410: C6 87 EC 05 44 00 00           -  mov byte ptr [edi+004405EC],00
"Spelunky.exe"+50417: 8B 85 80 02 00 00              -  mov eax,[ebp+00000280]
// ---------- INJECTING HERE ----------
"Spelunky.exe"+5041D: FF 00                          -  inc [eax]
"Spelunky.exe"+5041F: 8B 8D 80 02 00 00              -  mov ecx,[ebp+00000280]
// ---------- DONE INJECTING  ----------
"Spelunky.exe"+50425: 8B 11                          -  mov edx,[ecx]
"Spelunky.exe"+50427: 89 95 40 01 00 00              -  mov [ebp+00000140],edx
"Spelunky.exe"+5042D: D9 05 5C BE 22 01              -  fld dword ptr [Spelunky.exe+12BE5C]
"Spelunky.exe"+50433: D8 55 30                       -  fcom dword ptr [ebp+30]
"Spelunky.exe"+50436: DF E0                          -  fnstsw ax
"Spelunky.exe"+50438: F6 C4 41                       -  test ah,41
"Spelunky.exe"+5043B: 0F 8A 49 01 00 00              -  jp Spelunky.exe+5058A
"Spelunky.exe"+50441: 83 BD 34 01 00 00 15           -  cmp dword ptr [ebp+00000134],15
"Spelunky.exe"+50448: D9 5D 30                       -  fstp dword ptr [ebp+30]
"Spelunky.exe"+5044B: 0F 84 7D 00 00 00              -  je Spelunky.exe+504CE
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Damsel-oriented"</Description>
      <Options moBindActivation="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>19</ID>
          <Description>"hp/rope/bomb to 3"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Spelunky.exe
  Version: 
  Date   : 2016-01-01
  Author : Keith S

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECTHPBOMBROPE,Spelunky.exe,BF 04 00 00 00 89) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov edi,00000003
  jmp return

INJECTHPBOMBROPE:
  jmp code
return:
registersymbol(INJECTHPBOMBROPE)

[DISABLE]

INJECTHPBOMBROPE:
  db BF 04 00 00 00

unregistersymbol(INJECTHPBOMBROPE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Spelunky.exe"+63B99

"Spelunky.exe"+63B69: 89 9E 78 06 44 00                 -  mov [esi+00440678],ebx
"Spelunky.exe"+63B6F: D9 E8                             -  fld1 
"Spelunky.exe"+63B71: 89 9E 7C 06 44 00                 -  mov [esi+0044067C],ebx
"Spelunky.exe"+63B77: 89 9E 84 59 44 00                 -  mov [esi+00445984],ebx
"Spelunky.exe"+63B7D: 89 9E 64 59 44 00                 -  mov [esi+00445964],ebx
"Spelunky.exe"+63B83: 89 9E 58 73 44 00                 -  mov [esi+00447358],ebx
"Spelunky.exe"+63B89: 89 9E C4 59 44 00                 -  mov [esi+004459C4],ebx
"Spelunky.exe"+63B8F: 33 ED                             -  xor ebp,ebp
"Spelunky.exe"+63B91: 8B D5                             -  mov edx,ebp
"Spelunky.exe"+63B93: 69 D2 A4 14 00 00                 -  imul edx,edx,000014A4
// ---------- INJECTING HERE ----------
"Spelunky.exe"+63B99: BF 04 00 00 00                    -  mov edi,00000004
// ---------- DONE INJECTING  ----------
"Spelunky.exe"+63B9E: 89 AC 32 AC 06 44 00              -  mov [edx+esi+004406AC],ebp
"Spelunky.exe"+63BA5: 89 BC 32 94 06 44 00              -  mov [edx+esi+00440694],edi
"Spelunky.exe"+63BAC: 89 BC 32 98 06 44 00              -  mov [edx+esi+00440698],edi
"Spelunky.exe"+63BB3: 89 BC 32 A4 06 44 00              -  mov [edx+esi+004406A4],edi
"Spelunky.exe"+63BBA: 89 BC 32 A8 06 44 00              -  mov [edx+esi+004406A8],edi
"Spelunky.exe"+63BC1: C7 84 32 B0 06 44 00 FF FF FF FF  -  mov [edx+esi+004406B0],FFFFFFFF
"Spelunky.exe"+63BCC: 8B 86 28 59 44 00                 -  mov eax,[esi+00445928]
"Spelunky.exe"+63BD2: B9 02 00 00 00                    -  mov ecx,00000002
"Spelunky.exe"+63BD7: 3B C1                             -  cmp eax,ecx
"Spelunky.exe"+63BD9: 75 10                             -  jne Spelunky.exe+63BEB
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"damsel +2 hp"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Spelunky.exe
  Version: 
  Date   : 2016-01-01
  Author : Keith S

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,Spelunky.exe,FF 00 8B 8D 80 02 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add [eax],2
  mov ecx,[ebp+00000280]
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 00 8B 8D 80 02 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Spelunky.exe"+5041D

"Spelunky.exe"+503E3: C6 85 71 02 00 00 01           -  mov byte ptr [ebp+00000271],01
"Spelunky.exe"+503EA: C6 85 13 02 00 00 00           -  mov byte ptr [ebp+00000213],00
"Spelunky.exe"+503F1: C6 85 9D 00 00 00 00           -  mov byte ptr [ebp+0000009D],00
"Spelunky.exe"+503F8: 80 BF EC 05 44 00 00           -  cmp byte ptr [edi+004405EC],00
"Spelunky.exe"+503FF: 74 2C                          -  je Spelunky.exe+5042D
"Spelunky.exe"+50401: 8B 85 80 02 00 00              -  mov eax,[ebp+00000280]
"Spelunky.exe"+50407: 80 B8 A0 14 00 00 00           -  cmp byte ptr [eax+000014A0],00
"Spelunky.exe"+5040E: 74 1D                          -  je Spelunky.exe+5042D
"Spelunky.exe"+50410: C6 87 EC 05 44 00 00           -  mov byte ptr [edi+004405EC],00
"Spelunky.exe"+50417: 8B 85 80 02 00 00              -  mov eax,[ebp+00000280]
// ---------- INJECTING HERE ----------
"Spelunky.exe"+5041D: FF 00                          -  inc [eax]
"Spelunky.exe"+5041F: 8B 8D 80 02 00 00              -  mov ecx,[ebp+00000280]
// ---------- DONE INJECTING  ----------
"Spelunky.exe"+50425: 8B 11                          -  mov edx,[ecx]
"Spelunky.exe"+50427: 89 95 40 01 00 00              -  mov [ebp+00000140],edx
"Spelunky.exe"+5042D: D9 05 5C BE 22 01              -  fld dword ptr [Spelunky.exe+12BE5C]
"Spelunky.exe"+50433: D8 55 30                       -  fcom dword ptr [ebp+30]
"Spelunky.exe"+50436: DF E0                          -  fnstsw ax
"Spelunky.exe"+50438: F6 C4 41                       -  test ah,41
"Spelunky.exe"+5043B: 0F 8A 49 01 00 00              -  jp Spelunky.exe+5058A
"Spelunky.exe"+50441: 83 BD 34 01 00 00 15           -  cmp dword ptr [ebp+00000134],15
"Spelunky.exe"+50448: D9 5D 30                       -  fstp dword ptr [ebp+30]
"Spelunky.exe"+5044B: 0F 84 7D 00 00 00              -  je Spelunky.exe+504CE
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of mov [eax],ecx</Description>
      <Address>01152149</Address>
      <ModuleName>Spelunky.exe</ModuleName>
      <ModuleNameOffset>52149</ModuleNameOffset>
      <Before>
        <Byte>8D</Byte>
        <Byte>40</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>85</Byte>
        <Byte>80</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [esi+ecx+00440698],eax</Description>
      <Address>011B3F6E</Address>
      <ModuleName>Spelunky.exe</ModuleName>
      <ModuleNameOffset>B3F6E</ModuleNameOffset>
      <Before>
        <Byte>0E</Byte>
        <Byte>94</Byte>
        <Byte>06</Byte>
        <Byte>44</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>84</Byte>
        <Byte>0E</Byte>
        <Byte>98</Byte>
        <Byte>06</Byte>
        <Byte>44</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>0F</Byte>
        <Byte>8E</Byte>
        <Byte>8D</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of inc [eax]</Description>
      <Address>0115041D</Address>
      <ModuleName>Spelunky.exe</ModuleName>
      <ModuleNameOffset>5041D</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>80</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>80</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [edx+esi+00440694],edi</Description>
      <Address>01163BA5</Address>
      <ModuleName>Spelunky.exe</ModuleName>
      <ModuleNameOffset>63BA5</ModuleNameOffset>
      <Before>
        <Byte>32</Byte>
        <Byte>AC</Byte>
        <Byte>06</Byte>
        <Byte>44</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>BC</Byte>
        <Byte>32</Byte>
        <Byte>94</Byte>
        <Byte>06</Byte>
        <Byte>44</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>BC</Byte>
        <Byte>32</Byte>
        <Byte>98</Byte>
        <Byte>06</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov edi,00000004 sets base hp/rope/bomb</Description>
      <Address>01163B99</Address>
      <ModuleName>Spelunky.exe</ModuleName>
      <ModuleNameOffset>63B99</ModuleNameOffset>
      <Before>
        <Byte>D2</Byte>
        <Byte>A4</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>BF</Byte>
      </Actual>
      <After>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :add [ecx+0044592C],eax (INSTRUCTION TO ADD CASH)</Description>
      <Address>01292E7E</Address>
      <ModuleName>Spelunky.exe</ModuleName>
      <ModuleNameOffset>52E7E</ModuleNameOffset>
      <Before>
        <Byte>0D</Byte>
        <Byte>B4</Byte>
        <Byte>84</Byte>
        <Byte>ED</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>81</Byte>
        <Byte>2C</Byte>
        <Byte>59</Byte>
        <Byte>44</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [esi+0044592C],ebx (SET INITAL CASH)</Description>
      <Address>012A3B18</Address>
      <ModuleName>Spelunky.exe</ModuleName>
      <ModuleNameOffset>63B18</ModuleNameOffset>
      <Before>
        <Byte>9E</Byte>
        <Byte>0C</Byte>
        <Byte>06</Byte>
        <Byte>44</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
      </Actual>
      <After>
        <Byte>9E</Byte>
        <Byte>2C</Byte>
        <Byte>59</Byte>
        <Byte>44</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [esi+00000140],ecx</Description>
      <Address>00DB59C1</Address>
      <ModuleName>Spelunky.exe</ModuleName>
      <ModuleNameOffset>159C1</ModuleNameOffset>
      <Before>
        <Byte>BF</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>8E</Byte>
        <Byte>40</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>3D</Byte>
        <Byte>FA</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :cmp [esi+00000164],ebx (DAMAGE)</Description>
      <Address>012558BC</Address>
      <ModuleName>Spelunky.exe</ModuleName>
      <ModuleNameOffset>158BC</ModuleNameOffset>
      <Before>
        <Byte>E5</Byte>
        <Byte>5D</Byte>
        <Byte>C2</Byte>
        <Byte>14</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>39</Byte>
      </Actual>
      <After>
        <Byte>9E</Byte>
        <Byte>64</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [eax+0000013C],00000001 (limits gold if we cheat inital cash?)</Description>
      <Address>012A3A50</Address>
      <ModuleName>Spelunky.exe</ModuleName>
      <ModuleNameOffset>63A50</ModuleNameOffset>
      <Before>
        <Byte>78</Byte>
        <Byte>0C</Byte>
        <Byte>D9</Byte>
        <Byte>58</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
      </Actual>
      <After>
        <Byte>80</Byte>
        <Byte>3C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>INJECTHPBOMBROPE</Name>
      <Address>012A3B99</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>function CEPanel1Click(sender)

end
function HPRopeBombTrackBarChange(sender)
control_setCaption(CELabel2, trackbar_getPosition())
end
function HPRopeBombTrackBarMouseDown(sender, button, x, y)
control_setCaption(CELabel2, trackbar_getPosition())
end
</LuaScript>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"Spelunky.exe"+43543</Address>
      <Comment>spider jump 2?
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"Spelunky.exe"+4359D</Address>
      <Comment>spiderjump 1
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"Spelunky.exe"+52149</Address>
      <Comment>hp update
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"Spelunky.exe"+63B99</Address>
      <Comment>4 change second number to set starting HP
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"Spelunky.exe"+63BA5</Address>
      <Comment>sets base hp (edi is HP)
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
