<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>36</ID>
      <Description>"[X] &lt;== Endless Space v1.1.1 Script 1.1 Part1"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Endless Space - Disharmony
 Game Version  : 1.1.1
 Game Sponsor  : SKIDROW
 Proces Name   : EndlessSpace.exe
 Script Version: 1.1 (Part 1)
 CE Version    : 6.3
 Release date  : 17-Jul-2013
 Author        : Recifense
 History:
 02-Jul-13: First Release
 17-Jul-13: Script was changed to work with Harmony Faction as well.
 Features:
 - Minimum Dust
 - One Turn Research
 - Unlimited Movement Points
 - God Mode (Depend on Script Part 2)
===========================================
}

//=========================================
// Definitions
define(LUDO,"EndlessSpace.exe")

//=========================================
[ENABLE]
//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

AOBScan(aobMPDT,d9 40 34 d9 5d ac d9 45 ac d9 5d c4 8d 45 c4 83 EC 0C 50 e8 ??)
AOBScan(aobMORP,d9 5d e0 39 1b d9 43 18 d9 5d dc d9 45 dc d9 45 e0 df f1 dd d8)
AOBScan(aobMMT1,83 c4 10 d9 5f 18 8d 65 fc 5f c9 c3 ?? ?? ?? ?? ?? ?? ?? ?? ??)

//=========================================
// Declaration section
label(_MonPlayerDust)
label(_BackMPD)
label(_ExitMPD)
label(_MonResearchProgress)
label(_BackMRP)
label(_ExitMRP)
label(_MonMovement1)
label(_MonM100)
label(_MonM101)
label(_MonM102)
label(_BackMM1)
label(_ExitMM1)

label(pUnit)
label(pMove)
label(pUnit1)
label(pMove1)
label(pPlayer)
label(pCommon)
label(iEnableMPD)
label(iEnableMRP)
label(iEnableMRK)
label(iEnableMMT)
label(iEnableGMD)
label(fMinRes)
label(fGarbage)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pUnit)
registersymbol(pMove)
registersymbol(pUnit1)
registersymbol(pMove1)
registersymbol(pPlayer)
registersymbol(pCommon)
registersymbol(iEnableMPD)
registersymbol(iEnableMRP)
registersymbol(iEnableMRK)
registersymbol(iEnableMMT)
registersymbol(iEnableGMD)
registersymbol(fMinRes)

registersymbol(aobMPDT)
registersymbol(aobMORP)
registersymbol(aobMMT1)

//=========================================
MyCode:
//=========================================
// Clicking on Empire Icon
_MonPlayerDust:
 push ebx

 mov [pPlayer],eax
 mov ebx,[eax+08]
 mov [pCommon],ebx

 cmp dword ptr [iEnableMPD],0
 je _ExitMPD                       // Jump if feature is disabled

 cmp dword ptr [eax+40],0
 je _ExitMPD

 mov ebx,[fMinRes]
 cmp ebx,[eax+40]
 jle _ExitMPD

 mov [eax+40],ebx

_ExitMPD:
 pop ebx

 fld dword ptr [eax+34]            // Original code (rds res)
 fstp dword ptr [ebp-54]           // Original code
 jmp _BackMPD                      // Back to main code

//=========================================
// Between Turns (Only possible to load after at least one turn)
_MonResearchProgress:
 push ecx

 fstp dword ptr [ebp-20]           // Original code (Needed value)

 cmp dword ptr [iEnableMRP],0
 je _ExitMRP                       // Jump if feature is disabled

 mov ecx,[ebx+08]
 cmp ecx,[pCommon]
 jne _ExitMRP

 mov ecx,[ebp-20]                  // Get the research cost
 mov [ebx+18],ecx                  // Update current spent value

_ExitMRP:
 pop ecx

 cmp [ebx],ebx                     // Original code
 jmp _BackMRP                      // Back to main code

//=========================================
// At the end of the movement (+GM)
_MonMovement1:
 add esp,10                        // Original code

 push ecx

 mov [pMove1],edi
 mov ecx,[edi+20]
 mov [pUnit1],ecx

 cmp ecx,00000006
 je _MonM100

 cmp ecx,00000100
 jne _ExitMM1

 mov ecx,000000AA
 cmp ecx,[edi+04]
 je _MonM102

_MonM100:
 cmp dword ptr [iEnableMRK],0
 je _MonM101                       // Jump if feature is disabled

 mov ecx,00000055
 mov [edi+04],ecx

_MonM101:
 mov ecx,[edi+04]
 cmp ecx,00000055
 jne _ExitMM1

 cmp dword ptr [iEnableMMT],0
 je _ExitMM1                       // Jump if feature is disabled

 fst dword ptr [fGarbage]

 mov ecx,[fGarbage]
 test ecx,ecx
 js _ExitMM1

 cmp ecx,(float)1.0
 jg _ExitMM1

 xor ecx,ecx
 mov [edi+14],ecx                  // Make % spent_MP = 0
 mov [edi+18],ecx                  // Make % spent_MP = 0

 fstp st(0)
 fldz
 jmp _ExitMM1
//=
_MonM102:
 cmp dword ptr [iEnableGMD],0
 je _ExitMM1                       // Jump if feature is disabled

 mov ecx,[edi+18]
 mov [edi+14],ecx

 fstp st(0)
 fld dword ptr [edi+18]

_ExitMM1:
 pop ecx

 fstp dword ptr [edi+18]           // Original code
 jmp _BackMM1                      // Back to main code

//=========================================
 db '==========================================&gt;'
 db 'CE6.3 Script by Recifense 070413'
//=========================================
// Variables
iEnableMPD:
 dd 0
iEnableMRP:
 dd 0
iEnableMRK:
 dd 0
iEnableMMT:
 dd 0
iEnableGMD:
 dd 0
pUnit:
 dd 0
pMove:
 dd 0
pUnit1:
 dd 0
pMove1:
 dd 0
pPlayer:
 dd 0
pCommon:
 dd MyCode
fMinRes:
 dd (float)6300.0
fGarbage:
 dd 0

//=========================================
// Hacking Points
aobMPDT:
 jmp _MonPlayerDust
 nop
_BackMPD:

aobMORP:
 jmp _MonResearchProgress
_BackMRP:

aobMMT1:
 jmp _MonMovement1
 nop
_BackMM1:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
aobMPDT:
// fld dword ptr [eax+34]
// fstp dword ptr [ebp-54]
 db d9 40 34 d9 5d ac

aobMORP:
// fstp dword ptr [ebp-20]
// cmp [ebx],ebx
 db d9 5d e0 39 1b

aobMMT1:
// add esp,10
// fstp dword ptr [edi+18]
 db 83 c4 10 d9 5f 18

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pUnit)
unregistersymbol(pMove)
unregistersymbol(iEnableMPD)
unregistersymbol(iEnableMRP)
unregistersymbol(iEnableMRK)
unregistersymbol(iEnableMMT)
unregistersymbol(iEnableGMD)
unregistersymbol(pPlayer)
unregistersymbol(pCommon)
unregistersymbol(fMinRes)

unregistersymbol(aobMPDT)
unregistersymbol(aobMORP)
unregistersymbol(aobMMT1)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Enable/Disable Minimum DUST =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMPD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>27</ID>
              <Description>"Minimum Dust Value =&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>Float</VariableType>
              <Address>fMinRes</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Enable/Disable Research in 1 Turn =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMRP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Enable/Disable Mark Ship in Movement =&gt; (1/0) "</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMRK</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Enable/Disable Free Movement for Marked Ships =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMMT</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Enable/Disable God Mode (depend on Part 2) =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>38</ID>
      <Description>"[X] &lt;== Endless Space v1.1.1 Script Part2"</Description>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Endless Space - Disharmony
 Game Version  : 1.1.1
 Game Sponsor  : SKIDROW
 Proces Name   : EndlessSpace.exe
 Script Version: 1.0 (Part 2)
 CE Version    : 6.3
 Release date  : 04-Jul-2013
 Author        : Recifense
 History:
 04-Jul-13: First Release
 Features:
 - Mark Ship for God Mode
===========================================
}

//=========================================
// Definitions
define(LUDO,"EndlessSpace.exe")

//=========================================
[ENABLE]
//=========================================
alloc(MyCodeG,4096,LUDO)
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

AOBScan(aobMPSP,d9 41 18 d9 5d cc d9 45 cc d9 5d cc d9 45 cc d9 58 6c 83 ec 0c)

//=========================================
// Declaration section
label(_MarkPlayerShip)
label(_BackMPS)
label(_ExitMPS)

//=========================================
// Registering Symbols
registersymbol(MyCodeG)

registersymbol(aobMPSP)

//=========================================
MyCodeG:
//=========================================
// When starting battle (preparation screen)
_MarkPlayerShip:
 push eax

 mov [pUnit],ecx
 mov [pMove],edi

 mov eax,[ecx+20]
 cmp eax,00000100
 jne _ExitMPS

 test edi,edi
 jz _ExitMPS

 mov eax,[edi+24]
 cmp eax,[pCommon]
 jne _ExitMPS

 mov eax,000000AA
 mov [ecx+04],eax

_ExitMPS:
 pop eax

 fld dword ptr [ecx+18]            // Original code
 fstp dword ptr [ebp-34]           // Original code
 jmp _BackMPS                      // Back to main code

//=========================================
 db '=========================================&gt;'
 db 'CE6.3 Script by Recifense 070413'
//=========================================
// Variables

//=========================================
// Hacking Points
aobMPSP:
 jmp _MarkPlayerShip
 nop
_BackMPS:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
aobMPSP:
// fld dword ptr [ecx+18]
// fstp dword ptr [ebp-34]
 db d9 41 18 d9 5d cc

//=========================================
// Unregistering Symbols
unregistersymbol(MyCodeG)

unregistersymbol(aobMPSP)

//=========================================
dealloc(MyCodeG)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>iEnableMD</Name>
      <Address>09030150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMR</Name>
      <Address>09030154</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMM</Name>
      <Address>09030158</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonDust</Name>
      <Address>3096B6B1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonRese</Name>
      <Address>3098E308</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonSMP0</Name>
      <Address>31FCD280</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMonSMP1</Name>
      <Address>31FCD2FC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUnit1</Name>
      <Address>043A0196</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMove1</Name>
      <Address>043A019A</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Endless Space
 Game Version  : 1.1.1
 Proces Name   : EndlessSpace.exe
 Script Version: 1.1
 CE Version    : 6.3
 Release date  : 17-Jul-2013
 Author        : Recifense
 History:
 02-Jul-13: First Release
 17-Jul-13: Script was changed to work with Harmony Faction as well.
 Features:
 - Minimum Dust                      [1] 
 - One Turn Research                 [2]
 - Unlimited Movement Points         [3]
 - God Mode (Depend on Script Part 2)[4]
===========================================
 Game Title    : Endless Space - Disharmony
 Game Version  : 1.1.1
 Game Sponsor  : SKIDROW
 Proces Name   : EndlessSpace.exe
 Script Version: 1.0 (Part 2)
 CE Version    : 6.3
 Release date  : 04-Jul-2013
 Author        : Recifense
 History:
 04-Jul-13: First Release
 Features:
 - Mark Ship for God Mode            [5]
===========================================
[1] The current DUST value will be set to a minimum value when you open/close Empire Management Module (default = 6300);
[2] The current research will take one turn;
[3] The fleet/ships will have unlimited movement poits. But the ship has to be marked in order to work;
[4] During Battle (this depends on the Script Part 2)
[5] Mark the player's ships just before a battle, so the GM cheat can save their asses;
===========================================
[USAGE]
[BEFORE LOADING THE PART1 SCRIPT]
- At the beginning of a game, open/close the Empire Management Module. 
- Start a research;
- Move at least one ship;
- Do whatever you wnat to in the current turn;
- END TURN
[NOW LOAD PART 1 SCRIPT] =&gt; [X]
* All cheats now work, except to GM.
[BEFORE LOADING THE PART2 SCRIPT]
- You have to start a battle first. But if the AIs had a battle among themselves, it will help.
[NOW LOAD PART 2 SCRIPT] =&gt; [X]
* Now GM will work as well
===========================================
[UNLIMITED MOVEMENT USAGE]
- Before moving your fleets ENABLE "Mark Ship in Movement". Remember to disable "Mark Ship" before ending turn; 
- You only need to do this once for each fleet, then it will remain marked.
===========================================
HOTKEYS:
CTRL+Home     = ENABLE  all cheats (except "Mark Ship")
CTRL+End      = DISABLE all cheats (except "Mark Ship")
CTRL+PageUp   = ENABLE  "Mark Ship"
CTRL+PageDown = DISABLE "Mark Ship"
===========================================
[EXPLANATION]
Why so many steps to use this table/cheats?
Because this game uses Microsoft .NET Framework. This technology only loads the codes when they are needed. Then they remain loaded. Games that use this technology tend to be NOT GOOD (being polite).
===========================================
Cheers!
</Comments>
</CheatTable>
