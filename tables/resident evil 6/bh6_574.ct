<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Health script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthscriptAOB,66 83 BE 10 0F 00 00 00 ** ** 8B 96 68 4E 00 00)
label(healthscriptAOB_jmp)
registersymbol(healthscriptAOB_jmp)

label(pHealth1)
registersymbol(pHealth1)
label(pHealth2)
registersymbol(pHealth2)
label(pHealth3)
registersymbol(pHealth3)
label(pHealth4)
registersymbol(pHealth4)
label(pHealth5)
registersymbol(pHealth5)
label(pHealth6)
registersymbol(pHealth6)
label(pHealth7)
registersymbol(pHealth7)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHealth1+edi*4],esi

pushad
push 0D                     //key Enter
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
push eax
mov eax,[esi+00000F12]
mov [esi+00000F10],ax
pop eax

originalcode:
cmp word ptr [esi+00000F10],00

exit:
jmp returnhere

///
pHealth1:
dd 0
pHealth2:
dd 0
pHealth3:
dd 0
pHealth4:
dd 0
pHealth5:
dd 0
pHealth6:
dd 0
pHealth7:
dd 0
///

healthscriptAOB: //"BH6.exe"+6A60C:
healthscriptAOB_jmp:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthscriptAOB_jmp: //"BH6.exe"+6A60C:
db 66 83 BE 10 0F 00 00 00
//Alt: cmp word ptr [esi+00000F10],00
unregistersymbol(pHealth1)
unregistersymbol(pHealth2)
unregistersymbol(pHealth3)
unregistersymbol(pHealth4)
unregistersymbol(pHealth5)
unregistersymbol(pHealth6)
unregistersymbol(pHealth7)
unregistersymbol(healthscriptAOB_jmp)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>16</Key>
            <Key>112</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Super Heal"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(superhealAOB,66 01 86 10 0F 00 00 ** ** 33 C9 66 89 8E 10 0F 00 00)
label(superhealAOB_jmp)
registersymbol(superhealAOB_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(notEnemy)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHealth1],esi
je notEnemy
cmp [pHealth2],esi
je notEnemy
cmp [pHealth3],esi
je notEnemy
cmp [pHealth4],esi
je notEnemy
cmp [pHealth5],esi
je notEnemy
cmp [pHealth6],esi
je notEnemy
cmp [pHealth7],esi
je notEnemy
jmp originalcode

notEnemy:
mov eax,[esi+00000F12]
mov [esi+00000F10],ax
jmp exit

originalcode:
add [esi+00000F10],ax

exit:
jmp returnhere

superhealAOB: //"BH6.exe"+658228:
superhealAOB_jmp:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
superhealAOB_jmp: //"BH6.exe"+658228:
db 66 01 86 10 0F 00 00
//Alt: add [esi+00000F10],ax
unregistersymbol(superhealAOB_jmp)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>113</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>16</Key>
                <Key>113</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"Leon Health"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pHealth1</Address>
          <Offsets>
            <Offset>F10</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHealth1</Address>
              <Offsets>
                <Offset>F12</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Helena Health"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pHealth2</Address>
          <Offsets>
            <Offset>F10</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>39</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHealth2</Address>
              <Offsets>
                <Offset>F12</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Chris Health"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pHealth3</Address>
          <Offsets>
            <Offset>F10</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>44</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHealth3</Address>
              <Offsets>
                <Offset>F12</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Piers Health"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pHealth4</Address>
          <Offsets>
            <Offset>F10</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>42</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHealth4</Address>
              <Offsets>
                <Offset>F12</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Jake Health"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pHealth5</Address>
          <Offsets>
            <Offset>F10</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>46</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHealth5</Address>
              <Offsets>
                <Offset>F12</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Sherry Health"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pHealth6</Address>
          <Offsets>
            <Offset>F10</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>48</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHealth6</Address>
              <Offsets>
                <Offset>F12</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Ada Health"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pHealth7</Address>
          <Offsets>
            <Offset>F10</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>50</ID>
              <Description>"Max"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHealth7</Address>
              <Offsets>
                <Offset>F12</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Inf. Ammo Clip / Health Tablet"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infcliphealthtabletAOB,66 29 54 41 0A ** ** 33 D2 66 89 54 41 0A)
label(infcliphealthtabletAOB_jmp)
registersymbol(infcliphealthtabletAOB_jmp)

label(pDebug1)
registersymbol(pDebug1)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(check2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
sub [ecx+eax*2+0A],dx
push edx
lea edx,[ecx+eax*2]
mov [pDebug1],edx
pop edx
pushfd

cmp word ptr [ecx+eax*2+10],1
jne check2
mov word ptr [ecx+eax*2+10],2

check2:
cmp word ptr [ecx+eax*2+0A],1
jge originalcode
mov word ptr [ecx+eax*2+0A],1

originalcode:
popfd
//sub [ecx+eax*2+0A],dx

exit:
jmp returnhere

///
pDebug1:
dd 0
///

infcliphealthtabletAOB: //"BH6.exe"+970007:
infcliphealthtabletAOB_jmp:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infcliphealthtabletAOB_jmp: //"BH6.exe"+970007:
db 66 29 54 41 0A
//Alt: sub [ecx+eax*2+0A],dx
unregistersymbol(pDebug1)
unregistersymbol(infcliphealthtabletAOB_jmp)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>16</Key>
            <Key>112</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>20</ID>
          <Description>"pDebug1"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pDebug1</Address>
          <Offsets>
            <Offset>A</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Inf. Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infammoAOB,7D 16 56 8B CF E8 ** ** ** ** 6A FF 56 8B CD)
label(infammoAOB_jmp)
registersymbol(infammoAOB_jmp)

infammoAOB: //"BH6.exe"+646D09:
infammoAOB_jmp:
db 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
infammoAOB_jmp: //"BH6.exe"+646D09:
db 7D 16
//Alt: jnl BH6.exe+646D21
unregistersymbol(infammoAOB_jmp)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>16</Key>
            <Key>112</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Inf. Item"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infitemAOB,8B 7C 24 1C 8B CE 3B F8 ** ** 2B FB)
label(infitemAOB_jmp)
registersymbol(infitemAOB_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,edi
jg originalcode
mov eax,edi
add eax,1

originalcode:
mov edi,[esp+1C]
mov ecx,esi

exit:
jmp returnhere

infitemAOB: //"BH6.exe"+656FB6:
infitemAOB_jmp:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infitemAOB_jmp: //"BH6.exe"+656FB6:
db 8B 7C 24 1C 8B CE
//Alt: mov edi,[esp+1C]
//Alt: mov ecx,esi
unregistersymbol(infitemAOB_jmp)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>16</Key>
            <Key>112</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>51</ID>
      <Description>"Inf. All Item"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infallitemAOB,33 D2 66 89 54 41 0A 0F BF 44 41 0A C2 08 00)
label(infallitemAOB_jmp)
registersymbol(infallitemAOB_jmp)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp word ptr [ecx+eax*2+0A],1
jge originalcode
mov word ptr [ecx+eax*2+0A],1

originalcode:
movsx eax,word ptr [ecx+eax*2+0A]

exit:
jmp returnhere

infallitemAOB+7: //"BH6.exe"+970015:
infallitemAOB_jmp:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infallitemAOB_jmp: //"BH6.exe"+970015:
db 0F BF 44 41 0A
//Alt: movsx eax,word ptr [ecx+eax*2+0A]
unregistersymbol(infallitemAOB_jmp)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>16</Key>
            <Key>112</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Skill Points script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(skillpointsscriptAOB,8B BE 88 05 00 00 8B 8E 8C 05 00 00 3B F9)
label(skillpointsscriptAOB_jmp)
registersymbol(skillpointsscriptAOB_jmp)
label(pSkillPts)
registersymbol(pSkillPts)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pSkillPts],esi

originalcode:
mov edi,[esi+00000588]

exit:
jmp returnhere

///
pSkillPts:
dd 0
///

skillpointsscriptAOB: //"BH6.exe"+5EB993:
skillpointsscriptAOB_jmp:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
skillpointsscriptAOB_jmp: //"BH6.exe"+5EB993:
db 8B BE 88 05 00 00
//Alt: mov edi,[esi+00000588]
unregistersymbol(pSkillPts)
unregistersymbol(skillpointsscriptAOB_jmp)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>114</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>16</Key>
            <Key>114</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Inf. Skill Points"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infskillpointsAOB2,8B 8E 28 02 00 00 8B 47 08 29 86 88 05 00 00 51)
label(infskillpointsAOB2_jmp)
registersymbol(infskillpointsAOB2_jmp)
aobscan(infskillpointsAOB,29 8E 88 05 00 00 8B 0D ** ** ** ** 8D BC C6 BC 02 00 00)
label(infskillpointsAOB_jmp)
registersymbol(infskillpointsAOB_jmp)

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pSkillPts],esi
jne originalcode2

cmp eax,0
jle originalcode2
mov eax,0

originalcode2:
sub [esi+00000588],eax

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pSkillPts],esi
jne originalcode

cmp ecx,0
jle originalcode
mov ecx,0

originalcode:
sub [esi+00000588],ecx

exit:
jmp returnhere

infskillpointsAOB2+9: //"BH6.exe"+5EB736:
infskillpointsAOB2_jmp:
jmp newmem2
nop
returnhere2:

infskillpointsAOB: //"BH6.exe"+5EB50C:
infskillpointsAOB_jmp:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
infskillpointsAOB2_jmp: //"BH6.exe"+5EB736:
db 29 86 88 05 00 00
//Alt: sub [esi+00000588],eax
dealloc(newmem)
infskillpointsAOB_jmp: //"BH6.exe"+5EB50C:
db 29 8E 88 05 00 00
//Alt: sub [esi+00000588],ecx
unregistersymbol(infskillpointsAOB2_jmp)
unregistersymbol(infskillpointsAOB_jmp)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>115</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>16</Key>
                <Key>115</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Skill Points"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pSkillPts</Address>
          <Offsets>
            <Offset>588</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
