<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>110</ID>
      <Description>"Darkstar One AOB script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobPartReader,8B 06 FF 50 14 D8 0D ?? ?? ?? ?? D8 7C BE 0C)
aobscan(aobPartDamager,F3 0F 10 44 24 04 0F 2F 44 81 0C)
aobscan(aobHullDamager,F3 0F 10 44 24 08 0F 2F C1 F3 0F 11 0C 24)
aobscan(aobAfterburnerReader,F3 0F 10 41 20 0F 2F 41 24 72 07)
aobscan(aobMoneyTaker,8B 41 04 29 10 8B 49 04 8B 01 C2)
aobscan(aobMoneyGiver,01 10 8B 49 04 8B 01 C2)
aobscan(aobEnergyTaker,F3 0F 10 44 24 04 0F 57 C9 0F 2F C1 76 14)
aobscan(aobBurnReader1,F3 0F 10 46 1C F3 0F 58 44 24 68 F3 0F 11 44 24 68)
aobscan(aobBurnReader2,F3 0F 10 56 38 0F 2F D1 F3 0F 58 05)
aobscan(aobSpeedReader1,F3 0F 10 41 04 EB 05 F3 0F 10 41 1C)
aobscan(aobSpeedReader2,F3 0F 10 41 04 76 23 F3 0F 10 15)
aobscan(aobSpeedReader3,F3 0F 10 56 04 F3 0F 58 D0 0F 28 C2 0F 2F 46 18)
aobscan(aobMissileTaker,8A 54 24 14 3A D0 73 2C 28 56 03)
aobscan(aobProjectileDamageGetter,F3 0F 10 80 1C 01 00 00 8B 16 F3 0F 11 44 24 08)
aobscan(aobTargetShieldReader,F3 0F 10 46 24 F3 0F 11 44 24 08)
aobscan(aobFieldDriveReader,F3 0F 10 41 14 0F 2F 41 10 76 1B)
aobscan(aobUpgradeUpdater,03 DB 03 DB 89 1E E8)

alloc(newmem,4096)

label(aobPartReader_r)
label(aobPartDamager_r)
label(aobHullDamager_r)
label(aobAfterburnerReader_r)
label(aobMoneyTaker_r)
label(aobMoneyGiver_r)
label(aobEnergyTaker_r)
label(aobBurnReader1_r)
label(aobBurnReader2_r)
label(aobSpeedReader1_r)
label(aobSpeedReader2_r)
label(aobSpeedReader3_r)
label(aobMissileTaker_r)
label(aobProjectileDamageGetter_r)
label(aobTargetShieldReader_r)
label(aobFieldDriveReader_r)
label(aobUpgradeUpdater_r)
registersymbol(aobPartReader_r)
registersymbol(aobPartDamager_r)
registersymbol(aobHullDamager_r)
registersymbol(aobAfterburnerReader_r)
registersymbol(aobMoneyTaker_r)
registersymbol(aobMoneyGiver_r)
registersymbol(aobEnergyTaker_r)
registersymbol(aobBurnReader1_r)
registersymbol(aobBurnReader2_r)
registersymbol(aobSpeedReader1_r)
registersymbol(aobSpeedReader2_r)
registersymbol(aobSpeedReader3_r)
registersymbol(aobMissileTaker_r)
registersymbol(aobProjectileDamageGetter_r)
registersymbol(aobTargetShieldReader_r)
registersymbol(aobFieldDriveReader_r)
registersymbol(aobUpgradeUpdater_r)

label(lblPartReader)
label(lblPartReaderRet)

label(lblPartDamager)
label(lblPartDamagerSkip)
label(lblPartDamagerRet)

label(lblHullDamager)
label(lblHullDamagerSkipPlayer)
label(lblHullDamagerSkipFriend)
label(lblHullDamagerSkipEnemy)
label(lblHullDamagerSkip)
label(lblHullDamagerRet)

label(lblAfterburnerReader)
label(lblAfterburnerReaderSkip)
label(lblAfterburnerReaderSkipFriend)
label(lblAfterburnerReaderSkipFriendReset)
label(lblAfterburnerReaderSkipEnemy)
label(lblAfterburnerReaderSkipEnemyReset)
label(lblAfterburnerReaderDone)
label(lblAfterburnerReaderRet)

label(lblMoneyTaker)
label(lblMoneyTakerSkip)
label(lblMoneyTakerRet)

label(lblMoneyGiver)
label(lblMoneyGiverRet)

label(lblMoneyChecker)
label(lblMoneyCheckerSkip)

label(lblEnergyTaker)
label(lblEnergyTakerSkip)
label(lblEnergyTakerRet)

label(lblBurnReader1)
label(lblBurnReader1Skip)
label(lblBurnReader1Ret)

label(lblBurnReader2)
label(lblBurnReader2Skip)
label(lblBurnReader2Ret)

label(lblSpeedReader1)
label(lblSpeedReader1Skip)
label(lblSpeedReader1Ret)

label(lblSpeedReader2)
label(lblSpeedReader2Skip)
label(lblSpeedReader2Ret)

label(lblSpeedReader3)
label(lblSpeedReader3Skip)
label(lblSpeedReader3Ret)

label(lblMissileTaker)
label(lblMissileTakerSkip)
label(lblMissileTakerRet)

label(lblProjectileDamageGetter)
label(lblProjectileDamageGetterSkip)
label(lblProjectileDamageGetterRet)

label(lblTargetShieldReader)
label(lblTargetShieldReaderSkipFriend)
label(lblTargetShieldReaderSkipEnemy)
label(lblTargetShieldReaderRet)

label(lblFieldDriveReader)
label(lblFieldDriveReaderSkip)
label(lblFieldDriveReaderRet)

label(lblUpgradeUpdater)
label(lblUpgradeUpdaterSkip)
label(lblUpgradeUpdaterRet)

label(bEnableGodMode)
label(bEnableInfiniteAfterburner)
label(bEnableFreeShopping)
label(bEnableMinMoney)
label(iMinMoney)
label(bEnableInfiniteEnergy)
label(bEnableForwardBurnMultiplier)
label(fForwardBurnMultiplier)
label(bEnableReverseBurnMultiplier)
label(fReverseBurnMultiplier)
label(bEnableSpeedMultiplier)
label(fSpeedMultiplier)
label(bEnableInfiniteMissiles)
label(bEnableProjectileDamageMultiplier)
label(fProjectileDamageMultiplier)
label(bEnableInstantFieldDriveRecharge)
label(bEnableInfiniteUpgrades)
registersymbol(bEnableGodMode)
registersymbol(bEnableInfiniteAfterburner)
registersymbol(bEnableFreeShopping)
registersymbol(bEnableMinMoney)
registersymbol(iMinMoney)
registersymbol(bEnableInfiniteEnergy)
registersymbol(bEnableForwardBurnMultiplier)
registersymbol(fForwardBurnMultiplier)
registersymbol(bEnableReverseBurnMultiplier)
registersymbol(fReverseBurnMultiplier)
registersymbol(bEnableSpeedMultiplier)
registersymbol(fSpeedMultiplier)
registersymbol(bEnableInfiniteMissiles)
registersymbol(bEnableProjectileDamageMultiplier)
registersymbol(fProjectileDamageMultiplier)
registersymbol(bEnableInstantFieldDriveRecharge)
registersymbol(bEnableInfiniteUpgrades)

label(pPlayerShip)
label(pTarget)
label(pTargetedEnemy)
label(pTargetedFriend)
label(pFloat1)
registersymbol(pPlayerShip)
registersymbol(pTarget)
registersymbol(pTargetedEnemy)
registersymbol(pTargetedFriend)
registersymbol(pFloat1)

newmem:
/////////////////////
// Control vars

bEnableGodMode:
dd 1
bEnableInfiniteAfterburner:
dd 1
bEnableFreeShopping:
dd 1
bEnableMinMoney:
dd 1
iMinMoney:
dd (int)100000
bEnableInfiniteEnergy:
dd 1
bEnableForwardBurnMultiplier:
dd 1
fForwardBurnMultiplier:
dd (float)2.5
bEnableReverseBurnMultiplier:
dd 1
fReverseBurnMultiplier:
dd (float)2.5
bEnableSpeedMultiplier:
dd 1
fSpeedMultiplier:
dd (float)1.5
bEnableInfiniteMissiles:
dd 1
bEnableProjectileDamageMultiplier:
dd 1
fProjectileDamageMultiplier:
dd (float)1.5
bEnableInstantFieldDriveRecharge:
dd 1
bEnableInfiniteUpgrades:
dd 0

/////////////////////
// Pointer grab

lblPartReader:
mov eax,[esi-4]
mov dword ptr [pPlayerShip],eax
mov eax,[esi]           // Original code
call dword ptr [eax+14] // Original code
jmp lblPartReaderRet

/////////////////////
// Parts

lblPartDamager:
movss xmm0,[esp+04] // Original code
push eax
cmp dword ptr [bEnableGodMode],1
jne short lblPartDamagerSkip
mov eax,[ecx-4]
cmp dword ptr [pPlayerShip],eax
jne short lblPartDamagerSkip
xorps xmm0,xmm0
movss [esp+08],xmm0
lblPartDamagerSkip:
pop eax
jmp lblPartDamagerRet

/////////////////////
// Hull

lblHullDamager:
movss xmm0,[esp+08] // Original code
push eax
mov eax,[ecx-4]
cmp dword ptr [bEnableGodMode],1
jne short lblHullDamagerSkipPlayer
cmp dword ptr [pPlayerShip],eax
jne short lblHullDamagerSkipPlayer
xorps xmm0,xmm0
movss [esp+0C],xmm0
lblHullDamagerSkipPlayer:
cmp dword ptr [pTargetedFriend],eax
jne short lblHullDamagerSkipFriend
xorps xmm0,xmm0
movss [esp+0C],xmm0
lblHullDamagerSkipFriend:
cmp dword ptr [pTargetedEnemy],eax
jne short lblHullDamagerSkipEnemy
movss xmm0,[pFloat1]
addss xmm0,[ecx+4]
mov dword ptr [pTargetedEnemy],0
lblHullDamagerSkipEnemy:
movss [esp+0C],xmm0
lblHullDamagerSkip:
pop eax
jmp lblHullDamagerRet

/////////////////////
// Afterburner

lblAfterburnerReader:
cmp dword ptr [bEnableInfiniteAfterburner],1
jne short lblAfterburnerReaderSkip
mov dword ptr [ecx+20],0
lblAfterburnerReaderSkip:
pushad
push 78 // VK_F9: F9 key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblAfterburnerReaderSkipFriend
push eax
mov eax,[pTarget]
mov dword ptr [pTargetedFriend],eax
pop eax
jmp short lblAfterburnerReaderDone
lblAfterburnerReaderSkipFriend:
pushad
push 79 // VK_F10: F10 key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblAfterburnerReaderSkipFriendReset
mov dword ptr [pTargetedFriend],0
jmp short lblAfterburnerReaderDone
lblAfterburnerReaderSkipFriendReset:
pushad
push 7B // VK_F12: F12 key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblAfterburnerReaderSkipEnemy
push eax
mov eax,[pTarget]
mov dword ptr [pTargetedEnemy],eax
pop eax
jmp short lblAfterburnerReaderDone
lblAfterburnerReaderSkipEnemy:
pushad
push 7A // VK_F11: F11 key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblAfterburnerReaderSkipEnemyReset
mov dword ptr [pTargetedEnemy],0
lblAfterburnerReaderSkipEnemyReset:
lblAfterburnerReaderDone:
movss xmm0,[ecx+20] // Original code
jmp lblAfterburnerReaderRet

/////////////////////
// Money

lblMoneyTaker:
mov eax,[ecx+04] // Original code
cmp dword ptr [bEnableFreeShopping],1
je short lblMoneyTakerSkip
sub [eax],edx    // Original code
lblMoneyTakerSkip:
call lblMoneyChecker
jmp lblMoneyTakerRet

lblMoneyGiver:
call lblMoneyChecker
add [eax],edx    // Original code
mov ecx,[ecx+04] // Original code
jmp lblMoneyGiverRet

lblMoneyChecker:
push ebx
cmp dword ptr [bEnableMinMoney],1
jne short lblMoneyCheckerSkip
mov ebx,[iMinMoney]
cmp dword ptr [eax],ebx
jge short lblMoneyCheckerSkip
mov dword ptr [eax],ebx
lblMoneyCheckerSkip:
pop ebx
ret

/////////////////////
// Energy

lblEnergyTaker:
push eax
cmp dword ptr [bEnableInfiniteEnergy],1
jne short lblEnergyTakerSkip
mov eax,[pPlayerShip]
add eax,44
cmp eax,ecx
jne short lblEnergyTakerSkip
mov dword ptr [esp+08],0
lblEnergyTakerSkip:
pop eax
movss xmm0,[esp+04] // Original code
jmp lblEnergyTakerRet

/////////////////////
// Afterburner fwd

lblBurnReader1:
movss xmm0,[esi+1C] // Original code
push eax
cmp dword ptr [bEnableForwardBurnMultiplier],1
jne short lblBurnReader1Skip
mov eax,[pPlayerShip]
add eax,138
cmp eax,esi
jne short lblBurnReader1Skip
mulss xmm0, [fForwardBurnMultiplier]
lblBurnReader1Skip:
pop eax
jmp lblBurnReader1Ret

/////////////////////
// Afterburner rev

lblBurnReader2:
movss xmm2,[esi+38] // Original code
push eax
cmp dword ptr [bEnableReverseBurnMultiplier],1
jne short lblBurnReader2Skip
mov eax,[pPlayerShip]
add eax,138
cmp eax,esi
jne short lblBurnReader2Skip
mulss xmm2, [fReverseBurnMultiplier]
lblBurnReader2Skip:
pop eax
jmp lblBurnReader2Ret

/////////////////////
// Ship speed

lblSpeedReader1:
movss xmm0,[ecx+04] // Original code
push eax
cmp dword ptr [bEnableSpeedMultiplier],1
jne short lblSpeedReader1Skip
mov eax,[pPlayerShip]
add eax,138
cmp eax,ecx
jne short lblSpeedReader1Skip
mulss xmm0,[fSpeedMultiplier]
lblSpeedReader1Skip:
pop eax
jmp lblSpeedReader1Ret

lblSpeedReader2:
movss xmm0,[ecx+04] // Original code
pushfd
push eax
cmp dword ptr [bEnableSpeedMultiplier],1
jne short lblSpeedReader2Skip
mov eax,[pPlayerShip]
add eax,138
cmp eax,ecx
jne short lblSpeedReader2Skip
mulss xmm0,[fSpeedMultiplier]
lblSpeedReader2Skip:
pop eax
popfd
jmp lblSpeedReader2Ret

lblSpeedReader3:
movss xmm2,[esi+04] // Original code
push eax
cmp dword ptr [bEnableSpeedMultiplier],1
jne short lblSpeedReader3Skip
mov eax,[pPlayerShip]
add eax,138
cmp eax,esi
jne short lblSpeedReader3Skip
mulss xmm2,[fSpeedMultiplier]
lblSpeedReader3Skip:
pop eax
jmp lblSpeedReader3Ret

/////////////////////
// Missiles

lblMissileTaker:
push eax
mov eax,[pPlayerShip]
test eax,eax
jz short lblMissileTakerSkip
mov eax,[eax+10]
cmp eax,edi
jne short lblMissileTakerSkip
mov byte ptr [esp+18],0
lblMissileTakerSkip:
pop eax
mov dl,[esp+14] // Original code
cmp dl,al       // Original code
jmp lblMissileTakerRet

/////////////////////
// Projectile dmg

lblProjectileDamageGetter:
push ebx
cmp dword ptr [bEnableProjectileDamageMultiplier],1
jne short lblProjectileDamageGetterSkip
mov ebx,[pPlayerShip]
test ebx,ebx
jz short lblProjectileDamageGetterSkip
mov ebx,[ebx-14c]
cmp dword ptr [eax+10C],ebx
jne short lblProjectileDamageGetterSkip
movss xmm0,[eax+0000011C]
mulss xmm0,[fProjectileDamageMultiplier]
movss [eax+11C],xmm0
movss xmm0,[eax+120]
mulss xmm0,[fProjectileDamageMultiplier]
movss [eax+120],xmm0
lblProjectileDamageGetterSkip:
pop ebx
movss xmm0,[eax+0000011C] // Original code
jmp lblProjectileDamageGetterRet

/////////////////////
// Target

lblTargetShieldReader:
movss xmm0,[esi+24] // Original code
push eax
mov eax,[esi+4]
mov dword ptr [pTarget],eax
cmp dword ptr [pTargetedFriend],eax
jne short lblTargetShieldReaderSkipFriend
mov eax,[esi+2c]
mov dword ptr [esi+24],eax
movss xmm0,[esi+24]
lblTargetShieldReaderSkipFriend:
cmp dword ptr [pTargetedEnemy],eax
jne short lblTargetShieldReaderSkipEnemy
xorps xmm0,xmm0
mov dword ptr [esi+24],0
lblTargetShieldReaderSkipEnemy:
pop eax
jmp lblTargetShieldReaderRet

/////////////////////
// Field drive

lblFieldDriveReader:
push eax
cmp dword ptr [bEnableInstantFieldDriveRecharge],1
jne short lblFieldDriveReaderSkip
mov eax,[esi+4]
test eax,eax
jz short lblFieldDriveReaderSkip
cmp dword ptr [pPlayerShip],eax
jne short lblFieldDriveReaderSkip
mov eax,[ecx+14]
mov dword ptr [ecx+10],eax
lblFieldDriveReaderSkip:
pop eax
movss xmm0,[ecx+14] // Original code
jmp lblFieldDriveReaderRet

/////////////////////
// Upgrades

lblUpgradeUpdater:
add ebx,ebx   // Original code
add ebx,ebx   // Original code
cmp dword ptr [bEnableInfiniteUpgrades],1
jne short lblUpgradeUpdaterSkip
push eax
push ecx
mov eax,ebx
and eax,1000000
mov ecx,ebx
and ecx,100000
add eax,ecx
mov ecx,ebx
and ecx,400
add eax,ecx
mov ecx,ebx
and ecx,80
add eax,ecx
mov ecx,ebx
and ecx,40000
add eax,ecx
test eax,eax
pop ecx
pop eax
jnz short lblUpgradeUpdaterSkip
or ebx,1000000
lblUpgradeUpdaterSkip:
mov [esi],ebx // Original code
jmp lblUpgradeUpdaterRet


/////////////////////
// Internal vars

pPlayerShip:
dd 0
pTarget:
dd 0
pTargetedEnemy:
dd 0
pTargetedFriend:
dd 0
pFloat1:
dd (float)1.0

//"DarkStarOne.exe"+1A806F:
aobPartReader:
aobPartReader_r:
jmp lblPartReader
lblPartReaderRet:

//"DarkStarOne.exe"+1A8127:
aobPartDamager:
aobPartDamager_r:
jmp lblPartDamager
nop
lblPartDamagerRet:

//"DarkStarOne.exe"+18FF64:
aobHullDamager:
aobHullDamager_r:
jmp lblHullDamager
nop
lblHullDamagerRet:

//"DarkStarOne.exe"+1A4A80:
aobAfterburnerReader:
aobAfterburnerReader_r:
jmp lblAfterburnerReader
lblAfterburnerReaderRet:

//"DarkStarOne.exe"+12BAE9:
aobMoneyTaker:
aobMoneyTaker_r:
jmp lblMoneyTaker
lblMoneyTakerRet:

//"DarkStarOne.exe"+12BAC3:
aobMoneyGiver:
aobMoneyGiver_r:
jmp lblMoneyGiver
lblMoneyGiverRet:

//"DarkStarOne.exe"+1A63E0:
aobEnergyTaker:
aobEnergyTaker_r:
jmp lblEnergyTaker
nop
lblEnergyTakerRet:

//"DarkStarOne.exe"+1A4C9C:
aobBurnReader1:
aobBurnReader1_r:
jmp lblBurnReader1
lblBurnReader1Ret:

//"DarkStarOne.exe"+1A4CC2:
aobBurnReader2:
aobBurnReader2_r:
jmp lblBurnReader2
lblBurnReader2Ret:

//"DarkStarOne.exe"+1A4998:
aobSpeedReader1:
aobSpeedReader1_r:
jmp lblSpeedReader1
lblSpeedReader1Ret:

//"DarkStarOne.exe"+1A4F96:
aobSpeedReader2:
aobSpeedReader2_r:
jmp lblSpeedReader2
lblSpeedReader2Ret:

//"DarkStarOne.exe"+1A4B89:
aobSpeedReader3:
aobSpeedReader3_r:
jmp lblSpeedReader3
lblSpeedReader3Ret:

//"DarkStarOne.exe"+17CDDA:
aobMissileTaker:
aobMissileTaker_r:
jmp lblMissileTaker
nop
lblMissileTakerRet:

//"DarkStarOne.exe"+1DB5C8:
aobProjectileDamageGetter:
aobProjectileDamageGetter_r:
jmp lblProjectileDamageGetter
nop
nop
nop
lblProjectileDamageGetterRet:

//"DarkStarOne.exe"+1A65DF:
aobTargetShieldReader:
aobTargetShieldReader_r:
jmp lblTargetShieldReader
lblTargetShieldReaderRet:

//"DarkStarOne.exe"+1A75E0:
aobFieldDriveReader:
aobFieldDriveReader_r:
jmp lblFieldDriveReader
lblFieldDriveReaderRet:

//"DarkStarOne.exe"+1ABCC4:
aobUpgradeUpdater:
aobUpgradeUpdater_r:
jmp lblUpgradeUpdater
nop
lblUpgradeUpdaterRet:

[DISABLE]
//"DarkStarOne.exe"+1A806F:
aobPartReader_r:
//Alt: mov eax,[esi]
//Alt: call dword ptr [eax+14]
db 8B 06 FF 50 14

//"DarkStarOne.exe"+1A8127:
aobPartDamager_r:
//Alt: movss xmm0,[esp+04]
db F3 0F 10 44 24 04

//"DarkStarOne.exe"+18FF64:
aobHullDamager_r:
//Alt: movss xmm0,[esp+08]
db F3 0F 10 44 24 08

//"DarkStarOne.exe"+1A4A80:
aobAfterburnerReader_r:
//Alt: movss xmm0,[ecx+20]
db F3 0F 10 41 20

//"DarkStarOne.exe"+12BAE9:
aobMoneyTaker_r:
//Alt: mov eax,[ecx+04]
//Alt: sub [eax],edx
db 8B 41 04 29 10

//"DarkStarOne.exe"+12BAC3:
aobMoneyGiver_r:
//Alt: add [eax],edx
//Alt: mov ecx,[ecx+04]
db 01 10 8B 49 04

//"DarkStarOne.exe"+1A63E0:
aobEnergyTaker_r:
//Alt: movss xmm0,[esp+04]
db F3 0F 10 44 24 04

//"DarkStarOne.exe"+1A4C9C:
aobBurnReader1_r:
//Alt: movss xmm0,[esi+1C]
db F3 0F 10 46 1C

//"DarkStarOne.exe"+1A4CC2:
aobBurnReader2_r:
//Alt: movss xmm2,[esi+38]
db F3 0F 10 56 38

//"DarkStarOne.exe"+1A4998:
aobSpeedReader1_r:
//Alt: movss xmm0,[ecx+04]
db F3 0F 10 41 04

//"DarkStarOne.exe"+1A4F96:
aobSpeedReader2_r:
//Alt: movss xmm0,[ecx+04]
db F3 0F 10 41 04

//"DarkStarOne.exe"+1A4B89:
aobSpeedReader3_r:
//Alt: movss xmm2,[esi+04]
db F3 0F 10 56 04

//"DarkStarOne.exe"+17CDDA:
aobMissileTaker_r:
//Alt: mov dl,[esp+14]
//Alt: cmp dl,al
db 8A 54 24 14 3A D0

//"DarkStarOne.exe"+1DB5C8:
aobProjectileDamageGetter_r:
//Alt: movss xmm0,[eax+0000011C]
db F3 0F 10 80 1C 01 00 00

//"DarkStarOne.exe"+1A65DF:
aobTargetShieldReader_r:
//Alt: movss xmm0,[esi+24]
db F3 0F 10 46 24

//"DarkStarOne.exe"+1A75E0:
aobFieldDriveReader_r:
//Alt: movss xmm0,[ecx+14]
db F3 0F 10 41 14

//"DarkStarOne.exe"+1ABCC4:
aobUpgradeUpdater_r:
//Alt: add ebx,ebx
//Alt: add ebx,ebx
//Alt: mov [esi],ebx
db 03 DB 03 DB 89 1E

unregistersymbol(aobPartReader_r)
unregistersymbol(aobPartDamager_r)
unregistersymbol(aobHullDamager_r)
unregistersymbol(aobAfterburnerReader_r)
unregistersymbol(aobMoneyTaker_r)
unregistersymbol(aobMoneyGiver_r)
unregistersymbol(aobEnergyTaker_r)
unregistersymbol(aobBurnReader1_r)
unregistersymbol(aobBurnReader2_r)
unregistersymbol(aobSpeedReader1_r)
unregistersymbol(aobSpeedReader2_r)
unregistersymbol(aobSpeedReader3_r)
unregistersymbol(aobMissileTaker_r)
unregistersymbol(aobProjectileDamageGetter_r)
unregistersymbol(aobTargetShieldReader_r)
unregistersymbol(aobFieldDriveReader_r)
unregistersymbol(aobUpgradeUpdater_r)

unregistersymbol(bEnableGodMode)
unregistersymbol(bEnableInfiniteAfterburner)
unregistersymbol(bEnableFreeShopping)
unregistersymbol(bEnableMinMoney)
unregistersymbol(iMinMoney)
unregistersymbol(bEnableInfiniteEnergy)
unregistersymbol(bEnableForwardBurnMultiplier)
unregistersymbol(fForwardBurnMultiplier)
unregistersymbol(bEnableReverseBurnMultiplier)
unregistersymbol(fReverseBurnMultiplier)
unregistersymbol(bEnableSpeedMultiplier)
unregistersymbol(fSpeedMultiplier)
unregistersymbol(bEnableInfiniteMissiles)
unregistersymbol(bEnableProjectileDamageMultiplier)
unregistersymbol(fProjectileDamageMultiplier)
unregistersymbol(bEnableInstantFieldDriveRecharge)
unregistersymbol(bEnableInfiniteUpgrades)

unregistersymbol(pPlayerShip)
unregistersymbol(pTarget)
unregistersymbol(pTargetedEnemy)
unregistersymbol(pTargetedFriend)
unregistersymbol(pFloat1)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>113</ID>
          <Description>"bEnableFreeShopping"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableFreeShopping</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"bEnableMinMoney"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMinMoney</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>115</ID>
              <Description>"iMinMoney"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinMoney</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"bEnableGodMode"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableGodMode</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>215</ID>
          <Description>"bEnableInfiniteUpgrades"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteUpgrades</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>139</ID>
          <Description>"bEnableInfiniteMissiles"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteMissiles</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"bEnableInfiniteEnergy"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteEnergy</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"bEnableInfiniteAfterburner"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteAfterburner</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>126</ID>
          <Description>"bEnableForwardBurnMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableForwardBurnMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>127</ID>
              <Description>"fForwardBurnMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fForwardBurnMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>128</ID>
          <Description>"bEnableReverseBurnMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableReverseBurnMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>129</ID>
              <Description>"fReverseBurnMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fReverseBurnMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>134</ID>
          <Description>"bEnableSpeedMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableSpeedMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>135</ID>
              <Description>"fSpeedMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fSpeedMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>171</ID>
          <Description>"bEnableProjectileDamageMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableProjectileDamageMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>172</ID>
              <Description>"fProjectileDamageMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fProjectileDamageMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>204</ID>
          <Description>"bEnableInstantFieldDriveRecharge"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInstantFieldDriveRecharge</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"Darkstar One AOB script (for Flak mission only!)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobFlakCannonGetter,8B 86 08 01 00 00 F3 0F 10 40 38)
aobscan(aobDamageGetter,F3 0F 11 44 24 10 C6 44 24 18 00)

alloc(newmem,4096)

label(aobFlakCannonGetter_r)
label(aobDamageGetter_r)
registersymbol(aobFlakCannonGetter_r)
registersymbol(aobDamageGetter_r)

label(lblFlakCannonGetter)
label(lblFlakCannonGetterRet)

label(lblDamageGetter)
label(lblDamageGetterEnemy)
label(lblDamageGetterSkip)
label(lblDamageGetterRet)

label(fPlayerCannonDamageMultiplier)
label(fEnemyCannonDamageMultiplier)
registersymbol(fPlayerCannonDamageMultiplier)
registersymbol(fEnemyCannonDamageMultiplier)

label(pFlakCannon)
registersymbol(pFlakCannon)

newmem:
fPlayerCannonDamageMultiplier:
dd (float)2.5
fEnemyCannonDamageMultiplier:
dd (float)0.5

lblFlakCannonGetter:
mov eax,[esi+00000108] // Original code
mov dword ptr [pFlakCannon],eax
jmp lblFlakCannonGetterRet

lblDamageGetter:
//movss [esp+10],xmm0 // Original code
push eax
lea eax,[edi-90]
cmp dword ptr [pFlakCannon],eax
jne short lblDamageGetterEnemy
mulss xmm0,[fPlayerCannonDamageMultiplier]
movss [esp+14],xmm0
movss [esp+18],xmm0
jmp short lblDamageGetterSkip
lblDamageGetterEnemy:
mulss xmm0,[fEnemyCannonDamageMultiplier]
movss [esp+14],xmm0
movss xmm0,[esp+18]
mulss xmm0,[fEnemyCannonDamageMultiplier]
movss [esp+18],xmm0
lblDamageGetterSkip:
pop eax
jmp lblDamageGetterRet

pFlakCannon:
dd 0

//"DarkStarOne.exe"+168633:
aobFlakCannonGetter:
aobFlakCannonGetter_r:
jmp lblFlakCannonGetter
nop
lblFlakCannonGetterRet:

//"DarkStarOne.exe"+164916:
aobDamageGetter:
aobDamageGetter_r:
jmp lblDamageGetter
nop
lblDamageGetterRet:

[DISABLE]
//"DarkStarOne.exe"+168633:
aobFlakCannonGetter_r:
//Alt: mov eax,[esi+00000108]
db 8B 86 08 01 00 00


//"DarkStarOne.exe"+164916:
aobDamageGetter_r:
//Alt: movss [esp+10],xmm0
db F3 0F 11 44 24 10

unregistersymbol(aobFlakCannonGetter_r)
unregistersymbol(aobDamageGetter_r)

unregistersymbol(fPlayerCannonDamageMultiplier)
unregistersymbol(fEnemyCannonDamageMultiplier)

unregistersymbol(pFlakCannon)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>230</ID>
          <Description>"fPlayerCannonDamageMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>Float</VariableType>
          <Address>fPlayerCannonDamageMultiplier</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>231</ID>
          <Description>"fEnemyCannonDamageMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>Float</VariableType>
          <Address>fEnemyCannonDamageMultiplier</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
