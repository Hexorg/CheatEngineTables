<?xml version="1.0" encoding="utf-8"?>
<CheatTable AecialTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Money"</Description>
      <Color>80000008</Color>
      <VariableType>Binary</VariableType>
      <BitStart>1</BitStart>
      <BitLength>32</BitLength>
      <ShowAsBinary>0</ShowAsBinary>
      <Address>"RGSS100J.dll"+00144030</Address>
      <Offsets>
        <Offset>8</Offset>
        <Offset>C</Offset>
        <Offset>C</Offset>
        <Offset>8</Offset>
        <Offset>4</Offset>
        <Offset>0</Offset>
        <Offset>D0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Withdrawl dupe"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//While this is enabled you can't release pokemon

[Enable]
alloc(newmem,64)
label(exit)

newmem:
//EAX is only 4 on a widthdrawl (where dupe takes place)
cmp eax, 000000004
je exit //If its 4, skip code &amp; cause a duplication
mov [edx+edi*4],eax

exit:
//Irrelevant code
pop edi
pop ebx
//Return back to code
jmp "RGSS100J.dll"+1A32D

"RGSS100J.dll"+1A328:
jmp newmem

[Disable]
dealloc(newmem)
"RGSS100J.dll"+1A328:
mov [edx+edi*4],eax
pop edi
pop ebx
//Alt: db 89 04 BA 5F 5B
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Exp Turn (Static) v Wild"</Description>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>00807354</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Exp turn (Static) v Trainer"</Description>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>008068D4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Exp Turn (Static) v Special"</Description>
      <Color>80000008</Color>
      <VariableType>2 Bytes</VariableType>
      <Address>00806714</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Exp Gain (Static) Wild"</Description>
      <Color>80000008</Color>
      <VariableType>Binary</VariableType>
      <BitStart>1</BitStart>
      <BitLength>32</BitLength>
      <ShowAsBinary>0</ShowAsBinary>
      <Address>00807C20</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Exp Gain (Static) Trainer"</Description>
      <Color>80000008</Color>
      <VariableType>Binary</VariableType>
      <BitStart>1</BitStart>
      <BitLength>32</BitLength>
      <ShowAsBinary>0</ShowAsBinary>
      <Address>008074E8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Exp Gain (Static) Special"</Description>
      <Color>80000008</Color>
      <VariableType>Binary</VariableType>
      <BitStart>1</BitStart>
      <BitLength>32</BitLength>
      <ShowAsBinary>0</ShowAsBinary>
      <Address>008074E8</Address>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Withdrawl :mov [edx+edi*4],eax</Description>
      <Address>1001A328</Address>
      <ModuleName>RGSS100J.dll</ModuleName>
      <ModuleNameOffset>1A328</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>18</Byte>
        <Byte>5E</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>04</Byte>
        <Byte>BA</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5B</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [edx+eax*4],ecx</Description>
      <Address>10030312</Address>
      <ModuleName>RGSS100J.dll</ModuleName>
      <ModuleNameOffset>30312</ModuleNameOffset>
      <Before>
        <Byte>17</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>52</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>0C</Byte>
        <Byte>82</Byte>
      </Actual>
      <After>
        <Byte>E9</Byte>
        <Byte>FD</Byte>
        <Byte>E4</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>BaseAddress</Name>
      <Address>02050000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
