<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <Files>
    <compact.lua Encoding="Ascii85">tyWEM/2DfO+?ylHAs0}yBiLC4y)_mFMzbkkZ-P3T90FrOStDDpObQg.ts8iMduK;W^?A#@@kA7B4mrb[H./G4^L?dBp35qF7H;O0,KT6%9_70GZfoGREKL*HYq6GgnHH7SCWsoo5sfvaTBMc!28M=TD$bWdrx3,P(26a[vxxz[F*9Ka3K6T#Is,4f%7gCmyskg[K-ZqvZ5Ix-tMl4cW*(Q$wu)^76t@6bLYqi*8/i@3xFy%UvWO{i+)InR2oOS+RU{pZwnJ5+Wu/KduXg5Da3HMNKu@8unZR?L(mB!xp:!c^=YTMrf][WNcMHTPuoGFTJ8jl1?xn)E-sZW1rWu!wZRIZl)y9Cth8t[O;S6%tqtOde9!fI@.uVTBtMHU=([t=?tg3BTANlnOthL!bm,(pfhh)D$$i0#4Af6tJKLoKN/5EF(69fwsjP+i0VVhH*@Eubt?S5Lqd76,X1[^O%A^SLD7U;uYdsVf6FJ+3+A$C4.UWAI)fucN!;R1$#.)uak!hloqHQ6f_q**m_Fu}o{c?XlvL=}e1amY5T!3mGaTuj1NV9Lc3C4Qe3VNQNzV$BMcxzn:/x7.L_$UgQ7PtgqtveuAx7mu6:LeV#)6L9s_t[PjFEULLXgO9^j:HYg/c(Ys2W!B.EoodLK#+hHF$syunpXFGa[)=Ao6%6%XaSPb5pI,m,0cjylQ/$}ll40f1#a/8+1^6B{:JRxY!_#D2L!.Y]*zk8C?EPI^YE,f.l}8:T*Zgw*WnD={,p1hBA+.[=.Y7]s,B715l]Fa$mn*3YEaoFw):CMNcN%xTP3@V/R4baHuJT#D,jXpPaQQWFSxkz4=_[_3!iDuwaM8w!q.0Zkz+uI#),a/s53O;U@HInzl90(*PY56$5FRNfQk36=Py2wP)_3.8bZT+^kd$Ug3N7?EH=Iv-sgK(PqITO2nhzpx#dLFbrb/UzA*z9f+e0EnDg@yQzt]%}c$7YuO@M[fYGidXAD,yoCv#ulC(GC+cZ8@qr%1KyuMP4Xs1221StS9v99qwU.BwH3E)g7HT336ms^sbn.U:CFk_L_4yD#H$M4T2*bPlmiTb#tB+z?w4P{TcLnNzRt_5u-Dqvu4+[;(80m{9]O^PB!=mxF%5Nq6=YXgW-cjuWvuo)[,v*8pw$qMdAhlJ];[^E(+#!^qUH@z=o/=qXjHqb1B(kc([iSPs1;mi!Q,cj(8N@xnS9Ozc1CEIDGX1,tYR(pv.Lw1{BM?T04C,,zdxe3omZo^2OSSR3.nsOXsB-X+5*TC#odB^xE,kGkH{1jF:q3,sm8]}R,m:%4PVHU_0pa=m{}p?lP0v-m2CL.r*]BY-vv5y_]fY7k*.gnQlbuWFXqGzYv6Fy)t10SMi9^MFP]9a*rTELIrc(ZaXL=huStv,)Xg3ln[+WR6dCiS3-?y)q(JucE]A)I:fEM2DcaCF0[)%{^p}rNG$HhHA1Mb{ta5VbtXrT5$8/6m@q1O2TNDs1(]T7J,pg-#$7[q8xMQ/m;$dLsdQ(4gmhqZ$W?,[jo$ppjV%);O.bJykwU.$JVdL$7#zRanriS:Th0%!Hi!#s3_zB=ot/ybwej6GKNgZJGUTNy6WQOSi+62f@TaZkAxR2MnwBX9RCsrbmD];:KQUV.QpFQ(}vDWLJ6K6,ga+wUD^c4ocOSYPC!ZnUpUIuZP84)4Q3Q,Vf(!43aNyP/{/3vDh?3T[mpE?Wk/x=O?tMR%DdLj0FbVZm]-$xA;0d8f.CrSGt{KihI9X+ct?j[(?kExXBg*@qMbY/,SspusdM5V=#Sf(W_!oF5]Cxbh%kO*E_=RR@B4SLTJT$8XG.BrTY?t$*HM.iZ?C9(R0cQw-Z*S:MrfOQ(J*XS$ObL?JpTg</compact.lua>
    <feedback.wav Encoding="Ascii85">i),D62:a7u3j*(Nj$y88xg]ol3:9lR42%p*VGInDwLu(f1[g#M%/K$6L6FpcAjxom!GYlekUqm]?V_pm.)uCVatRBN9_goIi6x0Zbqs6+3_N2-lfVb??^Ws2^Ey?R$zC^YbY4_R_A8OFosY6CUlxM22z,4V2T}vss_llEXaE2</feedback.wav>
    <sabotage.wav Encoding="Ascii85">by7QP6k!xS[nTSs+xk8zcN0)_+-2uw2/T:;QW;2U42Z8GMFQGPP_{Gbq(HYuj]^}S^))$N8yyj;GzlrhLgFY0ikkiM5Fw8lXMcdVxQBD@Db9V_Qo![.sj2A/XB#t?:kG1pbpQ(4!5QG$NSm0jv1fE3E4Eu^mJz^$(hQ:8)#Lc;ou9k2U{pS/0o/Kin9FoHCb+r,E,J?rP,qI]bg+[UjNnTe!1m)xR@3.tQMFNfy@PV{G,:n)NX$}$hguJZ7EQ$RzP^W0i^lPKCtzCCZJ;MtY*UDwm6{ZUzlnX-V#7gkNzubpuQ)#1Mx$Q];YS5AiF,SKEiQ#e/Wn]MqW0xz%QL8%z$?[?*Of[7,%o,?I=U+Xm/2B8q{0VQY@#e5HIfwmlrf?p=uNxrN@*[P._D.KXf(?s5BXGl(I32(t!:-IMTQH6[D-$YAG-zu:)@?t18O4Vbd1zTLXLGITWX)/^^neU;g/8Fa}kJccq:HxJ:**+l=vNU!0p%3o.Zgao8uQ}=GY(n5WA2=)N0]lca+*zoDCcRqnmhHuh]2,bOzi;Fq5;^Aym-Y,2wxgVN8AphHx?5a=U:571%%V@@^c(cBPT$s7LIBjcV[8oxJf3(RlyM5s4FW%ZF=t9+YN7g}v4xp)/FiK!UXW0^?MF</sabotage.wav>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>11151</ID>
      <Description>"INIT"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>28A028</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
if GetCEVersion()&lt;6.5 then showMessage('need ce 6.5+');error('!ce ver')end
if syntaxcheck then return end
function loadLuafromTableFileAndRun(n)
  local tf,err,loadsrc = findTableFile(n),tostring(n)..' not load from table file',_VERSION:match('5.3') and load or loadstring
  if tf==nil then tf = findTableFile(n..'.lua') end
  assert(tf~=nil, err)
  local st, ss = tf.Stream, createStringStream()
  ss.copyFrom(st,st.Size)
  local str = ss.DataString
  ss.Destroy()
  local ok, ret = pcall(loadsrc,str,'-')
  if not ok then error(err..', '..tostring(ret),2) end
  ok, ret = pcall(ret,n)
  if not ok then error(err..', '..tostring(ret),2) end
  return ret~=nil and ret or true
end

if not _compactLoaded then
  local function populateHKSound(s1,s2)--activate,deactivate
    if findTableFile(s1)and findTableFile(s2) then
      local al = GetAddressList()
      for i=1,al.Count do
        local mr = al[i-1]
        for j=1,mr.HotkeyCount do
          local hk = mr.Hotkey[j-1]
          hk.ActivateSound,hk.DeactivateSound = s1,s2
        end
      end
    end
  end

  populateHKSound('sabotage.wav','feedback.wav')

  pcall(loadLuafromTableFileAndRun,'compact.lua')
  _compactLoaded = true
end
[ENABLE]
[DISABLE]
if monopipe~=nil then monopipe.Destroy() ; monopipe=nil end

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>11152</ID>
          <Description>"level up Points (may need deactivate to leave LvUp Screen) HOTKEY /"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
if not readInteger'mono_domain_get' or 0==LaunchMonoDataCollector() then error"Can't Launch Mono." end
{$asm}

globalalloc(__,$4000,7ff00000)

[ENABLE]
//                                                                                               00 01 02 03 04 05 06
aobscanRegion(ptsUp,":LevelUp:ButtonHandler_ClickStat"+30,":LevelUp:ButtonHandler_ClickStat"+100,8b ?? ?? ?? 00 00 49 89 ?? ?? ?? 00 00)
aobscanRegion(ptsLg,":CharacterCreationLight:ButtonHandler_ClickStat"+30,":CharacterCreationLight:ButtonHandler_ClickStat"+100,8b ?? ?? ?? 00 00 49 89 ?? ?? ?? 00 00)
aobscanRegion(ptsC3,":CharacterCreation3:ButtonHandler_ClickStat"+30,":CharacterCreation3:ButtonHandler_ClickStat"+100,8b ?? ?? ?? 00 00 49 89 ?? ?? ?? 00 00)

ptsUp+06: // dec ecx -&gt; nop
db 90
ptsLg+06:
db 90
ptsC3+06:
db 90

[DISABLE]
aobscanRegion(ptsUp,":LevelUp:ButtonHandler_ClickStat"+30,":LevelUp:ButtonHandler_ClickStat"+100,8b ?? ?? ?? 00 00 90 89 ?? ?? ?? 00 00)
aobscanRegion(ptsLg,":CharacterCreationLight:ButtonHandler_ClickStat"+30,":CharacterCreationLight:ButtonHandler_ClickStat"+100,8b ?? ?? ?? 00 00 90 89 ?? ?? ?? 00 00)
aobscanRegion(ptsC3,":CharacterCreation3:ButtonHandler_ClickStat"+30,":CharacterCreation3:ButtonHandler_ClickStat"+100,8b ?? ?? ?? 00 00 90 89 ?? ?? ?? 00 00)

ptsUp+06: // nop -&gt; dec ecx
db 49
ptsLg+06:
db 49
ptsC3+06:
db 49

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>191</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>11165</ID>
          <Description>"Inf.Consumable"</Description>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
if not readInteger'mono_domain_get' or 0==LaunchMonoDataCollector() then error"Can't Launch Mono." end
{$asm}

globalalloc(__,$4000,7ff00000)
//
[ENABLE]
//                                                                                                 00 01 02 03 04 05 06 07
aobscanRegion(consume,":MapExplore:ConsumeSelectedItem"+800,":MapExplore:ConsumeSelectedItem"+2000,b8 ?? ?? ?? ?? c6 00 01)

consume+07:
db 00

[DISABLE]
aobscanRegion(consume,":MapExplore:ConsumeSelectedItem"+800,":MapExplore:ConsumeSelectedItem"+2000,b8 ?? ?? ?? ?? c6 00 00)

consume+07:
db 01

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11160</ID>
          <Description>"mov point  (activate before enter map, itm boost use normal move)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
if not readInteger'mono_domain_get' or 0==LaunchMonoDataCollector() then error"Can't Launch Mono." end

{$asm}

globalalloc(__,$4000,7ff00000)

define(cave,PlayerMovePoint)
define(hack,PlayerMvPt)

[ENABLE]

{$lua}
function I2aob(n)
  local t,r = dwordToByteTable(n),{}
  for i=1,#t do r[i]=string.format('%02X',t[i])end
  return table.concat(r,' ')
end

if autoAssemble[[
  define(actor_useMove,__+70)
  define(actor_baseMove,__+74)
  define(actor_useCarry,__+78)
  GETMONOSTRUCT(actor)
actor_useMove:
dd actor.useMove,actor.baseMove,actor.useCarry
]] then
  local useMove,baseMove = readInteger'__+70',readInteger'__+74'
  if autoAssemble(string.format([[
  aobScanRegion(PlayerMvPt,":MapExplore:SetActorStatus",":MapExplore:SetActorStatus"+200,8b ?? %s 89 ?? %s )
__+60:
  dq PlayerMvPt
]]  ,I2aob(baseMove),I2aob(useMove))) then
    return string.format('define(PlayerMvPt,0%X)\ndefine(actorCarry,0%X)\n',readQword'__+60',readInteger'__+78')
  else
    error('!move')
  end
end
{$asm}

alloc(PlayerMovePoint,$1000,__)
registersymbol(PlayerMovePoint)

GetmonoStruct(actor)
GetmonoStruct(MapExplore)

cave:
dd 6

cave+100:
dq cave,hack

cave+180:
readmem(hack,32)

cave+300:
reassemble(hack)
push eax
mov  [cave+60],eax // current actor base

push 5
pop  dword ptr[eax+actorCarry]

mov  eax,[ebp+0c]
mov  [cave+30],eax
mov  [cave+40],ecx
test eax,eax
jl   @f
cmp  eax,4
jge  @f
add  ecx,[cave]
@@:
mov  [cave+50],ecx
pop  eax
jmp  hack+06

hack:
jmp  cave+300
nop

[DISABLE]

[cave+108]:
readmem(cave+180,32)


dealloc(PlayerMovePoint)
unregistersymbol(PlayerMovePoint)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>11147</ID>
              <Description>"add"</Description>
              <Color>000000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>PlayerMovePoint</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11162</ID>
          <Description>"damage mul"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
if not readInteger'mono_domain_get' or 0==LaunchMonoDataCollector() then error"Can't Launch Mono." end

{$asm}

globalalloc(__,$4000,7ff00000)

define(cave,PlayerDmgMul)
define(hack,applydmg)

[ENABLE]

aobscanRegion(applydmg,":MapExplore:ApplyDamage",":MapExplore:ApplyDamage"+100,8b ?? 08 8b ?? 0c)

alloc(PlayerDmgMul,$1000,__)
registersymbol(PlayerDmgMul)

cave:
dd (float)2,(float)0.5

cave+100:
dq cave,hack

cave+180:
readmem(hack,32)

label(hostileTarget)
label(cont)
cave+300:
push  eax
  fild  dword ptr [ebp+10]
mov   eax,[ebp+0c]
test  eax,eax
jl    hostileTarget
cmp   eax,4
jge   hostileTarget
  fmul  dword ptr [cave+4]
jmp   cont
hostileTarget:
  fmul  dword ptr [cave]
cont:
  fistp dword ptr [ebp+10]
pop   eax
reassemble(hack)
reassemble(hack+3)
jmp  hack+06

hack:
jmp  cave+300
nop

[DISABLE]

[cave+108]:
readmem(cave+180,32)


dealloc(PlayerDmgMul)
unregistersymbol(PlayerDmgMul)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>11163</ID>
              <Description>"from player"</Description>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerDmgMul</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>11164</ID>
              <Description>"to player"</Description>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerDmgMul+4</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11168</ID>
          <Description>"min key/money (during map explore)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>28A028</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
if not readInteger'mono_domain_get' or 0==LaunchMonoDataCollector() then error"Can't Launch Mono." end

{$asm}

globalalloc(__,$4000,7ff00000)

define(cave,OnGuiExplore)
define(hack,ongui)

[ENABLE]
aobScanRegion(addkey,":MapExplore:AddKey",":MapExplore:AddKey"+50,8b 05 ?? ?? ?? ?? 89)

aobScanRegion(ongui,":MapExplore:OnGUI",":MapExplore:OnGUI"+100,8b ?? ?? 83 ec 0c)

globalalloc(ProgressPage,8)

ProgressPage:
dq addkey+02

alloc(OnGuiExplore,$1000,__)
registersymbol(OnGuiExplore)

GetmonoStruct(Progress)

cave:
dd #10,#5000

cave+100:
dq cave,hack

cave+180:
readmem(hack,32)

label(skip)
cave+300:
push eax
push edi
mov  edi,[ProgressPage]
cmp  edi,10000
jle  skip
mov  edi,[edi]
mov  edi,[edi]
mov  eax,[cave]
cmp  [edi+Progress.kNor],eax
jge  @f
mov  [edi+Progress.kNor],eax
@@:
cmp  [edi+Progress.kRar],eax
jge  @f
mov  [edi+Progress.kRar],eax
@@:
cmp  [edi+Progress.kPre],eax
jge  @f
mov  [edi+Progress.kPre],eax
@@:
mov  eax,[cave+04]//money
cmp  [edi+Progress.Money],eax
jge  @f
mov  [edi+Progress.Money],eax
@@:

skip:
pop  edi
pop  eax

reassemble(hack)
reassemble(hack+03)
jmp  hack+06

hack:
jmp  cave+300
nop

[DISABLE]

[cave+108]:
readmem(cave+180,32)


dealloc(OnGuiExplore)
unregistersymbol(OnGuiExplore)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>11169</ID>
              <Description>"min key"</Description>
              <Color>000000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>OnGuiExplore</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>11170</ID>
              <Description>"min money"</Description>
              <Color>000000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>OnGuiExplore+04</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>11161</ID>
      <Description>"IGNORE"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>__</Name>
      <Address>7FFF0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ProgressPage</Name>
      <Address>7FFF4000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
