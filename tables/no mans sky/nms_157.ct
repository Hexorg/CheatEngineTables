<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Sell items worth x10 credits"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2016-08-12
  Author : Usuario

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(VenderObjeto,NMS.exe,01 91 F4 00 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+463915)

label(code)
label(return)

newmem:

code:
  add [rcx+000000F4],edx
  add [rcx+000000F4],edx
  add [rcx+000000F4],edx
  add [rcx+000000F4],edx
  add [rcx+000000F4],edx
  add [rcx+000000F4],edx
  add [rcx+000000F4],edx
  add [rcx+000000F4],edx
  add [rcx+000000F4],edx
  add [rcx+000000F4],edx
  jmp return

VenderObjeto:
  jmp code
  nop
return:
registersymbol(VenderObjeto)

[DISABLE]

VenderObjeto:
  db 01 91 F4 00 00 00

unregistersymbol(VenderObjeto)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+463915

"NMS.exe"+4638FB: 5B                    -  pop rbx
"NMS.exe"+4638FC: C3                    -  ret 
"NMS.exe"+4638FD: CC                    -  int 3 
"NMS.exe"+4638FE: CC                    -  int 3 
"NMS.exe"+4638FF: CC                    -  int 3 
"NMS.exe"+463900: 40 53                 -  push rbx
"NMS.exe"+463902: 48 83 EC 40           -  sub rsp,40
"NMS.exe"+463906: 48 8B 05 C3 AA 0C 01  -  mov rax,[NMS.exe+152E3D0]
"NMS.exe"+46390D: 48 33 C4              -  xor rax,rsp
"NMS.exe"+463910: 48 89 44 24 30        -  mov [rsp+30],rax
// ---------- INJECTING HERE ----------
"NMS.exe"+463915: 01 91 F4 00 00 00     -  add [rcx+000000F4],edx
// ---------- DONE INJECTING  ----------
"NMS.exe"+46391B: 48 8B 05 D6 9C ED 00  -  mov rax,[NMS.exe+133D5F8]
"NMS.exe"+463922: 48 8B D9              -  mov rbx,rcx
"NMS.exe"+463925: 48 89 44 24 20        -  mov [rsp+20],rax
"NMS.exe"+46392A: 48 8B 05 CF 9C ED 00  -  mov rax,[NMS.exe+133D600]
"NMS.exe"+463931: 48 8D 4C 24 20        -  lea rcx,[rsp+20]
"NMS.exe"+463936: 48 89 44 24 28        -  mov [rsp+28],rax
"NMS.exe"+46393B: 33 C0                 -  xor eax,eax
"NMS.exe"+46393D: 48 89 44 24 26        -  mov [rsp+26],rax
"NMS.exe"+463942: 66 89 44 24 2E        -  mov [rsp+2E],ax
"NMS.exe"+463947: E8 C8 74 9D 00        -  call NMS.exe+E3AE14
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Buy items = Add credits instead substract"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2016-08-12
  Author : Usuario

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RestarCreditsAlComprar,NMS.exe,29 91 F4 00 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+463875)

label(code)
label(return)

newmem:

code:
  add [rcx+000000F4],edx
  jmp return

RestarCreditsAlComprar:
  jmp code
  nop
return:
registersymbol(RestarCreditsAlComprar)

[DISABLE]

RestarCreditsAlComprar:
  db 29 91 F4 00 00 00

unregistersymbol(RestarCreditsAlComprar)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+463875

"NMS.exe"+46385B: CC                    -  int 3 
"NMS.exe"+46385C: CC                    -  int 3 
"NMS.exe"+46385D: CC                    -  int 3 
"NMS.exe"+46385E: CC                    -  int 3 
"NMS.exe"+46385F: CC                    -  int 3 
"NMS.exe"+463860: 40 53                 -  push rbx
"NMS.exe"+463862: 48 83 EC 40           -  sub rsp,40
"NMS.exe"+463866: 48 8B 05 63 AB 0C 01  -  mov rax,[NMS.exe+152E3D0]
"NMS.exe"+46386D: 48 33 C4              -  xor rax,rsp
"NMS.exe"+463870: 48 89 44 24 30        -  mov [rsp+30],rax
// ---------- INJECTING HERE ----------
"NMS.exe"+463875: 29 91 F4 00 00 00     -  sub [rcx+000000F4],edx
// ---------- DONE INJECTING  ----------
"NMS.exe"+46387B: 8B 81 F4 00 00 00     -  mov eax,[rcx+000000F4]
"NMS.exe"+463881: 48 8B D9              -  mov rbx,rcx
"NMS.exe"+463884: B9 00 00 00 00        -  mov ecx,00000000
"NMS.exe"+463889: 0F 48 C1              -  cmovs eax,ecx
"NMS.exe"+46388C: 89 83 F4 00 00 00     -  mov [rbx+000000F4],eax
"NMS.exe"+463892: 48 8B 05 5F 9D ED 00  -  mov rax,[NMS.exe+133D5F8]
"NMS.exe"+463899: 48 89 44 24 20        -  mov [rsp+20],rax
"NMS.exe"+46389E: 48 8B 05 5B 9D ED 00  -  mov rax,[NMS.exe+133D600]
"NMS.exe"+4638A5: 48 89 44 24 28        -  mov [rsp+28],rax
"NMS.exe"+4638AA: 48 89 4C 24 26        -  mov [rsp+26],rcx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Build/Sell =  Add materials instead substract"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2016-08-12
  Author : Usuario

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(BuildItems,NMS.exe,44 2B C1 45 89 41 18) // should be unique
alloc(newmem,$1000,"NMS.exe"+45F130)

label(code)
label(return)

newmem:

code:
  add r8d,ecx
  mov [r9+18],r8d
  jmp return

BuildItems:
  jmp code
  nop
  nop
return:
registersymbol(BuildItems)

[DISABLE]

BuildItems:
  db 44 2B C1 45 89 41 18

unregistersymbol(BuildItems)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+45F130

"NMS.exe"+45F109: 49 0F 47 DD                       -  cmova rbx,r13
"NMS.exe"+45F10D: 48 8B C7                          -  mov rax,rdi
"NMS.exe"+45F110: 48 85 DB                          -  test rbx,rbx
"NMS.exe"+45F113: 74 30                             -  je NMS.exe+45F145
"NMS.exe"+45F115: 66 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"NMS.exe"+45F120: 4C 8B 08                          -  mov r9,[rax]
"NMS.exe"+45F123: 45 8B 41 18                       -  mov r8d,[r9+18]
"NMS.exe"+45F127: 8B CD                             -  mov ecx,ebp
"NMS.exe"+45F129: 44 3B C5                          -  cmp r8d,ebp
"NMS.exe"+45F12C: 41 0F 4C C8                       -  cmovl ecx,r8d
// ---------- INJECTING HERE ----------
"NMS.exe"+45F130: 41 29 C8                          -  sub r8d,ecx
"NMS.exe"+45F133: 45 89 41 18                       -  mov [r9+18],r8d
// ---------- DONE INJECTING  ----------
"NMS.exe"+45F137: 2B E9                             -  sub ebp,ecx
"NMS.exe"+45F139: 48 8D 40 08                       -  lea rax,[rax+08]
"NMS.exe"+45F13D: 49 FF C2                          -  inc r10
"NMS.exe"+45F140: 4C 3B D3                          -  cmp r10,rbx
"NMS.exe"+45F143: 75 DB                             -  jne NMS.exe+45F120
"NMS.exe"+45F145: 48 85 FF                          -  test rdi,rdi
"NMS.exe"+45F148: 74 1A                             -  je NMS.exe+45F164
"NMS.exe"+45F14A: 41 83 C8 FF                       -  or r8d,-01
"NMS.exe"+45F14E: 48 8B D7                          -  mov rdx,rdi
"NMS.exe"+45F151: E8 3A B0 77 00                    -  call NMS.exe+BDA190
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Recharge components = Add materials instead substract"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2016-08-13
  Author : Usuario

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UseMaterialToCharge,NMS.exe,F3 0F 2C C0 29 47 18) // should be unique
alloc(newmem,$1000,"NMS.exe"+460F70)

label(code)
label(return)

newmem:

code:
  cvttss2si eax,xmm0
  add [rdi+18],eax
  jmp return

UseMaterialToCharge:
  jmp code
  nop
  nop
return:
registersymbol(UseMaterialToCharge)

[DISABLE]

UseMaterialToCharge:
  db F3 0F 2C C0 29 47 18

unregistersymbol(UseMaterialToCharge)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+460F70

"NMS.exe"+460F4C: 44 0F 4C F0              -  cmovl r14d,eax
"NMS.exe"+460F50: 66 41 0F 6E F6           -  movd xmm6,r14d
"NMS.exe"+460F55: 0F 5B C9                 -  cvtdq2ps xmm1,xmm1
"NMS.exe"+460F58: 43 8D 04 37              -  lea eax,[r15+r14]
"NMS.exe"+460F5C: 89 46 18                 -  mov [rsi+18],eax
"NMS.exe"+460F5F: 0F 5B F6                 -  cvtdq2ps xmm6,xmm6
"NMS.exe"+460F62: 0F 28 C6                 -  movaps xmm0,xmm6
"NMS.exe"+460F65: F3 0F 5E C1              -  divss xmm0,xmm1
"NMS.exe"+460F69: E8 A2 9C D5 00           -  call NMS.exe+11BAC10
"NMS.exe"+460F6E: 8B DD                    -  mov ebx,ebp
// ---------- INJECTING HERE ----------
"NMS.exe"+460F70: F3 0F 2C C0              -  cvttss2si eax,xmm0
"NMS.exe"+460F74: 29 47 18                 -  sub [rdi+18],eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+460F77: 4C 8B 35 8A A7 1C 01     -  mov r14,[NMS.exe+162B708]
"NMS.exe"+460F7E: 4D 8D BE 10 76 2F 00     -  lea r15,[r14+002F7610]
"NMS.exe"+460F85: 85 DB                    -  test ebx,ebx
"NMS.exe"+460F87: 75 06                    -  jne NMS.exe+460F8F
"NMS.exe"+460F89: 44 8D 43 08              -  lea r8d,[rbx+08]
"NMS.exe"+460F8D: EB 18                    -  jmp NMS.exe+460FA7
"NMS.exe"+460F8F: 83 FB 02                 -  cmp ebx,02
"NMS.exe"+460F92: 75 06                    -  jne NMS.exe+460F9A
"NMS.exe"+460F94: 44 8D 43 13              -  lea r8d,[rbx+13]
"NMS.exe"+460F98: EB 0D                    -  jmp NMS.exe+460FA7
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Every material recollected worth x5"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2016-08-12
  Author : Usuario

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CollectMinerals,NMS.exe,44 01 70 18 49 8B 04 24) // should be unique
alloc(newmem,$1000,"NMS.exe"+45EAEA)

label(code)
label(return)

newmem:

code:
  add r14d,r14d
  add r14d,r14d
  add r14d,r14d
  add r14d,r14d
  add [rax+18],r14d
  mov rax,[r12]
  jmp return

CollectMinerals:
  jmp code
  nop
  nop
  nop
return:
registersymbol(CollectMinerals)

[DISABLE]

CollectMinerals:
  db 44 01 70 18 49 8B 04 24

unregistersymbol(CollectMinerals)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+45EAEA

"NMS.exe"+45EACB: 3B C3                       -  cmp eax,ebx
"NMS.exe"+45EACD: 44 0F 4C F0                 -  cmovl r14d,eax
"NMS.exe"+45EAD1: 45 84 E4                    -  test r12l,r12l
"NMS.exe"+45EAD4: 75 4A                       -  jne NMS.exe+45EB20
"NMS.exe"+45EAD6: 4C 8D 67 1C                 -  lea r12,[rdi+1C]
"NMS.exe"+45EADA: 49 8B D4                    -  mov rdx,r12
"NMS.exe"+45EADD: 49 8B CF                    -  mov rcx,r15
"NMS.exe"+45EAE0: E8 CB 74 FE FF              -  call NMS.exe+445FB0
"NMS.exe"+45EAE5: 48 85 C0                    -  test rax,rax
"NMS.exe"+45EAE8: 74 04                       -  je NMS.exe+45EAEE
// ---------- INJECTING HERE ----------
"NMS.exe"+45EAEA: 44 01 70 18                 -  add [rax+18],r14d
"NMS.exe"+45EAEE: 49 8B 04 24                 -  mov rax,[r12]
// ---------- DONE INJECTING  ----------
"NMS.exe"+45EAF2: 48 89 45 B8                 -  mov [rbp-48],rax
"NMS.exe"+45EAF6: C7 45 C0 00 00 00 00        -  mov [rbp-40],00000000
"NMS.exe"+45EAFD: 49 8D 4F 40                 -  lea rcx,[r15+40]
"NMS.exe"+45EB01: 48 8D 55 B8                 -  lea rdx,[rbp-48]
"NMS.exe"+45EB05: E8 D6 CA 00 00              -  call NMS.exe+46B5E0
"NMS.exe"+45EB0A: F3 0F 10 05 62 39 1C 01     -  movss xmm0,[NMS.exe+1622474]
"NMS.exe"+45EB12: F3 41 0F 11 85 34 06 00 00  -  movss [r13+00000634],xmm0
"NMS.exe"+45EB1B: 44 0F B6 65 60              -  movzx r12d,byte ptr [rbp+60]
"NMS.exe"+45EB20: 41 2B DE                    -  sub ebx,r14d
"NMS.exe"+45EB23: 4C 8B 75 D0                 -  mov r14,[rbp-30]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
