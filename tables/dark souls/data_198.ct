<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>10</ID>
      <Description>"DISABLE Xlive (by Geri)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//A script to disable Xlive's memory check protection
//Made by Geri with Cheat Engine 6.0
//18th May, 2011
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(xlivekiller)
registersymbol(xlivekiller)
aobscan(aobxlive,74 14 FF 75 14 8B CE FF 75 10 53 E8 * * * * 8B F8 85 FF)

aobxlive:
xlivekiller:
db EB 14

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
xlivekiller:
db 74 14
unregistersymbol(xlivekiller)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Enable Table"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
globalalloc(pArrow,4)
globalalloc(pHeroB,4)
globalalloc(pHumanity,4)
globalalloc(pItem,4)
globalalloc(pHItem,4)
globalalloc(pFlask,4)
globalalloc(pHero,4)
globalalloc(assignElementSwirch,4)
globalalloc(rIID,4)
globalalloc(tIID,4)
globalalloc(tAX,4)
globalalloc(tDX,4)

alloc(newmem41,2048) //2kb should be enough
label(returnhere41)
label(originalcode41)
label(exit41)

newmem41: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHItem],esi

originalcode41:
push ecx
mov ecx,[esi+04]
push ecx

exit41:
jmp returnhere41

"DATA.exe"+8907B5:
jmp newmem41
returnhere41:

alloc(newmem32,2048) //2kb should be enough
label(returnhere32)
label(originalcode32)
label(exit32)

newmem32: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pArrow],eax

originalcode32:
mov eax,[eax+08]
pop edi
ret 

exit32:
jmp returnhere32

///
pArrow:
dd 0
///

"DATA.exe"+832129:
jmp newmem32
returnhere32:

alloc(newmem24,2048) //2kb should be enough
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHeroB],esi

originalcode24:
mov edi,[esi+0000008C]

exit24:
jmp returnhere24

///
pHeroB:
dd 0
///

"DATA.exe"+823AE4:
jmp newmem24
nop
returnhere24:

alloc(newmem17,2048) //2kb should be enough
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ebp+000001D0],edx

mov [pHumanity],ebx

originalcode17:
//mov [ebp+000001D0],edx

exit17:
jmp returnhere17

///
pHumanity:
dd 0
///

"DATA.exe"+B269DE:
jmp newmem17
nop
returnhere17:

alloc(newmem11,2048) //2kb should be enough
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pItem],edi

originalcode11:
mov esi,[edi+08]
mov edx,eax

exit11:
jmp returnhere11

///
pItem:
dd 0
///

"DATA.exe"+8A9D3F:
jmp newmem11
returnhere11:

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)
label(set0)
label(set1)
label(set2)
label(set3)
label(set4)
label(set5)
label(set6)
label(set7)
label(set8)
label(set9)
label(setP0)
label(setP5)
label(setP10)
label(setP15)
label(assignElement)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHItem],eax

cmp [assignElementSwirch],1
jne originalcode6

cmp [eax],0
jne originalcode6

pushad
mov eax,[pHItem]
mov eax,[eax+4]
mov [tIID],eax
mov ecx,#100000
xor edx,edx
div ecx
mov [tAX],eax
mov [tDX],edx
popad
cmp [tAX],#1
jl originalcode6
cmp [tAX],#17
jg originalcode6

pushad
mov eax,[tDX]
mov ecx,#100
xor edx,edx
div ecx
//mov [tAX],eax
mov [tDX],edx
sub [tIID],edx
mov eax,[tIID]
mov ecx,#1000
xor edx,edx
div ecx
//mov [tAX],eax
mov [tAX],edx
sub [tIID],edx
popad

pushad
push 60      //key numpad 0
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je set0

pushad
push 61      //key numpad 1
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je set1

pushad
push 62      //key numpad 2
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je set2

pushad
push 63      //key numpad 3
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je set3

pushad
push 64      //key numpad 4
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je set4

pushad
push 65      //key numpad 5
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je set5

pushad
push 66      //key numpad 6
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je set6

pushad
push 67      //key numpad 7
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je set7

pushad
push 68      //key numpad 8
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je set8

pushad
push 69      //key numpad 9
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je set9

pushad
push 31      //key 1
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setP0

pushad
push 32      //key 2
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setP5

pushad
push 33      //key 3
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setP10

pushad
push 34      //key 4
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setP15

jmp assignElement

set0:
mov [tAX],0
jmp assignElement

set1:
mov [tAX],#100
jmp assignElement

set2:
mov [tAX],#200
jmp assignElement

set3:
mov [tAX],#300
jmp assignElement

set4:
mov [tAX],#400
jmp assignElement

set5:
mov [tAX],#500
jmp assignElement

set6:
mov [tAX],#600
jmp assignElement

set7:
mov [tAX],#700
jmp assignElement

set8:
mov [tAX],#800
jmp assignElement

set9:
mov [tAX],#900
jmp assignElement

setP0:
mov [tDX],0
jmp assignElement

setP5:
mov [tDX],#5
jmp assignElement

setP10:
mov [tDX],#10
jmp assignElement

setP15:
mov [tDX],#15
jmp assignElement

assignElement:
//mov edx,[tDX]
//sub [eax+4],edx
mov edx,[tIID]
add edx,[tAX]
add edx,[tDX]
//mov [rIID],edx
mov [eax+4],edx

originalcode6:
mov edx,[eax+14]
xor eax,eax

exit6:
jmp returnhere6

///
pHItem:
dd 0
assignElementSwirch:
dd 0
rIID:
dd 0
tIID:
dd 0
tAX:
dd 0
tDX:
dd 0
///

"DATA.exe"+8C84E7:
jmp newmem6
returnhere6:

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[esp+14]
mov [pFlask],ecx

originalcode2:
//mov ecx,[esp+14]
mov eax,[ecx+08]

exit2:
jmp returnhere2

///
pFlask:
dd 0
///

"DATA.exe"+B271AE:
jmp newmem2
nop
nop
returnhere2:

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHero],esi

originalcode:
cmp dword ptr [esi+000002D4],00

exit:
jmp returnhere

///
pHero:
dd 0
///

"DATA.exe"+BA42AE:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem41)
"DATA.exe"+8907B5:
db 51 8B 4E 04 51
//Alt: push ecx
//Alt: mov ecx,[esi+04]
//Alt: push ecx
dealloc(newmem32)
"DATA.exe"+832129:
db 8B 40 08 5F C3
//Alt: mov eax,[eax+08]
//Alt: pop edi
//Alt: ret
dealloc(newmem24)
"DATA.exe"+823AE4:
db 8B BE 8C 00 00 00
//Alt: mov edi,[esi+0000008C]
dealloc(newmem17)
"DATA.exe"+B269DE:
db 89 95 D0 01 00 00
//Alt: mov [ebp+000001D0],edx
dealloc(newmem11)
"DATA.exe"+8A9D3F:
db 8B 77 08 8B D0
//Alt: mov esi,[edi+08]
//Alt: mov edx,eax
dealloc(newmem6)
"DATA.exe"+8C84E7:
db 8B 50 14 33 C0
//Alt: mov edx,[eax+14]
//Alt: xor eax,eax
dealloc(newmem2)
"DATA.exe"+B271AE:
db 8B 4C 24 14 8B 41 08
//Alt: mov ecx,[esp+14]
//Alt: mov eax,[ecx+08]
dealloc(newmem)
"DATA.exe"+BA42AE:
db 83 BE D4 02 00 00 00
//Alt: cmp dword ptr [esi+000002D4],00
dealloc(pFlask)
dealloc(pHero)
dealloc(pHItem)
dealloc(pItem)
dealloc(pHumanity)
dealloc(pHeroB)
dealloc(pArrow)
dealloc(assignElementSwirch)
dealloc(rIID)
dealloc(tIID)
dealloc(tAX)
dealloc(tDX)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>22</ID>
          <Description>"== Scripts ========"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Undead"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHero],ebp
jne originalcode

cmp eax,1
jge originalcode
mov eax,1

originalcode:
mov [ebp+000002D4],eax

exit:
jmp returnhere

"DATA.exe"+A91BED:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DATA.exe"+A91BED:
db 89 85 D4 02 00 00
//Alt: mov [ebp+000002D4],eax
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>40</ID>
              <Description>"Undead + One Hit Kill"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(doOneHitKill)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHero],ebp
jne doOneHitKill

cmp eax,1
jge originalcode
mov eax,1
jmp originalcode

doOneHitKill:
cmp [ebp+000002D4],eax
jle originalcode
mov eax,0

originalcode:
mov [ebp+000002D4],eax

exit:
jmp returnhere

"DATA.exe"+A91BED:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DATA.exe"+A91BED:
db 89 85 D4 02 00 00
//Alt: mov [ebp+000002D4],eax
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>20</ID>
              <Description>"Inf. Stamina"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHero],edx
jne originalcode2
mov eax,[edx+000002E8]

originalcode2:
mov [edx+000002E4],eax

exit2:
jmp returnhere2

"DATA.exe"+A90C7A:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"DATA.exe"+A90C7A:
db 89 82 E4 02 00 00
//Alt: mov [edx+000002E4],eax
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"Inf. Humanity"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"DATA.exe"+97344A:
db 8B
"DATA.exe"+980B44:
db 8B

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
"DATA.exe"+97344A:
db 89
"DATA.exe"+980B44:
db 89
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"Inf. Item Usage"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(doUsingCheck)
globalalloc(allItemSwitch,4)
globalalloc(minItem,4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [allItemSwitch],1
je doUsingCheck

cmp [pItem],ecx
je doUsingCheck
cmp [pArrow],ecx
je doUsingCheck

jmp originalcode

doUsingCheck:
cmp edx,[minItem]
jge originalcode
mov edx,[minItem]

originalcode:
mov [ecx+08],edx
mov eax,edx

exit:
jmp returnhere

///
allItemSwitch:
dd 1
minItem:
dd 3
///

"DATA.exe"+830F76:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DATA.exe"+830F76:
db 89 51 08 8B C2
//Alt: mov [ecx+08],edx
//Alt: mov eax,edx
dealloc(allItemSwitch)
dealloc(minItem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>69</ID>
                  <Description>"All Items Switch (1 = All, 0 = Equiped Only)"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>allItemSwitch</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>70</ID>
                  <Description>"Minimum Item Quantity"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>minItem</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>73</ID>
              <Description>"Inf. Spell (12 slots)"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"DATA.exe"+82F1C2:              //1
db 8B
"DATA.exe"+82F1E7:              //2
db 8B
"DATA.exe"+82F20B:              //3
db 8B
"DATA.exe"+82F22D:              //4
db 8B
"DATA.exe"+82F24F:              //5
db 8B
"DATA.exe"+82F271:              //6
db 8B

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
"DATA.exe"+82F1C2:              //1
db 89
"DATA.exe"+82F1E7:              //2
db 89
"DATA.exe"+82F20B:              //3
db 89
"DATA.exe"+82F22D:              //4
db 89
"DATA.exe"+82F24F:              //5
db 89
"DATA.exe"+82F271:              //6
db 89
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>67</ID>
              <Description>"Inf. Spell V2 (12 slots)"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem24,2048) //2kb should be enough
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx+20],edx
jle originalcode24
mov edx,[ecx+20]

originalcode24:
cmp edx,ebx
mov [ecx+20],edx

exit24:
jmp returnhere24

"DATA.exe"+82F26F:
jmp newmem24
returnhere24:

alloc(newmem17,2048) //2kb should be enough
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx+18],edx
jle originalcode17
mov edx,[ecx+18]

originalcode17:
cmp edx,ebx
mov [ecx+18],edx

exit17:
jmp returnhere17

"DATA.exe"+82F24D:
jmp newmem17
returnhere17:

alloc(newmem11,2048) //2kb should be enough
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx+10],edx
jle originalcode11
mov edx,[ecx+10]

originalcode11:
cmp edx,ebx
mov [ecx+10],edx

exit11:
jmp returnhere11

"DATA.exe"+82F22B:
jmp newmem11
returnhere11:

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx+08],edx
jle originalcode6
mov edx,[ecx+08]

originalcode6:
cmp edx,ebx
mov [ecx+08],edx

exit6:
jmp returnhere6

"DATA.exe"+82F209:
jmp newmem6
returnhere6:

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
add edx,esi
cmp [ecx],edx
jle originalcode2
mov edx,[ecx]

originalcode2:
//add edx,esi
cmp edx,ebx
mov [ecx],edx

exit2:
jmp returnhere2

"DATA.exe"+82F1E3:
jmp newmem2
nop
returnhere2:

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx-08],edx
jle originalcode
mov edx,[ecx-08]

originalcode:
cmp edx,ebx
mov [ecx-08],edx

exit:
jmp returnhere

"DATA.exe"+82F1C0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem24)
"DATA.exe"+82F26F:
db 3B D3 89 51 20
//Alt: cmp edx,ebx
//Alt: mov [ecx+20],edx
dealloc(newmem17)
"DATA.exe"+82F24D:
db 3B D3 89 51 18
//Alt: cmp edx,ebx
//Alt: mov [ecx+18],edx
dealloc(newmem11)
"DATA.exe"+82F22B:
db 3B D3 89 51 10
//Alt: cmp edx,ebx
//Alt: mov [ecx+10],edx
dealloc(newmem6)
"DATA.exe"+82F209:
db 3B D3 89 51 08
//Alt: cmp edx,ebx
//Alt: mov [ecx+08],edx
dealloc(newmem2)
"DATA.exe"+82F1E3:
db 03 D6 3B D3 89 11
//Alt: add edx,esi
//Alt: cmp edx,ebx
//Alt: mov [ecx],edx
dealloc(newmem)
"DATA.exe"+82F1C0:
db 3B D3 89 51 F8
//Alt: cmp edx,ebx
//Alt: mov [ecx-08],edx
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"Inf. Durability"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [eax+14],edx
jle originalcode2
mov edx,[eax+14]

originalcode2:
mov [eax+14],edx
mov al,01

exit2:
jmp returnhere2

"DATA.exe"+83057A:
jmp newmem2
returnhere2:

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+14],edx
jle originalcode
mov edx,[ebx+14]

originalcode:
mov [ebx+14],edx
cmp esi,[ecx+10]

exit:
jmp returnhere

"DATA.exe"+8304BD:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"DATA.exe"+83057A:
db 89 50 14 B0 01
//Alt: mov [eax+14],edx
//Alt: mov al,01
dealloc(newmem)
"DATA.exe"+8304BD:
db 89 53 14 3B 71 10
//Alt: mov [ebx+14],edx
//Alt: cmp esi,[ecx+10]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>64</ID>
              <Description>"Inf. Souls"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHeroB],edx
jne originalcode6
cmp [edx+0000008C],eax
jle originalcode6
mov eax,[edx+0000008C]

originalcode6:
mov [edx+0000008C],eax

exit6:
jmp returnhere6

"DATA.exe"+876D46:
jmp newmem6
nop
returnhere6:

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHeroB],ecx
jne originalcode2

cmp [ecx+0000008C],eax
jle originalcode2
mov eax,[ecx+0000008C]

originalcode2:
mov [ecx+0000008C],eax

exit2:
jmp returnhere2

"DATA.exe"+87A743:
jmp newmem2
nop
returnhere2:

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHeroB],edi
jne originalcode

cmp [edi+0000008C],edx
jle originalcode
mov edx,[edi+0000008C]

originalcode:
mov [edi+0000008C],edx

exit:
jmp returnhere

"DATA.exe"+BD71F0:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
"DATA.exe"+876D46:
db 89 82 8C 00 00 00
//Alt: mov [edx+0000008C],eax
dealloc(newmem2)
"DATA.exe"+87A743:
db 89 81 8C 00 00 00
//Alt: mov [ecx+0000008C],eax
dealloc(newmem)
"DATA.exe"+BD71F0:
db 89 97 8C 00 00 00
//Alt: mov [edi+0000008C],edx
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>84</ID>
              <Description>"Assign Element/Upgrade (see Table Extra)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>assignElementSwirch</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>107</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>109</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"== Pointers ======="</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>54</ID>
              <Description>"[Hero's Stats]"</Description>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>13</ID>
                  <Description>"HP"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHero</Address>
                  <Offsets>
                    <Offset>2D4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"Stamina"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHero</Address>
                  <Offsets>
                    <Offset>2E4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>16</ID>
                  <Description>"Max HP"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>14</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>18</ID>
                  <Description>"Max Stamina"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>30</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>57</ID>
                  <Description>"Vitality"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>38</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>63</ID>
                  <Description>"Attunement"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>62</ID>
                  <Description>"Endurance"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>48</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>60</ID>
                  <Description>"Strength"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>50</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>59</ID>
                  <Description>"Dexterity"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>58</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>61</ID>
                  <Description>"Resistance"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>80</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>58</ID>
                  <Description>"Intelligence"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>60</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>56</ID>
                  <Description>"Faith"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>68</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>49</ID>
                  <Description>"Humanity"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHumanity</Address>
                  <Offsets>
                    <Offset>7C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>81</ID>
                  <Description>"Soul Level"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>88</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>53</ID>
                  <Description>"Souls"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>8C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>85</ID>
              <Description>"[Hero's Appearance] (see Table Extra)"</Description>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>93</ID>
                  <Description>"Sex"</Description>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>C2</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>92</ID>
                  <Description>"Hair Style - Master"</Description>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>10D</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>98</ID>
                  <Description>"Hair Style"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroB</Address>
                  <Offsets>
                    <Offset>27C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>95</ID>
                  <Description>"[Hair Color]"</Description>
                  <Color>80000008</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>99</ID>
                      <Description>"Master"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pHeroB</Address>
                      <Offsets>
                        <Offset>10E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>94</ID>
                      <Description>"Red"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pHeroB</Address>
                      <Offsets>
                        <Offset>380</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>96</ID>
                      <Description>"Green"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pHeroB</Address>
                      <Offsets>
                        <Offset>384</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>97</ID>
                      <Description>"Blue"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pHeroB</Address>
                      <Offsets>
                        <Offset>388</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>91</ID>
                  <Description>"[Physique]"</Description>
                  <Color>80000008</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>100</ID>
                      <Description>"Master"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pHeroB</Address>
                      <Offsets>
                        <Offset>C7</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>86</ID>
                      <Description>"Head"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pHeroB</Address>
                      <Offsets>
                        <Offset>2AC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>87</ID>
                      <Description>"Chest"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pHeroB</Address>
                      <Offsets>
                        <Offset>2B0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>88</ID>
                      <Description>"Waist"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pHeroB</Address>
                      <Offsets>
                        <Offset>2B4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>89</ID>
                      <Description>"Hands"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pHeroB</Address>
                      <Offsets>
                        <Offset>2B8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>90</ID>
                      <Description>"Legs"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pHeroB</Address>
                      <Offsets>
                        <Offset>2BC</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>75</ID>
              <Description>"[Item Mod] (highlighted item in the Inventory menu or Equipment menu)"</Description>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>76</ID>
                  <Description>"Item Category"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>4</ByteLength>
                  <Address>pHItem</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>83</ID>
                  <Description>"ID"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHItem</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>77</ID>
                  <Description>"Quantity"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHItem</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>82</ID>
                  <Description>"Index &amp; Sort Value"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHItem</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>80</ID>
                  <Description>"Unknown"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHItem</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>38</ID>
                  <Description>"Durability"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHItem</Address>
                  <Offsets>
                    <Offset>14</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>55</ID>
              <Description>"[Misc.]"</Description>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"Estus Flask Quantity"</Description>
                  <Color>80000008</Color>
                  <VariableType>2 Bytes</VariableType>
                  <Address>pFlask</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>72</ID>
                  <Description>"Equipped Arrow Quantity"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pArrow</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>48</ID>
                  <Description>"Equipped Item Quantity"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>stamina - check Code :cmp dword ptr [eax+000002E4],00</Description>
      <Address>00E5411F</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>A5411F</ModuleNameOffset>
      <Before>
        <Byte>70</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>B8</Byte>
        <Byte>E4</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>7E</Byte>
        <Byte>43</Byte>
        <Byte>84</Byte>
        <Byte>C9</Byte>
        <Byte>75</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>stamina - read 1 Code :mov ecx,[edi+000002E4]</Description>
      <Address>00EA264F</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>AA264F</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>11</Byte>
        <Byte>34</Byte>
        <Byte>C4</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>8F</Byte>
        <Byte>E4</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>2B</Byte>
        <Byte>C8</Byte>
        <Byte>51</Byte>
        <Byte>8B</Byte>
        <Byte>D7</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>stamina - read 2 Code :mov eax,[edx+000002E4]</Description>
      <Address>0046D130</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>6D130</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>82</Byte>
        <Byte>E4</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>03</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp - Code :mov [ebp+000002D4],eax</Description>
      <Address>00E91BED</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>A91BED</ModuleNameOffset>
      <Before>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>0C</Byte>
        <Byte>8B</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>85</Byte>
        <Byte>D4</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>BD</Byte>
        <Byte>D4</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hero hp read Code :cmp dword ptr [esi+000002D4],00</Description>
      <Address>00FA42AE</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>BA42AE</ModuleNameOffset>
      <Before>
        <Byte>F6</Byte>
        <Byte>C2</Byte>
        <Byte>01</Byte>
        <Byte>75</Byte>
        <Byte>72</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>BE</Byte>
        <Byte>D4</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>7E</Byte>
        <Byte>69</Byte>
        <Byte>8B</Byte>
        <Byte>C6</Byte>
        <Byte>E8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>items +- Code :mov [ecx+08],edx</Description>
      <Address>00C30F76</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>830F76</ModuleNameOffset>
      <Before>
        <Byte>59</Byte>
        <Byte>C2</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
        <Byte>5E</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>51</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>C2</Byte>
        <Byte>5B</Byte>
        <Byte>59</Byte>
        <Byte>C2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>estus flask write Code :mov eax,[ecx+08]</Description>
      <Address>00F271B2</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>B271B2</ModuleNameOffset>
      <Before>
        <Byte>09</Byte>
        <Byte>8B</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>02</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>spell slot1 - Code :mov [ecx-08],edx</Description>
      <Address>00C2F1C2</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>82F1C2</ModuleNameOffset>
      <Before>
        <Byte>18</Byte>
        <Byte>03</Byte>
        <Byte>D6</Byte>
        <Byte>3B</Byte>
        <Byte>D3</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>51</Byte>
        <Byte>F8</Byte>
      </Actual>
      <After>
        <Byte>7D</Byte>
        <Byte>05</Byte>
        <Byte>89</Byte>
        <Byte>59</Byte>
        <Byte>F8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>durability read Code :mov edx,[eax+14]</Description>
      <Address>00CC84E7</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>8C84E7</ModuleNameOffset>
      <Before>
        <Byte>8A</Byte>
        <Byte>34</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>50</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>current item read Code :mov esi,[edi+08]</Description>
      <Address>00CA9D3F</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>8A9D3F</ModuleNameOffset>
      <Before>
        <Byte>BB</Byte>
        <Byte>85</Byte>
        <Byte>FF</Byte>
        <Byte>74</Byte>
        <Byte>16</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>77</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>D0</Byte>
        <Byte>83</Byte>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>humanity +- (reverse hollowing) Code :mov [ecx+7C],eax</Description>
      <Address>00D7344A</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>97344A</ModuleNameOffset>
      <Before>
        <Byte>A7</Byte>
        <Byte>73</Byte>
        <Byte>73</Byte>
        <Byte>FF</Byte>
        <Byte>C3</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>7C</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>88</Byte>
        <Byte>81</Byte>
        <Byte>0B</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>souls read Code :mov edi,[esi+0000008C]</Description>
      <Address>00C23AE4</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>823AE4</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>08</Byte>
        <Byte>57</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>BE</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>03</Byte>
        <Byte>C7</Byte>
        <Byte>89</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>souls - Code :mov [edi+0000008C],edx</Description>
      <Address>00FD71F0</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>BD71F0</ModuleNameOffset>
      <Before>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>0C</Byte>
        <Byte>8B</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>97</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>81</Byte>
        <Byte>68</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>spell slot2 - Code :mov [ecx],edx</Description>
      <Address>00C2F1E7</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>82F1E7</ModuleNameOffset>
      <Before>
        <Byte>16</Byte>
        <Byte>03</Byte>
        <Byte>D6</Byte>
        <Byte>3B</Byte>
        <Byte>D3</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>11</Byte>
      </Actual>
      <After>
        <Byte>7D</Byte>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>19</Byte>
        <Byte>EB</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>arrow - Code :mov eax,[eax+08]</Description>
      <Address>00C32129</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>832129</ModuleNameOffset>
      <Before>
        <Byte>8A</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>05</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>C3</Byte>
        <Byte>8B</Byte>
        <Byte>C7</Byte>
        <Byte>5F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>spell slot3 - Code :mov [ecx+08],edx</Description>
      <Address>00C2F20B</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>82F20B</ModuleNameOffset>
      <Before>
        <Byte>14</Byte>
        <Byte>03</Byte>
        <Byte>D6</Byte>
        <Byte>3B</Byte>
        <Byte>D3</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>51</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>7D</Byte>
        <Byte>05</Byte>
        <Byte>89</Byte>
        <Byte>59</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>item storage highlighted read Code :mov ecx,[ebx+08]</Description>
      <Address>00C8864D</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>88864D</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>C6</Byte>
        <Byte>40</Byte>
        <Byte>1D</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>4B</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>10</Byte>
        <Byte>C6</Byte>
        <Byte>40</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>souls upgrade - Code :mov [edx+0000008C],eax</Description>
      <Address>00C76D46</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>876D46</ModuleNameOffset>
      <Before>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
        <Byte>8B</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>82</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>0F</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>durability special - Code :mov [eax+14],edx</Description>
      <Address>00C3057A</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>83057A</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>04</Byte>
        <Byte>8D</Byte>
        <Byte>04</Byte>
        <Byte>81</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>50</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>humanity - (kindle) Code :mov [eax+7C],ecx</Description>
      <Address>00D80B44</Address>
      <ModuleName>DATA.exe</ModuleName>
      <ModuleNameOffset>980B44</ModuleNameOffset>
      <Before>
        <Byte>20</Byte>
        <Byte>48</Byte>
        <Byte>3E</Byte>
        <Byte>01</Byte>
        <Byte>49</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>7C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>B2</Byte>
        <Byte>48</Byte>
        <Byte>0B</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>heroCheck</Name>
      <Address>1D4B0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>1E440000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>xlivekiller</Name>
      <Address>019413AA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFlask</Name>
      <Address>1E430000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pDurability</Name>
      <Address>18A70000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>heyho</Name>
      <Address>1E750000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItem</Name>
      <Address>18F50000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHumanity</Name>
      <Address>18B10000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHeroB</Name>
      <Address>18B00000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>allItemSwitch</Name>
      <Address>16DA0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>minItem</Name>
      <Address>16DB0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pArrow</Name>
      <Address>18AE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHItem</Name>
      <Address>1E420000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHSItem</Name>
      <Address>11FD0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>slowmoSpeed</Name>
      <Address>1E770000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pIHItem</Name>
      <Address>11F40000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>tAX</Name>
      <Address>1E480000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>tDX</Name>
      <Address>1E490000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>assignElementSwirch</Name>
      <Address>1E450000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>tIID</Name>
      <Address>1E470000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>rIID</Name>
      <Address>1E460000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>--- Assign Element/Upgrade to Equipment highlighted in the Equipment menu (won't work in the Inventory menu) ---

Ctrl+ (or set the value to 1) to turn ON
Ctrl- (or set the value to 0) to turn OFF
Default: 0 (OFF)

numpad 0 - normal/special
numpad 1 - crystal
numpad 2 - lightning
numpad 3 - raw
numpad 4 - magic
numpad 5 - enchanted
numpad 6 - divine
numpad 7 - occult
numpad 8 - fire
numpad 9 - chaos
key 1 - +0
key 2 - +5
key 3 - +10
key 4 - +15

==============================

--- Hero's Appearance ---

[Sex]
** I'm not sure how it would affect the game in anyway. back-up save before trying to change this in-game.

=========

Sex Value:
0 - Female
1 - Male

==============================

[Hair]
** both Master Value and Actual Value will be stored into the savegame.
** Master Value of Hair Style and Hair Color only affect the savegame info, they won't affect the actual style / color in anyway, you need to edit the Actual Value to change the hair style for real.

=========

Male Hair Style:
(Master / Actual Value)
0 / 1000 - Shaved
1 / 1100 - Receding
2 / 1200 - Short
3 / 1300 - Swept Back
4 / 1400 - Ponytail
5 / 1500 - Wild
6 / 1600 - Parted Center
7 / 1700 - Semi-Long
8 / 1800 - Curly
9 / 1900 - Bobbed

=========

Female Hair Style:
(Master / Actual Value)
0 / 3000 - Shaved
1 / 3100 - Very Short
2 / 3200 - Wave
3 / 3300 - Straight A
4 / 3400 - Straight B
5 / 3500 - Ponytail A
6 / 3600 - Ponytail B
7 / 3700 - Pigtails
8 / 3800 - Bun
9 / 3900 - Braided

=========

Hair Color Master Value:
0 - Black
1 - Dark Brown
2 - Light Brown
3 - Dark Red
4 - Dark Blue
5 - Gray
6 - Gold
7 - Silver
8 - Dark Purple
9 - Red

=========

Hair Color Actual Value:
0.0 to 1.0

==============================

[Physique]
** unlike hair, only Master Value will be stored into the savegame.
** if you are changing the Master Value, you need to quit and re-load the game to see the change.
** although the body parts changing would take effect immediately, they won't be store into the savegame. they would reset according to the Master Value upon re-loading.

=========

Physique Master Value:
0 - Average
1 - Slim
2 - Very Slim
3 - Large
4 - Very Large
5 - Large Upper Body
6 - Large Lower Body
7 - Top-heavy
8 - Tiny Head

=========

Physique Actual Value:
0.0 - Avarage</Comments>
</CheatTable>
