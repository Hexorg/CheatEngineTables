<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"[X] &lt;== Mass Effect 2 v1.2.1604.0 Steam Script 1.0"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Mass Effect 2
 Game Version  : 1.2.1604.0
 Game Sponsor  : Wallet Gifts
 Process Name  : MassEffect2.exe
 Relevant Info : 32bits/3rdPerson
 Script Version: 1.0
 CE Version    : 6.6
 Release date  : 30-Dec-2016
 Author        : Recifense
 History:
 06-Feb-2010: First Release (v1.0.1593.2)
 30-Dec-2016: Release for v1.2.1604.0 (Steam)
 Features:
 - Unlimited Ammo
 - God Mode
 - Some Pointers
===========================================
}

//=========================================
// Checking CE version
{$lua}
  if(getCEVersion() &lt; 6.5) then
    ShowMessage('Sorry. CE version should be 6.5 or above')
  end
{$asm}

//=========================================
// Checking Selected Process
{$lua}
  if(process == nil) then
    ShowMessage('No process was selected')
  elseif (process ~= "MassEffect2.exe") then
    ShowMessage('Error. Expected Process = MassEffect2.exe')
  end
{$asm}

//=========================================
// Definitions
define(LUDO,"MassEffect2.exe")
define(MOHP,MassEffect2.exe+006c3748)
define(GDMD,MassEffect2.exe+0050692b)

define(CMHP,MassEffect2.exe+0060afb0)

//=========================================
// Constants used in the script (that can be changed)
define(ctCE66,(float)6.6)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MOHP,e8 ?? ?? ?? ?? 85 c0 ?? ?? 8b 80 e8 02 00 00 8b d0 8b c8 d1 ea)
assert(GDMD,f3 0f 5c 44 24 10 8b 44 24 14 f3 0f 11 07 5f f3 0f 11 00 5e 59)

//=========================================
alloc(MyCode,4096,$process)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)

label(iEnableMPA)
label(iEnableGMD)

label(pAmmo)
label(pHero)
label(pResource)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMPA)
registersymbol(iEnableGMD)
registersymbol(pAmmo)
registersymbol(pHero)
registersymbol(pResource)

//=========================================
MyCode:
//=========================================
// All the time
_MonHumanPlayer:
 push eax

 mov eax,[esi+28]
 test eax,eax
 jz _ExitMHP

 cmp dword ptr [eax+0000018c],0
 jne _ExitMHP

 mov eax,[esi+00000084]
 test eax,eax
 jz _ExitMHP

 cmp dword ptr [eax+0c],02000001
 jne _ExitMHP

 mov [pHero],eax
 mov eax,[esi+00000200]
 mov [pResource],eax
 mov [pAmmo],esi

 cmp dword ptr [iEnableMPA],0
 je _ExitMHP                       // Jump if feature is disabled

 mov dword ptr [esi+00000610],0    // make spent_ammo = 0

_ExitMHP:
 pop eax

 call CMHP                         // Original code
 jmp _BackMHP                      // Back to main code

//=========================================
// All the time (and when HP changes)
_GodMode:
 mov eax,[edi+30]
 cmp eax,[pHero]
 jne _ExitGMD

 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 movss xmm0,[edi+14]               // Max HP
 mov dword ptr [esp+10],0          // value2decrease = 0

_ExitGMD:
 subss xmm0,[esp+10]               // Original code
 jmp _BackGMD                      // Back to main code

//=========================================
 db '===============================&gt;'
 db 'CE6.6 Script by Recifense 123016'
//=========================================
// Variables
iEnableMPA:
 dd 0
iEnableGMD:
 dd 0
pHero:
 dd MyCode
pResource:
 dd 0
pAmmo:
 dd 0

//=========================================
// Hacking Points
MOHP:
 jmp _MonHumanPlayer
_BackMHP:

GDMD:
 jmp _GodMode
 nop
_BackGMD:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MOHP:
 call CMHP

GDMD:
// subss xmm0,[esp+10]
 db f3 0f 5c 44 24 10

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMPA)
unregistersymbol(iEnableGMD)
unregistersymbol(pAmmo)
unregistersymbol(pHero)
unregistersymbol(pResource)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>98</ID>
          <Description>"[X] &lt;== God Mode  ----------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableGMD",1)
getAddressList().getMemoryRecordByID(98).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableGMD",0)
getAddressList().getMemoryRecordByID(98).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>230</ID>
          <Description>"[X] &lt;== Unlimited Ammo ---------------------------&gt; (HK: CTRL+Page Up / CTRL+Page Down)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMPA",1)
getAddressList().getMemoryRecordByID(230).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMPA",0)
getAddressList().getMemoryRecordByID(230).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>231</ID>
          <Description>"[X] &lt;=== Resources"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>404080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>3</ID>
              <Description>"Credits ========&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResource</Address>
              <Offsets>
                <Offset>218</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Element Zero ====&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResource</Address>
              <Offsets>
                <Offset>220</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Iridium ========&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResource</Address>
              <Offsets>
                <Offset>224</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"Palladium ======&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResource</Address>
              <Offsets>
                <Offset>228</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Platinium  ======&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResource</Address>
              <Offsets>
                <Offset>22C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Probes ========&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResource</Address>
              <Offsets>
                <Offset>230</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Fuel ==========&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pResource</Address>
              <Offsets>
                <Offset>234</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Recifense</Name>
      <Address>20161230</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Mass Effect 2
 Game Version  : 1.2.1604.0
 Game Sponsor  : Wallet Gifts
 Process Name  : MassEffect2.exe
 Relevant Info : 32bits/3rdPerson
 Script Version: 1.0
 CE Version    : 6.6
 Release date  : 30-Dec-2016
 Author        : Recifense
 History:
 06-Feb-2010: First Release (v1.0.1593.2)
 30-Dec-2016: Release for v1.2.1604.0 (Steam)
 Features:
 - Unlimited Ammo  [1]
 - God Mode        [2]
 - Some Pointers   [3]
===========================================
[1] Human player's Ammo will not decrease (no need to reload);
[2] For human player's Controlled Character only;
[3] Used on the table;
===========================================
[USAGE]
 - Run CE 6.5 or greater;
 - Run the GAME;
 - Load game process "Wallet Gifts" via CE;
 - Load this Table;
 - Activate the main script  by clicking on its box [X];
 - Now Activate the script of each cheat you want to use;
 - Go back to the game and have fun.
===========================================
HOTKEYS:
CTRL+Home     = Enable  God Mode Cheat;
CTRL+End      = Disable God Mode Cheat;
-----
CTRL+PageUp   = Enable  AMMO cheat;
CTRL+PageDown = Disable AMMO cheat;
===========================================
[WARNING]
- This table is meant to be used in single player games.
- Save your game before usaing this table;
===========================================
[INFO]
Tested on Win10 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
