<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Inf. Weapons (activate after one use)"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SHODN.exe
  Version: 
  Date   : 2015-10-23
  Author : wcz

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 5C B0 08 8B 75 9C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+esi*4+08],(int)20
  mov esi,[ebp-64]
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 5C B0 08 8B 75 9C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1D276ABA

1D276A9D: 8B 45 90                 -  mov eax,[ebp-70]
1D276AA0: 83 EC 08                 -  sub esp,08
1D276AA3: 50                       -  push eax
1D276AA4: 53                       -  push ebx
1D276AA5: E8 27 BD 41 3D           -  call "Adobe AIR.dll"+4B27D1
1D276AAA: 83 C4 08                 -  add esp,08
1D276AAD: F3 0F 7E 4D 80           -  movq xmm1,[ebp-80]
1D276AB2: 8B 55 94                 -  mov edx,[ebp-6C]
1D276AB5: 8B 4D 8C                 -  mov ecx,[ebp-74]
1D276AB8: EB 07                    -  jmp 1D276AC1
// ---------- INJECTING HERE ----------
1D276ABA: 89 5C B0 08              -  mov [eax+esi*4+08],ebx
1D276ABE: 8B 75 9C                 -  mov esi,[ebp-64]
// ---------- DONE INJECTING  ----------
1D276AC1: 66 0F 57 C0              -  xorpd xmm0,xmm0
1D276AC5: 66 0F 2E C1              -  ucomisd xmm0,xmm1
1D276AC9: 0F 82 AA 00 00 00        -  jb 1D276B79
1D276ACF: 8B 9A 18 08 00 00        -  mov ebx,[edx+00000818]
1D276AD5: 89 5D 90                 -  mov [ebp-70],ebx
1D276AD8: 8B 82 28 04 00 00        -  mov eax,[edx+00000428]
1D276ADE: 85 DB                    -  test ebx,ebx
1D276AE0: 0F 84 CF 00 00 00        -  je 1D276BB5
1D276AE6: 8B 53 1C                 -  mov edx,[ebx+1C]
1D276AE9: 8B 1A                    -  mov ebx,[edx]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Inf. Bombs (activate after one use)"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SHODN.exe
  Version: 
  Date   : 2015-10-23
  Author : wcz

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 7C 90 08 8D 95 70 FF FF FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+edx*4+08],(int)10
  lea edx,[ebp-00000090]
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 7C 90 08 8D 95 70 FF FF FF

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0492AC6E

0492AC47: 8B BD 44 FF FF FF  -  mov edi,[ebp-000000BC]
0492AC4D: 8B 8D 48 FF FF FF  -  mov ecx,[ebp-000000B8]
0492AC53: 8B 85 4C FF FF FF  -  mov eax,[ebp-000000B4]
0492AC59: 83 EC 08           -  sub esp,08
0492AC5C: 50                 -  push eax
0492AC5D: 57                 -  push edi
0492AC5E: E8 6E 7B D6 55     -  call "Adobe AIR.dll"+4B27D1
0492AC63: 83 C4 08           -  add esp,08
0492AC66: 8D 8E F0 00 00 00  -  lea ecx,[esi+000000F0]
0492AC6C: EB 04              -  jmp 0492AC72
// ---------- INJECTING HERE ----------
0492AC6E: 89 7C 90 08        -  mov [eax+edx*4+08],edi
0492AC72: 8D 95 70 FF FF FF  -  lea edx,[ebp-00000090]
// ---------- DONE INJECTING  ----------
0492AC78: E8 82 74 D9 55     -  call "Adobe AIR.dll"+4E20FF
0492AC7D: 8D 8E F0 00 00 00  -  lea ecx,[esi+000000F0]
0492AC83: 8B 78 10           -  mov edi,[eax+10]
0492AC86: 89 BD 4C FF FF FF  -  mov [ebp-000000B4],edi
0492AC8C: 8D 95 70 FF FF FF  -  lea edx,[ebp-00000090]
0492AC92: E8 68 74 D9 55     -  call "Adobe AIR.dll"+4E20FF
0492AC97: 8B 95 4C FF FF FF  -  mov edx,[ebp-000000B4]
0492AC9D: 8B 78 10           -  mov edi,[eax+10]
0492ACA0: 8D 09              -  lea ecx,[ecx]
0492ACA2: 85 FF              -  test edi,edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"Inf. Magic (activate after one use)"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SHODN.exe
  Version: 
  Date   : 2015-10-23
  Author : wcz

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 5C 88 08 8D 55 80) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+ecx*4+08],(int)3
  lea edx,[ebp-80]
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 5C 88 08 8D 55 80

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1D09897D

1D09895A: 72 21              -  jb 1D09897D
1D09895C: 8B 9D 68 FF FF FF  -  mov ebx,[ebp-00000098]
1D098962: 8B 8D 6C FF FF FF  -  mov ecx,[ebp-00000094]
1D098968: 8B 85 70 FF FF FF  -  mov eax,[ebp-00000090]
1D09896E: 83 EC 08           -  sub esp,08
1D098971: 50                 -  push eax
1D098972: 53                 -  push ebx
1D098973: E8 59 9E C9 3A     -  call "Adobe AIR.dll"+4B27D1
1D098978: 83 C4 08           -  add esp,08
1D09897B: EB 04              -  jmp 1D098981
// ---------- INJECTING HERE ----------
1D09897D: 89 5C 88 08        -  mov [eax+ecx*4+08],ebx
1D098981: 8D 55 80           -  lea edx,[ebp-80]
// ---------- DONE INJECTING  ----------
1D098984: 8B 8D 74 FF FF FF  -  mov ecx,[ebp-0000008C]
1D09898A: E8 70 97 CC 3A     -  call "Adobe AIR.dll"+4E20FF
1D09898F: 8B 58 10           -  mov ebx,[eax+10]
1D098992: 89 9D 70 FF FF FF  -  mov [ebp-00000090],ebx
1D098998: 8D 55 80           -  lea edx,[ebp-80]
1D09899B: 8B 8D 74 FF FF FF  -  mov ecx,[ebp-0000008C]
1D0989A1: E8 59 97 CC 3A     -  call "Adobe AIR.dll"+4E20FF
1D0989A6: 8B 95 70 FF FF FF  -  mov edx,[ebp-00000090]
1D0989AC: 8B 58 10           -  mov ebx,[eax+10]
1D0989AF: 85 DB              -  test ebx,ebx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Inf. Jump (activate after one use)"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SHODN.exe
  Version: 
  Date   : 2015-10-24
  Author : wcz

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 B3 08 01 00 00 C7) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebx+00000108],(int)2
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 B3 08 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 085D4E56

085D4E31: 85 D2                          -  test edx,edx
085D4E33: 0F 94 D2                       -  sete dl
085D4E36: 0F B6 D2                       -  movzx edx,dl
085D4E39: 89 55 D8                       -  mov [ebp-28],edx
085D4E3C: 8B 55 D8                       -  mov edx,[ebp-28]
085D4E3F: 85 D2                          -  test edx,edx
085D4E41: 0F 84 51 02 00 00              -  je 085D5098
085D4E47: 8B 9D 7C FF FF FF              -  mov ebx,[ebp-00000084]
085D4E4D: 8B B3 08 01 00 00              -  mov esi,[ebx+00000108]
085D4E53: 8D 76 FF                       -  lea esi,[esi-01]
// ---------- INJECTING HERE ----------
085D4E56: 89 B3 08 01 00 00              -  mov [ebx+00000108],esi
// ---------- DONE INJECTING  ----------
085D4E5C: C7 83 40 01 00 00 00 00 00 00  -  mov [ebx+00000140],00000000
085D4E66: 66 0F 57 C0                    -  xorpd xmm0,xmm0
085D4E6A: 66 0F D6 83 98 01 00 00        -  movq [ebx+00000198],xmm0
085D4E72: E9 C1 00 00 00                 -  jmp 085D4F38
085D4E77: 8D 09                          -  lea ecx,[ecx]
085D4E79: 8B 4D 90                       -  mov ecx,[ebp-70]
085D4E7C: 8B 75 9C                       -  mov esi,[ebp-64]
085D4E7F: 8B 7D 98                       -  mov edi,[ebp-68]
085D4E82: 8B 1D 4C B0 83 03              -  mov ebx,[0383B04C]
085D4E88: 85 DB                          -  test ebx,ebx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"God Mode *blink* (After 1Hit)"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SHODN.exe
  Version: 
  Date   : 2015-10-23
  Author : wcz

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,8D 76 FF 89 73 5C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  lea esi,[esi-01]
  mov [ebx+5C],(int)99
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8D 76 FF 89 73 5C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0861BC55

0861BC3A: 75 0F                          -  jne 0861BC4B
0861BC3C: 8B 73 5C                       -  mov esi,[ebx+5C]
0861BC3F: 83 FE 00                       -  cmp esi,00
0861BC42: 0F 9F C0                       -  setg al
0861BC45: 0F B6 C0                       -  movzx eax,al
0861BC48: 89 45 B8                       -  mov [ebp-48],eax
0861BC4B: 8B 75 B8                       -  mov esi,[ebp-48]
0861BC4E: 85 F6                          -  test esi,esi
0861BC50: 74 09                          -  je 0861BC5B
0861BC52: 8B 73 5C                       -  mov esi,[ebx+5C]
// ---------- INJECTING HERE ----------
0861BC55: 8D 76 FF                       -  lea esi,[esi-01]
0861BC58: 89 73 5C                       -  mov [ebx+5C],esi
// ---------- DONE INJECTING  ----------
0861BC5B: E9 DE 06 00 00                 -  jmp 0861C33E
0861BC60: 8B 9D 40 FF FF FF              -  mov ebx,[ebp-000000C0]
0861BC66: 8B 35 4C B0 67 03              -  mov esi,[0367B04C]
0861BC6C: 85 F6                          -  test esi,esi
0861BC6E: 74 0B                          -  je 0861BC7B
0861BC70: 83 EC 0C                       -  sub esp,0C
0861BC73: E8 5B 52 00 00                 -  call 08620ED3
0861BC78: 83 C4 10                       -  add esp,10
0861BC7B: 8B 75 B0                       -  mov esi,[ebp-50]
0861BC7E: F3 0F 7E 86 98 00 00 00        -  movq xmm0,[esi+00000098]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"[ Player Structure ] (activate in game)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>8000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SHODN.exe
  Version: 
  Date   : 2015-10-23
  Author : wcz

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,8B 81 D4 02 00 00 3B) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
globalalloc(pbase,4)

newmem:

code:
  mov [pbase],ecx
  mov eax,[ecx+000002D4]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 81 D4 02 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 083D825D

083D822D: 8B 8D 14 FF FF FF        -  mov ecx,[ebp-000000EC]
083D8233: DD 9D 00 FF FF FF        -  fstp qword ptr [ebp-00000100]
083D8239: F3 0F 7E 85 00 FF FF FF  -  movq xmm0,[ebp-00000100]
083D8241: 66 0F 57 C9              -  xorpd xmm1,xmm1
083D8245: 66 0F 2E C1              -  ucomisd xmm0,xmm1
083D8249: 75 0B                    -  jne 083D8256
083D824B: 7A 09                    -  jp 083D8256
083D824D: C7 45 C8 06 00 00 00     -  mov [ebp-38],00000006
083D8254: EB 07                    -  jmp 083D825D
083D8256: C7 45 C8 0E 00 00 00     -  mov [ebp-38],0000000E
// ---------- INJECTING HERE ----------
083D825D: 8B 81 D4 02 00 00        -  mov eax,[ecx+000002D4]
// ---------- DONE INJECTING  ----------
083D8263: 3B D8                    -  cmp ebx,eax
083D8265: 7D 09                    -  jnl 083D8270
083D8267: C7 45 D0 06 00 00 00     -  mov [ebp-30],00000006
083D826E: EB 07                    -  jmp 083D8277
083D8270: C7 45 D0 16 00 00 00     -  mov [ebp-30],00000016
083D8277: 8B 5D C8                 -  mov ebx,[ebp-38]
083D827A: 8B 45 D0                 -  mov eax,[ebp-30]
083D827D: 8B CB                    -  mov ecx,ebx
083D827F: 83 F1 06                 -  xor ecx,06
083D8282: 8B D0                    -  mov edx,eax
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Current Health"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>pbase</Address>
          <Offsets>
            <Offset>2D4</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Max Health"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pbase</Address>
              <Offsets>
                <Offset>2D8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Score"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>pbase</Address>
          <Offsets>
            <Offset>2DC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Time (real)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>pbase</Address>
          <Offsets>
            <Offset>2AC</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>16</ID>
              <Description>"Time (In game)"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pbase</Address>
              <Offsets>
                <Offset>2B0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>17</ID>
              <Description>"Time (In game)"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pbase</Address>
              <Offsets>
                <Offset>2B4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Total Time (Rush mode)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>pbase</Address>
          <Offsets>
            <Offset>2F8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Rage (Full=1.875)"</Description>
          <VariableType>Float</VariableType>
          <Address>pbase</Address>
          <Offsets>
            <Offset>99C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"[ Stats ]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>34</ID>
              <Description>"Total Kills"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pbase</Address>
              <Offsets>
                <Offset>340</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>36</ID>
              <Description>"Total Deaths"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pbase</Address>
              <Offsets>
                <Offset>33C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>35</ID>
              <Description>"Fairies Rescued"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pbase</Address>
              <Offsets>
                <Offset>34C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>37</ID>
              <Description>"Treasure Collected"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pbase</Address>
              <Offsets>
                <Offset>358</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Jump pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SHODN.exe
  Version: 
  Date   : 2015-10-23
  Author : wcz

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 8A 08 01 00 00 8B 4D C0) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
globalalloc(pbase2,4)

newmem:

code:
  mov [pbase2],edx
  mov [edx+00000108],ecx
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 8A 08 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 08431FBE

08431F9A: 83 C4 10              -  add esp,10
08431F9D: 8B 55 AC              -  mov edx,[ebp-54]
08431FA0: 8B C8                 -  mov ecx,eax
08431FA2: B8 04 00 00 00        -  mov eax,00000004
08431FA7: 85 C9                 -  test ecx,ecx
08431FA9: 74 09                 -  je 08431FB4
08431FAB: C7 45 E8 03 00 00 00  -  mov [ebp-18],00000003
08431FB2: EB 07                 -  jmp 08431FBB
08431FB4: C7 45 E8 02 00 00 00  -  mov [ebp-18],00000002
08431FBB: 8B 4D E8              -  mov ecx,[ebp-18]
// ---------- INJECTING HERE ----------
08431FBE: 89 8A 08 01 00 00     -  mov [edx+00000108],ecx
// ---------- DONE INJECTING  ----------
08431FC4: 8B 4D C0              -  mov ecx,[ebp-40]
08431FC7: 89 0D 54 B0 67 03     -  mov [0367B054],ecx
08431FCD: 8B E5                 -  mov esp,ebp
08431FCF: 5D                    -  pop ebp
08431FD0: C3                    -  ret 
08431FD1: 8B 7D B8              -  mov edi,[ebp-48]
08431FD4: 8B 75 BC              -  mov esi,[ebp-44]
08431FD7: 8B 5D CC              -  mov ebx,[ebp-34]
08431FDA: 8B 45 08              -  mov eax,[ebp+08]
08431FDD: 83 EC 0C              -  sub esp,0C
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Jump"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>pbase2</Address>
          <Offsets>
            <Offset>108</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
