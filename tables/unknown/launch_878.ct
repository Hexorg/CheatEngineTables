<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>134</ID>
      <Description>"Cheat Options"</Description>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Inf. Health"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Health,Launch.exe,D9 40 14 D9 5C 24 0C D9 44 24 0C)
label(pHealth)

newmem:
mov [pHealth],eax
fld dword ptr [eax+1C]
fstp dword ptr [eax+14]
jmp originalcode

originalcode:
fld dword ptr [eax+14]
fstp dword ptr [esp+0C]

exit:
jmp returnhere

pHealth:
dd 0

Health:
jmp newmem
nop
nop
returnhere:

registersymbol(Health)
registersymbol(pHealth)

[DISABLE]
unregistersymbol(Health)
unregistersymbol(pHealth)
dealloc(newmem)
Health:
db D9 40 14 D9 5C 24 0C
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>131</ID>
          <Description>"Inf. Musou"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Musou,Launch.exe,0F B6 83 A8 02 00 00 8B 8B ?? ?? ?? ??)
label(pMusou)

newmem:
mov [pMusou],ebx
mov byte ptr [ebx+000002A8],(int)3
jmp originalcode

originalcode:
movzx eax,byte ptr [ebx+000002A8]

exit:
jmp returnhere

pMusou:
dd 0

Musou:
jmp newmem
nop
nop
returnhere:

registersymbol(Musou)
registersymbol(pMusou)

[DISABLE]
unregistersymbol(Musou)
unregistersymbol(pMusou)
dealloc(newmem)
Musou:
db 0F B6 83 A8 02 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Instant fill Rage and Musou ( Press key R )"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Rage,Launch.exe,89 87 74 11 00 00 DB 83 AC 02 00 00)
label(pRage)

newmem:
pushad
push 'R'
call GetAsyncKeyState
shr ax,(int)15
cmp ax,1
popad
jne originalcode
mov [pRage],ebx
fild dword ptr [ebx+000002B0]
fistp dword ptr [ebx+000002AC]
jmp originalcode

originalcode:
fild dword ptr [ebx+000002AC]

exit:
jmp returnhere

pRage:
dd 0

Rage+6:
jmp newmem
nop
returnhere:

registersymbol(Rage)
registersymbol(pRage)

[DISABLE]
unregistersymbol(Rage)
unregistersymbol(pRage)
dealloc(newmem)
Rage+6:
db DB 83 AC 02 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"Inf. Gold ( Enable after press Pause game )"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Gold,Launch.exe,8B 40 14 3D 7F 96 98 00 76 05 B8 ?? ?? ?? ?? 50 68 ?? ?? ?? ?? 8D 44 24 78)
label(pGold)

newmem:
mov [pGold],eax
mov [eax+14],(int)9999999
jmp originalcode

originalcode:
mov eax,[eax+14]
cmp eax,0098967F

exit:
jmp returnhere

pGold:
dd 0

Gold:
jmp newmem
nop
nop
nop
returnhere:

registersymbol(Gold)
registersymbol(pGold)

[DISABLE]
unregistersymbol(Gold)
unregistersymbol(pGold)
dealloc(newmem)
Gold:
db 8B 40 14 3D 7F 96 98 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>88</ID>
              <Description>"Gold"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>Launch.exe+69D6C8</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Inf. Gems ( Enable after press Officer Info )"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Gems,Launch.exe,C7 87 B0 0D 01 00 02 00 00 00 0F B7 81 52 1C 00 00)
label(pGems)

newmem:
mov [pGems],ecx
mov word ptr [ecx+00001C52],(int)9999
jmp originalcode

originalcode:
movzx eax,word ptr [ecx+00001C52]

exit:
jmp returnhere

pGems:
dd 0

Gems+A:
jmp newmem
nop
nop
returnhere:

registersymbol(Gems)
registersymbol(pGems)

[DISABLE]
unregistersymbol(Gems)
unregistersymbol(pGems)
dealloc(newmem)
Gems+A:
db 0F B7 81 52 1C 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Inf. Facility and Weapon Materials ( Enable after press Pause game )"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Materials,Launch.exe,0F B7 86 A4 00 00 00 3D ?? ?? ?? ?? 76 05 B8 ?? ?? ?? ?? 50 68 ?? ?? ?? ?? 8D 44 24 78)
label(pMaterials)

newmem:
pushad
mov [pMaterials],esi
mov word ptr [esi+000000A4],(int)9999
mov word ptr [esi+000000A6],(int)9999
jmp originalcode

originalcode:
popad
movzx eax,word ptr [esi+000000A4]

exit:
jmp returnhere

pMaterials:
dd 0

Materials:
jmp newmem
nop
nop
returnhere:

registersymbol(Materials)
registersymbol(pMaterials)

[DISABLE]
unregistersymbol(Materials)
unregistersymbol(pMaterials)
dealloc(newmem)
Materials:
db 0F B7 86 A4 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Max level"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(EXP,Launch.exe,89 43 70 8B 83 9C 00 00 00 33 ED)
label(pEXP)

newmem:
mov [pEXP],ebx
mov [ebx+70],(int)1000000
jmp originalcode

originalcode:
//mov [ebx+70],eax
//mov eax,[ebx+0000009C]

exit:
jmp returnhere

pEXP:
dd 0

EXP:
jmp newmem
nop
nop
nop
nop
returnhere:

registersymbol(EXP)
registersymbol(pEXP)

[DISABLE]
unregistersymbol(EXP)
unregistersymbol(pEXP)
dealloc(newmem)
EXP:
db 89 43 70 8B 83 9C 00 00 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>80</ID>
              <Description>"EXP"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pEXP</Address>
              <Offsets>
                <Offset>70</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>121</ID>
              <Description>"Leadership EXP"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pEXP</Address>
              <Offsets>
                <Offset>74</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Stats ( Enable after press Officer Info )"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Stats,Launch.exe,0F B7 42 64 56 75 47)
label(pStats)

newmem:
mov [pStats],edx

originalcode:
movzx eax,word ptr [edx+64]
push esi

exit:
jmp returnhere

pStats:
dd 0

Stats:
jmp newmem
returnhere:

registersymbol(Stats)
registersymbol(pStats)

[DISABLE]
unregistersymbol(Stats)
unregistersymbol(pStats)
dealloc(newmem)
Stats:
db 0F B7 42 64 56
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>56</ID>
              <Description>"Health"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pStats</Address>
              <Offsets>
                <Offset>64</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>57</ID>
              <Description>"Attack"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pStats</Address>
              <Offsets>
                <Offset>60</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>58</ID>
              <Description>"Defense"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pStats</Address>
              <Offsets>
                <Offset>62</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>92</ID>
          <Description>"Inf. Time"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Time,Launch.exe,89 47 38 6A 00 68 ?? ?? ?? ??)
label(pTime)

newmem:
mov [pTime],edi
xor eax,eax

originalcode:
mov [edi+38],eax
push 00

exit:
jmp returnhere

pTime:
dd 0

Time:
jmp newmem
returnhere:

registersymbol(Time)
registersymbol(pTime)

[DISABLE]
unregistersymbol(Time)
unregistersymbol(pTime)
dealloc(newmem)
Time:
db 89 47 38 6A 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>118</ID>
          <Description>"Fame"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Fame,Launch.exe,0F B7 80 80 05 00 00 3D ?? ?? ?? ?? 76 05)
label(pFame)

newmem:
mov [pFame],eax

originalcode:
movzx eax,word ptr [eax+00000580]

exit:
jmp returnhere

pFame:
dw 0

Fame:
jmp newmem
nop
nop
returnhere:

registersymbol(Fame)
registersymbol(pFame)

[DISABLE]
unregistersymbol(Fame)
unregistersymbol(pFame)
dealloc(newmem)
Fame:
db 0F B7 80 80 05 00 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>119</ID>
              <Description>"Fame"</Description>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pFame</Address>
              <Offsets>
                <Offset>580</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>127</ID>
          <Description>"Inf. Buff ( After get buff Attack x2, Defense x2 and Speed up )"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Buff,Launch.exe,D9 51 14 D8 D9 ?? ?? F6 C4 41 7A 0B)
label(pBuff)

newmem:
mov [pBuff],ecx
fld dword ptr [ecx+10]
fst dword ptr [ecx+14]
jmp originalcode

originalcode:
//fst dword ptr [ecx+14]
fcomp st(0),st(1)

exit:
jmp returnhere

pBuff:
dd 0

Buff:
jmp newmem
returnhere:

registersymbol(Buff)
registersymbol(pBuff)

[DISABLE]
unregistersymbol(Buff)
unregistersymbol(pBuff)
dealloc(newmem)
Buff:
db D9 51 14 D8 D9
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"Massive Attack, Defense and Speed"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Massive,Launch.exe,D9 44 24 04 D9 99 E0 00 00 00 C2 ?? ?? CC)
label(pMassive)

newmem:
mov [pMassive],ecx
mov dword ptr [ecx+000000E0],(float)3 // Speed
mov dword ptr [ecx+000000D8],(float)9 // Attack
mov dword ptr [ecx+000000DC],(float)9 // Defense
jmp originalcode

originalcode:
//fld dword ptr [esp+04]
//fstp dword ptr [ecx+000000E0]

exit:
jmp returnhere

pMassive:
dd 0

Massive:
jmp newmem
nop
nop
nop
nop
nop
returnhere:

registersymbol(Massive)
registersymbol(pMassive)

[DISABLE]
unregistersymbol(Massive)
unregistersymbol(pMassive)
dealloc(newmem)
Massive:
db D9 44 24 04 D9 99 E0 00 00 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>140</ID>
              <Description>"Attack"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pMassive</Address>
              <Offsets>
                <Offset>D8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>141</ID>
              <Description>"Defense"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pMassive</Address>
              <Offsets>
                <Offset>DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>142</ID>
              <Description>"Speed"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pMassive</Address>
              <Offsets>
                <Offset>E0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>148</ID>
          <Description>"Unlock all Skill "</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

aobscanmodule(Skill,Launch.exe,0F B6 40 0B D9 5C 24 18 D8 47 04)
label(pSkill)

newmem:
mov [pSkill],eax
mov byte ptr [eax+0B],(int)99
mov byte ptr [eax+0A],1
jmp originalcode

originalcode:
movzx eax,byte ptr [eax+0B]
fstp dword ptr [esp+18]

exit:
jmp returnhere

pSkill:
dd 0

Skill:
jmp newmem
nop
nop
nop
returnhere:

registersymbol(Skill)
registersymbol(pSkill)

[DISABLE]
unregistersymbol(Skill)
unregistersymbol(pSkill)
dealloc(newmem)
Skill:
db 0F B6 40 0B D9 5C 24 18
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>133</ID>
      <Description>"Base Address for cheat"</Description>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Health's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pHealth</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Instant fill Rage and Musou's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pRage</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"Gold's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pGold</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Gems's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pGems</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"Facility and Weapon Materials's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pMaterials</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"Max level EXP and Leadership EXP's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pEXP</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"Stats's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pStats</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>93</ID>
          <Description>"Time's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pTime</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>120</ID>
          <Description>"Fame's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pFame</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>128</ID>
          <Description>"Buff's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pBuff</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>132</ID>
          <Description>"Musou's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pMusou</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>139</ID>
          <Description>"Massive's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pSpeed</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>149</ID>
          <Description>"Unlock all Skill's Base Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pSkill</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Health</Name>
      <Address> 00FEC277</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>192F001D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Musou</Name>
      <Address> 00FEC465</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMusou</Name>
      <Address>19F1001E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Rage</Name>
      <Address> 00FEC544</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRage</Name>
      <Address>1A440039</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Gold</Name>
      <Address> 00DEE7AA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGold</Name>
      <Address>1A45001F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Gems</Name>
      <Address> 00DDD4FE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGems</Name>
      <Address>1CC00020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Materials</Name>
      <Address> 00DEE67B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMaterials</Name>
      <Address>1CC1002B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>EXP</Name>
      <Address> 00EE386F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pEXP</Name>
      <Address>1E410017</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Stats</Name>
      <Address> 00ED1C2C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pStats</Name>
      <Address>202E0010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Time</Name>
      <Address> 0101B45D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTime</Name>
      <Address>202F0012</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Fame</Name>
      <Address> 00EC2600</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFame</Name>
      <Address>20300012</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Buff</Name>
      <Address> 00ADD35B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBuff</Name>
      <Address>20310018</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Massive</Name>
      <Address> 00ADF8D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMassive</Name>
      <Address>2032002E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Skill</Name>
      <Address> 00EF6C66</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSkill</Name>
      <Address>18310020</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
