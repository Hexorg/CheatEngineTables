<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>177</ID>
      <Description>"README:  double click on &lt;script&gt; ---------&gt;"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
  Game   : Teslagrad
  Version: 1.3.1
  Author : gwodus (gwodusx@xsmail.com)
  Date   : 2015-02-26

  * Float up/down
      Press END to float up
      Press Shift-END to float down

  * Press Q to jump up a certain height and float in mid air.
    This is very useful with the final boss (the king).

  Notes:
     Float-Up and Float-Down go through ceilings and floors. So if
     you get stuck at the ceiling when floating up, just press
     shift-END until you are free again.

     The climb rate for floating up/down can be adjusted with "Float-Rate".
     The jump height with Q can be adjusted with "Jump-Step".
}

[ENABLE]
[DISABLE]

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>49</ID>
      <Description>"Enable Trainer"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Teslagrad
  Version: 1.3.1
  Date   : 2015-02-26
  Author : gwodus (gwodusx@xsmail.com)
}

[ENABLE]
aobscanmodule(inject_MOVE,Teslagrad.exe,66 0F D6 47 1C F3 0F 7E 40 08) // should be unique
alloc(mem_MOVE,$1000)
registersymbol(mem_MOVE)
registersymbol(inject_MOVE)
registersymbol(code_MOVE)
registersymbol(pCoords)
registersymbol(ypos)
registersymbol(fJumpStep)
registersymbol(fFloatStep)
label(code_MOVE)
label(return)
label(pCoords)
label(ypos)
label(checkKeyPressed)
label(checkKeyPressedEnd)
label(iCounter)
label(iJumpUp)
label(iJumpUpLast)
label(fJumpStep)
label(fFloatUp)
label(fFloatStep)
label(nokey1)
label(nokey2)
label(noJump)
label(noFloat)
label(exit)
label(noChange)
label(memnotfound)
label(memnotchanged)
label(fMinus)

mem_MOVE:
dd 0
pCoords:
dd 0
ypos:
dd (float)0
iCounter:
dd 00
iJumpUp:
dd 00
iJumpUpLast:
dd 00
fJumpStep:
dd (float)8
fFloatUp:
dd (float)0
fFloatStep:
dd (float)0.03125
fMinus:
dd (float)-1

code_MOVE:
  // original code
  movq [edi+1C],xmm0

  push eax
  push ebx

  // determine coord-address found by pointer scan
  mov eax, ["Teslagrad.exe"+00A1D1FC]
  test eax, eax
  jz memnotfound
  mov eax, [eax+84]
  test eax, eax
  jz memnotfound
  mov eax, [eax+10]
  test eax, eax
  jz memnotfound
  mov eax, [eax+C]
  test eax, eax
  jz memnotfound
  mov eax, [eax+20]
  test eax, eax
  jz memnotfound
  add eax, E8
  cmp [pCoords], eax
  je memnotchanged

  // reset pCoords and last ypos
  mov [pCoords], eax
  mov [ypos], (float)0
  jmp memnotchanged

memnotfound:
  mov [pCoords], 0
  mov [ypos], (float)0

memnotchanged:
  cmp edi, [pCoords]
  jne exit

  call checkKeyPressed

  // current y-pos
  mov eax, [edi+4]

  cmp [ypos], 0
  je noFloat
  cmp [fFloatUp], 0
  jne noJump
  cmp [iJumpUp], 0
  je noJump

  mov [edi+20], (float)0    // no y-acceleration

  mov ebx, [iJumpUpLast]
  cmp [iJumpUp], ebx
  je noChange

  // add step to last y-pos
  fld [ypos]
  fld [fJumpStep]
  faddp
  fstp [ypos]

noChange:
  // keep last y-pos
  mov eax, [ypos]

noJump:
  // remember jump state
  mov ebx, [iJumpUp]
  mov [iJumpUpLast], ebx

  cmp [fFloatUp], 0
  je noFloat

  fld [ypos]
  fld [fFloatUp]
  faddp
  fstp [ypos]
  mov eax, [ypos]
  mov [edi+20], (float)0    // no y-acceleration

noFloat:
  mov [edi+4], eax
  mov [ypos], eax

exit:
  pop ebx
  pop eax
  jmp return

// -------------------------------------------------------------------
// subroutine checkKeyPressed
// -------------------------------------------------------------------

checkKeyPressed:

// We are in a loop which is called very often.
// It's not neccesary to check ever time.
add [iCounter], 1
cmp [iCounter], #5
jl checkKeyPressedEnd
mov [iCounter], 0

// save everything
pushad
pushfd

mov [iJumpUp], 0
mov [fFloatUp], (float)0

//virtual key codes
push 'Q'
call GetAsyncKeyState
shr ax,#15 //bit 15 is 1 if it is CURRENTLY down
jz nokey1

mov [iJumpUp], (float)1

nokey1:
push 0x23 // VK_END
call GetAsyncKeyState
shr ax,#15 //bit 15 is 1 if it is CURRENTLY down
jz nokey2

fld [fFloatStep]
fstp [fFloatUp]

push A0 // VK_LSHIFT
call GetAsyncKeyState
shr ax,#15 //bit 15 is 1 if it is CURRENTLY down
jz nokey2

fld [fFloatStep]
fld [fMinus]
fmulp
fstp [fFloatUp]

nokey2:
popfd
popad

checkKeyPressedEnd:
ret


// -------------------------------------------------------------------
// Code Injection Point
// -------------------------------------------------------------------

inject_MOVE:
  jmp code_MOVE
return:


// -------------------------------------------------------------------
// Disable
// -------------------------------------------------------------------

[DISABLE]

inject_MOVE:
  db 66 0F D6 47 1C

dealloc(mem_MOVE)
unregistersymbol(mem_MOVE)
unregistersymbol(inject_MOVE)
unregistersymbol(code_MOVE)
unregistersymbol(pCoords)
unregistersymbol(ypos)
unregistersymbol(fJumpStep)
unregistersymbol(fFloatStep)

{
// ORIGINAL CODE - INJECTION POINT: "Teslagrad.exe"+7E5878

"Teslagrad.exe"+7E5856: 66 0F D6 47 08     -  movq [edi+08],xmm0
"Teslagrad.exe"+7E585B: F3 0F 7E 40 10     -  movq xmm0,[eax+10]
"Teslagrad.exe"+7E5860: 66 0F D6 47 10     -  movq [edi+10],xmm0
"Teslagrad.exe"+7E5865: 8B 40 18           -  mov eax,[eax+18]
"Teslagrad.exe"+7E5868: 89 47 18           -  mov [edi+18],eax
"Teslagrad.exe"+7E586B: 8B 16              -  mov edx,[esi]
"Teslagrad.exe"+7E586D: 8B 42 08           -  mov eax,[edx+08]
"Teslagrad.exe"+7E5870: 8B CE              -  mov ecx,esi
"Teslagrad.exe"+7E5872: FF D0              -  call eax
"Teslagrad.exe"+7E5874: F3 0F 7E 00        -  movq xmm0,[eax]
// ---------- INJECTING HERE ----------
"Teslagrad.exe"+7E5878: 66 0F D6 47 1C     -  movq [edi+1C],xmm0
// ---------- DONE INJECTING  ----------
"Teslagrad.exe"+7E587D: F3 0F 7E 40 08     -  movq xmm0,[eax+08]
"Teslagrad.exe"+7E5882: 66 0F D6 47 24     -  movq [edi+24],xmm0
"Teslagrad.exe"+7E5887: F3 0F 7E 40 10     -  movq xmm0,[eax+10]
"Teslagrad.exe"+7E588C: 66 0F D6 47 2C     -  movq [edi+2C],xmm0
"Teslagrad.exe"+7E5891: 5F                 -  pop edi
"Teslagrad.exe"+7E5892: 5E                 -  pop esi
"Teslagrad.exe"+7E5893: C3                 -  ret
"Teslagrad.exe"+7E5894: CE                 -  into
"Teslagrad.exe"+7E5895: 57                 -  push edi
"Teslagrad.exe"+7E5896: A3 01 92 58 A3     -  mov [A3589201],eax
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>171</ID>
          <Description>"Float-Rate"</Description>
          <LastState Value="0.03125" Activated="0" RealAddress="00C80020"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>fFloatStep</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>169</ID>
          <Description>"Jump-Step"</Description>
          <LastState Value="8" Activated="0" RealAddress="00C80018"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>fJumpStep</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>176</ID>
      <Description>"Debug"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>C0C0C0</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>50</ID>
          <Description>"pCoords"</Description>
          <LastState Value="1878E54C" Activated="0" RealAddress="00C80004"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>C0C0C0</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pCoords</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>165</ID>
          <Description>"pointerscan result"</Description>
          <LastState Value="-1111.580688" Activated="0" RealAddress="1878E54C"/>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>"Teslagrad.exe"+00A1D1FC</Address>
          <Offsets>
            <Offset>E8</Offset>
            <Offset>20</Offset>
            <Offset>C</Offset>
            <Offset>10</Offset>
            <Offset>84</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"X-Position"</Description>
          <LastState Value="-1111.580688" Activated="0" RealAddress="1878E54C"/>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>pCoords</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>168</ID>
          <Description>"Y-Position"</Description>
          <LastState Value="14.0912714" Activated="0" RealAddress="1878E550"/>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>pCoords</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>175</ID>
          <Description>"Y-Acceleration"</Description>
          <LastState Value="-0.00006830436178" Activated="0" RealAddress="1878E56C"/>
          <Color>C0C0C0</Color>
          <VariableType>Float</VariableType>
          <Address>pCoords</Address>
          <Offsets>
            <Offset>20</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of movq [edi],xmm0</Description>
      <Address>0199584D</Address>
      <ModuleName>Teslagrad.exe</ModuleName>
      <ModuleNameOffset>7E584D</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>D6</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>7E</Byte>
        <Byte>40</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>xaddr</Name>
      <Address>04E20000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDirection</Name>
      <Address>04E2000C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fFloatUp</Name>
      <Address>0799001C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inject_MOVE</Name>
      <Address> 01B55878</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>code_MOVE</Name>
      <Address>00C80028</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCoords</Name>
      <Address>00C80004</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ypos</Name>
      <Address>00C80008</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fJumpStep</Name>
      <Address>00C80018</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fFloatStep</Name>
      <Address>00C80020</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"Teslagrad.exe"+7479B5</Address>
      <Comment>Could be X-pos of Player
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
