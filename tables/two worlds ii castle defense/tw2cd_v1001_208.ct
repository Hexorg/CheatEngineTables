<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="11">
  <CheatEntries>
    <CheatEntry>
      <ID>43</ID>
      <Description>"[X] &lt;== TW2CD v1001 Script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
=========================================== 001-12
 Game Title    : Two Worlds II - Castle Defense
 Game Version  : 1.0.0.1
 Process Name  : TW2CD.exe
 Script Version: 1.0
 CE Version    : 6.1
 Release date  : 03-Jan-2012
 Author        : Recifense
 Features:
 - God Mode
 - Minimum Resources
 ===========================================
}

[ENABLE]
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(TW2CD.exe+02c3cf,c7 40 28 01 00 00 00)
assert(TW2CD.exe+0b60cd,8b 00 89 42 40)
assert(TW2CD.exe+035209,03 81 84 00 00 00)

//=========================================
alloc(MyCode,1024)
//=========================================
// Declaration section
label(_MonCorrupted)
label(_BackMC)
label(_ExitMC)
label(_GodMode)
label(_BackGM)
label(_ExitGM)
label(_MonRes)
label(_BackMR)
label(_ExitMR)
label(pUnit)
label(pPlayer)
label(pRes)
label(iPlayer)
label(iEnableGM)
label(iEnableMR)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pUnit)
registersymbol(pPlayer)
registersymbol(pRes)
registersymbol(iPlayer)
registersymbol(iEnableGM)
registersymbol(iEnableMR)

//=========================================
MyCode:
//=========================================
_MonCorrupted:
 mov [eax+28],00000001             // Original code

_ExitMC:
 mov [eax+28],00000000             // No corruption detected
 jmp _BackMC                       // Back to main code

//=========================================
_GodMode:
 push ebx

 mov [pUnit],edx                    // Save ptr for debugging

 mov ebx,[edx+3c]
 cmp ebx,[iPlayer]
 jne _ExitGM

 cmp dword ptr [iEnableGM],0
 je _ExitGM                        // Jump if feature is disabled

 mov ebx,[edx+40]                  // Get current HP
 cmp ebx,[eax]
 jle _ExitGM

 mov [eax],ebx                     // Make next HP = current HP

_ExitGM:
 pop ebx

 mov eax,[eax]                     // Original code
 mov [edx+40],eax                  // Original code
 jmp _BackGM                       // Back to main code

//=========================================
_MonRes:
 push ebx

 mov [pRes],ecx

 cmp dword ptr [iEnableMR],0
 je _ExitMR                        // Jump if feature is disabled

 mov ebx,#15000
 cmp ebx,[ecx+00000084]
 jle _ExitMR

 mov [ecx+00000084],ebx

_ExitMR:
 pop ebx

 add eax,[ecx+00000084]            // Original code
 jmp _BackMR                       // Back to main code

//=========================================
 db '==========================&gt;'
 db 'CE6.1 Script by Recifense 010312'
//=========================================
// Variables
iEnableGM:
 dd 1
iEnableMR:
 dd 1
pUnit:
 dd 0
pPlayer:
 dd 0
pRes:
 dd 0
iPlayer:
 dd #2

//=========================================
// Hacking Points
TW2CD.exe+02c3cf:
 jmp _MonCorrupted
 nop
 nop
_BackMC:

TW2CD.exe+0b60cd:
 jmp _GodMode
_BackGM:

TW2CD.exe+035209:
 jmp _MonRes
 nop
_BackMR:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
TW2CD.exe+02c3cf:
// mov [eax+28],00000001
 db c7 40 28 01 00 00 00

TW2CD.exe+0b60cd:
// mov eax,[eax]
// mov [edx+40],eax
 db 8b 00 89 42 40

TW2CD.exe+035209:
// add eax,[ecx+00000084]
 db 03 81 84 00 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pUnit)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMR)
unregistersymbol(iPlayer)
unregistersymbol(pPlayer)
unregistersymbol(pRes)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
V1.0.0.1

struct UNIT:
0000 = 00688628
0004 = iIndex
0024 = aName ("Gandohar", "Swordman", etc)
0034 = iNameSize
0038 = i15
003c = iID (2 = player, 1 = AI)
0040 = icHP
00b8 = aType ("Mage_2", "Warrior", etc)

struct Resource:
0000 = 00f60530
0080 = iScore
0084 = iBaseGold
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Enable/Disable God Mode ==&gt; (1/0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Enable/Disable Minimum Resource ==&gt; (1/0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Two Worlds II - Castle Defense
 Game Version  : 1.0.0.1
 Process Name  : TW2CD.exe
 Script Version: 1.0
 CE Version    : 6.1
 Release date  : 03-Jan-2012
 Author        : Recifense
 Features:
 - God Mode
 - Minimum Resources
===========================================
</Comments>
</CheatTable>
