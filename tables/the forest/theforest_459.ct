<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Godmode (Read Table Extras (Right Bottom Corner in CE window))"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(injGodmode,D9 9B B8 00 00 00 E9) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
ffree st(0)
push eax
mov eax,64
mov [newmem+128],eax
fild dword ptr[newmem+128]

code:
  fstp dword ptr [ebx+000000B8]
  jmp return

injGodmode:
  jmp newmem
  nop
return:
registersymbol(injGodmode)

[DISABLE]

injGodmode:
  db D9 9B B8 00 00 00

unregistersymbol(injGodmode)
dealloc(newmem)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Unlimit Stamina (Read Table Extras)"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(injCurrentStamina1,D9 9F B4 00 00 00 0F) // should be unique
aobscan(injCurrentStamina2,D9 9F B4 00 00 00 EB)
aobscan(injCurrentStamina3,D9 98 B4 00 00 00 C9) // should be unique
aobscan(injMaxStamina,D9 9F BC 00 00 00 D9 87 C8) // should be unique
alloc(newmem1,$1000)
alloc(newmem2,$1000)
alloc(newmem3,$1000)
alloc(newmem4,$1000)

label(code1)
label(return1)
label(code2)
label(return2)
label(code3)
label(return3)
label(code4)
label(return4)

newmem1:

code1:
  fstp dword ptr [edi+000000B4]
  mov [edi+B4],(float)100
  jmp return1

injCurrentStamina1:
  jmp code1
  nop
return1:
registersymbol(injCurrentStamina1)

newmem2:

code2:
  fstp dword ptr [edi+000000B4]
  mov [edi+B4],(float)100
  jmp return2

injCurrentStamina2:
  jmp code2
  nop
return2:
registersymbol(injCurrentStamina2)

newmem3:

code3:
  fstp dword ptr [eax+000000B4]
  mov [eax+B4],(float)100
  jmp return3

injCurrentStamina3:
  jmp code3
  nop
return3:
registersymbol(injCurrentStamina3)

newmem4:

code4:
  fstp dword ptr [edi+000000BC]
  mov [edi+BC],(float)100
  jmp return4

injMaxStamina:
  jmp code4
  nop
return4:
registersymbol(injMaxStamina)

[DISABLE]

injCurrentStamina1:
  db D9 9F B4 00 00 00

unregistersymbol(injCurrentStamina1)
dealloc(newmem1)

injCurrentStamina2:
  db D9 9F B4 00 00 00

unregistersymbol(injCurrentStamina2)
dealloc(newmem2)

injCurrentStamina3:
  db D9 98 B4 00 00 00

unregistersymbol(injCurrentStamina3)
dealloc(newmem3)

injMaxStamina:
  db D9 9F BC 00 00 00

unregistersymbol(injMaxStamina)
dealloc(newmem4)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Unlimit Inventory Items (Read Table Extras)"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(injInventory,89 48 0C B8 01 00 00 00 EB) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add ecx,[ebp+0C]
  mov [eax+0C],ecx
  mov eax,00000001
  jmp return

injInventory:
  jmp code
  nop
  nop
  nop
return:
registersymbol(injInventory)

[DISABLE]

injInventory:
  db 89 48 0C B8 01 00 00 00

unregistersymbol(injInventory)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Unlimit Logs"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(injLogs,89 46 2C 8B 46 18 8B 4E) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  inc eax
  mov [esi+2C],eax
  mov eax,[esi+18]
  jmp return

injLogs:
  jmp code
  nop
return:
registersymbol(injLogs)

[DISABLE]

injLogs:
  db 89 46 2C 8B 46 18

unregistersymbol(injLogs)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>injGodmode</Name>
      <Address> 5FFD3258</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>injInventory</Name>
      <Address> 5FFC646C</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Notes:

Godmode:
You can enable godmode only, when you lost some health. (E.g. Jump from a cliff)

Unlimit Stamina:
Attack once with your Axe and also hold down Shift for ~1 second. Then you`re able to activate this cheat. After you clicked on it, it might take a few seconds.

Unlimit Inventory Items:
Pick up a stick and place it to any building/firepit whatever. Then you are able to use this cheat.

Unlimit Logs:
Pick up a log and place it to a building. Then you are able to activate this cheat. You need another log to make this cheat really working. When you finished your building, make sure to deactivate this cheat so you`re able to use your axe/second hand again.

</Comments>
</CheatTable>
