<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Inf. Lvl up Points (hold R to enable) V2"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(lvlPtSub_AOB,89 48 18 8B 57 1C 5D 89 50 1C 5B C2 08 00 CC CC CC CC CC CC CC CC 50 8B 44 24 08 83 C0 30)
label(lvlPtSubJMP)
registersymbol(lvlPtSubJMP)
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
globalalloc(pLvlUpPt,4)
aobscan(lvlPtRead_AOB,8B 50 18 89 53 18 8B 40 1C 5F 89 43 1C 5E B8 01 00 00 00)
label(lvlPtReadJMP)
registersymbol(lvlPtReadJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 'R'      //key R
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov ecx,[eax+18]

originalcode:
mov [eax+18],ecx
mov edx,[edi+1C]

exit:
jmp returnhere

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pLvlUpPt],eax

originalcode2:
mov edx,[eax+18]
mov [ebx+18],edx

exit2:
jmp returnhere2

lvlPtSub_AOB:               //"Reckoning.exe"+49CFBA:
lvlPtSubJMP:
jmp newmem
nop
returnhere:

lvlPtRead_AOB:              //"Reckoning.exe"+8C76E:
lvlPtReadJMP:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(newmem2)
lvlPtSubJMP:                //"Reckoning.exe"+49CFBA:
db 89 48 18 8B 57 1C
//Alt: mov [eax+18],ecx
//Alt: mov edx,[edi+1C]
unregistersymbol(lvlPtSubJMP)
lvlPtReadJMP:               //"Reckoning.exe"+8C76E:
db 8B 50 18 89 53 18
//Alt: mov edx,[eax+18]
//Alt: mov [ebx+18],edx
dealloc(pLvlUpPt)
unregistersymbol(lvlPtReadJMP)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Lvl up Point (Ctrl + set 200, Ctrl - set 0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pLvlUpPt</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>109</Key>
              </Keys>
              <Value>0</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>107</Key>
              </Keys>
              <Value>200</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
