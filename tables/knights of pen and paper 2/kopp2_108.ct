<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Scan &amp; Allocate &amp; Script"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(_inj1,89 86 04 01 00 00 8D 46 44)
registersymbol(_inj1)
aobscan(_inj2,89 86 08 01 00 00 8D 46 48)
registersymbol(_inj2)
aobscan(_inj3,8B 40 54 83 EC 0C 50 E8)
registersymbol(_inj3)

globalalloc(_money,4)

alloc(newmem,48)
label(returnhere)
label(originalcode)
label(exit)
newmem:
originalcode:
mov [_money],eax
mov eax,[eax+54]
sub esp,0C

exit:
jmp returnhere

_inj3:
jmp originalcode
nop
returnhere:




[DISABLE]
_inj1:
db 89 86 04 01 00 00
//mov [esi+00000104],eax
unregistersymbol(_inj1)

_inj2:
db 89 86 08 01 00 00
//mov [esi+00000108],eax
unregistersymbol(_inj2)

dealloc(_money)
unregistersymbol(_money)
dealloc(newmem)
_inj3:
db 8B 40 54 83 EC 0C
//mov eax,[eax+54]
//sub esp,0C
unregistersymbol(_inj3)



</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Gold"</Description>
          <LastState Value="98041" Activated="0" RealAddress="08780CCC"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>_money</Address>
          <Offsets>
            <Offset>54</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Freeze Health"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
cmp [esi+18],0
je originalcode
mov eax,[esi+00000138]

originalcode:
mov [esi+00000104],eax

exit:
jmp returnhere

_inj1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
_inj1:
db 89 86 04 01 00 00
//mov [esi+00000104],eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Freeze Energy"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+18],0
je originalcode
mov eax,[esi+0000013C]

originalcode:
mov [esi+00000108],eax
mov [esi+00000130],eax

exit:
jmp returnhere

_inj2:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
_inj2:
db 89 86 08 01 00 00
//mov [esi+00000108],eax

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Xp for party ( have to fight first before and after activation )"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(_inj4,D9 58 48 8B 45 08 8B 80 98 00 00 00)
registersymbol(_inj4)
globalalloc(_expg,4)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [_expg],eax
originalcode:
fstp dword ptr [eax+48]
mov eax,[ebp+08]

exit:
jmp returnhere

_inj4:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
_inj4:
db D9 58 48 8B 45 08
//fstp dword ptr [eax+48]
//mov eax,[ebp+08]

dealloc(_expg)
unregistersymbol(_expg)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>50</ID>
              <Description>"will gain"</Description>
              <LastState Value="99999992" Activated="0" RealAddress="13412588"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>_expg</Address>
              <Offsets>
                <Offset>48</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_expg</Name>
      <Address>05730010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_money</Name>
      <Address>05730000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_inj1</Name>
      <Address> 046BEF2F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_inj2</Name>
      <Address> 046BF0BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_inj3</Name>
      <Address> 10ED69D9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_inj4</Name>
      <Address> 10F82C97</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
