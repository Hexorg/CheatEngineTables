<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>73</ID>
      <Description>"[X] &lt;== X Rebirth v3.00-189926 x64 Steam Script 1.1"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : X-REBIRTH
 Game Version  : 3.00 (189926)
 Game Sponsor  : Fennix102
 Proces Name   : XRebirth.exe (64 bits)
 Script Version: 1.1
 CE Version    : 6.4
 Release date  : 11-Dec-2014
 Author        : Recifense
 History:
 27-Jun-14: First Release (version 2.20 - Steam)
 09-Jul-14: Release for (version 2.20-184360 - Steam)
 29-Oct-14: Release for (version 2.51-187332 - Steam)
 11-Dec-14: Release for (version 3.00-189926 - Steam)
 Features:
 - Minimum Money
 - God Mode
 - Unlimited Shield
 - Unlimited Missiles
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"XRebirth.exe")
define(MHPR,XRebirth.exe+00734680) //##
define(MPSP,XRebirth.exe+000f24a8) //#=
define(MSSD,XRebirth.exe+00183d22) //#=
define(MSME,XRebirth.exe+00170e1f) //=#
define(MSM1,XRebirth.exe+001719df) //-new

//=========================================
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.4)
define(ctMMMY,#640000000)   // Minimum Money

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MHPR,48 8b 41 10 c3 cc cc cc cc cc cc cc cc cc cc cc 48 8b 41 20 c3 cc)
assert(MPSP,48 8b 83 28 04 00 00 f3 0f 59 05 ?? ?? ?? ?? f3 0f 5e 40 68 0f 28)
assert(MSSD,f2 0f 11 51 f0 89 41 e8 c3 cc cc cc cc cc 48 8d 41 e8 c3 cc cc cc)
assert(MSME,48 0f 42 c1 8b 00 29 01 48 8b 5c 24 68 48 83 c4 40 5f 5e 5d c3 cc)
assert(MSM1,48 0f 42 c1 8b 00 29 01 48 8b 5c 24 68 48 83 c4 40 5f 5e 5d c3 cc)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_MonPlayerShip)
label(_MonPS00)
label(_BackMPS)
label(_ExitMPS)
label(_MonShipShield)
label(_MonSS00)
label(_BackMSS)
label(_ExitMSS)
label(_MonShipMissile)
label(_BackMSM)
label(_ExitMSM)
label(_MonShipMissile1)
label(_BackSM1)
label(_ExitSM1)
label(iEnableMMM)
label(iEnableMSD)
label(iEnableGMD)
label(iEnableMSM)
label(liMinMoney)
label(pPlayer)
label(pShipHull)
label(pShipShield)
label(pShield)
label(pHull)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMMM)
registersymbol(iEnableMSD)
registersymbol(iEnableGMD)
registersymbol(iEnableMSM)
registersymbol(liMinMoney)
registersymbol(pPlayer)
registersymbol(pShipHull)
registersymbol(pShipShield)

//=========================================
MyCode:
//=========================================
// When Money is Visible
_MonHumanPlayer:
 mov [pPlayer],rcx

 cmp dword ptr [iEnableMMM],0
 je _ExitMHP                       // Jump if feature is disabled

 mov rax,[liMinMoney]
 cmp rax,[rcx+10]
 js _ExitMHP

 mov [rcx+10],rax

_ExitMHP:
 mov rax,[rcx+10]                  // Original code (rds Money)
 ret                               // Original code
 jmp _BackMHP                      // Back to main code (template sake only)

//========================================= 300
// Called all the time
// RBX = pHull
_MonPlayerShip:
 push rcx

 mov rax,[rbx+00000498]
 test rax,rax
 jz _ExitMPS

 mov eax,[rax+08]
 cmp eax,'play'
 jne _ExitMPS

 mov rax,[rbx+00000518]
 test rax,rax
 jnz _ExitMPS

 mov rcx,[rbx+00000428]            // Get pShield

 mov [pShipHull],rbx
 mov [pShipShield],rcx
 lea rax,[rcx+000000a8]
 mov [pShield],rax
 lea rax,[rbx+00000400]            // Base 3
 mov [pHull],rax

 cmp dword ptr [iEnableMSD],0
 je _MonPS00                       // Jump if feature is disabled

 mov eax,[rcx+68]
 mov [rcx+00000090],eax

_MonPS00:
 cmp dword ptr [iEnableGMD],0
 je _ExitMPS                       // Jump if feature is disabled

 mov eax,[rbx+000003d4]
 mov [rbx+000003e8],eax

_ExitMPS:
 pop rcx

 mov rax,[rbx+00000428]            // Original code (rds pShield)
 jmp _BackMPS                      // Back to main code

//========================================= 300
// Called when shield or turbo bust is used
// RCX = pShield or pHull
_MonShipShield:
 cmp rcx,[pShield]
 jne _MonSS00

 cmp dword ptr [iEnableMSD],0
 je _ExitMSS                       // Jump if feature is disabled

 cmp eax,[rcx-18]
 jns _ExitMSS

 mov eax,[rcx-18]
 jmp _ExitMSS

_MonSS00:
 cmp rcx,[pHull]
 jne _ExitMSS

 cmp dword ptr [iEnableGMD],0
 je _ExitMSS                       // Jump if feature is disabled

 cmp eax,[rcx-18]
 jns _ExitMSS

 mov eax,[rcx-18]

_ExitMSS:
 movsd [rcx-10],xmm2               // Original code
 jmp _BackMSS                      // Back to main code

//========================================= 300
// Called when missile is shot
// RBP = ppHull
_MonShipMissile:
 cmovb rax,rcx                     // Original code

 mov rdi,[rbp+000000c0]
 cmp rdi,[pShipHull]
 jne _ExitMSM

 cmp dword ptr [iEnableMSM],0
 je _ExitMSM                       // Jump if feature is disabled

 xor edi,edi
 mov [rax],edi

_ExitMSM:
 mov eax,[rax]                     // Original code
 sub [rcx],eax                     // Original code (upd missile)
 jmp _BackMSM                      // Back to main code

//========================================= 300 (new)
// Called when missile is shot
// RBP = ppHull
_MonShipMissile1:
 cmovb rax,rcx                     // Original code

 mov rdi,[rbp+000000c0]
 cmp rdi,[pShipHull]
 jne _ExitSM1

 cmp dword ptr [iEnableMSM],0
 je _ExitSM1                       // Jump if feature is disabled

 xor edi,edi
 mov [rax],edi

_ExitSM1:
 mov eax,[rax]                     // Original code
 sub [rcx],eax                     // Original code (upd missile)
 jmp _BackSM1                      // Back to main code

//=========================================
 db '========================================&gt;'
 db 'CE6.4 Script by Recifense 121114'
//=========================================
// Variables
iEnableMMM:
 dd 0
iEnableMSD:
 dd 0
iEnableGMD:
 dd 0
iEnableMSM:
 dd 0
liMinMoney:
 dq ctMMMY
pPlayer:
 dq 0
pShipHull:
 dq MyCode
pShipShield:
 dq MyCode
pHull:
 dq MyCode
pShield:
 dq MyCode

//=========================================
// Hacking Points
MHPR:
 jmp _MonHumanPlayer
_BackMHP:

MPSP:
 jmp _MonPlayerShip
 nop
 nop
_BackMPS:

MSSD:
 jmp _MonShipShield
_BackMSS:

MSME:
 jmp _MonShipMissile
 nop
 nop
 nop
_BackMSM:

MSM1:
 jmp _MonShipMissile1
 nop
 nop
 nop
_BackSM1:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MHPR:
// mov rax,[rcx+10]
// ret
 db 48 8b 41 10 c3

MPSP:
// mov rax,[rbx+00000428]
 db 48 8b 83 28 04 00 00

MSSD:
// movsd [rcx-10],xmm2
 db f2 0f 11 51 f0

MSME:
// cmovb rax,rcx
// mov eax,[rax]
// sub [rcx],eax
 db 48 0f 42 c1 8b 00 29 01

MSM1:
// cmovb rax,rcx
// mov eax,[rax]
// sub [rcx],eax
 db 48 0f 42 c1 8b 00 29 01

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMMM)
unregistersymbol(iEnableMSD)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMSM)
unregistersymbol(liMinMoney)
unregistersymbol(pPlayer)
unregistersymbol(pShipHull)
unregistersymbol(pShipShield)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
2.51-187332:
define(MHPR,XRebirth.exe+000bf430) //#
define(MPSP,XRebirth.exe+000eedf4) //#
define(MSSD,XRebirth.exe+000911e2) //#
define(MSME,XRebirth.exe+0016f237) //=
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Enable/Disable Minimum Money ==============&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMMM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Enable/Disable Unlimited Shield ==============&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMSD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Enable/Disable God Mode ==================&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"Enable/Disable Unlimited Missiles =============&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMSM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : X-REBIRTH
 Game Version  : 3.00 (189926)
 Game Sponsor  : Fennix102
 Proces Name   : XRebirth.exe (64 bits)
 Script Version: 1.1
 CE Version    : 6.4
 Release date  : 11-Dec-2014
 Author        : Recifense
 History:
 27-Jun-14: First Release (version 2.20 - Steam)
 09-Jul-14: Release for (version 2.20-184360 - Steam)
 29-Oct-14: Release for (version 2.51-187332 - Steam)
 11-Dec-14: Release for (version 3.00-189926 - Steam)
 Features:
 - Minimum Money      [1]
 - Unlimited Shield   [2]
 - God Mode           [3]
 - Unlimited Missile  [4]
 - Some Pointers
===========================================
[1] Just look at the player's info or make the money change;
[2] For player's current controlled ship;
[3] For player's current controlled ship;
[4] For player's current controlled ship;
===========================================
[USAGE]
1) Run CE64;
2) Run Game;
3) Load the game process in CE;
4) Change the value to "Enabled" of each cheat you want to use;
5) Game On;
===========================================
[HOTKEYS]
SHIFT+Home  = Enable  all cheats;
SHIFT+End   = Disable all cheats;
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat. So you can always come back in case you don't like the result.
===========================================
[INFO]
Tested on Win 7 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
