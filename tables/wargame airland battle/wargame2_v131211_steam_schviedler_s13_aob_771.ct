<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>151</ID>
      <Description>"[X] &lt;== Wargame 2 Airland Battle v13.12.11.2100001579 Script v1.3 AOB"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Wargame 2 Airland Battle
 Game Version  : 13.12.02.2100001574 (steam)
 Game Sponsor  : schviedler
 Proces Name   : wargame2.exe
 Script Version: 1.3 (AOB)
 CE Version    : 6.3
 Release date  : 06-Dec-2013
 Author        : Recifense
 History:
 22-Jun-13: First Release
 23-Jun-13: Release for version 13.06.20.2100001337 (3DM)
 15-Jul-13: Release for version 13.07.10.2100001382 (3DM)
 08-Aug-13: Release for version 13.07.31.2100001420 (3DM)
 11-Aug-13: Release for version 13.08.09.2100001439 (3DM)
 16-Aug-13: Release for version 13.08.12.2100001442 (Steam)
 17-Aug-13: Fixing a bug in identifying player
 22-Aug-13: Release for version 13.08.21.2100001454 (Steam)
 27-Aug-13: Release for version 13.08.27.2100001465 (Steam)
 29-Aug-13: Release for version 13.08.28.2100001467 (Steam)
 30-Aug-13: Release for version 13.08.30.2100001470 (Steam)
 13-Sep-13: Release for version 13.09.12.2100001487 (Steam)
 16-Sep-13: Release for version 13.09.13.2100001491 (Steam)
 21-Sep-13: Release for version 13.09.18.2100001495 (Steam)
 21-Sep-13: AOB version of the script
 06-Dec-13: Release for version 13.12.02.2100001574 (Steam)
 Features:
 - Minimum Points to Spend
 - Unlimited Fuel
 - Will Power
 - God Mode
 - Unlimited Ammo
 - Unlimited Resources
===========================================
}

//=========================================
// Definitions
define(LUDO,wargame2.exe)
define(MAXU,#1000)
define(SIGN,55555555)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

AOBScan(aobMHRS,8b 41 0c 56 8b 71 08 8b d6 83 e2 07 83 f8 03 ?? ?? ff 24 85)
AOBScan(aobMFFL,f3 0f 11 46 1c 85 c9 ?? ?? 8b 01 8b 40 20 ff d0 8b 4e 1c 0f)
AOBScan(aobFHUN,8b 01 ff 60 3c cc cc ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ??)
AOBScan(aobGDMD,f3 0f 10 87 b0 00 00 00 f3 0f 58 44 24 20 8d 47 08 50 0f 28)
AOBScan(aobMUWL,f3 0f 11 8f a4 00 00 00 e8 ?? ?? ?? ?? d9 44 24 0c 5f 5e 8b)
AOBScan(aobMFAM,89 46 08 89 0e c7 46 28 05 00 00 00 e9 ?? ?? ?? ?? 85 c9 ??)
AOBScan(aobMUSS,8b 87 b0 00 00 00 89 46 04 8b 87 a8 00 00 00 88 4e 18 0f b6)
AOBScan(aobMPRS,f3 0f 10 4f 18 f3 0f 5e 4f 14 85 c9 ?? ?? f3 0f 10 81 dc 00)
AOBScan(aobMFA2,89 46 08 89 0e c7 46 28 05 00 00 00 ?? ?? 0f 2f 46 20 ?? ??)
AOBScan(aobMSCE,8b 40 2c 89 41 34 89 84 24 4c 07 00 00 8b 46 0c 89 94 24 20)
AOBScan(aobMFSU,8b 42 08 89 46 18 0f b6 42 0c 88 46 1c 0f b6 42 0d 88 46 1d)

//=========================================
alloc(MyCode,4096,LUDO)
alloc(Buffer,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanRes)
label(_MonHR00)
label(_BackMHR)
label(_ExitMHR)
label(_MonFullFuel)
label(_BackMFF)
label(_ExitMFF)
label(_FindHumanUnit)
label(_FindHU0)
label(_BackFHU)
label(_ExitFHU)
label(_GodMode)
label(_GodMD00)
label(_BackGMD)
label(_ExitGMD)
label(_MonUnitWill)
label(_MonUW00)
label(_BackMUW)
label(_ExitMUW)
label(_MonFullAmmo)
label(_BackMFA)
label(_ExitMFA)
label(_MonUnitStatus)
label(_MonUS00)
label(_BackMUS)
label(_ExitMUS)
label(_MonPlayerRes)
label(_BackMPR)
label(_ExitMPR)
label(_MonFullAmmo2)
label(_BackMA2)
label(_ExitMA2)
label(_MonScenarioEnd)
label(_BackMSE)
label(_ExitMSE)
label(_MonFullSupport)
label(_BackMFS)
label(_ExitMFS)
label(pRes)
label(iIndex)
label(iEnableMHR)
label(iEnableMAR)
label(iEnableMFF)
label(iEnableGMD)
label(iEnableMUW)
label(iEnableMFA)
label(iEnableMPR)
label(iEnableMFS)
label(iMinPoints)
label(iMaxPoints)
label(pFHUB)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(Buffer)
registersymbol(pRes)
registersymbol(iIndex)
registersymbol(iEnableMHR)
registersymbol(iEnableMAR)
registersymbol(iEnableMFF)
registersymbol(iEnableGMD)
registersymbol(iEnableMUW)
registersymbol(iEnableMFA)
registersymbol(iEnableMPR)
registersymbol(iEnableMFS)
registersymbol(iMinPoints)
registersymbol(iMaxPoints)
registersymbol(aobMHRS)
registersymbol(aobMFFL)
registersymbol(aobFHUN)
registersymbol(aobGDMD)
registersymbol(aobMUWL)
registersymbol(aobMFAM)
registersymbol(aobMUSS)
registersymbol(aobMPRS)
registersymbol(aobMFA2)
registersymbol(aobMSCE)
registersymbol(aobMFSU)
registersymbol(pFHUB)

//=========================================
MyCode:
//=========================================
// When updating points (money)
_MonHumanRes:
 mov eax,[esp+04]
 test eax,eax
 jz _ExitMHR

 mov eax,[ecx+34]
 test eax,eax
 jz _MonHR00

 mov [pRes],ecx
 movzx eax,word ptr [ecx+04]
 mov [iIndex],eax

 cmp dword ptr [iEnableMHR],0
 je _ExitMHR                       // Jump if feature is disabled

 mov eax,[iMinPoints]
 cmp eax,[esp+04]
 jle _ExitMHR

 mov [esp+04],eax
 jmp _ExitMHR
//=======
_MonHR00:
 mov [pRes+04],ecx

 cmp dword ptr [iEnableMAR],0
 je _ExitMHR                       // Jump if feature is disabled

 mov eax,[iMaxPoints]
 cmp eax,[esp+04]
 jge _ExitMHR

 mov [esp+04],eax

_ExitMHR:
 mov eax,[ecx+0C]                  // Original code
 push esi                          // Original code
 mov esi,[ecx+08]                  // Original code
 jmp _BackMHR                      // Back to main code

//=========================================
// When updating fuel
_MonFullFuel:
 push eax
 push ebx

 cmp dword ptr [iEnableMFF],0
 je _ExitMFF                       // Jump if feature is disabled

 mov eax,[esi+08]
 cmp eax,MAXU
 jg _ExitMFF

 mov ebx,SIGN
 cmp ebx,[Buffer+eax*4]
 jne _ExitMFF

 movss xmm0,[esi+18]               // Original code

_ExitMFF:
 pop ebx
 pop eax

 movss [esi+1C],xmm0               // Original code
 jmp _BackMFF                      // Back to main code

//=========================================
// Find Human player`s Units
_FindHumanUnit:
 push ebx

 mov eax,[ecx+08]
 test eax,eax
 jnz _FindHU0

 mov eax,[ecx+14]
 test eax,eax
 jnz _ExitFHU

 mov eax,3
 cmp eax,[ecx+00000158]
 jne _ExitFHU

 cmp eax,[ecx+00000168]
 jne _ExitFHU

 mov eax,[ecx]
 mov [pFHUB],eax

_FindHU0:
 mov eax,[ecx]
 cmp eax,[pFHUB]
 jne _ExitFHU

 mov ebx,[ecx+10]
 test ebx,ebx
 jz _ExitFHU

 mov eax,[ecx+08]
 cmp eax,MAXU
 jg _ExitFHU

 mov dword ptr [Buffer+eax*4],00

 movzx eax,word ptr [ebx+20]
 cmp eax,[iIndex]
 jne _ExitFHU

 mov eax,[ecx+08]
 mov ebx,SIGN
 mov [Buffer+eax*4],ebx

_ExitFHU:
 pop ebx

 mov eax,[ecx]                     // Original code
 jmp dword ptr [eax+3C]            // Original code
 jmp _BackFHU                      // Back to main code

//=========================================
_GodMode:
 mov eax,[edi+08]
 cmp eax,MAXU
 jg _ExitGMD

 push ebx
 mov ebx,SIGN
 cmp ebx,[Buffer+eax*4]
 pop ebx
 jne _ExitGMD

 xor eax,eax

 cmp dword ptr [iEnableGMD],0
 je _GodMD00                       // Jump if feature is disabled

 mov [esp+20],eax
 mov [edi+000000b0],eax
 mov [edi+000000d4],eax

_GodMD00:
 cmp dword ptr [iEnableMUW],0
 je _ExitGMD                       // Jump if feature is disabled

 mov [edi+000000a4],eax

_ExitGMD:
 movss xmm0,[edi+000000B0]         // Original code
 jmp _BackGMD                      // Back to main code

//=========================================
_MonUnitWill:
 push eax

 movss [edi+000000A4],xmm1         // Original code

 mov eax,[edi+08]
 cmp eax,MAXU
 jg _ExitMUW

 push ebx
 mov ebx,SIGN
 cmp ebx,[Buffer+eax*4]
 pop ebx
 jne _ExitMUW

 xor eax,eax

 cmp dword ptr [iEnableGMD],0
 je _MonUW00                       // Jump if feature is disabled

 mov [edi+000000b0],eax
 mov [edi+000000d4],eax

_MonUW00:
 cmp dword ptr [iEnableMUW],0
 je _ExitMUW                       // Jump if feature is disabled

 mov [edi+000000a4],eax

_ExitMUW:
 pop eax
 jmp _BackMUW                      // Back to main code

//=========================================
// When loading ammo (Player and AI)
_MonFullAmmo:
 cmp dword ptr [iEnableMFA],0
 je _ExitMFA                       // Jump if feature is disabled

 mov ecx,[esi+18]                  // Max Ammo
 sub ecx,eax                       // Max - Loaded

_ExitMFA:
 mov [esi+08],eax                  // Original code (loaded ammo)
 mov [esi],ecx                     // Original code (Remaining Ammo)
 jmp _BackMFA                      // Back to main code

//=========================================
_MonUnitStatus:
 mov eax,[edi+08]
 cmp eax,MAXU
 jg _ExitMUS

 push ebx
 mov ebx,SIGN
 cmp ebx,[Buffer+eax*4]
 pop ebx
 jne _ExitMUS

 cmp dword ptr [iEnableGMD],0
 je _MonUS00                       // Jump if feature is disabled

 xor eax,eax
 mov [edi+000000b0],eax
 mov [edi+000000d4],eax

 mov eax,(float)20.0
 cmp eax,[edi+000000a8]
 jle _MonUS00

 mov [edi+000000a8],eax

_MonUS00:
 cmp dword ptr [iEnableMUW],0
 je _ExitMUS                       // Jump if feature is disabled

 xor eax,eax
 mov [edi+000000A4],eax

_ExitMUS:
 mov eax,[edi+000000B0]
 jmp _BackMUS                      // Back to main code

//=========================================
_MonPlayerRes:
 push eax

 mov eax,[edi+08]
 cmp eax,[iIndex]
 jne _ExitMPR

 mov [pRes+08],edi

 cmp dword ptr [iEnableMPR],0
 je _ExitMPR                       // Jump if feature is disabled

 mov eax,[edi+14]
 mov [edi+18],eax

_ExitMPR:
 pop eax

 movss xmm1,[edi+18]               // Original code
 jmp _BackMPR                      // Back to main code

//=========================================
// When loading ammo (Player and AI)
_MonFullAmmo2:
 cmp dword ptr [iEnableMFA],0
 je _ExitMA2                       // Jump if feature is disabled

 mov ecx,[esi+18]                  // Max Ammo
 sub ecx,eax                       // Max - Loaded

_ExitMA2:
 mov [esi+08],eax                  // Original code (loaded ammo)
 mov [esi],ecx                     // Original code (Remaining Ammo)
 jmp _BackMA2                      // Back to main code

//=========================================
// When a scenario ends
_MonScenarioEnd:
 mov dword ptr [iIndex],#99

_ExitMSE:
 mov eax,[eax+2C]                  // Original code (loaded ammo)
 mov [ecx+34],eax                  // Original code (Remaining Ammo)
 jmp _BackMSE                      // Back to main code

 //=========================================
_MonFullSupport:
 cmp dword ptr [iEnableMFS],0
 je _ExitMFS                       // Jump if feature is disabled

 mov eax,[esi+08]
 cmp eax,MAXU
 jg _ExitMFS

 push ebx
 mov ebx,SIGN
 cmp ebx,[Buffer+eax*4]
 pop ebx
 jne _ExitMFS

 mov eax,[esi+14]
 mov [edx+08],eax

_ExitMFS:
 mov eax,[edx+08]                  // Original code
 mov [esi+18],eax                  // Original code
 jmp _BackMFS                      // Back to main code

//=========================================
 db '====================================&gt;'
 db 'CE6.3 Script by Recifense 122013'
//=========================================
// Variables
iEnableMHR:
 dd 0
iEnableMFF:
 dd 0
iEnableGMD:
 dd 0
iEnableMUW:
 dd 0
iEnableMFA:
 dd 0
iEnableMPR:
 dd 0
iEnableMFS:
 dd 0
iEnableMAR:
 dd 0
pRes:
 dd 0
 dd 0
 dd 0
iIndex:
 dd #99
iMinPoints:
 dd #2000
iMaxPoints:
 dd #300
pFHUB:
 dd 55555555

//=========================================
// Hacking Points
aobMHRS:
 jmp _MonHumanRes
 nop
 nop
_BackMHR:

aobMFFL:
 jmp _MonFullFuel
_BackMFF:

aobFHUN:
 jmp _FindHumanUnit
_BackFHU:

aobGDMD:
 jmp _GodMode
 nop
 nop
 nop
_BackGMD:

aobMUWL:
 jmp _MonUnitWill
 nop
 nop
 nop
_BackMUW:

aobMFAM:
 jmp _MonFullAmmo
_BackMFA:

aobMUSS:
 jmp _MonUnitStatus
 nop
_BackMUS:

aobMPRS:
 jmp _MonPlayerRes
_BackMPR:

aobMFA2:
 jmp _MonFullAmmo2
_BackMA2:

aobMSCE:
 jmp _MonScenarioEnd
 nop
_BackMSE:

aobMFSU:
 jmp _MonFullSupport
 nop
_BackMFS:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
aobMHRS:
// mov eax,[ecx+0C]
// push esi
// mov esi,[ecx+08]
 db 8b 41 0c 56 8b 71 08

aobMFFL:
// movss [esi+1C],xmm0
 db f3 0f 11 46 1c

aobFHUN:
// mov eax,[ecx]
// jmp dword ptr [eax+3C]
 db 8b 01 ff 60 3c

aobGDMD:
// movss xmm0,[edi+000000B0]
 db f3 0f 10 87 b0 00 00 00

aobMUWL:
// movss [edi+000000A4],xmm1
 db f3 0f 11 8f a4 00 00 00

aobMFAM:
// mov [esi+08],eax
// mov [esi],ecx
 db 89 46 08 89 0e

aobMUSS:
// mov eax,[edi+000000B0]
 db 8b 87 b0 00 00 00

aobMPRS:
// movss xmm1,[edi+18]
 db f3 0f 10 4f 18

aobMFA2:
// mov [esi+08],eax
// mov [esi],ecx
 db 89 46 08 89 0e

aobMSCE:
// mov eax,[eax+2C]
// mov [ecx+34],eax
 db 8b 40 2c 89 41 34

aobMFSU:
// mov eax,[edx+08]
// mov [esi+18],eax
 db 8b 42 08 89 46 18

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(Buffer)
unregistersymbol(pRes)
unregistersymbol(iIndex)
unregistersymbol(iEnableMHR)
unregistersymbol(iEnableMAR)
unregistersymbol(iEnableMFF)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMUW)
unregistersymbol(iEnableMFA)
unregistersymbol(iEnableMPR)
unregistersymbol(iEnableMFS)
unregistersymbol(iMinPoints)
unregistersymbol(iMaxPoints)
unregistersymbol(aobMHRS)
unregistersymbol(aobMFFL)
unregistersymbol(aobFHUN)
unregistersymbol(aobGDMD)
unregistersymbol(aobMUWL)
unregistersymbol(aobMFAM)
unregistersymbol(aobMUSS)
unregistersymbol(aobMPRS)
unregistersymbol(aobMFA2)
unregistersymbol(aobMSCE)
unregistersymbol(aobMFSU)
unregistersymbol(pFHUB)

//=========================================
dealloc(MyCode)
dealloc(Buffer)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
13.09.18.2100001491:
define(MHRS,wargame2.exe+00655070) //==========
define(MFFL,wargame2.exe+007efecc) //==========
define(FHUN,wargame2.exe+0059dca0) //==========
define(GDMD,wargame2.exe+007bf7e3) //==========
define(MUWL,wargame2.exe+007bf8c0) //==========
define(MFAM,wargame2.exe+006e6445) //==========
define(MUSS,wargame2.exe+007bef1f) //==========
define(MPRS,wargame2.exe+007f1da5) //*=========
define(MFA2,wargame2.exe+006e6515) //==========
define(MSCE,wargame2.exe+0082d7e6) //=*========
define(MFSU,wargame2.exe+008408dd) //==========

define(FHUB,wargame2.exe+0156e414) // 0196e414
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Enable/Disable Minimum Strategic Points =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMHR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Minimum Points ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinPoints</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>90</ID>
          <Description>"Enable/Disable Unlimited Fuel =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMFF</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"Enable/Disable God Mode =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>89</ID>
          <Description>"Enable/Disable Full Will Power =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMUW</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>106</ID>
          <Description>"Enable/Disable Unlimited Ammo =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMFA</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"Enable/Disable Base Unlimited Resources =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMPR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>152</ID>
          <Description>"Enable/Disable Unlimited Support Resources =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMFS</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Wargame 2 Airland Battle
 Game Version  : 13.12.11.2100001579 (steam)
 Game Sponsor  : schviedler
 Proces Name   : wargame2.exe
 Script Version: 1.3 (AOB)
 CE Version    : 6.3
 Release date  : 20-Dec-2013
 Author        : Recifense
 History:
 22-Jun-13: First Release
 23-Jun-13: Release for version 13.06.20.2100001337 (3DM)
 15-Jul-13: Release for version 13.07.10.2100001382 (3DM)
 08-Aug-13: Release for version 13.07.31.2100001420 (3DM)
 11-Aug-13: Release for version 13.08.09.2100001439 (3DM)
 16-Aug-13: Release for version 13.08.12.2100001442 (Steam)
 17-Aug-13: Fixing a bug in identifying player
 22-Aug-13: Release for version 13.08.21.2100001454 (Steam)
 27-Aug-13: Release for version 13.08.27.2100001465 (Steam)
 29-Aug-13: Release for version 13.08.28.2100001467 (Steam)
 30-Aug-13: Release for version 13.08.30.2100001470 (Steam)
 13-Sep-13: Release for version 13.09.12.2100001487 (Steam)
 16-Sep-13: Release for version 13.09.13.2100001491 (Steam)
 21-Sep-13: Release for version 13.09.18.2100001495 (Steam)
 21-Sep-13: AOB version of the script
 06-Dec-13: Release for version 13.12.02.2100001574 (Steam)
 20-Dec-13: Release for version 13.12.11.2100001579 (Steam) +fix (2x2)
 Features:
 - Minimum Points to Spend [1]
 - Unlimited Fuel          [2]
 - Will Power              [3]
 - God Mode                [4]
 - Unlimited Ammo          [5]
 - Unlimited Resources     [6]
===========================================
[1] Human Player's strategic points will not go under minimum value (default = 2000);
[2] Human Player's units's fuel will not decrease;
[3] Human Player's units will always be CALM;
[4] Human Player's units will not die;(*)
[5] This will work for human and AI players's units; (**)
[6] Human Player's support units will have unlimited supply;
(* ) But they can get stunned, etc;
(**) Some units can have damaged parts. If the part is related to ammo, so the ammo will be decreased (You can see that in helicopters);
===========================================
HOTKEYS:
CTRL+Home = Enable  all cheats;
CTRL+End  = Disable all cheats;
===========================================
[NOTE] This game is complicated, so I don't intend to add any additional cheat.
===========================================
[NOTE] This was my first script/table for CE6.3.
===========================================
Cheers 
</Comments>
</CheatTable>
