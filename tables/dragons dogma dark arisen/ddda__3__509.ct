<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Full HP (all human) (may still be killed if damge &gt;current HP)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(hpWrite1AOB,DDDA.exe,F3 0F 11 89 9C 02 00 00 89 B7 F4 3D 00 00)
registersymbol(hpWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
/*cmp [ecx+24],0
jne originalcode
cmp [ecx+24],ffffffff
je originalcode
cmp [ecx+2c],ffffffff
je originalcode
cmp [ecx+34],ffffffff
je originalcode
cmp [ecx+38],ffffffff
je originalcode
cmp [ecx+3c],ffffffff
je originalcode*/
test eax,eax
jz originalcode
movss xmm1,[eax+c]
movss [eax+8],xmm1
movss [ecx+2a4],xmm1

originalcode:
movss [ecx+0000029C],xmm1

exit:
jmp returnhere

///

hpWrite1AOB: //"DDDA.exe"+761311:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hpWrite1AOB: //"DDDA.exe"+761311:
db F3 0F 11 89 9C 02 00 00
//Alt: movss [ecx+0000029C],xmm1
unregistersymbol(hpWrite1AOB)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Full Stamina (all human)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(staminaWrite1AOB,DDDA.exe,F3 0F 11 85 A8 02 00 00 8B BE EC 3D 00 00)
registersymbol(staminaWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
/*cmp [ebp+24],0
jne originalcode
cmp [ebp+24],ffffffff
je originalcode
cmp [ebp+2c],ffffffff
je originalcode
cmp [ebp+34],ffffffff
je originalcode
cmp [ebp+38],ffffffff
je originalcode
cmp [ebp+3c],ffffffff
je originalcode*/
comiss xmm0,[ebp+2a8]
jbe exit

originalcode:
movss [ebp+000002A8],xmm0

exit:
jmp returnhere

///

staminaWrite1AOB: //"DDDA.exe"+77ED22:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminaWrite1AOB: //"DDDA.exe"+77ED22:
db F3 0F 11 85 A8 02 00 00
//Alt: movss [ebp+000002A8],xmm0
unregistersymbol(staminaWrite1AOB)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Highlighted Item"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemNameReadCall,DDDA.exe,8B 44 24 04 39 81 80 00 00 00)
registersymbol(highlightedItemNameReadCall)
aobscanmodule(highlightedItemIDReadAOB,DDDA.exe,8B F0 0F BF 47 10 85 C0 78)
registersymbol(highlightedItemIDReadAOB)
aobscanmodule(highlightedItemStringReadAOB,DDDA.exe,85 C9 74 07 52 57 E8 ** ** ** ** 8B C3)
registersymbol(highlightedItemStringReadAOB)
aobscanmodule(highlightedEquipmentStringReadAOB,DDDA.exe,8B ** ** ** ** ** ** 85 C9 74 07 56 52 E8)
registersymbol(highlightedEquipmentStringReadAOB)

///

label(pHighlightedItem)
registersymbol(pHighlightedItem)

label(pHighlightedItemName)
registersymbol(pHighlightedItemName)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHighlightedItem],edi

originalcode:
movsx eax,word ptr [edi+10]
test eax,eax

exit:
jmp returnhere

///
pHighlightedItem:
dd 0
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedItemStringReadAOB+b //DDDA.exe+26908C
pushad
push eax
call highlightedItemNameReadCall
mov [pHighlightedItemName],eax

originalcode2:
popad
//test ecx,ecx
//je highlightedItemStringReadAOB+b //DDDA.exe+26908C
push edx

exit2:
jmp returnhere2

///
pHighlightedItemName:
dd 0
///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
pushad
push eax
call highlightedItemNameReadCall
mov [pHighlightedItemName],eax

originalcode3:
popad
//test ecx,ecx
//je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
push esi

exit3:
jmp returnhere3

///

highlightedItemIDReadAOB+2: //"DDDA.exe"+5937F:
jmp newmem
nop
returnhere:

highlightedItemStringReadAOB: //"DDDA.exe"+269081:
jmp newmem2
returnhere2:

highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
jmp newmem3
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(highlightedItemNameReadCall)
dealloc(newmem)
highlightedItemIDReadAOB+2: //"DDDA.exe"+5937F:
db 0F BF 47 10 85 C0
//Alt: movsx eax,word ptr [edi+10]
//Alt: test eax,eax
unregistersymbol(highlightedItemIDReadAOB)
dealloc(newmem2)
highlightedItemStringReadAOB: //"DDDA.exe"+269081:
db 85 C9 74 07 52
//Alt: test ecx,ecx
//Alt: je highlightedItemStringReadAOB+b //DDDA.exe+26908C
//Alt: push edx
unregistersymbol(highlightedItemStringReadAOB)
dealloc(newmem3)
highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
db 85 C9 74 07 56
//Alt: test ecx,ecx
//Alt: je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
//Alt: push esi
unregistersymbol(highlightedEquipmentStringReadAOB)

///

unregistersymbol(pHighlightedItem)

unregistersymbol(pHighlightedItemName)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>16</ID>
          <Description>"ID"</Description>
          <DropDownList DisplayValueAsItem="1">== Curatives ===============
0001:Scrag of Beast
0013:Berry
002B:Greenwarish
0030:Mithridate
0056:Interventive
== Tools ===============
0040:Lantern
0045:Flask of Oil
05CD:Festival Pie
== Other ===============
04BE:Work Table
04C3:Blank Scroll
== Weapons ===============
0195:Rusted Daggers
01F8:Rusted Bow
== Torso ===============
0227:Plebian Shirt
04A1:Set of Fisherman's Tatters
== Legs ===============
0228:Cloth Greaves
</DropDownList>
          <LastState Value="002B" RealAddress="0AB1B794"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>pHighlightedItem</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Name"</Description>
              <VariableType>String</VariableType>
              <Length>58</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pHighlightedItemName</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Quantity"</Description>
          <LastState Value="7" RealAddress="0AB1B796"/>
          <VariableType>2 Bytes</VariableType>
          <Address>pHighlightedItem</Address>
          <Offsets>
            <Offset>12</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Secret of Metamorphosis"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(menuItemChkOnSelectAOB,DDDA.exe,83 BB 84 02 00 00 0B)
registersymbol(menuItemChkOnSelectAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 11 //CTRL key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
pushad
push 10 //SHIFT key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov dword ptr [ebx+284],2

originalcode:
cmp dword ptr [ebx+00000284],0B

exit:
jmp returnhere

///

menuItemChkOnSelectAOB: //"DDDA.exe"+328F34:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
menuItemChkOnSelectAOB: //"DDDA.exe"+328F34:
db 83 BB 84 02 00 00 0B
//Alt: cmp dword ptr [ebx+00000284],0B
unregistersymbol(menuItemChkOnSelectAOB)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>90</ID>
      <Description>"Game Speed Mod"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(gameSpeedReadAOB,DDDA.exe,F3 0F 10 4A 24 F3 0F 59 49 70)
registersymbol(gameSpeedReadAOB)

label(bSlowMo)
registersymbol(bSlowMo)
label(bFirstExitSlowMo)
registersymbol(bFirstExitSlowMo)
label(pGameSpeed)
registersymbol(pGameSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pGameSpeed],edx
cmp byte ptr [bSlowMo],0
je @f
mov byte ptr [bFirstExitSlowMo],1
mov dword ptr [edx+24],(float)0.3
jmp originalcode
@@:
cmp byte ptr [bFirstExitSlowMo],1
jne originalcode
mov byte ptr [bFirstExitSlowMo],0
mov dword ptr [edx+24],(float)1

originalcode:
movss xmm1,[edx+24]

exit:
jmp returnhere

///
bSlowMo:
db 0
bFirstExitSlowMo:
db 0
pGameSpeed:
dd 0
///

gameSpeedReadAOB: //"DDDA.exe"+A34B6:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
gameSpeedReadAOB: //"DDDA.exe"+A34B6:
db F3 0F 10 4A 24
//Alt: movss xmm1,[edx+24]
unregistersymbol(gameSpeedReadAOB)

unregistersymbol(bSlowMo)
unregistersymbol(bFirstExitSlowMo)
unregistersymbol(pGameSpeed)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>92</ID>
          <Description>"Slow Motion?"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:Enable
</DropDownList>
          <LastState Value="0" RealAddress="1430004B"/>
          <VariableType>Byte</VariableType>
          <Address>bSlowMo</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>20</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>16</Key>
                <Key>20</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>91</ID>
          <Description>"Game Speed"</Description>
          <LastState Value="1" RealAddress="0AE93BB4"/>
          <VariableType>Float</VariableType>
          <Address>pGameSpeed</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>100</ID>
      <Description>"Extend Vertical Cam Limit"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(vCamLimitsCmpAOB,DDDA.exe,F3 0F 10 80 8C 00 00 00 ** ** ** ** ** ** ** ** F3 0F 10 11 ** ** ** ** ** ** ** ** ** ** ** ** ** F3 0F 10 80 88 00 00 00)
registersymbol(vCamLimitsCmpAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2) //,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

///

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ebx,(float)89.9
movd xmm0,ebx
jmp exit

originalcode:
movss xmm0,[eax+0000008C]

exit:
jmp returnhere

///

newmem2:
mov ebx,(float)-89.9
movd xmm0,ebx
jmp exit2

originalcode2:
movss xmm0,[eax+00000088]

exit2:
jmp returnhere2

///

vCamLimitsCmpAOB: //"DDDA.exe"+3C5B64:
jmp newmem
nop
nop
nop
returnhere:

vCamLimitsCmpAOB+21: //"DDDA.exe"+3C5B85:
jmp newmem2
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
vCamLimitsCmpAOB: //"DDDA.exe"+3C5B64:
db F3 0F 10 80 8C 00 00 00
//Alt: movss xmm0,[eax+0000008C]
vCamLimitsCmpAOB+21: //"DDDA.exe"+3C5B85:
db F3 0F 10 80 88 00 00 00
//Alt: movss xmm0,[eax+00000088]
unregistersymbol(vCamLimitsCmpAOB)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>134</ID>
      <Description>"No Clip .2"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(nvXReadAOB,DDDA.exe,D9 84 C1 C0 F1 03 00)
registersymbol(nvXReadAOB)
aobscanmodule(axisXYWriteAOB,DDDA.exe,F3 0F 11 7F 14 F3 0F 11 77 18)
registersymbol(axisXYWriteAOB)
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(vNV,16)
registersymbol(vNV)
label(pNVector)
registersymbol(pNVector)

label(pMovementInfo)
registersymbol(pMovementInfo)

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)
label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+eax*8+3f1c0]

movss xmm1,[ecx+eax*8+3f1c8]
shufps xmm1,xmm1,c6
addps xmm0,xmm1

movss xmm1,[ecx+eax*8+3f1d8]
shufps xmm1,xmm1,e1
addps xmm0,xmm1

movaps [vNV],xmm0
//mov byte ptr [bVNVSet],1

push ecx
lea ecx,[ecx+eax*8+3f1e0]
mov [pNVector],ecx
pop ecx

originalcode:
fld dword ptr [ecx+eax*8+0003F1C0]

exit:
jmp returnhere

///
pNVector:
dd 0
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMovementInfo],edi

originalcode2:
movss [edi+14],xmm7

exit2:
jmp returnhere2

///
pMovementInfo:
dd 0
///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
cmp [ebx+e0],fffffdff
je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
push eax

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f

xorps xmm1,xmm1
movss xmm3,[eax+18]
shufps xmm3,xmm3,c0 //set stick x axis to all but most significant element
subps xmm1,xmm3

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

mov eax,[pNVector]
test eax,eax
jz @f
mulps xmm1,[eax] //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1

//do y
mov eax,[pMovementInfo]
movss xmm1,[eax+14]
mov eax,(float)-1
movd xmm3,eax
mulss xmm1,xmm3     //neg least significant element
shufps xmm1,xmm1,c4 //copy stick y axis to 3rd element

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

movaps xmm3,[vNV]
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1


@@:
pop eax
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

nvXReadAOB: //"DDDA.exe"+9C2BF9:
jmp newmem
nop
nop
returnhere:

axisXYWriteAOB: //"DDDA.exe"+74F342:
jmp newmem2
returnhere2:

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
nvXReadAOB: //"DDDA.exe"+9C2BF9:
db D9 84 C1 C0 F1 03 00
//Alt: fld dword ptr [ecx+eax*8+0003F1C0]
unregistersymbol(nvXReadAOB)
dealloc(newmem2)
axisXYWriteAOB: //"DDDA.exe"+74F342:
db F3 0F 11 7F 14
//Alt: movss [edi+14],xmm7
unregistersymbol(axisXYWriteAOB)
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(vNV)
unregistersymbol(vNV)
unregistersymbol(pNVector)

unregistersymbol(pMovementInfo)

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)
unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>135</ID>
          <Description>"status (numpad0/ turn on, numpad0* turn off)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:No-Clip
</DropDownList>
          <LastState Value="0" RealAddress="43421145"/>
          <VariableType>Byte</VariableType>
          <Address>bFlyMode</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>96</Key>
                <Key>111</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>96</Key>
                <Key>106</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>136</ID>
          <Description>"x"</Description>
          <LastState Value="6940.565918" RealAddress="0CD100A0"/>
          <VariableType>Float</VariableType>
          <Address>pPlayerCoord</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>137</ID>
          <Description>"z"</Description>
          <LastState Value="1277.278198" RealAddress="0CD100A4"/>
          <VariableType>Float</VariableType>
          <Address>pPlayerCoord</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"y"</Description>
          <LastState Value="-5630.803223" RealAddress="0CD100A8"/>
          <VariableType>Float</VariableType>
          <Address>pPlayerCoord</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="0A388188"/>
          <VariableType>Float</VariableType>
          <Address>0A388188</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"No Description"</Description>
          <LastState Value="160" RealAddress="0A388978"/>
          <VariableType>Float</VariableType>
          <Address>0A388978</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="0CE45B78"/>
          <VariableType>Float</VariableType>
          <Address>0CE45B78</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="0CC79BB8"/>
          <VariableType>Float</VariableType>
          <Address>0CC79BB8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="0A38817C"/>
          <VariableType>Float</VariableType>
          <Address>0A38817C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="0A388184"/>
          <VariableType>Float</VariableType>
          <Address>0A388184</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="0A388180"/>
          <VariableType>Float</VariableType>
          <Address>0A388180</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"No Description"</Description>
          <LastState Value="-1" RealAddress="0CE889A8"/>
          <VariableType>Float</VariableType>
          <Address>0CE889A8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="0A388188"/>
          <VariableType>Float</VariableType>
          <Address>0A388188</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="0AA755E6"/>
          <VariableType>2 Bytes</VariableType>
          <Address>0AA755E6</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="0AA7B6CE"/>
          <VariableType>2 Bytes</VariableType>
          <Address>0AA7B6CE</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="38F8CC7C"/>
          <VariableType>2 Bytes</VariableType>
          <Address>38F8CC7C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"2 Bytes"</Description>
          <LastState Value="0000" RealAddress="0AA7B6CC"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>AA7B6CC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"No description"</Description>
          <LastState Value="0000" RealAddress="0AA7B6F4"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>0AA7B6F4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"No description"</Description>
          <VariableType>String</VariableType>
          <Length>12</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>1EA3BA54</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemStringReadAOB,DDDA.exe,85 C9 74 07 52 57 E8 ** ** ** ** 8B C3)
registersymbol(highlightedItemStringReadAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedItemStringReadAOB+b //DDDA.exe+26908C


originalcode2:
//test ecx,ecx
//je highlightedItemStringReadAOB+b //DDDA.exe+26908C
push edx

exit2:
jmp returnhere2

///

highlightedItemStringReadAOB: //"DDDA.exe"+269081:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
highlightedItemStringReadAOB: //"DDDA.exe"+269081:
db 85 C9 74 07 52
//Alt: test ecx,ecx
//Alt: je highlightedItemStringReadAOB+b //DDDA.exe+26908C
//Alt: push edx
unregistersymbol(highlightedItemStringReadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemNameReadCall,DDDA.exe,8B 44 24 04 39 81 80 00 00 00)
registersymbol(highlightedItemNameReadCall)
aobscanmodule(highlightedItemStringReadAOB,DDDA.exe,85 C9 74 07 52 57 E8 ** ** ** ** 8B C3)
registersymbol(highlightedItemStringReadAOB)

label(pHighlightedItemName)
registersymbol(pHighlightedItemName)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedItemStringReadAOB+b //DDDA.exe+26908C
pushad
push eax
call highlightedItemNameReadCall
mov [pHighlightedItemName],eax

originalcode2:
popad
//test ecx,ecx
//je highlightedItemStringReadAOB+b //DDDA.exe+26908C
push edx

exit2:
jmp returnhere2

///
pHighlightedItemName:
dd 0
///

highlightedItemStringReadAOB: //"DDDA.exe"+269081:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(highlightedItemNameReadCall)
dealloc(newmem2)
highlightedItemStringReadAOB: //"DDDA.exe"+269081:
db 85 C9 74 07 52
//Alt: test ecx,ecx
//Alt: je highlightedItemStringReadAOB+b //DDDA.exe+26908C
//Alt: push edx
unregistersymbol(highlightedItemStringReadAOB)

unregistersymbol(pHighlightedItemName)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Name"</Description>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pHighlightedItemName</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"No description"</Description>
          <VariableType>String</VariableType>
          <Length>13</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>1EA37A95</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedEquipmentStringReadAOB,DDDA.exe,8B ** ** ** ** ** ** 85 C9 74 07 56 52 E8)
registersymbol(highlightedEquipmentStringReadAOB)

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464

originalcode3:
//test ecx,ecx
//je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
push esi

exit3:
jmp returnhere3

highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
jmp newmem3
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
db 85 C9 74 07 56
//Alt: test ecx,ecx
//Alt: je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
//Alt: push esi
unregistersymbol(highlightedEquipmentStringReadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="111B20E4"/>
          <VariableType>2 Bytes</VariableType>
          <Address>111B20E4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Menu Options"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(menuItemsCheckAOB,DDDA.exe,8B 83 84 02 00 00 83 F8 0C)
registersymbol(menuItemsCheckAOB)

label(pMenuItems)
registersymbol(pMenuItems)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMenuItems],ebx

originalcode:
mov eax,[ebx+00000284]

exit:
jmp returnhere

///
pMenuItems:
dd 0
///

menuItemsCheckAOB: //"DDDA.exe"+329088:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
menuItemsCheckAOB: //"DDDA.exe"+329088:
db 8B 83 84 02 00 00
//Alt: mov eax,[ebx+00000284]
unregistersymbol(menuItemsCheckAOB)

unregistersymbol(pMenuItems)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>29</ID>
              <Description>"pMenuItems"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">6:Main Menu
10:Manual
12:Exit Game
0:New Game
1:Load Game
11:Hard Mode
3:Options
2:Secret of Metamorphosis
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenuItems</Address>
              <Offsets>
                <Offset>284</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>97</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="0CDC00A0"/>
          <VariableType>Float</VariableType>
          <Address>0CDC00A0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>96</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="0CDC00A4"/>
          <VariableType>Float</VariableType>
          <Address>0CDC00A4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="0CDC00A8"/>
          <VariableType>Float</VariableType>
          <Address>0CDC00A8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"No description"</Description>
          <LastState Value="-0.4349308014" RealAddress="0D50E510"/>
          <VariableType>Float</VariableType>
          <Address>0D50E510</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>99</ID>
          <Description>"No description"</Description>
          <LastState Value="6.409494855E-31" RealAddress="0D50F084"/>
          <VariableType>Float</VariableType>
          <Address>0D50F084</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"nv x"</Description>
          <LastState Value="-0.4024814963" RealAddress="0A70C8C0"/>
          <VariableType>Float</VariableType>
          <Address>0A70C8C0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>104</ID>
          <Description>"nv z"</Description>
          <LastState Value="0.1020529792" RealAddress="0A70C8D8"/>
          <VariableType>Float</VariableType>
          <Address>0A70C8D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"nv y"</Description>
          <LastState Value="-0.9154279828" RealAddress="0A70C8C8"/>
          <VariableType>Float</VariableType>
          <Address>0A70C8C8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"nv get"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(nvXReadAOB,DDDA.exe,D9 84 C1 C0 F1 03 00)
registersymbol(nvXReadAOB)

alloc(vNV,16)
registersymbol(vNV)

label(pNVector)
registersymbol(pNVector)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+eax*8+3f1c0]

movss xmm1,[ecx+eax*8+3f1c8]
shufps xmm1,xmm1,c6
addps xmm0,xmm1

movss xmm1,[ecx+eax*8+3f1d8]
shufps xmm1,xmm1,e1
addps xmm0,xmm1

movaps [vNV],xmm0
//mov byte ptr [bVNVSet],1

push ecx
lea ecx,[ecx+eax*8+3f1e0]
mov [pNVector],ecx
pop ecx

originalcode:
fld dword ptr [ecx+eax*8+0003F1C0]

exit:
jmp returnhere

///
pNVector:
dd 0
///

nvXReadAOB: //"DDDA.exe"+9C2BF9:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
nvXReadAOB: //"DDDA.exe"+9C2BF9:
db D9 84 C1 C0 F1 03 00
//Alt: fld dword ptr [ecx+eax*8+0003F1C0]
unregistersymbol(nvXReadAOB)

///

dealloc(vNV)
unregistersymbol(vNV)

unregistersymbol(pNVector)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>106</ID>
              <Description>"nv x"</Description>
              <LastState Value="0.8855116367" RealAddress="0A70C8E0"/>
              <VariableType>Float</VariableType>
              <Address>pNVector</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>131</ID>
                  <Description>"No description"</Description>
                  <LastState Value="-0.4024814963" RealAddress="43420000"/>
                  <VariableType>Float</VariableType>
                  <Address>vNV</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>107</ID>
              <Description>"nv z"</Description>
              <LastState Value="0.2535593808" RealAddress="0A70C8E4"/>
              <VariableType>Float</VariableType>
              <Address>pNVector</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>132</ID>
                  <Description>"No description"</Description>
                  <LastState Value="0.1020529792" RealAddress="43420004"/>
                  <VariableType>Float</VariableType>
                  <Address>vNV+4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>108</ID>
              <Description>"nv y"</Description>
              <LastState Value="-0.3893283606" RealAddress="0A70C8E8"/>
              <VariableType>Float</VariableType>
              <Address>pNVector</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>133</ID>
                  <Description>"No description"</Description>
                  <LastState Value="-0.9154279828" RealAddress="43420008"/>
                  <VariableType>Float</VariableType>
                  <Address>vNV+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>109</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="0CDC332C"/>
          <VariableType>Float</VariableType>
          <Address>0CDC332C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description>"axis get"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(axisXYWriteAOB,DDDA.exe,F3 0F 11 7F 14 F3 0F 11 77 18)
registersymbol(axisXYWriteAOB)

label(pMovementInfo)
registersymbol(pMovementInfo)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMovementInfo],edi

originalcode2:
movss [edi+14],xmm7

exit2:
jmp returnhere2

///
pMovementInfo:
dd 0
///

axisXYWriteAOB: //"DDDA.exe"+74F342:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
axisXYWriteAOB: //"DDDA.exe"+74F342:
db F3 0F 11 7F 14
//Alt: movss [edi+14],xmm7
unregistersymbol(axisXYWriteAOB)

unregistersymbol(pMovementInfo)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>111</ID>
              <Description>"axis x (+18)"</Description>
              <LastState Value="0" RealAddress="0CD1332C"/>
              <VariableType>Float</VariableType>
              <Address>pMovementInfo</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>112</ID>
              <Description>"axis y (+14)"</Description>
              <LastState Value="0" RealAddress="0CD13328"/>
              <VariableType>Float</VariableType>
              <Address>pMovementInfo</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"coord write1 .2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)

label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
cmp [ebx+e0],fffffdff
je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
push eax

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f
movss xmm1,[eax+18]
shufps xmm1,xmm1,c0 //set stick x axis to all but most significant element

/*movss xmm1,[eax+18]
shufps xmm1,xmm1,e1 //swap least to 2nd
movss xmm3,[eax+18]
shufps xmm3,xmm3,c4 //copy least to 3rd
subps xmm1,xmm3*/

xorps xmm1,xmm1
movss xmm3,[eax+18]
shufps xmm3,xmm3,c0 //set stick x axis to all but most significant element
subps xmm1,xmm3

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

mov eax,[pNVector]
test eax,eax
jz @f
mulps xmm1,[eax] //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1

//do y
mov eax,[pMovementInfo]
movss xmm1,[eax+14]
mov eax,(float)-1
movd xmm3,eax
mulss xmm1,xmm3     //neg least significant element
shufps xmm1,xmm1,c4 //copy stick y axis to 3rd element

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

//mov eax,[pNVector]
movaps xmm3,[vNV]
//shufps xmm3,xmm3,c6 //swap least and 3rd element
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1


@@:
pop eax
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]
/*movss [esp+10],xmm3
movss [esp+14],xmm1
movss [esp+18],xmm4
movss [esp+20],xmm3
movss [esp+24],xmm1
movss [esp+28],xmm4
movss [esp+30],xmm3
movss [esp+34],xmm1
movss [esp+38],xmm4*/

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)

unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>117</ID>
              <Description>"bFlyMode"</Description>
              <LastState Value="0" RealAddress="43421145"/>
              <VariableType>Byte</VariableType>
              <Address>bFlyMode</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>114</ID>
              <Description>"x"</Description>
              <LastState Value="6940.565918" RealAddress="0CD100A0"/>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115</ID>
              <Description>"z"</Description>
              <LastState Value="1277.278198" RealAddress="0CD100A4"/>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>116</ID>
              <Description>"y"</Description>
              <LastState Value="-5630.803223" RealAddress="0CD100A8"/>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>126</ID>
          <Description>"coord write1 .1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)

label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
cmp [ebx+e0],fffffdff
je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
push eax

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f
movss xmm1,[eax+18]
movss xmm3,[eax+18]
shufps xmm3,xmm3,c1 //2 1 1 4
subps xmm1,xmm3

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

mov al,[bVNVSet]
test al,al
jz @f
movaps xmm3,[vNV]
shufps xmm3,xmm3,c6 //swap least and 3rd element
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1

//do y
mov eax,[pMovementInfo]
movss xmm1,[eax+14]
mov eax,(float)-1
movd xmm3,eax
mulss xmm1,xmm3     //neg least significant element
shufps xmm1,xmm1,c4 //copy stick y axis to 3rd element

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

//mov eax,[pNVector]
movaps xmm3,[vNV]
//shufps xmm3,xmm3,c6 //swap least and 3rd element
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1


@@:
pop eax
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]
/*movss [esp+10],xmm3
movss [esp+14],xmm1
movss [esp+18],xmm4
movss [esp+20],xmm3
movss [esp+24],xmm1
movss [esp+28],xmm4
movss [esp+30],xmm3
movss [esp+34],xmm1
movss [esp+38],xmm4*/

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)

unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>127</ID>
              <Description>"bFlyMode"</Description>
              <LastState Value="0" RealAddress="43421145"/>
              <VariableType>Byte</VariableType>
              <Address>bFlyMode</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>128</ID>
              <Description>"x"</Description>
              <LastState Value="6940.565918" RealAddress="0CD100A0"/>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>129</ID>
              <Description>"z"</Description>
              <LastState Value="1277.278198" RealAddress="0CD100A4"/>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>130</ID>
              <Description>"y"</Description>
              <LastState Value="-5630.803223" RealAddress="0CD100A8"/>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"coord write1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)

label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
cmp [ebx+e0],fffffdff
je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)

unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>120</ID>
              <Description>"bFlyMode"</Description>
              <LastState Value="0" RealAddress="43421145"/>
              <VariableType>Byte</VariableType>
              <Address>bFlyMode</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>121</ID>
              <Description>"x"</Description>
              <LastState Value="6940.565918" RealAddress="0CD100A0"/>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>122</ID>
              <Description>"z"</Description>
              <LastState Value="1277.278198" RealAddress="0CD100A4"/>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>123</ID>
              <Description>"y"</Description>
              <LastState Value="-5630.803223" RealAddress="0CD100A8"/>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>124</ID>
          <Description>"coord write2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite2AOB,DDDA.exe,F3 0F 10 74 24 30 C6)
registersymbol(coordWrite2AOB)

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bFirstActivate],1
je originalcode4
cmp [esi+100],00004040
je @f
cmp [esi+120],fffffdff
je @f
jmp originalcode4

@@:
xorps xmm6,xmm6
movss [esp+30],xmm6
movss [esp+34],xmm6
movss [esp+38],xmm6
movss xmm6,[fFlyModeCoord]
movss [esi+40],xmm6
movss xmm6,[fFlyModeCoord+4]
movss [esi+44],xmm6
movss xmm6,[fFlyModeCoord+8]
movss [esi+48],xmm6

originalcode4:
movss xmm6,[esp+30]

exit4:
jmp returnhere4

///

coordWrite2AOB: //"DDDA.exe"+44A020:
jmp newmem4
nop
returnhere4:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem4)
coordWrite2AOB: //"DDDA.exe"+44A020:
db F3 0F 10 74 24 30
//Alt: movss xmm6,[esp+30]
unregistersymbol(coordWrite2AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>125</ID>
          <Description>"coord write3"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite3AOB,DDDA.exe,F3 0F 11 56 44 F3 0F 11 5E 48 F3 0F 58 CF)
registersymbol(coordWrite3AOB)

///

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bFirstActivate],1
je originalcode5
cmp [esi+100],00004040
je @f
cmp [esi+120],fffffdff
je @f
jmp originalcode5

@@:
xorps xmm7,xmm7
movss xmm1,[fFlyModeCoord]
movss xmm2,[fFlyModeCoord+4]
movss xmm3,[fFlyModeCoord+8]

originalcode5:
movss [esi+44],xmm2

exit5:
jmp returnhere5

///

coordWrite3AOB: //"DDDA.exe"+44A07A:
jmp newmem5
returnhere5:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem5)
coordWrite3AOB: //"DDDA.exe"+44A07A:
db F3 0F 11 56 44
//Alt: movss [esi+44],xmm2
unregistersymbol(coordWrite3AOB)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>! Code :mov eax,[ebx+00000284]</Description>
      <Address>00729088</Address>
      <ModuleName>DDDA.exe</ModuleName>
      <ModuleNameOffset>329088</ModuleNameOffset>
      <Before>
        <Byte>E9</Byte>
        <Byte>18</Byte>
        <Byte>FD</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>83</Byte>
        <Byte>84</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>F8</Byte>
        <Byte>0C</Byte>
        <Byte>0F</Byte>
        <Byte>87</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>cw 1 Code :movss [esi+40],xmm6</Description>
      <Address>0084A032</Address>
      <ModuleName>DDDA.exe</ModuleName>
      <ModuleNameOffset>44A032</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>76</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>76</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>cw 2 Code :movss [esi+40],xmm1</Description>
      <Address>0084A088</Address>
      <ModuleName>DDDA.exe</ModuleName>
      <ModuleNameOffset>44A088</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>CF</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4E</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8E</Byte>
        <Byte>40</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>cw 3 Code :movss [ebx],xmm3</Description>
      <Address>0079BBCB</Address>
      <ModuleName>DDDA.exe</ModuleName>
      <ModuleNameOffset>39BBCB</ModuleNameOffset>
      <Before>
        <Byte>86</Byte>
        <Byte>4C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>1B</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4B</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>cwj 1 Code :movss [edi+40],xmm2</Description>
      <Address>0105B03A</Address>
      <ModuleName>DDDA.exe</ModuleName>
      <ModuleNameOffset>C5B03A</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>67</Byte>
        <Byte>48</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>57</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>94</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>cwj 2 Code :movss [esi+40],xmm4</Description>
      <Address>00AC2375</Address>
      <ModuleName>DDDA.exe</ModuleName>
      <ModuleNameOffset>6C2375</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>D1</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>66</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>46</Byte>
        <Byte>44</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>hpWrite1AOB</Name>
      <Address> 00B61311</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>staminaWrite1AOB</Name>
      <Address> 00B7ED22</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedItemNameReadCall</Name>
      <Address> 00DDB370</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedItemIDReadAOB</Name>
      <Address> 0045937D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedItemStringReadAOB</Name>
      <Address> 00669081</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedEquipmentStringReadAOB</Name>
      <Address> 00648452</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHighlightedItem</Name>
      <Address>142E0011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHighlightedItemName</Name>
      <Address>142E081C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>menuItemChkOnSelectAOB</Name>
      <Address> 00728F34</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gameSpeedReadAOB</Name>
      <Address> 004A34B6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bSlowMo</Name>
      <Address>1430004B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFirstExitSlowMo</Name>
      <Address>1430004C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGameSpeed</Name>
      <Address>1430004D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vCamLimitsCmpAOB</Name>
      <Address> 007C5B64</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nvXReadAOB</Name>
      <Address> 00DC2BF9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>axisXYWriteAOB</Name>
      <Address> 00B4F342</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>coordWrite1AOB</Name>
      <Address> 0079BBCB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pNVector</Name>
      <Address>4342006B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMovementInfo</Name>
      <Address>43420830</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFlyMode</Name>
      <Address>43421145</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFirstActivate</Name>
      <Address>43421146</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayerCoord</Name>
      <Address>43421147</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5641841#5641841
</Comments>
</CheatTable>
