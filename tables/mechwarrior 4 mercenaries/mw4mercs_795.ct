<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="13">
  <Forms>
    <CETrainer>7D534D72D33018556C1CFF753A6CD9B0E1021C0159A88DA726F6C4EA003B145B493451A48CA2B4C30D38147760D1E974CB113802AE95D84E295D793ED9EFE77BCFFAE902408A8BF7678468CA25D3174A6F42840FD3AB8C2D8CFB7B349E30BE5C19F70F7089DABA3F46DE675E9B95FB61E423BA355CC9710F3A438233693A486CE70E914B24D48EF951FB685E56EBA0503BFE48E39F6F555969C6246A204C8398205C6E0537CD1096B8C03348F259EBCBA94F6D39C0BA723C0082065650C94484BF90192CE014671604FE03AA3D28F852FA632A1EBF8B1276C3442A9B7DFC707E93A95BA6596D4FF3BD39397D6961A70E089DE7BA66DA1981B0B195EC8D513286497E4D926B42F2A935E61C8C396FDA8CEF8FC6BE1D8C055424AA816EBAC83D38577BD3E6D964E847ED68F3EC3481CD22DDD025F3D24FF0129FAAB9773606E75F35BB855F1ACD4CB50AC1305534C1900C52E5CFA7EA3E80A77C2FFE1D0FA077EEB472199D33114F727285BF663039EA45C7B0CE5BB9E8E0FE5D97CD78A2CC9A7D8F0BAA1B76A484D201E8195F7FC4259AA50549F3E980B67E9EF66D4F8B170B569927B4835A5196977858EBE569ADBF8EB55EF950562BA5777140D7B658D0376B6F48D7ECE0A60C9B05E02F</CETrainer>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Money hack"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(codeWriteMoneyOnBuy)
label(skipWriteMoneyOnBuy)
label(retWriteMoneyOnBuy)
label(pMinMoney)

newmem:
codeWriteMoneyOnBuy:
push ecx
cmp dword ptr [pMinMoney], ecx
jl short skipWriteMoneyOnBuy
mov ecx, [pMinMoney]
skipWriteMoneyOnBuy:
mov [esi+1C],ecx              // Original code
pop ecx
lea ecx,[esp+24]              // Original code
jmp retWriteMoneyOnBuy

pMinMoney:
dd #50000000

"MW4Mercs.exe"+214E69:
jmp codeWriteMoneyOnBuy
nop
nop
retWriteMoneyOnBuy:

[DISABLE]
"MW4Mercs.exe"+214E69:
mov [esi+1C],ecx
lea ecx,[esp+24]
//Alt: db 89 4E 1C 8D 4C 24 24
dealloc(newmem)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Market availability hack"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(codeOnClear)
label(skipOnClearHack)
label(retOnClear)
label(pMinItems)

newmem:
codeOnClear:
push ecx
cmp ecx, 1
je short skipOnClearHack
cmp dword ptr [pMinItems], ecx
jl short skipOnClearHack
mov ecx, [pMinItems]
skipOnClearHack:
mov [eax+30],ecx           // Original code
pop ecx
mov ecx,[esp+04]           // Original code
jmp retOnClear

pMinItems:
dd #50

"MW4Mercs.exe"+21532F:
jmp codeOnClear
nop
nop
retOnClear:

"MW4Mercs.exe"+2156DD:
nop
nop
nop

[DISABLE]
"MW4Mercs.exe"+21532F:
mov [eax+30],ecx
mov ecx,[esp+04]
//Alt: db 89 48 30 8B 4C 24 04
"MW4Mercs.exe"+2156DD:
mov [esi+30],ecx
//Alt: db 89 4E 30
dealloc(newmem)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Weight hack"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
"MW4Mercs.exe"+19FB79:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1A8DDE:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1A9372:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1AC739:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1F93BE:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1FA763:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1FAE6B:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+207770:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+19FBC0:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+19FC03:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1AC780:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1F946E:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1FA7B6:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1FAF16:
nop
nop
nop
nop
nop
nop

"MW4Mercs.exe"+1FAFBD:
nop
nop
nop
nop
nop
nop

[DISABLE]
"MW4Mercs.exe"+19FB79:
db D8 86 EC 03 00 00
"MW4Mercs.exe"+1A8DDE:
db D8 80 EC 03 00 00
"MW4Mercs.exe"+1A9372:
db D8 80 EC 03 00 00
"MW4Mercs.exe"+1AC739:
db D8 86 EC 03 00 00
"MW4Mercs.exe"+1F93BE:
db D8 87 EC 03 00 00
"MW4Mercs.exe"+1FA763:
db D8 80 EC 03 00 00
"MW4Mercs.exe"+1FAE6B:
db D8 86 EC 03 00 00
"MW4Mercs.exe"+207770:
db D8 86 EC 03 00 00
"MW4Mercs.exe"+19FBC0:
db D8 AE EC 03 00 00
"MW4Mercs.exe"+19FC03:
db D8 AE EC 03 00 00
"MW4Mercs.exe"+1AC780:
db D8 AE EC 03 00 00
"MW4Mercs.exe"+1F946E:
db D8 AF EC 03 00 00
"MW4Mercs.exe"+1FA7B6:
db D8 A9 EC 03 00 00
"MW4Mercs.exe"+1FAF16:
db D8 AE EC 03 00 00
"MW4Mercs.exe"+1FAFBD:
db D8 AE EC 03 00 00

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Infinite ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
"MW4Mercs.exe"+1F9C20:
nop
nop
nop
nop
nop
nop

 
[DISABLE]
"MW4Mercs.exe"+1F9C20:
db 89 87 B0 01 00 00

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Instant fire"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048) //2kb should be enough
label(codeRecycleTime)
label(retRecycleTime)
label(pRecycleTime)

newmem:
codeRecycleTime:
mov [esi+000001C4],ecx
push ecx
mov ecx, [pRecycleTime]
mov [esi+00000220],ecx
xor ecx,ecx
mov [esi+000000EC],ecx
mov [esi+000000F0],ecx
pop ecx
jmp retRecycleTime

pRecycleTime:
dd (float)0.001

"MW4Mercs.exe"+1F9AFE:
jmp codeRecycleTime
nop
retRecycleTime:

[DISABLE]
"MW4Mercs.exe"+1F9AFE:
mov [esi+000001C4],ecx
//Alt: db 89 8E C4 01 00 00
dealloc(newmem)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"No heat and max. coolant"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(codeHeatManagement)
label(skipHeatManagement)
label(retHeatManagement)
label(pDesiredHeatCapacity)
label(pDesiredCoolantCapacity)

newmem:
codeHeatManagement:
mov ecx,[esp+0C]           // Original code
pop edi                    // Original code
push eax
mov eax, [esi+198]
test eax, eax
jz short skipHeatManagement
push ebx
xor ebx,ebx
mov [eax+4C], ebx
mov ebx,[pDesiredHeatCapacity]
mov [eax+50], ebx
mov ebx,[pDesiredCoolantCapacity]
mov [eax+54], ebx
mov [eax+58], ebx
pop ebx
skipHeatManagement:
pop eax
jmp retHeatManagement

pDesiredHeatCapacity:
dd (float)1000
pDesiredCoolantCapacity:
dd (float)1000

"MW4Mercs.exe"+1F9AF9:
jmp codeHeatManagement
retHeatManagement:

[DISABLE]
"MW4Mercs.exe"+1F9AF9:
db 8B 4C 24 0C 5F // mov ecx,[esp+0C], pop edi
dealloc(newmem)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"Gear enabler"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(codeAllowJumpJet1)
label(retAllowJumpJet1)
label(codeAllowECM1)
label(retAllowECM1)
label(codeAllowBeagleProbe1)
label(retAllowBeagleProbe1)
label(codeAllowLAMS1)
label(retAllowLAMS1)
label(codeAllowEnhancedOptics1)
label(retAllowEnhancedOptics1)
label(codeAllowIFFJammer1)
label(retAllowIFFJammer1)
label(codeAllowAdvancedGyro1)
label(retAllowAdvancedGyro1)
label(codeAllowJumpJet2)
label(retAllowJumpJet2)
label(codeAllowECM2)
label(retAllowECM2)
label(codeAllowBeagleProbe2)
label(retAllowBeagleProbe2)
label(codeAllowLAMS2)
label(retAllowLAMS2)
label(codeAllowEnhancedOptics2)
label(retAllowEnhancedOptics2)
label(codeAllowIFFJammer2)
label(retAllowIFFJammer2)
label(codeAllowAdvancedGyro2)
label(retAllowAdvancedGyro2)
label(codeAllowJumpJet3)
label(retAllowJumpJet3)
label(codeAllowECM3)
label(retAllowECM3)
label(codeAllowBeagleProbe3)
label(retAllowBeagleProbe3)
label(codeAllowLAMS3)
label(retAllowLAMS3)
label(codeAllowEnhancedOptics3)
label(retAllowEnhancedOptics3)
label(codeAllowIFFJammer3)
label(retAllowIFFJammer3)
label(codeAllowAdvancedGyro3)
label(retAllowAdvancedGyro3)
label(codeValuePatch)

newmem:
// 1
codeAllowJumpJet1:
inc ecx
call codeValuePatch
jmp retAllowJumpJet1
codeAllowECM1:
inc ecx
call codeValuePatch
jmp retAllowECM1
codeAllowBeagleProbe1:
inc ecx
call codeValuePatch
jmp retAllowBeagleProbe1
codeAllowLAMS1:
inc ecx
call codeValuePatch
jmp retAllowLAMS1
codeAllowEnhancedOptics1:
inc ecx
call codeValuePatch
jmp retAllowEnhancedOptics1
codeAllowIFFJammer1:
inc ecx
call codeValuePatch
jmp retAllowIFFJammer1
codeAllowAdvancedGyro1:
inc ecx
call codeValuePatch
jmp retAllowAdvancedGyro1
// 2
codeAllowJumpJet2:
mov eax,ebx
call codeValuePatch
mov eax,1
jmp retAllowJumpJet2
codeAllowECM2:
mov eax,ebx
call codeValuePatch
mov eax,1
jmp retAllowECM2
codeAllowBeagleProbe2:
mov eax,ebx
call codeValuePatch
mov eax,1
jmp retAllowBeagleProbe2
codeAllowLAMS2:
mov eax,ebx
call codeValuePatch
mov eax,1
jmp retAllowLAMS2
codeAllowEnhancedOptics2:
mov eax,ebx
call codeValuePatch
mov eax,1
jmp retAllowEnhancedOptics2
codeAllowIFFJammer2:
mov eax,ebx
call codeValuePatch
mov eax,1
jmp retAllowIFFJammer2
codeAllowAdvancedGyro2:
mov eax,ebx
call codeValuePatch
mov eax,1
jmp retAllowAdvancedGyro2
// 3
codeAllowJumpJet3:
mov eax,edi
call codeValuePatch
mov eax,1
jmp retAllowJumpJet3
codeAllowECM3:
mov eax,edi
call codeValuePatch
mov eax,1
jmp retAllowECM3
codeAllowBeagleProbe3:
mov eax,edi
call codeValuePatch
mov eax,1
jmp retAllowBeagleProbe3
codeAllowLAMS3:
mov eax,edi
call codeValuePatch
mov eax,1
jmp retAllowLAMS3
codeAllowEnhancedOptics3:
mov eax,edi
call codeValuePatch
mov eax,1
jmp retAllowEnhancedOptics3
codeAllowIFFJammer3:
mov eax,edi
call codeValuePatch
mov eax,1
jmp retAllowIFFJammer3
codeAllowAdvancedGyro3:
mov eax,edi
call codeValuePatch
mov eax,1
jmp retAllowAdvancedGyro3
// Patch
codeValuePatch:
push edx
mov edx,1
mov [eax+640],dl
mov [eax+641],dl
mov [eax+642],dl
mov [eax+645],dl
mov [eax+668],dl
mov [eax+669],dl
mov [eax+66A],dl
pop edx
ret

"MW4Mercs.exe"+21B40B:
jmp codeAllowJumpJet1
nop
retAllowJumpJet1:

"MW4Mercs.exe"+21B4DB:
jmp codeAllowECM1
nop
retAllowECM1:

"MW4Mercs.exe"+21B5AB:
jmp codeAllowBeagleProbe1
nop
retAllowBeagleProbe1:

"MW4Mercs.exe"+21B75B:
jmp codeAllowLAMS1
nop
retAllowLAMS1:

"MW4Mercs.exe"+21B83B:
jmp codeAllowEnhancedOptics1
nop
retAllowEnhancedOptics1:

"MW4Mercs.exe"+21B91B:
jmp codeAllowIFFJammer1
nop
retAllowIFFJammer1:

"MW4Mercs.exe"+21B9FB:
jmp codeAllowAdvancedGyro1
nop
retAllowAdvancedGyro1:

// 2
"MW4Mercs.exe"+204BC9:
jmp codeAllowJumpJet2
nop
retAllowJumpJet2:

"MW4Mercs.exe"+204BE9:
jmp codeAllowECM2
nop
retAllowECM2:

"MW4Mercs.exe"+204C09:
jmp codeAllowBeagleProbe2
nop
retAllowBeagleProbe2:

"MW4Mercs.exe"+204C25:
jmp codeAllowLAMS2
nop
retAllowLAMS2:

"MW4Mercs.exe"+204C41:
jmp codeAllowEnhancedOptics2
nop
retAllowEnhancedOptics2:

"MW4Mercs.exe"+204C5D:
jmp codeAllowIFFJammer2
nop
retAllowIFFJammer2:

"MW4Mercs.exe"+204C79:
jmp codeAllowAdvancedGyro2
nop
retAllowAdvancedGyro2:

// 3
"MW4Mercs.exe"+189943:
jmp codeAllowJumpJet3
nop
retAllowJumpJet3:

"MW4Mercs.exe"+189963:
jmp codeAllowECM3
nop
retAllowECM3:

"MW4Mercs.exe"+189983:
jmp codeAllowBeagleProbe3
nop
retAllowBeagleProbe3:

"MW4Mercs.exe"+1899A3:
jmp codeAllowLAMS3
nop
retAllowLAMS3:

"MW4Mercs.exe"+1899C3:
jmp codeAllowEnhancedOptics3
nop
retAllowEnhancedOptics3:

"MW4Mercs.exe"+1899E3:
jmp codeAllowIFFJammer3
nop
retAllowIFFJammer3:

"MW4Mercs.exe"+189A03:
jmp codeAllowAdvancedGyro3
nop
retAllowAdvancedGyro3:

[DISABLE]
// 1
"MW4Mercs.exe"+21B40B:
db 8A 88 40 06 00 00 // mov cl,[eax+00000640]
"MW4Mercs.exe"+21B4DB:
db 8A 88 41 06 00 00 // mov cl,[eax+00000641]
"MW4Mercs.exe"+21B5AB:
db 8A 88 42 06 00 00 // mov cl,[eax+00000642]
"MW4Mercs.exe"+21B75B:
db 8A 88 45 06 00 00 // mov cl,[eax+00000645]
"MW4Mercs.exe"+21B83B:
db 8A 88 68 06 00 00 // mov cl,[eax+00000668]
"MW4Mercs.exe"+21B91B:
db 8A 88 69 06 00 00 // mov cl,[eax+00000669]
"MW4Mercs.exe"+21B9FB:
db 8A 88 6A 06 00 00 // mov cl,[eax+0000066A]
// 2
"MW4Mercs.exe"+204BC9:
db 8A 83 40 06 00 00 // mov al,[ebx+00000640]
"MW4Mercs.exe"+204BE9:
db 8A 83 41 06 00 00 // mov al,[ebx+00000641]
"MW4Mercs.exe"+204C09:
db 8A 83 42 06 00 00 // mov al,[ebx+00000642]
"MW4Mercs.exe"+204C25:
db 8A 83 45 06 00 00 // mov al,[ebx+00000645]
"MW4Mercs.exe"+204C41:
db 8A 83 68 06 00 00 // mov al,[ebx+00000668]
"MW4Mercs.exe"+204C5D:
db 8A 83 69 06 00 00 // mov al,[ebx+00000669]
"MW4Mercs.exe"+204C79:
db 8A 83 6A 06 00 00 // mov al,[ebx+0000066A]
// 3
"MW4Mercs.exe"+189943:
db 8A 87 40 06 00 00 // mov al,[edi+00000640]
"MW4Mercs.exe"+189963:
db 8A 87 41 06 00 00 // mov al,[edi+00000641]
"MW4Mercs.exe"+189983:
db 8A 87 42 06 00 00 // mov al,[edi+00000642]
"MW4Mercs.exe"+1899A3:
db 8A 87 45 06 00 00 // mov al,[edi+00000645]
"MW4Mercs.exe"+1899C3:
db 8A 87 68 06 00 00 // mov al,[edi+00000668]
"MW4Mercs.exe"+1899E3:
db 8A 87 69 06 00 00 // mov al,[edi+00000669]
"MW4Mercs.exe"+189A03:
db 8A 87 6A 06 00 00 // mov al,[edi+0000066A]
dealloc(newmem)

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>Info about this table:
</Comments>
</CheatTable>
