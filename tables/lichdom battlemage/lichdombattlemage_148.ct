<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>6</ID>
      <Description>"P&gt; Rarity Aevel"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>1391306c8</Address>
      <Offsets>
        <Offset>90</Offset>
        <Offset>18</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Rarity Level Always 5"</Description>
      <LastState Activated="0"/>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address,"LichdomBattlemage.exe"+F0A7B3)
define(bytes,66 83 7D 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"LichdomBattlemage.exe"+F0A7B3)

label(code)
label(return)
label(codeWrite)
label(returnWrite)

newmem:

code:
pushfq
cmp [rbp],#5
jl codeWrite
returnWrite:
popfq

  cmp word ptr [rbp+00],00
  jmp return

codeWrite:
mov [rbp],#5
jmp returnWrite

address:
  jmp code
return:

[DISABLE]

address:
  db bytes
  // cmp word ptr [rbp+00],00

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "LichdomBattlemage.exe"+F0A7B3

"LichdomBattlemage.exe"+F0A787: 74 24                 -  je LichdomBattlemage.exe+F0A7AD
"LichdomBattlemage.exe"+F0A789: 48 8B CB              -  mov rcx,rbx
"LichdomBattlemage.exe"+F0A78C: E8 FF 29 FF FF        -  call LichdomBattlemage.exe+EFD190
"LichdomBattlemage.exe"+F0A791: BA 02 00 00 00        -  mov edx,00000002
"LichdomBattlemage.exe"+F0A796: 4C 8D 05 73 C0 CB 00  -  lea r8,[LichdomBattlemage.exe+1BC6810]
"LichdomBattlemage.exe"+F0A79D: 8D 4A 05              -  lea ecx,[rdx+05]
"LichdomBattlemage.exe"+F0A7A0: 4C 8B CE              -  mov r9,rsi
"LichdomBattlemage.exe"+F0A7A3: 48 89 44 24 20        -  mov [rsp+20],rax
"LichdomBattlemage.exe"+F0A7A8: E8 C3 1D 14 FF        -  call LichdomBattlemage.exe+4C570
"LichdomBattlemage.exe"+F0A7AD: 8B 0D 49 74 46 01     -  mov ecx,[LichdomBattlemage.exe+2371BFC]
// ---------- INJECTING HERE ----------
"LichdomBattlemage.exe"+F0A7B3: 66 83 7D 00 00        -  cmp word ptr [rbp+00],00
// ---------- DONE INJECTING  ----------
"LichdomBattlemage.exe"+F0A7B8: 74 5E                 -  je LichdomBattlemage.exe+F0A818
"LichdomBattlemage.exe"+F0A7BA: 48 8B 43 18           -  mov rax,[rbx+18]
"LichdomBattlemage.exe"+F0A7BE: 48 39 43 10           -  cmp [rbx+10],rax
"LichdomBattlemage.exe"+F0A7C2: 75 3C                 -  jne LichdomBattlemage.exe+F0A800
"LichdomBattlemage.exe"+F0A7C4: F6 C1 01              -  test cl,01
"LichdomBattlemage.exe"+F0A7C7: 75 3B                 -  jne LichdomBattlemage.exe+F0A804
"LichdomBattlemage.exe"+F0A7C9: 48 8B 05 C8 98 20 01  -  mov rax,[LichdomBattlemage.exe+2114098]
"LichdomBattlemage.exe"+F0A7D0: 83 C9 01              -  or ecx,01
"LichdomBattlemage.exe"+F0A7D3: 4C 8D 05 E6 D1 B7 00  -  lea r8,[LichdomBattlemage.exe+1A879C0]
"LichdomBattlemage.exe"+F0A7DA: 89 0D 1C 74 46 01     -  mov [LichdomBattlemage.exe+2371BFC],ecx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Instant Synergy Fill"</Description>
      <LastState Activated="0"/>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(address2,"LichdomBattlemage.exe"+127D95F)
define(bytes2,89 78 20 48 8B 43 18)

define(address,"LichdomBattlemage.exe"+10D6634)
define(bytes,7C 4E 89 4B 20)

[ENABLE]

assert(address2,bytes2)
alloc(newmem2,$1000,"LichdomBattlemage.exe"+127D95F)

label(code2)
label(return2)

newmem2:

code2:
  mov [rax+20],#40000
  mov rax,[rbx+18]
  jmp return2

address2:
  jmp code2
  nop
  nop
return2:

//////////////

assert(address,bytes)
alloc(newmem,$1000,"LichdomBattlemage.exe"+10D6634)

label(code)
label(return)

newmem:

code:
  //jnge LichdomBattlemage.CryGetIMemoryManagerInterface+1E6584 //NOP THE JUMP
  mov [rbx+20],ecx
  jmp return

address:
  jmp code
return:

[DISABLE]

address2:
  db bytes2
  // mov [rax+20],edi
  // mov rax,[rbx+18]

dealloc(newmem2)

address:
  db bytes
  // jnge LichdomBattlemage.CryGetIMemoryManagerInterface+1E6584
  // mov [rbx+20],ecx

dealloc(newmem)


{
// ORIGINAL CODE - INJECTION POINT: "LichdomBattlemage.exe"+127D95F

"LichdomBattlemage.exe"+127D93A: 33 FF                       -  xor edi,edi
"LichdomBattlemage.exe"+127D93C: 40 38 BB 88 03 00 00        -  cmp [rbx+00000388],dil
"LichdomBattlemage.exe"+127D943: 74 6D                       -  je LichdomBattlemage.exe+127D9B2
"LichdomBattlemage.exe"+127D945: 40 38 BB 89 03 00 00        -  cmp [rbx+00000389],dil
"LichdomBattlemage.exe"+127D94C: 74 35                       -  je LichdomBattlemage.exe+127D983
"LichdomBattlemage.exe"+127D94E: 48 8B 03                    -  mov rax,[rbx]
"LichdomBattlemage.exe"+127D951: 48 8B CB                    -  mov rcx,rbx
"LichdomBattlemage.exe"+127D954: FF 90 90 06 00 00           -  call qword ptr [rax+00000690]
"LichdomBattlemage.exe"+127D95A: 48 85 C0                    -  test rax,rax
"LichdomBattlemage.exe"+127D95D: 74 24                       -  je LichdomBattlemage.exe+127D983
// ---------- INJECTING HERE ----------
"LichdomBattlemage.exe"+127D95F: 89 78 20                    -  mov [rax+20],edi
"LichdomBattlemage.exe"+127D962: 48 8B 43 18                 -  mov rax,[rbx+18]
// ---------- DONE INJECTING  ----------
"LichdomBattlemage.exe"+127D966: 48 85 C0                    -  test rax,rax
"LichdomBattlemage.exe"+127D969: 74 18                       -  je LichdomBattlemage.exe+127D983
"LichdomBattlemage.exe"+127D96B: F6 40 20 04                 -  test byte ptr [rax+20],04
"LichdomBattlemage.exe"+127D96F: 8B CF                       -  mov ecx,edi
"LichdomBattlemage.exe"+127D971: 48 0F 45 C8                 -  cmovne rcx,rax
"LichdomBattlemage.exe"+127D975: 48 85 C9                    -  test rcx,rcx
"LichdomBattlemage.exe"+127D978: 74 09                       -  je LichdomBattlemage.exe+127D983
"LichdomBattlemage.exe"+127D97A: 48 8B 01                    -  mov rax,[rcx]
"LichdomBattlemage.exe"+127D97D: FF 90 20 0A 00 00           -  call qword ptr [rax+00000A20]
"LichdomBattlemage.exe"+127D983: 48 8B 8B 90 02 00 00        -  mov rcx,[rbx+00000290]
}

{
// ORIGINAL CODE - INJECTION POINT: "LichdomBattlemage.exe"+10D6634

"LichdomBattlemage.exe"+10D6608: E8 83 B2 33 00           -  call LichdomBattlemage.exe+1411890
"LichdomBattlemage.exe"+10D660D: 48 8B 15 DC A0 05 01     -  mov rdx,[LichdomBattlemage.exe+21306F0]
"LichdomBattlemage.exe"+10D6614: 8B C8                    -  mov ecx,eax
"LichdomBattlemage.exe"+10D6616: 48 8B 82 F8 00 00 00     -  mov rax,[rdx+000000F8]
"LichdomBattlemage.exe"+10D661D: 83 B8 40 04 00 00 00     -  cmp dword ptr [rax+00000440],00
"LichdomBattlemage.exe"+10D6624: 74 07                    -  je LichdomBattlemage.exe+10D662D
"LichdomBattlemage.exe"+10D6626: 44 8B F1                 -  mov r14d,ecx
"LichdomBattlemage.exe"+10D6629: 44 2B 73 20              -  sub r14d,[rbx+20]
"LichdomBattlemage.exe"+10D662D: 44 01 73 20              -  add [rbx+20],r14d
"LichdomBattlemage.exe"+10D6631: 39 4B 20                 -  cmp [rbx+20],ecx
// ---------- INJECTING HERE ----------
"LichdomBattlemage.exe"+10D6634: 7C 4E                    -  jnge LichdomBattlemage.exe+10D6684
"LichdomBattlemage.exe"+10D6636: 89 4B 20                 -  mov [rbx+20],ecx
// ---------- DONE INJECTING  ----------
"LichdomBattlemage.exe"+10D6639: 48 83 C8 FF              -  or rax,-01
"LichdomBattlemage.exe"+10D663D: 0F 1F 00                 -  nop [rax]
"LichdomBattlemage.exe"+10D6640: 48 FF C0                 -  inc rax
"LichdomBattlemage.exe"+10D6643: 80 BC 06 94 04 00 00 00  -  cmp byte ptr [rsi+rax+00000494],00
"LichdomBattlemage.exe"+10D664B: 75 F3                    -  jne LichdomBattlemage.exe+10D6640
"LichdomBattlemage.exe"+10D664D: 48 85 C0                 -  test rax,rax
"LichdomBattlemage.exe"+10D6650: 74 32                    -  je LichdomBattlemage.exe+10D6684
"LichdomBattlemage.exe"+10D6652: 48 8B 02                 -  mov rax,[rdx]
"LichdomBattlemage.exe"+10D6655: 48 8B CA                 -  mov rcx,rdx
"LichdomBattlemage.exe"+10D6658: FF 90 30 02 00 00        -  call qword ptr [rax+00000230]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>RARATY LVL INC inc word ptr [r15+00000090]</Description>
      <Address>13813D1EF</Address>
      <ModuleName>LichdomBattlemage.exe</ModuleName>
      <ModuleNameOffset>113D1EF</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>84</Byte>
        <Byte>E4</Byte>
        <Byte>75</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>41</Byte>
        <Byte>FF</Byte>
        <Byte>87</Byte>
        <Byte>90</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>CF</Byte>
        <Byte>E8</Byte>
        <Byte>21</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jnge LichdomBattlemage.CryGetIMemoryManagerInterface+1E6584</Description>
      <Address>1380D6634</Address>
      <ModuleName>LichdomBattlemage.exe</ModuleName>
      <ModuleNameOffset>10D6634</ModuleNameOffset>
      <Before>
        <Byte>73</Byte>
        <Byte>20</Byte>
        <Byte>39</Byte>
        <Byte>4B</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>7C</Byte>
        <Byte>4E</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>4B</Byte>
        <Byte>20</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
