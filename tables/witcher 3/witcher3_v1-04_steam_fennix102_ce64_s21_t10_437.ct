<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>48</ID>
      <Description>"[X] &lt;== The Witcher III - Wild Hunt v1.04 Steam Script v2.1"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : The Witcher III - Wild Hunt
 Game Version  : 1.04
 Game Sponsor  : Fennix102
 Process Name  : witcher3.exe
 Relevant Info : 64bits/High Profile System
 Script Version: 2.1
 CE Version    : 6.4
 Release date  : 25-May-2015
 Author        : Recifense
 History:
 23-May-15: First Release
 25-May-15: Release for version 1.04
 Features:
 - God Mode
 - Full Stamina
 - Full Oxygen
 - Zero Toxicity
 - Minimum Gold (Crowns)
 - Minimum Items in Inv
   - Edibles
   - Alchemy Ingredients
   - Crafting Ingredients
   - Potions
 - Recover damaged items
 - Minimim Points
 - Weapon/Armor Durability
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"witcher3.exe")
define(MOPH,witcher3.exe+00d959c1) //=
define(GDMD,witcher3.exe+00d95aa3) //=
define(MOPG,witcher3.exe+006e8c80) //=
define(MOII,witcher3.exe+006f2041) //=
define(MOHP,witcher3.exe+0007d9a7) //=
define(MOWD,witcher3.exe+006f5462) //New

//========================================= 1.04
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.4)
define(ctMMON,#6400)      // Minimum Money
define(ctGOLD,0x0000A6D8) // Crowns ID             #
define(ctEDIB,0x0000A9EF) // edibles (Food)        #
define(ctALCH,0x0000ACAB) // alchemy_ingredient    #
define(ctCRAF,0x0001B4E7) // crafting_ingredient   #
define(ctPOTI,0x00004558) // potion                #
define(ctPOIN,0x00006F64) // GetPointsFree         #
define(ctWSSD,0x0000c8af) // Witcher Silver Sword (4debug)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MOPH,8b 0c 90 89 0e 48 8b 45 60 8b 4c 90 04 b0 01 41 89 0e ?? ?? c7)
assert(GDMD,f3 0f 11 34 88 83 fb 06 ?? ?? 8b 05 ?? ?? ?? ?? 48 8d 54 24 20)
assert(MOPG,44 39 50 04 75 02 03 18 48 83 e8 80 49 ff c9 ?? ?? 45 84 c0 ??)
assert(MOII,46 8b 54 08 64 48 85 ff ?? ?? 44 89 17 48 8b 5c 24 38 48 8b 74)
assert(MOHP,48 8b 4b 08 48 8b d7 48 8b 01 ff 50 50 48 8b 5c 24 30 48 83 c4)
assert(MOWD,f3 0f 11 40 74 48 8b 5c 24 30 48 8b 74 24 40 48 83 c4 20 5f c3)

AOBScan(CNID,?? ?? ?? 00 43 00 72 00 6F 00 77 00 6E 00 73 00 00 00 43 72 6F 77 6E 73 00)
AOBScan(ESID,?? ?? ?? 00 65 00 64 00 69 00 62 00 6C 00 65 00 73 00 00 00 65 64 69 62 6C 65 73 00)
AOBScan(AIID,?? ?? ?? 00 61 00 6C 00 63 00 68 00 65 00 6D 00 79 00 5F 00 69 00 6E 00 67 00 72 00 65 00 64 00 69 00 65 00 6E 00 74 00 00 00 61 6C 63 68 65 6D 79 5F 69 6E 67 72 65 64 69 65 6E 74 00)
AOBScan(CIID,?? ?? ?? 00 63 00 72 00 61 00 66 00 74 00 69 00 6E 00 67 00 5F 00 69 00 6E 00 67 00 72 00 65 00 64 00 69 00 65 00 6E 00 74 00 00 00 63 72 61 66 74 69 6E 67 5F 69 6E 67 72 65 64 69 65 6E 74 00)
AOBScan(PNID,?? ?? ?? 00 70 00 6F 00 74 00 69 00 6F 00 6E 00 00 00 70 6F 74 69 6F 6E 00)
AOBScan(PFID,?? ?? ?? 00 47 00 65 00 74 00 50 00 6F 00 69 00 6E 00 74 00 73 00 46 00 72 00 65 00 65 00 00 00 47 65 74 50 6F 69 6E 74 73 46 72 65 65 00)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonPlayerHero)
label(_MonPH00)
label(_MonPH01)
label(_MonPH02)
label(_BackMPH)
label(_ExitMPH)
label(_GodMode)
label(_GodMD00)
label(_GodMD01)
label(_GodMD02)
label(_BackGMD)
label(_ExitGMD)
label(_MonPlayerGold)
label(_MonPG00)
label(_BackMPG)
label(_ExitMPG)
label(_MonInvItem)
label(_MonII00)
label(_MonII01)
label(_MonII02)
label(_MonII03)
label(_MonII04)
label(_BackMII)
label(_ExitMII)
label(_MonHeroPoints)
label(_BackMHP)
label(_ExitMHP)
label(_MonWeaponDurability)
label(_BackMWD)
label(_ExitMWD)
label(iEnableGMD)
label(iEnableMFG)
label(iEnableMFY)
label(iEnableMPG)
label(iEnableMPO)
label(iEnableMPI)
label(iEnableMEI)
label(iEnableMAI)
label(iEnableMCI)
label(iEnableMWI)
label(iEnableMHP)
label(iEnableMWD)
label(pHero)
label(pGold)
label(pPoints)
label(pWeapon)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableGMD)
registersymbol(iEnableMFG)
registersymbol(iEnableMFY)
registersymbol(iEnableMPG)
registersymbol(iEnableMPO)
registersymbol(iEnableMPI)
registersymbol(iEnableMEI)
registersymbol(iEnableMAI)
registersymbol(iEnableMCI)
registersymbol(iEnableMWI)
registersymbol(iEnableMHP)
registersymbol(iEnableMWD)
registersymbol(pHero)
registersymbol(pGold)
registersymbol(pPoints)
registersymbol(pWeapon)

registersymbol(CNID)
registersymbol(ESID)
registersymbol(AIID)
registersymbol(CIID)
registersymbol(PNID)
registersymbol(PFID)

//=========================================
MyCode:
//=========================================
// At main game screen
_MonPlayerHero:
 mov [pHero],rbp

 cmp dword ptr [iEnableMFG],0
 je _MonPH00                       // Jump if feature is disabled

 mov ecx,0
 mov [rax+18],ecx

_MonPH00:
 cmp dword ptr [iEnableMFY],0
 je _MonPH01                       // Jump if feature is disabled

 mov ecx,[rax+10]
 mov [rax+0c],ecx

_MonPH01:
 cmp dword ptr [iEnableMPO],0
 je _MonPH02                       // Jump if feature is disabled

 mov ecx,[rax+34]
 mov [rax+30],ecx

_MonPH02:
 cmp dword ptr [iEnableGMD],0
 je _ExitMPH                       // Jump if feature is disabled

 mov ecx,[rax+04]
 mov [rax],ecx

_ExitMPH:
 mov ecx,[rax+rdx*4]               // Original code (get cHP)
 mov [rsi],ecx                     // Original code
 jmp _BackMPH                      // Back to main code

//=========================================
// When updatig HP/Stamina
_GodMode:
 push rbx

 movss [rax+rcx*4],xmm6            // Original code (set HP)

 cmp rdi,[pHero]
 jne _ExitGMD

 cmp dword ptr [iEnableMFG],0
 je _GodMD00                       // Jump if feature is disabled

 mov ebx,0
 mov [rax+18],ebx

_GodMD00:
 cmp dword ptr [iEnableMFY],0
 je _GodMD01                       // Jump if feature is disabled

 mov ebx,[rax+10]
 mov [rax+0c],ebx

 mov ebx,0
 mov [rax+24],ebx                  // Stamina

_GodMD01:
 cmp dword ptr [iEnableMPO],0
 je _GodMD02                       // Jump if feature is disabled

 mov ebx,[rax+34]
 mov [rax+30],ebx

_GodMD02:
 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 mov ebx,[rax+04]
 mov [rax],ebx

_ExitGMD:
 pop rbx
 jmp _BackGMD                      // Back to main code

//=========================================
// On entering in the inventory (only enable when needed)
_MonPlayerGold:
 cmp [rax+04],r10d                 // Original code (Is it gold?)
 jne _MonPG00

 push rbx

 mov rbx,CNID
 cmp r10d,[rbx]
 jne _ExitMPG

 mov [pGold],rax

 cmp dword ptr [iEnableMPG],0
 je _ExitMPG                       // Jump if feature is disabled

 mov ebx,ctMMON
 cmp ebx,[rax]
 js _ExitMPG

 mov [rax],ebx

_ExitMPG:
 pop rbx

 add ebx,[rax]                     // Original code (Get Gold)

_MonPG00:
 jmp _BackMPG                      // Back to main code

//=========================================
// On looking at the items (Edibles/Alchemy/Crafting/Potions)
_MonInvItem:
 push rbx
 push rcx

 mov r10d,6

 mov ebx,[rax+r9+6c]
 mov rcx,ESID
 cmp ebx,[rcx]
 je _MonII00

 mov r10d,#12

 mov rcx,AIID
 cmp ebx,[rcx]
 je _MonII01

 mov rcx,CIID
 cmp ebx,[rcx]
 je _MonII02

 mov rcx,PNID
 cmp ebx,[rcx]
 jne _MonII04

 cmp dword ptr [iEnableMPI],0
 je _ExitMII                       // Jump if feature is disabled

 mov ebx,[rax+r9+48]
 cmp ebx,2
 jne _ExitMII

 mov rbx,[rax+r9+40]
 test rbx,rbx
 jz _ExitMII

 mov r10d,[rbx+08]
 test r10d,r10d
 jnz _ExitMII

 mov dword ptr [rbx+08],1
 jmp _ExitMII
//==
_MonII00:
 cmp dword ptr [iEnableMEI],0
 je _ExitMII                       // Jump if feature is disabled
 jmp _MonII03
//==
_MonII01:
 cmp dword ptr [iEnableMAI],0
 je _ExitMII                       // Jump if feature is disabled
 jmp _MonII03
//==
_MonII02:
 cmp dword ptr [iEnableMCI],0
 je _ExitMII                       // Jump if feature is disabled

_MonII03:
 cmp r10d,[rax+r9+64]
 js _ExitMII

 mov [rax+r9+64],r10d
 jmp _ExitMII
//==
_MonII04:
 cmp dword ptr [iEnableMWI],0
 je _ExitMII                       // Jump if feature is disabled

 mov ebx,[rax+r9+74]
 test ebx,ebx
 js _ExitMII

 mov ebx,(float)100.0
 mov [rax+r9+74],ebx

 lea rbx,[rax+r9+00]
 cmp dword ptr [rbx+68],ctWSSD
 jne _ExitMII

 mov [pWeapon],rbx

_ExitMII:
 pop rcx
 pop rbx

 mov r10d,[rax+r9+64]              // Original code (Get #)
 jmp _BackMII                      // Back to main code

//=========================================
// On looking at the points
_MonHeroPoints:
 mov ecx,[r8]

 cmp dword ptr [iEnableMHP],0
 je _ExitMHP                       // Jump if feature is disabled

 cmp rbp,rsp
 js _ExitMHP

 mov rcx,PFID
 mov ecx,[rcx]
 cmp ecx,[rbp+000001e8]
 jne _ExitMHP

 mov ecx,5
 cmp ecx,[r8]
 js _ExitMHP

 mov [r8],ecx

_ExitMHP:
 mov rcx,[rbx+08]                  // Original code (Get pValStr)
 mov rdx,rdi                       // Original code
 jmp _BackMHP                      // Back to main code

//=========================================
// On upadting
_MonWeaponDurability:
 movss [rax+74],xmm0               // Original code (Set durability)

 cmp dword ptr [iEnableMWD],0
 je _ExitMWD                       // Jump if feature is disabled

 mov dword ptr [rax+74],(float)100.0

_ExitMWD:
 jmp _BackMWD                      // Back to main code

//=========================================
 db '===============================================&gt;'
 db 'CE6.4 Script by Recifense 052515'
//=========================================
// Variables
iEnableGMD:
 dd 0
iEnableMFG:
 dd 0
iEnableMFY:
 dd 0
iEnableMPG:
 dd 0
iEnableMPO:
 dd 0
iEnableMPI:
 dd 0
iEnableMEI:
 dd 0
iEnableMAI:
 dd 0
iEnableMCI:
 dd 0
iEnableMWI:
 dd 0
iEnableMHP:
 dd 0
iEnableMWD:
 dd 0
pHero:
 dq MyCode
pGold:
 dq 0
pPoints:
 dq 0
pWeapon:
 dq 0

//=========================================
// Hacking Points
MOPH:
 jmp _MonPlayerHero
_BackMPH:

GDMD:
 jmp _GodMode
_BackGMD:

MOPG:
 jmp _MonPlayerGold
 nop
 nop
 nop
_BackMPG:

MOII:
 jmp _MonInvItem
_BackMII:

MOHP:
 jmp _MonHeroPoints
 nop
 nop
_BackMHP:

MOWD:
 jmp _MonWeaponDurability
_BackMWD:


//=========================================
// Script for Restoring Original Codes
[DISABLE]
MOPH:
// mov ecx,[rax+rdx*4]
// mov [rsi],ecx
 db 8b 0c 90 89 0e

GDMD:
// movss [rax+rcx*4],xmm6
 db f3 0f 11 34 88

MOPG:
// cmp [rax+04],r10d
// jne 1404D8948
// add ebx,[rax]
 db 44 39 50 04 75 02 03 18

MOII:
// mov r10d,[rax+r9+64]
 db 46 8b 54 08 64

MOHP:
// mov rcx,[rbx+08]
// mov rdx,rdi
 db 48 8B 4B 08 48 8B D7

MOWD:
// movss [rax+74],xmm0
 db f3 0f 11 40 74

//=========================================
// Unloading Scripts
{$lua}
getAddressList().getMemoryRecordByID(96).Active=false
getAddressList().getMemoryRecordByID(96).Color=0x0c08000
getAddressList().getMemoryRecordByID(97).Active=false
getAddressList().getMemoryRecordByID(97).Color=0x0c08000
getAddressList().getMemoryRecordByID(98).Active=false
getAddressList().getMemoryRecordByID(98).Color=0x0c08000
getAddressList().getMemoryRecordByID(99).Active=false
getAddressList().getMemoryRecordByID(99).Color=0x0c08000
getAddressList().getMemoryRecordByID(100).Active=false
getAddressList().getMemoryRecordByID(100).Color=0x0c08000
getAddressList().getMemoryRecordByID(101).Active=false
getAddressList().getMemoryRecordByID(101).Color=0x0c08000
getAddressList().getMemoryRecordByID(102).Active=false
getAddressList().getMemoryRecordByID(102).Color=0x0c08000
getAddressList().getMemoryRecordByID(103).Active=false
getAddressList().getMemoryRecordByID(103).Color=0x0c08000
getAddressList().getMemoryRecordByID(104).Active=false
getAddressList().getMemoryRecordByID(104).Color=0x0c08000
getAddressList().getMemoryRecordByID(105).Active=false
getAddressList().getMemoryRecordByID(105).Color=0x0c08000
getAddressList().getMemoryRecordByID(106).Active=false
getAddressList().getMemoryRecordByID(106).Color=0x0c08000
getAddressList().getMemoryRecordByID(107).Active=false
getAddressList().getMemoryRecordByID(107).Color=0x0c08000
{$asm}

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMFG)
unregistersymbol(iEnableMFY)
unregistersymbol(iEnableMPG)
unregistersymbol(iEnableMPO)
unregistersymbol(iEnableMPI)
unregistersymbol(iEnableMEI)
unregistersymbol(iEnableMAI)
unregistersymbol(iEnableMCI)
unregistersymbol(iEnableMWI)
unregistersymbol(iEnableMHP)
unregistersymbol(iEnableMWD)
unregistersymbol(pHero)
unregistersymbol(pGold)
unregistersymbol(pPoints)
unregistersymbol(pWeapon)

unregistersymbol(CNID)
unregistersymbol(ESID)
unregistersymbol(AIID)
unregistersymbol(CIID)
unregistersymbol(PNID)
unregistersymbol(PFID)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
v1.03:
define(ctGOLD,0x0000A6BC) // Crowns ID
define(ctEDIB,0x0000A9D3) // Edibles (Food)
define(ctALCH,0x0000AC8F) // alchemy_ingredient
define(ctCRAF,0x0001B4C8) // crafting_ingredient
define(ctPOTI,0x00004547) // Potion
define(ctPOIN,0x00006F53) // GetPointsFree
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>96</ID>
          <Description>"[X] &lt;== God Mode ----------------------------------------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableGMD",1)
getAddressList().getMemoryRecordByID(96).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableGMD",0)
getAddressList().getMemoryRecordByID(96).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>97</ID>
          <Description>"[X] &lt;== Full Stamina --------------------------------------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMFY",1)
getAddressList().getMemoryRecordByID(97).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMFY",0)
getAddressList().getMemoryRecordByID(97).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"[X] &lt;== Full Oxygen ---------------------------------------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMPO",1)
getAddressList().getMemoryRecordByID(98).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMPO",0)
getAddressList().getMemoryRecordByID(98).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>99</ID>
          <Description>"[X] &lt;== Zero Toxicity -------------------------------------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMFG",1)
getAddressList().getMemoryRecordByID(99).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMFG",0)
getAddressList().getMemoryRecordByID(99).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"[X] &lt;== Minimum Points ---------------------------------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMHP",1)
getAddressList().getMemoryRecordByID(100).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMHP",0)
getAddressList().getMemoryRecordByID(100).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>107</ID>
          <Description>"[X] &lt;== Weapon/Armor Durability ------------------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMWD",1)
getAddressList().getMemoryRecordByID(107).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMWD",0)
getAddressList().getMemoryRecordByID(107).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"[X] &lt;== Minimum Gold ---------------------------------------------------&gt; (HK: CTRL+PageUp / CTRL+PageDown)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMPG",1)
getAddressList().getMemoryRecordByID(101).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMPG",0)
getAddressList().getMemoryRecordByID(101).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"[X] &lt;== Inventory Minimum Potion ---------------------------------------------&gt; (HK: CTRL+Insert / CTRL+Delete)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMPI",1)
getAddressList().getMemoryRecordByID(102).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMPI",0)
getAddressList().getMemoryRecordByID(102).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"[X] &lt;== Inventory Minimum Edibles --------------------------------------------&gt; (HK: CTRL+Insert / CTRL+Delete)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMEI",1)
getAddressList().getMemoryRecordByID(103).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMEI",0)
getAddressList().getMemoryRecordByID(103).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>104</ID>
          <Description>"[X] &lt;== Inventory Minimum Alchemy Ingredients ------------------------&gt; (HK: CTRL+Insert / CTRL+Delete)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMAI",1)
getAddressList().getMemoryRecordByID(104).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMAI",0)
getAddressList().getMemoryRecordByID(104).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"[X] &lt;== Inventory Minimum Crafting Ingredients -------------------------&gt; (HK: CTRL+Insert / CTRL+Delete)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMCI",1)
getAddressList().getMemoryRecordByID(105).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMCI",0)
getAddressList().getMemoryRecordByID(105).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>106</ID>
          <Description>"[X] &lt;== Inventory Weapon/Armor Fully Repaired -----------------------&gt; (HK: CTRL+Insert / CTRL+Delete)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMWI",1)
getAddressList().getMemoryRecordByID(106).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMWI",0)
getAddressList().getMemoryRecordByID(106).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"[X] &lt;== Table/Script Information"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
getMainForm().CommentButton.doClick()
{$ASM}

[disable]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : The Witcher III - Wild Hunt
 Game Version  : 1.04
 Game Sponsor  : Fennix102
 Process Name  : witcher3.exe
 Relevant Info : 64bits/High Profile System
 Script Version: 2.0
 CE Version    : 6.4
 Release date  : 25-May-2015
 Author        : Recifense
 History:
 23-May-15: First Release
 25-May-15: Release for version 1.04
 Features:
 - God Mode                [1]
 - Full Stamina            [2]
 - Full Oxygen             [3]
 - Zero Toxicity           [4]
 - Minimum Gold (Crowns)   [5] (*)
 - Minimum Items in Inv    [6] (*)
   - Edibles
   - Alchemy Ingredients
   - Crafting Ingredients
   - Potions
 - Recover damaged items   [7] (*)
 - Minimim Points          [8]
 - Some Pointers
===========================================
[1] For Human player's hero only;
[2] For Human player's hero only;
[3] For Human player's hero only;
[4] For Human player's hero only;
[5] When looking at the inventory (*);
[6] When looking at the inventory (*);
[7] When looking at the inventory (*);
[8] When spending points;
-----------
(*) Looking at the item in the inventory;
===========================================
[USAGE]
1) Run CE64;
2) Run Game;
3) Load the game process "witcher3.exe" in CE;
4) Load this table and activate the main script;
5) Now Activate the script of each cheat you want to use;
6) Game On;
===========================================
[HOTKEYS]
CTRL+Home      = Enable  GM/FS/FO/ZT/MP cheats;
CTRL+End       = Disable GM/FS/FO/ZT/MP cheats;
---------------
CTRL+PageUp    = Enable  MG cheats;
CTRL+PageDown  = Disable MG cheats;
---------------
CTRL+Insert    = Enable  MP/ME/MAI/MCI/*FR cheats;
CTRL+Delete    = Disable MP/ME/MAI/MCI/*FR cheats;
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat. So you can always come back in case you don't like the result.
===========================================
[INFO]
Tested on Win 7 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
