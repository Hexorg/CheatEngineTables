<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>10250</ID>
      <Description>"ignore level (hold Shift/Ctrl/Alt)"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(someReadAOB,witcher3.exe,CC 41 8B 00 89 02 C3)
registersymbol(someReadAOB)
aobscanmodule(someCheckAOB,witcher3.exe,39 44 24 40 0F 9F C0 88 07)
registersymbol(someCheckAOB)

label(bIsLevel)
registersymbol(bIsLevel)
label(pLevel)
registersymbol(pLevel)
label(something1)
registersymbol(something1)

alloc(newmem,2048,"witcher3.exe")
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [r8-8],64
jne originalcode
cmp dword ptr [r8-4],64
jne originalcode
mov [pLevel],r8
mov [something1],r14
mov byte ptr [bIsLevel],1

push rax
push rbx
push rcx
push rdx
push rsi
push rdi
push rbp
push r8
push r9
push r10
push r11
push r12
push r13
push r14
push r15

mov rcx,10 //Shift
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne @f

mov rcx,11 //Ctrl
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne @f

mov rcx,12 //Alt
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne @f

pop r15
pop r14
pop r13
pop r12
pop r11
pop r10
pop r9
pop r8
pop rbp
pop rdi
pop rsi
pop rdx
pop rcx
pop rbx
pop rax

mov eax,64
jmp originalcode

@@:
pop r15
pop r14
pop r13
pop r12
pop r11
pop r10
pop r9
pop r8
pop rbp
pop rdi
pop rsi
pop rdx
pop rcx
pop rbx
pop rax

originalcode:
mov [rdx],eax
ret
int 3
int 3

exit:
jmp returnhere

///

newmem2:

originalcode2:
cmp [rsp+40],eax
setg al

exit2:
jmp returnhere2

///
bIsLevel:
db 0
pLevel:
dq 0
something1:
dq 0
///

someReadAOB+4: //"witcher3.exe"+8A3EB3:
jmp newmem
returnhere:

someCheckAOB: //"witcher3.exe"+24EB04:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
someReadAOB+4: //"witcher3.exe"+8A3EB3:
db 89 02 C3 CC CC
//Alt: mov [rdx],eax
//Alt: ret
//Alt: int 3
//Alt: int 3
unregistersymbol(someReadAOB)
someCheckAOB: //"witcher3.exe"+24EB04:
//Alt: cmp [rsp+40],eax
//Alt: setg al
db 39 44 24 40 0F 9F C0
unregistersymbol(someCheckAOB)

unregistersymbol(bIsLevel)
unregistersymbol(pLevel)
unregistersymbol(something1)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>120</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>16</Key>
            <Key>120</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>10251</ID>
          <Description>"ignore level (always)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(someCheck2AOB,witcher3.exe,8B 44 24 38 39 44 24 40 0F 9F C0 88 07)
registersymbol(someCheck2AOB)

alloc(newmem,2048,"witcher3.exe")
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rbx
mov rbx,[pLevel]
test rbx,rbx
jz originalcode
cmp qword ptr [rbx],eax
jne originalcode
cmp qword ptr [rsp+40],#100
jg originalcode
cmp qword ptr [rsp+48],#100
jg originalcode
cmp byte ptr [bIsLevel],1
jne originalcode

pop rbx
xor al,al
mov [bIsLevel],al
jmp exit

originalcode:
pop rbx//
cmp [rsp+40],eax
setg al

exit:
jmp returnhere

///

someCheck2AOB+4: //"witcher3.exe"+188F714:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
someCheck2AOB+4: //"witcher3.exe"+188F714:
db 39 44 24 40 0F 9F C0
//Alt: cmp [rsp+40],eax
//Alt: setg al
unregistersymbol(someCheck2AOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>119</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>16</Key>
                <Key>119</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5604690#5604690
</Comments>
</CheatTable>
