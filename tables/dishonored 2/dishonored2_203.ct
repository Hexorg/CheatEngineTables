<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Infinite Health"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : Dishonored2.exe
// Version:
// Date   :
// Author : SomeGuy
[ENABLE]
aobscanmodule(aob_hp,Dishonored2.exe,F3 0F 10 7E 20 0F 28 F0)
registersymbol(aob_hp)
alloc(newmem_hp,1024,Dishonored2.exe)
label(return_hp)
label(mHP)
registersymbol(mHP)

newmem_hp:
  push eax
  mov eax, [mHP]
  cmp [rsi+20], eax
  jg @f
  mov [rsi+20], (float)100
@@:
  pop eax
  movss xmm7,[rsi+20]
  jmp return_hp

mHP:
  dd (float)100

aob_hp:
  jmp newmem_hp
return_hp:
[DISABLE]
aob_hp:
  db F3 0F 10 7E 20

unregistersymbol(aob_hp)
unregistersymbol(mHP)
dealloc(newmem_hp)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+48E87FD

"Dishonored2.exe"+48E87CF: 4C 89 74 24 68           -  mov [rsp+68],r14
"Dishonored2.exe"+48E87D4: 48 89 F1                 -  mov rcx,rsi
"Dishonored2.exe"+48E87D7: 0F 29 74 24 30           -  movaps [rsp+30],xmm6
"Dishonored2.exe"+48E87DC: 0F 29 7C 24 20           -  movaps [rsp+20],xmm7
"Dishonored2.exe"+48E87E1: 44 0F B6 B0 D1 00 00 00  -  movzx r14d,byte ptr [rax+000000D1]
"Dishonored2.exe"+48E87E9: 48 8B 06                 -  mov rax,[rsi]
"Dishonored2.exe"+48E87EC: 41 C0 EE 03              -  shr r14l,03
"Dishonored2.exe"+48E87F0: 41 80 E6 01              -  and r14l,01
"Dishonored2.exe"+48E87F4: FF 90 D8 00 00 00        -  call qword ptr [rax+000000D8]
"Dishonored2.exe"+48E87FA: 48 89 F1                 -  mov rcx,rsi
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+48E87FD: F3 0F 10 7E 20           -  movss xmm7,[rsi+20]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+48E8802: 0F 28 F0                 -  movaps xmm6,xmm0
"Dishonored2.exe"+48E8805: E8 56 AF 0B 00           -  call Dishonored2.exe+49A3760
"Dishonored2.exe"+48E880A: 0F 57 DB                 -  xorps xmm3,xmm3
"Dishonored2.exe"+48E880D: 0F 28 E0                 -  movaps xmm4,xmm0
"Dishonored2.exe"+48E8810: 48 85 ED                 -  test rbp,rbp
"Dishonored2.exe"+48E8813: 74 44                    -  je Dishonored2.exe+48E8859
"Dishonored2.exe"+48E8815: 48 89 E9                 -  mov rcx,rbp
"Dishonored2.exe"+48E8818: E8 93 00 0F 00           -  call Dishonored2.exe+49D88B0
"Dishonored2.exe"+48E881D: F3 0F 58 F0              -  addss xmm6,xmm0
"Dishonored2.exe"+48E8821: E8 6A 02 0F 00           -  call Dishonored2.exe+49D8A90
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Minimum HP Value"</Description>
          <VariableType>Float</VariableType>
          <Address>mHP</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Infinite Mana"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Dishonored2.exe
  Version: 
  Date   : 2016-11-10
  Author : SomeGuy

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(mp,Dishonored2.exe,F3 0F 10 40 20 EB 32 48 8B 40 08 4D 8B 48 48) // should be unique
alloc(newmem,$1000,"Dishonored2.exe"+487BF83)

label(code)
label(return)
label(mMP)
registersymbol(mMP)

newmem:
  push rdx
  mov rdx, [mMP]
  cmp [rax+20], rdx
  jg code
  mov [rax+20], rdx
code:
  pop rdx
  movss xmm0,[rax+20]
  jmp return
mMP:
  dd (float)100
mp:
  jmp newmem
return:
registersymbol(mp)

[DISABLE]

mp:
  db F3 0F 10 40 20

unregistersymbol(mp)
unregistersymbol(mMP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+487BF83

"Dishonored2.exe"+487BF5B: 48 89 F9                 -  mov rcx,rdi
"Dishonored2.exe"+487BF5E: 8D 9B F3 5D 00 19        -  lea ebx,[rbx+19005DF3]
"Dishonored2.exe"+487BF64: 41 89 D8                 -  mov r8d,ebx
"Dishonored2.exe"+487BF67: E8 D4 F3 2D 00           -  call Dishonored2.exe+4B5B340
"Dishonored2.exe"+487BF6C: 49 89 C0                 -  mov r8,rax
"Dishonored2.exe"+487BF6F: 48 85 C0                 -  test rax,rax
"Dishonored2.exe"+487BF72: 0F 84 D5 00 00 00        -  je Dishonored2.exe+487C04D
"Dishonored2.exe"+487BF78: 39 35 DA 98 14 FF        -  cmp [Dishonored2.exe+39C5858],esi
"Dishonored2.exe"+487BF7E: 0F 57 D2                 -  xorps xmm2,xmm2
"Dishonored2.exe"+487BF81: 74 07                    -  je Dishonored2.exe+487BF8A
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+487BF83: F3 0F 10 40 20           -  movss xmm0,[rax+20]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+487BF88: EB 32                    -  jmp Dishonored2.exe+487BFBC
"Dishonored2.exe"+487BF8A: 48 8B 40 08              -  mov rax,[rax+08]
"Dishonored2.exe"+487BF8E: 4D 8B 48 48              -  mov r9,[r8+48]
"Dishonored2.exe"+487BF92: F3 0F 10 40 68           -  movss xmm0,[rax+68]
"Dishonored2.exe"+487BF97: 4D 85 C9                 -  test r9,r9
"Dishonored2.exe"+487BF9A: 74 20                    -  je Dishonored2.exe+487BFBC
"Dishonored2.exe"+487BF9C: 49 63 40 68              -  movsxd  rax,dword ptr [r8+68]
"Dishonored2.exe"+487BFA0: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+487BFA3: 7E 10                    -  jle Dishonored2.exe+487BFB5
"Dishonored2.exe"+487BFA5: 48 8D 14 80              -  lea rdx,[rax+rax*4]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Minimum MP Value"</Description>
          <VariableType>Float</VariableType>
          <Address>mMP</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Infinite HP Potions"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : Dishonored2.exe
// Version:
// Date   :
// Author : SomeGuy
[ENABLE]
aobscanmodule(aob_hp_potions,Dishonored2.exe,8B 44 01 20 C3 30 99 44 89 D0 C3)
registersymbol(aob_hp_potions)
alloc(newmem_hp_potions,1024,Dishonored2.exe)
label(return_hp_potions)

newmem_hp_potions:
  mov [rcx+rax+20], #5
  mov eax,[rcx+rax+20]
  ret 
  jmp return_hp_potions

aob_hp_potions:
  jmp newmem_hp_potions
return_hp_potions:
[DISABLE]
aob_hp_potions:
  db 8B 44 01 20 C3

unregistersymbol(aob_hp_potions)
dealloc(newmem_hp_potions)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+49A3D90

"Dishonored2.exe"+49A3D73: C1 E2 02                                -  shl edx,02
"Dishonored2.exe"+49A3D76: 09 CA                                   -  or edx,ecx
"Dishonored2.exe"+49A3D78: 83 E2 28                                -  and edx,28
"Dishonored2.exe"+49A3D7B: 80 FA 28                                -  cmp dl,28
"Dishonored2.exe"+49A3D7E: 75 17                                   -  jne Dishonored2.exe+49A3D97
"Dishonored2.exe"+49A3D80: 45 84 D2                                -  test r10l,r10l
"Dishonored2.exe"+49A3D83: 75 12                                   -  jne Dishonored2.exe+49A3D97
"Dishonored2.exe"+49A3D85: 49 8B 40 38                             -  mov rax,[r8+38]
"Dishonored2.exe"+49A3D89: 4C 89 C9                                -  mov rcx,r9
"Dishonored2.exe"+49A3D8C: 48 6B C9 38                             -  imul rcx,rcx,38
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+49A3D90: 8B 44 01 20                             -  mov eax,[rcx+rax+20]
"Dishonored2.exe"+49A3D94: C3                                      -  ret 
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+49A3D95: 30 99 44 89 D0 C3                       -  xor [rcx-3C2F76BC],bl
"Dishonored2.exe"+49A3D9B: 01 CC                                   -  add esp,ecx
"Dishonored2.exe"+49A3D9D: CC                                      -  int 3 
"Dishonored2.exe"+49A3D9E: CC                                      -  int 3 
"Dishonored2.exe"+49A3D9F: CC                                      -  int 3 
"Dishonored2.exe"+49A3DA0: CC                                      -  int 3 
"Dishonored2.exe"+49A3DA1: CC                                      -  int 3 
"Dishonored2.exe"+49A3DA2: CC                                      -  int 3 
"Dishonored2.exe"+49A3DA3: 66 66 66 66 2E 0F 1F 84 00 00 00 00 00  -  nop cs:[rax+rax+00000000]
"Dishonored2.exe"+49A3DB0: 48 8B 05 91 2D BB FD                    -  mov rax,[Dishonored2.exe+2556B48]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Infinite MP Potions"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : Dishonored2.exe
// Version:
// Date   :
// Author : SomeGuy
[ENABLE]
aobscanmodule(aob_mp_potions,Dishonored2.exe,8B 44 01 20 C3 DD)
registersymbol(aob_mp_potions)
alloc(newmem_mp_potions,1024,Dishonored2.exe)
label(return_mp_potions)

newmem_mp_potions:
  mov [rcx+rax+20], #5
  mov eax,[rcx+rax+20]
  ret 
  jmp return_mp_potions

aob_mp_potions:
  jmp newmem_mp_potions
return_mp_potions:
[DISABLE]
aob_mp_potions:
  db 8B 44 01 20 C3

unregistersymbol(aob_mp_potions)
dealloc(newmem_mp_potions)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+49D8B56

"Dishonored2.exe"+49D8B39: 74 03                                         -  je Dishonored2.exe+49D8B3E
"Dishonored2.exe"+49D8B3B: 4D 89 D1                                      -  mov r9,r10
"Dishonored2.exe"+49D8B3E: 48 63 41 34                                   -  movsxd  rax,dword ptr [rcx+34]
"Dishonored2.exe"+49D8B42: 85 C0                                         -  test eax,eax
"Dishonored2.exe"+49D8B44: 78 16                                         -  js Dishonored2.exe+49D8B5C
"Dishonored2.exe"+49D8B46: 4D 85 C9                                      -  test r9,r9
"Dishonored2.exe"+49D8B49: 74 11                                         -  je Dishonored2.exe+49D8B5C
"Dishonored2.exe"+49D8B4B: 48 89 C1                                      -  mov rcx,rax
"Dishonored2.exe"+49D8B4E: 49 8B 41 38                                   -  mov rax,[r9+38]
"Dishonored2.exe"+49D8B52: 48 6B C9 38                                   -  imul rcx,rcx,38
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+49D8B56: 8B 44 01 20                                   -  mov eax,[rcx+rax+20]
"Dishonored2.exe"+49D8B5A: C3                                            -  ret 
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+49D8B5B: DD 44 89 D0                                   -  fld qword ptr [rcx+rcx*4-30]
"Dishonored2.exe"+49D8B5F: C3                                            -  ret 
"Dishonored2.exe"+49D8B60: D1 09                                         -  ror [rcx],1
"Dishonored2.exe"+49D8B62: CC                                            -  int 3 
"Dishonored2.exe"+49D8B63: 66 66 66 66 2E 0F 1F 84 00 00 00 00 00        -  nop cs:[rax+rax+00000000]
"Dishonored2.exe"+49D8B70: 53                                            -  push rbx
"Dishonored2.exe"+49D8B71: 48 83 EC 30                                   -  sub rsp,30
"Dishonored2.exe"+49D8B75: 48 8B 41 08                                   -  mov rax,[rcx+08]
"Dishonored2.exe"+49D8B79: 4C 8B 49 48                                   -  mov r9,[rcx+48]
"Dishonored2.exe"+49D8B7D: F3 0F 10 40 68                                -  movss xmm0,[rax+68]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Infinite Coins"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : Dishonored2.exe
// Version:
// Date   :
// Author : SomeGuy
[ENABLE]
aobscanmodule(aob_coins,Dishonored2.exe,8B 83 6C 01 00 00 4C 89 C1 2B 83 70 01 00 00 89 44 24 40)
registersymbol(aob_coins)
alloc(newmem_coins,1024,Dishonored2.exe)
label(return_coins)

newmem_coins:
  mov [rbx+16c], #10000000
  mov eax,[rbx+0000016C]
  jmp return_coins

aob_coins:
  jmp newmem_coins
  nop
return_coins:
[DISABLE]
aob_coins:
  db 8B 83 6C 01 00 00

unregistersymbol(aob_coins)
dealloc(newmem_coins)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+474F379

"Dishonored2.exe"+474F354: 75 05                 -  jne Dishonored2.exe+474F35B
"Dishonored2.exe"+474F356: 45 84 DB              -  test r11l,r11l
"Dishonored2.exe"+474F359: 74 03                 -  je Dishonored2.exe+474F35E
"Dishonored2.exe"+474F35B: 4C 89 DE              -  mov rsi,r11
"Dishonored2.exe"+474F35E: 48 85 DB              -  test rbx,rbx
"Dishonored2.exe"+474F361: 0F 84 BA 00 00 00     -  je Dishonored2.exe+474F421
"Dishonored2.exe"+474F367: 4D 85 C0              -  test r8,r8
"Dishonored2.exe"+474F36A: 0F 84 B1 00 00 00     -  je Dishonored2.exe+474F421
"Dishonored2.exe"+474F370: 48 85 F6              -  test rsi,rsi
"Dishonored2.exe"+474F373: 0F 84 A8 00 00 00     -  je Dishonored2.exe+474F421
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+474F379: 8B 83 6C 01 00 00     -  mov eax,[rbx+0000016C]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+474F37F: 4C 89 C1              -  mov rcx,r8
"Dishonored2.exe"+474F382: 2B 83 70 01 00 00     -  sub eax,[rbx+00000170]
"Dishonored2.exe"+474F388: 89 44 24 40           -  mov [rsp+40],eax
"Dishonored2.exe"+474F38C: E8 9F 49 25 00        -  call Dishonored2.exe+49A3D30
"Dishonored2.exe"+474F391: 48 89 F1              -  mov rcx,rsi
"Dishonored2.exe"+474F394: 89 44 24 48           -  mov [rsp+48],eax
"Dishonored2.exe"+474F398: E8 53 97 28 00        -  call Dishonored2.exe+49D8AF0
"Dishonored2.exe"+474F39D: 89 44 24 50           -  mov [rsp+50],eax
"Dishonored2.exe"+474F3A1: 8B 43 40              -  mov eax,[rbx+40]
"Dishonored2.exe"+474F3A4: 25 FF FF FF 00        -  and eax,00FFFFFF
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Infinite Ammo A"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : Dishonored2.exe
// Version:
// Date   :
// Author : SomeGuy
[ENABLE]
aobscanmodule(aob_ammo,Dishonored2.exe,89 43 20 EB 13)
registersymbol(aob_ammo)
alloc(newmem_ammo,1024,Dishonored2.exe)
label(return_ammo)

newmem_ammo:
  mov eax, #99
  mov [rbx+20],eax
  jmp Dishonored2.exe+4872ABB
  jmp return_ammo

aob_ammo:
  jmp newmem_ammo
return_ammo:
[DISABLE]
aob_ammo:
  db 89 43 20 EB 13

unregistersymbol(aob_ammo)
dealloc(newmem_ammo)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+4872AA3

"Dishonored2.exe"+4872A88: 00 4C 89 A4              -  add [rcx+rcx*4-5C],cl
"Dishonored2.exe"+4872A8C: 24 98                    -  and al,-68
"Dishonored2.exe"+4872A8E: 00 00                    -  add [rax],al
"Dishonored2.exe"+4872A90: 00 4C 89 B4              -  add [rcx+rcx*4-4C],cl
"Dishonored2.exe"+4872A94: 24 A0                    -  and al,-60
"Dishonored2.exe"+4872A96: 00 00                    -  add [rax],al
"Dishonored2.exe"+4872A98: 00 44 39 C7              -  add [rcx+rdi-39],al
"Dishonored2.exe"+4872A9C: 7D 13                    -  jnl Dishonored2.exe+4872AB1
"Dishonored2.exe"+4872A9E: 44 89 C0                 -  mov eax,r8d
"Dishonored2.exe"+4872AA1: 29 F8                    -  sub eax,edi
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+4872AA3: 89 43 20                 -  mov [rbx+20],eax
"Dishonored2.exe"+4872AA6: EB 13                    -  jmp Dishonored2.exe+4872ABB
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+4872AA8: F8                       -  clc 
"Dishonored2.exe"+4872AA9: 0E                       -  push cs
"Dishonored2.exe"+4872AAA: 79 6F                    -  jns Dishonored2.exe+4872B1B
"Dishonored2.exe"+4872AAC: 09 4D 04                 -  or [rbp+04],ecx
"Dishonored2.exe"+4872AAF: D9 5C 44 89              -  fstp dword ptr [rsp+rax*2-77]
"Dishonored2.exe"+4872AB3: C7 C7 43 20 00 00        -  mov edi,00002043
"Dishonored2.exe"+4872AB9: 00 00                    -  add [rax],al
"Dishonored2.exe"+4872ABB: 44 8B 73 20              -  mov r14d,[rbx+20]
"Dishonored2.exe"+4872ABF: 48 89 DA                 -  mov rdx,rbx
"Dishonored2.exe"+4872AC2: 45 85 F6                 -  test r14d,r14d
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Infinite Ammo B"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Dishonored2.exe
  Version: 
  Date   : 2016-11-10
  Author : SomeGuy

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ammo2,Dishonored2.exe,8B 40 20 EB 04) // should be unique
alloc(newmem,$1000,"Dishonored2.exe"+489ECB5)

label(code)
label(return)
label(aAmount)
registersymbol(aAmount)

newmem:

code:
{
  push rdx
  mov rdx, [aAmount]
  cmp rdx, [rax+20]
  jl @f
  mov [rax+20], rdx
@@:
  pop rdx
  }
  mov [rax+20], #10
  mov eax,[rax+20]
  jmp Dishonored2.exe+489ECBE
  jmp return
aAmount:
  dd #10
ammo2:
  jmp newmem
return:
registersymbol(ammo2)

[DISABLE]

ammo2:
  db 8B 40 20 EB 04

unregistersymbol(ammo2)
unregistersymbol(aAmount)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+489ECB5

"Dishonored2.exe"+489EC97: 48 89 CB                                      -  mov rbx,rcx
"Dishonored2.exe"+489EC9A: 48 85 C0                                      -  test rax,rax
"Dishonored2.exe"+489EC9D: 74 1D                                         -  je Dishonored2.exe+489ECBC
"Dishonored2.exe"+489EC9F: 48 8B 10                                      -  mov rdx,[rax]
"Dishonored2.exe"+489ECA2: 48 85 D2                                      -  test rdx,rdx
"Dishonored2.exe"+489ECA5: 74 15                                         -  je Dishonored2.exe+489ECBC
"Dishonored2.exe"+489ECA7: 48 8B 49 68                                   -  mov rcx,[rcx+68]
"Dishonored2.exe"+489ECAB: E8 60 47 FD FF                                -  call Dishonored2.exe+4873410
"Dishonored2.exe"+489ECB0: 48 85 C0                                      -  test rax,rax
"Dishonored2.exe"+489ECB3: 74 07                                         -  je Dishonored2.exe+489ECBC
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+489ECB5: 8B 40 20                                      -  mov eax,[rax+20]
"Dishonored2.exe"+489ECB8: EB 04                                         -  jmp Dishonored2.exe+489ECBE
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+489ECBA: 00 00                                         -  add [rax],al
"Dishonored2.exe"+489ECBC: 31 C0                                         -  xor eax,eax
"Dishonored2.exe"+489ECBE: 8B 93 A4 00 00 00                             -  mov edx,[rbx+000000A4]
"Dishonored2.exe"+489ECC4: 48 89 D9                                      -  mov rcx,rbx
"Dishonored2.exe"+489ECC7: 39 D0                                         -  cmp eax,edx
"Dishonored2.exe"+489ECC9: 0F 4C D0                                      -  cmovl edx,eax
"Dishonored2.exe"+489ECCC: 48 8B 03                                      -  mov rax,[rbx]
"Dishonored2.exe"+489ECCF: 89 93 A0 00 00 00                             -  mov [rbx+000000A0],edx
"Dishonored2.exe"+489ECD5: 29 FA                                         -  sub edx,edi
"Dishonored2.exe"+489ECD7: 48 8B 5C 24 30                                -  mov rbx,[rsp+30]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Infinite Runes A"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Dishonored2.exe
  Version: 
  Date   : 2016-11-10
  Author : SomeGuy

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(runes,Dishonored2.exe,89 43 20 EB 13) // should be unique
alloc(newmem,$1000,"Dishonored2.exe"+4872AA3)

label(code)
label(return)

newmem:

code:
  mov eax, #100
  mov [rbx+20],eax
  jmp Dishonored2.exe+4872ABB
  jmp return

runes:
  jmp newmem
return:
registersymbol(runes)

[DISABLE]

runes:
  db 89 43 20 EB 13

unregistersymbol(runes)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+4872AA3

"Dishonored2.exe"+4872A88: 00 4C 89 A4              -  add [rcx+rcx*4-5C],cl
"Dishonored2.exe"+4872A8C: 24 98                    -  and al,-68
"Dishonored2.exe"+4872A8E: 00 00                    -  add [rax],al
"Dishonored2.exe"+4872A90: 00 4C 89 B4              -  add [rcx+rcx*4-4C],cl
"Dishonored2.exe"+4872A94: 24 A0                    -  and al,-60
"Dishonored2.exe"+4872A96: 00 00                    -  add [rax],al
"Dishonored2.exe"+4872A98: 00 44 39 C7              -  add [rcx+rdi-39],al
"Dishonored2.exe"+4872A9C: 7D 13                    -  jnl Dishonored2.exe+4872AB1
"Dishonored2.exe"+4872A9E: 44 89 C0                 -  mov eax,r8d
"Dishonored2.exe"+4872AA1: 29 F8                    -  sub eax,edi
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+4872AA3: 89 43 20                 -  mov [rbx+20],eax
"Dishonored2.exe"+4872AA6: EB 13                    -  jmp Dishonored2.exe+4872ABB
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+4872AA8: F8                       -  clc 
"Dishonored2.exe"+4872AA9: 0E                       -  push cs
"Dishonored2.exe"+4872AAA: 79 6F                    -  jns Dishonored2.exe+4872B1B
"Dishonored2.exe"+4872AAC: 09 4D 04                 -  or [rbp+04],ecx
"Dishonored2.exe"+4872AAF: D9 5C 44 89              -  fstp dword ptr [rsp+rax*2-77]
"Dishonored2.exe"+4872AB3: C7 C7 43 20 00 00        -  mov edi,00002043
"Dishonored2.exe"+4872AB9: 00 00                    -  add [rax],al
"Dishonored2.exe"+4872ABB: 44 8B 73 20              -  mov r14d,[rbx+20]
"Dishonored2.exe"+4872ABF: 48 89 DA                 -  mov rdx,rbx
"Dishonored2.exe"+4872AC2: 45 85 F6                 -  test r14d,r14d
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Infinite Runes B"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Dishonored2.exe
  Version: 
  Date   : 2016-11-10
  Author : SomeGuy

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(runes_b,Dishonored2.exe,8B 44 01 20 EB 04 27) // should be unique
alloc(newmem,$1000,"Dishonored2.exe"+4872E3F)

label(code)
label(return)

newmem:

code:
  mov [rcx+rax+20], #100
  mov eax,[rcx+rax+20]
  jmp Dishonored2.exe+4872E49
  jmp return

runes_b:
  jmp newmem
  nop
return:
registersymbol(runes_b)

[DISABLE]

runes_b:
  db 8B 44 01 20 EB 04

unregistersymbol(runes_b)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+4872E3F

"Dishonored2.exe"+4872E18: 49 8D 4B 08                                -  lea rcx,[r11+08]
"Dishonored2.exe"+4872E1C: FF 15 26 CC 53 FD                          -  call qword ptr [Dishonored2.exe+1DAFA48]
"Dishonored2.exe"+4872E22: 90                                         -  nop 
"Dishonored2.exe"+4872E23: 48 8D 0D DE CB 53 FD                       -  lea rcx,[Dishonored2.exe+1DAFA08]
"Dishonored2.exe"+4872E2A: 48 89 4C 24 70                             -  mov [rsp+70],rcx
"Dishonored2.exe"+4872E2F: 83 F8 FF                                   -  cmp eax,-01
"Dishonored2.exe"+4872E32: 7E 13                                      -  jle Dishonored2.exe+4872E47
"Dishonored2.exe"+4872E34: 48 63 C8                                   -  movsxd  rcx,eax
"Dishonored2.exe"+4872E37: 48 6B C9 38                                -  imul rcx,rcx,38
"Dishonored2.exe"+4872E3B: 48 8B 43 38                                -  mov rax,[rbx+38]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+4872E3F: 8B 44 01 20                                -  mov eax,[rcx+rax+20]
"Dishonored2.exe"+4872E43: EB 04                                      -  jmp Dishonored2.exe+4872E49
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+4872E45: 27                                         -  daa 
"Dishonored2.exe"+4872E46: 00 89 F8 48 8B 5C                          -  add [rcx+5C8B48F8],cl
"Dishonored2.exe"+4872E4C: 24 78                                      -  and al,78
"Dishonored2.exe"+4872E4E: 48 83 C4 60                                -  add rsp,60
"Dishonored2.exe"+4872E52: 5F                                         -  pop rdi
"Dishonored2.exe"+4872E53: C3                                         -  ret 
"Dishonored2.exe"+4872E54: CC                                         -  int 3 
"Dishonored2.exe"+4872E55: CC                                         -  int 3 
"Dishonored2.exe"+4872E56: CC                                         -  int 3 
"Dishonored2.exe"+4872E57: CC                                         -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Free Black Market Shopping"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Dishonored2.exe
  Version: 
  Date   : 2016-11-10
  Author : SomeGuy

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,Dishonored2.exe,41 89 47 58 8B 45 5C) // should be unique
alloc(newmem,$1000,"Dishonored2.exe"+46A7AC9)

label(code)
label(return)

newmem:
  mov eax, 0
code:
  mov [r15+58],eax
  mov eax,[rbp+5C]
  jmp return

INJECT:
  jmp newmem
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 41 89 47 58 8B 45 5C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+46A7AC9

"Dishonored2.exe"+46A7AA3: 8B 45 00              -  mov eax,[rbp+00]
"Dishonored2.exe"+46A7AA6: 48 8D 55 08           -  lea rdx,[rbp+08]
"Dishonored2.exe"+46A7AAA: 49 8D 4F 08           -  lea rcx,[r15+08]
"Dishonored2.exe"+46A7AAE: 41 89 07              -  mov [r15],eax
"Dishonored2.exe"+46A7AB1: E8 5A 14 A7 FF        -  call Dishonored2.exe+4118F10
"Dishonored2.exe"+46A7AB6: 48 8D 55 30           -  lea rdx,[rbp+30]
"Dishonored2.exe"+46A7ABA: 49 8D 4F 30           -  lea rcx,[r15+30]
"Dishonored2.exe"+46A7ABE: E8 4D 14 A7 FF        -  call Dishonored2.exe+4118F10
"Dishonored2.exe"+46A7AC3: 8B 45 58              -  mov eax,[rbp+58]
"Dishonored2.exe"+46A7AC6: 45 31 C0              -  xor r8d,r8d
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+46A7AC9: 41 89 47 58           -  mov [r15+58],eax
"Dishonored2.exe"+46A7ACD: 8B 45 5C              -  mov eax,[rbp+5C]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+46A7AD0: 41 89 47 5C           -  mov [r15+5C],eax
"Dishonored2.exe"+46A7AD4: 8B 45 60              -  mov eax,[rbp+60]
"Dishonored2.exe"+46A7AD7: 41 89 47 60           -  mov [r15+60],eax
"Dishonored2.exe"+46A7ADB: 8B 45 64              -  mov eax,[rbp+64]
"Dishonored2.exe"+46A7ADE: 41 89 47 64           -  mov [r15+64],eax
"Dishonored2.exe"+46A7AE2: 0F B6 45 68           -  movzx eax,byte ptr [rbp+68]
"Dishonored2.exe"+46A7AE6: 41 88 47 68           -  mov [r15+68],al
"Dishonored2.exe"+46A7AEA: 8B 45 6C              -  mov eax,[rbp+6C]
"Dishonored2.exe"+46A7AED: 41 89 47 6C           -  mov [r15+6C],eax
"Dishonored2.exe"+46A7AF1: 8B 45 70              -  mov eax,[rbp+70]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Infinite Whale Bones"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Game   : Dishonored2.exe
// Version:
// Date   :
// Author : SomeGuy
[ENABLE]
aobscanmodule(aob_bones,Dishonored2.exe,F3 0F 10 47 58 F3)
registersymbol(aob_bones)
alloc(newmem_bones,1024,Dishonored2.exe)
label(return_bones)

newmem_bones:
  mov [rdi+58], (float)100
  movss xmm0,[rdi+58]
  jmp return_bones

aob_bones:
  jmp newmem_bones
return_bones:
[DISABLE]
aob_bones:
  db F3 0F 10 47 58

unregistersymbol(aob_bones)
dealloc(newmem_bones)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+474B69E

"Dishonored2.exe"+474B67B: E8 14 CF E0 00                 -  call Dishonored2.exe+5558594
"Dishonored2.exe"+474B680: F3 0F 2C C8                    -  cvttss2si ecx,xmm0
"Dishonored2.exe"+474B684: EB 04                          -  jmp Dishonored2.exe+474B68A
"Dishonored2.exe"+474B686: 20 44 89 F1                    -  and [rcx+rcx*4-0F],al
"Dishonored2.exe"+474B68A: 89 4C 24 40                    -  mov [rsp+40],ecx
"Dishonored2.exe"+474B68E: 44 89 F0                       -  mov eax,r14d
"Dishonored2.exe"+474B691: 85 C9                          -  test ecx,ecx
"Dishonored2.exe"+474B693: 0F 9F D0                       -  setg al
"Dishonored2.exe"+474B696: FF C0                          -  inc eax
"Dishonored2.exe"+474B698: 89 85 48 03 00 00              -  mov [rbp+00000348],eax
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+474B69E: F3 0F 10 47 58                 -  movss xmm0,[rdi+58]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+474B6A3: F3 0F 11 44 24 4C              -  movss [rsp+4C],xmm0
"Dishonored2.exe"+474B6A9: 48 63 47 60                    -  movsxd  rax,dword ptr [rdi+60]
"Dishonored2.exe"+474B6AD: 83 F8 FF                       -  cmp eax,-01
"Dishonored2.exe"+474B6B0: 7E 21                          -  jle Dishonored2.exe+474B6D3
"Dishonored2.exe"+474B6B2: 48 8D 14 80                    -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+474B6B6: 48 8B 43 48                    -  mov rax,[rbx+48]
"Dishonored2.exe"+474B6BA: F3 0F 10 44 D0 24              -  movss xmm0,[rax+rdx*8+24]
"Dishonored2.exe"+474B6C0: F3 0F 58 05 2C 9D 81 FD        -  addss xmm0,[Dishonored2.exe+1F653F4]
"Dishonored2.exe"+474B6C8: E8 C7 CE E0 00                 -  call Dishonored2.exe+5558594
"Dishonored2.exe"+474B6CD: F3 0F 2C C0                    -  cvttss2si eax,xmm0
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>mMP</Name>
      <Address>13FFF002A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mp</Name>
      <Address>14487BF83</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_hp</Name>
      <Address>1448E87FD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mHP</Name>
      <Address>13FFE002E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aAmount</Name>
      <Address>13FFD001D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo2</Name>
      <Address>14489ECB5</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
