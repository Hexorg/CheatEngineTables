<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>44</ID>
      <Description>"- TELEPORTER SCRiPT"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(teleportmem,2048)
registersymbol(s_enable)
registersymbol(l_enable)
registersymbol(u_enable)
label(returnteleport)
label(originalcodeteleport)
label(exitteleport)
label(z_coord)
label(x_coord)
label(y_coord)
label(z_coord_undo)
label(x_coord_undo)
label(y_coord_undo)
label(save_coord)
label(load_coord)
label(undo_coord)
label(s_enable)
label(l_enable)
label(u_enable)

"BH6.exe"+17515A:
jmp teleportmem
nop
nop
nop
nop
returnteleport:

teleportmem:
cmp [s_enable],1
je save_coord

cmp [l_enable],1
je load_coord

cmp [u_enable],1
je undo_coord

jmp originalcodeteleport

save_coord:
mov [s_enable],0
push edi
mov edi,[ebx+50]
mov [x_coord],edi
mov edi,[ebx+54]
mov [z_coord],edi
mov edi,[ebx+58]
mov [y_coord],edi
pop edi
jmp originalcodeteleport

load_coord:
mov [l_enable],0
cmp [z_coord],0
je originalcodeteleport
// Save actual Position (for UNDO TELEPORT) when press LOAD POSiTiON
push edi
mov edi,[ebx+50]
mov [x_coord_undo],edi
mov edi,[ebx+54]
mov [z_coord_undo],edi
mov edi,[ebx+58]
mov [y_coord_undo],edi
pop edi
// Save actual Position (for UNDO TELEPORT) when press LOAD POSiTiON
push edi
mov edi,[x_coord]
mov [ebx+50],edi
mov edi,[z_coord]
mov [ebx+54],edi
mov edi,[y_coord]
mov [ebx+58],edi
pop edi
jmp originalcodeteleport

undo_coord:
mov [l_enable],0
mov [s_enable],0
mov [u_enable],0
cmp [z_coord_undo],0
je originalcodeteleport
push edi
mov edi,[x_coord_undo]
mov [ebx+50],edi
mov edi,[z_coord_undo]
mov [ebx+54],edi
mov edi,[y_coord_undo]
mov [ebx+58],edi
pop edi

originalcodeteleport:
fld dword ptr [ebx+50]
movss xmm2,[esp+34]

exitteleport:
jmp returnteleport

x_coord:
dd 0
z_coord:
dd 0
y_coord:
dd 0
s_enable:
dd 0
l_enable:
dd 0
x_coord_undo:
dd 0
z_coord_undo:
dd 0
y_coord_undo:
dd 0
u_enable:
dd 0
//&gt;&gt;&gt;--Teleport--//



[DISABLE]
dealloc(teleportmem)
dealloc(newmem)
Unregistersymbol(s_enable)
Unregistersymbol(l_enable)
Unregistersymbol(u_enable)
"BH6.exe"+17515A:
fld dword ptr [ebx+50]
movss xmm2,[esp+34]
//Alt: db D9 43 50 F3 0F 10 54 24 34


</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>46</ID>
      <Description>"1. SAVE POSiTiON"</Description>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>s_enable</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>103</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"2. LOAD POSiTiON"</Description>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>l_enable</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>104</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"3. UNDO LAST TELEPORT"</Description>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>u_enable</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>105</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>58</ID>
      <Description>"RAPiD FiRE + SPEED "</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(all)

newmem: //this is allocated memory, you have read,write,execute accesse
//////////////////////////////////////////////////////////////
////////////PLAYER - LEON - CHAPTER 1-2//////////////////////
//cmp dword ptr [ebx+390],(int)54
//jne originalcode

cmp dword ptr [ebx+390],(int)36
je all
cmp dword ptr [ebx+390],(int)54
je all
cmp dword ptr [ebx+390],(int)45
je all
cmp dword ptr [ebx+390],(int)63
je all
cmp dword ptr [ebx+390],(int)51
je all
jne originalcode

all:
mov [eax+ebx+0000040C],(float)10

originalcode:
movss xmm4,[eax+ebx+0000040C]

exit:
jmp returnhere

"BH6.exe"+BA2257:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+BA2257:
movss xmm4,[eax+ebx+0000040C]
//Alt: db F3 0F 10 A4 18 0C 04 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"AMMO, NO RELOAD, HEAL, GRENADES"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov byte ptr [ecx+eax*2+0A],#99

originalcode:
movsx eax,word ptr [ecx+eax*2+0A]

exit:
jmp returnhere

"BH6.exe"+96FF32:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+96FF32:
movsx eax,word ptr [ecx+eax*2+0A]
//Alt: db 0F BF 44 41 0A
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>161</ID>
      <Description>"BiG WEAPONS"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(BigWeapons)

newmem: //this is allocated memory, you have read,write,execute access

cmp dword ptr [edi+390],(int)8 // Is weapons?
je BigWeapons
cmp dword ptr [edi+390],(int)9 // Is weapons 2?
je BigWeapons
cmp dword ptr [edi+390],(int)10 // Is weapons 3?
je BigWeapons
cmp dword ptr [edi+390],(int)7 // Is weapons 4?
je BigWeapons
cmp dword ptr [edi+390],(int)22 // Is weapons cROSSBOW?
je BigWeapons
jne originalcode

BigWeapons:
mov [edi+70],(float)1.55
mov [edi+74],(float)1.55
mov [edi+78],(float)1.55

originalcode:
mulss xmm4,[edi+78]

exit:
jmp returnhere

"BH6.exe"+B9F4F8:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+B9F4F8:
mulss xmm4,[edi+78]
//Alt: db F3 0F 59 67 78
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>160</ID>
      <Description>"BiG ZOMBiES"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
cmp dword ptr [edi+390],(int)54 // is Player?
je originalcode
cmp dword ptr [edi+390],(int)45 // is Player - Plane level?
je originalcode
cmp dword ptr [edi+390],(int)51 // Is Buddy ?
je originalcode
cmp dword ptr [edi+390],(int)52 // Is Buddy 2 - helicopter?
je originalcode
cmp dword ptr [edi+390],(int)37 // Is Buddy 3 - helicopter?
je originalcode
cmp dword ptr [edi+390],(int)63 // is buddy - Plane level?
je originalcode
cmp dword ptr [edi+390],(int)61 // is Boss - helicopter?
je originalcode
cmp dword ptr [edi+390],(int)12 // is Boss - Utsanak?
je originalcode
cmp dword ptr [edi+390],(int)3 // Is Envoirment ?
je originalcode
cmp dword ptr [edi+390],(int)1 // Is doors?
je originalcode
cmp dword ptr [edi+390],(int)4 // Is doors 2?
je originalcode
cmp dword ptr [edi+390],(int)5 // Is doors 3?
je originalcode
cmp dword ptr [edi+390],(int)6 // Is doors 4?
je originalcode
cmp dword ptr [edi+390],(int)2 // Is ledders?
je originalcode
cmp dword ptr [edi+390],(int)12 // Is Drill-machine?
je originalcode
cmp dword ptr [edi+390],(int)13 // Is bridges?
je originalcode
cmp dword ptr [edi+390],(int)14 // Is bridges 2?
je originalcode
cmp dword ptr [edi+390],(int)15 // Is hELICOPTER - cHRIS?
je originalcode
cmp dword ptr [edi+390],(int)8 // Is weapons?
je originalcode
cmp dword ptr [edi+390],(int)9 // Is weapons 2?
je originalcode
cmp dword ptr [edi+390],(int)10 // Is weapons 3?
je originalcode
cmp dword ptr [edi+390],(int)7 // Is weapons 4?
je originalcode
cmp dword ptr [edi+390],(int)22 // Is weapons cROSSBOW?
je originalcode
cmp dword ptr [edi+390],(int)65 // Is Boss Shark 4?
je originalcode
cmp dword ptr [edi+390],(int)61 // Is Boss Utsanak  - Drill machine?
je originalcode
cmp dword ptr [edi+390],(int)70 // Is Boss Derek Simons?
je originalcode
cmp dword ptr [edi+390],(int)83 // Is Boss Derek Simons Fly?
je originalcode
cmp dword ptr [edi+390],(int)36 // Is another Buddy?
je originalcode
cmp dword ptr [edi+390],(int)50 // Is another Buddy 2?
je originalcode
cmp dword ptr [edi+390],(int)56 // Is another Buddy 2?
je originalcode
cmp dword ptr [edi+390],(int)42 // Is another Buddy 3?
je originalcode
cmp dword ptr [edi+390],(int)28 // Is Vehicle in Mission - Humvee?
je originalcode
cmp dword ptr [edi+390],(int)21 // Is Vehicle in Mission(Jake) - Tank?
je originalcode
cmp dword ptr [edi+390],(int)16 // On Bike - Jake+Buddy?
je originalcode
//cmp dword ptr [edi+390],(int)29 // Is Zombie Cokon ?
//je originalcode
cmp dword ptr [edi+390],(int)64 // Is woman buddy - chriss?
je originalcode
cmp dword ptr [edi+390],(int)111 // Is Boss Derek - player ada?
je originalcode
cmp dword ptr [edi+390],(int)72 // Is Boss Derek 2- player ada?
je originalcode
cmp dword ptr [edi+390],(int)77 // Is Boss Mutant big- player chris - ?
je originalcode
//cmp dword ptr [edi+390],(int)27 // On Bike - Enemys - ZOMBIES ID??
//je originalcode
cmp dword ptr [edi+390],(int)103 // Is Boss Snake BOW  - Player Chris - Chapter 3?
je originalcode
cmp dword ptr [edi+390],(int)25 // Is Player Chris - on Humvee  - Chapter 3?
je originalcode
cmp dword ptr [edi+390],(int)47 //47 Is Harrier - Player Chris - Chapter 4?
je originalcode
cmp dword ptr [edi+390],(int)31 //47 Is Harrier - Player Chris - Chapter 4?
je originalcode
cmp dword ptr [edi+390],(int)253 // Is Boss Cokon Zombie - Player Chris - Chapter 5??
je originalcode
cmp dword ptr [edi+390],(int)89 // Is Boss BOW - Player Chris Chapter 5?
je originalcode
cmp dword ptr [edi+390],(int)17 // Is Vehicle - Player Chris - Chapter 2??
je originalcode
cmp dword ptr [edi+390],(int)30 // Is Vehicle - Player Chris - Chapter 2??
je originalcode
mov [edi+70],(float)1.75
mov [edi+74],(float)1.75
mov [edi+78],(float)1.75

originalcode:
mulss xmm3,[edi+74]

exit:
jmp returnhere

"BH6.exe"+B9F50D:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+B9F50D:
mulss xmm3,[edi+74]
//Alt: db F3 0F 59 5F 74
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>153</ID>
      <Description>"EASY BUTTONS"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//Based on SteveAndrewÂ´s Auto Button mash Script.
//Credits goes to him

//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [esi+00002A0C],(float)100
mov [esi+00003074],(float)100

originalcode:
movss [esi+00002A0C],xmm0

exit:
jmp returnhere

"BH6.exe"+714B09:
jmp newmem
nop
nop
nop
returnhere:


"BH6.exe"+E721A:
db 90 90

"BH6.exe"+E7422:
db 90 90


[DISABLE]
dealloc(newmem)
"BH6.exe"+714B09:
movss [esi+00002A0C],xmm0
//Alt: db F3 0F 11 86 0C 2A 00 00

"BH6.exe"+E712A:
db 72 25 8B 56 0C

"BH6.exe"+E7422:
db 72 0A 5F 5D 8A C3
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>120</ID>
      <Description>"GET MASSiVE EXP POiNTS"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [esi+00000588],#999999999

originalcode:
mov edi,[esi+00000588]

exit:
jmp returnhere

"BH6.exe"+5EBBF3:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+5EBBF3:
mov edi,[esi+00000588]
//Alt: db 8B BE 88 05 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>71</ID>
      <Description>"MiNi ZOMBiES"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
cmp dword ptr [edi+390],(int)54 // is Player?
je originalcode
cmp dword ptr [edi+390],(int)45 // is Player - Plane level?
je originalcode
cmp dword ptr [edi+390],(int)51 // Is Buddy ?
je originalcode
cmp dword ptr [edi+390],(int)52 // Is Buddy 2 - helicopter?
je originalcode
cmp dword ptr [edi+390],(int)37 // Is Buddy 3 - helicopter?
je originalcode
cmp dword ptr [edi+390],(int)63 // is buddy - Plane level?
je originalcode
cmp dword ptr [edi+390],(int)61 // is Boss - helicopter?
je originalcode
cmp dword ptr [edi+390],(int)12 // is Boss - Utsanak?
je originalcode
cmp dword ptr [edi+390],(int)3 // Is Envoirment ?
je originalcode
cmp dword ptr [edi+390],(int)1 // Is doors?
je originalcode
cmp dword ptr [edi+390],(int)4 // Is doors 2?
je originalcode
cmp dword ptr [edi+390],(int)5 // Is doors 3?
je originalcode
cmp dword ptr [edi+390],(int)2 // Is ledders?
je originalcode
cmp dword ptr [edi+390],(int)12 // Is Drill-machine?
je originalcode
cmp dword ptr [edi+390],(int)13 // Is bridges?
je originalcode
cmp dword ptr [edi+390],(int)14 // Is bridges 2?
je originalcode
cmp dword ptr [edi+390],(int)15 // Is hELICOPTER - cHRIS?
je originalcode
cmp dword ptr [edi+390],(int)8 // Is weapons?
je originalcode
cmp dword ptr [edi+390],(int)9 // Is weapons 2?
je originalcode
cmp dword ptr [edi+390],(int)10 // Is weapons 3?
je originalcode
cmp dword ptr [edi+390],(int)7 // Is weapons 4?
je originalcode
cmp dword ptr [edi+390],(int)6 // Is Player Ada  - Bus Mission Chapter 3 ?
je originalcode
cmp dword ptr [edi+390],(int)22 // Is weapons cROSSBOW?
je originalcode
cmp dword ptr [edi+390],(int)65 // Is Boss Shark 4?
je originalcode
cmp dword ptr [edi+390],(int)61 // Is Boss Utsanak  - Drill machine?
je originalcode
cmp dword ptr [edi+390],(int)70 // Is Boss Derek Simons?
je originalcode
cmp dword ptr [edi+390],(int)83 // Is Boss Derek Simons Fly?
je originalcode
cmp dword ptr [edi+390],(int)36 // Is another Buddy?
je originalcode
cmp dword ptr [edi+390],(int)50 // Is another Buddy 2?
je originalcode
cmp dword ptr [edi+390],(int)56 // Is another Buddy 2?
je originalcode
cmp dword ptr [edi+390],(int)42 // Is another Buddy 3?
je originalcode
cmp dword ptr [edi+390],(int)28 // Is Vehicle in Mission - Humvee?
je originalcode
cmp dword ptr [edi+390],(int)21 // Is Vehicle in Mission(Jake) - Tank?
je originalcode
cmp dword ptr [edi+390],(int)16 // On Bike - Jake+Buddy?
je originalcode
//cmp dword ptr [edi+390],(int)29 // Is Zombie Cokon 7 SOME ZOMBIES in Chriss Missions ?
//je originalcode
cmp dword ptr [edi+390],(int)64 // Is woman buddy - chriss?
je originalcode
cmp dword ptr [edi+390],(int)111 // Is Boss Derek - player ada?
je originalcode
cmp dword ptr [edi+390],(int)72 // Is Boss Derek 2- player ada?
je originalcode
//cmp dword ptr [edi+390],(int)27 // On Bike - Enemys - ZOMBIES ID??
//je originalcode
cmp dword ptr [edi+390],(int)103 // Is Boss Snake BOW - Player Chris - Chapter 3?
je originalcode
//cmp dword ptr [edi+390],(int)25 // Is Player Chris - on Humvee  - Chapter 3?
//je originalcode
cmp dword ptr [edi+390],(int)253 // Is Boss Cokon Zombie - Player Chris - Chapter 5??
je originalcode
cmp dword ptr [edi+390],(int)89 // Is Boss BOW - Player Chris Chapter 5?
je originalcode
cmp dword ptr [edi+390],(int)17 // Is Vehicle - Player Chris - Chapter 2??
je originalcode
cmp dword ptr [edi+390],(int)30 // Is Vehicle - Player Chris - Chapter 2??
je originalcode
mov [edi+70],(float)0.5
mov [edi+74],(float)0.5
mov [edi+78],(float)0.5

originalcode:
mulss xmm2,[edi+70]

exit:
jmp returnhere

"BH6.exe"+B9F4E8:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+B9F4E8:
mulss xmm2,[edi+70]
//Alt: db F3 0F 59 57 70
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>82</ID>
      <Description>"NO RECOiL"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [esi+00004AFC],(float)0

originalcode:
movss xmm1,[esi+00004AFC]

exit:
jmp returnhere

"BH6.exe"+6AE75B:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+6AE75B:
movss xmm1,[esi+00004AFC]
//Alt: db F3 0F 10 8E FC 4A 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>142</ID>
      <Description>"SLOW MOTiON"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access


mov [eax+08],(float)0.3

originalcode:
movss xmm5,[eax+08]

exit:
jmp returnhere

"BH6.exe"+B979A4:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+B979A4:
movss xmm5,[eax+08]
//Alt: db F3 0F 10 68 08
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>165</ID>
      <Description>"iNFiNiTE AMMO - HELi ROCKETS"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov byte ptr [edx+eax*4+000041C0],#6

originalcode:
cmp edi,[edx+eax*4+000041C0]

exit:
jmp returnhere

"BH6.exe"+618B64:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+618B64:
cmp edi,[edx+eax*4+000041C0]
//Alt: db 3B BC 82 C0 41 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"iNFiNiTE ENERGY/POWER"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [eax+00003B00],(float)800

originalcode:
fld dword ptr [eax+00003B00]

exit:
jmp returnhere

"BH6.exe"+5A9BC7:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+5A9BC7:
fld dword ptr [eax+00003B00]
//Alt: db D9 80 00 3B 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>151</ID>
      <Description>"iNFiNiTE HEALTH"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov word ptr [ecx+00000F10],#900

originalcode:
movzx esi,word ptr [ecx+00000F10]

exit:
jmp returnhere

"BH6.exe"+657BA1:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+657BA1:
movzx esi,word ptr [ecx+00000F10]
//Alt: db 0F B7 B1 10 0F 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>38</ID>
      <Description>"iNFiNiTE HEALTH - BUDDYS"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov word ptr [ecx+00000F10],#900

originalcode:
movzx eax,word ptr [ecx+00000F10]

exit:
jmp returnhere

"BH6.exe"+647C40:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+647C40:
movzx eax,word ptr [ecx+00000F10]
//Alt: db 0F B7 81 10 0F 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>180</ID>
      <Description>"iNFiNiTE TiME"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

alloc(newmem5,2048) //2kb should be enough
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
mov dword ptr [ecx+eax*4+00000664],(float)0 // Set Time to 0 for finsih mission goal

originalcode5:
fld dword ptr [ecx+eax*4+00000664]

exit5:
jmp returnhere5

"BH6.exe"+DAA09:
jmp newmem5
nop
nop
returnhere5:


newmem: //this is allocated memory, you have read,write,execute access
mov [edx+eax*4+0000092C],(float)600 // set time to 00:10:00

originalcode:
movss xmm0,[edx+eax*4+0000092C]

exit:
jmp returnhere

"BH6.exe"+9303FD:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+9303FD:
movss xmm0,[edx+eax*4+0000092C]
//Alt: db F3 0F 10 84 82 2C 09 00 00

//code from here till the end of the code will be used to disable the cheat
dealloc(newmem5)
"BH6.exe"+DAA09:
fld dword ptr [ecx+eax*4+00000664]
//Alt: db D9 84 81 64 06 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>191</ID>
      <Description>"iNFiNiTE HEALTH - VEHiCLES"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov word ptr [edi+00000F10],#3000

originalcode:
movsx ecx,word ptr [edi+00000F10]

exit:
jmp returnhere

"BH6.exe"+618339:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+618339:
movsx ecx,word ptr [edi+00000F10]
//Alt: db 0F BF 8F 10 0F 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>194</ID>
      <Description>"SUPER SPEED"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(Speed)

newmem: //this is allocated memory, you have read,write,execute access

cmp dword ptr [edi+390],(int)36
je Speed
cmp dword ptr [edi+390],(int)54
je Speed
cmp dword ptr [edi+390],(int)45
je Speed
cmp dword ptr [edi+390],(int)63
je Speed
cmp dword ptr [edi+390],(int)51
je Speed
jne originalcode

Speed:
mov [edi+00000DD8],(float)3

originalcode:
movss xmm4,[edi+00000DD8]

exit:
jmp returnhere

"BH6.exe"+B9F4F0:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+B9F4F0:
movss xmm4,[edi+00000DD8]
//Alt: db F3 0F 10 A7 D8 0D 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>198</ID>
      <Description>"WINDY DAY"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [esi+00005198],(float)7

originalcode:
movss xmm0,[esi+00005198]

exit:
jmp returnhere

"BH6.exe"+6BCAD6:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+6BCAD6:
movss xmm0,[esi+00005198]
//Alt: db F3 0F 10 86 98 51 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>199</ID>
      <Description>"RAPiD FiRE"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(rapidfire)

newmem: //this is allocated memory, you have read,write,execute access
cmp dword ptr [esi+390],(int)36
je rapidfire
cmp dword ptr [esi+390],(int)54
je rapidfire
cmp dword ptr [esi+390],(int)45
je rapidfire
cmp dword ptr [esi+390],(int)63
je rapidfire
cmp dword ptr [esi+390],(int)51
je rapidfire
jne originalcode

rapidfire:
movss xmm0,[esi+00004F50]
movss [esi+00004F4C],xmm0

originalcode:
movss [esi+00004F4C],xmm0

exit:
jmp returnhere

"BH6.exe"+6C05BD:
jmp newmem
nop
nop
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BH6.exe"+6C05BD:
movss [esi+00004F4C],xmm0
//Alt: db F3 0F 10 86 4C 4F 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>NoRecoil</Name>
      <Address>00CBDF3A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Ammo</Name>
      <Address>00D6FF32</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ComboGauge</Name>
      <Address>00590846</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SkillPoints</Name>
      <Address>009EBBF3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>RapidFire</Name>
      <Address>00AC05A3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>s_enable</Name>
      <Address>431E0110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>l_enable</Name>
      <Address>431E0114</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>u_enable</Name>
      <Address>431E0124</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Created by l0wb1t
26.03.2013
Credits: Steve Anedrews - Auto Button Masher Script.
</Comments>
</CheatTable>
