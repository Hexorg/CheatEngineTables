<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>9723</ID>
      <Description>"Borderlands: The Pre-Sequel AOB script"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobBasePointerReader,BorderlandsPreSequel.exe,8B 06 8B 4D ?? 8D 04 88 85 C0 0F 84 ?? ?? ?? ?? 8B 55 ?? 89 10 E9 ?? ?? ?? ?? 3C)
aobscanmodule(aobMinMaxFlagTester,BorderlandsPreSequel.exe,84 86 ?? ?? 00 00 0F 84 ?? ?? 00 00 8B 4E ?? 8B 51)
aobscanmodule(aobAmmoUpdater,BorderlandsPreSequel.exe,3B C1 7C ?? 8B 55 ?? 89 02 8B E5 5D C2 08 00)
aobscanmodule(aobRecoilReader,BorderlandsPreSequel.exe,F3 0F 2C 8F ?? ?? 00 00 01 0E F3 0F 10 8F ?? ?? 00 00)
aobscanmodule(aobWeaponAccuracyReader1,BorderlandsPreSequel.exe,F3 0F 10 87 ?? ?? 00 00 50 8B CF F3 0F 11 45 ?? E8 ?? ?? ?? ?? 85 C0)
aobscanmodule(aobWeaponAccuracyReader2,BorderlandsPreSequel.exe,D9 00 8B 4D ?? D9 19 5D C2 14 00 8B 51 ?? 8B 4D)
aobscanmodule(aobPlayerAccuracyUpdater,BorderlandsPreSequel.exe,F3 0F 11 47 ?? 8B 8F ?? ?? 00 00 F3 0F 10 47 ?? C1 E1 ?? 33 8F ?? ?? 00 00)
aobscanmodule(aobFireRateReader,BorderlandsPreSequel.exe,F3 0F 10 81 ?? ?? 00 00 0F 2F 05 ?? ?? ?? ?? 77 ?? F3 0F 10 05)
aobscanmodule(aobWeaponDamageReader,BorderlandsPreSequel.exe,D9 80 ?? ?? 00 00 8B 45 ?? D9 5E ?? 33 C9 89 4E)
aobscanmodule(aobWalkSpeedCapReader,BorderlandsPreSequel.exe,F3 0F 10 86 ?? ?? 00 00 F3 0F 11 44 24 ?? F3 0F 10 43 ?? 8D 8D ?? ?? ?? ?? F3 0F 11 04 24 51 8B CE FF D2)

alloc(newmemBasePointerReader,4096,aobBasePointerReader)

label(aobBasePointerReader_r)
label(aobBasePointerReader_i)
registersymbol(aobBasePointerReader_r)
registersymbol(aobBasePointerReader_i)

label(lblBasePointerReader)
label(lblBasePointerReaderRet)

label(pBasePointer)
label(pWeaponPointer)
label(pAccuracyPointer)
label(pPlayer)
registersymbol(pBasePointer)
registersymbol(pWeaponPointer)
registersymbol(pAccuracyPointer)
registersymbol(pPlayer)

label(aobMinMaxFlagTester_r)
label(aobMinMaxFlagTester_i)
registersymbol(aobMinMaxFlagTester_r)
registersymbol(aobMinMaxFlagTester_i)

label(lblMinMaxFlagTester)
label(lblMinMaxFlagTesterSkip)
label(lblMinMaxFlagTesterRet)
label(lblMinMaxFlagTesterAmmo)
label(lblMinMaxFlagTesterHealth)
label(lblMinMaxFlagTesterShield)
label(lblMinMaxFlagTesterO2)

label(aobAmmoUpdater_r)
label(aobAmmoUpdater_i)
registersymbol(aobAmmoUpdater_r)
registersymbol(aobAmmoUpdater_i)

label(lblAmmoUpdater)
label(lblAmmoUpdaterSkip)
label(lblAmmoUpdaterRet)

label(bEnableInfiniteHealth)
label(bEnableInfiniteShield)
label(bEnableInfiniteAmmo)
label(bEnableInfiniteO2)
registersymbol(bEnableInfiniteHealth)
registersymbol(bEnableInfiniteShield)
registersymbol(bEnableInfiniteAmmo)
registersymbol(bEnableInfiniteO2)

label(aobRecoilReader_r)
label(aobRecoilReader_i)
registersymbol(aobRecoilReader_r)
registersymbol(aobRecoilReader_i)

label(lblRecoilReader)
label(lblRecoilReaderSkip)
label(lblRecoilReaderRet)

label(bEnableNoRecoil)
registersymbol(bEnableNoRecoil)

label(aobWeaponAccuracyReader1_r)
label(aobWeaponAccuracyReader1_i)
registersymbol(aobWeaponAccuracyReader1_r)
registersymbol(aobWeaponAccuracyReader1_i)

label(lblWeaponAccuracyReader1)
label(lblWeaponAccuracyReader1Skip)
label(lblWeaponAccuracyReader1Ret)

label(aobWeaponAccuracyReader2_r)
label(aobWeaponAccuracyReader2_i)
registersymbol(aobWeaponAccuracyReader2_r)
registersymbol(aobWeaponAccuracyReader2_i)

label(lblWeaponAccuracyReader2)
label(lblWeaponAccuracyReader2SkipAccuracy)
label(lblWeaponAccuracyReader2SkipJump)
label(lblWeaponAccuracyReader2Ret)

label(aobPlayerAccuracyUpdater_r)
label(aobPlayerAccuracyUpdater_i)
registersymbol(aobPlayerAccuracyUpdater_r)
registersymbol(aobPlayerAccuracyUpdater_i)

label(lblPlayerAccuracyUpdater)
label(lblPlayerAccuracyUpdaterSkip)
label(lblPlayerAccuracyUpdaterRet)

label(bEnableAccuracyMod)
label(fAccuracyMod)
label(bEnableJumpHeightMod)
label(fJumpHeightMod)
registersymbol(bEnableAccuracyMod)
registersymbol(fAccuracyMod)
registersymbol(bEnableJumpHeightMod)
registersymbol(fJumpHeightMod)

label(aobFireRateReader_r)
label(aobFireRateReader_i)
registersymbol(aobFireRateReader_r)
registersymbol(aobFireRateReader_i)

label(lblFireRateReader)
label(lblFireRateReaderSkip)
label(lblFireRateReaderRet)

label(bEnableFireRateMod)
label(fFireRateMod)
registersymbol(bEnableFireRateMod)
registersymbol(fFireRateMod)

label(aobWeaponDamageReader_r)
label(aobWeaponDamageReader_i)
registersymbol(aobWeaponDamageReader_r)
registersymbol(aobWeaponDamageReader_i)

label(lblWeaponDamageReader)
label(lblWeaponDamageReaderSkip)
label(lblWeaponDamageReaderRet)

label(bEnableWeaponDamageMod)
label(fWeaponDamageMod)
registersymbol(bEnableWeaponDamageMod)
registersymbol(fWeaponDamageMod)

label(aobWalkSpeedCapReader_r)
label(aobWalkSpeedCapReader_i)
registersymbol(aobWalkSpeedCapReader_r)
registersymbol(aobWalkSpeedCapReader_i)

label(lblWalkSpeedCapReader)
label(lblWalkSpeedCapReaderSkip)
label(lblWalkSpeedCapReaderRet)

label(bEnableWalkSpeedLimitMod)
label(fWalkSpeedLimitMod)
registersymbol(bEnableWalkSpeedLimitMod)
registersymbol(fWalkSpeedLimitMod)

newmemBasePointerReader:
bEnableInfiniteHealth:
dd 1
bEnableInfiniteShield:
dd 0
bEnableInfiniteAmmo:
dd 1
bEnableInfiniteO2:
dd 0
bEnableNoRecoil:
dd 1
bEnableAccuracyMod:
dd 1
fAccuracyMod:
dd (float)0.01
bEnableFireRateMod:
dd 1
fFireRateMod:
dd (float)0.2
bEnableWeaponDamageMod:
dd 1
fWeaponDamageMod:
dd (float)10.0
bEnableWalkSpeedLimitMod:
dd 1
fWalkSpeedLimitMod:
dd (float)2.25
bEnableJumpHeightMod:
dd 1
fJumpHeightMod:
dd (float)1.75

lblBasePointerReader:
mov dword ptr [pBasePointer],esi
mov ecx,[esi]
mov eax,[ecx+2C]
test eax,eax
jz short @f
mov eax,[eax+000000a4]
@@:
mov dword ptr [pPlayer],eax
mov eax,[ecx+30]
test eax,eax
jz short @f
mov eax,[eax+000000a4]
test eax,eax
jz short @f
mov eax,[eax+00000480]
@@:
mov dword ptr [pWeaponPointer],eax
mov eax,[ecx+2c]
test eax,eax
jz short @f
mov eax,[eax+000001a8]
@@:
mov dword ptr [pAccuracyPointer],eax
//Alt: mov eax,[esi]
//Alt: mov ecx,[ebp-14]
//db 8B 06 8B 4D EC
readmem(aobBasePointerReader,5)
jmp lblBasePointerReaderRet
aobBasePointerReader_i:
readmem(aobBasePointerReader,5)
pBasePointer:
dd 0
pWeaponPointer:
dd 0
pAccuracyPointer:
dd 0
pPlayer:
dd 0

lblMinMaxFlagTester:
mov ecx,[pWeaponPointer]
test ecx,ecx
jz short lblMinMaxFlagTesterSkip
cmp dword ptr [ecx+000009CC],esi
je short lblMinMaxFlagTesterAmmo
mov ecx,[ecx+000009C4]
test ecx,ecx
jz short lblMinMaxFlagTesterSkip
cmp dword ptr [ecx+000001BC],esi
je short lblMinMaxFlagTesterHealth
cmp dword ptr [ecx+000001C0],esi
je short lblMinMaxFlagTesterShield
cmp dword ptr [ecx+000001C4],esi
je short lblMinMaxFlagTesterO2
lblMinMaxFlagTesterSkip:
//Alt: test [esi+00000108],al
//db 84 86 08 01 00 00
readmem(aobMinMaxFlagTester,6)
jmp lblMinMaxFlagTesterRet
lblMinMaxFlagTesterAmmo:
cmp dword ptr [bEnableInfiniteAmmo],1
jne short lblMinMaxFlagTesterSkip
xor al,al
jmp short lblMinMaxFlagTesterSkip
lblMinMaxFlagTesterHealth:
cmp dword ptr [bEnableInfiniteHealth],1
jne short lblMinMaxFlagTesterSkip
xor al,al
jmp short lblMinMaxFlagTesterSkip
lblMinMaxFlagTesterShield:
cmp dword ptr [bEnableInfiniteShield],1
jne short lblMinMaxFlagTesterSkip
xor al,al
jmp short lblMinMaxFlagTesterSkip
lblMinMaxFlagTesterO2:
cmp dword ptr [bEnableInfiniteO2],1
jne short lblMinMaxFlagTesterSkip
xor al,al
jmp short lblMinMaxFlagTesterSkip
aobMinMaxFlagTester_i:
readmem(aobMinMaxFlagTester,6)

lblAmmoUpdater:
push ebx
mov ebx,[pWeaponPointer]
add ebx,a24
cmp ebx,edx
jne short lblAmmoUpdaterSkip
cmp dword ptr [bEnableInfiniteAmmo],1
jne short lblAmmoUpdaterSkip
mov eax,[edx]
lblAmmoUpdaterSkip:
pop ebx
//Alt: mov [edx],eax
//Alt: mov esp,ebp
//Alt: pop ebp
//db 89 02 8B E5 5D
readmem(aobAmmoUpdater+07,5)
jmp lblAmmoUpdaterRet
aobAmmoUpdater_i:
readmem(aobAmmoUpdater+07,5)

lblRecoilReader:
cmp dword ptr [bEnableNoRecoil],1
jne short lblRecoilReaderSkip
mov ecx,[aobRecoilReader_i+4]
mov dword ptr [edi+ecx-4],0
mov dword ptr [edi+ecx],0
mov dword ptr [edi+ecx+4],0
mov dword ptr [edi+ecx+8],0
mov dword ptr [edi+ecx+C],0
lblRecoilReaderSkip:
//Alt: cvttss2si ecx,[edi+00000F98]
//db F3 0F 2C 8F 98 0F 00 00
readmem(aobRecoilReader,8)
jmp lblRecoilReaderRet
aobRecoilReader_i:
readmem(aobRecoilReader,8)

lblWeaponAccuracyReader1:
//Alt: movss xmm0,[edi+000008CC]
//db F3 0F 10 87 CC 08 00 00
readmem(aobWeaponAccuracyReader1,8)
cmp dword ptr [pWeaponPointer],edi
jne short lblWeaponAccuracyReader1Skip
cmp dword ptr [bEnableAccuracyMod],1
jne short lblWeaponAccuracyReader1Skip
mulss xmm0,[fAccuracyMod]
lblWeaponAccuracyReader1Skip:
jmp lblWeaponAccuracyReader1Ret
aobWeaponAccuracyReader1_i:
readmem(aobWeaponAccuracyReader1,8)

lblWeaponAccuracyReader2:
//Alt: fld dword ptr [eax]
//Alt: mov ecx,[ebp+08]
//db D9 00 8B 4D 08
//readmem(aobWeaponAccuracyReader2,5) We split this so we can use the ECX register
//Alt: fld dword ptr [eax]
//db D9 00
readmem(aobWeaponAccuracyReader2,2)
mov ecx,[pWeaponPointer]
add ecx,[aobWeaponAccuracyReader1_i+4]
cmp eax,ecx
jne short lblWeaponAccuracyReader2SkipAccuracy
cmp dword ptr [bEnableAccuracyMod],1
jne short lblWeaponAccuracyReader2SkipJump
fmul dword ptr [fAccuracyMod]
lblWeaponAccuracyReader2SkipAccuracy:
mov ecx,[pPlayer]
test ecx,ecx
jz short lblWeaponAccuracyReader2SkipJump
mov ecx,[ecx+00000190]
add ecx,2ec
cmp eax,ecx
jne short lblWeaponAccuracyReader2SkipJump
cmp dword ptr [bEnableJumpHeightMod],1
jne short lblWeaponAccuracyReader2SkipJump
fmul dword ptr [fJumpHeightMod]
lblWeaponAccuracyReader2SkipJump:
//Alt: mov ecx,[ebp+08]
//db 8B 4D 08
readmem(aobWeaponAccuracyReader2+2,3)
jmp lblWeaponAccuracyReader2Ret
aobWeaponAccuracyReader2_i:
readmem(aobWeaponAccuracyReader2,5)

lblPlayerAccuracyUpdater:
cmp dword ptr [pAccuracyPointer],edi
jne short lblPlayerAccuracyUpdaterSkip
cmp dword ptr [bEnableAccuracyMod],1
jne short lblPlayerAccuracyUpdaterSkip
mulss xmm0,[fAccuracyMod]
lblPlayerAccuracyUpdaterSkip:
//Alt: movss [edi+6C],xmm0
//db F3 0F 11 47 6C
readmem(aobPlayerAccuracyUpdater,5)
jmp lblPlayerAccuracyUpdaterRet
aobPlayerAccuracyUpdater_i:
readmem(aobPlayerAccuracyUpdater,5)

lblFireRateReader:
//Alt: movss xmm0,[ecx+000008B8]
//db F3 0F 10 81 B8 08 00 00
readmem(aobFireRateReader,8)
cmp dword ptr [pWeaponPointer],ecx
jne short lblFireRateReaderSkip
cmp dword ptr [bEnableFireRateMod],1
jne short lblFireRateReaderSkip
mulss xmm0,[fFireRateMod]
lblFireRateReaderSkip:
jmp lblFireRateReaderRet
aobFireRateReader_i:
readmem(aobFireRateReader,8)

lblWeaponDamageReader:
//Alt: fld dword ptr [eax+000008E0]
//db D9 80 E0 08 00 00
readmem(aobWeaponDamageReader,6)
cmp dword ptr [pWeaponPointer],eax
jne short lblWeaponDamageReaderSkip
cmp dword ptr [bEnableWeaponDamageMod],1
jne short lblWeaponDamageReaderSkip
fmul dword ptr [fWeaponDamageMod]
lblWeaponDamageReaderSkip:
jmp lblWeaponDamageReaderRet
aobWeaponDamageReader_i:
readmem(aobWeaponDamageReader,6)

lblWalkSpeedCapReader:
//Alt: movss xmm0,[esi+000002A8]
//db F3 0F 10 86 A8 02 00 00
readmem(aobWalkSpeedCapReader,8)
mov ecx,[pPlayer]
test ecx,ecx
jz short lblWalkSpeedCapReaderSkip
cmp dword ptr [ecx+00000190],esi
jne short lblWalkSpeedCapReaderSkip
cmp dword ptr [bEnableWalkSpeedLimitMod],1
jne short lblWalkSpeedCapReaderSkip
mulss xmm0,[fWalkSpeedLimitMod]
lblWalkSpeedCapReaderSkip:
jmp lblWalkSpeedCapReaderRet
aobWalkSpeedCapReader_i:
readmem(aobWalkSpeedCapReader,8)

//"BorderlandsPreSequel.exe"+C330D8:
aobWalkSpeedCapReader:
aobWalkSpeedCapReader_r:
jmp lblWalkSpeedCapReader
nop
nop
nop
lblWalkSpeedCapReaderRet:

//"BorderlandsPreSequel.exe"+9B6D8:
aobWeaponDamageReader:
aobWeaponDamageReader_r:
jmp lblWeaponDamageReader
nop
lblWeaponDamageReaderRet:

//"BorderlandsPreSequel.exe"+C08444:
aobFireRateReader:
aobFireRateReader_r:
jmp lblFireRateReader
nop
nop
nop
lblFireRateReaderRet:

//"BorderlandsPreSequel.exe"+B8D3C4:
aobWeaponAccuracyReader1:
aobWeaponAccuracyReader1_r:
jmp lblWeaponAccuracyReader1
nop
nop
nop
lblWeaponAccuracyReader1Ret:

//"BorderlandsPreSequel.exe"+EF239E:
aobWeaponAccuracyReader2:
aobWeaponAccuracyReader2_r:
jmp lblWeaponAccuracyReader2
lblWeaponAccuracyReader2Ret:

//"BorderlandsPreSequel.exe"+AF84DA:
aobPlayerAccuracyUpdater:
aobPlayerAccuracyUpdater_r:
jmp lblPlayerAccuracyUpdater
lblPlayerAccuracyUpdaterRet:

//"BorderlandsPreSequel.exe"+9D3557:
aobRecoilReader:
aobRecoilReader_r:
jmp lblRecoilReader
nop
nop
nop
lblRecoilReaderRet:

//"BorderlandsPreSequel.exe"+467F1A:
aobAmmoUpdater+07:
aobAmmoUpdater_r:
jmp lblAmmoUpdater
lblAmmoUpdaterRet:

//"BorderlandsPreSequel.exe"+932778:
aobMinMaxFlagTester:
aobMinMaxFlagTester_r:
jmp lblMinMaxFlagTester
nop
lblMinMaxFlagTesterRet:

//"BorderlandsPreSequel.exe"+F26E9D:
aobBasePointerReader:
aobBasePointerReader_r:
jmp lblBasePointerReader
lblBasePointerReaderRet:

[DISABLE]
//"BorderlandsPreSequel.exe"+F26E9D:
//Alt: mov eax,[esi]
//Alt: mov ecx,[ebp-14]
//db 8B 06 8B 4D EC
aobBasePointerReader_r:
readmem(aobBasePointerReader_i,5)

unregistersymbol(aobBasePointerReader_r)
unregistersymbol(aobBasePointerReader_i)

unregistersymbol(pBasePointer)
unregistersymbol(pWeaponPointer)
unregistersymbol(pAccuracyPointer)
unregistersymbol(pPlayer)

//"BorderlandsPreSequel.exe"+932778:
//Alt: test [esi+00000108],al
//db 84 86 08 01 00 00
aobMinMaxFlagTester_r:
readmem(aobMinMaxFlagTester_i,6)

unregistersymbol(aobMinMaxFlagTester_r)
unregistersymbol(aobMinMaxFlagTester_i)

//"BorderlandsPreSequel.exe"+467F1A:
//Alt: mov [edx],eax
//Alt: mov esp,ebp
//Alt: pop ebp
//db 89 02 8B E5 5D
aobAmmoUpdater_r:
readmem(aobAmmoUpdater_i,5)

unregistersymbol(aobAmmoUpdater_r)
unregistersymbol(aobAmmoUpdater_i)

unregistersymbol(bEnableInfiniteHealth)
unregistersymbol(bEnableInfiniteShield)
unregistersymbol(bEnableInfiniteAmmo)
unregistersymbol(bEnableInfiniteO2)

//"BorderlandsPreSequel.exe"+9D3557:
//Alt: cvttss2si ecx,[edi+00000F98]
//db F3 0F 2C 8F 98 0F 00 00
aobRecoilReader_r:
readmem(aobRecoilReader_i,8)

unregistersymbol(aobRecoilReader_r)
unregistersymbol(aobRecoilReader_i)

unregistersymbol(bEnableNoRecoil)

//"BorderlandsPreSequel.exe"+B8D3C4:
//Alt: movss xmm0,[edi+000008CC]
//db F3 0F 10 87 CC 08 00 00
aobWeaponAccuracyReader1_r:
readmem(aobWeaponAccuracyReader1_i,8)

unregistersymbol(aobWeaponAccuracyReader1_r)
unregistersymbol(aobWeaponAccuracyReader1_i)

//"BorderlandsPreSequel.exe"+EF239E:
//Alt: fld dword ptr [eax]
//Alt: mov ecx,[ebp+08]
//db D9 00 8B 4D 08
aobWeaponAccuracyReader2_r:
readmem(aobWeaponAccuracyReader2_i,5)

unregistersymbol(aobWeaponAccuracyReader2_r)
unregistersymbol(aobWeaponAccuracyReader2_i)

//"BorderlandsPreSequel.exe"+AF84DA:
//Alt: movss [edi+6C],xmm0
//db F3 0F 11 47 6C
aobPlayerAccuracyUpdater_r:
readmem(aobPlayerAccuracyUpdater_i,5)

unregistersymbol(aobPlayerAccuracyUpdater_r)
unregistersymbol(aobPlayerAccuracyUpdater_i)

unregistersymbol(bEnableAccuracyMod)
unregistersymbol(fAccuracyMod)
unregistersymbol(bEnableJumpHeightMod)
unregistersymbol(fJumpHeightMod)

//"BorderlandsPreSequel.exe"+C08444:
//Alt: movss xmm0,[ecx+000008B8]
//db F3 0F 10 81 B8 08 00 00
aobFireRateReader_r:
readmem(aobFireRateReader_i,8)

unregistersymbol(aobFireRateReader_r)
unregistersymbol(aobFireRateReader_i)

unregistersymbol(bEnableFireRateMod)
unregistersymbol(fFireRateMod)

//"BorderlandsPreSequel.exe"+9B6D8:
//Alt: fld dword ptr [eax+000008E0]
//db D9 80 E0 08 00 00
aobWeaponDamageReader_r:
readmem(aobWeaponDamageReader_i,6)

unregistersymbol(aobWeaponDamageReader_r)
unregistersymbol(aobWeaponDamageReader_i)

unregistersymbol(bEnableWeaponDamageMod)
unregistersymbol(fWeaponDamageMod)

//"BorderlandsPreSequel.exe"+C330D8:
//Alt: movss xmm0,[esi+000002A8]
//db F3 0F 10 86 A8 02 00 00
aobWalkSpeedCapReader_r:
readmem(aobWalkSpeedCapReader_i,8)

unregistersymbol(aobWalkSpeedCapReader_r)
unregistersymbol(aobWalkSpeedCapReader_i)

unregistersymbol(bEnableWalkSpeedLimitMod)

dealloc(newmemBasePointerReader)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>9758</ID>
          <Description>"bEnableInfiniteHealth"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteHealth</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9762</ID>
          <Description>"bEnableInfiniteShield"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteShield</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9761</ID>
          <Description>"bEnableInfiniteAmmo"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteAmmo</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9760</ID>
          <Description>"bEnableInfiniteO2"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteO2</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9757</ID>
          <Description>"bEnableNoRecoil"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableNoRecoil</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9755</ID>
          <Description>"bEnableAccuracyMod"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableAccuracyMod</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>9756</ID>
              <Description>"fAccuracyMod"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fAccuracyMod</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9768</ID>
          <Description>"bEnableFireRateMod"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableFireRateMod</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>9769</ID>
              <Description>"fFireRateMod"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fFireRateMod</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9777</ID>
          <Description>"bEnableWeaponDamageMod"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableWeaponDamageMod</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>9778</ID>
              <Description>"fWeaponDamageMod"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fWeaponDamageMod</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9787</ID>
          <Description>"bEnableWalkSpeedLimitMod"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableWalkSpeedLimitMod</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>9788</ID>
              <Description>"fWalkSpeedLimitMod"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fWalkSpeedLimitMod</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9791</ID>
          <Description>"bEnableJumpHeightMod"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableJumpHeightMod</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>9792</ID>
              <Description>"fJumpHeightMod"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fJumpHeightMod</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>GetIndex</Name>
      <Address>0195F370</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SetIndex</Name>
      <Address>0171FAE0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fWalkSpeedLimitMod</Name>
      <Address>0F6D0030</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
