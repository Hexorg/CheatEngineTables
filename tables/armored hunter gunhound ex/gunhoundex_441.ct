<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>38</ID>
      <Description>"&gt;&gt; Scripts &lt;&lt;"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>FF00FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"God Mode"</Description>
          <LastState Activated="0"/>
          <Color>0071E1</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : GunHoundEx.exe
  Version: 
  Date   : 2015-08-14
  Author : wcz
}

[ENABLE]

aobscanmodule(Invulnerability,GunHoundEx.exe,8B 87 5C 01 00 00 85)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [edi+0000015C],00000020
  jmp return

Invulnerability:
  jmp code
  nop
return:
registersymbol(Invulnerability)

[DISABLE]

Invulnerability:
  db 8B 87 5C 01 00 00

unregistersymbol(Invulnerability)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GunHoundEx.exe"+1AE73

"GunHoundEx.exe"+1AE68: 5B                    -  pop ebx
"GunHoundEx.exe"+1AE69: C3                    -  ret 
"GunHoundEx.exe"+1AE6A: CC                    -  int 3 
"GunHoundEx.exe"+1AE6B: CC                    -  int 3 
"GunHoundEx.exe"+1AE6C: CC                    -  int 3 
"GunHoundEx.exe"+1AE6D: CC                    -  int 3 
"GunHoundEx.exe"+1AE6E: CC                    -  int 3 
"GunHoundEx.exe"+1AE6F: CC                    -  int 3 
"GunHoundEx.exe"+1AE70: 57                    -  push edi
"GunHoundEx.exe"+1AE71: 8B F9                 -  mov edi,ecx
// ---------- INJECTING HERE ----------
"GunHoundEx.exe"+1AE73: 8B 87 5C 01 00 00     -  mov eax,[edi+0000015C]
// ---------- DONE INJECTING  ----------
"GunHoundEx.exe"+1AE79: 85 C0                 -  test eax,eax
"GunHoundEx.exe"+1AE7B: 7E 15                 -  jle GunHoundEx.exe+1AE92
"GunHoundEx.exe"+1AE7D: 25 03 00 00 80        -  and eax,80000003
"GunHoundEx.exe"+1AE82: 79 05                 -  jns GunHoundEx.exe+1AE89
"GunHoundEx.exe"+1AE84: 48                    -  dec eax
"GunHoundEx.exe"+1AE85: 83 C8 FC              -  or eax,-04
"GunHoundEx.exe"+1AE88: 40                    -  inc eax
"GunHoundEx.exe"+1AE89: 83 F8 02              -  cmp eax,02
"GunHoundEx.exe"+1AE8C: 0F 8D A3 00 00 00     -  jnl GunHoundEx.exe+1AF35
"GunHoundEx.exe"+1AE92: 56                    -  push esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Inf. HP"</Description>
          <LastState Activated="0"/>
          <Color>00D9D9</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : GunHoundEx.exe
  Version: 
  Date   : 2015-08-14
  Author : wcz

}

[ENABLE]

aobscanmodule(HPAOB,GunHoundEx.exe,01 85 58 01 00 00)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebp+00000158],(int)10000
  jmp return

HPAOB:
  jmp code
  nop
return:
registersymbol(HPAOB)

[DISABLE]

HPAOB:
  db 01 85 58 01 00 00

unregistersymbol(HPAOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GunHoundEx.exe"+1F3F4

"GunHoundEx.exe"+1F3D7: 8B 8C 9D 7C 07 00 00              -  mov ecx,[ebp+ebx*4+0000077C]
"GunHoundEx.exe"+1F3DE: F7 D8                             -  neg eax
"GunHoundEx.exe"+1F3E0: 41                                -  inc ecx
"GunHoundEx.exe"+1F3E1: 03 C0                             -  add eax,eax
"GunHoundEx.exe"+1F3E3: 80 7C 24 10 00                    -  cmp byte ptr [esp+10],00
"GunHoundEx.exe"+1F3E8: 74 07                             -  je GunHoundEx.exe+1F3F1
"GunHoundEx.exe"+1F3EA: 03 C0                             -  add eax,eax
"GunHoundEx.exe"+1F3EC: C6 44 24 13 01                    -  mov byte ptr [esp+13],01
"GunHoundEx.exe"+1F3F1: 99                                -  cdq 
"GunHoundEx.exe"+1F3F2: F7 F9                             -  idiv ecx
// ---------- INJECTING HERE ----------
"GunHoundEx.exe"+1F3F4: 01 85 58 01 00 00                 -  add [ebp+00000158],eax
// ---------- DONE INJECTING  ----------
"GunHoundEx.exe"+1F3FA: 80 3D ED 7F 4D 21 00              -  cmp byte ptr [GunHoundEx.exe+20177FED],00
"GunHoundEx.exe"+1F401: 74 30                             -  je GunHoundEx.exe+1F433
"GunHoundEx.exe"+1F403: 6A 00                             -  push 00
"GunHoundEx.exe"+1F405: B8 26 00 00 00                    -  mov eax,00000026
"GunHoundEx.exe"+1F40A: E8 31 24 FE FF                    -  call GunHoundEx.exe+1840
"GunHoundEx.exe"+1F40F: DB 05 08 86 4C 01                 -  fild dword ptr [GunHoundEx.exe+168608]
"GunHoundEx.exe"+1F415: B8 26 00 00 00                    -  mov eax,00000026
"GunHoundEx.exe"+1F41A: DC 35 68 F2 45 01                 -  fdiv qword ptr [GunHoundEx.exe+FF268]
"GunHoundEx.exe"+1F420: D9 5C 24 28                       -  fstp dword ptr [esp+28]
"GunHoundEx.exe"+1F424: D9 44 24 28                       -  fld dword ptr [esp+28]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Inf. BG"</Description>
          <LastState Activated="0"/>
          <Color>DDDD00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : GunHoundEx.exe
  Version: 
  Date   : 2015-08-14
  Author : wcz

}

[ENABLE]

aobscanmodule(INJECT,GunHoundEx.exe,01 9E 74 01 00 00)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+00000174],00000000
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 01 9E 74 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GunHoundEx.exe"+1D77E

"GunHoundEx.exe"+1D752: 0F 84 F4 00 00 00              -  je GunHoundEx.exe+1D84C
"GunHoundEx.exe"+1D758: 8B 86 3C 01 00 00              -  mov eax,[esi+0000013C]
"GunHoundEx.exe"+1D75E: 88 58 60                       -  mov [eax+60],bl
"GunHoundEx.exe"+1D761: 89 58 64                       -  mov [eax+64],ebx
"GunHoundEx.exe"+1D764: 80 BE 80 01 00 00 00           -  cmp byte ptr [esi+00000180],00
"GunHoundEx.exe"+1D76B: 75 17                          -  jne GunHoundEx.exe+1D784
"GunHoundEx.exe"+1D76D: 80 BE C0 06 00 00 00           -  cmp byte ptr [esi+000006C0],00
"GunHoundEx.exe"+1D774: 74 08                          -  je GunHoundEx.exe+1D77E
"GunHoundEx.exe"+1D776: 01 AE 74 01 00 00              -  add [esi+00000174],ebp
"GunHoundEx.exe"+1D77C: EB 06                          -  jmp GunHoundEx.exe+1D784
// ---------- INJECTING HERE ----------
"GunHoundEx.exe"+1D77E: 01 9E 74 01 00 00              -  add [esi+00000174],ebx
// ---------- DONE INJECTING  ----------
"GunHoundEx.exe"+1D784: 39 8E 74 01 00 00              -  cmp [esi+00000174],ecx
"GunHoundEx.exe"+1D78A: 7C 0A                          -  jnge GunHoundEx.exe+1D796
"GunHoundEx.exe"+1D78C: C7 86 7C 01 00 00 14 00 00 00  -  mov [esi+0000017C],00000014
"GunHoundEx.exe"+1D796: BF 64 00 00 00                 -  mov edi,00000064
"GunHoundEx.exe"+1D79B: 39 BE 78 01 00 00              -  cmp [esi+00000178],edi
"GunHoundEx.exe"+1D7A1: 7F 26                          -  jg GunHoundEx.exe+1D7C9
"GunHoundEx.exe"+1D7A3: 8B 96 44 01 00 00              -  mov edx,[esi+00000144]
"GunHoundEx.exe"+1D7A9: E8 32 15 00 00                 -  call GunHoundEx.exe+1ECE0
"GunHoundEx.exe"+1D7AE: 83 86 78 01 00 00 0B           -  add dword ptr [esi+00000178],0B
"GunHoundEx.exe"+1D7B5: 39 BE 78 01 00 00              -  cmp [esi+00000178],edi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Inf. Timer ( Lock at 10Min )"</Description>
          <LastState Activated="0"/>
          <Color>00DF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : GunHoundEx.exe
  Version: 
  Date   : 2015-08-14
  Author : wcz

}

[ENABLE]

aobscanmodule(Timer,GunHoundEx.exe,89 88 58 01 00 00 C3 CC)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+00000158],(int)36000
  jmp return

Timer:
  jmp code
  nop
return:
registersymbol(Timer)

[DISABLE]

Timer:
  db 89 88 58 01 00 00

unregistersymbol(Timer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GunHoundEx.exe"+12A16

"GunHoundEx.exe"+129F8: 7D 09                 -  jnl GunHoundEx.exe+12A03
"GunHoundEx.exe"+129FA: 83 C1 02              -  add ecx,02
"GunHoundEx.exe"+129FD: 89 88 58 01 00 00     -  mov [eax+00000158],ecx
"GunHoundEx.exe"+12A03: C3                    -  ret 
"GunHoundEx.exe"+12A04: 83 F9 01              -  cmp ecx,01
"GunHoundEx.exe"+12A07: 75 E3                 -  jne GunHoundEx.exe+129EC
"GunHoundEx.exe"+12A09: 8B 88 58 01 00 00     -  mov ecx,[eax+00000158]
"GunHoundEx.exe"+12A0F: 85 C9                 -  test ecx,ecx
"GunHoundEx.exe"+12A11: 7E F0                 -  jle GunHoundEx.exe+12A03
"GunHoundEx.exe"+12A13: 83 C1 FE              -  add ecx,-02
// ---------- INJECTING HERE ----------
"GunHoundEx.exe"+12A16: 89 88 58 01 00 00     -  mov [eax+00000158],ecx
// ---------- DONE INJECTING  ----------
"GunHoundEx.exe"+12A1C: C3                    -  ret 
"GunHoundEx.exe"+12A1D: CC                    -  int 3 
"GunHoundEx.exe"+12A1E: CC                    -  int 3 
"GunHoundEx.exe"+12A1F: CC                    -  int 3 
"GunHoundEx.exe"+12A20: 56                    -  push esi
"GunHoundEx.exe"+12A21: 8B B0 04 03 00 00     -  mov esi,[eax+00000304]
"GunHoundEx.exe"+12A27: 8B 46 08              -  mov eax,[esi+08]
"GunHoundEx.exe"+12A2A: 57                    -  push edi
"GunHoundEx.exe"+12A2B: 33 FF                 -  xor edi,edi
"GunHoundEx.exe"+12A2D: 39 7E 04              -  cmp [esi+04],edi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"&gt;&gt; Ammo &lt;&lt;"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>FF00FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>30</ID>
              <Description>"Inf. MAIN.S"</Description>
              <LastState Activated="0"/>
              <Color>FF4242</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : GunHoundEx.exe
  Version: 
  Date   : 2015-08-14
  Author : wcz

}

[ENABLE]

aobscanmodule(INJECT,GunHoundEx.exe,83 80 94 05 00 00 FC)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+00000594],(int)100
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 83 80 94 05 00 00 FC

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GunHoundEx.exe"+20C10

"GunHoundEx.exe"+20BEE: 8B 87 40 01 00 00              -  mov eax,[edi+00000140]
"GunHoundEx.exe"+20BF4: D9 18                          -  fstp dword ptr [eax]
"GunHoundEx.exe"+20BF6: D9 EE                          -  fldz 
"GunHoundEx.exe"+20BF8: D9 58 04                       -  fstp dword ptr [eax+04]
"GunHoundEx.exe"+20BFB: D9 E8                          -  fld1 
"GunHoundEx.exe"+20BFD: D9 50 08                       -  fst dword ptr [eax+08]
"GunHoundEx.exe"+20C00: D9 58 0C                       -  fstp dword ptr [eax+0C]
"GunHoundEx.exe"+20C03: D9 05 A8 F3 1C 00              -  fld dword ptr [GunHoundEx.exe+FF3A8]
"GunHoundEx.exe"+20C09: D9 58 10                       -  fstp dword ptr [eax+10]
"GunHoundEx.exe"+20C0C: 8B 44 24 14                    -  mov eax,[esp+14]
// ---------- INJECTING HERE ----------
"GunHoundEx.exe"+20C10: 83 80 94 05 00 00 FC           -  add dword ptr [eax+00000594],-04
// ---------- DONE INJECTING  ----------
"GunHoundEx.exe"+20C17: 39 98 94 05 00 00              -  cmp [eax+00000594],ebx
"GunHoundEx.exe"+20C1D: 7F 10                          -  jg GunHoundEx.exe+20C2F
"GunHoundEx.exe"+20C1F: 89 98 94 05 00 00              -  mov [eax+00000594],ebx
"GunHoundEx.exe"+20C25: C7 80 8C 05 00 00 20 00 00 00  -  mov [eax+0000058C],00000020
"GunHoundEx.exe"+20C2F: 8B 88 94 05 00 00              -  mov ecx,[eax+00000594]
"GunHoundEx.exe"+20C35: 89 88 A0 05 00 00              -  mov [eax+000005A0],ecx
"GunHoundEx.exe"+20C3B: 5E                             -  pop esi
"GunHoundEx.exe"+20C3C: 5D                             -  pop ebp
"GunHoundEx.exe"+20C3D: 5B                             -  pop ebx
"GunHoundEx.exe"+20C3E: 83 C4 1C                       -  add esp,1C
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Inf. SUB.S 1"</Description>
              <LastState Activated="0"/>
              <Color>FF4242</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : GunHoundEx.exe
  Version: 
  Date   : 2015-08-14
  Author : wcz

}

[ENABLE]

aobscanmodule(INJECT,GunHoundEx.exe,FF 88 94 05 00 00 83)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //dec [eax+00000594]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 88 94 05 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GunHoundEx.exe"+21477

"GunHoundEx.exe"+21458: E8 13 4F 02 00                 -  call GunHoundEx.exe+46370
"GunHoundEx.exe"+2145D: 8B 0D BC 7E 24 20              -  mov ecx,[GunHoundEx.exe+20177EBC]
"GunHoundEx.exe"+21463: 8B 49 08                       -  mov ecx,[ecx+08]
"GunHoundEx.exe"+21466: 83 C4 0C                       -  add esp,0C
"GunHoundEx.exe"+21469: 50                             -  push eax
"GunHoundEx.exe"+2146A: 53                             -  push ebx
"GunHoundEx.exe"+2146B: 56                             -  push esi
"GunHoundEx.exe"+2146C: 6A 2F                          -  push 2F
"GunHoundEx.exe"+2146E: E8 2D C4 09 00                 -  call GunHoundEx.exe+BD8A0
"GunHoundEx.exe"+21473: 8B 44 24 18                    -  mov eax,[esp+18]
// ---------- INJECTING HERE ----------
"GunHoundEx.exe"+21477: FF 88 94 05 00 00              -  dec [eax+00000594]
// ---------- DONE INJECTING  ----------
"GunHoundEx.exe"+2147D: 83 B8 94 05 00 00 00           -  cmp dword ptr [eax+00000594],00
"GunHoundEx.exe"+21484: 7F 14                          -  jg GunHoundEx.exe+2149A
"GunHoundEx.exe"+21486: C7 80 94 05 00 00 00 00 00 00  -  mov [eax+00000594],00000000
"GunHoundEx.exe"+21490: C7 80 8C 05 00 00 60 00 00 00  -  mov [eax+0000058C],00000060
"GunHoundEx.exe"+2149A: 8B 90 94 05 00 00              -  mov edx,[eax+00000594]
"GunHoundEx.exe"+214A0: C7 80 90 05 00 00 08 00 00 00  -  mov [eax+00000590],00000008
"GunHoundEx.exe"+214AA: 89 90 A0 05 00 00              -  mov [eax+000005A0],edx
"GunHoundEx.exe"+214B0: 5F                             -  pop edi
"GunHoundEx.exe"+214B1: 5E                             -  pop esi
"GunHoundEx.exe"+214B2: 5D                             -  pop ebp
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"&gt;&gt; Player Structure &lt;&lt; (Pointers)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF00FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GunHoundEx.exe
  Version: 
  Date   : 2015-08-14
  Author : wcz

  Player Structure
}

[ENABLE]

aobscanmodule(INJECT,GunHoundEx.exe,8B 88 58 01 00 00 6B)
alloc(newmem,$1000)

label(code)
label(return)
globalalloc(pbase,4)

newmem:

code:
  mov [pbase],eax
  mov ecx,[eax+00000158]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 88 58 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GunHoundEx.exe"+48856

"GunHoundEx.exe"+4883D: CC                             -  int 3 
"GunHoundEx.exe"+4883E: CC                             -  int 3 
"GunHoundEx.exe"+4883F: CC                             -  int 3 
"GunHoundEx.exe"+48840: 80 BF A7 11 00 00 00           -  cmp byte ptr [edi+000011A7],00
"GunHoundEx.exe"+48847: 56                             -  push esi
"GunHoundEx.exe"+48848: 74 5D                          -  je GunHoundEx.exe+488A7
"GunHoundEx.exe"+4884A: A1 BC 7E 4D 21                 -  mov eax,[GunHoundEx.exe+20177EBC]
"GunHoundEx.exe"+4884F: 85 C0                          -  test eax,eax
"GunHoundEx.exe"+48851: 74 54                          -  je GunHoundEx.exe+488A7
"GunHoundEx.exe"+48853: 8B 40 38                       -  mov eax,[eax+38]
// ---------- INJECTING HERE ----------
"GunHoundEx.exe"+48856: 8B 88 58 01 00 00              -  mov ecx,[eax+00000158]
// ---------- DONE INJECTING  ----------
"GunHoundEx.exe"+4885C: 6B C9 64                       -  imul ecx,ecx,64
"GunHoundEx.exe"+4885F: B8 AD 8B DB 68                 -  mov eax,68DB8BAD
"GunHoundEx.exe"+48864: F7 E9                          -  imul ecx
"GunHoundEx.exe"+48866: C1 FA 0C                       -  sar edx,0C
"GunHoundEx.exe"+48869: 8B CA                          -  mov ecx,edx
"GunHoundEx.exe"+4886B: C1 E9 1F                       -  shr ecx,1F
"GunHoundEx.exe"+4886E: 03 CA                          -  add ecx,edx
"GunHoundEx.exe"+48870: 83 F9 1E                       -  cmp ecx,1E
"GunHoundEx.exe"+48873: 7D 32                          -  jnl GunHoundEx.exe+488A7
"GunHoundEx.exe"+48875: E8 06 7C FC FF                 -  call GunHoundEx.exe+10480
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Pbase"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>FF00FF</Color>
          <VariableType>Binary</VariableType>
          <BitStart>0</BitStart>
          <BitLength>1</BitLength>
          <ShowAsBinary>0</ShowAsBinary>
          <Address>pbase</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"HP (Full=10000)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>00D9D9</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pbase</Address>
          <Offsets>
            <Offset>158</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"BG (Full=0)"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>DDDD00</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pbase</Address>
          <Offsets>
            <Offset>174</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Invulnerability Timer"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>0071E1</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pbase</Address>
          <Offsets>
            <Offset>15C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Timer"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>00DF00</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>GunHoundEx.exe+1BD0CBD8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Scores"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>55FF55</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>GunHoundEx.exe+20177FDC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"&gt;&gt; Ammo &lt;&lt;"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>FF00FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>28</ID>
              <Description>"MAIN.S (Full=100)"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>FF4242</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pbase</Address>
              <Offsets>
                <Offset>594</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>31</ID>
              <Description>"SUB.S 1 (Full=2)"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>FF4242</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pbase</Address>
              <Offsets>
                <Offset>5EC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"SUB.S 2 (Full=4)"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>FF4242</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pbase</Address>
              <Offsets>
                <Offset>618</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
