<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Massive health with ATL+CTRL, weak unit with ALT+SHIFT"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.1
//26th October, 2011
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(weak_unit)
label(massive_health)
label(label1)
registersymbol(label1)
aobscan(aob1,D9 87 98 03 00 00 D8 B7 A0 03 00 00)

newmem: //this is allocated memory, you have read,write,execute access
pushfd
pushad
push 12
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode

massive_health:
pushad
push 11
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne weak_unit
mov [edi+00000398],(float)999999999
mov [edi+0000039C],(float)999999999
mov [edi+000003A0],(float)999999999

weak_unit:
pushad
push 10
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov [edi+00000398],(float)1

originalcode:
popfd
fld dword ptr [edi+00000398]

exit:
jmp returnhere

aob1:
label1:
jmp newmem
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
label1:
db D9 87 98 03 00 00
unregistersymbol(label1)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"God mode for red player"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.1
//26th October, 2011
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(label2)
registersymbol(label2)
aobscan(aob2,D9 87 98 03 00 00 D9 87)

newmem: //this is allocated memory, you have read,write,execute access
pushfd
push ebx
mov ebx,[edi+000003A8]
cmp ebx,0
je originalcode
cmp [ebx+48],2
jne originalcode
mov [edi+00000398],(float)999999999
mov [edi+0000039C],(float)999999999
mov [edi+000003A0],(float)999999999

originalcode:
pop ebx
popfd
fld dword ptr [edi+00000398]

exit:
jmp returnhere

aob2:
label2:
jmp newmem
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
label2:
db D9 87 98 03 00 00
unregistersymbol(label2)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"God mode for blue player"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.1
//26th October, 2011
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(label2)
registersymbol(label2)
aobscan(aob2,D9 87 98 03 00 00 D9 87)

newmem: //this is allocated memory, you have read,write,execute access
pushfd
push ebx
mov ebx,[edi+000003A8]
cmp ebx,0
je originalcode
cmp [ebx+48],3
jne originalcode
mov [edi+00000398],(float)999999999
mov [edi+0000039C],(float)999999999
mov [edi+000003A0],(float)999999999

originalcode:
pop ebx
popfd
fld dword ptr [edi+00000398]

exit:
jmp returnhere

aob2:
label2:
jmp newmem
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
label2:
db D9 87 98 03 00 00
unregistersymbol(label2)

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :fld dword ptr [edi+000003C0]</Description>
      <Address>6B8419B2</Address>
      <ModuleName>StrongholdBase.dll</ModuleName>
      <ModuleNameOffset>819B2</ModuleNameOffset>
      <Before>
        <Byte>8A</Byte>
        <Byte>DA</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>C0</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>C8</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [edi+000003C0]</Description>
      <Address>6B841605</Address>
      <ModuleName>StrongholdBase.dll</ModuleName>
      <ModuleNameOffset>81605</ModuleNameOffset>
      <Before>
        <Byte>F6</Byte>
        <Byte>C4</Byte>
        <Byte>41</Byte>
        <Byte>75</Byte>
        <Byte>0E</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>C0</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>B7</Byte>
        <Byte>C8</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
