<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>236</ID>
      <Description>"ignore ammo pouch"</Description>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(ammoPouchExistChkSetFlagAOB,re7.exe,75 **85 C0 0F 9F D0 48 8B 5C 24 ** 48 8B)
registersymbol(ammoPouchExistChkSetFlagAOB)

ammoPouchExistChkSetFlagAOB+4: //"re7.exe"+829FCDA:
db 90 B0 01

///*********************************///

aobscanmodule(ammoClipWriteOnReloadAOB,re7.exe,89 41 24 48 8B 43 50 48 39 78 18 ** ** ** ** ** ** 48)
registersymbol(ammoClipWriteOnReloadAOB)

alloc(newmem,2048,ammoClipWriteOnReloadAOB) //"re7.exe"+82A19B6)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,edx
je originalcode

//test r13,r13
//jnz @f
cmp r15,1
jne @f
cmp [rcx+24],eax
jl originalcode
inc eax
jmp originalcode

@@:
mov eax,edx

originalcode:
mov [rcx+24],eax
mov rax,[rbx+50]

exit:
jmp returnhere

///

ammoClipWriteOnReloadAOB: //"re7.exe"+82A19B6:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
ammoPouchExistChkSetFlagAOB+4: //"re7.exe"+829FCDA:
db 0F 9F D0

///*********************************///

dealloc(newmem)
ammoClipWriteOnReloadAOB: //"re7.exe"+82A19B6:
db 89 41 24 48 8B 43 50
//Alt: mov [rcx+24],eax
//Alt: mov rax,[rbx+50]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>238</ID>
      <Description>"Dark Byte's infinite items (modified)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"re7.exe"+8C473A6)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

pushfq
push rbx
mov rbx,[rdi+80]
cmp rbx,0
je end

cmp [rbx+20],#10
jne @f

cmp [rbx+24],0069004c  //Li
jne @f

cmp [rbx+28],00750071 //qu
jne @f

jmp dominitem

@@: //SpareKey - corrosive
cmp [rbx+20],#8
jne @f

cmp [rbx+24],00700053  //Sp
jne @f

cmp [rbx+28],00720061 //ar
jne @f

cmp [rbx+2c],004b0065 //eK
jne @f

jmp dominitem

@@: //CylinderKey - lockpick
cmp [rbx+20],#11
jne @f

cmp [rbx+24],00790043  //Cy
jne @f

cmp [rbx+28],0069006c //li
jne @f

cmp [rbx+2c],0064006e //nd
jne @f

jmp dominitem

@@: //SaveTape
cmp [rbx+20],#8
jne @f

cmp [rbx+24],00610053  //Sa
jne @f

cmp [rbx+28],00650076 //ve
jne @f

cmp [rbx+2c],00610054 //Ta
jne @f

jmp dominitem

@@:



jmp end

dominitem:
mov ebx,esi
sub ebx,eax
cmp ebx,1
jge end
xor eax,eax

/*
mov ebx,1
cmp esi,1
cmovl esi,ebx
*/

end:
pop rbx
popfq

originalcode:
sub esi,eax
mov [rdi+00000088],esi

exit:
jmp returnhere

"re7.exe"+8C473A6:
jmp newmem
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"re7.exe"+8C473A6:
sub esi,eax
mov [rdi+00000088],esi
//Alt: db 29 C6 89 B7 88 00 00 00
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>239</ID>
          <Description>"Corrosive, Lockpick, and Cassette tape"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>808080</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
