<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(healthmem,2048) //2kb should be enough
label(health)
registersymbol(health)
label(returnhere)
label(healthoriginal)
label(exit)
aobscan(AOBhealth,D1 FE E8 ** ** ** ** 0F 57 D2 F3 0F 2A 91 ** ** ** **)

healthmem: //this is allocated memory, you have read,write,execute access
mov [ecx+0000037C],C8

healthoriginal:
cvtsi2ss xmm2,[ecx+0000037C]

exit:
jmp returnhere

"AOBhealth"+A:
health:
jmp healthmem
db 90 90 90
returnhere:

[DISABLE]
dealloc(healthmem)
health:
cvtsi2ss xmm2,[ecx+0000037C]
unregistersymbol(health)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"Spammer / Junkbolt Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(ammomem,2048) //2kb should be enough
label(ammo1)
label(ammo2)
registersymbol(ammo1)
registersymbol(ammo2)
label(returnhere1)
label(returnhere2)
label(ammooriginal1)
label(ammooriginal2)
label(exit1)
label(exit2)
aobscan(AOBammo1,F3 0F 10 86 ** ** ** ** F3 0F 5C 40 ** F3 0F 11 86 ** ** ** ** ** ** F3 0F 10 80 ** ** ** **)
aobscan(AOBammo2,F3 0F 10 8E ** ** ** ** F3 0F 5C C8 F3 0F 11 8E ** ** ** ** F3 0F 10 86 ** ** ** **)

ammomem: //this is allocated memory, you have read,write,execute access

ammooriginal1:
mov [esi+00000C4C],(float)250

exit1:
jmp returnhere1

ammooriginal2:
mov [esi+00000C4C],(float)250

exit2:
jmp returnhere2

"AOBammo1"+D:
ammo1:
jmp ammooriginal1
db 90 90 90
returnhere1:

"AOBammo2"+C:
ammo2:
jmp ammooriginal2
db 90 90 90
returnhere2:

[DISABLE]
dealloc(ammomem)
ammo1:
movss [esi+00000C4C],xmm0
unregistersymbol(ammo1)
ammo2:
movss [esi+00000C4C],xmm1
unregistersymbol(ammo2)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"S-Pressen Energy"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(energymem,2048) //2kb should be enough
label(energy1)
label(energy2)
registersymbol(energy1)
registersymbol(energy2)
label(returnhere1)
label(returnhere2)
label(energyoriginal1)
label(energyoriginal2)
label(exit1)
label(exit2)
aobscan(AOBenergy,89 81 ** ** ** ** ** ** 03 F2 89 B1 ** ** ** ** 8B 81 ** ** ** **)

energymem: //this is allocated memory, you have read,write,execute access

energyoriginal1:
mov [ecx+0000025C],258

exit1:
jmp returnhere1

energyoriginal2:
mov [ecx+0000025C],258

exit2:
jmp returnhere2

"AOBenergy":
energy1:
jmp energyoriginal1
db 90
returnhere1:

"AOBenergy"+A:
energy2:
jmp energyoriginal2
db 90
returnhere2:

[DISABLE]
dealloc(energymem)
energy1:
mov [ecx+0000025C],eax
unregistersymbol(energy1)
energy2:
mov [ecx+0000025C],esi
unregistersymbol(energy2)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>health</Name>
      <Address>01B2F0BE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo1</Name>
      <Address>01CCE0E1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo2</Name>
      <Address>01CCE109</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>energy1</Name>
      <Address>01B1B7CB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>energy2</Name>
      <Address>01B1B7D5</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
