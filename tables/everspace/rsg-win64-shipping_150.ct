<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Activate All"</Description>
      <Options moActivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Unlimited Health"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//RSG-Win64-Shipping.UBTS_DetectNearestEnemyNative::TickNode+303
aobscanmodule(health,RSG-Win64-Shipping.exe,44 0F 2F 80 EC 00 00 00)
alloc(newmem,$1000,health)

label(code)
label(return)
label(health_ptr)

newmem:
  mov rcx,health_ptr
  mov [rcx],rax
code:
  comiss xmm8,[rax+000000EC]
  jmp return

health_ptr:
  dq 0

health:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(health)

//RSG-Win64-Shipping.UHealthComponent::TakeDamage+C7
aobscanmodule(damage,RSG-Win64-Shipping.exe,F3 0F 5C CF 0F 2F CE)
alloc(newmem2,$1000,damage)

label(code2)
label(return2)

newmem2:
  mov r8,health_ptr
  cmp [r8],rbx
  jne code2
  xorps xmm7,xmm7
code2:
  subss xmm1,xmm7
  comiss xmm1,xmm6
  jmp return2

damage:
  jmp newmem2
  nop
  nop
return2:
registersymbol(damage)

[DISABLE]
health:
  db 44 0F 2F 80 EC 00 00 00
unregistersymbol(health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+16FEA3

"RSG-Win64-Shipping.exe"+16FE7A: 38 08                    -  cmp [rax],cl
"RSG-Win64-Shipping.exe"+16FE7C: 0F 85 82 00 00 00        -  jne RSG-Win64-Shipping.exe+16FF04
"RSG-Win64-Shipping.exe"+16FE82: 48 8D 0D DF E2 D5 01     -  lea rcx,[RSG-Win64-Shipping.exe+1ECE168]
"RSG-Win64-Shipping.exe"+16FE89: E8 02 3E 09 00           -  call RSG-Win64-Shipping.exe+203C90
"RSG-Win64-Shipping.exe"+16FE8E: 4C 8B 03                 -  mov r8,[rbx]
"RSG-Win64-Shipping.exe"+16FE91: 48 8B D0                 -  mov rdx,rax
"RSG-Win64-Shipping.exe"+16FE94: 48 8B CB                 -  mov rcx,rbx
"RSG-Win64-Shipping.exe"+16FE97: 41 FF 90 78 05 00 00     -  call qword ptr [r8+00000578]
"RSG-Win64-Shipping.exe"+16FE9E: 48 85 C0                 -  test rax,rax
"RSG-Win64-Shipping.exe"+16FEA1: 74 0A                    -  je RSG-Win64-Shipping.exe+16FEAD
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+16FEA3: 44 0F 2F 80 EC 00 00 00  -  comiss xmm8,[rax+000000EC]
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+16FEAB: 73 57                    -  jae RSG-Win64-Shipping.exe+16FF04
"RSG-Win64-Shipping.exe"+16FEAD: 48 8D 0D B4 E2 D5 01     -  lea rcx,[RSG-Win64-Shipping.exe+1ECE168]
"RSG-Win64-Shipping.exe"+16FEB4: E8 37 3D 09 00           -  call RSG-Win64-Shipping.exe+203BF0
"RSG-Win64-Shipping.exe"+16FEB9: 4C 8B 03                 -  mov r8,[rbx]
"RSG-Win64-Shipping.exe"+16FEBC: 48 8B D0                 -  mov rdx,rax
"RSG-Win64-Shipping.exe"+16FEBF: 48 8B CB                 -  mov rcx,rbx
"RSG-Win64-Shipping.exe"+16FEC2: 41 FF 90 78 05 00 00     -  call qword ptr [r8+00000578]
"RSG-Win64-Shipping.exe"+16FEC9: 48 85 C0                 -  test rax,rax
"RSG-Win64-Shipping.exe"+16FECC: 74 09                    -  je RSG-Win64-Shipping.exe+16FED7
"RSG-Win64-Shipping.exe"+16FECE: 80 B8 22 01 00 00 00     -  cmp byte ptr [rax+00000122],00
}

damage:
  db F3 0F 5C CF 0F 2F CE
unregistersymbol(damage)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+16D577

"RSG-Win64-Shipping.exe"+16D53B: 44 38 A9 50 01 00 00     -  cmp [rcx+00000150],r13l
"RSG-Win64-Shipping.exe"+16D542: 74 13                    -  je RSG-Win64-Shipping.exe+16D557
"RSG-Win64-Shipping.exe"+16D544: 48 81 C1 30 01 00 00     -  add rcx,00000130
"RSG-Win64-Shipping.exe"+16D54B: E8 80 A8 07 00           -  call RSG-Win64-Shipping.exe+1E7DD0
"RSG-Win64-Shipping.exe"+16D550: 44 88 AB 50 01 00 00     -  mov [rbx+00000150],r13l
"RSG-Win64-Shipping.exe"+16D557: F3 0F 10 05 59 E4 D6 01  -  movss xmm0,[RSG-Win64-Shipping.exe+1EDB9B8]
"RSG-Win64-Shipping.exe"+16D55F: F3 0F 5C 83 3C 01 00 00  -  subss xmm0,[rbx+0000013C]
"RSG-Win64-Shipping.exe"+16D567: F3 0F 5F C6              -  maxss xmm0,xmm6
"RSG-Win64-Shipping.exe"+16D56B: F3 0F 59 F8              -  mulss xmm7,xmm0
"RSG-Win64-Shipping.exe"+16D56F: F3 0F 10 8B EC 00 00 00  -  movss xmm1,[rbx+000000EC]
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+16D577: F3 0F 5C CF              -  subss xmm1,xmm7
"RSG-Win64-Shipping.exe"+16D57B: 0F 2F CE                 -  comiss xmm1,xmm6
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+16D57E: F3 0F 11 8B EC 00 00 00  -  movss [rbx+000000EC],xmm1
"RSG-Win64-Shipping.exe"+16D586: 73 09                    -  jae RSG-Win64-Shipping.exe+16D591
"RSG-Win64-Shipping.exe"+16D588: 0F 57 0D 61 97 D5 01     -  xorps xmm1,[RSG-Win64-Shipping.exe+1EC6CF0]
"RSG-Win64-Shipping.exe"+16D58F: EB 03                    -  jmp RSG-Win64-Shipping.exe+16D594
"RSG-Win64-Shipping.exe"+16D591: 0F 28 CE                 -  movaps xmm1,xmm6
"RSG-Win64-Shipping.exe"+16D594: F3 41 0F 11 0C 24        -  movss [r12],xmm1
"RSG-Win64-Shipping.exe"+16D59A: 0F 28 C7                 -  movaps xmm0,xmm7
"RSG-Win64-Shipping.exe"+16D59D: F3 0F 5C C1              -  subss xmm0,xmm1
"RSG-Win64-Shipping.exe"+16D5A1: F3 0F 11 45 00           -  movss [rbp+00],xmm0
"RSG-Win64-Shipping.exe"+16D5A6: F3 0F 10 8B EC 00 00 00  -  movss xmm1,[rbx+000000EC]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Unlimited Energy"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//RSG-Win64-Shipping.UWeaponComponent::ConsumeEnergy+74
aobscanmodule(energy,RSG-Win64-Shipping.exe,F3 0F 59 CE F3 0F 59 8F 6C 02 00 00)
energy:
  db 0F 57 C9 90
registersymbol(energy)

[DISABLE]
energy:
  db F3 0F 59 CE
unregistersymbol(energy)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+1B7244

"RSG-Win64-Shipping.exe"+1B7210: 48 85 C0                 -  test rax,rax
"RSG-Win64-Shipping.exe"+1B7213: 74 49                    -  je RSG-Win64-Shipping.exe+1B725E
"RSG-Win64-Shipping.exe"+1B7215: 80 BF 80 02 00 00 00     -  cmp byte ptr [rdi+00000280],00
"RSG-Win64-Shipping.exe"+1B721C: 74 13                    -  je RSG-Win64-Shipping.exe+1B7231
"RSG-Win64-Shipping.exe"+1B721E: 48 8D 8F 60 02 00 00     -  lea rcx,[rdi+00000260]
"RSG-Win64-Shipping.exe"+1B7225: E8 A6 0B 03 00           -  call RSG-Win64-Shipping.exe+1E7DD0
"RSG-Win64-Shipping.exe"+1B722A: C6 87 80 02 00 00 00     -  mov byte ptr [rdi+00000280],00
"RSG-Win64-Shipping.exe"+1B7231: F3 0F 10 0D 7F 47 D2 01  -  movss xmm1,[RSG-Win64-Shipping.exe+1EDB9B8]
"RSG-Win64-Shipping.exe"+1B7239: 48 8B CE                 -  mov rcx,rsi
"RSG-Win64-Shipping.exe"+1B723C: F3 0F 5C 8F 34 03 00 00  -  subss xmm1,[rdi+00000334]
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+1B7244: F3 0F 59 CE              -  mulss xmm1,xmm6
"RSG-Win64-Shipping.exe"+1B7248: F3 0F 59 8F 6C 02 00 00  -  mulss xmm1,[rdi+0000026C]
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+1B7250: 0F 57 0D 99 FA D0 01     -  xorps xmm1,[RSG-Win64-Shipping.exe+1EC6CF0]
"RSG-Win64-Shipping.exe"+1B7257: E8 C4 CF F9 FF           -  call RSG-Win64-Shipping.exe+154220
"RSG-Win64-Shipping.exe"+1B725C: B0 01                    -  mov al,01
"RSG-Win64-Shipping.exe"+1B725E: 48 8B 5C 24 40           -  mov rbx,[rsp+40]
"RSG-Win64-Shipping.exe"+1B7263: 48 8B 74 24 48           -  mov rsi,[rsp+48]
"RSG-Win64-Shipping.exe"+1B7268: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"RSG-Win64-Shipping.exe"+1B726D: 48 83 C4 30              -  add rsp,30
"RSG-Win64-Shipping.exe"+1B7271: 5F                       -  pop rdi
"RSG-Win64-Shipping.exe"+1B7272: C3                       -  ret 
"RSG-Win64-Shipping.exe"+1B7273: CC                       -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Unlimited Ammo"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//RSG-Win64-Shipping.UWeaponComponent::ConsumeAmmo+53
aobscanmodule(ammo,RSG-Win64-Shipping.exe,FF 4C 29 08 48 8B CF)
ammo:
  db 90 90 90 90
registersymbol(ammo)

[DISABLE]
ammo:
  db FF 4C 29 08
unregistersymbol(ammo)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+1B7163

"RSG-Win64-Shipping.exe"+1B7141: 85 C0                 -  test eax,eax
"RSG-Win64-Shipping.exe"+1B7143: 78 6D                 -  js RSG-Win64-Shipping.exe+1B71B2
"RSG-Win64-Shipping.exe"+1B7145: 41 3B 74 3E 08        -  cmp esi,[r14+rdi+08]
"RSG-Win64-Shipping.exe"+1B714A: 7D 66                 -  jnl RSG-Win64-Shipping.exe+1B71B2
"RSG-Win64-Shipping.exe"+1B714C: 49 8B 0C 3E           -  mov rcx,[r14+rdi]
"RSG-Win64-Shipping.exe"+1B7150: 33 D2                 -  xor edx,edx
"RSG-Win64-Shipping.exe"+1B7152: 48 89 5C 24 40        -  mov [rsp+40],rbx
"RSG-Win64-Shipping.exe"+1B7157: 48 89 6C 24 48        -  mov [rsp+48],rbp
"RSG-Win64-Shipping.exe"+1B715C: 48 8B EE              -  mov rbp,rsi
"RSG-Win64-Shipping.exe"+1B715F: 48 C1 E5 05           -  shl rbp,05
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+1B7163: FF 4C 29 08           -  dec [rcx+rbp+08]
"RSG-Win64-Shipping.exe"+1B7167: 48 8B CF              -  mov rcx,rdi
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+1B716A: 48 8B 9F A8 00 00 00  -  mov rbx,[rdi+000000A8]
"RSG-Win64-Shipping.exe"+1B7171: E8 1A E4 6F 00        -  call RSG-Win64-Shipping.exe+8B5590
"RSG-Win64-Shipping.exe"+1B7176: 48 3B D8              -  cmp rbx,rax
"RSG-Win64-Shipping.exe"+1B7179: 48 8B 5C 24 40        -  mov rbx,[rsp+40]
"RSG-Win64-Shipping.exe"+1B717E: 75 0F                 -  jne RSG-Win64-Shipping.exe+1B718F
"RSG-Win64-Shipping.exe"+1B7180: 48 8B CF              -  mov rcx,rdi
"RSG-Win64-Shipping.exe"+1B7183: E8 C8 62 FD FF        -  call RSG-Win64-Shipping.exe+18D450
"RSG-Win64-Shipping.exe"+1B7188: C6 80 D9 02 00 00 01  -  mov byte ptr [rax+000002D9],01
"RSG-Win64-Shipping.exe"+1B718F: 49 8B 04 3E           -  mov rax,[r14+rdi]
"RSG-Win64-Shipping.exe"+1B7193: 83 7C 28 08 00        -  cmp dword ptr [rax+rbp+08],00
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Unlimited Consumables"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//RSG-Win64-Shipping.UConsumableComponent::UseActiveConsumable+4C9
aobscanmodule(consumable,RSG-Win64-Shipping.exe,FF 4C C8 08 48 8B 83 C8 00 00 00)
consumable:
  db 90 90 90 90
registersymbol(consumable)

[DISABLE]
consumable:
  db FF 4C C8 08
unregistersymbol(consumable)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+173B99

"RSG-Win64-Shipping.exe"+173B70: 41 FF C6                 -  inc r14d
"RSG-Win64-Shipping.exe"+173B73: 49 FF C4                 -  inc r12
"RSG-Win64-Shipping.exe"+173B76: 48 83 C7 10              -  add rdi,10
"RSG-Win64-Shipping.exe"+173B7A: 44 3B B3 D0 00 00 00     -  cmp r14d,[rbx+000000D0]
"RSG-Win64-Shipping.exe"+173B81: 0F 8C 69 FF FF FF        -  jl RSG-Win64-Shipping.exe+173AF0
"RSG-Win64-Shipping.exe"+173B87: 83 F8 FF                 -  cmp eax,-01
"RSG-Win64-Shipping.exe"+173B8A: 7E 4E                    -  jle RSG-Win64-Shipping.exe+173BDA
"RSG-Win64-Shipping.exe"+173B8C: 48 63 C8                 -  movsxd  rcx,eax
"RSG-Win64-Shipping.exe"+173B8F: 48 8B 83 C8 00 00 00     -  mov rax,[rbx+000000C8]
"RSG-Win64-Shipping.exe"+173B96: 48 03 C9                 -  add rcx,rcx
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+173B99: FF 4C C8 08              -  dec [rax+rcx*8+08]
"RSG-Win64-Shipping.exe"+173B9D: 48 8B 83 C8 00 00 00     -  mov rax,[rbx+000000C8]
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+173BA4: 83 7C C8 08 00           -  cmp dword ptr [rax+rcx*8+08],00
"RSG-Win64-Shipping.exe"+173BA9: 7F 2F                    -  jg RSG-Win64-Shipping.exe+173BDA
"RSG-Win64-Shipping.exe"+173BAB: 48 C7 04 C8 00 00 00 00  -  mov [rax+rcx*8],00000000
"RSG-Win64-Shipping.exe"+173BB3: 48 8B 83 C8 00 00 00     -  mov rax,[rbx+000000C8]
"RSG-Win64-Shipping.exe"+173BBA: C7 44 C8 08 00 00 00 00  -  mov [rax+rcx*8+08],00000000
"RSG-Win64-Shipping.exe"+173BC2: 48 8B CB                 -  mov rcx,rbx
"RSG-Win64-Shipping.exe"+173BC5: 48 8B 56 10              -  mov rdx,[rsi+10]
"RSG-Win64-Shipping.exe"+173BC9: E8 B2 B6 FE FF           -  call RSG-Win64-Shipping.exe+15F280
"RSG-Win64-Shipping.exe"+173BCE: 84 C0                    -  test al,al
"RSG-Win64-Shipping.exe"+173BD0: 75 08                    -  jne RSG-Win64-Shipping.exe+173BDA
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"Ignore Cooldowns"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(cooldown,RSG-Win64-Shipping.exe,75 05 BF 01 00 00 00 48)
cooldown:
  db 90 90
registersymbol(cooldown)

[DISABLE]
cooldown:
  db 75 05
unregistersymbol(cooldown)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+153E98

"RSG-Win64-Shipping.exe"+153E74: 76 12                    -  jna RSG-Win64-Shipping.exe+153E88
"RSG-Win64-Shipping.exe"+153E76: 32 C0                    -  xor al,al
"RSG-Win64-Shipping.exe"+153E78: 48 8B 7C 24 30           -  mov rdi,[rsp+30]
"RSG-Win64-Shipping.exe"+153E7D: 48 8B 5C 24 38           -  mov rbx,[rsp+38]
"RSG-Win64-Shipping.exe"+153E82: 48 83 C4 20              -  add rsp,20
"RSG-Win64-Shipping.exe"+153E86: 5E                       -  pop rsi
"RSG-Win64-Shipping.exe"+153E87: C3                       -  ret 
"RSG-Win64-Shipping.exe"+153E88: 0F 2E 83 0C 04 00 00     -  ucomiss xmm0,[rbx+0000040C]
"RSG-Win64-Shipping.exe"+153E8F: 75 0E                    -  jne RSG-Win64-Shipping.exe+153E9F
"RSG-Win64-Shipping.exe"+153E91: 0F 2E 83 08 04 00 00     -  ucomiss xmm0,[rbx+00000408]
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+153E98: 75 05                    -  jne RSG-Win64-Shipping.exe+153E9F
"RSG-Win64-Shipping.exe"+153E9A: BF 01 00 00 00           -  mov edi,00000001
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+153E9F: 48 8B 5C 24 38           -  mov rbx,[rsp+38]
"RSG-Win64-Shipping.exe"+153EA4: 40 0F B6 C7              -  movzx eax,dil
"RSG-Win64-Shipping.exe"+153EA8: 48 8B 7C 24 30           -  mov rdi,[rsp+30]
"RSG-Win64-Shipping.exe"+153EAD: 48 83 C4 20              -  add rsp,20
"RSG-Win64-Shipping.exe"+153EB1: 5E                       -  pop rsi
"RSG-Win64-Shipping.exe"+153EB2: C3                       -  ret 
"RSG-Win64-Shipping.exe"+153EB3: CC                       -  int 3 
"RSG-Win64-Shipping.exe"+153EB4: CC                       -  int 3 
"RSG-Win64-Shipping.exe"+153EB5: CC                       -  int 3 
"RSG-Win64-Shipping.exe"+153EB6: CC                       -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Maximum Fuel"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//RSG-Win64-Shipping.UGameplayLib::GetFuelRatio+91
aobscanmodule(fuel,RSG-Win64-Shipping.exe,66 0F 6E 86 F0 00 00 00)
alloc(newmem,$1000,fuel)

label(code)
label(return)

newmem:

code:
  movd xmm0,[rsi+000000F0]
  movd [rax+80],xmm0
  jmp return

fuel:
  jmp code
  nop
  nop
  nop
return:
registersymbol(fuel)

[DISABLE]
fuel:
  db 66 0F 6E 86 F0 00 00 00
unregistersymbol(fuel)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+18D3C1

"RSG-Win64-Shipping.exe"+18D390: E8 1B 67 07 00           -  call RSG-Win64-Shipping.exe+203AB0
"RSG-Win64-Shipping.exe"+18D395: 48 8B 4B 10              -  mov rcx,[rbx+10]
"RSG-Win64-Shipping.exe"+18D399: 8B 89 88 00 00 00        -  mov ecx,[rcx+00000088]
"RSG-Win64-Shipping.exe"+18D39F: 2B 88 88 00 00 00        -  sub ecx,[rax+00000088]
"RSG-Win64-Shipping.exe"+18D3A5: 3B 88 8C 00 00 00        -  cmp ecx,[rax+0000008C]
"RSG-Win64-Shipping.exe"+18D3AB: 77 49                    -  ja RSG-Win64-Shipping.exe+18D3F6
"RSG-Win64-Shipping.exe"+18D3AD: 48 8B 83 F0 00 00 00     -  mov rax,[rbx+000000F0]
"RSG-Win64-Shipping.exe"+18D3B4: 48 85 C0                 -  test rax,rax
"RSG-Win64-Shipping.exe"+18D3B7: 74 3D                    -  je RSG-Win64-Shipping.exe+18D3F6
"RSG-Win64-Shipping.exe"+18D3B9: 66 0F 6E 88 80 00 00 00  -  movd xmm1,[rax+00000080]
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+18D3C1: 66 0F 6E 86 F0 00 00 00  -  movd xmm0,[rsi+000000F0]
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+18D3C9: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"RSG-Win64-Shipping.exe"+18D3CC: 0F 5B C9                 -  cvtdq2ps xmm1,xmm1
"RSG-Win64-Shipping.exe"+18D3CF: F3 0F 5E C8              -  divss xmm1,xmm0
"RSG-Win64-Shipping.exe"+18D3D3: 0F 57 C0                 -  xorps xmm0,xmm0
"RSG-Win64-Shipping.exe"+18D3D6: 0F 2F C8                 -  comiss xmm1,xmm0
"RSG-Win64-Shipping.exe"+18D3D9: 72 1E                    -  jb RSG-Win64-Shipping.exe+18D3F9
"RSG-Win64-Shipping.exe"+18D3DB: F3 0F 5D 0D D5 E5 D4 01  -  minss xmm1,[RSG-Win64-Shipping.exe+1EDB9B8]
"RSG-Win64-Shipping.exe"+18D3E3: 0F 28 C1                 -  movaps xmm0,xmm1
"RSG-Win64-Shipping.exe"+18D3E6: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"RSG-Win64-Shipping.exe"+18D3EB: 48 8B 74 24 38           -  mov rsi,[rsp+38]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Ignore Blueprint Requirements"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//RSG-Win64-Shipping.UBlueprintCollection::CanCraftBlueprint+60
aobscanmodule(blueprint,RSG-Win64-Shipping.exe,0F B6 C3 48 8B 9C 24 88 00 00 00 48 83 C4 60)
blueprint:
  db 83 C8 01
registersymbol(blueprint)

[DISABLE]
blueprint:
  db 0F B6 C3
unregistersymbol(blueprint)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+1B3B80

"RSG-Win64-Shipping.exe"+1B3B5F: 49 3B C9                 -  cmp rcx,r9
"RSG-Win64-Shipping.exe"+1B3B62: 7C EC                    -  jl RSG-Win64-Shipping.exe+1B3B50
"RSG-Win64-Shipping.exe"+1B3B64: 45 33 F6                 -  xor r14d,r14d
"RSG-Win64-Shipping.exe"+1B3B67: 32 DB                    -  xor bl,bl
"RSG-Win64-Shipping.exe"+1B3B69: 48 8B 74 24 78           -  mov rsi,[rsp+78]
"RSG-Win64-Shipping.exe"+1B3B6E: 48 8B 6C 24 70           -  mov rbp,[rsp+70]
"RSG-Win64-Shipping.exe"+1B3B73: 4D 85 F6                 -  test r14,r14
"RSG-Win64-Shipping.exe"+1B3B76: 74 08                    -  je RSG-Win64-Shipping.exe+1B3B80
"RSG-Win64-Shipping.exe"+1B3B78: 49 8B CE                 -  mov rcx,r14
"RSG-Win64-Shipping.exe"+1B3B7B: E8 40 BA 21 00           -  call RSG-Win64-Shipping.exe+3CF5C0
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+1B3B80: 0F B6 C3                 -  movzx eax,bl
"RSG-Win64-Shipping.exe"+1B3B83: 48 8B 9C 24 88 00 00 00  -  mov rbx,[rsp+00000088]
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+1B3B8B: 48 83 C4 60              -  add rsp,60
"RSG-Win64-Shipping.exe"+1B3B8F: 41 5E                    -  pop r14
"RSG-Win64-Shipping.exe"+1B3B91: C3                       -  ret 
"RSG-Win64-Shipping.exe"+1B3B92: 49 63 C0                 -  movsxd  rax,r8d
"RSG-Win64-Shipping.exe"+1B3B95: 45 33 F6                 -  xor r14d,r14d
"RSG-Win64-Shipping.exe"+1B3B98: 48 6B D8 38              -  imul rbx,rax,38
"RSG-Win64-Shipping.exe"+1B3B9C: 4C 89 74 24 40           -  mov [rsp+40],r14
"RSG-Win64-Shipping.exe"+1B3BA1: 49 03 DA                 -  add rbx,r10
"RSG-Win64-Shipping.exe"+1B3BA4: 0F B6 43 08              -  movzx eax,byte ptr [rbx+08]
"RSG-Win64-Shipping.exe"+1B3BA8: 8B 73 28                 -  mov esi,[rbx+28]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"Set Resources to 999"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(resource,RSG-Win64-Shipping.exe,41 8B 44 C1 08 48)
alloc(newmem,$1000,resource)

label(code)
label(return)

newmem:
  mov [r9+rax*8+08],#999
code:
  mov eax,[r9+rax*8+08]
  jmp return

resource:
  jmp newmem
return:
registersymbol(resource)

[DISABLE]
resource:
  db 41 8B 44 C1 08
unregistersymbol(resource)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+192E6F

"RSG-Win64-Shipping.exe"+192E52: 49 3B C8              -  cmp rcx,r8
"RSG-Win64-Shipping.exe"+192E55: 7C ED                 -  jl RSG-Win64-Shipping.exe+192E44
"RSG-Win64-Shipping.exe"+192E57: 33 C0                 -  xor eax,eax
"RSG-Win64-Shipping.exe"+192E59: 48 8B 5C 24 30        -  mov rbx,[rsp+30]
"RSG-Win64-Shipping.exe"+192E5E: 48 83 C4 20           -  add rsp,20
"RSG-Win64-Shipping.exe"+192E62: 5F                    -  pop rdi
"RSG-Win64-Shipping.exe"+192E63: C3                    -  ret 
"RSG-Win64-Shipping.exe"+192E64: 48 8B 5C 24 30        -  mov rbx,[rsp+30]
"RSG-Win64-Shipping.exe"+192E69: 48 63 C2              -  movsxd  rax,edx
"RSG-Win64-Shipping.exe"+192E6C: 48 03 C0              -  add rax,rax
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+192E6F: 41 8B 44 C1 08        -  mov eax,[r9+rax*8+08]
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+192E74: 48 83 C4 20           -  add rsp,20
"RSG-Win64-Shipping.exe"+192E78: 5F                    -  pop rdi
"RSG-Win64-Shipping.exe"+192E79: C3                    -  ret 
"RSG-Win64-Shipping.exe"+192E7A: CC                    -  int 3 
"RSG-Win64-Shipping.exe"+192E7B: CC                    -  int 3 
"RSG-Win64-Shipping.exe"+192E7C: CC                    -  int 3 
"RSG-Win64-Shipping.exe"+192E7D: CC                    -  int 3 
"RSG-Win64-Shipping.exe"+192E7E: CC                    -  int 3 
"RSG-Win64-Shipping.exe"+192E7F: CC                    -  int 3 
"RSG-Win64-Shipping.exe"+192E80: 40 53                 -  push rbx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"Unlock All Blueprints (In-Game Cheat)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//RSG-Win64-Shipping.UBlueprintCollection::ChaetUnlockAllBlueprints()
aobscanmodule(all_blueprints,RSG-Win64-Shipping.exe,33 C0 39 41 30 7E)
registersymbol(all_blueprints)

aobscanmodule(all_blueprints_start,RSG-Win64-Shipping.exe,48 89 5C 24 20 41 56 48 83 EC 60)
alloc(newmem,$1000,all_blueprints_start)

label(code)
label(return)
label(all_blueprints_done)

newmem:
  mov r8,all_blueprints_done
  cmp byte ptr [r8],1
  je code
  mov byte ptr [r8],1
  mov r8,all_blueprints
  call r8
code:
  mov [rsp+20],rbx
  jmp return

all_blueprints_done:
  db 0

all_blueprints_start:
  jmp newmem
return:
registersymbol(all_blueprints_start)

[DISABLE]
unregistersymbol(all_blueprints)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+1B4120

"RSG-Win64-Shipping.exe"+1B4116: CC                          -  int 3 
"RSG-Win64-Shipping.exe"+1B4117: CC                          -  int 3 
"RSG-Win64-Shipping.exe"+1B4118: CC                          -  int 3 
"RSG-Win64-Shipping.exe"+1B4119: CC                          -  int 3 
"RSG-Win64-Shipping.exe"+1B411A: CC                          -  int 3 
"RSG-Win64-Shipping.exe"+1B411B: CC                          -  int 3 
"RSG-Win64-Shipping.exe"+1B411C: CC                          -  int 3 
"RSG-Win64-Shipping.exe"+1B411D: CC                          -  int 3 
"RSG-Win64-Shipping.exe"+1B411E: CC                          -  int 3 
"RSG-Win64-Shipping.exe"+1B411F: CC                          -  int 3 
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+1B4120: 33 C0                       -  xor eax,eax
"RSG-Win64-Shipping.exe"+1B4122: 39 41 30                    -  cmp [rcx+30],eax
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+1B4125: 7E 1E                       -  jle RSG-Win64-Shipping.exe+1B4145
"RSG-Win64-Shipping.exe"+1B4127: 44 8B C0                    -  mov r8d,eax
"RSG-Win64-Shipping.exe"+1B412A: 66 0F 1F 44 00 00           -  nop [rax+rax+00]
"RSG-Win64-Shipping.exe"+1B4130: 48 8B 51 28                 -  mov rdx,[rcx+28]
"RSG-Win64-Shipping.exe"+1B4134: 4D 8D 40 38                 -  lea r8,[r8+38]
"RSG-Win64-Shipping.exe"+1B4138: FF C0                       -  inc eax
"RSG-Win64-Shipping.exe"+1B413A: 41 C6 44 10 F8 01           -  mov byte ptr [r8+rdx-08],01
"RSG-Win64-Shipping.exe"+1B4140: 3B 41 30                    -  cmp eax,[rcx+30]
"RSG-Win64-Shipping.exe"+1B4143: 7C EB                       -  jl RSG-Win64-Shipping.exe+1B4130
"RSG-Win64-Shipping.exe"+1B4145: C3                          -  ret 
}
all_blueprints_start:
  db 48 89 5C 24 20

unregistersymbol(all_blueprints_start)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+1B3B20

"RSG-Win64-Shipping.exe"+1B3B14: 49 8B E3                 -  mov rsp,r11
"RSG-Win64-Shipping.exe"+1B3B17: 5F                       -  pop rdi
"RSG-Win64-Shipping.exe"+1B3B18: C3                       -  ret 
"RSG-Win64-Shipping.exe"+1B3B19: CC                       -  int 3 
"RSG-Win64-Shipping.exe"+1B3B1A: CC                       -  int 3 
"RSG-Win64-Shipping.exe"+1B3B1B: CC                       -  int 3 
"RSG-Win64-Shipping.exe"+1B3B1C: CC                       -  int 3 
"RSG-Win64-Shipping.exe"+1B3B1D: CC                       -  int 3 
"RSG-Win64-Shipping.exe"+1B3B1E: CC                       -  int 3 
"RSG-Win64-Shipping.exe"+1B3B1F: CC                       -  int 3 
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+1B3B20: 48 89 5C 24 20           -  mov [rsp+20],rbx
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+1B3B25: 41 56                    -  push r14
"RSG-Win64-Shipping.exe"+1B3B27: 48 83 EC 60              -  sub rsp,60
"RSG-Win64-Shipping.exe"+1B3B2B: 48 63 41 30              -  movsxd  rax,dword ptr [rcx+30]
"RSG-Win64-Shipping.exe"+1B3B2F: 45 33 C0                 -  xor r8d,r8d
"RSG-Win64-Shipping.exe"+1B3B32: 48 89 6C 24 70           -  mov [rsp+70],rbp
"RSG-Win64-Shipping.exe"+1B3B37: 48 89 74 24 78           -  mov [rsp+78],rsi
"RSG-Win64-Shipping.exe"+1B3B3C: 85 C0                    -  test eax,eax
"RSG-Win64-Shipping.exe"+1B3B3E: 7E 24                    -  jle RSG-Win64-Shipping.exe+1B3B64
"RSG-Win64-Shipping.exe"+1B3B40: 4C 8B 51 28              -  mov r10,[rcx+28]
"RSG-Win64-Shipping.exe"+1B3B44: 4C 8B C8                 -  mov r9,rax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Unlimited Shields (enemy too)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//RSG-Win64-Shipping.UShieldComponent::TakeDamage+94
aobscanmodule(shield,RSG-Win64-Shipping.exe,F3 0F 5C CE 0F 2F CF)
shield:
  db 90 90 90 90
registersymbol(shield)

[DISABLE]
shield:
  db F3 0F 5C CE
unregistersymbol(shield)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+16D7E4

"RSG-Win64-Shipping.exe"+16D7A7: 48 8D 8B B0 01 00 00        -  lea rcx,[rbx+000001B0]
"RSG-Win64-Shipping.exe"+16D7AE: E8 1D A6 07 00              -  call RSG-Win64-Shipping.exe+1E7DD0
"RSG-Win64-Shipping.exe"+16D7B3: C6 83 D0 01 00 00 00        -  mov byte ptr [rbx+000001D0],00
"RSG-Win64-Shipping.exe"+16D7BA: F3 44 0F 10 8B C8 00 00 00  -  movss xmm9,[rbx+000000C8]
"RSG-Win64-Shipping.exe"+16D7C3: F3 0F 10 05 ED E1 D6 01     -  movss xmm0,[RSG-Win64-Shipping.exe+1EDB9B8]
"RSG-Win64-Shipping.exe"+16D7CB: 41 0F 28 C9                 -  movaps xmm1,xmm9
"RSG-Win64-Shipping.exe"+16D7CF: F3 0F 5C 83 BC 01 00 00     -  subss xmm0,[rbx+000001BC]
"RSG-Win64-Shipping.exe"+16D7D7: 48 8B 7C 24 70              -  mov rdi,[rsp+70]
"RSG-Win64-Shipping.exe"+16D7DC: F3 0F 5F C7                 -  maxss xmm0,xmm7
"RSG-Win64-Shipping.exe"+16D7E0: F3 0F 59 F0                 -  mulss xmm6,xmm0
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+16D7E4: F3 0F 5C CE                 -  subss xmm1,xmm6
"RSG-Win64-Shipping.exe"+16D7E8: 0F 2F CF                    -  comiss xmm1,xmm7
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+16D7EB: F3 0F 11 8B C8 00 00 00     -  movss [rbx+000000C8],xmm1
"RSG-Win64-Shipping.exe"+16D7F3: 73 09                       -  jae RSG-Win64-Shipping.exe+16D7FE
"RSG-Win64-Shipping.exe"+16D7F5: 0F 57 0D F4 94 D5 01        -  xorps xmm1,[RSG-Win64-Shipping.exe+1EC6CF0]
"RSG-Win64-Shipping.exe"+16D7FC: EB 03                       -  jmp RSG-Win64-Shipping.exe+16D801
"RSG-Win64-Shipping.exe"+16D7FE: 0F 28 CF                    -  movaps xmm1,xmm7
"RSG-Win64-Shipping.exe"+16D801: 48 8B 84 24 A0 00 00 00     -  mov rax,[rsp+000000A0]
"RSG-Win64-Shipping.exe"+16D809: 0F 28 C6                    -  movaps xmm0,xmm6
"RSG-Win64-Shipping.exe"+16D80C: F3 0F 5C C1                 -  subss xmm0,xmm1
"RSG-Win64-Shipping.exe"+16D810: 48 8B CB                    -  mov rcx,rbx
"RSG-Win64-Shipping.exe"+16D813: F3 0F 11 08                 -  movss [rax],xmm1
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Ignore This"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Set Status Bars to 1.0"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//RSG-Win64-Shipping.AHUDBase::FillMarkerData+81D
aobscanmodule(statusbar,RSG-Win64-Shipping.exe,0F 2F 87 C8 00 00 00 77)
alloc(newmem,$1000,statusbar)

label(code)
label(return)

newmem:

code:
  mov [rdi+000000C8],(float)1.0
  comiss xmm0,[rdi+000000C8]
  jmp return

statusbar:
  jmp code
  nop
  nop
return:
registersymbol(statusbar)

[DISABLE]
statusbar:
  db 0F 2F 87 C8 00 00 00
unregistersymbol(statusbar)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RSG-Win64-Shipping.exe"+1BC80D

"RSG-Win64-Shipping.exe"+1BC7EA: 0F 94 44 24 66           -  sete [rsp+66]
"RSG-Win64-Shipping.exe"+1BC7EF: E8 8C 72 F8 FF           -  call RSG-Win64-Shipping.exe+143A80
"RSG-Win64-Shipping.exe"+1BC7F4: 48 8B F8                 -  mov rdi,rax
"RSG-Win64-Shipping.exe"+1BC7F7: 48 85 C0                 -  test rax,rax
"RSG-Win64-Shipping.exe"+1BC7FA: 74 3A                    -  je RSG-Win64-Shipping.exe+1BC836
"RSG-Win64-Shipping.exe"+1BC7FC: 48 8B C8                 -  mov rcx,rax
"RSG-Win64-Shipping.exe"+1BC7FF: E8 FC F9 F9 FF           -  call RSG-Win64-Shipping.exe+15C200
"RSG-Win64-Shipping.exe"+1BC804: 41 0F 2F C2              -  comiss xmm0,xmm10
"RSG-Win64-Shipping.exe"+1BC808: 0F 28 F0                 -  movaps xmm6,xmm0
"RSG-Win64-Shipping.exe"+1BC80B: 76 2D                    -  jna RSG-Win64-Shipping.exe+1BC83A
// ---------- INJECTING HERE ----------
"RSG-Win64-Shipping.exe"+1BC80D: 0F 2F 87 C8 00 00 00     -  comiss xmm0,[rdi+000000C8]
// ---------- DONE INJECTING  ----------
"RSG-Win64-Shipping.exe"+1BC814: 77 07                    -  ja RSG-Win64-Shipping.exe+1BC81D
"RSG-Win64-Shipping.exe"+1BC816: 80 7C 24 66 00           -  cmp byte ptr [rsp+66],00
"RSG-Win64-Shipping.exe"+1BC81B: 74 1D                    -  je RSG-Win64-Shipping.exe+1BC83A
"RSG-Win64-Shipping.exe"+1BC81D: C6 44 24 65 01           -  mov byte ptr [rsp+65],01
"RSG-Win64-Shipping.exe"+1BC822: F3 0F 10 8F C8 00 00 00  -  movss xmm1,[rdi+000000C8]
"RSG-Win64-Shipping.exe"+1BC82A: F3 0F 5E C8              -  divss xmm1,xmm0
"RSG-Win64-Shipping.exe"+1BC82E: F3 0F 11 4C 24 60        -  movss [rsp+60],xmm1
"RSG-Win64-Shipping.exe"+1BC834: EB 04                    -  jmp RSG-Win64-Shipping.exe+1BC83A
"RSG-Win64-Shipping.exe"+1BC836: 41 0F 28 F2              -  movaps xmm6,xmm10
"RSG-Win64-Shipping.exe"+1BC83A: 49 8B CC                 -  mov rcx,r12
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>health</Name>
      <Address> 7FF6D7A0FEA3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>damage</Name>
      <Address> 7FF6D7A0D577</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>energy</Name>
      <Address> 7FF6D7A57244</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo</Name>
      <Address> 7FF6D7A57163</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cooldown</Name>
      <Address> 7FF6D79F3E98</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fuel</Name>
      <Address> 7FF6D7A2D3C1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>blueprint</Name>
      <Address> 7FF6D7A53B80</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>consumable</Name>
      <Address> 7FF6D7A13B99</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
