<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>39</ID>
      <Description>"Enable (Mono)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
if (LaunchMonoDataCollector()==0) then
  error('nope')
end
{$asm}

/*aobscan(healthReadAOB,D9 87 B0 00 00 00 DE C9)
registersymbol(healthReadAOB)
aobscan(manaReadAOB,D9 80 B4 00 00 00 D9 05 ** ** ** ** DE E9)
registersymbol(manaReadAOB)
aobscan(skillPtsReadAOB,8B 40 74 3B D8)
registersymbol(skillPtsReadAOB)
aobscan(skillPtsReadInSkillMenu,8B 45 08 8B 40 74 89)
registersymbol(skillPtsReadInSkillMenu)*/

label(pLucius)
registersymbol(pLucius)
label(pLuciusStats)
registersymbol(pLuciusStats)
label(fMinMana)
registersymbol(fMinMana)
label(fMaxDetection)
registersymbol(fMaxDetection)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(detectionchk)
label(detectionchkend)
label(manachk)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(detectionchk2)
label(detectionchkend2)
label(manachk2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pLucius],edi

detectionchk:
fld dword ptr [edi+130]
fld dword ptr [fMaxDetection]
fcomip st(0),st(1)
jae detectionchkend
fstp st(0)
fld dword ptr [fMaxDetection]

detectionchkend:
fstp dword ptr [edi+130]

manachk:
fld dword ptr [edi+b4]
fld dword ptr [fMinMana]
fcomip st(0),st(1)
jbe originalcode
fstp st(0)
fld dword ptr [fMinMana]
fst dword ptr [edi+b4]

originalcode:
//fld dword ptr [edi+000000B0]

exit:
jmp returnhere

///

newmem2:
mov [pLucius],eax

detectionchk2:
fld dword ptr [eax+130]
fld dword ptr [fMaxDetection]
fcomip st(0),st(1)
jae detectionchkend2
fstp st(0)
fld dword ptr [fMaxDetection]

detectionchkend2:
fstp dword ptr [eax+130]

manachk2:
fld dword ptr [eax+b4]
fld dword ptr [fMinMana]
fcomip st(0),st(1)
jbe originalcode2
fstp st(0)
fld dword ptr [fMinMana]
fst dword ptr [eax+b4]

originalcode2:
//fst dword ptr [edi+58]//
//fld dword ptr [eax+000000B4]

exit2:
jmp returnhere2

///

newmem6:
mov [pLuciusStats],eax

originalcode6:
mov eax,[eax+74]
cmp ebx,eax

exit6:
jmp returnhere6

///

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebp+08]//
mov [pLuciusStats],eax

originalcode11:
//mov eax,[ebp+08]
mov eax,[eax+74]

exit11:
jmp returnhere11

///
pLucius:
dd 0
pLuciusStats:
dd 0
fMinMana:
dd 0
fMaxDetection:
dd (float)10.0
///

Player:LevelsAndLifelines+375:
jmp newmem
nop
returnhere:

PlayerSkills:ManaMoving+160:
jmp newmem2
nop
returnhere2:

Player:LevelsAndLifelines+8bd:
jmp newmem6
returnhere6:

SkillEditor:SkillTreeWin+638:
jmp newmem11
nop
returnhere11:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Player:LevelsAndLifelines+375:
db D9 87 B0 00 00 00
//Alt: fld dword ptr [edi+000000B0]
PlayerSkills:ManaMoving+160:
db D9 80 B4 00 00 00
//Alt: fld dword ptr [eax+000000B4]
Player:LevelsAndLifelines+8bd:
db 8B 40 74 3B D8
//Alt: mov eax,[eax+74]
//Alt: cmp ebx,eax
SkillEditor:SkillTreeWin+638:
db 8B 45 08 8B 40 74
//Alt: mov eax,[ebp+08]
//Alt: mov eax,[eax+74]

unregistersymbol(pLucius)
unregistersymbol(pLuciusStats)
unregistersymbol(fMinMana)
unregistersymbol(fMaxDetection)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Inf. Mana"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
fMinMana:
dd (float)90.0

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
fMinMana:
dd 0
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Inf. Mana for Telekinetic Object Control (AOB)"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(manaWriteAOB,D9 98 B4 00 00 00 EB 13)
registersymbol(manaWriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fld dword ptr [fMinMana]
fcomip st(0),st(1)
jbe originalcode
fstp st(0)
fld dword ptr [fMinMana]
fst dword ptr [edi+18]

originalcode:
fstp dword ptr [eax+000000B4]

exit:
jmp returnhere

///

manaWriteAOB: //28D2F53C:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
manaWriteAOB: //28D2F53C:
db D9 98 B4 00 00 00
//Alt: fstp dword ptr [eax+000000B4]
unregistersymbol(manaWriteAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Min Mana"</Description>
              <LastState Value="??" Activated="0" RealAddress="089E00C7"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>fMinMana</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Ignore Skill Cooldown (Mono)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
if (LaunchMonoDataCollector()==0) then
  error('nope')
end
{$asm}

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov byte ptr [edi+6c],1
mov dword ptr [edi+70],(float)1.0

originalcode:
movzx eax,byte ptr [edi+6C]
test eax,eax

exit:
jmp returnhere

///

PlayerSkills:Skill+23:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
PlayerSkills:Skill+23:
db 0F B6 47 6C 85 C0
//Alt: movzx eax,byte ptr [edi+6C]
//Alt: test eax,eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Instant Cooldown (AOB)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(skillCooldownStartSetZeroAOB,8B 47 08 D9 EE D9 58 70 EB)
registersymbol(skillCooldownStartSetZeroAOB)

skillCooldownStartSetZeroAOB+3: //&lt;SkillRoutine&gt;c__Iterator82:MoveNext+5c6:
db D9 E8




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
skillCooldownStartSetZeroAOB+3: //&lt;SkillRoutine&gt;c__Iterator82:MoveNext+5c6:
db D9 EE
//Alt: fldz
unregistersymbol(skillCooldownStartSetZeroAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"No Busting"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
fMaxDetection:
dd (float)0.02

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
fMaxDetection:
dd (float)10.0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Health"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pLucius</Address>
          <Offsets>
            <Offset>B0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Mana"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pLucius</Address>
          <Offsets>
            <Offset>B4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Skill Points"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pLuciusStats</Address>
          <Offsets>
            <Offset>74</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Invisible"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>pLucius</Address>
          <Offsets>
            <Offset>DD</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Spotted Flag"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>pLucius</Address>
          <Offsets>
            <Offset>BC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Spotted Bar"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pLucius</Address>
          <Offsets>
            <Offset>140</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Detection Bar"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pLucius</Address>
          <Offsets>
            <Offset>130</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"?"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pLucius</Address>
          <Offsets>
            <Offset>B8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0EC809D8"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0EC809D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0EC942FC"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0EC942FC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fld dword ptr [eax+b4]
fld dword ptr [edi+14]
fcomip st(0),st(1)
jbe originalcode
fstp st(0)
fld1
fadd dword ptr [edi+14]
fst dword ptr [eax+b4]

originalcode:
//fld dword ptr [eax+000000B4]

exit:
jmp returnhere

28D2F50C:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
28D2F50C:
db D9 80 B4 00 00 00
//Alt: fld dword ptr [eax+000000B4]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
fld dword ptr [eax+b4]
fld dword ptr [edi+68]
fcomip st(0),st(1)
jbe originalcode2
fstp st(0)
fld1
fadd dword ptr [edi+68]
fst dword ptr [eax+b4]

originalcode2:
//fld dword ptr [eax+000000B4]

exit2:
jmp returnhere2

///

28D2CD5D:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
28D2CD5D:
db D9 80 B4 00 00 00
//Alt: fld dword ptr [eax+000000B4]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
fld dword ptr [eax+b4]
fld dword ptr [edi+68]
fcomip st(0),st(1)
jbe originalcode6
fstp st(0)
fld1
fadd dword ptr [edi+68]
fst dword ptr [eax+b4]

originalcode6:
fld dword ptr [eax+000000B4]

exit6:
jmp returnhere6

28D2CE2F:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
28D2CE2F:
db D9 80 B4 00 00 00
//Alt: fld dword ptr [eax+000000B4]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fstp st(0)
fldz

originalcode:
fstp dword ptr [edi+00000140]

exit:
jmp returnhere

///

28CCE727:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
28CCE727:
db D9 9F 40 01 00 00
//Alt: fstp dword ptr [edi+00000140]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
fstp st(0)
fldz

originalcode2:
fstp dword ptr [edi+00000130]

exit2:
jmp returnhere2

///

28CCE5D0:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
28CCE5D0:
db D9 9F 30 01 00 00
//Alt: fstp dword ptr [edi+00000130]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="06401CEC"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>06401CEC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(skillPtsReadAOB,8B 40 74 3B D8)
registersymbol(skillPtsReadAOB)

label(pLuciusStats)
registersymbol(pLuciusStats)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pLuciusStats],eax

originalcode6:
mov eax,[eax+74]
cmp ebx,eax

exit6:
jmp returnhere6

///
pLuciusStats:
dd 0
///

skillPtsReadAOB: //28CCD04D:
jmp newmem6
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
skillPtsReadAOB: //28CCD04D:
db 8B 40 74 3B D8
//Alt: mov eax,[eax+74]
//Alt: cmp ebx,eax
unregistersymbol(skillPtsReadAOB)

unregistersymbol(pLuciusStats)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(skillPtsReadInSkillMenu,8B 45 08 8B 40 74 89)
registersymbol(skillPtsReadInSkillMenu)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode11:
mov eax,[ebp+08]
mov eax,[eax+74]

exit11:
jmp returnhere11

///

skillPtsReadInSkillMenu: //28D28DB8:
jmp newmem11
nop
returnhere11:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
skillPtsReadInSkillMenu: //28D28DB8:
db 8B 45 08 8B 40 74
//Alt: mov eax,[ebp+08]
//Alt: mov eax,[eax+74]
unregistersymbol(skillPtsReadInSkillMenu)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"No Detection"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(detectionWrite1AOB,D9 9E 30 01 00 00 33 C0 8D)
registersymbol(detectionWrite1AOB)
aobscan(detectionWrite2AOB,D9 9F 30 01 00 00 8B 47 70)
registersymbol(detectionWrite2AOB)

label(fMaxDetection)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fld dword ptr [fMaxDetection]
fcomip st(0),st(1)
jae originalcode
fstp st(0)
fld dword ptr [fMaxDetection]

originalcode:
fstp dword ptr [esi+00000130]

exit:
jmp returnhere

///

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
fld dword ptr [fMaxDetection]
fcomip st(0),st(1)
jae originalcode2
fstp st(0)
fld dword ptr [fMaxDetection]

originalcode2:
fstp dword ptr [edi+00000130]

exit2:
jmp returnhere2

///
fMaxDetection:
dd (float)0.1
///

detectionWrite1AOB: //28D40515:
jmp newmem
nop
returnhere:

detectionWrite2AOB: //28CCE5D0:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
detectionWrite1AOB: //28D40515:
db D9 9E 30 01 00 00
//Alt: fstp dword ptr [esi+00000130]
unregistersymbol(detectionWrite1AOB)
detectionWrite2AOB: //28CCE5D0:
db D9 9F 30 01 00 00
//Alt: fstp dword ptr [edi+00000130]
unregistersymbol(detectionWrite2AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0EEE89D0"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0EEE89D0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthReadAOB,D9 87 B0 00 00 00 DE C9)
registersymbol(healthReadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fld dword ptr [edi+000000B0]

exit:
jmp returnhere

healthReadAOB: //0F4AD5BD:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthReadAOB: //0F4AD5BD:
db D9 87 B0 00 00 00
//Alt: fld dword ptr [edi+000000B0]
unregistersymbol(healthReadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>Skill:OpenSkill+2b</Address>
          <Offsets>
            <Offset>14</Offset>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>PlayerSkills:Skill+10</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
PlayerSkills:SkillManaDrain:
ret


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
PlayerSkills:SkillManaDrain:
db 55
//Alt: push ebp
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="06BE7EEC"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>06BE7EEC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="06BE7EF0"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>06BE7Ef0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
PlayerSkills:RemoveMana:
ret


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
PlayerSkills:RemoveMana:
db 55
//Alt: push ebp
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0FFDAB08"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0FFDAB08</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Enable (AOB)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthReadAOB,D9 87 B0 00 00 00 DE C9)
registersymbol(healthReadAOB)
aobscan(manaReadAOB,D9 80 B4 00 00 00 D9 05 ** ** ** ** DE E9)
registersymbol(manaReadAOB)
aobscan(skillPtsReadAOB,8B 40 74 3B D8)
registersymbol(skillPtsReadAOB)
/*aobscan(skillPtsReadInSkillMenu,8B 45 08 8B 40 74 89)
registersymbol(skillPtsReadInSkillMenu)*/

label(pLucius)
registersymbol(pLucius)
label(pLuciusStats)
registersymbol(pLuciusStats)
label(fMinMana)
registersymbol(fMinMana)
label(fMaxDetection)
registersymbol(fMaxDetection)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(detectionchk)
label(detectionchkend)
label(manachk)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(detectionchk2)
label(detectionchkend2)
label(manachk2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

/*label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)*/

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pLucius],edi

detectionchk:
fld dword ptr [edi+130]
fld dword ptr [fMaxDetection]
fcomip st(0),st(1)
jae detectionchkend
fstp st(0)
fld dword ptr [fMaxDetection]

detectionchkend:
fstp dword ptr [edi+130]

manachk:
fld dword ptr [edi+b4]
fld dword ptr [fMinMana]
fcomip st(0),st(1)
jbe originalcode
fstp st(0)
fld dword ptr [fMinMana]
fst dword ptr [edi+b4]

originalcode:
//fld dword ptr [edi+000000B0]

exit:
jmp returnhere

///

newmem2:
mov [pLucius],eax

detectionchk2:
fld dword ptr [eax+130]
fld dword ptr [fMaxDetection]
fcomip st(0),st(1)
jae detectionchkend2
fstp st(0)
fld dword ptr [fMaxDetection]

detectionchkend2:
fstp dword ptr [eax+130]

manachk2:
fld dword ptr [eax+b4]
fld dword ptr [fMinMana]
fcomip st(0),st(1)
jbe originalcode2
fstp st(0)
fld dword ptr [fMinMana]
fst dword ptr [eax+b4]

originalcode2:
//fst dword ptr [edi+58]//
//fld dword ptr [eax+000000B4]

exit2:
jmp returnhere2

///

newmem6:
mov [pLuciusStats],eax

originalcode6:
mov eax,[eax+74]
cmp ebx,eax

exit6:
jmp returnhere6

///

/*newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebp+08]//
mov [pLuciusStats],eax

originalcode11:
//mov eax,[ebp+08]
mov eax,[eax+74]

exit11:
jmp returnhere11*/

///
pLucius:
dd 0
pLuciusStats:
dd 0
fMinMana:
dd 0
fMaxDetection:
dd (float)10.0
///

healthReadAOB: //Player:LevelsAndLifelines+375:
jmp newmem
nop
returnhere:

manaReadAOB: //PlayerSkills:ManaMoving+160:
jmp newmem2
nop
returnhere2:

skillPtsReadAOB: //Player:LevelsAndLifelines+8bd:
jmp newmem6
returnhere6:

/*skillPtsReadInSkillMenu: //SkillEditor:SkillTreeWin+638:
jmp newmem11
nop
returnhere11:*/


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthReadAOB: //Player:LevelsAndLifelines+375:
db D9 87 B0 00 00 00
//Alt: fld dword ptr [edi+000000B0]
unregistersymbol(healthReadAOB)
manaReadAOB: //PlayerSkills:ManaMoving+160:
db D9 80 B4 00 00 00
//Alt: fld dword ptr [eax+000000B4]
unregistersymbol(manaReadAOB)
skillPtsReadAOB: //Player:LevelsAndLifelines+8bd:
db 8B 40 74 3B D8
//Alt: mov eax,[eax+74]
//Alt: cmp ebx,eax
unregistersymbol(skillPtsReadAOB)
/*skillPtsReadInSkillMenu: //SkillEditor:SkillTreeWin+638:
db 8B 45 08 8B 40 74
//Alt: mov eax,[ebp+08]
//Alt: mov eax,[eax+74]
unregistersymbol(skillPtsReadInSkillMenu)*/

unregistersymbol(pLucius)
unregistersymbol(pLuciusStats)
unregistersymbol(fMinMana)
unregistersymbol(fMaxDetection)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>manaReadOnUsingAOB</Name>
      <Address>1220623C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>skillPtsReadInSkillMenu</Name>
      <Address>1225DE48</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pLucius</Name>
      <Address>089E00BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pLuciusStats</Name>
      <Address>089E00C3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMinMana</Name>
      <Address>089E00C7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMaxDetection</Name>
      <Address>089E00CB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>manaWriteAOB</Name>
      <Address>104A22FC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>skillCooldownStartSetZeroAOB</Name>
      <Address>1049CD63</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5578405#5578405
</Comments>
</CheatTable>
