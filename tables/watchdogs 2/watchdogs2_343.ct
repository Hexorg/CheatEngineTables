<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>110</ID>
      <Description>"Unlimited Health"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(healthret,Disrupt_64.dll,48 8B 45 20 48 8D 55 38 48 8D 4D 30 48 89 45 38 01 78 20)

aobscanmodule(getplayerid,Disrupt_64.dll,C1 E8 04 A8 01 0F 85 AE 00 00 00 E8 * * * * 48 89 D9 48 89 C2 E8 * * * * 48 85 C0 74 35 48 89 C1)
alloc(newmem2,$1000,"Disrupt_64.dll"+63941DB)
label(return2)
registersymbol(PlayerHealthPtr)
label(PlayerHealthPtr)

newmem2:
shr eax,04
test al,01
jne @f
cmp [rsp+28],healthret
jne @f
mov [PlayerHealthPtr],rbx
@@:
  test al,01
  jmp return2
PlayerHealthPtr:
dd 0
getplayerid:
  jmp newmem2
return2:
registersymbol(getplayerid)





aobscanmodule(health,Disrupt_64.dll,F3 0F 10 41 18 C3 DF)
alloc(newmem,$1000,"Disrupt_64.dll"+4799F60)

label(code)
label(return)

newmem:

code:
cmp [PlayerHealthPtr],rbx
jne @f
fld [rcx+1c]
fstp [rcx+18]
@@:
  movss xmm0,[rcx+18]
  jmp return

health:
  jmp newmem
return:
registersymbol(health)


[DISABLE]

getplayerid:
  db C1 E8 04 A8 01
unregistersymbol(getplayerid)
unregistersymbol(PlayerHealthPtr)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "Disrupt_64.dll"+63941DB

"Disrupt_64.dll"+63941B5: 48 89 74 24 10                                -  mov [rsp+10],rsi
"Disrupt_64.dll"+63941BA: 57                                            -  push rdi
"Disrupt_64.dll"+63941BB: 48 83 EC 20                                   -  sub rsp,20
"Disrupt_64.dll"+63941BF: 48 8B 01                                      -  mov rax,[rcx]
"Disrupt_64.dll"+63941C2: 48 89 D6                                      -  mov rsi,rdx
"Disrupt_64.dll"+63941C5: 48 89 CF                                      -  mov rdi,rcx
"Disrupt_64.dll"+63941C8: 48 8B 58 10                                   -  mov rbx,[rax+10]
"Disrupt_64.dll"+63941CC: 48 85 DB                                      -  test rbx,rbx
"Disrupt_64.dll"+63941CF: 0F 84 BE 00 00 00                             -  je Disrupt_64.dll+6394293
"Disrupt_64.dll"+63941D5: 8B 83 A0 00 00 00                             -  mov eax,[rbx+000000A0]
// ---------- INJECTING HERE ----------
"Disrupt_64.dll"+63941DB: C1 E8 04                                      -  shr eax,04
"Disrupt_64.dll"+63941DE: A8 01                                         -  test al,01
// ---------- DONE INJECTING  ----------
"Disrupt_64.dll"+63941E0: 0F 85 AD 00 00 00                             -  jne Disrupt_64.dll+6394293
"Disrupt_64.dll"+63941E6: E8 71 CD 4B FE                                -  call Disrupt_64.dll+4850F5C
"Disrupt_64.dll"+63941EB: 48 89 D9                                      -  mov rcx,rbx
"Disrupt_64.dll"+63941EE: 48 89 C2                                      -  mov rdx,rax
"Disrupt_64.dll"+63941F1: E8 5A 3C B3 FF                                -  call Disrupt_64.dll+5EC7E50
"Disrupt_64.dll"+63941F6: 48 85 C0                                      -  test rax,rax
"Disrupt_64.dll"+63941F9: 74 37                                         -  je Disrupt_64.dll+6394232
"Disrupt_64.dll"+63941FB: 48 89 C1                                      -  mov rcx,rax
"Disrupt_64.dll"+63941FE: E8 2F ED 39 FF                                -  call Disrupt_64.dll+5732F32
"Disrupt_64.dll"+6394203: 48 89 C1                                      -  mov rcx,rax
}

health:
  db F3 0F 10 41 18

unregistersymbol(health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Disrupt_64.dll"+4799F60

"Disrupt_64.dll"+4799F50: 48 8D 05 E9 85 4C FF                       -  lea rax,[Disrupt_64.dll+3C62540]
"Disrupt_64.dll"+4799F57: C3                                         -  ret
"Disrupt_64.dll"+4799F58: CC                                         -  int 3
"Disrupt_64.dll"+4799F59: CC                                         -  int 3
"Disrupt_64.dll"+4799F5A: CC                                         -  int 3
"Disrupt_64.dll"+4799F5B: CC                                         -  int 3
"Disrupt_64.dll"+4799F5C: CC                                         -  int 3
"Disrupt_64.dll"+4799F5D: CC                                         -  int 3
"Disrupt_64.dll"+4799F5E: CC                                         -  int 3
"Disrupt_64.dll"+4799F5F: CC                                         -  int 3
// ---------- INJECTING HERE ----------
"Disrupt_64.dll"+4799F60: F3 0F 10 41 18                             -  movss xmm0,[rcx+18]
// ---------- DONE INJECTING  ----------
"Disrupt_64.dll"+4799F65: C3                                         -  ret
"Disrupt_64.dll"+4799F66: CC                                         -  int 3
"Disrupt_64.dll"+4799F67: CC                                         -  int 3
"Disrupt_64.dll"+4799F68: 48 89 D0                                   -  mov rax,rdx
"Disrupt_64.dll"+4799F6B: 8B 51 50                                   -  mov edx,[rcx+50]
"Disrupt_64.dll"+4799F6E: 4C 89 C1                                   -  mov rcx,r8
"Disrupt_64.dll"+4799F71: 48 01 C2                                   -  add rdx,rax
"Disrupt_64.dll"+4799F74: E9 0E 1B 87 01                             -  jmp Disrupt_64.dll+600BA87
"Disrupt_64.dll"+4799F79: CC                                         -  int 3
"Disrupt_64.dll"+4799F7A: CC                                         -  int 3
}

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>112</ID>
      <Description>"Unlimited Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Ammo,Disrupt_64.dll,89 43 18 E8 BB 29 00 00)

Ammo:
 db 90 90 90 90 90 90 90 90

registersymbol(Ammo)

[DISABLE]

Ammo:
  db 89 43 18 E8 BB 29 00 00

unregistersymbol(Ammo)
dealloc(Ammo)

{
// ORIGINAL CODE - INJECTION POINT: "Disrupt_64.dll"+535E84E

"Disrupt_64.dll"+535E82D: 74 27                 -  je Disrupt_64.dll+535E856
"Disrupt_64.dll"+535E82F: 48 8B 13              -  mov rdx,[rbx]
"Disrupt_64.dll"+535E832: 48 89 F9              -  mov rcx,rdi
"Disrupt_64.dll"+535E835: E8 DE A8 FB FF        -  call Disrupt_64.dll+5319118
"Disrupt_64.dll"+535E83A: 48 8B 13              -  mov rdx,[rbx]
"Disrupt_64.dll"+535E83D: 48 89 F9              -  mov rcx,rdi
"Disrupt_64.dll"+535E840: 89 43 0C              -  mov [rbx+0C],eax
"Disrupt_64.dll"+535E843: E8 80 AA FB FF        -  call Disrupt_64.dll+53192C8
"Disrupt_64.dll"+535E848: 48 89 DA              -  mov rdx,rbx
"Disrupt_64.dll"+535E84B: 48 89 F9              -  mov rcx,rdi
// ---------- INJECTING HERE ----------
"Disrupt_64.dll"+535E84E: 89 43 18              -  mov [rbx+18],eax
"Disrupt_64.dll"+535E851: E8 BB 29 00 00        -  call Disrupt_64.dll+5361211
// ---------- DONE INJECTING  ----------
"Disrupt_64.dll"+535E856: 48 8B 5C 24 30        -  mov rbx,[rsp+30]
"Disrupt_64.dll"+535E85B: 48 83 C4 20           -  add rsp,20
"Disrupt_64.dll"+535E85F: 5F                    -  pop rdi
"Disrupt_64.dll"+535E860: C3                    -  ret 
"Disrupt_64.dll"+535E861: CC                    -  int 3 
"Disrupt_64.dll"+535E862: CC                    -  int 3 
"Disrupt_64.dll"+535E863: 48 89 5C 24 08        -  mov [rsp+08],rbx
"Disrupt_64.dll"+535E868: 48 89 6C 24 10        -  mov [rsp+10],rbp
"Disrupt_64.dll"+535E86D: 48 89 74 24 18        -  mov [rsp+18],rsi
"Disrupt_64.dll"+535E872: 57                    -  push rdi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"No Reload"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : WatchDogs2.exe
  Version: 
  Date   : 2016-11-30
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(noreload,Disrupt_64.dll,FF 8B A8 00 00 00 85) // should be unique

noreload:
db 90 90 90 90 90 90

registersymbol(noreload)

[DISABLE]

noreload:
  db FF 8B A8 00 00 00

unregistersymbol(noreload)

{
// ORIGINAL CODE - INJECTION POINT: "Disrupt_64.dll"+5385668

"Disrupt_64.dll"+538563C: 48 89 D9                 -  mov rcx,rbx
"Disrupt_64.dll"+538563F: E8 FC 9D 00 00           -  call Disrupt_64.dll+538F440
"Disrupt_64.dll"+5385644: 48 8D 4D 8F              -  lea rcx,[rbp-71]
"Disrupt_64.dll"+5385648: E8 03 A0 FB FF           -  call Disrupt_64.dll+533F650
"Disrupt_64.dll"+538564D: FF 43 60                 -  inc [rbx+60]
"Disrupt_64.dll"+5385650: 80 BB AC 00 00 00 00     -  cmp byte ptr [rbx+000000AC],00
"Disrupt_64.dll"+5385657: 75 21                    -  jne Disrupt_64.dll+538567A
"Disrupt_64.dll"+5385659: 80 BB AD 00 00 00 00     -  cmp byte ptr [rbx+000000AD],00
"Disrupt_64.dll"+5385660: 74 18                    -  je Disrupt_64.dll+538567A
"Disrupt_64.dll"+5385662: 8B 83 A0 00 00 00        -  mov eax,[rbx+000000A0]
// ---------- INJECTING HERE ----------
"Disrupt_64.dll"+5385668: FF 8B A8 00 00 00        -  dec [rbx+000000A8]
// ---------- DONE INJECTING  ----------
"Disrupt_64.dll"+538566E: 85 C0                    -  test eax,eax
"Disrupt_64.dll"+5385670: 7E 08                    -  jle Disrupt_64.dll+538567A
"Disrupt_64.dll"+5385672: FF C8                    -  dec eax
"Disrupt_64.dll"+5385674: 89 83 A0 00 00 00        -  mov [rbx+000000A0],eax
"Disrupt_64.dll"+538567A: 48 8B 0F                 -  mov rcx,[rdi]
"Disrupt_64.dll"+538567D: FF 49 20                 -  dec [rcx+20]
"Disrupt_64.dll"+5385680: 75 10                    -  jne Disrupt_64.dll+5385692
"Disrupt_64.dll"+5385682: 48 8B 01                 -  mov rax,[rcx]
"Disrupt_64.dll"+5385685: BA 0F A2 47 C3           -  mov edx,C347A20F
"Disrupt_64.dll"+538568A: 8D 92 F2 5D B8 3C        -  lea edx,[rdx+3CB85DF2]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>114</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>113</ID>
      <Description>"Undetected"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]


aobscanmodule(stealth,Disrupt_64.dll,48 89 5C 24 10 48 89 6C 24 18 56 57 41 56 48 83 EC 20 83 64 24 40 00 48 83 79 48 00 48 89 CF) // should be unique
stealth:
ret

registersymbol(stealth)

[DISABLE]

stealth:
  db 48 89 5C 24 10

unregistersymbol(stealth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Disrupt_64.dll"+4D6CE50

"Disrupt_64.dll"+4D6CE34: 48 89 D9              -  mov rcx,rbx
"Disrupt_64.dll"+4D6CE37: E8 67 FE FF FF        -  call Disrupt_64.dll+4D6CCA3
"Disrupt_64.dll"+4D6CE3C: C6 43 21 00           -  mov byte ptr [rbx+21],00
"Disrupt_64.dll"+4D6CE40: 0F 28 74 24 20        -  movaps xmm6,[rsp+20]
"Disrupt_64.dll"+4D6CE45: 48 83 C4 30           -  add rsp,30
"Disrupt_64.dll"+4D6CE49: 5B                    -  pop rbx
"Disrupt_64.dll"+4D6CE4A: C3                    -  ret
"Disrupt_64.dll"+4D6CE4B: CC                    -  int 3
"Disrupt_64.dll"+4D6CE4C: CC                    -  int 3
"Disrupt_64.dll"+4D6CE4D: 0F 1F 00              -  nop [rax]
// ---------- INJECTING HERE ----------
"Disrupt_64.dll"+4D6CE50: 48 89 5C 24 10        -  mov [rsp+10],rbx
// ---------- DONE INJECTING  ----------
"Disrupt_64.dll"+4D6CE55: 48 89 6C 24 18        -  mov [rsp+18],rbp
"Disrupt_64.dll"+4D6CE5A: 56                    -  push rsi
"Disrupt_64.dll"+4D6CE5B: 57                    -  push rdi
"Disrupt_64.dll"+4D6CE5C: 41 56                 -  push r14
"Disrupt_64.dll"+4D6CE5E: 48 83 EC 20           -  sub rsp,20
"Disrupt_64.dll"+4D6CE62: 83 64 24 40 00        -  and dword ptr [rsp+40],00
"Disrupt_64.dll"+4D6CE67: 48 83 79 48 00        -  cmp qword ptr [rcx+48],00
"Disrupt_64.dll"+4D6CE6C: 48 89 CF              -  mov rdi,rcx
"Disrupt_64.dll"+4D6CE6F: 0F 84 44 01 00 00     -  je Disrupt_64.dll+4D6CFB9
"Disrupt_64.dll"+4D6CE75: 48 8B 01              -  mov rax,[rcx]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>107</ID>
      <Description>"Unlimited Battery"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : WatchDogs2.exe
  Version: 
  Date   : 2016-11-30
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(battery,Disrupt_64.dll,F3 0F 58 51 74 0F) // should be unique
alloc(newmem,$1000,"Disrupt_64.dll"+50CE85B)

label(code)
label(return)

newmem:
movss xmm2,[rcx+70]
movss [rcx+74], xmm2
code:
  addss xmm2,[rcx+74]
  jmp return

battery:
  jmp newmem
return:
registersymbol(battery)

[DISABLE]

battery:
  db F3 0F 58 51 74

unregistersymbol(battery)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Disrupt_64.dll"+50CE85B

"Disrupt_64.dll"+50CE838: 74 15                                         -  je Disrupt_64.dll+50CE84F
"Disrupt_64.dll"+50CE83A: F3 0F 10 51 70                                -  movss xmm2,[rcx+70]
"Disrupt_64.dll"+50CE83F: 0F 57 C0                                      -  xorps xmm0,xmm0
"Disrupt_64.dll"+50CE842: F3 48 0F 2A C0                                -  cvtsi2ss xmm0,rax
"Disrupt_64.dll"+50CE847: F3 0F 5E D0                                   -  divss xmm2,xmm0
"Disrupt_64.dll"+50CE84B: EB 05                                         -  jmp Disrupt_64.dll+50CE852
"Disrupt_64.dll"+50CE84D: 00 E5                                         -  add ch,ah
"Disrupt_64.dll"+50CE84F: 0F 57 D2                                      -  xorps xmm2,xmm2
"Disrupt_64.dll"+50CE852: F3 0F 59 D1                                   -  mulss xmm2,xmm1
"Disrupt_64.dll"+50CE856: F3 0F 5E 51 7C                                -  divss xmm2,[rcx+7C]
// ---------- INJECTING HERE ----------
"Disrupt_64.dll"+50CE85B: F3 0F 58 51 74                                -  addss xmm2,[rcx+74]
// ---------- DONE INJECTING  ----------
"Disrupt_64.dll"+50CE860: 0F 2F 51 70                                   -  comiss xmm2,[rcx+70]
"Disrupt_64.dll"+50CE864: 72 05                                         -  jb Disrupt_64.dll+50CE86B
"Disrupt_64.dll"+50CE866: F3 0F 10 51 70                                -  movss xmm2,[rcx+70]
"Disrupt_64.dll"+50CE86B: F3 0F 11 51 74                                -  movss [rcx+74],xmm2
"Disrupt_64.dll"+50CE870: E9 2B 48 FF FF                                -  jmp Disrupt_64.dll+50C30A0
"Disrupt_64.dll"+50CE875: CC                                            -  int 3 
"Disrupt_64.dll"+50CE876: 48 89 E0                                      -  mov rax,rsp
"Disrupt_64.dll"+50CE879: 48 89 58 08                                   -  mov [rax+08],rbx
"Disrupt_64.dll"+50CE87D: 48 89 68 10                                   -  mov [rax+10],rbp
"Disrupt_64.dll"+50CE881: 48 89 70 18                                   -  mov [rax+18],rsi
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>115</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>109</ID>
      <Description>"Unlimited Money"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : WatchDogs2.exe
  Version: 
  Date   : 2016-11-30
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(money,Disrupt_64.dll,4C 8B B4 F1 10 07 00 00) // should be unique
alloc(newmem,$1000,"Disrupt_64.dll"+563564F)

label(code)
label(return)

newmem:
mov [rcx+rsi*8+00000710], #1999999
code:
  mov r14,[rcx+rsi*8+00000710]
  jmp return

money:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(money)

[DISABLE]

money:
  db 4C 8B B4 F1 10 07 00 00

unregistersymbol(money)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Disrupt_64.dll"+563564F

"Disrupt_64.dll"+5635622: 48 83 EC 40              -  sub rsp,40
"Disrupt_64.dll"+5635626: 4C 89 C3                 -  mov rbx,r8
"Disrupt_64.dll"+5635629: 48 63 F2                 -  movsxd  rsi,edx
"Disrupt_64.dll"+563562C: 48 89 CF                 -  mov rdi,rcx
"Disrupt_64.dll"+563562F: 4D 85 C0                 -  test r8,r8
"Disrupt_64.dll"+5635632: 75 1B                    -  jne Disrupt_64.dll+563564F
"Disrupt_64.dll"+5635634: 44 38 84 24 90 00 00 00  -  cmp [rsp+00000090],r8l
"Disrupt_64.dll"+563563C: 0F 84 55 01 00 00        -  je Disrupt_64.dll+5635797
"Disrupt_64.dll"+5635642: 44 38 81 11 04 00 00     -  cmp [rcx+00000411],r8l
"Disrupt_64.dll"+5635649: 0F 85 48 01 00 00        -  jne Disrupt_64.dll+5635797
// ---------- INJECTING HERE ----------
"Disrupt_64.dll"+563564F: 4C 8B B4 F1 10 07 00 00  -  mov r14,[rcx+rsi*8+00000710]
// ---------- DONE INJECTING  ----------
"Disrupt_64.dll"+5635657: 49 39 DE                 -  cmp r14,rbx
"Disrupt_64.dll"+563565A: 0F 82 37 01 00 00        -  jb Disrupt_64.dll+5635797
"Disrupt_64.dll"+5635660: 80 BC 24 88 00 00 00 00  -  cmp byte ptr [rsp+00000088],00
"Disrupt_64.dll"+5635668: 0F 85 EE 00 00 00        -  jne Disrupt_64.dll+563575C
"Disrupt_64.dll"+563566E: 85 D2                    -  test edx,edx
"Disrupt_64.dll"+5635670: 0F 85 E6 00 00 00        -  jne Disrupt_64.dll+563575C
"Disrupt_64.dll"+5635676: 48 8B 81 30 04 00 00     -  mov rax,[rcx+00000430]
"Disrupt_64.dll"+563567D: 49 29 DE                 -  sub r14,rbx
"Disrupt_64.dll"+5635680: 8B 48 28                 -  mov ecx,[rax+28]
"Disrupt_64.dll"+5635683: 48 03 8F 48 07 00 00     -  add rcx,[rdi+00000748]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>116</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>114</ID>
      <Description>"Mega Followers"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat



aobscanmodule(followers,Disrupt_64.dll,4A 8B 94 F9 10 07 00 00) // should be unique
alloc(newmem,$1000,"Disrupt_64.dll"+5616556)

label(code)
label(return)

newmem:

code:
  mov rdx,[rcx+r15*8+00000710]
cmp r15,3
jne return

  push r8
  push 64
  fild [rsp]
  fimul [rsp+8]
  fistp [rsp]
  mov r8,[rsp]
  add rsp,10

  jmp return

followers:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(followers)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
followers:
  db 4A 8B 94 F9 10 07 00 00

unregistersymbol(followers)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Disrupt_64.dll"+5616556

"Disrupt_64.dll"+5616527: 48 8B BC 24 B8 00 00 00        -  mov rdi,[rsp+000000B8]
"Disrupt_64.dll"+561652F: 48 8B B4 24 B0 00 00 00        -  mov rsi,[rsp+000000B0]
"Disrupt_64.dll"+5616537: 4C 63 FA                       -  movsxd  r15,edx
"Disrupt_64.dll"+561653A: 4C 89 CD                       -  mov rbp,r9
"Disrupt_64.dll"+561653D: 4D 89 C6                       -  mov r14,r8
"Disrupt_64.dll"+5616540: 49 89 CC                       -  mov r12,rcx
"Disrupt_64.dll"+5616543: 41 83 FF 06                    -  cmp r15d,06
"Disrupt_64.dll"+5616547: 0F 87 BC 00 00 00              -  ja Disrupt_64.dll+5616609
"Disrupt_64.dll"+561654D: 4D 85 C0                       -  test r8,r8
"Disrupt_64.dll"+5616550: 0F 84 B3 00 00 00              -  je Disrupt_64.dll+5616609
// ---------- INJECTING HERE ----------
"Disrupt_64.dll"+5616556: 4A 8B 94 F9 10 07 00 00        -  mov rdx,[rcx+r15*8+00000710]
// ---------- DONE INJECTING  ----------
"Disrupt_64.dll"+561655E: 4C 01 C2                       -  add rdx,r8
"Disrupt_64.dll"+5616561: 49 B8 FF E3 0B 54 02 00 00 00  -  mov r8,00000002540BE3FF
"Disrupt_64.dll"+561656B: 4C 39 C2                       -  cmp rdx,r8
"Disrupt_64.dll"+561656E: 4C 89 C0                       -  mov rax,r8
"Disrupt_64.dll"+5616571: 48 0F 42 C2                    -  cmovb rax,rdx
"Disrupt_64.dll"+5616575: 4C 89 CA                       -  mov rdx,r9
"Disrupt_64.dll"+5616578: 4A 89 84 F9 10 07 00 00        -  mov [rcx+r15*8+00000710],rax
"Disrupt_64.dll"+5616580: 4A 8B 8C F9 48 07 00 00        -  mov rcx,[rcx+r15*8+00000748]
"Disrupt_64.dll"+5616588: 4C 01 F1                       -  add rcx,r14
"Disrupt_64.dll"+561658B: 4C 39 C1                       -  cmp rcx,r8
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>128</ID>
      <Description>"Research Points (1st reward)"</Description>
      <LastState Value="90" RealAddress="1403B5C64"/>
      <VariableType>4 Bytes</VariableType>
      <Address>Disrupt_64.dll+3CB0688</Address>
      <Offsets>
        <Offset>24</Offset>
        <Offset>48</Offset>
        <Offset>430</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>126</ID>
      <Description>"Find Research Points (backup)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : WatchDogs2.exe
  Version: 
  Date   : 2017-01-21
  Author : user

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FindRpBasePtr,Disrupt_64.dll,E8 4C D3 00 00 84) // should be unique
alloc(newmem,$1000,"Disrupt_64.dll"+560071F)

label(code)
label(return)
label(RpBasePtr)

newmem:

RpBasePtr:
  dq 0

code:
  mov [RpBasePtr], rcx
  call Disrupt_64.dll+560DA70
  jmp return

FindRpBasePtr:
  jmp code
return:
registersymbol(FindRpBasePtr)
registersymbol(RpBasePtr)

[DISABLE]

FindRpBasePtr:
  db E8 4C D3 00 00

unregistersymbol(RpBasePtr)
unregistersymbol(FindRpBasePtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Disrupt_64.dll"+560071F

"Disrupt_64.dll"+56006F6: 48 C1 EF 20           -  shr rdi,20
"Disrupt_64.dll"+56006FA: 0F BA F7 1F           -  btr edi,1F
"Disrupt_64.dll"+56006FE: 48 C1 E7 04           -  shl rdi,04
"Disrupt_64.dll"+5600702: 48 01 DF              -  add rdi,rbx
"Disrupt_64.dll"+5600705: EB 25                 -  jmp Disrupt_64.dll+560072C
"Disrupt_64.dll"+5600707: BC EE 63 BB 5C        -  mov esp,5CBB63EE
"Disrupt_64.dll"+560070C: 03 83 D3 07 31 44     -  add eax,[rbx+443107D3]
"Disrupt_64.dll"+5600712: 8B 43 08              -  mov eax,[rbx+08]
"Disrupt_64.dll"+5600715: 48 8B 13              -  mov rdx,[rbx]
"Disrupt_64.dll"+5600718: 48 8B 0D 69 FF 6A FE  -  mov rcx,[Disrupt_64.dll+3CB0688]
// ---------- INJECTING HERE ----------
"Disrupt_64.dll"+560071F: E8 4C D3 00 00        -  call Disrupt_64.dll+560DA70
// ---------- DONE INJECTING  ----------
"Disrupt_64.dll"+5600724: 84 C0                 -  test al,al
"Disrupt_64.dll"+5600726: 74 1B                 -  je Disrupt_64.dll+5600743
"Disrupt_64.dll"+5600728: 48 83 C3 10           -  add rbx,10
"Disrupt_64.dll"+560072C: 48 39 FB              -  cmp rbx,rdi
"Disrupt_64.dll"+560072F: 75 E0                 -  jne Disrupt_64.dll+5600711
"Disrupt_64.dll"+5600731: B0 01                 -  mov al,01
"Disrupt_64.dll"+5600733: 48 8B 5C 24 30        -  mov rbx,[rsp+30]
"Disrupt_64.dll"+5600738: 48 8B 74 24 38        -  mov rsi,[rsp+38]
"Disrupt_64.dll"+560073D: 48 83 C4 20           -  add rsp,20
"Disrupt_64.dll"+5600741: 5F                    -  pop rdi
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>127</ID>
          <Description>"First Game Reward RPs"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>RpBasePtr</Address>
          <Offsets>
            <Offset>24</Offset>
            <Offset>48</Offset>
            <Offset>430</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>playerstruct</Name>
      <Address>7FFFF6E70031</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PlayerHealthPtr</Name>
      <Address>7FFCA24E0030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>getplayerid</Name>
      <Address>7FFC9D4E658B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address>7FFC9B815270</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>followers</Name>
      <Address>7FFC9C74C685</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>money</Name>
      <Address> 7FECDFEC0BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SpentPoints</Name>
      <Address> 7FECDFD031E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>spent_ptr</Name>
      <Address>7FEC89C001C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FindRP</Name>
      <Address> 7FECDFD92C6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>battery</Name>
      <Address> 7FECDA6F604</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
