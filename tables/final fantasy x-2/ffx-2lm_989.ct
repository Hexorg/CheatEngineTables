<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Display Gil"</Description>
      <LastState Value="43342" RealAddress="00DD3CF8"/>
      <VariableType>4 Bytes</VariableType>
      <Address>"FFX-2.exe"+9F3CF8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Display Current HP"</Description>
      <LastState Value="224" RealAddress="00DD3CF0"/>
      <VariableType>4 Bytes</VariableType>
      <Address>"FFX-2.exe"+9F3CF0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Display Current MP"</Description>
      <LastState Value="211" RealAddress="00DD3CF4"/>
      <VariableType>4 Bytes</VariableType>
      <Address>"FFX-2.exe"+9F3CF4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Display Current Exp"</Description>
      <LastState Value="4294967295" RealAddress="00E3ADE8"/>
      <VariableType>4 Bytes</VariableType>
      <Address>"FFX-2.exe"+A5ADE8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Display Level"</Description>
      <LastState Value="99" RealAddress="00E3ADCC"/>
      <VariableType>4 Bytes</VariableType>
      <Address>"FFX-2.exe"+A5ADCC</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"GetPlayerBase (do any attack action)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-23
  Author : Andre

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MPFindBase,FFX-2.exe,89 7E 1C 48 21 46 1C) // should be unique
alloc(newmem,$1000)
alloc(player_base_pointer,4)
alloc(enemy_base_pointer,4)
alloc(infinite_MP,4)
alloc(data,24)


label(code)
label(update_player)
label(update_enemy)
label(exit)
label(return)


data:
 db 00
data+c:
 db 08
data+10:
 db FF
data+11:
 db FF
data+12:
 db FF
data+13:
 db FF


infinite_MP:
  db 0

newmem:

code:
  cmp [esi+8],0
  je update_player

update_enemy:
  mov [enemy_base_pointer],esi
  jmp exit

update_player:
  mov [player_base_pointer],esi
  cmp dword ptr[infinite_MP],0
  je exit
  mov edi,[esi+1c]

exit:
  mov [esi+1C],edi
  dec eax
  and [esi+1C],eax
  jmp return

MPFindBase:
  jmp code
  nop
  nop
return:
registersymbol(MPFindBase)
registersymbol(data)
registersymbol(infinite_MP)
registersymbol(player_base_pointer)
registersymbol(enemy_base_pointer)

[DISABLE]

MPFindBase:
  db 89 7E 1C 48 21 46 1C

unregistersymbol(data)
unregistersymbol(MPFindBase)
unregistersymbol(infinite_MP)
unregistersymbol(player_base_pointer)
unregistersymbol(enemy_base_pointer)
dealloc(newmem)
dealloc(data)
dealloc(infinite_MP)
dealloc(player_base_pointer)
dealloc(enemy_base_pointer)

{
// ORIGINAL CODE - INJECTION POINT: "FFX-2.exe"+201A7A

"FFX-2.exe"+201A62: 68 A8 CF 2B 01        -  push FFX-2.exe+83CFA8
"FFX-2.exe"+201A67: E8 64 93 E9 FF        -  call FFX-2.exe+9ADD0
"FFX-2.exe"+201A6C: 83 C4 0C              -  add esp,0C
"FFX-2.exe"+201A6F: 5F                    -  pop edi
"FFX-2.exe"+201A70: 5E                    -  pop esi
"FFX-2.exe"+201A71: 5D                    -  pop ebp
"FFX-2.exe"+201A72: C3                    -  ret 
"FFX-2.exe"+201A73: 33 C0                 -  xor eax,eax
"FFX-2.exe"+201A75: 85 FF                 -  test edi,edi
"FFX-2.exe"+201A77: 0F 98 C0              -  sets al
// ---------- INJECTING HERE ----------
"FFX-2.exe"+201A7A: 89 7E 1C              -  mov [esi+1C],edi
"FFX-2.exe"+201A7D: 48                    -  dec eax
"FFX-2.exe"+201A7E: 21 46 1C              -  and [esi+1C],eax
// ---------- DONE INJECTING  ----------
"FFX-2.exe"+201A81: 8B 46 20              -  mov eax,[esi+20]
"FFX-2.exe"+201A84: 39 46 1C              -  cmp [esi+1C],eax
"FFX-2.exe"+201A87: 7E 03                 -  jle FFX-2.exe+201A8C
"FFX-2.exe"+201A89: 89 46 1C              -  mov [esi+1C],eax
"FFX-2.exe"+201A8C: 5F                    -  pop edi
"FFX-2.exe"+201A8D: 5E                    -  pop esi
"FFX-2.exe"+201A8E: 5D                    -  pop ebp
"FFX-2.exe"+201A8F: C3                    -  ret 
"FFX-2.exe"+201A90: 55                    -  push ebp
"FFX-2.exe"+201A91: 8B EC                 -  mov ebp,esp
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>81</ID>
          <Description>"GetLevelsPointer (updates on exp change)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : FFX-2.exe
  Version:
  Date   : 2017-01-25
  Author : Andre

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GetLevelsPointer,FFX-2.exe,0F B7 42 02 83 C4 1C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)


newmem:

code:
  movzx eax,word ptr[edx]
  dec eax
  neg eax
  lea eax,[edx+eax*4]
  mov [data+14],eax
  movzx eax,word ptr [edx+02]
  add esp,1C
  jmp return

GetLevelsPointer:
  jmp code
  nop
  nop
return:
registersymbol(GetLevelsPointer)

[DISABLE]

GetLevelsPointer:
  db 0F B7 42 02 83 C4 1C

unregistersymbol(GetLevelsPointer)
dealloc(newmem)


{
// ORIGINAL CODE - INJECTION POINT: "FFX-2.exe"+1FE355

"FFX-2.exe"+1FE32C: E8 4F 56 00 00                 -  call FFX-2.exe+203980
"FFX-2.exe"+1FE331: 0F B7 48 02                    -  movzx ecx,word ptr [eax+02]
"FFX-2.exe"+1FE335: 51                             -  push ecx
"FFX-2.exe"+1FE336: FF B6 8C 00 00 00              -  push [esi+0000008C]
"FFX-2.exe"+1FE33C: 89 45 E0                       -  mov [ebp-20],eax
"FFX-2.exe"+1FE33F: FF 76 10                       -  push [esi+10]
"FFX-2.exe"+1FE342: 68 04 D5 C1 00                 -  push FFX-2.exe+83D504
"FFX-2.exe"+1FE347: E8 84 CA E9 FF                 -  call FFX-2.exe+9ADD0
"FFX-2.exe"+1FE34C: 8B 55 E0                       -  mov edx,[ebp-20]
"FFX-2.exe"+1FE34F: 8B 8E 8C 00 00 00              -  mov ecx,[esi+0000008C]
// ---------- INJECTING HERE ----------
"FFX-2.exe"+1FE355: 0F B7 42 02                    -  movzx eax,word ptr [edx+02]
"FFX-2.exe"+1FE359: 83 C4 1C                       -  add esp,1C
// ---------- DONE INJECTING  ----------
"FFX-2.exe"+1FE35C: 3B C8                          -  cmp ecx,eax
"FFX-2.exe"+1FE35E: 0F 8C F0 00 00 00              -  jl FFX-2.exe+1FE454
"FFX-2.exe"+1FE364: FF 46 10                       -  inc [esi+10]
"FFX-2.exe"+1FE367: 83 7E 10 63                    -  cmp dword ptr [esi+10],63
"FFX-2.exe"+1FE36B: 0F 8F DC 00 00 00              -  jg FFX-2.exe+1FE44D
"FFX-2.exe"+1FE371: 0F B7 42 02                    -  movzx eax,word ptr [edx+02]
"FFX-2.exe"+1FE375: 2B C8                          -  sub ecx,eax
"FFX-2.exe"+1FE377: 89 8E 8C 00 00 00              -  mov [esi+0000008C],ecx
"FFX-2.exe"+1FE37D: 83 FB 08                       -  cmp ebx,08
"FFX-2.exe"+1FE380: 7D 21                          -  jnl FFX-2.exe+1FE3A3
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>82</ID>
              <Description>"Jump by X Levels on next kill (SHIFT+\, Activate and deactivate to reuse, stays frozen on current level)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-23
  Author : Andre

  This script create a thread that sets level to certain point and jump by X Levels
  Default 8
}

[ENABLE]

alloc(newmem,$1000)

label(code)
label(setup)
label(loop)
label(loop_exit)
label(exit)
label(outtahere)


createthread(newmem)

newmem:
code:
  cmp dword ptr[data+8],-1
  je outtahere
  cmp dword ptr[data],0
  je setup
  mov esi,[player_base_pointer]
  mov eax,[data+4]
  mov [esi+10],eax
  jmp exit

setup:
  xor eax,eax
  mov ebx,[data+14]        //get levels pointer in ebx
  mov esi,[player_base_pointer]
  mov ecx,[esi+10]         //get current level to ecx
  mov [data+4],ecx         //put level to freeze on in data+4
  mov [data+10],ecx        //put level to freeze on in data+10 for updating
  mov edi,[data+c]         //put levels to up into edi
  dec edi                  //decrease levels by one else we'll overshoot by one
  lea edx,[ebx+ecx*4]      //load to edx the address of the current level in level heap
loop:
  cmp edi,0                //loop begins
  je loop_exit
  lea ebx,[edx+edi*4]    //load to edx the address of the exp required for current level
                           //plus levels to up, loop till back at current level
  movzx ecx,word ptr[ebx+2]
  add eax,ecx
  dec edi
  jmp loop
loop_exit:
  mov [data+8],eax
  mov [data],1
  jmp exit

exit:
  mov eax,[data+8]
  mov [esi+0000008C],eax
outtahere:
  pop eax                   // pop return address of this thread
  push 8000                 // MEM_RELEASE
  push 0                    // dwSize
  push newmem                 // lpAddress
  push eax                  // push return address of this thread
  jmp kernel32.VirtualFree  // jmp to VirtualFree
  // jmp instead of call so VirtualFree returns to kill this thread gracefully


[DISABLE]

{
// ORIGINAL CODE - INJECTION POINT: "FFX-2.exe"+1FE308

"FFX-2.exe"+1FE2DA: 81 BE 90 00 00 00 7F 96 98 00  -  cmp [esi+00000090],0098967F
"FFX-2.exe"+1FE2E4: 7E 36                          -  jle FFX-2.exe+1FE31C
"FFX-2.exe"+1FE2E6: C7 86 90 00 00 00 7F 96 98 00  -  mov [esi+00000090],0098967F
"FFX-2.exe"+1FE2F0: EB 2A                          -  jmp FFX-2.exe+1FE31C
"FFX-2.exe"+1FE2F2: DB 86 8C 00 00 00              -  fild dword ptr [esi+0000008C]
"FFX-2.exe"+1FE2F8: D9 5D E0                       -  fstp dword ptr [ebp-20]
"FFX-2.exe"+1FE2FB: D9 45 E0                       -  fld dword ptr [ebp-20]
"FFX-2.exe"+1FE2FE: D8 C1                          -  fadd st(0),st(1)
"FFX-2.exe"+1FE300: E8 CB FD 27 00                 -  call FFX-2.exe+47E0D0
"FFX-2.exe"+1FE305: DB 46 24                       -  fild dword ptr [esi+24]
// ---------- INJECTING HERE ----------
"FFX-2.exe"+1FE308: 89 86 8C 00 00 00              -  mov [esi+0000008C],eax
// ---------- DONE INJECTING  ----------
"FFX-2.exe"+1FE30E: D9 5D E0                       -  fstp dword ptr [ebp-20]
"FFX-2.exe"+1FE311: D8 45 E0                       -  fadd dword ptr [ebp-20]
"FFX-2.exe"+1FE314: E8 B7 FD 27 00                 -  call FFX-2.exe+47E0D0
"FFX-2.exe"+1FE319: 89 46 24                       -  mov [esi+24],eax
"FFX-2.exe"+1FE31C: 33 DB                          -  xor ebx,ebx
"FFX-2.exe"+1FE31E: BF 40 D7 14 02                 -  mov edi,FFX-2.exe+16CD740
"FFX-2.exe"+1FE323: 8D 45 D4                       -  lea eax,[ebp-2C]
"FFX-2.exe"+1FE326: 50                             -  push eax
"FFX-2.exe"+1FE327: FF 76 10                       -  push [esi+10]
"FFX-2.exe"+1FE32A: E9 D1 1C B6 01                 -  jmp 027E0000
}
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>16</Key>
                    <Key>220</Key>
                  </Keys>
                  <Description>Level Up X on Kill</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>84</ID>
              <Description>"Update Just Levels to Jump"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-23
  Author : Andre

  This script recalculates exp
}
[ENABLE]
data:
 db 00


[DISABLE]

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>83</ID>
              <Description>"Update Level to Freeze On And Levels to Jump"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-23
  Author : Andre

  This script creates a thread to update the level you freeze on
}
[ENABLE]
alloc(nextItem,256)

data:
 db 00

createthread(nextItem)

nextItem:
  mov eax,[data+10]
  mov ebx,[player_base_pointer]
  mov [ebx+10],eax
  pop eax                   // pop return address of this thread
  push 8000                 // MEM_RELEASE
  push 0                    // dwSize
  push nextItem                 // lpAddress
  push eax                  // push return address of this thread
  jmp kernel32.VirtualFree  // jmp to VirtualFree
  // jmp instead of call so VirtualFree returns to kill this thread gracefully


[DISABLE]

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>86</ID>
              <Description>"Level To Freeze On"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">4294967295:Not yet set
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>data+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>85</ID>
              <Description>"Levels To Jump"</Description>
              <DropDownList ReadOnly="1">1:
2:
3:
4:
5:
6:
7:
8:
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>data+c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>89</ID>
              <Description>"Debug"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>88</ID>
                  <Description>"Levels_pointer"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00000000: Not yet set
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>data+14</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Infinite MP"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-22
  Author : Andre

  This script makes Current MP never go down
}

[ENABLE]

infinite_MP:
  db 1

[DISABLE]

infinite_MP:
  db 0

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Player Flag"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0: Player

</DropDownList>
          <VariableType>4 Bytes</VariableType>
          <Address>player_base_pointer</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Player Stats"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>30</ID>
              <Description>"Gil"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>90</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>53</ID>
              <Description>"Cur HP"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>54</ID>
              <Description>"Max HP"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"Cur MP"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>52</ID>
              <Description>"Max MP"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>14</ID>
              <Description>"CurExp"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>20</ID>
              <Description>"CurExpInLevel"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>8C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>25</ID>
              <Description>"CurLevel"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>56</ID>
              <Description>"Atk"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>57</ID>
              <Description>"Def"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>2A</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>58</ID>
              <Description>"Evasion"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>59</ID>
              <Description>"Accuracy"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>2E</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"Magic"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>61</ID>
              <Description>"Magic Def"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>player_base_pointer</Address>
              <Offsets>
                <Offset>32</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Enemy Flag"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0: Player
4097:Sallet
4098:Armet
4099:Heavy Sallet
4100:Bicocette
4101:Barbuta
4103:Zurvan
4104:Varan
4105:Elder Zurvan
4108:White Fang
4109:Canis Major
4110:Wild Wolf
4111:Killer Hound
4114:Flan Azul
4115:Flan Blanco
4116:Flan Amarillo
4118:Flan Palido
4120:Gecko
4121:Agama
4122:Skink
4127:Peregrine
4130:Vespa
4131:Death Dauber
4132:Assassin Bee
4133:Aculeate
4136:Fly Eye
4137:Vertigo
4138:Grim Gaze
4139:Purpurea
4142:Shantak
4145:YSLS-99
4146:YSLS-Zero
4147:Nashorn
4149:Balivarha
4150:Lesser Drake
4151:Spine Drake
4152:Bolt Drake
4155:Malboro
4157:Gigas
4159:Hrimthurs
4160:King Takouba
4161:Takouba
4163:Behemoth
4165:Protochimera
4166:Rhyos
4167:Coeurl
4168:Queen Coeurl
4169:Machina Hunter
4171:Machina Soldier
4173:Scout Machina
4174:Guard Machina
4175:Assault Machina
4177:Tomb
4182:Iron Giant
4187:Ochu
4189:Bomb
4190:Detonator
4191:Volcano
4192:YAU-28
4193:YAU-71
4194:Cactuar?
4195:Cactuar
4196:Stalwart
4198:Bully Cap
4200:Mycotoxin
4202:Pairika
4203:Taromaiti
4205:Tonberry
4206:Mega Tonberry
4207:Creeper
4208:Hug Bug
4209:Hexapod
4210:King VERMIN!
4213:Boris
4214:Aranea
4215:Sahagin
4218:Ultima Weapon
4221:Pop Fry
4223:Protean Gel
4224:Amorphous Gel
4225:Unum
4226:Duo
4227:Tria
4228:Quattour
4230:Fractus
4234:Founder
</DropDownList>
          <VariableType>4 Bytes</VariableType>
          <Address>enemy_base_pointer</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"Enemy Stats"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>65</ID>
              <Description>"Cur HP"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"Max HP"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>67</ID>
              <Description>"Cur MP"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>68</ID>
              <Description>"Max MP"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>69</ID>
              <Description>"CurExp"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>70</ID>
              <Description>"CurExpInLevel"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>8C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>71</ID>
              <Description>"CurLevel"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>72</ID>
              <Description>"Atk"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>73</ID>
              <Description>"Def"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>2A</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>74</ID>
              <Description>"Evasion"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>75</ID>
              <Description>"Accuracy"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>2E</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>76</ID>
              <Description>"Magic"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>77</ID>
              <Description>"Magic Def"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>enemy_base_pointer</Address>
              <Offsets>
                <Offset>32</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"GetCurHP (make a change to current job HP)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-22
  Author : Andre

  This script makes Current HP never go down and probly never die.
}

[ENABLE]

aobscanmodule(CurrentHP,FFX-2.exe,89 7E 28 85 FF 79 09) // should be unique
alloc(newmem,$1000)
alloc(infinite_hp,4)
alloc(player_hp_pointer,4)

label(code)
label(exit)
label(return)

infinite_hp:
  db 0

newmem:

code:
  cmp dword ptr[infinite_hp],0
  je exit
  mov edi,[esi+28]
exit:
  mov [player_hp_pointer],esi
  mov [esi+28],edi
  test edi,edi
  jmp return

CurrentHP:
  jmp code
return:
registersymbol(CurrentHP)
registersymbol(player_hp_pointer)
registersymbol(infinite_hp)

[DISABLE]

CurrentHP:
  db 89 7E 28 85 FF

unregistersymbol(CurrentHP)
unregistersymbol(player_hp_pointer)
unregistersymbol(infinite_hp)
dealloc(newmem)
dealloc(infinite_hp)
dealloc(player_hp_pointer)


{
// ORIGINAL CODE - INJECTION POINT: "FFX-2.exe"+201917

"FFX-2.exe"+2018FC: 48                             -  dec eax
"FFX-2.exe"+2018FD: 74 34                          -  je FFX-2.exe+201933
"FFX-2.exe"+2018FF: 83 E8 04                       -  sub eax,04
"FFX-2.exe"+201902: 74 13                          -  je FFX-2.exe+201917
"FFX-2.exe"+201904: 51                             -  push ecx
"FFX-2.exe"+201905: FF 76 04                       -  push [esi+04]
"FFX-2.exe"+201908: 68 08 CF 2B 01                 -  push FFX-2.exe+83CF08
"FFX-2.exe"+20190D: E8 BE 94 E9 FF                 -  call FFX-2.exe+9ADD0
"FFX-2.exe"+201912: 83 C4 0C                       -  add esp,0C
"FFX-2.exe"+201915: EB 4C                          -  jmp FFX-2.exe+201963
// ---------- INJECTING HERE ----------
"FFX-2.exe"+201917: 89 7E 28                       -  mov [esi+28],edi
"FFX-2.exe"+20191A: 85 FF                          -  test edi,edi
// ---------- DONE INJECTING  ----------
"FFX-2.exe"+20191C: 79 09                          -  jns FFX-2.exe+201927
"FFX-2.exe"+20191E: C7 46 28 00 00 00 00           -  mov [esi+28],00000000
"FFX-2.exe"+201925: EB 3C                          -  jmp FFX-2.exe+201963
"FFX-2.exe"+201927: 8B 46 2C                       -  mov eax,[esi+2C]
"FFX-2.exe"+20192A: 3B F8                          -  cmp edi,eax
"FFX-2.exe"+20192C: 7E 35                          -  jle FFX-2.exe+201963
"FFX-2.exe"+20192E: 89 46 28                       -  mov [esi+28],eax
"FFX-2.exe"+201931: EB 30                          -  jmp FFX-2.exe+201963
"FFX-2.exe"+201933: 33 C0                          -  xor eax,eax
"FFX-2.exe"+201935: 85 FF                          -  test edi,edi
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>22</ID>
          <Description>"1st dressphere HP"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>player_hp_pointer</Address>
          <Offsets>
            <Offset>28</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Unchanging HP 1st dressphere, no death"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-22
  Author : Andre

  This script makes Current HP never go down and probly never die.
}

[ENABLE]

infinite_hp:
  db 1

[DISABLE]

infinite_hp:
  db 0

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Find Item Used (Some Items don't register)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-23
  Author : Andre

  This script sets an item on use to 99 quantity
}

[ENABLE]

aobscanmodule(ItemTo99,FFX-2.exe,FF 4B 20 B8 00 00 00 00 0f 98 c0 48) // should be unique
alloc(newmem,$1000)
alloc(item_pointer,4)

label(code)
label(return)

newmem:

code:
  mov [item_pointer],ebx
  dec [ebx+20]
  mov eax,00000000
  jmp return

ItemTo99:
  jmp code
  nop
  nop
  nop
return:
registersymbol(ItemTo99)
registersymbol(item_pointer)
[DISABLE]

ItemTo99:
  db FF 4B 20 B8 00 00 00 00

unregistersymbol(ItemTo99)
unregistersymbol(item_pointer)
dealloc(newmem)
dealloc(item_pointer)
{
// ORIGINAL CODE - INJECTION POINT: "FFX-2.exe"+2023AB

"FFX-2.exe"+202387: FF 73 08                       -  push [ebx+08]
"FFX-2.exe"+20238A: E8 41 11 00 00                 -  call FFX-2.exe+2034D0
"FFX-2.exe"+20238F: 83 C4 04                       -  add esp,04
"FFX-2.exe"+202392: FF 73 08                       -  push [ebx+08]
"FFX-2.exe"+202395: E8 E6 0D 00 00                 -  call FFX-2.exe+203180
"FFX-2.exe"+20239A: 83 C4 04                       -  add esp,04
"FFX-2.exe"+20239D: 83 F8 02                       -  cmp eax,02
"FFX-2.exe"+2023A0: 75 29                          -  jne FFX-2.exe+2023CB
"FFX-2.exe"+2023A2: 81 7B 08 27 20 00 00           -  cmp [ebx+08],00002027
"FFX-2.exe"+2023A9: 74 20                          -  je FFX-2.exe+2023CB
// ---------- INJECTING HERE ----------
"FFX-2.exe"+2023AB: FF 4B 20                       -  dec [ebx+20]
"FFX-2.exe"+2023AE: B8 00 00 00 00                 -  mov eax,00000000
// ---------- DONE INJECTING  ----------
"FFX-2.exe"+2023B3: 0F 98 C0                       -  sets al
"FFX-2.exe"+2023B6: 48                             -  dec eax
"FFX-2.exe"+2023B7: 23 43 20                       -  and eax,[ebx+20]
"FFX-2.exe"+2023BA: 50                             -  push eax
"FFX-2.exe"+2023BB: 68 78 D2 2B 01                 -  push FFX-2.exe+83D278
"FFX-2.exe"+2023C0: 89 43 20                       -  mov [ebx+20],eax
"FFX-2.exe"+2023C3: E8 08 8A E9 FF                 -  call FFX-2.exe+9ADD0
"FFX-2.exe"+2023C8: 83 C4 08                       -  add esp,08
"FFX-2.exe"+2023CB: 8B 4D FC                       -  mov ecx,[ebp-04]
"FFX-2.exe"+2023CE: 5F                             -  pop edi
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Find Next Item (Activate &amp; Deactivate to reuse)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-23
  Author : Andre

  This script moves to next item, uses a thread, probly not the most
  greatest way of doing it.
}


[ENABLE]
alloc(nextItem,256)

label(exit)

createthread(nextItem)

nextItem:
  mov eax,[item_pointer]
  cmp eax,0
  je exit
  mov eax,[eax]
  mov [item_pointer],eax
exit:
  pop eax                   // pop return address of this thread
  push 8000                 // MEM_RELEASE
  push 0                    // dwSize
  push nextItem                 // lpAddress
  push eax                  // push return address of this thread
  jmp kernel32.VirtualFree  // jmp to VirtualFree
  // jmp instead of call so VirtualFree returns to kill this thread gracefully


[DISABLE]

// if you dealloc here, thread will execute freed memory causing a fault

{
// ORIGINAL CODE - INJECTION POINT: "FFX-2.exe"+2023AB

"FFX-2.exe"+202387: FF 73 08                       -  push [ebx+08]
"FFX-2.exe"+20238A: E8 41 11 00 00                 -  call FFX-2.exe+2034D0
"FFX-2.exe"+20238F: 83 C4 04                       -  add esp,04
"FFX-2.exe"+202392: FF 73 08                       -  push [ebx+08]
"FFX-2.exe"+202395: E8 E6 0D 00 00                 -  call FFX-2.exe+203180
"FFX-2.exe"+20239A: 83 C4 04                       -  add esp,04
"FFX-2.exe"+20239D: 83 F8 02                       -  cmp eax,02
"FFX-2.exe"+2023A0: 75 29                          -  jne FFX-2.exe+2023CB
"FFX-2.exe"+2023A2: 81 7B 08 27 20 00 00           -  cmp [ebx+08],00002027
"FFX-2.exe"+2023A9: 74 20                          -  je FFX-2.exe+2023CB
// ---------- INJECTING HERE ----------
"FFX-2.exe"+2023AB: FF 4B 20                       -  dec [ebx+20]
"FFX-2.exe"+2023AE: B8 00 00 00 00                 -  mov eax,00000000
// ---------- DONE INJECTING  ----------
"FFX-2.exe"+2023B3: 0F 98 C0                       -  sets al
"FFX-2.exe"+2023B6: 48                             -  dec eax
"FFX-2.exe"+2023B7: 23 43 20                       -  and eax,[ebx+20]
"FFX-2.exe"+2023BA: 50                             -  push eax
"FFX-2.exe"+2023BB: 68 78 D2 2B 01                 -  push FFX-2.exe+83D278
"FFX-2.exe"+2023C0: 89 43 20                       -  mov [ebx+20],eax
"FFX-2.exe"+2023C3: E8 08 8A E9 FF                 -  call FFX-2.exe+9ADD0
"FFX-2.exe"+2023C8: 83 C4 08                       -  add esp,08
"FFX-2.exe"+2023CB: 8B 4D FC                       -  mov ecx,[ebp-04]
"FFX-2.exe"+2023CE: 5F                             -  pop edi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Next Item Address"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>item_pointer</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Item Type"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0000:=====Items=======
2001:Ether
2002:Turbo Ether
2003:Premiere Ether
2004:Elixir
2005:Antidote Drink
2006:Echo Nectar
2007:Vision Ale
2008:Viper Extract
2009:Dark Oil
200A:Silence Juice
200B:Esuna Salve
200C:Enhancing Potion
200D:Growth Tonic
200E:Evolutionary Water
200F:Weakening Poison
2010:Regressive Venom
2011:De-evolving Ooze
2012:Wind Droplet
2013:Yubimello
2014:Save Memo
2015:Fleeing Manual
2016:Restart Guide
2017:Tidying Up
2018:Shop Guide
2019:Dress Shop Guide
201B:Find Secret Rooms
201D:Selling Tips
201E:Curse Breaking
201F:The Seeing Book
2020:Remaking Basics
2021:The Dressmaker
2022:Copy Techniques
2025:Goon Bookmark
2026:Trap Evading Primer
2027:Notebook
2028:Dress Fusion Secrets
2029:Demi Lexicon
2030:Hope: A Memoir
2031:Basic Healing
2032:Invigorating Tales
2033:Essence of Healing
2FFF:====Spheres======
5001:Gunner Sphere Dress
5002:Gun Mage Sphere Dress
5003:Alchemist Sphere Dress
5004:Warrior Sphere Dress
5005:Samurai Sphere Dress
5006:Dark Knight Sphere Dress
5007:Berserker Sphere Dress
5008:Songstress Sphere Dress
5009:Black Mage Sphere Dress
500A:White Mage Sphere Dress
500B:Thief Sphere Dress
500C:Trainer Sphere Dress
500D:Lady Luck Sphere Dress
500E:Mascot Sphere Dress
500F:Psychic Sphere Dress
5FFF:=====Accessories=======
6001:Bandage
6002:Pedometer
6003:Asuran Seal
6004:Waxing Moonstone
6005:Magic Lip Gloss
6006:Larva Claw
6007:Spellspinner Ring
6008:Stealth Cape
600B:Swan Feather
600C:Amazon Belt
600E:Valkyrie Nails
6011:Triple Tiara
6013:Ace Gloves
6015:Sniper Cuffs
6016:Viper Fang
6019:Dusk Choker
601A:Master Leaf
601B:Thrifty Purse
601D:Sure Hands
601E:Silver Spoon
6020:Growth Seed
6023:Armored Vest
6024:Soldier's Banana
6025:Anti-Poison Mask
6026:Radiant Mascara
6027:Vigilance Mask
6028:Rune of Sanity
602A:Longevity Charm
602B:Megaphone
602C:Flower Hairpin
602D:Fairy Socks
602F:Windy Pedicure
6030:Fiendlord Sigil
6032:Purse Strings
6033:Body Chains
6034:Hex Ward
6035:Safety Pouch 
6039:Extinguisher Hood
603A:Heating Pad
603C:Lightning Rod
603D:Fire King's Rod
603E:Ice Spirit Ring
6040:Ltng. Dragon Ring
6042:Trap Sensor
6043:Ninja's Comb
6044:Moongoggles
6045:Sharp Spectacles
6048:Thief's Card
6049:Member's Card
604A:VIP Card
604B:Special Pass
604C:Wristband
604D:Witch Earrings
604E:Figther Headband
604F:Spirit Emblem
6050:Third Eye Rune
6051:Steel Sandals
</DropDownList>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>2 Bytes</VariableType>
          <Address>item_pointer</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Item Quantity"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">3452816845:No Value
</DropDownList>
          <VariableType>4 Bytes</VariableType>
          <Address>item_pointer</Address>
          <Offsets>
            <Offset>20</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Item Slot Number (Starts from 0)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>item_pointer</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Item Statuses"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">00000000:Clear
00000002:Cursed
00000004:Bombed
</DropDownList>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>item_pointer</Address>
          <Offsets>
            <Offset>18</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Sphere Stats"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>42</ID>
              <Description>"Sphere Lvl"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">3452816845:No value
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>item_pointer</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>44</ID>
              <Description>"Sphere Current HP"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">3452816845:No value
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>item_pointer</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"Sphere Max HP"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">3452816845:No value
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>item_pointer</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>46</ID>
              <Description>"Sphere Stat 1"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">CDCDCDCD:No value
</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>4 Bytes</VariableType>
              <Address>item_pointer</Address>
              <Offsets>
                <Offset>34</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>47</ID>
              <Description>"Sphere Stat 2"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">3452816845:No value
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>item_pointer</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>48</ID>
              <Description>"Sphere Stat 3"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">3452816845:No value
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>item_pointer</Address>
              <Offsets>
                <Offset>3C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>87</ID>
      <Description>"Deprecated"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>79</ID>
          <Description>"FindLevelUP"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-23
  Author : Andre

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(LevelUP,FFX-2.exe,0F B7 42 02 2B C8 89 8E 8C 00 00 00 83) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+0000008C],ecx
  jmp return

LevelUP+6:
  jmp code
  nop
return:
registersymbol(LevelUP)

[DISABLE]

LevelUP+6:
  db 89 8E 8C 00 00 00

unregistersymbol(LevelUP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FFX-2.exe"+1FE377

"FFX-2.exe"+1FE34F: 8B 8E 8C 00 00 00     -  mov ecx,[esi+0000008C]
"FFX-2.exe"+1FE355: 0F B7 42 02           -  movzx eax,word ptr [edx+02]
"FFX-2.exe"+1FE359: 83 C4 1C              -  add esp,1C
"FFX-2.exe"+1FE35C: 3B C8                 -  cmp ecx,eax
"FFX-2.exe"+1FE35E: 0F 8C F0 00 00 00     -  jl FFX-2.exe+1FE454
"FFX-2.exe"+1FE364: FF 46 10              -  inc [esi+10]
"FFX-2.exe"+1FE367: 83 7E 10 63           -  cmp dword ptr [esi+10],63
"FFX-2.exe"+1FE36B: 0F 8F DC 00 00 00     -  jg FFX-2.exe+1FE44D
"FFX-2.exe"+1FE371: 0F B7 42 02           -  movzx eax,word ptr [edx+02]
"FFX-2.exe"+1FE375: 2B C8                 -  sub ecx,eax
// ---------- INJECTING HERE ----------
"FFX-2.exe"+1FE377: 89 8E 8C 00 00 00     -  mov [esi+0000008C],ecx
// ---------- DONE INJECTING  ----------
"FFX-2.exe"+1FE37D: 83 FB 08              -  cmp ebx,08
"FFX-2.exe"+1FE380: 7D 21                 -  jnl FFX-2.exe+1FE3A3
"FFX-2.exe"+1FE382: 57                    -  push edi
"FFX-2.exe"+1FE383: 56                    -  push esi
"FFX-2.exe"+1FE384: E8 97 43 00 00        -  call FFX-2.exe+202720
"FFX-2.exe"+1FE389: 6A 01                 -  push 01
"FFX-2.exe"+1FE38B: 57                    -  push edi
"FFX-2.exe"+1FE38C: 56                    -  push esi
"FFX-2.exe"+1FE38D: E8 5E 44 00 00        -  call FFX-2.exe+2027F0
"FFX-2.exe"+1FE392: 56                    -  push esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"FindEXP"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2017-01-23
  Author : Andre

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(EXP,FFX-2.exe,DB 86 8C 00 00 00 D9 5D E0 D9 45 E0 D8 C1) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fild dword ptr [esi+0000008C]
  jmp return

EXP:
  jmp code
  nop
return:
registersymbol(EXP)

[DISABLE]

EXP:
  db DB 86 8C 00 00 00

unregistersymbol(EXP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FFX-2.exe"+1FE2F2

"FFX-2.exe"+1FE2BE: E8 0D CB E9 FF                 -  call FFX-2.exe+9ADD0
"FFX-2.exe"+1FE2C3: 83 C4 0C                       -  add esp,0C
"FFX-2.exe"+1FE2C6: 89 BE 90 00 00 00              -  mov [esi+00000090],edi
"FFX-2.exe"+1FE2CC: 85 FF                          -  test edi,edi
"FFX-2.exe"+1FE2CE: 79 0A                          -  jns FFX-2.exe+1FE2DA
"FFX-2.exe"+1FE2D0: C7 86 90 00 00 00 00 00 00 00  -  mov [esi+00000090],00000000
"FFX-2.exe"+1FE2DA: 81 BE 90 00 00 00 7F 96 98 00  -  cmp [esi+00000090],0098967F
"FFX-2.exe"+1FE2E4: 7E 36                          -  jle FFX-2.exe+1FE31C
"FFX-2.exe"+1FE2E6: C7 86 90 00 00 00 7F 96 98 00  -  mov [esi+00000090],0098967F
"FFX-2.exe"+1FE2F0: EB 2A                          -  jmp FFX-2.exe+1FE31C
// ---------- INJECTING HERE ----------
"FFX-2.exe"+1FE2F2: DB 86 8C 00 00 00              -  fild dword ptr [esi+0000008C]
// ---------- DONE INJECTING  ----------
"FFX-2.exe"+1FE2F8: D9 5D E0                       -  fstp dword ptr [ebp-20]
"FFX-2.exe"+1FE2FB: D9 45 E0                       -  fld dword ptr [ebp-20]
"FFX-2.exe"+1FE2FE: D8 C1                          -  fadd st(0),st(1)
"FFX-2.exe"+1FE300: E8 CB FD 27 00                 -  call FFX-2.exe+47E0D0
"FFX-2.exe"+1FE305: DB 46 24                       -  fild dword ptr [esi+24]
"FFX-2.exe"+1FE308: 89 86 8C 00 00 00              -  mov [esi+0000008C],eax
"FFX-2.exe"+1FE30E: D9 5D E0                       -  fstp dword ptr [ebp-20]
"FFX-2.exe"+1FE311: D8 45 E0                       -  fadd dword ptr [ebp-20]
"FFX-2.exe"+1FE314: E8 B7 FD 27 00                 -  call FFX-2.exe+47E0D0
"FFX-2.exe"+1FE319: 89 46 24                       -  mov [esi+24],eax
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>CurEXP</Name>
      <Address>00C7E311</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CurrentHP</Name>
      <Address>00C81917</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MultiLevel</Name>
      <Address>00C7E305</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
