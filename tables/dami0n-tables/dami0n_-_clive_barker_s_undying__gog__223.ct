<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Right click -&gt; change script for info"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
I've installed the "Widescreen Fix", so if you want to use this trainer
you might have to do the same.

The included pointer scans don't work too well, but might be
correct every now and then.

Deactivating either god mode or unlimited mana might crash your game.
Health is saved as a float value, mana as a 4 byte value, flight
power is a float value too (60 for maximum).

Right now, unlimited mana only works with the "ectoplasm" spell and
the script might even fail, I'll have to do some more tweaking.
The "Unlimited item uses" and the option with "no revolver reload"
haven't been fully tweaked, so errors might occur and the game
might crash when you try to deactivate those options.

The "hack flight power" option kind of freezes your flight power
once it reaches the float value of 20 or less while ignoring
values bigger than 30 and lower than 10 altogether. I had tried
this approach because the instruction used also handles other
code and most certainly would crash the games if not tamed. Still,
there's much margin for crashes and errors - use it at your own
risk!

Thx for reading - CyberD3m0n
}

[ENABLE]
[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Pointer scans:"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Health"</Description>
          <LastState Value="100" RealAddress="03530488"/>
          <VariableType>Float</VariableType>
          <Address>"Undying.exe"+00045040</Address>
          <Offsets>
            <Offset>488</Offset>
            <Offset>74</Offset>
            <Offset>38</Offset>
            <Offset>C</Offset>
            <Offset>38</Offset>
            <Offset>C</Offset>
            <Offset>158</Offset>
            <Offset>C</Offset>
            <Offset>2A8</Offset>
            <Offset>C</Offset>
            <Offset>7EC</Offset>
            <Offset>74</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"Mana"</Description>
          <LastState Value="140" RealAddress="03530404"/>
          <VariableType>4 Bytes</VariableType>
          <Address>"Undying.exe"+00045030</Address>
          <Offsets>
            <Offset>404</Offset>
            <Offset>74</Offset>
            <Offset>38</Offset>
            <Offset>C</Offset>
            <Offset>38</Offset>
            <Offset>C</Offset>
            <Offset>68</Offset>
            <Offset>C</Offset>
            <Offset>1B8</Offset>
            <Offset>C</Offset>
            <Offset>7EC</Offset>
            <Offset>74</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"AOB scripts:"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"True god mode"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,Core.dll,64 24 14 D9 17 D9 19 5F) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(youdie)
label(youdont)

newmem:

code:
  cmp [edi+0314],2
  jne youdie
  cmp [edi+0314],2
  je youdont

youdie:
  fst dword ptr [edi]
  fstp dword ptr [ecx]
  pop edi
  jmp return

youdont:
  nop
  fstp dword ptr [ecx]
  pop edi
  jmp return

INJECT+03:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT+03:
  db D9 17 D9 19 5F

unregistersymbol(INJECT)
dealloc(newmem)

"Core.dll"+2A6C0:
  fst dword ptr [edi]
  fstp dword ptr [ecx]
  pop edi
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"God mode (always 100 health)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,Core.dll,64 24 14 D9 17 D9 19 5F) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(youdie)
label(youdont)

newmem:

code:
  cmp [edi+0314],2
  jne youdie
  cmp [edi+0314],2
  je youdont

youdie:
  fst dword ptr [edi]
  fstp dword ptr [ecx]
  pop edi
  jmp return

youdont:
  fst dword ptr [edi]
  mov [edi],(float)100
  fstp dword ptr [ecx]
  pop edi
  jmp return

INJECT+03:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT+03:
  db D9 17 D9 19 5F

unregistersymbol(INJECT)
dealloc(newmem)

"Core.dll"+2A6C0:
  fst dword ptr [edi]
  fstp dword ptr [ecx]
  pop edi
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Unlimited mana (ectoplasm spell)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,Core.dll,?? 07 2B C1 ?? 07) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(wontdoit)
label(onlymana)

newmem:

code:
  cmp [edi+0010],1
  jne wontdoit
  cmp [edi+0010],1
  je onlymana

wontdoit:
  mov eax,[edi]
  sub eax,ecx
  mov [edi],eax
  jmp return

onlymana:
  mov [edi],64
  mov eax,[edi]
  sub eax,ecx
  mov [edi],eax
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db ?? 07 2B C1 ?? 07

unregistersymbol(INJECT)
dealloc(newmem)

Core.dll+28E0E:
  mov eax,[edi]
  sub eax,ecx
  mov [edi],eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"Unlimited item uses"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,Core.dll,8B 08 49 ?? 08) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,[eax]
  nop
  mov [eax],ecx
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 08 49 ?? 08

unregistersymbol(INJECT)
dealloc(newmem)

"Core.dll"+2914C:
  mov ecx,[eax]
  dec ecx
  mov [eax],ecx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Unlimited item uses &amp; no revolver reload"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,Core.dll,49 89 08 59 C2 08 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  pop ecx
  ret 0008
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 08 59 C2 08 00

unregistersymbol(INJECT)
dealloc(newmem)

"Core.dll"+2914F:
  mov [eax],ecx
  pop ecx
  ret 0008
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"Hack flight power (might cause errors)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,Core.dll,64 24 14 D9 17 D9 19 5F) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(nothingtodohere)
label(hackfly)

newmem:

code:
//  cmp [edi],(int)61
//  jge nothingtodohere
//  cmp [edi],(double)61
//  jge nothingtodohere
  cmp [edi],(float)30
  jge nothingtodohere
  cmp [edi],(float)10
  jle nothingtodohere
  cmp [edi],(float)20
  jle hackfly

nothingtodohere:
  fst dword ptr [edi]
  fstp dword ptr [ecx]
  pop edi
  jmp return

hackfly:
  nop
  fstp dword ptr [ecx]
  pop edi
  jmp return

INJECT+03:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT+03:
  db D9 17 D9 19 5F

unregistersymbol(INJECT)
dealloc(newmem)

Core.dll+2A6C0:
  fst dword ptr [edi]
  fstp dword ptr [ecx]
  pop edi
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
