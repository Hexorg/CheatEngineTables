<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>130</ID>
      <Description>"Jump scripts (F12)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(verticalspeedcalAOB,D9 81 08 01 00 00 D8 C9 D9 58 04)
registersymbol(verticalspeedcalAOB)

label(bMoonjump)
registersymbol(bMoonjump)
label(bHover)
registersymbol(bHover)
label(tjm)
registersymbol(tjm)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(doMoonJump)
label(checkhover)
label(doHover)
label(checkjumphigher)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fmul st(0),st(1)

cmp byte ptr [bMoonjump],1
je doMoonJump

checkhover:
cmp byte ptr [bHover],1
je doHover

checkjumphigher:
fmul dword ptr [tjm]
jmp originalcode

doMoonJump:
pushad
push 04      //key MMM
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkhover
pushad
push 20      //key SPACE
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkhover
fst dword ptr [eax+04]
cmp dword ptr [eax+04],(float)1800.0
jge originalcode
fstp dword ptr [eax+04]
mov dword ptr [eax+04],(float)1800.0
fld dword ptr [eax+04]
jmp originalcode

doHover:
pushad
push 20      //key SHIFT
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkjumphigher
fst dword ptr [eax+04]
cmp dword ptr [eax+04],(float)0.0
jge originalcode
fstp dword ptr [eax+04]
mov dword ptr [eax+04],(float)0.0
fld dword ptr [eax+04]
jmp originalcode

originalcode:
//fmul st(0),st(1)
fstp dword ptr [eax+04]

exit:
jmp returnhere

///
bHover:
db 0
bMoonjump:
db 0

tjm:
dd (float)1.0
///

verticalspeedcalAOB+6: //"CLOS2.exe"+1985FE:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
verticalspeedcalAOB+6: //"CLOS2.exe"+1985FE:
db D8 C9 D9 58 04
//Alt: fmul st(0),st(1)
//Alt: fstp dword ptr [eax+04]
unregistersymbol(verticalspeedcalAOB)

unregistersymbol(bHover)
unregistersymbol(bMoonjump)
unregistersymbol(tjm)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>142</ID>
          <Description>"Inf. Double Jump (F11)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(doublejumpflagreadonuseAOB,8A 14 01 8B 45 0C)
registersymbol(doublejumpflagreadonuseAOB)
aobscan(jumpstatusbasereadAOB,8B 10 8B C8 8B 42 6C FF D0 84 C0 75 2C)
registersymbol(jumpstatusbasereadAOB)

label(pDJ)
registersymbol(pDJ)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
push edx
lea edx,[ecx+eax]
cmp [pDJ],edx
jne originalcode
cmp byte ptr [edx+15],1
je originalcode
mov byte ptr [ecx+eax],0

originalcode:
pop edx
popfd
mov dl,[ecx+eax]
mov eax,[ebp+0C]

exit:
jmp returnhere

///

newmem2:
lea edx,[eax+54]
mov [pDJ],edx

originalcode2:
mov edx,[eax]
mov ecx,eax
mov eax,[edx+6C]

exit2:
jmp returnhere2

///
pDJ:
dd 0
///

doublejumpflagreadonuseAOB: //"CLOS2.exe"+B5EAE:
jmp newmem
nop
returnhere:

jumpstatusbasereadAOB: //"CLOS2.exe"+2D9DB8:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
doublejumpflagreadonuseAOB: //"CLOS2.exe"+B5EAE:
db 8A 14 01 8B 45 0C
//Alt: mov dl,[ecx+eax]
//Alt: mov eax,[ebp+0C]
unregistersymbol(doublejumpflagreadonuseAOB)
jumpstatusbasereadAOB: //"CLOS2.exe"+2D9DB8:
db 8B 10 8B C8 8B 42 6C
//Alt: mov edx,[eax]
//Alt: mov ecx,eax
//Alt: mov eax,[edx+6C]
unregistersymbol(jumpstatusbasereadAOB)

unregistersymbol(pDJ)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>132</ID>
          <Description>"Moon Jump (F10 / Alt F10)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMoonjump:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMoonjump:
db 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>121</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>134</ID>
          <Description>"Hover (F9 / Alt F9)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bHover:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bHover:
db 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>120</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>120</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>166</ID>
      <Description>"Movement scripts (F12)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(walkflagcheckAOB,80 7B 1C 00 75 6B)
registersymbol(walkflagcheckAOB)
aobscan(movespeedAOB,D8 89 0C 01 00 00 D9 58 08)
registersymbol(movespeedAOB)

label(bWalkButton)
registersymbol(bWalkButton)
label(bRunFaster)
registersymbol(bRunFaster)

label(pWalkFlag)
registersymbol(pWalkFlag)
label(trfm)
registersymbol(trfm)
label(twfm)
registersymbol(twfm)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(checkrunfaster2)
label(checkwalkbutton2)
label(dorunfaster2)
label(dowalkfaster2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pWalkFlag],ebx

cmp byte ptr [bWalkButton],1
jne originalcode
pushad
push 12      //key ALT
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je exit

originalcode:
cmp byte ptr [ebx+1C],00
jne walkflagcheckAOB+71 //CLOS2.exe+127133

exit:
jmp returnhere

///

newmem2:
fmul dword ptr [ecx+0000010C]

checkrunfaster2:
cmp byte ptr [bRunFaster],1
jne checkwalkbutton2
pushad
push 04      //key MMM
//push 11      //key CTRL
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je dorunfaster2

checkwalkbutton2:
cmp byte ptr [bWalkButton],1
jne originalcode2
pushad
push 12      //key ALT
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je dowalkfaster2
jmp originalcode2

dorunfaster2:
fmul dword ptr [trfm]
jmp originalcode2

dowalkfaster2:
fmul dword ptr [twfm]
jmp originalcode2

originalcode2:
//fmul dword ptr [ecx+0000010C]

exit2:
jmp returnhere2

///
bWalkButton:
db 0
bRunFaster:
db 0

pWalkFlag:
dd 0
trfm:
dd (float)3.0
twfm:
dd (float)1.1
///

walkflagcheckAOB: //"CLOS2.exe"+1270C2:
jmp newmem
nop
returnhere:

movespeedAOB: //"CLOS2.exe"+198603:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
walkflagcheckAOB: //"CLOS2.exe"+1270C2:
db 80 7B 1C 00 75 6B
//Alt: cmp byte ptr [ebx+1C],00
//Alt: jne CLOS2.exe+127133
unregistersymbol(walkflagcheckAOB)
movespeedAOB: //"CLOS2.exe"+198603:
db D8 89 0C 01 00 00
//Alt: fmul dword ptr [ecx+0000010C]
unregistersymbol(movespeedAOB)

unregistersymbol(bWalkButton)
unregistersymbol(bRunFaster)

unregistersymbol(pWalkFlag)
unregistersymbol(trfm)
unregistersymbol(twfm)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>169</ID>
          <Description>"Walk Button (F8 / Alt F8)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bWalkButton:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bWalkButton:
db 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>119</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>119</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>170</ID>
          <Description>"Run Faster (F7 / Alt F7)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bRunFaster:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bRunFaster:
db 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>118</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>118</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
