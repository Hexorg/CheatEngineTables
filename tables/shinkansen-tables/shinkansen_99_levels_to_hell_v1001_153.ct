<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>945</ID>
      <Description>"V1000 Scan"</Description>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>890</ID>
          <Description>"Set Bomb Base Address Scan 1 (First Use Bomb Before Enable)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(savedbombuseupdate)
label(returnhere)
label(originalcode)
label(exit)

registersymbol(savedbombuseupdate)
registersymbol(bombbasepointer)

aobscan(searchuseupdate,8B 87 D8 00 00 00 3D 01 00 00 00 0F 8C 1E 02 00 00)

alloc(newmem,2048) //2kb should be enough
alloc(bombbasepointer,4)


searchuseupdate:
savedbombuseupdate:
jmp newmem
nop
returnhere:


newmem:
mov [bombbasepointer],edi
mov [edi+000000D8], #10000

originalcode:
 db 8B 87 D8 00 00 00
// mov eax,[edi+000000D8]

exit:
jmp returnhere


[DISABLE]
savedbombuseupdate:
db 8B 87 D8 00 00 00
// mov eax,[edi+000000D8]

unregistersymbol(savedbombuseupdate)
unregistersymbol(bombbasepointer)

dealloc(newmem)
dealloc(bombbasepointer)

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>112</Key>
              </Keys>
              <Description>Active Trainer</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>891</ID>
              <Description>"Bomb Base Address"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bombbasepointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>892</ID>
              <Description>"Bomb"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bombbasepointer</Address>
              <Offsets>
                <Offset>D8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>918</ID>
              <Description>"Gun Power (Take effect on level change)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bombbasepointer</Address>
              <Offsets>
                <Offset>F0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>919</ID>
              <Description>"Gun Shots (Max 3, Take effect on level change)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bombbasepointer</Address>
              <Offsets>
                <Offset>F8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>896</ID>
          <Description>"Set Heart Base Address Scan 1 (First Lose Heart Before Enable)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(savedheartuseupdate)
label(returnhere)
label(originalcode)
label(exit)

registersymbol(savedheartuseupdate)
registersymbol(heartbasepointer)

aobscan(searchuseupdate,8B 47 7C 85 C0 0F 8F FA 01 00 00)

alloc(newmem,2048) //2kb should be enough
alloc(heartbasepointer,4)


searchuseupdate:
savedheartuseupdate:
jmp newmem
returnhere:


newmem:
mov [heartbasepointer],edi
mov [edi+0000007C], #10000

originalcode:
 db 8B 47 7C 85 C0
// mov eax,[edi+7C]
// test eax,eax

exit:
jmp returnhere


[DISABLE]
savedheartuseupdate:
 db 8B 47 7C 85 C0
// mov eax,[edi+7C]
// test eax,eax

unregistersymbol(savedheartuseupdate)
unregistersymbol(heartbasepointer)

dealloc(newmem)
dealloc(heartbasepointer)

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>112</Key>
              </Keys>
              <Description>Active Trainer</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>897</ID>
              <Description>"Heart Base Address"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>heartbasepointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>898</ID>
              <Description>"Heart"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>heartbasepointer</Address>
              <Offsets>
                <Offset>7C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>903</ID>
          <Description>"Add 10000 Gold Base Address Scan 1 (First Get Gold Before Enable)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(savedgolduseupdate)
label(returnhere)
label(originalcode)
label(exit)

registersymbol(savedgolduseupdate)
registersymbol(goldbasepointer)

aobscan(searchuseupdate,8B 46 30 03 45 0C 89 46 30)

alloc(newmem,2048) //2kb should be enough
alloc(goldbasepointer,4)


searchuseupdate:
savedgolduseupdate:
jmp newmem
nop
returnhere:


newmem:
mov [goldbasepointer],esi
add [ebp+0C], #10000

originalcode:
 db 8B 46 30 03 45 0C
// mov eax,[esi+30]
// add eax,[ebp+0C]

exit:
jmp returnhere


[DISABLE]
savedgolduseupdate:
 db 8B 46 30 03 45 0C
// mov eax,[esi+30]
// add eax,[ebp+0C]

unregistersymbol(savedgolduseupdate)
unregistersymbol(goldbasepointer)

dealloc(newmem)
dealloc(goldbasepointer)

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>112</Key>
              </Keys>
              <Description>Active Trainer</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>904</ID>
              <Description>"Gold Base Address"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>goldbasepointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>905</ID>
              <Description>"Gold"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>goldbasepointer</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>942</ID>
              <Description>"Gold HiScore?"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>goldbasepointer</Address>
              <Offsets>
                <Offset>34</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>926</ID>
          <Description>"Add 10000 Score Base Address Scan 1 (First Get Score Before Enable)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(savedscoreuseupdate)
label(returnhere)
label(originalcode)
label(exit)

registersymbol(savedscoreuseupdate)
registersymbol(scorebasepointer)

aobscan(searchuseupdate,8B 46 2C 03 C7 89 46 2C)

alloc(newmem,2048) //2kb should be enough
alloc(scorebasepointer,4)


searchuseupdate:
savedscoreuseupdate:
jmp newmem
returnhere:


newmem:
mov [scorebasepointer],esi
add edi, #10000

originalcode:
 db 8B 46 2C 03 C7
// mov eax,[esi+2C]
// add eax,edi

exit:
jmp returnhere


[DISABLE]
savedscoreuseupdate:
 db 8B 46 2C 03 C7
// mov eax,[esi+2C]
// add eax,edi

unregistersymbol(savedscoreuseupdate)
unregistersymbol(scorebasepointer)

dealloc(newmem)
dealloc(scorebasepointer)

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>112</Key>
              </Keys>
              <Description>Active Trainer</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>927</ID>
              <Description>"Score Base Address"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>scorebasepointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>928</ID>
              <Description>"Score"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>scorebasepointer</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>944</ID>
      <Description>"V1001 Scan"</Description>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>930</ID>
          <Description>"Set Bomb Base Address Scan 2 (First Use Bomb Before Enable)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(savedbombuseupdate)
label(returnhere)
label(originalcode)
label(exit)

registersymbol(savedbombuseupdate)
registersymbol(bombbasepointer)

aobscan(searchuseupdate,89 87 D8 00 00 00 8B 47 50)

alloc(newmem,2048) //2kb should be enough
alloc(bombbasepointer,4)


searchuseupdate:
savedbombuseupdate:
jmp newmem
nop
returnhere:


newmem:
mov [bombbasepointer],edi
mov eax, #99999

originalcode:
 db 89 87 D8 00 00 00
// mov [edi+000000D8],eax

exit:
jmp returnhere


[DISABLE]
savedbombuseupdate:
 db 89 87 D8 00 00 00
// mov [edi+000000D8],eax

unregistersymbol(savedbombuseupdate)
unregistersymbol(bombbasepointer)

dealloc(newmem)
dealloc(bombbasepointer)

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>112</Key>
              </Keys>
              <Description>Active Trainer</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>931</ID>
              <Description>"Bomb Base Address"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bombbasepointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>932</ID>
              <Description>"Bomb"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bombbasepointer</Address>
              <Offsets>
                <Offset>D8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>933</ID>
              <Description>"Gun Power (Take effect on level change)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bombbasepointer</Address>
              <Offsets>
                <Offset>F0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>934</ID>
              <Description>"Gun Shots (Max 3, Take effect on level change)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bombbasepointer</Address>
              <Offsets>
                <Offset>F8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>922</ID>
          <Description>"Set Heart Base Address Scan 2 (First Lose Heart Before Enable)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(savedheartuseupdate)
label(returnhere)
label(originalcode)
label(exit)

registersymbol(savedheartuseupdate)
registersymbol(heartbasepointer)

aobscan(searchuseupdate,89 47 7C 8B 47 3C 8B 4F 7C)

alloc(newmem,2048) //2kb should be enough
alloc(heartbasepointer,4)


searchuseupdate:
savedheartuseupdate:
jmp newmem
nop
returnhere:


newmem:
mov [heartbasepointer],edi
mov eax, #99999

originalcode:
 db 89 47 7C 8B 47 3C
// mov [edi+7C],eax
// mov eax,[edi+3C]

exit:
jmp returnhere


[DISABLE]
savedheartuseupdate:
 db 89 47 7C 8B 47 3C
// mov [edi+7C],eax
// mov eax,[edi+3C]

unregistersymbol(savedheartuseupdate)
unregistersymbol(heartbasepointer)

dealloc(newmem)
dealloc(heartbasepointer)

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>112</Key>
              </Keys>
              <Description>Active Trainer</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>923</ID>
              <Description>"Heart Base Address"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>heartbasepointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>924</ID>
              <Description>"Heart"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>heartbasepointer</Address>
              <Offsets>
                <Offset>7C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>935</ID>
          <Description>"Add 10000 Gold Base Address Scan 2 (First Get Gold Before Enable)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(savedgolduseupdate)
label(returnhere)
label(originalcode)
label(exit)

registersymbol(savedgolduseupdate)
registersymbol(goldbasepointer)

aobscan(searchuseupdate,89 46 30 8B 46 34)

alloc(newmem,2048) //2kb should be enough
alloc(goldbasepointer,4)


searchuseupdate:
savedgolduseupdate:
jmp newmem
nop
returnhere:


newmem:
mov [goldbasepointer],esi
add eax, #10000

originalcode:
db 89 46 30 8B 46 34
// mov [esi+30],eax
// mov eax,[esi+34]

exit:
jmp returnhere


[DISABLE]
savedgolduseupdate:
db 89 46 30 8B 46 34
// mov [esi+30],eax
// mov eax,[esi+34]

unregistersymbol(savedgolduseupdate)
unregistersymbol(goldbasepointer)

dealloc(newmem)
dealloc(goldbasepointer)

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>112</Key>
              </Keys>
              <Description>Active Trainer</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>936</ID>
              <Description>"Gold Base Address"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>goldbasepointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>937</ID>
              <Description>"Gold"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>goldbasepointer</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>941</ID>
              <Description>"Gold HiScore?"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>goldbasepointer</Address>
              <Offsets>
                <Offset>34</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>908</ID>
          <Description>"Add 10000 Score Base Address Scan 2 (First Get Score Before Enable)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(savedscoreuseupdate)
label(returnhere)
label(originalcode)
label(exit)

registersymbol(savedscoreuseupdate)
registersymbol(scorebasepointer)

aobscan(searchuseupdate,89 46 2C 8B 46 28 83 EC 08)

alloc(newmem,2048) //2kb should be enough
alloc(scorebasepointer,4)


searchuseupdate:
savedscoreuseupdate:
jmp newmem
nop
returnhere:


newmem:
mov [scorebasepointer],esi
add eax, #10000

originalcode:
 db 89 46 2C 8B 46 28
// mov [esi+2C],eax
// mov eax,[esi+28]

exit:
jmp returnhere


[DISABLE]
savedscoreuseupdate:
 db 89 46 2C 8B 46 28
// mov [esi+2C],eax
// mov eax,[esi+28]

unregistersymbol(savedscoreuseupdate)
unregistersymbol(scorebasepointer)

dealloc(newmem)
dealloc(scorebasepointer)

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>112</Key>
              </Keys>
              <Description>Active Trainer</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>909</ID>
              <Description>"Score Base Address"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>scorebasepointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>910</ID>
              <Description>"Score"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>scorebasepointer</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>savedmenuupdate</Name>
      <Address>05E28ABD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>searchlevelsbase</Name>
      <Address>02DDDE98</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>levelsbase</Name>
      <Address>02DDDE64</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightediteminforeadAOB</Name>
      <Address>063E2A1A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>arrowsubAOB</Name>
      <Address>0896AFA0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>arrowreadAOB</Name>
      <Address>05DB08EA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pArrow</Name>
      <Address>06450032</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>savedchallengearrowmenuupdate</Name>
      <Address>15F3C667</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>saveditemmenuupdate</Name>
      <Address>06C9A25A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>savedlevelsmenuupdate</Name>
      <Address>05CA665E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>savedgoldmenuupdate</Name>
      <Address>05CAA66D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>savedstatsmenuupdate</Name>
      <Address>05D881FD</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
