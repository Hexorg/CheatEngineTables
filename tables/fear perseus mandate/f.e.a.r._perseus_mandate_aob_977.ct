<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Inf Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

//globalalloc(pHealth,4)
label(healthReadJMP)
registersymbol(healthReadJMP)
aobscan(healthRead_AOB,D8 9E B0 07 00 00 89 44 24 20 89 4C 24 14)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

mov dword ptr [esi+000007B0],(float)100.0

originalcode:
fcomp dword ptr [esi+000007B0]

exit:
jmp returnhere

healthRead_AOB:
healthReadJMP:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthReadJMP:
fcomp dword ptr [esi+000007B0]
//dealloc(pHealth)
unregistersymbol(healthReadJMP)
//Alt: db D8 9E B0 07 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"inf Shield"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(shieldReadJMP)
registersymbol(shieldReadJMP)
aobscan(shieldRead_AOB,D9 83 B8 07 00 00 D9 83 80 0C 00 00 DA E9)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [ebx+000007B8],(float)100.0

originalcode:
fld dword ptr [ebx+000007B8]

exit:
jmp returnhere

shieldRead_AOB:
shieldReadJMP:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
shieldReadJMP:
fld dword ptr [ebx+000007B8]
//Alt: db D9 83 B8 07 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"No Reload"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(noreload)
registersymbol(noreload)
aobscan(noreload1,FF 8E 98 00 00 00 8B 86 A8 01 00 00)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//dec [esi+00000098]

exit:
jmp returnhere

noreload1:
noreload:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
noreload:
dec [esi+00000098]
//Alt: db FF 8E 98 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"inf Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(ammo)
registersymbol(ammo)
aobscan(infammo,8B 74 24 20 89 0C 90 8B 15)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov esi,[esp+20]
//mov [eax+edx*4],ecx

exit:
jmp returnhere

infammo:
ammo:
jmp newmem
nop
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammo:
mov esi,[esp+20]
mov [eax+edx*4],ecx
//Alt: db 8B 74 24 20 89 0C 90
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Inf Medipack"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(medi)
registersymbol(medi)
aobscan(infmedi,89 BE C4 01 00 00 FF 50 5C)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,10

originalcode:
mov [esi+000001C4],edi

exit:
jmp returnhere

infmedi:
medi:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
medi:
mov [esi+000001C4],edi
//Alt: db 89 BE C4 01 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :dec [esi+00000098] ammo</Description>
      <Address>007FB665</Address>
      <ModuleName>GamE8E7.tmp</ModuleName>
      <ModuleNameOffset>3A2D9</ModuleNameOffset>
      <Before>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>EB</Byte>
        <Byte>A6</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>8E</Byte>
        <Byte>98</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>A8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [eax+edx*4],ecx</Description>
      <Address>761C3CB3</Address>
      <ModuleName>GamE8E7.tmp</ModuleName>
      <ModuleNameOffset>F6299</ModuleNameOffset>
      <Before>
        <Byte>38</Byte>
        <Byte>8B</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>0C</Byte>
        <Byte>90</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>15</Byte>
        <Byte>18</Byte>
        <Byte>46</Byte>
        <Byte>B5</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fcomp dword ptr [esi+000007B0] HEALTH</Description>
      <Address>0DA9F841</Address>
      <ModuleName>Gam41E2.tmp</ModuleName>
      <ModuleNameOffset>1EF841</ModuleNameOffset>
      <Before>
        <Byte>50</Byte>
        <Byte>0C</Byte>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>D8</Byte>
        <Byte>9E</Byte>
        <Byte>B0</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [ebx+000007B8] Shield</Description>
      <Address>0DAA6D44</Address>
      <ModuleName>Gam41E2.tmp</ModuleName>
      <ModuleNameOffset>1F6D44</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
        <Byte>FF</Byte>
        <Byte>52</Byte>
        <Byte>24</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>83</Byte>
        <Byte>B8</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>83</Byte>
        <Byte>80</Byte>
        <Byte>0C</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [esi+000001C4],edi medipack</Description>
      <Address>028B8EC0</Address>
      <ModuleName>GamAF54.tmp</ModuleName>
      <ModuleNameOffset>88EC0</ModuleNameOffset>
      <Before>
        <Byte>60</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>BE</Byte>
        <Byte>C4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>50</Byte>
        <Byte>5C</Byte>
        <Byte>8B</Byte>
        <Byte>8E</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>shield</Name>
      <Address>02B24E52</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo</Name>
      <Address>02926295</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>03350000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>noreload</Name>
      <Address>0286A2D9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>shieldReadJMP</Name>
      <Address>0DAA6D44</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>medi</Name>
      <Address>028B8EC0</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
