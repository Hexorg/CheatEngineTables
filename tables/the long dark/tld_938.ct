<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Activate All Hacks Below (CE will freeze for a second)"</Description>
      <Options moBindActivation="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>83</ID>
          <Description>"Max Condition"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(condition,D9 80 0C 01 00 00 DE)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fld dword ptr [eax+00000110]
  fst dword ptr [eax+0000010C]
  jmp return

condition:
  jmp code
  nop
return:
registersymbol(condition)

[DISABLE]

condition:
  db D9 80 0C 01 00 00

unregistersymbol(condition)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2F8211E7

2F8211CF: 8D 65 FC              -  lea esp,[ebp-04]
2F8211D2: 5E                    -  pop esi
2F8211D3: C9                    -  leave 
2F8211D4: C3                    -  ret 
2F8211D5: 00 00                 -  add [eax],al
2F8211D7: 00 55 8B              -  add [ebp-75],dl
2F8211DA: EC                    -  in al,dx
2F8211DB: 83 EC 08              -  sub esp,08
2F8211DE: D9 05 88 36 38 19     -  fld dword ptr [19383688]
2F8211E4: 8B 45 08              -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
2F8211E7: D9 80 0C 01 00 00     -  fld dword ptr [eax+0000010C]
// ---------- DONE INJECTING  ----------
2F8211ED: DE C9                 -  fmulp st(1),st(0)
2F8211EF: D9 80 10 01 00 00     -  fld dword ptr [eax+00000110]
2F8211F5: DE F9                 -  fdivp st(1),st(0)
2F8211F7: 83 EC 0C              -  sub esp,0C
2F8211FA: 83 EC 04              -  sub esp,04
2F8211FD: D9 1C 24              -  fstp dword ptr [esp]
2F821200: E8 0B 00 00 00        -  call UnityEngine:Mathf:CeilToInt
2F821205: 83 C4 10              -  add esp,10
2F821208: C9                    -  leave 
2F821209: C3                    -  ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>85</ID>
          <Description>"No Weight"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(weight,FF D9 45 F0 8D 65 F4)
weight+01:
  db D9 EE 90
registersymbol(weight)
[DISABLE]
weight+01:
  db D9 45 F0
unregistersymbol(weight)

{
// ORIGINAL CODE - INJECTION POINT: 27F84F6A

27F84F50: D9 C9                          -  fxch st(1)
27F84F52: DE C1                          -  faddp 
27F84F54: D9 5D F0                       -  fstp dword ptr [ebp-10]
27F84F57: 43                             -  inc ebx
27F84F58: 8B 47 14                       -  mov eax,[edi+14]
27F84F5B: 8B C8                          -  mov ecx,eax
27F84F5D: 39 09                          -  cmp [ecx],ecx
27F84F5F: 8B 40 0C                       -  mov eax,[eax+0C]
27F84F62: 3B D8                          -  cmp ebx,eax
27F84F64: 0F 8C 6E FF FF FF              -  jl Inventory:GetTotalWeightKG+20
// ---------- INJECTING HERE ----------
27F84F6A: D9 45 F0                       -  fld dword ptr [ebp-10]
27F84F6D: 8D 65 F4                       -  lea esp,[ebp-0C]
// ---------- DONE INJECTING  ----------
27F84F70: 5E                             -  pop esi
27F84F71: 5F                             -  pop edi
27F84F72: 5B                             -  pop ebx
27F84F73: C9                             -  leave 
27F84F74: C3                             -  ret 
27F84F75: 00 00                          -  add [eax],al
27F84F77: 00 68 70                       -  add [eax+70],ch
27F84F7A: D5 22                          -  aad 22
27F84F7C: 0F E9 A6 B0 1B DE 00           -  psubsw mm4,[esi+tld.exe+51BB0]
27F84F83: 00 00                          -  add [eax],al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"No Fatigue"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(fatigue,D9 87 88 00 00 00 D9 45 F8)
fatigue:
  db D9 EE 90 90 90 90
registersymbol(fatigue)

[DISABLE]
fatigue:
  db D9 87 88 00 00 00
unregistersymbol(fatigue)

{
// ORIGINAL CODE - INJECTION POINT: 2F87B359

2F87B335: D9 45 0C           -  fld dword ptr [ebp+0C]
2F87B338: DE C1              -  faddp 
2F87B33A: D9 9F 88 00 00 00  -  fstp dword ptr [edi+00000088]
2F87B340: 8B 05 38 A7 06 15  -  mov eax,[1506A738]
2F87B346: 8B C8              -  mov ecx,eax
2F87B348: 39 09              -  cmp [ecx],ecx
2F87B34A: D9 80 B4 00 00 00  -  fld dword ptr [eax+000000B4]
2F87B350: D9 5D F4           -  fstp dword ptr [ebp-0C]
2F87B353: D9 45 F4           -  fld dword ptr [ebp-0C]
2F87B356: D9 5D F8           -  fstp dword ptr [ebp-08]
// ---------- INJECTING HERE ----------
2F87B359: D9 87 88 00 00 00  -  fld dword ptr [edi+00000088]
// ---------- DONE INJECTING  ----------
2F87B35F: D9 45 F8           -  fld dword ptr [ebp-08]
2F87B362: D9 87 8C 00 00 00  -  fld dword ptr [edi+0000008C]
2F87B368: 83 EC 04           -  sub esp,04
2F87B36B: 83 EC 04           -  sub esp,04
2F87B36E: D9 1C 24           -  fstp dword ptr [esp]
2F87B371: 83 EC 04           -  sub esp,04
2F87B374: D9 1C 24           -  fstp dword ptr [esp]
2F87B377: 83 EC 04           -  sub esp,04
2F87B37A: D9 1C 24           -  fstp dword ptr [esp]
2F87B37D: E8 EE E5 B9 D6     -  call UnityEngine:Mathf:Clamp
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"No Cold"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(cold,D9 47 20 D9 EE D9)
cold:
  db D9 EE 90
registersymbol(cold)

[DISABLE]
cold:
  db D9 47 20
unregistersymbol(cold)

{
// ORIGINAL CODE - INJECTION POINT: 2F87C4BF

2F87C4A0: D9 47 20           -  fld dword ptr [edi+20]
2F87C4A3: D9 45 DC           -  fld dword ptr [ebp-24]
2F87C4A6: DE C1              -  faddp 
2F87C4A8: D9 5F 20           -  fstp dword ptr [edi+20]
2F87C4AB: 8B 05 3C A7 06 15  -  mov eax,[1506A73C]
2F87C4B1: 39 00              -  cmp [eax],eax
2F87C4B3: 83 EC 0C           -  sub esp,0C
2F87C4B6: 57                 -  push edi
2F87C4B7: E8 3C 02 00 00     -  call Freezing:MaybeAdjustFreezingDueToNearbyFire
2F87C4BC: 83 C4 10           -  add esp,10
// ---------- INJECTING HERE ----------
2F87C4BF: D9 47 20           -  fld dword ptr [edi+20]
2F87C4C2: D9 EE              -  fldz 
// ---------- DONE INJECTING  ----------
2F87C4C4: D9 05 70 4C 7C 36  -  fld dword ptr [367C4C70]
2F87C4CA: 83 EC 04           -  sub esp,04
2F87C4CD: 83 EC 04           -  sub esp,04
2F87C4D0: D9 1C 24           -  fstp dword ptr [esp]
2F87C4D3: 83 EC 04           -  sub esp,04
2F87C4D6: D9 1C 24           -  fstp dword ptr [esp]
2F87C4D9: 83 EC 04           -  sub esp,04
2F87C4DC: D9 1C 24           -  fstp dword ptr [esp]
2F87C4DF: E8 8C D4 B9 D6     -  call UnityEngine:Mathf:Clamp
2F87C4E4: 83 C4 10           -  add esp,10
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No Hunger"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(calories,D9 47 * D9 47 * D9 47 * 83)
alloc(calories_bkp,1)
calories_bkp:
  readmem(calories+2,1)
calories+2:
  db 68 //readmem(calories+8,1)
registersymbol(calories)
registersymbol(calories_bkp)

[DISABLE]
calories+2:
  readmem(calories_bkp,1)
unregistersymbol(calories)
unregistersymbol(calories_bkp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2F87CE3D

2F87CE22: D9 EE              -  fldz 
2F87CE24: D9 5D F8           -  fstp dword ptr [ebp-08]
2F87CE27: D9 EE              -  fldz 
2F87CE29: D9 5D F4           -  fstp dword ptr [ebp-0C]
2F87CE2C: D9 47 24           -  fld dword ptr [edi+24]
2F87CE2F: D9 5D F8           -  fstp dword ptr [ebp-08]
2F87CE32: D9 47 24           -  fld dword ptr [edi+24]
2F87CE35: D9 45 0C           -  fld dword ptr [ebp+0C]
2F87CE38: DE E9              -  fsubp st(1),st(0)
2F87CE3A: D9 5F 24           -  fstp dword ptr [edi+24]
// ---------- INJECTING HERE ----------
2F87CE3D: D9 47 24           -  fld dword ptr [edi+24]
2F87CE40: D9 47 64           -  fld dword ptr [edi+64]
// ---------- DONE INJECTING  ----------
2F87CE43: D9 47 60           -  fld dword ptr [edi+60]
2F87CE46: 83 EC 04           -  sub esp,04
2F87CE49: 83 EC 04           -  sub esp,04
2F87CE4C: D9 1C 24           -  fstp dword ptr [esp]
2F87CE4F: 83 EC 04           -  sub esp,04
2F87CE52: D9 1C 24           -  fstp dword ptr [esp]
2F87CE55: 83 EC 04           -  sub esp,04
2F87CE58: D9 1C 24           -  fstp dword ptr [esp]
2F87CE5B: E8 10 CB B9 D6     -  call UnityEngine:Mathf:Clamp
2F87CE60: 83 C4 10           -  add esp,10
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"No Thirst"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(thirst,D9 47 24 D9 EE D9 47 28)
thirst:
  db D9 EE 90
registersymbol(thirst)

[DISABLE]
thirst:
  db D9 47 24
unregistersymbol(thirst)

{
// ORIGINAL CODE - INJECTION POINT: 2F86F8F2

2F86F8D5: E8 EE E0 00 00     -  call ExperienceModeManager:GetThirstRateScale
2F86F8DA: 83 C4 10           -  add esp,10
2F86F8DD: DD 45 E8           -  fld qword ptr [ebp-18]
2F86F8E0: D9 C9              -  fxch st(1)
2F86F8E2: DE C9              -  fmulp st(1),st(0)
2F86F8E4: D9 5D F4           -  fstp dword ptr [ebp-0C]
2F86F8E7: D9 47 24           -  fld dword ptr [edi+24]
2F86F8EA: D9 45 F4           -  fld dword ptr [ebp-0C]
2F86F8ED: DE C1              -  faddp 
2F86F8EF: D9 5F 24           -  fstp dword ptr [edi+24]
// ---------- INJECTING HERE ----------
2F86F8F2: D9 47 24           -  fld dword ptr [edi+24]
2F86F8F5: D9 EE              -  fldz 
// ---------- DONE INJECTING  ----------
2F86F8F7: D9 47 28           -  fld dword ptr [edi+28]
2F86F8FA: 83 EC 04           -  sub esp,04
2F86F8FD: 83 EC 04           -  sub esp,04
2F86F900: D9 1C 24           -  fstp dword ptr [esp]
2F86F903: 83 EC 04           -  sub esp,04
2F86F906: D9 1C 24           -  fstp dword ptr [esp]
2F86F909: 83 EC 04           -  sub esp,04
2F86F90C: D9 1C 24           -  fstp dword ptr [esp]
2F86F90F: E8 5C A0 BA D6     -  call UnityEngine:Mathf:Clamp
2F86F914: 83 C4 10           -  add esp,10
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Set Inventory Stacks to 10"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(inventory_int,8B 40 20 85 C0 75 * 8B 47 * 83 EC 08)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+20],#10
  mov eax,[eax+20]
  test eax,eax
  jmp return

inventory_int:
  jmp code
return:
registersymbol(inventory_int)

[DISABLE]
inventory_int:
  db 8B 40 20 85 C0
unregistersymbol(inventory_int)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2F8196B7

2F819693: 83 C4 10              -  add esp,10
2F819696: E9 3C 01 00 00        -  jmp Inventory:ProcessItems+207
2F81969B: 8B 86 A8 00 00 00     -  mov eax,[esi+000000A8]
2F8196A1: 83 EC 0C              -  sub esp,0C
2F8196A4: 50                    -  push eax
2F8196A5: E8 AE 47 BF D6        -  call UnityEngine:Object:op_Implicit
2F8196AA: 83 C4 10              -  add esp,10
2F8196AD: 85 C0                 -  test eax,eax
2F8196AF: 74 24                 -  je Inventory:ProcessItems+105
2F8196B1: 8B 86 A8 00 00 00     -  mov eax,[esi+000000A8]
// ---------- INJECTING HERE ----------
2F8196B7: 8B 40 20              -  mov eax,[eax+20]
2F8196BA: 85 C0                 -  test eax,eax
// ---------- DONE INJECTING  ----------
2F8196BC: 75 17                 -  jne Inventory:ProcessItems+105
2F8196BE: 8B 47 18              -  mov eax,[edi+18]
2F8196C1: 83 EC 08              -  sub esp,08
2F8196C4: 56                    -  push esi
2F8196C5: 50                    -  push eax
2F8196C6: 39 00                 -  cmp [eax],eax
2F8196C8: E8 4B 11 FB FF        -  call 2F7CA818
2F8196CD: 83 C4 10              -  add esp,10
2F8196D0: E9 02 01 00 00        -  jmp Inventory:ProcessItems+207
2F8196D5: 8B 46 30              -  mov eax,[esi+30]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>88</ID>
      <Description>"Encumber Pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(encumber,D9 EE D9 5D F8 D9 EE D9 5D F4 D9 47 1C)
alloc(newmem,$1000)

label(code)
label(return)
label(encumber_ptr)

newmem:

code:
  mov [encumber_ptr],edi
  fldz 
  fstp dword ptr [ebp-08]
  jmp return

encumber_ptr:
  dd 0

encumber:
  jmp code
return:
registersymbol(encumber)
registersymbol(encumber_ptr)

[DISABLE]
encumber:
  db D9 EE D9 5D F8
unregistersymbol(encumber)
unregistersymbol(encumber_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 27FDC432

27FDC41F: C9                 -  leave 
27FDC420: C3                 -  ret 
27FDC421: 00 00              -  add [eax],al
27FDC423: 00 00              -  add [eax],al
27FDC425: 00 00              -  add [eax],al
27FDC427: 00 55 8B           -  add [ebp-75],dl
27FDC42A: EC                 -  in al,dx
27FDC42B: 57                 -  push edi
27FDC42C: 83 EC 14           -  sub esp,14
27FDC42F: 8B 7D 08           -  mov edi,[ebp+08]
// ---------- INJECTING HERE ----------
27FDC432: D9 EE              -  fldz 
27FDC434: D9 5D F8           -  fstp dword ptr [ebp-08]
// ---------- DONE INJECTING  ----------
27FDC437: D9 EE              -  fldz 
27FDC439: D9 5D F4           -  fstp dword ptr [ebp-0C]
27FDC43C: D9 47 1C           -  fld dword ptr [edi+1C]
27FDC43F: D9 5D F8           -  fstp dword ptr [ebp-08]
27FDC442: 8B 05 1C 87 88 14  -  mov eax,[1488871C]
27FDC448: D9 80 88 00 00 00  -  fld dword ptr [eax+00000088]
27FDC44E: D9 47 24           -  fld dword ptr [edi+24]
27FDC451: DF F1              -  fcomip st(0),st(1)
27FDC453: DD D8              -  fstp st(0)
27FDC455: 0F 8A 7D 00 00 00  -  jp Encumber:GetEffectiveCarryCapacityKG+b0
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>89</ID>
          <Description>"Base Address"</Description>
          <LastState Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>encumber_ptr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>90</ID>
              <Description>"m_MaxCarryCapacityKG"</Description>
              <LastState Value="??" Activated="0" RealAddress="0000001C"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+1c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>91</ID>
              <Description>"m_MaxCarryCapacityWhenExhaustedKG"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000020"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+20</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>92</ID>
              <Description>"m_ReduceCarryCapacityAtFatigue"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000024"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+24</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>93</ID>
              <Description>"m_NoSprintCarryCapacityKG"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000028"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+28</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>94</ID>
              <Description>"m_NoStrideCarryCapacityKG"</Description>
              <LastState Value="??" Activated="0" RealAddress="0000002C"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+2c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>95</ID>
              <Description>"m_NoWalkCarryCapacityKG"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000030"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+30</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>96</ID>
              <Description>"m_HourlyCalorieBurnPerKG"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000034"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+34</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>97</ID>
              <Description>"m_EncumberLowThresholdKG"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000038"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+38</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>98</ID>
              <Description>"m_EncumberMedThresholdKG"</Description>
              <LastState Value="??" Activated="0" RealAddress="0000003C"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+3c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>99</ID>
              <Description>"m_EncumberHighThresholdKG"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000040"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+40</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>106</ID>
              <Description>"m_GearWeightKG"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000050"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>+50</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>107</ID>
              <Description>"m_EncumberedInLog"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000054"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>+54</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"Ignore This"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Inventory"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(inventory,8B 40 1C 85 C0 75 ?? 8B 47 18)
registersymbol(inventory)

[DISABLE]
unregistersymbol(inventory)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"Always Light?"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(light,0F B6 87 B4 03 00 00)
light:
  db B8 00 00 00 00 90 90
registersymbol(light)

[DISABLE]
light:
  db 0F B6 87 B4 03 00 00
unregistersymbol(light)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"Never Dark?"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(dark,07 BE 01 00 00 00 EB 02 33 F6 8B C6)
dark+06:
  db 90 90
registersymbol(dark)

[DISABLE]
dark+06:
  db EB 02
unregistersymbol(dark)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"No Weight"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(weight_int,8B 40 1C 50 DB 04 24)
weight_int:
  db 31 C0 90
registersymbol(weight_int)

aobscan(weight_float,D9 40 14 D9 45 F8)
weight_float:
  db D9 EE 90
registersymbol(weight_float)

aobscan(weight_nostack,C9 D9 87 E8 00 00 00)
weight_nostack+01:
  db D9 EE 90 90 90 90
registersymbol(weight_nostack)

[DISABLE]
weight_int:
  db 8B 40 1C
unregistersymbol(weight_int)

weight_float:
  db D9 40 14
unregistersymbol(weight_float)

weight_nostack+01:
  db D9 87 E8 00 00 00
unregistersymbol(weight_nostack)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"Invisibility"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(invisibility,85 C0 74 07 B8 01 00 00 00 EB 2D 8B 05)
invisibility+2:
  db 90 90
registersymbol(invisibility)

[DISABLE]
invisibility+2:
  db 74 07
unregistersymbol(invisibility)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Unlimited Supply"</Description>
          <Options moHideChildren="1" moBindActivation="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>20</ID>
              <Description>"Single Use Items (must first use an item, like matches)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(supply_int,49 89 48 1C 8B 47 18)
supply_int:
  db 90
registersymbol(supply_int)

[DISABLE]
supply_int:
  db 49
unregistersymbol(supply_int)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>41</ID>
              <Description>"Multi-Use Items (must first use an item, like antiseptics)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(supply_multi,2B CA 89 48 1C)
supply_multi:
  db 90 90
registersymbol(supply_multi)

[DISABLE]
supply_multi:
  db 2B CA
unregistersymbol(supply_multi)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>40</ID>
              <Description>"Containers (must first use an item, like antiseptics)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(supply_float,D9 45 D4 DE E9 D9 5B)
supply_float:
  db D9 EE 90
registersymbol(supply_float)

[DISABLE]
supply_float:
  db D9 45 D4
unregistersymbol(supply_float)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Infection Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(infection,39 09 0F B6 40 34 85 C0 0F)
alloc(newmem,$1000)

label(code)
label(return)
label(infection_ptr)

newmem:

infection_ptr:
  db 00 00 00 00

code:
  mov [infection_ptr],ecx
  cmp [ecx],ecx
  movzx eax,byte ptr [eax+34]
  jmp return

infection:
  jmp code
  nop
return:
registersymbol(infection)
registersymbol(infection_ptr)

[DISABLE]
infection:
  db 39 09 0F B6 40 34
unregistersymbol(infection)
unregistersymbol(infection_ptr)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>60</ID>
              <Description>"Elapsed Rest Time"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>infection_ptr</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>62</ID>
              <Description>"Hours of Rest for Cure"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>infection_ptr</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>65</ID>
              <Description>"Is Active (Set to 0)"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>infection_ptr</Address>
              <Offsets>
                <Offset>34</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"Max Durability"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(durability,D9 87 EC 00 00 00 D9 EE D9)
durability:
  db D9 87 F0 00 00 00
registersymbol(durability)

[DISABLE]
durability:
  db D9 87 EC 00 00 00
unregistersymbol(durability)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"Max Condition"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(condition,D9 80 0C 01 00 00 D9 80 10)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fld dword ptr [eax+00000110]
  fst dword ptr [eax+0000010C]
  jmp return

condition:
  jmp code
  nop
return:
registersymbol(condition)

[DISABLE]

condition:
  db D9 80 0C 01 00 00

unregistersymbol(condition)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2F823ABE

2F823AA2: 3D ED 0E E9 7E     -  cmp eax,7EE90EED
2F823AA7: C5 64 D6 00        -  lds esp,[esi+edx*8+00]
2F823AAB: 00 00              -  add [eax],al
2F823AAD: 00 00              -  add [eax],al
2F823AAF: 00 55 8B           -  add [ebp-75],dl
2F823AB2: EC                 -  in al,dx
2F823AB3: 83 EC 08           -  sub esp,08
2F823AB6: D9 EE              -  fldz 
2F823AB8: D9 5D FC           -  fstp dword ptr [ebp-04]
2F823ABB: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
2F823ABE: D9 80 0C 01 00 00  -  fld dword ptr [eax+0000010C]
// ---------- DONE INJECTING  ----------
2F823AC4: D9 80 10 01 00 00  -  fld dword ptr [eax+00000110]
2F823ACA: DE F9              -  fdivp st(1),st(0)
2F823ACC: D9 5D FC           -  fstp dword ptr [ebp-04]
2F823ACF: D9 45 FC           -  fld dword ptr [ebp-04]
2F823AD2: D9 EE              -  fldz 
2F823AD4: D9 E8              -  fld1 
2F823AD6: 83 EC 04           -  sub esp,04
2F823AD9: 83 EC 04           -  sub esp,04
2F823ADC: D9 1C 24           -  fstp dword ptr [esp]
2F823ADF: 83 EC 04           -  sub esp,04
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Set Inventory Containers to 2"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(inventory_float,8B 45 08 D9 40 14 D9 05)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,[ebp+08]
  mov dword ptr [eax+14],(float)2.0
  fld dword ptr [eax+14]
  jmp return

inventory_float:
  jmp code
  nop
return:
registersymbol(inventory_float)

[DISABLE]
inventory_float:
  db 8B 45 08 D9 40 14
unregistersymbol(inventory_float)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Max Health"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(health,D9 46 2C D9 5D EC D9 46 30 D9 5D E8)
health:
  db D9 46 30 D9 55 EC D9 56 2C
registersymbol(health)

[DISABLE]
health:
  db D9 46 2C D9 5D EC D9 46 30
unregistersymbol(health)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"No Encumbrance"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(encumbered,D9 40 50 D9 45 FC)
encumbered:
  db D9 EE 90
registersymbol(encumbered)

[DISABLE]
encumbered:
  db D9 40 50 D9 45 FC
unregistersymbol(encumbered)

{
// ORIGINAL CODE - INJECTION POINT: 2F87AFAF

2F87AF91: 8B EC              -  mov ebp,esp
2F87AF93: 83 EC 08           -  sub esp,08
2F87AF96: D9 EE              -  fldz 
2F87AF98: D9 5D FC           -  fstp dword ptr [ebp-04]
2F87AF9B: 83 EC 0C           -  sub esp,0C
2F87AF9E: FF 75 08           -  push [ebp+08]
2F87AFA1: E8 3A B5 FC FF     -  call Encumber:GetEffectiveCarryCapacityKG
2F87AFA6: 83 C4 10           -  add esp,10
2F87AFA9: D9 5D FC           -  fstp dword ptr [ebp-04]
2F87AFAC: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
2F87AFAF: D9 40 50           -  fld dword ptr [eax+50]
2F87AFB2: D9 45 FC           -  fld dword ptr [ebp-04]
// ---------- DONE INJECTING  ----------
2F87AFB5: D9 05 F8 48 7C 36  -  fld dword ptr [367C48F8]
2F87AFBB: DE C1              -  faddp 
2F87AFBD: DF F1              -  fcomip st(0),st(1)
2F87AFBF: DD D8              -  fstp st(0)
2F87AFC1: 7A 09              -  jp Encumber:IsEncumbered+3c
2F87AFC3: 73 07              -  jae Encumber:IsEncumbered+3c
2F87AFC5: B8 01 00 00 00     -  mov eax,00000001
2F87AFCA: EB 02              -  jmp Encumber:IsEncumbered+3e
2F87AFCC: 33 C0              -  xor eax,eax
2F87AFCE: C9                 -  leave 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>get_player</Name>
      <Address>04209A79</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player</Name>
      <Address>09A60000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>get_cold</Name>
      <Address>04209AC1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address>27826EB5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infection</Name>
      <Address>20EFB6F1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infection_ptr</Name>
      <Address>08E40000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>durability</Name>
      <Address>20E913B3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weight_int</Name>
      <Address>20E6223B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weight_float</Name>
      <Address>20E623D1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weight_nostack</Name>
      <Address>20E622E1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory_float</Name>
      <Address>20E62359</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>invisibility</Name>
      <Address>20E70488</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory_int</Name>
      <Address>2F8196B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>condition</Name>
      <Address> 27FB526F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fatigue</Name>
      <Address> 28007BE1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cold</Name>
      <Address> 28008D07</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>calories</Name>
      <Address> 28009685</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>thirst</Name>
      <Address> 27FFC8B2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weight</Name>
      <Address> 27F84F69</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>
</LuaScript>
</CheatTable>
