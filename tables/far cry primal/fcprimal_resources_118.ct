<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>436</ID>
      <Description>"[Enable]"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>000080</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

// Main Hook

aobscanmodule( _MainHook, FCPrimal.exe, 4883EC288B81800200004989C939D0 )
registersymbol( _MainHook )
alloc( MainHook, 128, FCPrimal.exe )
registersymbol( MainHook )
label( CPawn )
registersymbol( CPawn )
label( CPlayer )
registersymbol( CPlayer )
label( MainHook_orig )
registersymbol( MainHook_orig )

MainHook:
push rcx
mov [CPawn],rsi
mov rcx,[rsi+78]
mov [CPlayer],rcx
pop rcx
@@:
MainHook_orig:
readmem( _MainHook+4, 6 )
jmp _MainHook+A

CPawn:
dq 0
CPlayer:
dq 0

_MainHook+4:
jmp MainHook
nop

/*
144637330 - 48 83 EC 28           - sub rsp,28 &lt;-- RSI = CPawn; [RSI+78] = CPlayer
144637334 - 8B 81 80020000        - mov eax,[rcx+00000280]
14463733A - 49 89 C9              - mov r9,rcx
14463733D - 39 D0                 - cmp eax,edx
14463733F - 75 09                 - jne 14463734A
144637341 - 4C 39 81 90020000     - cmp [rcx+00000290],r8
144637348 - 74 30                 - je 14463737A
14463734A - 89 91 80020000        - mov [rcx+00000280],edx
144637350 - 48 8D 91 FC000000     - lea rdx,[rcx+000000FC]
144637357 - C7 81 7C020000 00000000 - mov [rcx+0000027C],00000000
144637361 - 89 81 84020000        - mov [rcx+00000284],eax
144637367 - 48 81 C1 BC010000     - add rcx,000001BC
14463736E - E8 DD6CFFFF           - call 14462E050
144637373 - 4D 89 81 90020000     - mov [r9+00000290],r8
14463737A - 48 83 C4 28           - add rsp,28
14463737E - C3                    - ret
*/

[DISABLE]

_MainHook+4:
readmem( MainHook_orig, 6 )

unregistersymbol( MainHook_orig )
unregistersymbol( CPlayer )
unregistersymbol( CPawn )
unregistersymbol( MainHook )
dealloc( MainHook )
unregistersymbol( _MainHook )

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>332</ID>
          <Description>"Give Resource - Test"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc( KeyHandlerThread, 512, FCPrimal.exe )
registersymbol( KeyHandlerThread )
CreateThread( KeyHandlerThread )
alloc( KeyHandlerOff, 4, FCPrimal.exe )
registersymbol( KeyHandlerOff )
label( ExitKeyHandler )
label( KeyHandlerThread_loop )

label( GetResource_do )

KeyHandlerOff:
dd 0

KeyHandlerThread:
sub rsp,28

KeyHandlerThread_loop:
mov rcx,0a
call Sleep

cmp [KeyHandlerOff],1
je ExitKeyHandler

mov rcx,6F // VK_NUMPAD /
call GetAsyncKeyState
test ax,ax
jne GetResource_do

jmp KeyHandlerThread_loop

GetResource_do:
sub rsp,30
db 41 B1 01                   // mov r9b,1 (bug in CE)
xor r8d,r8d
mov edx,69A                   // 0x69A = ID for Red Leaf
mov rcx,[CPlayer]
lea rcx,[rcx+12A8]            // CPlayer + 12A8 = CInventory
mov byte ptr [rsp+20],0
call 144691750                // this call should be the same for you, in version 1.2.0 (I think) -- will find it via patterns
add rsp,30
mov rcx,C8
call Sleep
jmp KeyHandlerThread_loop

ExitKeyHandler:
add rsp,28
mov [KeyHandlerOff],2
ret

[DISABLE]

{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "KeyHandlerOff" ) == 0 then --could be 2 already
  writeInteger( "KeyHandlerOff", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "KeyHandlerOff" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}

unregistersymbol( KeyHandlerOff )
dealloc( KeyHandlerOff )
unregistersymbol( KeyHandlerThread )
dealloc( KeyHandlerThread )
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>439</ID>
          <Description>"Debug"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>437</ID>
              <Description>"CPawn"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>CPawn</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>438</ID>
              <Description>"CPlayer"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>C0C0C0</Color>
              <VariableType>8 Bytes</VariableType>
              <Address>CPlayer</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
