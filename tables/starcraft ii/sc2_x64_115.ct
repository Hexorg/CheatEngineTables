<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>215</ID>
      <Description>"God Mode (v3.10.1)"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Process: SC2_x64.exe
  Version: 3.10.1
  Date   : 2017-2-01
  Author : gameplayer
}

define(healthaddr,SC2_x64.exe+697F1A)
define(healthbytes,8B CF 2B C8 41 89 B6 98 01 00 00 89 8C 24 88 00 00 00)
define(shieldaddr,SC2_x64.exe+695e01)
define(shieldbytes,41 89 86 9C 01 00 00 3B C3 74 24)
define(teamcode,SC2_x64.exe+276DBC4)
[ENABLE]
assert(healthaddr,healthbytes)
assert(shieldaddr,shieldbytes)
alloc(Health_mem,$1000,healthaddr)

label(code)
label(next)
label(skip)
label(return)
label(Shield_mem)
label(Shield_Code)
label(Shield_Return)

Health_mem:
dd 1
dd 1
dd 0
dd 0
db 90 90 90 90 90 90 90 90
code:
movzx ecx,byte ptr [r14+3e]
cmp ecx,1
je next
mov edx,1
shl edx,cl
mov ecx,[teamcode]
test edx,ecx
jne next
cmp dword ptr [Health_mem+04],0
je skip
mov ecx,edi
sub ecx,00002000
cmp ecx,esi
jng +02
mov esi,ecx
skip:
  mov ecx,edi
  sub ecx,eax
  mov [r14+00000198],esi
  jmp return
next:
cmp dword ptr [Health_mem],0
je skip
cmp ebx,esi
jnl +04
xor ebx,ebx
xor esi,esi
  mov ecx,edi
  sub ecx,eax
  mov [r14+00000198],esi
  jmp return
Shield_mem:
  cmp [r14+3e],1
  je Shield_Code
  mov [Health_mem+08],ecx
  movzx ecx,byte ptr [r14+3e]
  mov edx,1
  shl edx,cl
  mov ecx,[teamcode]
  test edx,ecx
  jne Shield_Code
  mov ecx,[Health_mem+08]
  mov [r14+0000019c],r9d
  xor ebx,ebx
  jmp Shield_Return+2F
Shield_Code:
xor eax,eax
mov [r14+00000198],eax
mov [r14+0000019c],eax
sub eax,r9d
mov ebx,eax
jmp Shield_Return+2F

shieldaddr:
  jmp Shield_mem
  db 90 90
Shield_Return:

healthaddr:
  jmp code
  db 90 90 90 90 90 90
return:
registersymbol(Health_mem)

[DISABLE]
healthaddr:
  db healthbytes
shieldaddr:
  db shieldbytes

dealloc(Health_mem)
unregistersymbol(Health_mem)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>83</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>242</ID>
          <Description>"Full Health"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Enabled
0:Disabled
</DropDownList>
          <VariableType>4 Bytes</VariableType>
          <Address>Health_mem</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>18</Key>
                <Key>187</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>18</Key>
                <Key>189</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>243</ID>
          <Description>"Quick Kill"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Enabled
0:Disabled
</DropDownList>
          <VariableType>4 Bytes</VariableType>
          <Address>Health_mem+04</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>18</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>18</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>203</ID>
      <Description>"Multiply Resources (v3.10.1)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(Res_addr,SC2_x64.exe+71B7AC)
define(Res_bytes,89 77 60 48 8B 74 24 40 48 83 C4 20 5F C3)
define(teamcode,SC2_x64.exe+276DBC4)

[ENABLE]
assert(Res_addr,Res_bytes)
alloc(Res_newmem,$1000,Res_addr)
label(Res_Skip)
label(Res_Code)
label(Res_return)
label(next)

Res_newmem:
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
Res_Code:
mov [Res_newmem],rdi
mov rdi,[rdi+18]
cmp [rdi+3e],1
je next
movzx ecx,byte ptr [rdi+3e]
mov edx,1
shl edx,cl
mov ecx,[teamcode]
test edx,ecx
je Res_Skip
next:
shl esi,3
Res_Skip:
mov rdi,[Res_newmem]
  mov [rdi+60],esi
  mov rsi,[rsp+40]
  jmp Res_return

Res_addr:
  jmp Res_Code
  db 90 90 90
Res_return:

[DISABLE]
Res_addr:
db Res_bytes

dealloc(Res_newmem)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>83</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>241</ID>
      <Description>"Fast Building (v3.10.1)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Process: SC2_x64.exe
  Version: 3.10.1
  Date   : 2017-2-01
  Author : gameplayer
}

[ENABLE]
aobscanmodule(Build_time,SC2_x64.exe,29 4F 64 83 7F 64 00 8B 47 10)
alloc(Build_newmem,$1000,Build_time)

label(Build_code)
label(code)
label(next)
label(return)

Build_newmem:
dd 0
dd 0
dd 0
dd 0
db 90 90 90 90 90 90 90 90
Build_code:
mov [Build_newmem],ecx
mov ecx,00002000
cmp dword ptr [rdi+64],ecx
jle code
mov rax,[rdi+18]
cmp byte ptr [rax+3e],1
je next
mov edx,1
movzx ecx,byte ptr [rax+3e]
and ecx,0F
shl edx,cl
mov ecx,[SC2_x64.exe+276DBC4]
test edx,ecx
je code
mov ecx,00002000
next:
mov [rdi+64],ecx
xor ecx,ecx
mov [rax+00000198],ecx
mov [rax+0000019c],ecx
cmp dword ptr [rdi+64],ecx
jmp return
code:
mov ecx,[Build_newmem]
  sub [rdi+64],ecx
  cmp dword ptr [rdi+64],00
  jmp return

Build_time:
  jmp Build_code
  db 90 90
return:
registersymbol(Build_time)

[DISABLE]
Build_time:
  db 29 4F 64 83 7F 64 00

unregistersymbol(Build_time)
dealloc(Build_code)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>83</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>237</ID>
      <Description>"Energy (v3.10.1)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Process: SC2_x64.exe
  Version: 3.10
  Date   : 2017-1-25
  Author : gameplayer
}

define(Skill_Energy,SC2_x64.exe+694A5C)
define(Drain_Energy,SC2_x64.exe+699231)
define(SEbytes,41 89 9E A0 01 00 00 3B DF 74 74 2B DF 74 70 85 F6 74 6C E8)
define(DEbytes,45 89 A7 A0 01 00 00 44 3B E7 74 73 44 2B E7 74 6E 85 DB 74 6A E8)

[ENABLE]
assert(Skill_Energy,SEbytes)
assert(Drain_Energy,DEbytes)
alloc(newmem,$800,SC2_x64.exe)

label(code)
label(return)
label(drain)
label(drain_code)
label(drain_return)

newmem:
cmp byte ptr [r14+3e],1
jne code
mov ebx,edi
code:
  mov [r14+000001A0],ebx
  jmp return
drain:
cmp byte ptr [r15+3e],1
jne drain_code
mov r12d,ebx
drain_code:
  mov [r15+000001A0],r12d
  jmp drain_return

Skill_Energy:
  jmp newmem
  db 90 90
return:
Drain_Energy:
  jmp drain
  db 90 90
drain_return:

[DISABLE]
Skill_Energy:
db SEbytes
Drain_Energy:
db DEbytes

dealloc(newmem)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>83</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>207</ID>
      <Description>"Remove Skill Cooldown (v3.10.1)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(Skill_cooldown,SC2_x64.exe,8B 00 29 43 18 44 39 73 18 7F 25)
alloc(Skill_newmem,$2000,Skill_cooldown)
aobscanmodule(Skill_A1,SC2_x64.exe,E8 ? ? ? ? 48 8B 47 50 4C 39 30 75 3B 48 8B CF E8)
aobscanmodule(Skill_A2,SC2_x64.exe,E8 ? ? ? ? 48 8B 9F ? ? 00 00 48 39 2B 75 32 48 85 DB 74 2D 48 8B CB E8)
aobscanmodule(Skill_A3,SC2_x64.exe,E8 ? ? ? ? 8B 87 ? ? ? ? 45 33 FF C1 E8 0E 48 89)

label(code)
label(open)
label(next)
label(exam)
label(active)
label(return)

Skill_newmem:
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
db 90 90 90 90 90 90 90 90
open:
mov rdx,Skill_A1+05
mov rcx,[rsp+48]
cmp rdx,[rsp+58]
jne exam
mov rcx,[rcx+18]
jmp next
exam:
mov rdx,Skill_A2+05
cmp rdx,[rsp+58]
je next
mov rdx,Skill_A3+05
cmp rdx,[rsp+58]
jne code
mov ecx,[ebx+18]
cmp ecx,005A0000
jg active
mov rcx,[rsp+000000e8]
cmp [rsp+000000f0],rcx
jne code
test rcx,07
jne code
next:
test rcx,rcx
jle code
mov edx,1
movzx ecx,byte ptr [rcx+3e]
cmp ecx,1
je active
and ecx,0F
shl edx,cl
mov ecx,[SC2_x64.exe+276DBC4]
test edx,ecx
je code
active:
mov rcx,[rsp+000000e0]
mov [Skill_newmem],rcx
mov rcx,[rsp+000000e8]
mov [Skill_newmem+08],rcx
mov rcx,[rsp+000000f0]
mov [Skill_newmem+10],rcx
mov rcx,[rsp+000000d8]
mov [Skill_newmem+18],rcx
mov rcx,[rsp+50]
mov [Skill_newmem+20],rcx
mov rcx,[rsp+58]
mov [Skill_newmem+28],rcx
mov rcx,[rsp+60]
mov [Skill_newmem+30],rcx
mov rcx,[rsp+48]
mov [Skill_newmem+38],rcx
xor eax,eax
mov [rbx+18],eax
jmp return
code:
  mov eax,[rax]
  sub [rbx+18],eax
  jmp return

Skill_cooldown:
  jmp open
return:
registersymbol(Skill_cooldown)
registersymbol(Skill_newmem)

[DISABLE]
Skill_cooldown:
  db 8B 00 29 43 18 44 39 73 18 7F 25

unregistersymbol(Skill_cooldown)
dealloc(Skill_newmem)
unregistersymbol(Skill_newmem)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>83</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>209</ID>
      <Description>"Freeze Resource Piles (v3.10.1)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(Resource_Pile,SC2_x64.exe,89 B7 8C 00 00 00 41 3B F1 74)
alloc(Resource_mem,$1000,Resource_Pile)

label(code)
label(return)

Resource_mem:
cmp [rdi+0000008C],0
jne return
code:
  mov [rdi+0000008C],esi
  jmp return

Resource_Pile:
  jmp Resource_mem
  db 90
return:
registersymbol(Resource_Pile)

[DISABLE]

Resource_Pile:
  db 89 B7 8C 00 00 00 41 3B

unregistersymbol(Resource_Pile)
dealloc(Resource_mem)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>83</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>235</ID>
      <Description>"Teamcode"</Description>
      <LastState Value="00000000" RealAddress="7FF78FB2DBC4"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>SC2_x64.exe+276DBC4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>249</ID>
      <Description>"Credits"</Description>
      <VariableType>8 Bytes</VariableType>
      <Address>SC2_x64.exe+29A7748</Address>
      <Offsets>
        <Offset>1c</Offset>
        <Offset>28</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>250</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>Skill_newmem</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>251</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>Skill_newmem+08</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>253</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>Skill_newmem+10</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>252</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>Skill_newmem+18</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>254</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>Skill_newmem+20</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>255</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>Skill_newmem+28</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>256</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>Skill_newmem+30</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>257</ID>
      <Description>"No description"</Description>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>8 Bytes</VariableType>
      <Address>Skill_newmem+38</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>UGMA</Name>
      <Address>009B2575</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>eUnit</Name>
      <Address>002B001C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMPR</Name>
      <Address>002B0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGMD</Name>
      <Address>002B0004</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableQKK</Name>
      <Address>002B0008</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMUE</Name>
      <Address>002B000C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Research_Cooldown</Name>
      <Address>00FC42E6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_quest</Name>
      <Address>0126750E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_UMACCSS</Name>
      <Address>01238A8D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_UBACCSS</Name>
      <Address>013B6200</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>y</Name>
      <Address>0BDB0115</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>p</Name>
      <Address>44C101E4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>x</Name>
      <Address>44C101E8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMap</Name>
      <Address>247A0244</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>God_</Name>
      <Address>00A8EF27</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Energy_</Name>
      <Address>00AACE8D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Cooldown_</Name>
      <Address>00AABAD5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bResources</Name>
      <Address>373E024F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMap</Name>
      <Address>373E0250</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pResources</Name>
      <Address>373E0251</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>rAmount</Name>
      <Address>373E0255</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>dwMapVal</Name>
      <Address>373E0259</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Damage_</Name>
      <Address>00A8EE87</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Resources_Address</Name>
      <Address>014A04DD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnabled_Resources</Name>
      <Address>00BEFE54</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mPoint</Name>
      <Address>02B90040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bySpudgy</Name>
      <Address>00970040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammolabel</Name>
      <Address>005B617C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>thrustlabel</Name>
      <Address>0050F7C6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>overheatlabel</Name>
      <Address>005B710C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>edgelabel</Name>
      <Address>0050F2EA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gmwanzerlabel</Name>
      <Address>00509DC4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hpaddresslab</Name>
      <Address>00D88023</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>0B3E00A9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUnit</Name>
      <Address>0B3E00AD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSel</Name>
      <Address>0B3E00B1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Research</Name>
      <Address>1408DF5DF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Shield</Name>
      <Address>13FB3B2B1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Research_test</Name>
      <Address>7FF7DD765313</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Skill_Delay</Name>
      <Address>7FF62CCB117D</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
