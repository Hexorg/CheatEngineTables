<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Resources"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(rsc1,??0FAF??????F7415C401C0000745F)
alloc(newmem,2048,rsc1)
label(returnhere)
label(originalcode)
label(exit)
registersymbol(rsc1)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [rbp+r14+08], 98967F
originalcode:
imul eax,[rbp+r14+08]

exit:
jmp returnhere

rsc1:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
rsc1:
imul eax,[rbp+r14+08]
//Alt: db 42 0F AF 44 35 08
unregistersymbol(rsc1)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <Description>Infinite Resources</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Zero Resources"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(zrsc1,??0FAF??????F7415C401C0000745F)
alloc(newmem,2048,zrsc1)
label(returnhere)
label(originalcode)
label(exit)
registersymbol(zrsc1)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [rbp+r14+08], 0
originalcode:
imul eax,[rbp+r14+08]

exit:
jmp returnhere

zrsc1:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
zrsc1:
imul eax,[rbp+r14+08]
//Alt: db 42 0F AF 44 35 08
unregistersymbol(zrsc1)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>113</Key>
          </Keys>
          <Description>Zero Resources</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Add Resources"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(arsc1,??0FAF??????F7415C401C0000745F)
alloc(newmem,2048,arsc1)
label(returnhere)
label(originalcode)
label(exit)
registersymbol(arsc1)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add dword ptr [rbp+r14+08], 1
originalcode:
imul eax,[rbp+r14+08]

exit:
jmp returnhere

arsc1:
jmp newmem
nop
returnhere:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
arsc1:
imul eax,[rbp+r14+08]
//Alt: db 42 0F AF 44 35 08
unregistersymbol(arsc1)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>114</Key>
          </Keys>
          <Description>Add Resources</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"http://deviatedhacking.com"</Description>
      <Color>80000008</Color>
      <VariableType>Array of byte</VariableType>
      <ByteLength>1</ByteLength>
      <Address>Made by</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>
</LuaScript>
</CheatTable>
