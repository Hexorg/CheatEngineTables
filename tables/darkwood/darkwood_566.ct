<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Player Script"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
alloc(newmem, 256)
label(returnhere)
label(originalcode)
label(stamina_check)

aobscan(player_aob,D9 47 64 D9 5D EC D9 45 EC D9 47 68)
registersymbol(player_aob)
label(player_ptr)
registersymbol(player_ptr)
label(health_en)
registersymbol(health_en)
label(stamina_en)
registersymbol(stamina_en)

player_aob:
jmp newmem
nop
returnhere:

newmem:
mov [player_ptr],edi
cmp [health_en],1
jne stamina_check
fld dword ptr [edi+68]
fstp dword ptr [edi+64]

stamina_check:
cmp [stamina_en],1
jne originalcode
fld dword ptr [edi+70]
fstp dword ptr [edi+6C]

originalcode:
db D9 47 64 D9 5D EC
jmp returnhere
//D9 47 64              - fld dword ptr [edi+64]
//D9 5D EC              - fstp dword ptr [ebp-14]

player_ptr:
dd 0

health_en:
dd 0

stamina_en:
dd 0

[disable]
player_aob:
db D9 47 64 D9 5D EC
//D9 47 64              - fld dword ptr [edi+64]
//D9 5D EC              - fstp dword ptr [ebp-14]
//D9 45 EC              - fld dword ptr [ebp-14]
//D9 47 68              - fld dword ptr [edi+68]

unregistersymbol(player_ptr)
unregistersymbol(health_en)
unregistersymbol(stamina_en)
unregistersymbol(player_aob)

dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Health Address"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>player_ptr</Address>
          <Offsets>
            <Offset>64</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"Stamina Address"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>player_ptr</Address>
          <Offsets>
            <Offset>6C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Enable Inf. Health"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>health_en</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Enable Inf. Stamina"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>stamina_en</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Toggle &gt;&gt; Enable Inf. Health"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
health_en:
dd 1

[disable]
health_en:
dd 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Toggle &gt;&gt; Enable Inf. Stamina"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
stamina_en:
dd 1

[disable]
stamina_en:
dd 0
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Inf. Item Durability (Current)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
alloc(newmem, 256)
label(returnhere)
label(originalcode)

aobscan(item_dur_aob,D9 47 24 D9 45 0C DE E9 D9 5F 24)
registersymbol(item_dur_aob)
label(item_dur_en)
registersymbol(item_dur_en)
label(item_dur_add)
registersymbol(item_dur_add)
label(item_dur_amt)
registersymbol(item_dur_amt)
label(item_dur_mul)
registersymbol(item_dur_mul)

item_dur_aob+06:
jmp newmem
returnhere:

newmem:
mov [item_dur_add],edi
cmp [item_dur_en],1
jne originalcode
fstp st(0)
fstp st(0)
fld dword ptr [item_dur_amt]
fld dword ptr [item_dur_mul]
fmulp st(1),st(0)
fstp dword ptr [edi+24]
jmp returnhere

originalcode:
db DE E9 D9 5F 24
jmp returnhere
//DEE9                  - fsubp st(1),st(0)
//D9 5F 24              - fstp dword ptr [edi+24]

item_dur_en:
dd 0

item_dur_add:
dd 0

item_dur_amt:
dd (float)100

item_dur_mul:
dd (float)20

[disable]
item_dur_aob+06:
db DE E9 D9 5F 24
//D9 47 24              - fld dword ptr [edi+24]
//D9 45 0C              - fld dword ptr [ebp+0C]
//DEE9                  - fsubp st(1),st(0)
//D9 5F 24              - fstp dword ptr [edi+24]

unregistersymbol(item_dur_en)
unregistersymbol(item_dur_add)
unregistersymbol(item_dur_amt)
unregistersymbol(item_dur_mul)
unregistersymbol(item_dur_aob)

dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Item Durability Address"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>item_dur_add</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Enable Inf. Item Durability"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>item_dur_en</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Inf. Item Durability Amount"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>item_dur_amt</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Toggle &gt;&gt; Enable Inf. Item Durability"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
item_dur_en:
dd 1

[disable]
item_dur_en:
dd 0
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Item"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
alloc(newmem, 128)
label(returnhere)
label(originalcode)

aobscan(item_pick_aob,D9 47 24 D9 5E 24 8B 47 28 89 46 28)
registersymbol(item_pick_aob)
/*
label(item_pick_en)
registersymbol(item_pick_en)
*/
label(item_pick_add)
registersymbol(item_pick_add)

item_pick_aob+06:
jmp newmem
nop
returnhere:

newmem:
mov [item_pick_add],esi
/*
cmp [item_pick_en],1
jne originalcode
fld dword ptr [stamina_amt]
fstp dword ptr [edi+28]
jmp returnhere
*/

originalcode:
db 8B 47 28 89 46 28
jmp returnhere
/*
10741D44 - 8B 47 28              - mov eax,[edi+28]
10741D47 - 89 46 28              - mov [esi+28],eax
*/
/*
item_pick_en:
dd 1
*/
item_pick_add:
dd 0

[disable]
item_pick_aob+06:
db 8B 47 28 89 46 28
/*
10741D3E - D9 47 24              - fld dword ptr [edi+24]
10741D41 - D9 5E 24              - fstp dword ptr [esi+24]
10741D44 - 8B 47 28              - mov eax,[edi+28]
10741D47 - 89 46 28              - mov [esi+28],eax
*/

//unregistersymbol(item_pick_en)
unregistersymbol(item_pick_add)
unregistersymbol(item_pick_aob)

dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Item Amount Address"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>item_pick_add</Address>
          <Offsets>
            <Offset>28</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>220</Key>
              </Keys>
              <Value>5</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Item Ammo Amount"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>item_pick_add</Address>
          <Offsets>
            <Offset>2C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"Weapon Ammo (Current)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
alloc(newmem, 128)
label(returnhere)
label(originalcode)

aobscan(weap_ammo_aob,8B 87 7C 01 00 00 8B 48 2C 49 89 48 2C)
registersymbol(weap_ammo_aob)
label(weap_ammo_en)
registersymbol(weap_ammo_en)
label(weap_ammo_add)
registersymbol(weap_ammo_add)
label(weap_ammo_amt)
registersymbol(weap_ammo_amt)

weap_ammo_aob+06:
jmp newmem
db 90 90
returnhere:

newmem:
mov [weap_ammo_add],eax
cmp [weap_ammo_en],1
jne originalcode
mov ecx,[weap_ammo_amt]
mov [eax+2C],ecx
jmp returnhere

originalcode:
db 8B 48 2C 49 89 48 2C
jmp returnhere
/*
10EB601C - 8B 48 2C              - mov ecx,[eax+2C]
10EB601F - 49                    - dec ecx
10EB6020 - 89 48 2C              - mov [eax+2C],ecx
*/

weap_ammo_en:
dd 0

weap_ammo_add:
dd 0

weap_ammo_amt:
dd #9

[disable]
weap_ammo_aob+06:
db 8B 48 2C 49 89 48 2C
/*
10EB6016 - 8B 87 7C010000        - mov eax,[edi+0000017C]
10EB601C - 8B 48 2C              - mov ecx,[eax+2C]
10EB601F - 49                    - dec ecx
10EB6020 - 89 48 2C              - mov [eax+2C],ecx
*/

unregistersymbol(weap_ammo_en)
unregistersymbol(weap_ammo_add)
unregistersymbol(weap_ammo_amt)
unregistersymbol(weap_ammo_aob)

dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Weapon Ammo Address"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>weap_ammo_add</Address>
          <Offsets>
            <Offset>2C</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>221</Key>
              </Keys>
              <Value>10</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Enable Inf. Weapon Ammo"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>weap_ammo_en</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Inf. Weapon Ammo Amount"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>weap_ammo_amt</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Toggle &gt;&gt; Enable Inf. Weapon Ammo"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
weap_ammo_en:
dd 1

[disable]
weap_ammo_en:
dd 0
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"Last Item Used"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
alloc(newmem, 128)
label(returnhere)
label(originalcode)

aobscan(curr_item_aob,8B 75 08 8B 46 28 2B 45 0C 89 46 28)
registersymbol(curr_item_aob)
label(curr_item_en)
registersymbol(curr_item_en)
label(curr_item_add)
registersymbol(curr_item_add)

curr_item_aob+03:
jmp newmem
nop
returnhere:

newmem:
mov [curr_item_add],esi
cmp [curr_item_en],1
jne originalcode
mov [ebp+0C],0

originalcode:
db 8B 46 28 2B 45 0C
jmp returnhere
/*
10E85C1B - 8B 46 28              - mov eax,[esi+28]
10E85C1E - 2B 45 0C              - sub eax,[ebp+0C]
*/

curr_item_en:
dd 0

curr_item_add:
dd 0

[disable]
curr_item_aob+03:
db 8B 46 28 2B 45 0C
/*
10E85C18 - 8B 75 08              - mov esi,[ebp+08]
10E85C1B - 8B 46 28              - mov eax,[esi+28]
10E85C1E - 2B 45 0C              - sub eax,[ebp+0C]
10E85C21 - 89 46 28              - mov [esi+28],eax
*/

unregistersymbol(curr_item_en)
unregistersymbol(curr_item_add)
unregistersymbol(curr_item_aob)

dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Item Amount Address"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>curr_item_add</Address>
          <Offsets>
            <Offset>28</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>219</Key>
              </Keys>
              <Value>10</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Enable Item Amount No Decrease"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>curr_item_en</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Toggle &gt;&gt; Enable Item Amount No Decrease"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
curr_item_en:
dd 1

[disable]
curr_item_en:
dd 0
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
