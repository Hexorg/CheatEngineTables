<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="13">
  <CheatEntries>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Instant Hint"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov byte ptr [eax+000000A0],00

exit:
jmp returnhere

"4-Elements.exe"+C0F1F:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"4-Elements.exe"+C0F1F:
mov byte ptr [eax+000000A0],01
//Alt: db C6 80 A0 00 00 00 01
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Inf time"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fstp st
fld dword ptr [esi+000000B0]
fst dword ptr [esi+000000B4]

exit:
jmp returnhere

"4-Elements.exe"+1376B7:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"4-Elements.exe"+1376B7:
fst dword ptr [esi+000000B4]
//Alt: db D9 96 B4 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Instant Power"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

//*******
alloc(newmem2,500)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
mov bl,1
mov [eax+3C],bl
fstp dword ptr [eax+48]

exit2:
jmp returnhere2

"4-Elements.exe"+1559A0:
jmp newmem2
nop
returnhere2:

//******
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,500) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov byte ptr [esi+3C],01
cmp byte ptr [esi+3C],00
fstp dword ptr [esi+00000080]

exit:
jmp returnhere

"4-Elements.exe"+13494E:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"4-Elements.exe"+13494E:
cmp byte ptr [esi+3C],00
fstp dword ptr [esi+00000080]
//Alt: db 80 7E 3C 00 D9 9E 80 00 00 00

dealloc(newmem2)
"4-Elements.exe"+1559A0:
mov [eax+3C],bl
fstp dword ptr [eax+48]
//Alt: db 88 58 3C D9 58 48
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
