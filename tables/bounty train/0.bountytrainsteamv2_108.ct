<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <Files>
    <junk_150828.lua Encoding="Ascii85">y%{w9)?1+1QmOx8(JfwAlWbFZNEa_mw{llt3KevvmAc*=u[uke8C$kf,T-ZoxxabOGw/Uxg-WOEF3G$,Z{Ys+/UfD:;8I[j.gDRgZdviF=V45Ak$G^oy*_F*tSc%]aO2:$]rE71/M.30e=0y0]^8L,r%k$K9cx-j,H2mWSJ^GPpDSKo$J/,k42M{-mMkY/7L2n=*^vBwbk$WPZCkdSm9WxgO.LA+?vK@LBt@OfBR-#*lm%zoTau;bIw4sJlsHUD*z{HekG4*THn9LC?/7Ze*@xj7!([2t6ptt,/ZNy?mld3bWYkBuyd,eX0BXT6Mu3;R8VYD2lv2zACgDYi2j#ee%s.JKR5^OKwP;ZB,glHicw(jbiec/88!3]7gehnVgy@E,b:54;j+OAFT@0DjXr#[;H!OA7byei!N:{M@m=$l;vSs;6.vn#UN.cYrS6zzk1?wJ,[X0sso=j]nUClg=8(i?E$0)a!-2_KM0Q5t/BB-M[H)F}VttIRgWjAQB+s(NPRu3EHli}pzVjb?u5,WC=P=uvEKI;6,ok8I7TyXwBm_Sv[.wAVo0Sjge68tr2A4j8M3{24_5gUe.8Eu5MJgwv04)r4wQcW.bP0@l+IE?TCCGP2zVFgCA;zcM/m/b3NoCc=miv$dDPd+xfdpOF1If3,5:IGF5#;gCUSsr-WkrK]eR[01Xfj)t=wR_mBr7%V]1u7j6Qdjg*uWXX]PWcvT3)[e8T,ys;*qLKvu1(svvugzo:fJ+5([5,Q$tx2Za@/WzA4(9@WY-H5Mf9u;cb=c4l,kh9HLbN)*3F;Z%C3{fC^YHvn$(60w2?+G8@O91ip!_rEo-^SK=fg+4Fe5@]z{!I??]nWD!U_51wpw1X!K7W@zB.wOBDgo%R]6Y3s*ruG.tu##@:M]XA,rcp7IM:T=#oTxIRM)9Bz*T]dC6hxn(LL?HEPDt=vm^oJ#[b3nYw*U2RciN7)FfRtlOB.Qs)r.gQ?KpWisu?4,U8AmC8404SLTABgfVa{xM:M:H*lVRMO$0Y,}krb;i.=W]-*Raq{S]pB?:Dp)Y$T}uF:S:+*.ERry;#uLFQ+S5C:#T9SZMbSd4K7dZ;KsQ2%*pD6a4GO(02Tyk(aC(Q[CZsW},@pz02pgGH11Tjqef9A*5H][5hoO!V0D.!/eGNTae$rGKAip[@.@!+TofM:o*Jm5(fcU0.y8mm?K@F%ClQ5r:r}4shG#ozJ3zc5Bw{4OToG{Wtq$pe+$gD?cr$2:R.DYRr0aG:IwfS#vhaD{-GCpbR5^{lgn*2iHiq1}TwBTB=-F3{iubjs;NhlG-!EtF*G9JZAPlsQ;X%zxVl4uGw02%[QMchRV)oob(V69,rh];-*W}]CGxQ5Wfu;ck#0(P72%x1-$j7K;wVE@kkI.La0p3*ht3fV:sgoiHN6MtD0B[pW{Z[OC%flf5d89!GPu;C1$DjFow,n[+Xhm2KWf$7Xnzsp,c0BOLNJg0U:.7MGju@X7i[dMGok7L#=s^A0(n[sU#78g7P1m-jo[5!dJkYd/sK+0nrIZ#:o4b6[VBn:9FnU*2ZQ{4;A)?c{#FUU{4I:R3T1kVC/nQ.0ZION98XRYxOGRc19#yX3;ASIh4TQZbKUh89_(U%fEV5Ja^nW$xg+F({Xe7uR9u3H,=Z9J@n)S.R(=k2nzL@TnhMXe)VJ%tFjrgbRDVJxzM[;)m!6t},,I2u^rPz=U/ng{b*rRWxMDb@xjmW8=OU;#?h/TP$6*mklUh$kiMt;Q?{r7ORA5,BB*7grIFHFbUC5jU,U9PIA;5mK)wr9qK5-;AJ[)iDQgv!,.Zl8mq)E,*uH=Di?[sK_ltfZ{KbiEA]MKp4ih0vPUTIz:U%rbT({Ua{^9QA@v+DOe%a1er]Tox+M^UuZ%@:_RCVyQ-nzAoKJyBOuhQDz)8C2]%%q12Lu/$Pv:rtG)UbUF8}HOf;Ax5pCEJ15PBsE6Ukl@n3=zDG.qVALMd_%q75dke(}_JQk}RWq0[GbT}g4zE,r$k=MKGC9j/Xv}[}N/]j+zC@5=@2NP+S$O8UI#rVyU8Or5HLF@G1l=-Tim2^A):CPds3um=^V;iRq,}#{$w39[CFV3/Xsxkh$N[q^FM?5+6D-jPs/e93zMl4_(S1u]vNUAXMnst]2rm33u^B2czUe(L]ZW!A06xv5eW$1Vy3WPuAchL)0B?sKfp[^BJ?e-ojdFd@dnynd?plP8H=1hhczav[ucyKBYzz}FROHMyZ)I8R=+??^.@]$^yayhSE#,LP{UC=D,*v]yx3z=g%!OH%^.!^%dA,,.yO]t.-LvQsG)b/[!Xv@vnvl,BgXKYsQ4E^Lxcl0U,5V;:HPWN}A9}Tt/#hOo51DoW3%jEGV^I_33,E$zhj#G0mFDh2vDzl1bz*]9TZx-SfAO6Whi3Iw*0__E5k#xW)].TkBvoBf(VfOVy^][.9(R7{Q,yx;FK=xkp8!AoAY6^)g+:Y,iOhxAlzM^bP4Gw7U/y[BDV?h3WyDg-0clX6ba=s+uU%ki)SfM(3D;W1X$RSGEuryz=Wi*8%0Mp.6C2S4a9VGhl/wOZ/59FW69!H%/!e^{7@+sT#,_/fpg.O#Mmyq?}NmzbeMJCN+s;E$Hsh4ndhR^^^db#-]*T?Q{x*1rdKXxtZ.n1}m=B6Ks,S{H),PduF?zM0.gyPr10X.tW?XzVn-[[vY/1syae_-Gv-Rbn;;A^CnGkf+!2z,{=[vjP4PybGzdM^}*dD@t;Ef)sMX3HF@I=Fny,aot2mTvDI8oY@U;%]NY,#Eu0Vp41w,jrnnmDdnoAO}LukIGd#[:eArVeB.?]h;POyA3.Smz%LcEq7wCqj@fa1NYk/xTtc2sV+1GoQfiix(nKYrpM@FFoP%;!60@C(JE(C=-vh)bb%UtPRi.F1d7]$!*lT@#=(CUx68]AJV7?##_BCC1Xxp7d.vaR;bEppTK6se5aeCy)4AH:()khd+YeRJHZh+;7kmnaruYpl^gOeCBO6gFMDX6Ps}oPARbI;smP1w[owBP:Ju!%4U^P!yd5BoCcU!]hUJ:Ib5SPW9o?ZP/i]5-oBi*D!F_e[QWFqdvUbj%#o/*)0y%lFB$ve?c5U].#?q$W{3X:}A5R.DHT/a@SgeaBhA4[f[jG@REyAN@wGIASjKi:+ox$g,yV{L:}BmX0$=@KLT#rKdJtd6[a[#C@L/jKkXNa9b$M8,Rku!i-o,])h?2cZeoiseMjp/51}2Tq/wXM/bKi)r$-X]j:%BuN6[w{W1GQQa1H*oZs:Nm]aUEwPdLIs9Qak4d7o=Ct(8d)QKjV+4rM-+XO=GGzc]h{vb7+xY32^A%c;I4!HnW5Pvf+e:^3uPTtJu{MHD%t]2LTLgQ(^[@15-QXy^IQGydi{iiV9M$STq@]v8hDBNw]A:PSL_)iN%FC4s!?JxF%-DY:k@g{;*89rXC){1a/R(4uS}:$ttrl3.018SQ8nBb5DyxeXi!@ks[!.bk,;O_4s^sGM</junk_150828.lua>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"BountyTrainSteam (1st)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
if syntaxcheck==true then return '' end
--

-- common function
function loadTableFile(n,mode)
  local hdr = 'loadTableFile: '
  assert(type(n)=='string',hdr.."input should be a string -"..tostring(n).." of "..type(n))
  local m = assert(findTableFile(n),hdr.."can't find table file -"..n).Stream
  m = assert(readStringLocal(m.Memory,m.Size),hdr.."can't read content -"..n)
  if type(mode)~='boolean' then return m end
  m = assert(loadstring(m,n),hdr.."lua script load fail -"..n)
  return mode and m() or m
end


loadTableFile("junk_150828.lua",true)


{$asm}
usemono()
[ENABLE]
globalalloc(__,$4000)
__:
dq __
__+08:
BitNess()

[DISABLE]

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>8</ID>
          <Description>"32-bit"</Description>
          <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>assert(__+08,32)
[ENABLE]

[DISABLE]

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>25</ID>
              <Description>"DISABLE Unittest Assertion (2nd)"</Description>
              <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
              <LastState Activated="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
local eqFloat  = findMethodAddrBySignature("","Assert","AreEqual","single")
local eqObject = findMethodAddrBySignature("","Assert","AreEqual","object")
--print(tostring(eqFloat) ,tostring( eqObject))
assert(eqFloat and eqObject)
return define('assert1',eqFloat).."\n"..define('assert2',eqObject)
{$asm}


//getmonostruct(Train)
define(assert3,"Assert:AreNotEqual")
define(assert4,"Assert:IsNotNull")
define(assert5,"Assert:IsNotTrue")
define(assert6,"Assert:IsNull")
define(assert7,"Assert:IsTrue")
[ENABLE]
assert(assert1,55)
assert1:
ret
assert(assert2,55)
assert2:
ret
assert(assert3,55)
assert3:
ret
assert(assert4,55)
assert4:
ret
assert(assert5,55)
assert5:
ret
assert(assert6,55)
assert6:
ret
assert(assert7,55)
assert7:
ret

 
[DISABLE]
assert1:
push ebp

assert2:
push ebp

assert3:
push ebp

assert4:
push ebp

assert5:
push ebp

assert6:
push ebp

assert7:
push ebp


</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>36</ID>
              <Description>"coal burn efficiency"</Description>
              <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
              <LastState Activated="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>usemono()
getmonostruct(Train)
define(dist,"Train:GetSpendedCoal")
[ENABLE]
assert(dist,55 8b ec 83 ec 08)

alloc(_distance,$200,dist)

_distance:
dd _distance
_distance+10:
dd (float)10


_distance+20:
monoTailCave32(1,"Train:GetSpendedCoal",6)

fdiv dword ptr[_distance+10]

pop  ebp
ret

dist:
jmp  _distance+20

registersymbol(_distance)

[DISABLE]
dist:
db 55 8b ec 83 ec 08

dealloc(_distance)
unregistersymbol(_distance)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>33</ID>
                  <Description>"factor (no 0 or negative)"</Description>
                  <LastState Value="10" Activated="0" RealAddress="36C10010"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>_distance</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"Goods Selling Factor x10 v2"</Description>
              <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
              <LastState Activated="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>usemono()
getmonostruct(EconomyGoods)
define(sell,"EconomyGoods:get_PriceSell")
//define(ratio,"EconomyGoods.PriceSellRatio")
//define(ofsHp,"CharacterModifiersContext.hpModifier")
[ENABLE]
assert(sell,55 8b ec 57 83 ec ?? 8b 7d 08)
//          --------------------
alloc(_sell,$100,sell)

_sell:
dq _sell

_sell+10:
dd (float)10
_sell+20:     // save
readmem(sell,7)


_sell+40: //free eax edi
monoTailCave32(1,"EconomyGoods:get_PriceSell",7)


//   hack start

fmul dword ptr [_sell+10]

pop  ebp   //--- must use these to return original caller
ret        //---


sell:
jmp _sell+40
nop
nop

registersymbol(_sell)

[DISABLE]
sell:
readmem(_sell+20,7)

dealloc(_sell)
unregistersymbol(_sell)





















</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>29</ID>
                  <Description>"mul"</Description>
                  <LastState Value="100" Activated="0" RealAddress="05210010"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>_sell</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>26</ID>
              <Description>"player group time scale x8 + hp regen"</Description>
              <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
              <LastState Activated="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>getmonostruct(Character)
define(upd,"Character:Update")
define(own,"Character:get_IsOwnedByPlayer")
define(regen,"Character:AcceptFix")
//define(ofsHp,"CharacterModifiersContext.hpModifier")
[ENABLE]
assert(upd,55 8b ec 57 56)

alloc(_cupd,$100,upd)

_cupd:
dq _cupd

_cupd+10:
dd (float)8

//label(_done)
_cupd+40: //free eax edi
readmem(upd,5)
mov  edi,[ebp+08]
sub  esp,0c
push edi               // this
call own
add  esp,10
test eax,eax
je   @f
fld  dword ptr[ebp+0c] // dt
fmul dword ptr[_cupd+10]
fstp dword ptr[ebp+0c]

sub  esp,04
push 0
sub  esp,04
fld1
fstp dword ptr [esp]
push edi
call regen
add  esp,10
fstp st(0)

@@:
jmp upd+05

upd:
jmp _cupd+40

registersymbol(_cupd)

[DISABLE]
upd:
db 55 8b ec 57 56

dealloc(_cupd)
unregistersymbol(_cupd)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"mul"</Description>
                  <LastState Value="8" Activated="0" RealAddress="05220010"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>_cupd</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>30</ID>
              <Description>"carriage time scale x8 + hp regen"</Description>
              <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
              <LastState Activated="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>getmonostruct(Carriage)
define(upd,"Carriage:Update")
//define(own,"Character:get_IsOwnedByPlayer")
define(regen,"Carriage:AcceptFix")
//define(ofsHp,"CharacterModifiersContext.hpModifier")
[ENABLE]
assert(upd,55 8b ec 53 57)

alloc(_vupd,$100,upd)

_vupd:
dq _vupd

_vupd+10:
dd (float)8

//label(_done)
_vupd+40: //free eax edi
readmem(upd,5)
mov  edi,[ebp+08]

fld  dword ptr[ebp+0c] // dt
fmul dword ptr[_vupd+10]
fstp dword ptr[ebp+0c]

sub  esp,04
push 0
sub  esp,04
fld1
fstp dword ptr [esp]
push edi
call regen
add  esp,10
fstp st(0)

@@:
jmp upd+05

upd:
jmp _vupd+40

registersymbol(_vupd)

[DISABLE]
upd:
db 55 8b ec 53 57

dealloc(_vupd)
unregistersymbol(_vupd)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>31</ID>
                  <Description>"mul"</Description>
                  <LastState Value="8" Activated="0" RealAddress="051D0010"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>_vupd</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1</ID>
              <Description>"userTrain ptr"</Description>
              <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
              <LastState Activated="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>//getmonostruct(Train)
define(usr,"ActionSceneController:OnFiniGameScene")
[ENABLE]
assert(usr+06,8b)
__+40:
readmem(usr+08,4)

//__+48:
//dq [[usr+08]+0]
 
 
[DISABLE]


</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>16</ID>
                  <Description>"Base Pointer (no edit or freeze)"</Description>
                  <LastState Value="76" Activated="0" RealAddress="29581C80"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>__</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>0</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>17</ID>
                      <Description>"time"</Description>
                      <LastState Value="0" Activated="0" RealAddress="29581CE8"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>+68</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>20</ID>
                      <Description>"traversedMeters"</Description>
                      <LastState Value="0" Activated="0" RealAddress="29581CEC"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>+6c</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>21</ID>
                      <Description>"acceleration"</Description>
                      <LastState Value="0" Activated="0" RealAddress="29581CF0"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>+70</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>22</ID>
                      <Description>"_speed"</Description>
                      <LastState Value="0" Activated="0" RealAddress="29581D00"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>+80</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>23</ID>
                      <Description>"_lastmaxSpeed"</Description>
                      <LastState Value="8.415629387" Activated="0" RealAddress="29581D08"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>+88</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>19</ID>
                      <Description>"_mass"</Description>
                      <LastState Value="116450" Activated="0" RealAddress="29581D0C"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>+8c</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>24</ID>
                      <Description>"carriage count"</Description>
                      <LastState Value="6" Activated="0" RealAddress="3B969CFC"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+50</Address>
                      <Offsets>
                        <Offset>C</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"64-bit (empty)"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>assert(__+08,64)
[ENABLE]

[DISABLE]

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>9</ID>
              <Description>"userTrain ptr"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(usr,"Train:Destroy")
[ENABLE]

__+40:
dq usr

 
 
[DISABLE]

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>__</Name>
      <Address>045F0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
