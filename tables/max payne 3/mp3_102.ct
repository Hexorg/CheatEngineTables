<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Painkillers"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(othercode)
label(returnhere2)
label(code1)
label(code2)
registersymbol(code1)
registersymbol(code2)

aobscan(code1aob,0F 57 C0 FF 0E D9) //painkiller
aobscan(code2aob,0F 57 C0 89 01 F3) //painkiller - autouse when down

newmem:

//painkiller
xorps xmm0,xmm0
cmp [esi],2
jge +3
mov byte ptr [esi],2
dec [esi]
jmp returnhere

//painkiller - autouse when down
othercode:
xorps xmm0,xmm0
cmp eax,1
jge +2
mov al,1
mov [ecx],eax
jmp returnhere2

code1aob:
code1://painkiller
jmp newmem
returnhere:

code2aob:
code2://painkiller - autouse when down
jmp othercode
returnhere2:

[DISABLE]
code1://painkiller
//Alt: xorps xmm0,xmm0
//Alt: dec [esi]
db 0F 57 C0 FF 0E D9

code2://painkiller - autouse when down
//Alt: xorps xmm0,xmm0
//Alt: mov [ecx],eax
db 0F 57 C0 89 01 F3

dealloc(newmem)

unregistersymbol(code1)
unregistersymbol(code2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Bullets (ammo)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(bulletscode)
registersymbol(bulletscode)
aobscan(bulletscodeAOB, 89 4C 86 40 5E)

newmem:
mov [esi+eax*4+40],ecx
cmp [esi+eax*4+40],5
jge +5
mov byte ptr [esi+eax*4+40],5
pop esi
jmp returnhere

bulletscodeAOB:
bulletscode:
jmp newmem
returnhere:

[DISABLE]
bulletscode:
//Alt: mov [esi+eax*4+40],ecx
//Alt: pop esi
db 89 4C 86 40 5E

dealloc(newmem)

unregistersymbol(bulletscode)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
