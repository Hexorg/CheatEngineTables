<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>37</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthReadAOB,89 44 24 20 C7 44 24 14 00 00 00 00)
registersymbol(healthReadAOB)
aobscan(moneyReadOnMenuAccessAOB,8B 38 83 EC 18 8B D7 8B CC)
registersymbol(moneyReadOnMenuAccessAOB)
aobscan(item1ReadOnMenuAccessAOB,8D 46 18 50 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC)
registersymbol(item1ReadOnMenuAccessAOB)
aobscan(keyReadOnMenuAccessAOB,56 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC E8 ** ** ** ** 33 C9 ** ** ** ** ** ** ** ** ** ** 8B 16)
registersymbol(keyReadOnMenuAccessAOB)
aobscan(item4ReadOnMenuAccessAOB,56 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC E8 ** ** ** ** 33 C9 ** ** ** ** ** ** ** ** ** ** 8B 06)
registersymbol(item4ReadOnMenuAccessAOB)
aobscan(fireflyReadOnMenuAccessAOB,8D 44 24 50 50 B9 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC E8)
registersymbol(fireflyReadOnMenuAccessAOB)
aobscan(item2ReadOnMenuAccessAOB,8D 46 30 50 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC)
registersymbol(item2ReadOnMenuAccessAOB)
aobscan(item3ReadOnMenuAccessAOB,8D 46 48 50 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC)
registersymbol(item3ReadOnMenuAccessAOB)
aobscan(sCoinReadOnMenuAccessAOB,8D 46 60 50 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC)
registersymbol(sCoinReadOnMenuAccessAOB)

label(pHealth)
registersymbol(pHealth)
label(pMoney)
registersymbol(pMoney)
label(pItem1)
registersymbol(pItem1)
label(pKey)
registersymbol(pKey)
label(pItem4)
registersymbol(pItem4)
label(pFirefly)
registersymbol(pFirefly)
label(pItem2)
registersymbol(pItem2)
label(pItem3)
registersymbol(pItem3)
label(pSCoin)
registersymbol(pSCoin)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)

label(newmem17)
label(returnhere17)
label(originalcode17)
label(exit17)

label(newmem24)
label(returnhere24)
label(originalcode24)
label(exit24)

label(newmem32)
label(returnhere32)
label(originalcode32)
label(exit32)

label(newmem41)
label(returnhere41)
label(originalcode41)
label(exit41)

label(newmem51)
label(returnhere51)
label(originalcode51)
label(exit51)

///

alloc(newmem2,2048)
label(cDoMinHealth)
registersymbol(cDoMinHealth)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMoney],eax

originalcode:
mov edi,[eax]
sub esp,18

exit:
jmp returnhere

///

newmem6:
mov [pItem1],eax

originalcode6:
mov edx,[eax]
sub esp,18

exit6:
jmp returnhere6

///

newmem11:
mov [pKey],eax

originalcode11:
mov edx,[eax]
sub esp,18

exit11:
jmp returnhere11

///

newmem17:
mov [pItem4],eax

originalcode17:
mov edx,[eax]
sub esp,18

exit17:
jmp returnhere17

///

newmem24:
mov [pFirefly],eax

originalcode24:
mov edx,[eax]
sub esp,18

exit24:
jmp returnhere24

///

newmem32:
mov [pItem2],eax

originalcode32:
mov edx,[eax]
sub esp,18

exit32:
jmp returnhere32

///

newmem41:
mov [pItem3],eax

originalcode41:
mov edx,[eax]
sub esp,18

exit41:
jmp returnhere41

///

newmem51:
mov [pSCoin],eax

originalcode51:
mov edx,[eax]
sub esp,18

exit51:
jmp returnhere51

///
pMoney:
dd 0
pItem1:
dd 0
pKey:
dd 0
pItem4:
dd 0
pFirefly:
dd 0
pItem2:
dd 0
pItem3:
dd 0
pSCoin:
dd 0
///

///
///

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cDoMinHealth:
push eax
mov eax,[esp+8]
cmp eax,2
jge exit2
mov eax,2
mov [esp+8],eax

exit2:
pop eax
ret

///
///

[healthReadAOB-4]: //["FindingTeddy2.exe"+11EF63]:
pHealth:

moneyReadOnMenuAccessAOB: //"FindingTeddy2.exe"+159F82:
jmp newmem
returnhere:

item1ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A068:
jmp newmem6
returnhere6:

keyReadOnMenuAccessAOB+b: //"FindingTeddy2.exe"+159F12:
jmp newmem11
returnhere11:

item4ReadOnMenuAccessAOB+b: //"FindingTeddy2.exe"+15A3DD:
jmp newmem17
returnhere17:

fireflyReadOnMenuAccessAOB+1a: //"FindingTeddy2.exe"+159503:
jmp newmem24
returnhere24:

item2ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A191:
jmp newmem32
returnhere32:

item3ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A2BA:
jmp newmem41
returnhere41:

sCoinReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A502:
jmp newmem51
returnhere51:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(newmem2)
unregistersymbol(healthReadAOB)
moneyReadOnMenuAccessAOB: //"FindingTeddy2.exe"+159F82:
db 8B 38 83 EC 18
//Alt: mov edi,[eax]
//Alt: sub esp,18
unregistersymbol(moneyReadOnMenuAccessAOB)
item1ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A068:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(item1ReadOnMenuAccessAOB)
keyReadOnMenuAccessAOB+b: //"FindingTeddy2.exe"+159F12:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(keyReadOnMenuAccessAOB)
item4ReadOnMenuAccessAOB+b: //"FindingTeddy2.exe"+15A3DD:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(item4ReadOnMenuAccessAOB)
fireflyReadOnMenuAccessAOB+1a: //"FindingTeddy2.exe"+159503:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(fireflyReadOnMenuAccessAOB)
item2ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A191:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(item2ReadOnMenuAccessAOB)
item3ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A2BA:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(item3ReadOnMenuAccessAOB)
sCoinReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A502:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(sCoinReadOnMenuAccessAOB)

unregistersymbol(cDoMinHealth)

unregistersymbol(pHealth)
unregistersymbol(pMoney)
unregistersymbol(pItem1)
unregistersymbol(pKey)
unregistersymbol(pItem4)
unregistersymbol(pFirefly)
unregistersymbol(pItem2)
unregistersymbol(pItem3)
unregistersymbol(pSCoin)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Undead"</Description>
          <LastState Activated="0"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(someHealthWrite1AOB,85 C9 0F 48 C8 89 0D ** ** ** ** 5D C2 04 00)
registersymbol(someHealthWrite1AOB)
aobscan(someHealthWrite2AOB,85 C9 0F 48 C8 89 0D ** ** ** ** 5B 5E C3)
registersymbol(someHealthWrite2AOB)
aobscan(someHealthWrite3AOB,85 C9 0F 48 C8 89 0D ** ** ** ** 6A 01 8B CE)
registersymbol(someHealthWrite3AOB)
aobscan(someHealthWrite4AOB,85 C9 0F 48 C8 89 0D ** ** ** ** 6A 01 8B CF)
registersymbol(someHealthWrite4AOB)
aobscan(someHealthWrite5OnHitAOB,85 C9 0F 48 C8 89 0D ** ** ** ** 38 45 0C)
registersymbol(someHealthWrite5OnHitAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)

alloc(newmem17,2048)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx//
cmovs ecx,eax//
push ecx
call cDoMinHealth
pop ecx

originalcode:
//test ecx,ecx
//cmovs ecx,eax

exit:
jmp returnhere

///

newmem2:
test ecx,ecx//
cmovs ecx,eax//
push ecx
call cDoMinHealth
pop ecx

originalcode2:
//test ecx,ecx
//cmovs ecx,eax

exit2:
jmp returnhere2

///

newmem6:
test ecx,ecx//
cmovs ecx,eax//
push ecx
call cDoMinHealth
pop ecx

originalcode6:
//test ecx,ecx
//cmovs ecx,eax

exit6:
jmp returnhere6

///

newmem11:
test ecx,ecx//
cmovs ecx,eax//
push ecx
call cDoMinHealth
pop ecx

originalcode11:
//test ecx,ecx
//cmovs ecx,eax

exit11:
jmp returnhere11

///

newmem17:
test ecx,ecx//
cmovs ecx,eax//
push ecx
call cDoMinHealth
pop ecx

originalcode17:
//test ecx,ecx
//cmovs ecx,eax

exit17:
jmp returnhere17

///

someHealthWrite1AOB: //"FindingTeddy2.exe"+88ABA:
jmp newmem
returnhere:

someHealthWrite2AOB: //"FindingTeddy2.exe"+13AE64:
jmp newmem2
returnhere2:

someHealthWrite3AOB: //"FindingTeddy2.exe"+1858EB:
jmp newmem6
returnhere6:

someHealthWrite4AOB: //"FindingTeddy2.exe"+185E18:
jmp newmem11
returnhere11:

someHealthWrite5OnHitAOB: //"FindingTeddy2.exe"+188F9D:
jmp newmem17
returnhere17:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
someHealthWrite1AOB: //"FindingTeddy2.exe"+88ABA:
db 85 C9 0F 48 C8
//Alt: test ecx,ecx
//Alt: cmovs ecx,eax
unregistersymbol(someHealthWrite1AOB)
someHealthWrite2AOB: //"FindingTeddy2.exe"+13AE64:
db 85 C9 0F 48 C8
//Alt: test ecx,ecx
//Alt: cmovs ecx,eax
unregistersymbol(someHealthWrite2AOB)
someHealthWrite3AOB: //"FindingTeddy2.exe"+1858EB:
db 85 C9 0F 48 C8
//Alt: test ecx,ecx
//Alt: cmovs ecx,eax
unregistersymbol(someHealthWrite3AOB)
someHealthWrite4AOB: //"FindingTeddy2.exe"+185E18:
db 85 C9 0F 48 C8
//Alt: test ecx,ecx
//Alt: cmovs ecx,eax
unregistersymbol(someHealthWrite4AOB)
someHealthWrite5OnHitAOB: //"FindingTeddy2.exe"+188F9D:
db 85 C9 0F 48 C8
//Alt: test ecx,ecx
//Alt: cmovs ecx,eax
unregistersymbol(someHealthWrite5OnHitAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"Inf. Double Jump"</Description>
          <LastState Activated="0"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(chkDoubleJumpFlagAOB,38 87 DC 03 00 00)
registersymbol(chkDoubleJumpFlagAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov byte ptr [edi+3dc],1

originalcode:
cmp [edi+000003DC],al

exit:
jmp returnhere

///

chkDoubleJumpFlagAOB: //"FindingTeddy2.exe"+17C55E:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chkDoubleJumpFlagAOB: //"FindingTeddy2.exe"+17C55E:
db 38 87 DC 03 00 00
//Alt: cmp [edi+000003DC],al
unregistersymbol(chkDoubleJumpFlagAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Health"</Description>
          <LastState Value="??" Activated="0" RealAddress="00868974"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pHealth</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Jewels"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pMoney</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Keys"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pKey</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Fireflies"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pFirefly</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"Item 1"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItem1</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Item 2"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItem2</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Item 3"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItem3</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Item 4"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pItem4</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Spider Coins"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pSCoin</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="07B7EAC0"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>07B7EAC0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="07B82480"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>07B82480</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0A062CEC"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>0A062CEC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>FindingTeddy2.exe+638974</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthReadAOB,89 44 24 20 C7 44 24 14 00 00 00 00)
registersymbol(healthReadAOB)

label(pHealth)
registersymbol(pHealth)

[healthReadAOB-4]: //["FindingTeddy2.exe"+11EF63]:
pHealth:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(healthReadAOB)

unregistersymbol(pHealth)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048)
label(cChkMinHealth)
registersymbol(cChkMinHealth)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cChkMinHealth:
pushad
mov eax,[esp+24]
cmp eax,2
jge exit2
mov eax,2
mov [esp+24],eax

exit2:
popad
ret


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)

unregistersymbol(cChkMinHealth)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"u1"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(someHealthWrite1AOB,85 C9 0F 48 C8 89 0D ** ** ** ** 5D C2 04 00)
registersymbol(someHealthWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx//
cmovs ecx,eax//
push ecx
call cDoMinHealth
pop ecx

originalcode:
//test ecx,ecx
//cmovs ecx,eax

exit:
jmp returnhere

///

someHealthWrite1AOB: //"FindingTeddy2.exe"+88ABA:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
someHealthWrite1AOB: //"FindingTeddy2.exe"+88ABA:
db 85 C9 0F 48 C8
//Alt: test ecx,ecx
//Alt: cmovs ecx,eax
unregistersymbol(someHealthWrite1AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"u2"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(someHealthWrite2AOB,85 C9 0F 48 C8 89 0D ** ** ** ** 5B 5E C3)
registersymbol(someHealthWrite2AOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx//
cmovs ecx,eax//
push ecx
call cDoMinHealth
pop ecx

originalcode2:
//test ecx,ecx
//cmovs ecx,eax

exit2:
jmp returnhere2

///

someHealthWrite2AOB: //"FindingTeddy2.exe"+13AE64:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
someHealthWrite2AOB: //"FindingTeddy2.exe"+13AE64:
db 85 C9 0F 48 C8
//Alt: test ecx,ecx
//Alt: cmovs ecx,eax
unregistersymbol(someHealthWrite2AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"u6"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(someHealthWrite3AOB,85 C9 0F 48 C8 89 0D ** ** ** ** 6A 01 8B CE)
registersymbol(someHealthWrite3AOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx//
cmovs ecx,eax//
push ecx
call cDoMinHealth
pop ecx

originalcode6:
//test ecx,ecx
//cmovs ecx,eax

exit6:
jmp returnhere6

///

someHealthWrite3AOB: //"FindingTeddy2.exe"+1858EB:
jmp newmem6
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
someHealthWrite3AOB: //"FindingTeddy2.exe"+1858EB:
db 85 C9 0F 48 C8
//Alt: test ecx,ecx
//Alt: cmovs ecx,eax
unregistersymbol(someHealthWrite3AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"u11"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(someHealthWrite4AOB,85 C9 0F 48 C8 89 0D ** ** ** ** 6A 01 8B CF)
registersymbol(someHealthWrite4AOB)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx//
cmovs ecx,eax//
push ecx
call cDoMinHealth
pop ecx

originalcode11:
//test ecx,ecx
//cmovs ecx,eax

exit11:
jmp returnhere11

///

someHealthWrite4AOB: //"FindingTeddy2.exe"+185E18:
jmp newmem11
returnhere11:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
someHealthWrite4AOB: //"FindingTeddy2.exe"+185E18:
db 85 C9 0F 48 C8
//Alt: test ecx,ecx
//Alt: cmovs ecx,eax
unregistersymbol(someHealthWrite4AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"u17 on hit"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(someHealthWrite5OnHitAOB,85 C9 0F 48 C8 89 0D ** ** ** ** 38 45 0C)
registersymbol(someHealthWrite5OnHitAOB)

alloc(newmem17,2048)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx//
cmovs ecx,eax//
push ecx
call cDoMinHealth
pop ecx

originalcode17:
//test ecx,ecx
//cmovs ecx,eax

exit17:
jmp returnhere17

///

someHealthWrite5OnHitAOB: //"FindingTeddy2.exe"+188F9D:
jmp newmem17
returnhere17:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
someHealthWrite5OnHitAOB: //"FindingTeddy2.exe"+188F9D:
db 85 C9 0F 48 C8
//Alt: test ecx,ecx
//Alt: cmovs ecx,eax
unregistersymbol(someHealthWrite5OnHitAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="07B816F0"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>07B816F0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(item1ReadOnMenuAccessAOB,8D 46 18 50 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC)
registersymbol(item1ReadOnMenuAccessAOB)

label(pItem1)
registersymbol(pItem1)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pItem1],eax

originalcode6:
mov edx,[eax]
sub esp,18

exit6:
jmp returnhere6

///
pItem1:
dd 0
///

item1ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A068:
jmp newmem6
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
item1ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A068:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(item1ReadOnMenuAccessAOB)

unregistersymbol(pItem1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>FindingTeddy2.exe+7539BC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="07C5FDA0"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>07C5FDA0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Item 4"</Description>
          <LastState Value="??" Activated="0" RealAddress="07C5E360"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>07C5E360</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(keyReadOnMenuAccessAOB,56 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC E8 ** ** ** ** 33 C9 ** ** ** ** ** ** ** ** ** ** 8B 16)
registersymbol(keyReadOnMenuAccessAOB)

label(pKey)
registersymbol(pKey)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pKey],eax

originalcode11:
mov edx,[eax]
sub esp,18

exit11:
jmp returnhere11

///
pKey:
dd 0
///

keyReadOnMenuAccessAOB+b: //"FindingTeddy2.exe"+159F12:
jmp newmem11
returnhere11:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
keyReadOnMenuAccessAOB+b: //"FindingTeddy2.exe"+159F12:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(keyReadOnMenuAccessAOB)

unregistersymbol(pKey)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(item4ReadOnMenuAccessAOB,56 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC E8 ** ** ** ** 33 C9 ** ** ** ** ** ** ** ** ** ** 8B 06)
registersymbol(item4ReadOnMenuAccessAOB)

label(pItem4)
registersymbol(pItem4)

alloc(newmem17,2048)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode17:
mov edx,[eax]
sub esp,18

exit17:
jmp returnhere17

///
pItem4:
dd 0
///

item4ReadOnMenuAccessAOB+b: //"FindingTeddy2.exe"+15A3DD:
jmp newmem17
returnhere17:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
item4ReadOnMenuAccessAOB+b: //"FindingTeddy2.exe"+15A3DD:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(item4ReadOnMenuAccessAOB)

unregistersymbol(pItem4)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"bee"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(beeReadOnMenuAccessAOB,8D 44 24 50 50 B9 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC E8)
registersymbol(beeReadOnMenuAccessAOB)

label(pBee)
registersymbol(pBee)

alloc(newmem24,2048)
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pBee],eax

originalcode24:
mov edx,[eax]
sub esp,18

exit24:
jmp returnhere24

///
pBee:
dd 0
///

beeReadOnMenuAccessAOB+1a: //"FindingTeddy2.exe"+159503:
jmp newmem24
returnhere24:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem24)
beeReadOnMenuAccessAOB+1a: //"FindingTeddy2.exe"+159503:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(beeReadOnMenuAccessAOB)

unregistersymbol(pBee)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"i2"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(item2ReadOnMenuAccessAOB,8D 46 30 50 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC)
registersymbol(item2ReadOnMenuAccessAOB)

label(pItem2)
registersymbol(pItem2)

alloc(newmem32,2048)
label(returnhere32)
label(originalcode32)
label(exit32)

newmem32: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pItem2],eax

originalcode32:
mov edx,[eax]
sub esp,18

exit32:
jmp returnhere32

///
pItem2:
dd 0
///

item2ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A191:
jmp newmem32
returnhere32:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem32)
item2ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A191:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(item2ReadOnMenuAccessAOB)

unregistersymbol(pItem2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"i3"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(item3ReadOnMenuAccessAOB,8D 46 48 50 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC)
registersymbol(item3ReadOnMenuAccessAOB)

label(pItem3)
registersymbol(pItem3)

alloc(newmem41,2048)
label(returnhere41)
label(originalcode41)
label(exit41)

newmem41: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pItem3],eax

originalcode41:
mov edx,[eax]
sub esp,18

exit41:
jmp returnhere41

///
pItem3:
dd 0
///

item3ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A2BA:
jmp newmem41
returnhere41:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem41)
item3ReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A2BA:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(item3ReadOnMenuAccessAOB)

unregistersymbol(pItem3)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"s coin"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(sCoinReadOnMenuAccessAOB,8D 46 60 50 B9 ** ** ** ** E8 ** ** ** ** 8B 10 83 EC 18 8B CC)
registersymbol(sCoinReadOnMenuAccessAOB)

label(pSCoin)
registersymbol(pSCoin)

alloc(newmem51,2048)
label(returnhere51)
label(originalcode51)
label(exit51)

newmem51: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pSCoin],eax

originalcode51:
mov edx,[eax]
sub esp,18

exit51:
jmp returnhere51

///
pSCoin:
dd 0
///

sCoinReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A502:
jmp newmem51
returnhere51:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem51)
sCoinReadOnMenuAccessAOB+e: //"FindingTeddy2.exe"+15A502:
db 8B 10 83 EC 18
//Alt: mov edx,[eax]
//Alt: sub esp,18
unregistersymbol(sCoinReadOnMenuAccessAOB)

unregistersymbol(pSCoin)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="09EE2104"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>09EE2104</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="09EE4A04"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>09EE4A04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0A48ACEC"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0A48ACEC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0AD6F870"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0AD6F870</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0CA0F57E"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>0CA0F57E</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0CA0F57C"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>0CA0F57C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="00AE1A32"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>00AE1A32</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0CA0F41E"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>0CA0F41E</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0D073844"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>0D073844</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0802B094"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>0802B094</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="07309914"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>07309914</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="0729228C"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>0729228C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"No Description"</Description>
          <LastState Value="??" Activated="0" RealAddress="07CDAC7C"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>07CDAC7C</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>total candy collected? write Code :mov [eax],ecx</Description>
      <Address>013F336E</Address>
      <ModuleName>FindingTeddy2.exe</ModuleName>
      <ModuleNameOffset>12336E</ModuleNameOffset>
      <Before>
        <Byte>75</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>FE</Byte>
        <Byte>01</Byte>
        <Byte>74</Byte>
        <Byte>0E</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>cChkMinHealth</Name>
      <Address>02D10800</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthReadAOB</Name>
      <Address>0034EF67</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>moneyReadOnMenuAccessAOB</Name>
      <Address>00389F82</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>item1ReadOnMenuAccessAOB</Name>
      <Address>0038A05A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>keyReadOnMenuAccessAOB</Name>
      <Address>00389F07</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>item4ReadOnMenuAccessAOB</Name>
      <Address>0038A3D2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fireflyReadOnMenuAccessAOB</Name>
      <Address>003894E9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>item2ReadOnMenuAccessAOB</Name>
      <Address>0038A183</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>item3ReadOnMenuAccessAOB</Name>
      <Address>0038A2AC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sCoinReadOnMenuAccessAOB</Name>
      <Address>0038A4F4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>00868974</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMoney</Name>
      <Address>026C0080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItem1</Name>
      <Address>026C0084</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pKey</Name>
      <Address>026C0088</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItem4</Name>
      <Address>026C008C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFirefly</Name>
      <Address>026C0090</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItem2</Name>
      <Address>026C0094</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItem3</Name>
      <Address>026C0098</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSCoin</Name>
      <Address>026C009C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cDoMinHealth</Name>
      <Address>026C0800</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someHealthWrite1AOB</Name>
      <Address>002B8ABA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someHealthWrite2AOB</Name>
      <Address>0036AE64</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someHealthWrite3AOB</Name>
      <Address>003B58EB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someHealthWrite4AOB</Name>
      <Address>003B5E18</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someHealthWrite5OnHitAOB</Name>
      <Address>003B8F9D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>chkDoubleJumpFlagAOB</Name>
      <Address>003AC55E</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5588182#5588182</Comments>
</CheatTable>
