<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>659</ID>
      <Description>"--TestInfiniteAmmo"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobAmmoUpdater,WolfOldBlood_x64.exe,01 51 20 48 8B D9)

alloc(newmem,2048,"WolfOldBlood_x64.exe")

label(aobAmmoUpdater_r)
registersymbol(aobAmmoUpdater_r)

label(lblAmmoUpdater)
label(lblAmmoUpdaterSkip)
label(lblAmmoUpdaterRet)

label(bEnableNoReload)
registersymbol(bEnableNoReload)

newmem:
bEnableNoReload:
dd 1

lblAmmoUpdater:
test edx,edx
jg short lblAmmoUpdaterSkip
cmp dword ptr [bEnableNoReload],1
jne short lblAmmoUpdaterSkip
xor edx,edx
lblAmmoUpdaterSkip:
//add [rcx+20],edx // Original code
//mov rbx,rcx      // Original code
db 01 51 20 48 8B D9
jmp lblAmmoUpdaterRet

//"WolfOldBlood_x64.exe"+978BFA:
aobAmmoUpdater:
aobAmmoUpdater_r:
jmp lblAmmoUpdater
nop
lblAmmoUpdaterRet:

[DISABLE]
aobAmmoUpdater_r:
//"WolfOldBlood_x64.exe"+978BFA:
//Alt: add [rcx+20],edx
//Alt: mov rbx,rcx
db 01 51 20 48 8B D9

unregistersymbol(aobAmmoUpdater_r)

unregistersymbol(bEnableNoReload)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>50</ID>
          <Description>"bEnableNoReload"</Description>
          <LastState Value="??" Activated="0" RealAddress="05B90000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableNoReload</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>658</ID>
      <Description>"--TestGodMode"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobHealthUpdater,WolfOldBlood_x64.exe,F3 0F 11 43 08 48 8B 5C 24 40 48 8B 74 24 48 0F 28 74 24 20)

alloc(newmem,4096,aobHealthUpdater)

label(aobHealthUpdater_r)
registersymbol(aobHealthUpdater_r)

label(lblHealthUpdater)
label(lblHealthUpdaterSkip)
label(lblHealthUpdaterRet)

label(bEnableGodMode)
registersymbol(bEnableGodMode)

newmem:
bEnableGodMode:
dd 1

lblHealthUpdater:
cmp dword ptr [bEnableGodMode],1
jne short lblHealthUpdaterSkip
movss xmm0,[rbx+0c]
lblHealthUpdaterSkip:
//movss [rbx+08],xmm0 // Original code
db F3 0F 11 43 08
jmp lblHealthUpdaterRet

//"WolfOldBlood_x64.exe"+64372F:
aobHealthUpdater:
aobHealthUpdater_r:
jmp lblHealthUpdater
lblHealthUpdaterRet:

[DISABLE]
aobHealthUpdater_r:
//"WolfOldBlood_x64.exe"+64372F:
//Alt: movss [rbx+08],xmm0
db F3 0F 11 43 08

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>52</ID>
          <Description>"bEnableGodMode"</Description>
          <LastState Value="??" Activated="0" RealAddress="07D70000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableGodMode</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>120</ID>
      <Description>"--TestNoRecoil"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobRecoilCheck,WolfOldBlood_x64.exe,83 3D ?? ?? ?? ?? 00 0F 84 ?? ?? ?? ?? 48 8B D3 48 8B CF)

alloc(newmem3,4096,aobRecoilCheck)

label(aobRecoilCheck_r)
registersymbol(aobRecoilCheck_r)

label(lblRecoilCheck)
label(lblRecoilCheckSkip)
label(lblRecoilCheckRet)

label(bEnableNoRecoil)
registersymbol(bEnableNoRecoil)

label(pRecoilCheckOffset)
registersymbol(pRecoilCheckOffset)

newmem3:
bEnableNoRecoil:
dd 1

lblRecoilCheck:
cmp dword ptr [bEnableNoRecoil],1
jne short lblRecoilCheckSkip
xor rdx,rdx
test rdx,rdx
jmp lblRecoilCheckRet
lblRecoilCheckSkip:
mov rdx,[pRecoilCheckOffset]
add rdx,[pRecoilCheckOffset+8]
//cmp dword ptr [WolfOldBlood_x64.exe+1DCCB88],00
cmp dword ptr [rdx],00
jmp lblRecoilCheckRet
pRecoilCheckOffset:
readmem(aobRecoilCheck+2,4)
dd 0
dq aobRecoilCheck+7

//"WolfOldBlood_x64.exe"+638F59:
aobRecoilCheck:
aobRecoilCheck_r:
jmp lblRecoilCheck
nop
nop
lblRecoilCheckRet:

[DISABLE]
aobRecoilCheck_r:
//"WolfOldBlood_x64.exe"+638F59:
//Alt: cmp dword ptr [WolfOldBlood_x64.exe+1DCCB88],00
db 83 3D 28 3C 79 01 00

unregistersymbol(aobRecoilCheck_r)

unregistersymbol(bEnableNoRecoil)

unregistersymbol(pRecoilCheckOffset)

dealloc(newmem3)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>121</ID>
          <Description>"bEnableNoRecoil"</Description>
          <LastState Value="??" Activated="0" RealAddress="07D80000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableNoRecoil</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>123</ID>
      <Description>"--TestNoSpread"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobGaussianSpreader,WolfOldBlood_x64.exe,F3 0F 59 05 ?? ?? ?? ?? 48 83 C4 40 5F C3)

alloc(newmem4,4096,aobGaussianSpreader)

label(aobGaussianSpreader_r)
registersymbol(aobGaussianSpreader_r)

label(lblGaussianSpreader)
label(lblGaussianSpreaderSkip)
label(lblGaussianSpreaderRet)

label(bNoSpread)
registersymbol(bNoSpread)

label(pGaussianSpreadOffset)
registersymbol(pGaussianSpreadOffset)

newmem4:
bNoSpread:
dd 1

lblGaussianSpreader:
cmp dword ptr [bNoSpread],1
jne short lblGaussianSpreaderSkip
xorps xmm0,xmm0
jmp lblGaussianSpreaderRet
lblGaussianSpreaderSkip:
mov rbx,[pGaussianSpreadOffset]
add rbx,[pGaussianSpreadOffset+8]
mulss xmm0,[rbx]
jmp lblGaussianSpreaderRet
pGaussianSpreadOffset:
readmem(aobGaussianSpreader+4,4)
dd 0
dq aobGaussianSpreader+8

//"WolfOldBlood_x64.exe"+6301AC:
aobGaussianSpreader:
aobGaussianSpreader_r:
jmp lblGaussianSpreader
nop
nop
nop
lblGaussianSpreaderRet:

[DISABLE]
aobGaussianSpreader_r:
//"WolfOldBlood_x64.exe"+6301AC:
//Alt: mulss xmm0,[WolfOldBlood_x64.exe+1DC4EBC]

db F3 0F 59 05 08 4D 79 01

unregistersymbol(aobGaussianSpreader_r)

unregistersymbol(bNoSpread)

unregistersymbol(pGaussianSpreadOffset)

dealloc(newmem4)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>122</ID>
          <Description>"bNoSpread"</Description>
          <LastState Value="??" Activated="0" RealAddress="07D90000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bNoSpread</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>668</ID>
      <Description>"--TestEasyPerks"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobPerkCounter,WolfOldBlood_x64.exe,41 FF 84 3F 24 2E 00 00 41 39 94 3F 24 2E 00 00 0F 8C)

alloc(newmem,4096,aobPerkCounter)

label(aobPerkCounter_r)
registersymbol(aobPerkCounter_r)

label(lblPerkCounter)
label(lblPerkCounterSkip)
label(lblPerkCounterRet)

label(bEnableEasyPerks)
registersymbol(bEnableEasyPerks)

newmem:
bEnableEasyPerks:
dd 1

lblPerkCounter:
cmp dword ptr [bEnableEasyPerks],1
jne short lblPerkCounterSkip
dec edx
mov dword ptr [r15+rdi+00002E24],edx
inc edx
lblPerkCounterSkip:
//inc [r15+rdi+00002E24] // Original code
db 41 FF 84 3F 24 2E 00 00
jmp lblPerkCounterRet

//"WolfOldBlood_x64.exe"+8F4B63:
aobPerkCounter:
aobPerkCounter_r:
jmp lblPerkCounter
nop
nop
nop
lblPerkCounterRet:

[DISABLE]
aobPerkCounter_r:
//"WolfOldBlood_x64.exe"+8F4B63:
//Alt: inc [r15+rdi+00002E24]
db 41 FF 84 3F 24 2E 00 00

unregistersymbol(aobPerkCounter_r)

unregistersymbol(bEnableEasyPerks)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>667</ID>
          <Description>"bEnableEasyPerks"</Description>
          <LastState Value="??" Activated="0" RealAddress="0B0E0000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableEasyPerks</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
