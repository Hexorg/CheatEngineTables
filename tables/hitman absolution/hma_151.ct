<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"godmode"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
luacall(if (setGod==nil) then messageDialog('Execute the lua script first', mtError, mbOK) error('Execute the lua script first') else setGod(1.0) end)

[disable]
luacall(if (setGod==nil) then messageDialog('Execute the lua script first', mtError, mbOK) error('Execute the lua script first') else setGod(0.0) end)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"invisibility"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
luacall(if (setInvis==nil) then messageDialog('Execute the lua script first', mtError, mbOK) error('Execute the lua script first') else setInvis(1.0) end)

[disable]
luacall(if (setInvis==nil) then messageDialog('Execute the lua script first', mtError, mbOK) error('Execute the lua script first') else setInvis(0.0) end)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>HMA.NMP::Vector&lt;int&gt;::numElements+BF10 - 55                    - push ebp
HMA.NMP::Vector&lt;int&gt;::numElements+BF11 - 8B EC                 - mov ebp,esp
HMA.NMP::Vector&lt;int&gt;::numElements+BF13 - 53                    - push ebx
HMA.NMP::Vector&lt;int&gt;::numElements+BF14 - BB 01000000           - mov ebx,00000001
HMA.NMP::Vector&lt;int&gt;::numElements+BF19 - 56                    - push esi
HMA.NMP::Vector&lt;int&gt;::numElements+BF1A - 84 1D 5CBD2501        - test [HMA.NMP::FreeListManager::m_heapAllocator+11BCFC],bl
HMA.NMP::Vector&lt;int&gt;::numElements+BF20 - 75 1D                 - jne HMA.NMP::Vector&lt;int&gt;::numElements+BF3F
HMA.NMP::Vector&lt;int&gt;::numElements+BF22 - 09 1D 5CBD2501        - or [HMA.NMP::FreeListManager::m_heapAllocator+11BCFC],ebx
HMA.NMP::Vector&lt;int&gt;::numElements+BF28 - B9 40BD2501           - mov ecx,HMA.NMP::FreeListManager::m_heapAllocator+11BCE0
HMA.NMP::Vector&lt;int&gt;::numElements+BF2D - E8 1E560000           - call HMA.NMP::Vector&lt;int&gt;::numElements+11550
HMA.NMP::Vector&lt;int&gt;::numElements+BF32 - 68 606BEF00           - push HMA.NMP::Quat::setXYZW+EDC50
HMA.NMP::Vector&lt;int&gt;::numElements+BF37 - E8 E31F6A00           - call HMA.NMP::Quat::setXYZW+7AB1F
HMA.NMP::Vector&lt;int&gt;::numElements+BF3C - 83 C4 04              - add esp,04
HMA.NMP::Vector&lt;int&gt;::numElements+BF3F - B9 40BD2501           - mov ecx,HMA.NMP::FreeListManager::m_heapAllocator+11BCE0
HMA.NMP::Vector&lt;int&gt;::numElements+BF44 - E8 17560000           - call HMA.NMP::Vector&lt;int&gt;::numElements+11560
HMA.NMP::Vector&lt;int&gt;::numElements+BF49 - 84 1D 3CBD2501        - test [HMA.NMP::FreeListManager::m_heapAllocator+11BCDC],bl
HMA.NMP::Vector&lt;int&gt;::numElements+BF4F - 75 10                 - jne HMA.NMP::Vector&lt;int&gt;::numElements+BF61
HMA.NMP::Vector&lt;int&gt;::numElements+BF51 - 09 1D 3CBD2501        - or [HMA.NMP::FreeListManager::m_heapAllocator+11BCDC],ebx
HMA.NMP::Vector&lt;int&gt;::numElements+BF57 - C7 05 38B52501 00000000 - mov [HMA.NMP::FreeListManager::m_heapAllocator+11B4D8],00000000
HMA.NMP::Vector&lt;int&gt;::numElements+BF61 - 8B 45 08              - mov eax,[ebp+08]
HMA.NMP::Vector&lt;int&gt;::numElements+BF64 - 50                    - push eax
HMA.NMP::Vector&lt;int&gt;::numElements+BF65 - B9 38B52501           - mov ecx,HMA.NMP::FreeListManager::m_heapAllocator+11B4D8
HMA.NMP::Vector&lt;int&gt;::numElements+BF6A - E8 31FFFFFF           - call HMA.NMP::Vector&lt;int&gt;::numElements+BEA0
HMA.NMP::Vector&lt;int&gt;::numElements+BF6F - 8B F0                 - mov esi,eax
HMA.NMP::Vector&lt;int&gt;::numElements+BF71 - 84 1D 5CBD2501        - test [HMA.NMP::FreeListManager::m_heapAllocator+11BCFC],bl
HMA.NMP::Vector&lt;int&gt;::numElements+BF77 - 75 1D                 - jne HMA.NMP::Vector&lt;int&gt;::numElements+BF96
HMA.NMP::Vector&lt;int&gt;::numElements+BF79 - 09 1D 5CBD2501        - or [HMA.NMP::FreeListManager::m_heapAllocator+11BCFC],ebx
HMA.NMP::Vector&lt;int&gt;::numElements+BF7F - B9 40BD2501           - mov ecx,HMA.NMP::FreeListManager::m_heapAllocator+11BCE0
HMA.NMP::Vector&lt;int&gt;::numElements+BF84 - E8 C7550000           - call HMA.NMP::Vector&lt;int&gt;::numElements+11550
HMA.NMP::Vector&lt;int&gt;::numElements+BF89 - 68 606BEF00           - push HMA.NMP::Quat::setXYZW+EDC50
HMA.NMP::Vector&lt;int&gt;::numElements+BF8E - E8 8C1F6A00           - call HMA.NMP::Quat::setXYZW+7AB1F
HMA.NMP::Vector&lt;int&gt;::numElements+BF93 - 83 C4 04              - add esp,04
HMA.NMP::Vector&lt;int&gt;::numElements+BF96 - B9 40BD2501           - mov ecx,HMA.NMP::FreeListManager::m_heapAllocator+11BCE0
HMA.NMP::Vector&lt;int&gt;::numElements+BF9B - E8 E0550000           - call HMA.NMP::Vector&lt;int&gt;::numElements+11580
HMA.NMP::Vector&lt;int&gt;::numElements+BFA0 - 8B C6                 - mov eax,esi
HMA.NMP::Vector&lt;int&gt;::numElements+BFA2 - 5E                    - pop esi
HMA.NMP::Vector&lt;int&gt;::numElements+BFA3 - 5B                    - pop ebx
HMA.NMP::Vector&lt;int&gt;::numElements+BFA4 - 5D                    - pop ebp
HMA.NMP::Vector&lt;int&gt;::numElements+BFA5 - C3                    - ret 
</Comments>
  <LuaScript>function setGod(state)
  local cvar=0x011DABC8

  while (cvar~=0) do
    local cvarname=readString(readInteger(cvar+4))
    if cvarname=='God' then
      writeFloat(cvar+12,state)
    end

    cvar=readInteger(cvar+8)
  end
end

function setInvis(state)
  local cvar=0x011DABC8

  while (cvar~=0) do
    local cvarname=readString(readInteger(cvar+4))
    if cvarname=='Invisible' then
      writeFloat(cvar+12,state)
    end

    cvar=readInteger(cvar+8)
  end
end
</LuaScript>
</CheatTable>
