<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Addresses Version"</Description>
      <Options moBindActivation="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Master Code"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
loadlibrary(AICLASS_PC_F) //AICLASS_PC_F.DLL

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Health - Always Max"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
registersymbol(hpplayer)
alloc(hpplayer,4)

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
label(enemycode)
label(playercode)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
fstp dword ptr [esi+54]
//pushfd
lea esi, [esi+54]
cmp esi,[hpplayer]
je playercode

enemycode:
//mov [esi], 0 //One Hit Kill
jmp exit2

playercode:
mov [esi], (float)100

exit2:
sub esi, 54
//popfd
fldz
jmp returnhere2

"AICLASS_PC_F.DLL"+9FBB:
jmp newmem2
returnhere2:

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fld dword ptr [esi+00000178]
mov [hpplayer],esi
add [hpplayer],00000178

exit:
jmp returnhere

"AICLASS_PC_F.DLL"+4E2391:
jmp newmem
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"AICLASS_PC_F.DLL"+9FBB:
fstp dword ptr [esi+54]
fldz 
//Alt: db D9 5E 54 D9 EE
dealloc(newmem)
"AICLASS_PC_F.DLL"+4E2391:
fld dword ptr [esi+00000178]
//Alt: db D9 86 78 01 00 00

unregistersymbol(hpplayer)
dealloc(hpplayer,4)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Ammonition - Always Max"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[esi+00000350]// Max Loader
mov [esi+0000017C], eax// Current Loader
mov eax,[esi+00000348] // Max Gun Bullets
mov [esi+0000017E], eax // Current Gun Bullets
pop eax

originalcode:
cmp [esi+0000017E],ax

exit:
jmp returnhere

"AICLASS_PC_F.DLL"+104A7C:
jmp newmem
nop
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"AICLASS_PC_F.DLL"+104A7C:
cmp [esi+0000017E],ax
//Alt: db 66 39 86 7E 01 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Gadgets - Always Max"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
lea ebx,[esi+ecx*2+38]
mov [ebx],ax
pop ebx

originalcode:
movsx ecx,word ptr [esi+ecx*2+38]

exit:
jmp returnhere

"AICLASS_PC_F.DLL"+1138DA:
jmp newmem
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"AICLASS_PC_F.DLL"+1138DA:
movsx ecx,word ptr [esi+ecx*2+38]
//Alt: db 0F BF 4C 4E 38
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Gatling - No Over Heating"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fstp dword ptr [esi+0000078C]
mov [esi+0000078C], 0// New

exit:
jmp returnhere

"AICLASS_PC_F.DLL"+118971:
jmp newmem
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"AICLASS_PC_F.DLL"+118971:
fstp dword ptr [esi+0000078C]
//Alt: db D9 9E 8C 07 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"Scan Version"</Description>
      <Options moBindActivation="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Master Code"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
loadlibrary(AICLASS_PC_F) //AICLASS_PC_F.DLL

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Health - Always Max"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
registersymbol(hpplayer)
alloc(hpplayer,4)
aobscan(writehpcode,D8 64 24 04 xx xx xx xx xx D9 5E 10)
aobscan(accesshpcode,33 C0 89 45 58 5B 85 C0)

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
label(enemycode)
label(playercode)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
fstp dword ptr [esi+54]
//pushfd
lea esi, [esi+54]
cmp esi,[hpplayer]
je playercode

enemycode:
//mov [esi], 0 //One Hit Kill
jmp exit2

playercode:
mov [esi], (float)100

exit2:
sub esi, 54
//popfd
fldz
jmp returnhere2

writehpcode+4:
jmp newmem2
returnhere2:

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fld dword ptr [esi+00000178]
mov [hpplayer],esi
add [hpplayer],00000178

exit:
jmp returnhere

accesshpcode+17:
jmp newmem
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
aobscan(writehpcode,D8 64 24 04 xx xx xx xx xx D9 5E 10)
aobscan(accesshpcode,33 C0 89 45 58 5B 85 C0)
writehpcode+4:
fstp dword ptr [esi+54]
fldz 
//Alt: db D9 5E 54 D9 EE
dealloc(newmem)
accesshpcode+17:
fld dword ptr [esi+00000178]
//Alt: db D9 86 78 01 00 00

unregistersymbol(hpplayer)
dealloc(hpplayer,4)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Ammonition - Always Max"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(accessammonition,33 C0 xx xx xx xx xx xx xx 5E 0F 94 C0 C3 32 C0 5E C3)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[esi+00000350]// Max Loader
mov [esi+0000017C], eax// Current Loader
mov eax,[esi+00000348] // Max Gun Bullets
mov [esi+0000017E], eax // Current Gun Bullets
pop eax

originalcode:
cmp [esi+0000017E],ax

exit:
jmp returnhere

accessammonition+2:
jmp newmem
nop
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
aobscan(accessammonition,33 C0 xx xx xx xx xx xx xx 5E 0F 94 C0 C3 32 C0 5E C3)
accessammonition+2:
cmp [esi+0000017E],ax
//Alt: db 66 39 86 7E 01 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Gadgets - Always Max"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(writegadgetscode,0F B7 44 46 42 xx xx xx xx xx 3B C8)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
lea ebx,[esi+ecx*2+38]
mov [ebx],ax
pop ebx

originalcode:
movsx ecx,word ptr [esi+ecx*2+38]

exit:
jmp returnhere

writegadgetscode+5:
jmp newmem
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
aobscan(writegadgetscode,0F B7 44 46 42 xx xx xx xx xx 3B C8)
writegadgetscode+5:
movsx ecx,word ptr [esi+ecx*2+38]
//Alt: db 0F BF 4C 4E 38
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Gatling - No Over Heating"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(writeheatcode,xx xx xx xx xx xx D9 86 80 07 00 00 D9 9E 90 07 00 00)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fstp dword ptr [esi+0000078C]
mov [esi+0000078C], 0// New

exit:
jmp returnhere

writeheatcode:
jmp newmem
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
aobscan(writeheatcode,xx xx xx xx xx xx D9 86 80 07 00 00 D9 9E 90 07 00 00)
writeheatcode:
fstp dword ptr [esi+0000078C]
//Alt: db D9 9E 8C 07 00 00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>This table requires that you deactivate and reactivate each option at level change, or if you restart at checkpoint etc., as the game seems to rewrite my instructions at those events.
</Comments>
</CheatTable>
