<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <Forms>
    <UDF1 Class="TCEForm" Encoding="Ascii85">t)V[!)oh)^3y0BC#,Vw7$(!tDv1qa:LI(HelsfiD7Kp^^W.X;6qgm-8=IDaSjlO]/#0y]+#Kgoz/Bf?LpeDvQF!33TSGI6Y3-dFub:/Ut@80.X]/=Hc@JPvDs,D3_tSXyDVzna:=-g%HO1Mc.J]}-=]eBQrKOs}l9rRR},1DGig]S7v1!6U?wNodi9iOe}YTu?}y?$:NASzmi;cor:P[v4mW0QKI]0$!?qzbWh[ik}nL*5y3v8gyeV?r@nfJ#}o8xlJXqYBF]sBprKDJ%}_3h#Q[gxYgrvs25/DNO5fk)l)RO8W,mN1Jwm7!4s[)JV*z5QA8fJiKsklZ1b+8PK{Otk_/(QmNK#uB4Qf-p1$T(Vud=b02u[WP$WtrD74:u903*=/)jmGw+fJE2:FW8x1=CF9-Te:F53LX(-BrRx?x:VIC5qC#/{}D/c@atB$RHP}jRVe9473eBqvMY4zY4u7koiTzJP5#wvY[v@BGS/^V;ue5OI=XYRb;Ing#g4r}M40s78uOP,1!fo;k!fqh@jK*/,e!S_]O,iV8+frB4KLd/vH@TidX2Y1]/xCovlIP{pqZq52+aSPkDYn[7/9Q]QAm5U/{mUNBN]eKf,)4}{@F?C{-:a;sG5892$d;PLdZR(/I6OHnus#Ytz6JJ.W)HRiE?ISPV3xT+Sh]Tiz7Y1;wAg)kShd@8o#2rn;ML:90#66mfn+nia5DvW%Ci9^oZyn@lo]NTi?=?[H).*EE6hH_Ef[06*O#zI-K)Lz8(nbX13/T;Lg,h}oaTo_zG,LShI12.8nnu_vfC*ix+U+}^or:Q*dmqVh*=;}xq[U}BH1iOP3HFEKrO%v$]eptEcGxeEIJW37gsc4yZlsEXKsQd:H*YqW,q6KAW$%n[4BiWTWAH3A,B=w=LEdq.0W2]VPb3K=!bWI)Jdt-ik=oNgu0=EYrd.,Z);U:.SVbR/zmm61iGB.x1FSX5rqPf2!Oz2]!rsFiXI(kzzH-)Fe/OrcOrf_%rvMDSek3M,:-;-?%DDhNM0laM%OB!}ztFo_Dy4R,n_tb,XHY,PxVdgkF-$IwBq6IU)lZCA!?}L}jHmI61JfRGK6T/V7P(Jk^^.</UDF1>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>888</ID>
      <Description>"Class"</Description>
      <LastState Value="0A" Activated="0" RealAddress="0A77F974"/>
      <ShowAsHex>1</ShowAsHex>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>DarkSoulsII.exe+FD1D9C</Address>
      <Offsets>
        <Offset>64</Offset>
        <Offset>60</Offset>
        <Offset>60</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>906</ID>
      <Description>"NG Level"</Description>
      <LastState Value="1" Activated="0" RealAddress="0A77F978"/>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>DarkSoulsII.exe+FD1D9C</Address>
      <Offsets>
        <Offset>68</Offset>
        <Offset>60</Offset>
        <Offset>60</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>test1</Name>
      <Address>141D0668</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>test2</Name>
      <Address>141D06C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>test3</Name>
      <Address>141D06BC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>test4</Name>
      <Address>141D079C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>test5</Name>
      <Address>141D07AC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>i_item_first</Name>
      <Address>004D86A2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>endlessMobs2</Name>
      <Address>00626246</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>myDesiredLevel</Name>
      <Address>01831004</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>myDesiredInfusion</Name>
      <Address>01831005</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>myDesiredQuantity</Name>
      <Address>01831006</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BetterItemSwap</Name>
      <Address> 00621015</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Class change info here because I'm a CE scrub.
Class Values:
1 = Warrior
2 = Knight
4 = Bandit
6 = Cleric
7 = Sorcerer
8 = Explorer
9 = Swordsman
10 = Deprived
</Comments>
  <LuaScript>DEBUG=0    -- change to 1 to get debug Info

mrDesiredID=getAddressList().getMemoryRecordByDescription('Desired Item ID')
mrHelper=getAddressList().getMemoryRecordByDescription('helper')

function printdebug(what)
  if DEBUG==1 then print(what) end
end

function findPointer()
 if neededPointer == nil then
   local fl = AOBScan('55 8B EC 8B 0D xx xx xx xx 85 C9 74 48 33 C0','+X-W*C')

   if fl~=nil and fl.getCount()==1 then               -- fl.Count==1 doesn't work with "no setup" CE
    neededPointer = readInteger( fl[0]..'+5' )
    return true
   end
   printdebug('Signature not found')
   return false
 end
 return true
end


function tadd(T,what)
  T[#T+1]=what
end


function fillListComponent(listComp,T)

  listComp.Items.clear()

  if T==nil then return end

  for _,v in ipairs(T) do
    listComp.Items.add( v.name )
  end

  if listComp.ClassName == 'TCEListBox' then
   listComp.OnSelectionChange = userChoseItemFromList
  else
   listComp.OnSelect = userChoseItemFromList
  end

end

function assignButtonToTable(btn,T)

  local compID = userDataToInteger(btn)
  compAndTable[compID] = {tab=T, comp=btn} -- so we can find ItemTable from this component
  btn.OnClick = onlyFromThisGroupClick
end

function onlyFromThisGroupClick(sender)
  local compID = userDataToInteger(sender)
  local T = compAndTable[compID].tab

  for k,v in pairs(compAndTable) do
    if k~=compID then v.comp.Font.Style = '[]' end
  end

  sender.Font.Style = '[fsBold]'

  showTable = {}

  for i,v in ipairs(T) do
    showTable[#showTable+1]=v
  end

  CEEdit1Change(nil)

end

function CEEdit1Change(sender)
  if showTable==nil then return end

  filteredTable = {}

  local filter = UDF1.CEEdit1.Text

  for i,v in ipairs(showTable) do
    if v.name:upper():match(filter:upper()) then
     filteredTable[#filteredTable+1] = v
    end
  end

  UDF1.ShownLabel.Caption = 'count: '..#filteredTable

  fillListComponent(UDF1.CEListBox1,filteredTable)
end


function userChoseItemFromList(sender)
  if sender.ItemIndex &lt;0 then return end

  local pair  = filteredTable[sender.ItemIndex+1]

  printdebug('control '..sender.Name..'   '..'index '..sender.ItemIndex)
  printdebug('chosen item name: '..(pair.name)..'   ID: '..pair.ID)

  choice = string.format("%08X",pair.ID)

  UDF1.CEEdit2.Text = pair.name..' - '..string.format("%08X",pair.ID)
end

-- user wants this ID
function CEButton17Click(sender)

  if choice==nil then
    mrDesiredID.Value = '0'
  else
    mrDesiredID.Value = choice
  end
end


scannedForItems = false
function prepareUI_and_getItems()

  if scannedForItems then return end
  if not findPointer() then return end


  Object = readInteger(neededPointer)
  if Object==nil or Object==0 then
  printdebug('stage1, error')
  return
  end

  List = readInteger(Object+8*16+0xE4)
  if List==nil or List==0 then
  printdebug('stage2, error')
  return
  end

  numberOfItems = readInteger(List+0xC)
  if numberOfItems==nil or numberOfItems==0 then
  printdebug('stage3, error')
  return
  end

  scannedForItems = true
  totalItems = 0

  compAndTable = {}

  ALL           = {}
  swordsAndEtc  = {}
  staffChime    = {}
  bowCrossbow   = {}
  shields       = {}
  wearable      = {}
  sorcery       = {}
  miracle       = {}
  pyromancy     = {}
  hex           = {}
  rings         = {}
  stuff         = {}
  consumables   = {}
  gestures      = {}
  souls         = {}

  -- loop over all items
  for listID=0,numberOfItems-1 do

    local offset          = readInteger( List + listID * 0xC + 0x1C )
    local minSubItemID    = readInteger( List + listID * 0xC + 0x20 )
    local maxSubItemID    = readInteger( List + listID * 0xC + 0x24 )
    local addressOfList_2 = readInteger( List + 0x14 )

    for itemID=minSubItemID,maxSubItemID do

     local index = (offset + itemID - minSubItemID)
     local offset_text = readInteger(addressOfList_2 + index*4 )

     if offset_text ~= 0 then

       local address = List + offset_text
       local string = ansiToUtf8(readString( address, 500, true ))

       local upper = math.floor(itemID / 100000)

       if itemID ~= 0xA and itemID ~= 0x14 and upper~= 9000 and upper~= 8920 and
          itemID ~= 0x0399B512 and
          itemID ~= 0x0399B8FA and
          itemID ~= 0x01410FCC and
          itemID ~= 0x015F944D and itemID ~= 0x015F9835
       then

         printdebug( string.format("hex: %08X",itemID)..'  decimal: '..
                                   itemID..'   Name: '..
                                   (string)
                   )

         local pair = {ID=itemID, name=string}

         tadd(ALL,pair)

         if upper&gt;=10 and upper&lt;=36   then tadd( swordsAndEtc , pair) end

         if (upper&gt;=38 and upper&lt;=41) or upper  == 54
                                      or itemID == 0x005488A0
                                      then tadd( staffChime   , pair) end

         if upper&gt;=42 and upper&lt;=46   then tadd( bowCrossbow  , pair) end

         if upper&gt;=50 and upper&lt;=55 and upper ~= 54
                                    and itemID ~= 0x005488A0
                                      then tadd( swordsAndEtc , pair) end

         if upper&gt;=110 and upper&lt;=118 then tadd( shields      , pair) end

         if upper&gt;=210 and upper&lt;=279 then tadd( wearable     , pair) end

         if upper&gt;=310 and upper&lt;=312 then tadd( sorcery      , pair) end
         if upper&gt;=320 and upper&lt;=322 then tadd( miracle      , pair) end
         if upper&gt;=330 and upper&lt;=332 then tadd( pyromancy    , pair) end
         if upper&gt;=340 and upper&lt;=350 then tadd( hex          , pair) end
         if upper&gt;=400 and upper&lt;=407 then tadd( rings        , pair) end

         if upper&gt;=506 and upper&lt;=510 then tadd( stuff        , pair) end

         if upper&gt;=600 and upper&lt;=611 then tadd( consumables  , pair) end
         if upper&gt;=620 and upper&lt;=621 then tadd( stuff        , pair) end
         if upper==630                then tadd( gestures     , pair) end
         if upper&gt;=640 and upper&lt;=643 then tadd( souls        , pair) end

         totalItems = totalItems + 1
       end
     end
    end
  end

  printdebug('\r\nTotal items: '..totalItems)
  printdebug("\r\n\r\nDark Souls II Item List by mgr.inz.Player")


  assignButtonToTable( UDF1.CEButton1, swordsAndEtc)
  assignButtonToTable( UDF1.CEButton2, staffChime)
  assignButtonToTable( UDF1.CEButton3, bowCrossbow)

  assignButtonToTable( UDF1.CEButton5, shields)
  assignButtonToTable( UDF1.CEButton6, wearable)
  assignButtonToTable( UDF1.CEButton7, sorcery)
  assignButtonToTable( UDF1.CEButton8, miracle)

  assignButtonToTable( UDF1.CEButton9, pyromancy)
  assignButtonToTable( UDF1.CEButton10, hex)
  assignButtonToTable( UDF1.CEButton11, rings)
  assignButtonToTable( UDF1.CEButton12, stuff)

  assignButtonToTable( UDF1.CEButton13, consumables)
  assignButtonToTable( UDF1.CEButton15, gestures)
  assignButtonToTable( UDF1.CEButton16, souls)

  assignButtonToTable( UDF1.CEButton18, ALL)

  onlyFromThisGroupClick(UDF1.CEButton18)

  UDF1.Caption = 'Dark Souls II Item List, items count: '..totalItems
  UDF1.OnClose = function () mrHelper.Active = false return caNone end

end

function showHelper()
  prepareUI_and_getItems()
  UDF1.show()
end

function hideHelper()
  UDF1.hide()
end


</LuaScript>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"DarkSoulsII.exe"+230525</Address>
      <Comment>asdf b2
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DarkSoulsII.exe"+2D9DB4</Address>
      <Comment>asdf3
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DarkSoulsII.exe"+2D9DD5</Address>
      <Comment>asdf2
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DarkSoulsII.exe"+2E107B</Address>
      <Comment>asdf b
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DarkSoulsII.exe"+2E1089</Address>
      <Comment>asdf
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
