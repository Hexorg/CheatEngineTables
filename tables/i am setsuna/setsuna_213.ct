<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>40</ID>
      <Description>"Battle Character List (Enter battle once)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(BattleCharacterList,8B 40 24 C9 C3 00 00 00 55 8B EC 57) // should be unique
alloc(newmem,$1000)
globalalloc(bCharList,8)
label(code)
label(return)

newmem:

code:
  mov [bCharList], eax
  mov eax,[eax+24]
  leave 
  ret 
  jmp return

BattleCharacterList:
  jmp code
return:
registersymbol(BattleCharacterList)

[DISABLE]

BattleCharacterList:
  db 8B 40 24 C9 C3

unregistersymbol(BattleCharacterList)
dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>157</ID>
          <Description>"Max Hp and Mp, always crit, Max resists, Start with full ATB Gauge, fast refill ATB, with All Possible Drops"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
bTimer.Enabled = true
[DISABLE]
bTimer.Enabled = false
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>158</ID>
              <Description>"One Hit Kills"</Description>
              <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
OneHit = true
[DISABLE]
OneHit = false
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Base Exp from Battle"</Description>
          <LastState Value="14" RealAddress="173AB9A0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>bCharList</Address>
          <Offsets>
            <Offset>10</Offset>
            <Offset>48</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"Exp Bonus from Battle"</Description>
          <LastState Value="0" RealAddress="173AB9A4"/>
          <VariableType>4 Bytes</VariableType>
          <Address>bCharList</Address>
          <Offsets>
            <Offset>14</Offset>
            <Offset>48</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>159</ID>
          <Description>"Drops"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>59</ID>
              <Description>"Number of unique items dropped"</Description>
              <LastState Value="11" RealAddress="173AB96C"/>
              <VariableType>4 Bytes</VariableType>
              <Address>bCharList</Address>
              <Offsets>
                <Offset>C</Offset>
                <Offset>C</Offset>
                <Offset>48</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>61</ID>
              <Description>"# of First item Dropped"</Description>
              <LastState Value="1" RealAddress="1740DDB2"/>
              <VariableType>2 Bytes</VariableType>
              <Address>bCharList</Address>
              <Offsets>
                <Offset>12</Offset>
                <Offset>10</Offset>
                <Offset>8</Offset>
                <Offset>C</Offset>
                <Offset>48</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"ID of First item Dropped"</Description>
              <LastState Value="2067" RealAddress="1740DDB4"/>
              <VariableType>2 Bytes</VariableType>
              <Address>bCharList</Address>
              <Offsets>
                <Offset>14</Offset>
                <Offset>10</Offset>
                <Offset>8</Offset>
                <Offset>C</Offset>
                <Offset>48</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"GameState (Open Inventory Menu)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(SaveGameState,8B 80 D0 00 00 00 c9) // should be unique
alloc(newmem,$1000)
globalalloc(bState,8)
label(code)
label(return)

newmem:

code:
  mov [bState],eax
  mov eax,[eax+000000D0]
  jmp return

SaveGameState:
  jmp code
  nop
return:
registersymbol(SaveGameState)

[DISABLE]

SaveGameState:
  db 8B 80 D0 00 00 00

unregistersymbol(SaveGameState)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0D636CA8

0D636C88: 68 E0 A4 6F 0C        -  push 0C6FA4E0
0D636C8D: E9 96 93 49 F7        -  jmp 04AD0028
0D636C92: 00 00                 -  add [eax],al
0D636C94: 00 00                 -  add [eax],al
0D636C96: 00 00                 -  add [eax],al
0D636C98: 55                    -  push ebp
0D636C99: 8B EC                 -  mov ebp,esp
0D636C9B: 83 EC 08              -  sub esp,08
0D636C9E: BA 50 E8 F6 0E        -  mov edx,0EF6E850
0D636CA3: E8 38 1E 8E F7        -  call Setsuna:SingletonMonoBehaviour`1:get_Instance
// ---------- INJECTING HERE ----------
0D636CA8: 8B 80 D0 00 00 00     -  mov eax,[eax+000000D0]
// ---------- DONE INJECTING  ----------
0D636CAE: 3B 45 08              -  cmp eax,[ebp+08]
0D636CB1: 0F 92 C0              -  setb al
0D636CB4: 0F B6 C0              -  movzx eax,al
0D636CB7: 85 C0                 -  test eax,eax
0D636CB9: 0F 94 C0              -  sete al
0D636CBC: 0F B6 C0              -  movzx eax,al
0D636CBF: C9                    -  leave 
0D636CC0: C3                    -  ret 
0D636CC1: 00 00                 -  add [eax],al
0D636CC3: 00 00                 -  add [eax],al
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>45</ID>
          <Description>"GameTime"</Description>
          <LastState Value="22337" RealAddress="0AE80F20"/>
          <VariableType>4 Bytes</VariableType>
          <Address>bState</Address>
          <Offsets>
            <Offset>C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"Money"</Description>
          <LastState Value="300698" RealAddress="0AE80F28"/>
          <VariableType>4 Bytes</VariableType>
          <Address>bState</Address>
          <Offsets>
            <Offset>D0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Set Items to 99"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
luacall(SetItems())
[DISABLE]

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Edit to change first item in inventory"</Description>
          <LastState Value="1001" RealAddress="1343B3F4"/>
          <VariableType>4 Bytes</VariableType>
          <Address>bState</Address>
          <Offsets>
            <Offset>14</Offset>
            <Offset>10</Offset>
            <Offset>8</Offset>
            <Offset>B8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>50</ID>
      <Description>"Global Movement Speeds (Move around once or open menu)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(PlayerCont,8B 06 90 90 90 FF 50 68) // should be unique
alloc(newmem,$1000)
globalalloc(bControls,8)

label(code)
label(return)

newmem:

code:
  mov [bControls],esi
  mov eax,[esi]
  nop 
  nop 
  nop 
  jmp return

PlayerCont:
  jmp code
return:
registersymbol(PlayerCont)

[DISABLE]

PlayerCont:
  db 8B 06 90 90 90

unregistersymbol(PlayerCont)
dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>54</ID>
          <Description>"UpgradeMovementSpeed"</Description>
          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
[bControls]+1C8:
dd (float)10
dd (float)10
dd (float)10

[DISABLE]
[bControls]+1C8:
dd (float)5
dd (float)2.5
dd (float)3.5
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>51</ID>
              <Description>"Run Speed"</Description>
              <LastState Value="10" Activated="1" RealAddress="0FBA9718"/>
              <VariableType>Float</VariableType>
              <Address>bControls</Address>
              <Offsets>
                <Offset>1C8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>52</ID>
              <Description>"Walk Speed"</Description>
              <LastState Value="10" Activated="1" RealAddress="0FBA971C"/>
              <VariableType>Float</VariableType>
              <Address>bControls</Address>
              <Offsets>
                <Offset>1CC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>53</ID>
              <Description>"World Move Speed"</Description>
              <LastState Value="10" Activated="1" RealAddress="0FBA9720"/>
              <VariableType>Float</VariableType>
              <Address>bControls</Address>
              <Offsets>
                <Offset>1D0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Fall Start Height (for calculating fall damage)"</Description>
          <LastState Value="0.7501727939" RealAddress="0FBA9790"/>
          <VariableType>Float</VariableType>
          <Address>bControls</Address>
          <Offsets>
            <Offset>240</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>160</ID>
      <Description>"ParameterManager"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(Parameter,8B 80 98 01 00 00 C9) // should be unique
alloc(newmem,$1000)
globalalloc(bPara,8)
label(code)
label(return)

newmem:

code:
  mov [bPara], eax
  mov eax,[eax+00000198]
  jmp return

Parameter:
  jmp code
  nop
return:
registersymbol(Parameter)

[DISABLE]

Parameter:
  db 8B 80 98 01 00 00

unregistersymbol(Parameter)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>162</ID>
      <Description>"Save from anywhere"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(SaveGame,88 48 3C C9 C3) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+3C],1
  leave 
  ret 
  jmp return

SaveGame:
  jmp code
return:
registersymbol(SaveGame)

[DISABLE]

SaveGame:
  db 88 48 3C C9 C3

unregistersymbol(SaveGame)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>ImprovedBattleEntity</Name>
      <Address>04F16FD9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bPlayer</Name>
      <Address>08F90030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bEnemy1</Name>
      <Address>08F90040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bEnemy2</Name>
      <Address>08F90050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bEnemy3</Name>
      <Address>08F90060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCharList</Name>
      <Address>08650030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bState</Name>
      <Address>08650000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bControls</Name>
      <Address>08650010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bPara</Name>
      <Address>08650020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SaveGameState</Name>
      <Address> 11BC8F50</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PlayerCont</Name>
      <Address> 11BCEA55</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Parameter</Name>
      <Address> 050EC108</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SaveGame</Name>
      <Address> 11BD42DC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BattleCharacterList</Name>
      <Address> 11BD66B0</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>function SetItems()
    counterValue = readInteger("[[bState]+B8]+C")
    for _o=1, counterValue do
      _o= 16 + 4*(_o-1)
      writeBytes("[[[[bState]+B8]+8]+"..string.format("%X",_o).."]+12", 99, 00)
    end
    al=getAddressList()
    MR=al.getMemoryRecordByDescription("Set Items to 99")
    memoryrecord_unfreeze(MR)
end

function readShortInt(address)
  return bAnd(0xFFFF, readInteger(address) )
end

OneHit = false

bTimer = createTimer(nil, false)
bTimer.Interval = 1000
bTimer.OnTimer = function(t1)
   counterValue = readInteger("[[bCharList]+24]+C")
   if counterValue == nil then
      return
   end
   for __o=1, counterValue do
      _o= 16 + 4*(__o-1)
      if (__o &lt;= (counterValue-readInteger("[[[bCharList]+40]+4C]+C"))) then
         writeBytes("[[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+118]+3A", 100) --ATBGaugeFull
         writeBytes("[[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+118]+3C", 1) --ATBGaugeRefillInstant
         writeBytes("[[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+118]+3E", 100) --Crit
         writeBytes("[[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+118]+40", 100) --Dodge
         writeBytes("[[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+118]+42", 100) --Accuracy
         writeBytes("[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+13A", 255) --Crit
         writeInteger("[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+1C", 999) --Hp
         writeInteger("[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+20", 999) --Mp
         for _p=1,29 do
            _p = 70 + 2*(_p-1)
            writeBytes("[[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+118]+"..string.format("%X",_p), 100)
         end
         for _p=1,21 do
            _p = 128 + 2*(_p-1)
            writeBytes("[[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+118]+"..string.format("%X",_p), 10)
         end
      else
         if OneHit then
            if readInteger("[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+1C") &gt; 10 then
               writeInteger("[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+1C", 0) --Hp
               writeInteger("[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+20", 0) --Mp
            end
         end
         writeBytes("[[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+4C]+13A", 0) --Crit
         writeInteger("[[[[bCharList]+24]+8]+"..string.format("%X",_o).."]+158", 4095) --Drops
      end
   end
end


</LuaScript>
</CheatTable>
