<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Gil"</Description>
      <LastState Value="5082" RealAddress="016C07D8"/>
      <VariableType>4 Bytes</VariableType>
      <Address>FFX.exe+D307D8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>934</ID>
      <Description>"Random Battles"</Description>
      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
      <LastState Value="1" RealAddress="016BA9D7"/>
      <VariableType>Byte</VariableType>
      <Address>FFX.exe+D2A9D7</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>3462</ID>
      <Description>"Loot drop count (lock to 8)"</Description>
      <LastState Value="0" RealAddress="016C3280"/>
      <VariableType>Byte</VariableType>
      <Address>FFX.exe+D33280</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>7719</ID>
      <Description>"--[[ Options below are populated by LUA script all just references to game memory ]]--"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>FF8000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Items"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>FF8000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>3463</ID>
      <Description>"Key Items"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>FF8000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>7318</ID>
      <Description>"Characters"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>FF8000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>local item_table = {
  [0]="Potion",
  [1]="Hi-potion",
  [2]="X-potion",
  [3]="Mega Potion",
  [4]="Ether",
  [5]="Turbo Ether",
  [6]="Phoenix Down",
  [7]="Mega Phoenix",
  [8]="Elixir",
  [9]="Megalixir",
  [10]="Antidote",
  [11]="Soft",
  [12]="Eye Drops",
  [13]="Echo Screen",
  [14]="Holy Water",
  [15]="Remedy",
  [16]="Power Distiller",
  [17]="Mana Distiller",
  [18]="Speed Distiller",
  [19]="Ability Distiller",
  [20]="Al Bhed Potion",
  [21]="Healing Water",
  [22]="Tetra Elemental",
  [23]="Antarctic Wind",
  [24]="Arctic Wind",
  [25]="Ice Gem",
  [26]="Bomb Fragment",
  [27]="Bomb Core",
  [28]="Fire Gem",
  [29]="Electro Marble",
  [30]="Lightning Marble",
  [31]="Lightning Gem",
  [32]="Fish Scale",
  [33]="Dragon Scale",
  [34]="Water Gem",
  [35]="Grenade",
  [36]="Frag Grenade",
  [37]="Sleeping Grenade",
  [38]="Dream Powder",
  [39]="Silence Grenade",
  [40]="Smoke Bomb",
  [41]="Shadow Gem",
  [42]="Shining Gem",
  [43]="Blessed Gem",
  [44]="Supreme Gem",
  [45]="Poison Gem",
  [46]="Silver Hourglass",
  [47]="Gold Hourglass",
  [48]="Candle of Life",
  [49]="Petrify Grenade",
  [50]="Farplane Shadow",
  [51]="Farplane Wind",
  [52]="Designer Wallet",
  [53]="Dark Matter",
  [54]="Chocobo Feather",
  [55]="Chocobo Wing",
  [56]="Lunar Curtain",
  [57]="Light Curtain",
  [58]="Star Curtain",
  [59]="Healing Spring",
  [60]="Mana Spring",
  [61]="Stamia Spring",
  [62]="Soul Spring",
  [63]="Purifying Salt",
  [64]="Stamia Tablet",
  [65]="Mana Tablet",
  [66]="Twin Stars",
  [67]="Stamia Tonic",
  [68]="Mana Tonic",
  [69]="Three Stars",
  [70]="Power Sphere",
  [71]="Mana Sphere",
  [72]="Speed Sphere",
  [73]="Ability Sphere",
  [74]="Fortune Sphere",
  [75]="Attribute Sphere",
  [76]="Special Sphere",
  [77]="Skill Sphere",
  [78]="Wht Magic Sphere",
  [79]="Blk Magic Sphere",
  [80]="Master Sphere",
  [81]="Lv. 1 Key Sphere",
  [82]="Lv. 2 Key Sphere",
  [83]="Lv. 3 Key Sphere",
  [84]="Lv. 4 Key Sphere",
  [85]="HP Sphere",
  [86]="MP Sphere",
  [87]="Strength Sphere",
  [88]="Defense Sphere",
  [89]="Magic Sphere",
  [90]="Magic Def Sphere",
  [91]="Agility Sphere",
  [92]="Evasion Sphere",
  [93]="Accuracy Sphere",
  [94]="Luck Sphere",
  [95]="Clear Sphere",
  [96]="Return Sphere",
  [97]="Friend Sphere",
  [98]="Teleport Sphere",
  [99]="Warp Sphere",
  [100]="Map",
  [101]="Rename Card",
  [102]="Musk",
  [103]="Hypello Potion",
  [104]="Shining Thorn",
  [105]="Pendulum",
  [106]="Amulet",
  [107]="Door To Tomorrow",
  [108]="Wings to Discovery",
  [109]="Gambler's Spirit",
  [110]="Underdog's Secret",
  [111]="Winning Formula",
}

function spairs(t, order)
    -- collect the keys
    local keys = {}
    for k in pairs(t) do keys[#keys+1] = k end

    -- if order function given, sort by it by passing the table and keys a, b,
    -- otherwise just sort the keys
    if order then
        table.sort(keys, function(a,b) return order(t, a, b) end)
    else
        table.sort(keys)
    end

    -- return the iterator function
    local i = 0
    return function()
        i = i + 1
        if keys[i] then
            return keys[i], t[keys[i]]
        end
    end
end

function populate_items()
  local droplist = "255:NULL\n"
  for k,v in pairs(item_table) do
    droplist = droplist .. k + 8192 .. ":" .. v .. "\n"
  end

  local itemCount = 112
  local quantity_base = "FFX.exe+D30B5C"
  local type_base = "FFX.exe+D3095C"

  local addr_list = getAddressList()
  local group = addr_list.getMemoryRecordByDescription("Items")
  while group.Count &gt; 0 do
    group.Child[0].destroy()
  end
  for i=0, itemCount -1 do
      local slot_number = i+1
      -- Item Type with dropdown
      local slot_type = addr_list.createMemoryRecord()
      slot_type.setDescription("Slot " .. slot_number .. " Type")
      slot_type.setAddress(type_base .. "+2*" .. string.format( '%x', i))
      slot_type.DontSave = true
      slot_type.Type = vtWord
      slot_type.appendToEntry(group)
      slot_type.DropDownList.Text = droplist
      -------- Options ----
      slot_type.DropDownReadOnly=true  ---Disallow manual user input
      slot_type.DropDownDescriptionOnly=false  ----Only show the description part
      slot_type.DisplayAsDropDownListItem=true  ---Make the record display values like the dropdownlist
      -- Item Quantity
      local slot_quantity = addr_list.createMemoryRecord()
      slot_quantity.setDescription("Slot " .. slot_number .. " Quantity")
      slot_quantity.setAddress(quantity_base .. "+" .. string.format( '%x', i))
      slot_quantity.DontSave = true
      slot_quantity.Type = vtByte
      slot_quantity.appendToEntry(group)
  end
end

local skills = {
  ['22'] = {
    -- ['0'] = 'Skill 0',
    -- ['1'] = 'Skill 1',
    -- ['2'] = 'Skill 2',
    -- ['3'] = 'Skill 3',
    -- ['4'] = 'Skill 4',
    -- ['5'] = 'Skill 5',
    ['6'] = 'Delay Attack', -- skill
    ['7'] = 'Delay Buster' -- skill
  },
  ['23'] = {
    ['0'] = 'Sleep Attack', -- skill
    ['1'] = 'Silence Attack', -- skill
    ['2'] = 'Dark Attack', -- skill
    ['3'] = 'Zombie Attack', -- skill
    ['4'] = 'Sleep Buster', -- skill
    ['5'] = 'Silence Buster', -- skill
    ['6'] = 'Dark Buster', -- skill
    ['7'] = 'Triple Foul' -- skill
  },
  ['24'] = {
    ['0'] = 'Power Break', -- skill
    ['1'] = 'Magic Break', -- skill
    ['2'] = 'Armor Break', -- skill
    ['3'] = 'Mental Break', -- skill
    ['4'] = 'Mug', -- skill
    ['5'] = 'Quick Hit', -- skill
    ['6'] = 'Steal', -- special
    ['7'] = 'Use' -- special
  },
  ['25'] = {
    ['0'] = 'Flee', -- special
    ['1'] = 'Pray', -- special
    ['2'] = 'Cheer', -- special
    ['3'] = 'Aim', -- special
    ['4'] = 'Focus', -- special
    ['5'] = 'Reflex', -- special
    ['6'] = 'Luck', -- special
    ['7'] = 'Jinx' -- special
  },
  ['26'] = {
    ['0'] = 'Lancet', -- special
    ['1'] = '???', -- ??
    ['2'] = 'Guard', -- special
    ['3'] = 'Sentinel', -- special
    ['4'] = 'Spare Change', -- special
    ['5'] = 'Threaten', -- special
    ['6'] = 'Provoke', -- special
    ['7'] = 'Entrust' -- special
  },
  ['27'] = {
    ['0'] = 'Copycat', -- special
    ['1'] = 'Doublecast', -- special
    ['2'] = 'Bribe', -- special
    ['3'] = 'Cure', -- White Magic
    ['4'] = 'Cura', -- White Magic
    ['5'] = 'Curaga', -- White Magic
    ['6'] = 'NulFrost', -- White Magic
    ['7'] = 'NulBlaze' -- White Magic
  },
  ['28'] = {
    ['0'] = 'NulShock', -- White Magic
    ['1'] = 'NulTide', -- White Magic
    ['2'] = 'Scan', -- White Magic
    ['3'] = 'Esuna', -- White Magic
    ['4'] = 'Life', -- White Magic
    ['5'] = 'Full-Life', -- White Magic
    ['6'] = 'Haste', -- White Magic
    ['7'] = 'Hastega' -- White Magic
  },
  ['29'] = {
    ['0'] = 'Slow', -- White Magic
    ['1'] = 'Slowga', -- White Magic
    ['2'] = 'Shell', -- White Magic
    ['3'] = 'Protect', -- White Magic
    ['4'] = 'Reflect', -- White Magic
    ['5'] = 'Dispel', -- White Magic
    ['6'] = 'Regen', -- White Magic
    ['7'] = 'Holy' -- White Magic
  },
  ['2A'] = {
    ['0'] = 'Auto-Life', -- White Magic
    ['1'] = 'Blizzard', -- Black Magic
    ['2'] = 'Fire', -- Black Magic
    ['3'] = 'Thunder', -- Black Magic
    ['4'] = 'Water', -- Black Magic
    ['5'] = 'Fira', -- Black Magic
    ['6'] = 'Blizzara', -- Black Magic
    ['7'] = 'Thundara' -- Black Magic
  },
  ['2B'] = {
    ['0'] = 'Watera', -- Black Magic
    ['1'] = 'Firaga', -- Black Magic
    ['2'] = 'Blizzaga', -- Black Magic
    ['3'] = 'Thundaga', -- Black Magic
    ['4'] = 'Waterga', -- Black Magic
    ['5'] = 'Bio', -- Black Magic
    ['6'] = 'Demi', -- Black Magic
    ['7'] = 'Death' -- Black Magic
  },
  ['2C'] = {
    ['0'] = 'Drain', -- Black Magic
    ['1'] = 'Osmose', -- Black Magic
    ['2'] = 'Flare', -- Black Magic
    ['3'] = 'Ultima', -- Black Magic
    -- ['4'] = 'Skill 4',
    -- ['5'] = 'Skill 5',
    -- ['6'] = 'Skill 6',
    -- ['7'] = 'Skill 7'
  },
  ['2D'] = {
    ['0'] = 'Pilfer Gil', -- Special
    ['1'] = 'Full Break', -- Skill
    ['2'] = 'Extract Power', -- Skill
    ['3'] = 'Extract Mana', -- Skill
    ['4'] = 'Extract Speed', -- Skill
    ['5'] = 'Extract Ability', -- Skill
    ['6'] = 'Nab Gil', -- Skill
    ['7'] = 'Quick Pockets' -- Special
  },
  ['6C'] = {
    ['0'] = 'Warrior', -- Overdrive Mode
    ['1'] = 'Comrade', -- Overdrive Mode
    ['2'] = 'Stoic', -- Overdrive Mode
    ['3'] = 'Healer', -- Overdrive Mode
    ['4'] = 'Tactician', -- Overdrive Mode
    ['5'] = 'Victim', -- Overdrive Mode
    ['6'] = 'Dancer', -- Overdrive Mode
    ['7'] = 'Avenger' -- Overdrive Mode
  },
  ['6D'] = {
    ['0'] = 'Slayer', -- Overdrive Mode
    ['1'] = 'Hero', -- Overdrive Mode
    ['2'] = 'Rook', -- Overdrive Mode
    ['3'] = 'Victor', -- Overdrive Mode
    ['4'] = 'Coward', -- Overdrive Mode
    ['5'] = 'Ally', -- Overdrive Mode
    ['6'] = 'Sufferer', -- Overdrive Mode
    ['7'] = 'Daredevil' -- Overdrive Mode
  },
  ['6E'] = {
    ['0'] = 'Loner', -- Overdrive Mode
    ['1'] = '???',
    ['2'] = '???',
    ['3'] = 'Skill 3',
    ['4'] = 'Skill 4',
    ['5'] = 'Skill 5',
    ['6'] = 'Skill 6',
    ['7'] = 'Skill 7'
  },
  ['6F'] = {
    ['0'] = 'Skill 0',
    ['1'] = 'Skill 1',
    ['2'] = 'Skill 2',
    ['3'] = 'Skill 3',
    ['4'] = 'Skill 4',
    ['5'] = 'Skill 5',
    ['6'] = 'Skill 6',
    ['7'] = 'Skill 7'
  }
}

local abilities_list = {'Skills','Specials','White Magic','Black Magic','Overdrive Modes'}
local abilities = {
  ['Skills'] = {
    ['22'] = {
      ['6'] = 'Delay Attack', -- skill
      ['7'] = 'Delay Buster' -- skill
    },
    ['23'] = {
      ['0'] = 'Sleep Attack', -- skill
      ['1'] = 'Silence Attack', -- skill
      ['2'] = 'Dark Attack', -- skill
      ['3'] = 'Zombie Attack', -- skill
      ['4'] = 'Sleep Buster', -- skill
      ['5'] = 'Silence Buster', -- skill
      ['6'] = 'Dark Buster', -- skill
      ['7'] = 'Triple Foul' -- skill
    },
    ['24'] = {
      ['0'] = 'Power Break', -- skill
      ['1'] = 'Magic Break', -- skill
      ['2'] = 'Armor Break', -- skill
      ['3'] = 'Mental Break', -- skill
      ['4'] = 'Mug', -- skill
      ['5'] = 'Quick Hit', -- skill
    },
    ['2D'] = {
      ['1'] = 'Full Break', -- Skill
      ['2'] = 'Extract Power', -- Skill
      ['3'] = 'Extract Mana', -- Skill
      ['4'] = 'Extract Speed', -- Skill
      ['5'] = 'Extract Ability', -- Skill
      ['6'] = 'Nab Gil', -- Skill
    },
  },
  ['Specials'] = {
    ['24'] = {
      ['6'] = 'Steal', -- special
      ['7'] = 'Use' -- special
    },
    ['25'] = {
      ['0'] = 'Flee', -- special
      ['1'] = 'Pray', -- special
      ['2'] = 'Cheer', -- special
      ['3'] = 'Aim', -- special
      ['4'] = 'Focus', -- special
      ['5'] = 'Reflex', -- special
      ['6'] = 'Luck', -- special
      ['7'] = 'Jinx' -- special
    },
    ['26'] = {
      ['0'] = 'Lancet', -- special
      ['1'] = '???', -- ??
      ['2'] = 'Guard', -- special
      ['3'] = 'Sentinel', -- special
      ['4'] = 'Spare Change', -- special
      ['5'] = 'Threaten', -- special
      ['6'] = 'Provoke', -- special
      ['7'] = 'Entrust' -- special
    },
    ['27'] = {
      ['0'] = 'Copycat', -- special
      ['1'] = 'Doublecast', -- special
      ['2'] = 'Bribe', -- special
    },
    ['2D'] = {
      ['0'] = 'Pilfer Gil', -- Special
      ['7'] = 'Quick Pockets' -- Special
    },
  },
  ['White Magic'] = {
    ['27'] = {
      ['3'] = 'Cure', -- White Magic
      ['4'] = 'Cura', -- White Magic
      ['5'] = 'Curaga', -- White Magic
      ['6'] = 'NulFrost', -- White Magic
      ['7'] = 'NulBlaze' -- White Magic
    },
    ['28'] = {
      ['0'] = 'NulShock', -- White Magic
      ['1'] = 'NulTide', -- White Magic
      ['2'] = 'Scan', -- White Magic
      ['3'] = 'Esuna', -- White Magic
      ['4'] = 'Life', -- White Magic
      ['5'] = 'Full-Life', -- White Magic
      ['6'] = 'Haste', -- White Magic
      ['7'] = 'Hastega' -- White Magic
    },
    ['29'] = {
      ['0'] = 'Slow', -- White Magic
      ['1'] = 'Slowga', -- White Magic
      ['2'] = 'Shell', -- White Magic
      ['3'] = 'Protect', -- White Magic
      ['4'] = 'Reflect', -- White Magic
      ['5'] = 'Dispel', -- White Magic
      ['6'] = 'Regen', -- White Magic
      ['7'] = 'Holy' -- White Magic
    },
    ['2A'] = {
      ['0'] = 'Auto-Life', -- White Magic
    },
  },
  ['Black Magic'] = {
    ['2A'] = {
      ['0'] = 'Auto-Life', -- White Magic
      ['1'] = 'Blizzard', -- Black Magic
      ['2'] = 'Fire', -- Black Magic
      ['3'] = 'Thunder', -- Black Magic
      ['4'] = 'Water', -- Black Magic
      ['5'] = 'Fira', -- Black Magic
      ['6'] = 'Blizzara', -- Black Magic
      ['7'] = 'Thundara' -- Black Magic
    },
    ['2B'] = {
      ['0'] = 'Watera', -- Black Magic
      ['1'] = 'Firaga', -- Black Magic
      ['2'] = 'Blizzaga', -- Black Magic
      ['3'] = 'Thundaga', -- Black Magic
      ['4'] = 'Waterga', -- Black Magic
      ['5'] = 'Bio', -- Black Magic
      ['6'] = 'Demi', -- Black Magic
      ['7'] = 'Death' -- Black Magic
    },
    ['2C'] = {
      ['0'] = 'Drain', -- Black Magic
      ['1'] = 'Osmose', -- Black Magic
      ['2'] = 'Flare', -- Black Magic
      ['3'] = 'Ultima', -- Black Magic
    },
  },
  ['Overdrive Modes'] = {
    ['6C'] = {
      ['0'] = 'Warrior', -- Overdrive Mode
      ['1'] = 'Comrade', -- Overdrive Mode
      ['2'] = 'Stoic', -- Overdrive Mode
      ['3'] = 'Healer', -- Overdrive Mode
      ['4'] = 'Tactician', -- Overdrive Mode
      ['5'] = 'Victim', -- Overdrive Mode
      ['6'] = 'Dancer', -- Overdrive Mode
      ['7'] = 'Avenger' -- Overdrive Mode
    },
    ['6D'] = {
      ['0'] = 'Slayer', -- Overdrive Mode
      ['1'] = 'Hero', -- Overdrive Mode
      ['2'] = 'Rook', -- Overdrive Mode
      ['3'] = 'Victor', -- Overdrive Mode
      ['4'] = 'Coward', -- Overdrive Mode
      ['5'] = 'Ally', -- Overdrive Mode
      ['6'] = 'Sufferer', -- Overdrive Mode
      ['7'] = 'Daredevil' -- Overdrive Mode
    },
    ['6E'] = {
      ['0'] = 'Loner', -- Overdrive Mode
      ['1'] = 'Skill 6E 1',
      ['2'] = 'Skill 6E 2',
      ['3'] = 'Skill 6E 3',
      ['4'] = 'Skill 6E 4',
      ['5'] = 'Skill 6E 5',
      ['6'] = 'Skill 6E 6',
      ['7'] = 'Skill 6E 7'
    },
    ['6F'] = {
      ['0'] = 'Skill 6F 0',
      ['1'] = 'Skill 6F 1',
      ['2'] = 'Skill 6F 2',
      ['3'] = 'Skill 6F 3',
      ['4'] = 'Skill 6F 4',
      ['5'] = 'Skill 6F 5',
      ['6'] = 'Skill 6F 6',
      ['7'] = 'Skill 6F 7'
    }
  },
}

local template = {
  ['23'] = {
    ['0'] = 'Skill 0',
    ['1'] = 'Skill 1',
    ['2'] = 'Skill 2',
    ['3'] = 'Skill 3',
    ['4'] = 'Skill 4',
    ['5'] = 'Skill 5',
    ['6'] = 'Skill 6',
    ['7'] = 'Skill 7'
  }
}

function populate_skills()
  local character_base = 'FFX.exe+D32078'
  local addr_list = getAddressList()
  local group = addr_list.getMemoryRecordByDescription("Skills")
  while group.Count &gt; 0 do
    group.Child[0].destroy()
  end
  for offset, data in spairs(skills) do
    for bit, desc in spairs(data) do
      local rec = addr_list.createMemoryRecord()
      -- print(offset,bit,desc)
      -- rec.setDescription('Off' .. offset .. ": " .. desc)
      rec.setDescription(desc)
      rec.setAddress(character_base .. '+' .. offset)
      rec.DontSave = true
      rec.Type = vtBinary
      rec.Binary.Startbit = bit
      rec.Binary.Size = 1
      rec.DropDownList.text = "0:false\n1:true"
      rec.DropDownReadOnly=true  ---Disallow manual user input
      rec.DropDownDescriptionOnly=false  ----Only show the description part
      rec.DisplayAsDropDownListItem=true  ---Make the record display values like the dropdownlist
      rec.appendToEntry(group)
    end
  end
end

local key_items = {
  ['D30F1C'] = {
    ['0'] = 'Withered Bouquet',
    ['1'] = 'Flint',
    ['2'] = 'Cloudy Mirror',
    ['3'] = 'Celestial Mirror',
    ['4'] = 'Al Bhed Primer I',
    ['5'] = 'Al Bhed Primer II',
    ['6'] = 'Al Bhed Primer III',
    ['7'] = 'Al Bhed Primer IV'
  },
  ['D30F1D'] = {
    ['0'] = 'Al Bhed Primer V',
    ['1'] = 'Al Bhed Primer VI',
    ['2'] = 'Al Bhed Primer VII',
    ['3'] = 'Al Bhed Primer VIII',
    ['4'] = 'Al Bhed Primer IX',
    ['5'] = 'Al Bhed Primer X',
    ['6'] = 'Al Bhed Primer XI',
    ['7'] = 'Al Bhed Primer XII'
  },
  ['D30F1E'] = {
    ['0'] = 'Al Bhed Primer XIII',
    ['1'] = 'Al Bhed Primer XIV',
    ['2'] = 'Al Bhed Primer XV',
    ['3'] = 'Al Bhed Primer XVI',
    ['4'] = 'Al Bhed Primer XVII',
    ['5'] = 'Al Bhed Primer XVIII',
    ['6'] = 'Al Bhed Primer XIX',
    ['7'] = 'Al Bhed Primer XX'
  },
  ['D30F1F'] = {
    ['0'] = 'Al Bhed Primer XXI',
    ['1'] = 'Al Bhed Primer XXII',
    ['2'] = 'Al Bhed Primer XXIII',
    ['3'] = 'Al Bhed Primer XXIV',
    ['4'] = 'Al Bhed Primer XXV',
    ['5'] = 'Al Bhed Primer XXVI',
    ['6'] = "Summoner's Soul",
    ['7'] = "Aeon's Soul"
  },
  ['D30F20'] = {
    ['0'] = "Jecht's Sphere",
    ['1'] = 'Rusty Sword',
--    ['2'] = '???',
    ['3'] = 'Sun Crest',
    ['4'] = 'Sun Sigil',
    ['5'] = 'Moon Crest',
    ['6'] = 'Moon Sigil',
    ['7'] = 'Mars Crest'
  },
  ['D30F21'] = {
    ['0'] = 'Mars Sigil',
    ['1'] = 'Mark of Conquest',
    ['2'] = 'Saturn Crest',
    ['3'] = 'Saturn Sigil',
    ['4'] = 'Jupiter Crest',
    ['5'] = 'Jupiter Sigil',
    ['6'] = 'Venus Crest',
    ['7'] = 'Venus Sigil'
  },
  ['D30F22'] = {
    ['0'] = 'Mercury Crest',
    ['1'] = 'Mercury Sigil',
    ['2'] = 'Blossom Crown',
    ['3'] = 'Flower Scepter',
  },
  -- ['D2CDFC'] = {
  --   ['0'] = 'Bit0',
  -- },
  -- ['D2CDFD'] = {
  --   ['0'] = 'Bit0',
  -- },
}
function populate_key_items()
  local addr_list = getAddressList()
  local group = addr_list.getMemoryRecordByDescription("Key Items")
  -- for key,value in pairs(getmetatable(group)) do
  --   print(key, value)
  -- end
  while group.Count &gt; 0 do
    group.Child[0].destroy()
  end
  for offset, data in spairs(key_items) do
    for bit, desc in spairs(data) do
      local rec = addr_list.createMemoryRecord()
      -- print(offset,bit,desc)
      -- rec.setDescription(offset .. ": " .. desc)
      rec.setDescription(desc)
      rec.setAddress('FFX.exe+' .. offset)
      rec.DontSave = true
      rec.Type = vtBinary
      rec.Binary.Startbit = bit
      rec.Binary.Size = 1
      rec.DropDownList.text = "0:false\n1:true"
      rec.DropDownReadOnly=true  ---Disallow manual user input
      rec.DropDownDescriptionOnly=false  ----Only show the description part
      rec.DisplayAsDropDownListItem=true  ---Make the record display values like the dropdownlist
      rec.appendToEntry(group)
    end
  end
end

function find_group(group_name,parent_name)
  local al = getAddressList()
  for i=0,al.Count -1 do
    if al[i].isGroupHeader and al[i].description:match(group_name) then
      if parent_name == nil then
        if al[i].Parent == nil then
          return al[i]
        end
      else
        if al[i].Parent ~= nil and al[i].Parent.description:match(parent_name) then
          return al[i]
        end
      end
    end
  end
end

function record_find_child(record,child_name)
  for i=0,record.Count-1 do
    if record.Child[i].description:match(child_name) then
      return record.Child[i]
    end
  end
end

function find_child(record,child_name)
  for i=0,record.Count-1 do
    if record.Child[i].description:match(child_name) then
      return record.Child[i]
    end
  end
end

function find_child_group(record,child_name)
  for i=0,record.Count-1 do
    if record.Child[i].description:match(child_name) and record.Child[i].isGroupHeader then
      return record.Child[i]
    end
  end
end

local character_stats = {
  ['00'] = {type=vtDword,desc='Current HP'},
  ['04'] = {type=vtDword,desc='Current MP'},
  ['08'] = {type=vtDword,desc='Max HP'},
  ['0C'] = {type=vtDword,desc='Max MP'},
  ['10'] = {type=vtByte,desc='InParty',ddt="0:false\n17:true"},
  ['13'] = {type=vtByte,desc='Strength'},
  ['14'] = {type=vtByte,desc='Defense'},
  ['15'] = {type=vtByte,desc='Magic'},
  ['16'] = {type=vtByte,desc='Magic Defense'},
  ['17'] = {type=vtByte,desc='Agility'},
  ['18'] = {type=vtByte,desc='Luck'},
  ['19'] = {type=vtByte,desc='Evasion'},
  ['1A'] = {type=vtByte,desc='Accuracy'},
  ['1C'] = {type=vtByte,desc='Overdrive Mode'},
  ['1D'] = {type=vtByte,desc='Overdrive Guage'},
  ['1F'] = {type=vtByte,desc='Sphere Level'},
  ['20'] = {type=vtWord,desc='AP?'}
}

-- local character_names = {
--   {'Tidus',  'D32078'},
--   {'Yuna',   'D3210C'},
--   {'Auron',  'D321A0'},
--   {'Kimahri','D32234'},
--   {'Wakka',  'D322C8'},
--   {'Lulu',   'D3235C'},
--   {'Rikku',  'D323F0'},
--   {'Seymour','D32484'},
--   {'Valefor','D32518'},
--   {'Ifrit',  'D325AC'},
--   {'Ixion',  'D32648'},
--   {'Shiva',  'D326D4'},
--   {'Bahamut','D32768'},
--   {'Anima',  'D327FC'},
--   {'Yojimbo','D32890'},
--   {'Cindy Magus','D32924'},
--   {'Sandy Magus','D329B8'},
--   {'Mindy Magus','D32A4C'},
-- }

local character_names = {
  ['D32078'] = 'Tidus',
  ['D3210C'] = 'Yuna',
  ['D321A0'] = 'Auron',
  ['D32234'] = 'Kimahri',
  ['D322C8'] = 'Wakka',
  ['D3235C'] = 'Lulu',
  ['D323F0'] = 'Rikku',
  ['D32484'] = 'Seymour',
  ['D32518'] = 'Valefor',
  ['D325AC'] = 'Ifrit',
  ['D32640'] = 'Ixion',
  ['D326D4'] = 'Shiva',
  ['D32768'] = 'Bahamut',
  ['D327FC'] = 'Anima',
  ['D32890'] = 'Yojimbo',
  ['D32924'] = 'Cindy Magus',
  ['D329B8'] = 'Sandy Magus',
  ['D32A4C'] = 'Mindy Magus',
}

function find_or_create_group(group_name,parent)
  -- nil parent implies top level
  --print('find_or_create_group: ' .. group_name)
  local group
  if parent == nil then
    group = find_group(group_name)
  else
    group = find_child_group(parent,group_name)
  end
  if group == nil then
    group = create_group(group_name,parent)
  end
  --print('found: ' .. group.description)
  return group
end

function create_group(group_name,parent)
  --print('create_group: ')
  --print(group_name)
  local addr_list = getAddressList()
  rec = addr_list.createMemoryRecord()
  rec.setDescription(group_name)
  rec.isGroupHeader = true
  rec.Options = '[moHideChildren]'
  if parent ~= nil then
    rec.appendToEntry(parent)
  end
  return rec
end


function populate_characters()
  local addr_list = getAddressList()
  local chars_group = find_or_create_group('Characters')
  --print(chars_group)
  for char_offset, char_name in spairs(character_names) do
    --print(char_name)
    local char_group = find_or_create_group(char_name,chars_group)
    -- Stats
    local stat_group = find_or_create_group('Stats',char_group)
    for stat_offset, stat_data in spairs(character_stats) do
      if find_child(stat_group,stat_data.desc) == nil then
        local rec = addr_list.createMemoryRecord()
        rec.setDescription(stat_data.desc)
        rec.setAddress('FFX.exe+'..char_offset..'+' .. stat_offset)
        rec.Type = stat_data.type
        if stat_data.ddt then
          rec.DropDownList.text = stat_data.ddt
          rec.DropDownDescriptionOnly = false
          rec.DropDownReadOnly = true
          rec.DisplayAsDropDownListItem = true
        end
        rec.appendToEntry(stat_group)
      end
    end
    -- Abilities
    for i,ability_name in pairs(abilities_list) do
      --print(ability_name)
      local ab_group = find_or_create_group(ability_name,char_group)
      while ab_group.Count &gt; 0 do
        ab_group.Child[0].destroy()
      end
      for offset, data in spairs(abilities[ability_name]) do
        for bit, desc in spairs(data) do
          local rec = addr_list.createMemoryRecord()
          -- print(offset,bit,desc)
          -- rec.setDescription('Off' .. offset .. ": " .. desc)
          rec.setDescription(desc)
          rec.setAddress('FFX.exe+' .. char_offset .. '+' .. offset)
          rec.DontSave = true
          rec.Type = vtBinary
          rec.Binary.Startbit = bit
          rec.Binary.Size = 1
          rec.DropDownList.text = "0:false\n1:true"
          rec.DropDownReadOnly=true  ---Disallow manual user input
          rec.DropDownDescriptionOnly=false  ----Only show the description part
          rec.DisplayAsDropDownListItem=true  ---Make the record display values like the dropdownlist
          rec.appendToEntry(ab_group)
        end
      end
    end
  end
end


populate_items()
populate_key_items()
populate_characters()
</LuaScript>
</CheatTable>
