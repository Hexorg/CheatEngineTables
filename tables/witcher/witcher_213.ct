<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Inf. Flint (still drops but won't ran out)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infflintAOB,2B 54 24 58 8B CE 52)
registersymbol(infflintAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
sub edx,[esp+58]
cmp edx,1
jge originalcode
mov edx,1

originalcode:
//sub edx,[esp+58]
mov ecx,esi

exit:
jmp returnhere

infflintAOB: //"witcher.exe"+6B44B6:
jmp newmem
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infflintAOB: //"witcher.exe"+6B44B6:
db 2B 54 24 58 8B CE
//Alt: sub edx,[esp+58]
//Alt: mov ecx,esi
unregistersymbol(infflintAOB)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>121</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Inf. Item Usage (still drops but won't ran out)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infalcoholindrinkinggameAOB,8B 98 24 04 00 00 56)
registersymbol(infalcoholindrinkinggameAOB)
aobscan(infpotionAOB,8B 86 24 04 00 00 83 F8 01 7E 25)
registersymbol(infpotionAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ebx,[eax+00000424]
cmp ebx,2
jge originalcode
mov ebx,2

originalcode:
//mov ebx,[eax+00000424]

exit:
jmp returnhere

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
add eax,-01
cmp eax,1
jge originalcode2
mov eax,1

originalcode2:
//jle witcher.initializeEngine1+161561
//add eax,-01

exit2:
jmp returnhere2

infalcoholindrinkinggameAOB: //"witcher.exe"+593049:
jmp newmem
nop
returnhere:

infpotionAOB+9: //"witcher.exe"+4B1B6A:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infalcoholindrinkinggameAOB: //"witcher.exe"+593049:
db 8B 98 24 04 00 00
//Alt: mov ebx,[eax+00000424]
infpotionAOB+9: //"witcher.exe"+4B1B6A:
db 7E 25 83 C0 FF
//Alt: jle witcher.initializeEngine1+161561
//Alt: add eax,-01
unregistersymbol(infalcoholindrinkinggameAOB)
unregistersymbol(infpotionAOB)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>121</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Ingredient/Base Free Alchemy"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ingredientfreeAOB,8B 47 08 8B 4A 04 50 E8 ** ** ** ** 8B 10 8B C8)
registersymbol(ingredientfreeAOB)
aobscan(basefreeAOB,8B 84 24 94 00 00 00 8B 4A 04 50)
registersymbol(basefreeAOB)

ingredientfreeAOB+20: //"witcher.exe"+4BDE9F:
db 90 90 90 90 90

basefreeAOB+24: //"witcher.exe"+4BDF51:
db 90 90 90 90 90



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
ingredientfreeAOB+20: //"witcher.exe"+4BDE9F:
db 7E 0B 83 C0 FF
//Alt: jle witcher.initializeEngine1+16D87C
//Alt: add eax,-01
basefreeAOB+24: //"witcher.exe"+4BDF51:
db 7E 0B 83 C0 FF
//Alt: jle witcher.initializeEngine1+16D92E
//Alt: add eax,-01
unregistersymbol(ingredientfreeAOB)
unregistersymbol(basefreeAOB)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>121</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Orens script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(orenscriptAOB,8B 8E 40 0A 00 00 3B 0F)
registersymbol(orenscriptAOB)

label(pOrens)
registersymbol(pOrens)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pOrens],esi

originalcode:
mov ecx,[esi+00000A40]

exit:
jmp returnhere

///
pOrens:
dd 0
///

orenscriptAOB: //"witcher.exe"+4EED5B:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
orenscriptAOB: //"witcher.exe"+4EED5B:
db 8B 8E 40 0A 00 00
//Alt: mov ecx,[esi+00000A40]
unregistersymbol(pOrens)
unregistersymbol(orenscriptAOB)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>121</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Orens"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pOrens</Address>
          <Offsets>
            <Offset>A40</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Free Purchase"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(orensreaddialogueAOB,8B 80 40 0A 00 00 5E C3 33)
registersymbol(orensreaddialogueAOB)
aobscan(freepurchaseshopAOB,73 ** 6A 00 6A 00 6A 66)
registersymbol(freepurchaseshopAOB)
aobscan(freepurchasedialogueAOB,7D ** 8B CE E8 ** ** ** ** 8B 10 6A 00 6A 00)
registersymbol(freepurchasedialogueAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pOrens],eax
jne originalcode
mov eax,#30000
jmp exit

originalcode:
mov eax,[eax+00000A40]

exit:
jmp returnhere

orensreaddialogueAOB: //"witcher.exe"+373428:
jmp newmem
nop
returnhere:

freepurchaseshopAOB: //"witcher.exe"+4B3422:
db EB

freepurchasedialogueAOB: //"witcher.exe"+59C4AC:
db EB




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
orensreaddialogueAOB: //"witcher.exe"+373428:
db 8B 80 40 0A 00 00
//Alt: mov eax,[eax+00000A40]
freepurchaseshopAOB: //"witcher.exe"+4B3422:
db 73
//Alt: jae
freepurchasedialogueAOB: //"witcher.exe"+59C4AC:
db 7D
//Alt: jnl
unregistersymbol(orensreaddialogueAOB)
unregistersymbol(freepurchaseshopAOB)
unregistersymbol(freepurchasedialogueAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"[Old / Test]"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>33C68558</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>33C68AA8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>33C69A98</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>33C6CFB8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp eax,1
jge originalcode
mov eax,1

originalcode:
popfd
mov [edx+edi*4],eax
add edi,01

exit:
jmp returnhere

"witcher.exe"+587CFB:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"witcher.exe"+587CFB:
db 89 04 BA 83 C7 01
//Alt: mov [edx+edi*4],eax
//Alt: add edi,01
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>33C6BA78</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>33C68558</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>33C68008</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>329510A8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>24840C94</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(orensreaddialogueAOB,8B 80 40 0A 00 00 5E C3 33)
registersymbol(orensreaddialogueAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pOrens],eax
jne originalcode
mov eax,#30000
jmp exit

originalcode:
mov eax,[eax+00000A40]

exit:
jmp returnhere

orensreaddialogueAOB: //"witcher.exe"+373428:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
orensreaddialogueAOB: //"witcher.exe"+373428:
db 8B 80 40 0A 00 00
//Alt: mov eax,[eax+00000A40]
unregistersymbol(orensreaddialogueAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(freepurchaseshopAOB,73 ** 6A 00 6A 00 6A 66)
registersymbol(freepurchaseshopAOB)
aobscan(freepurchasedialogueAOB,7D ** 8B CE E8 ** ** ** ** 8B 10 6A 00 6A 00)
registersymbol(freepurchasedialogueAOB)

freepurchaseshopAOB: //"witcher.exe"+4B3422:
db EB

freepurchasedialogueAOB: //"witcher.exe"+59C4AC:
db EB


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
freepurchaseshopAOB: //"witcher.exe"+4B3422:
db 73
//Alt: jae
freepurchasedialogueAOB: //"witcher.exe"+59C4AC:
db 7D
//Alt: jnl
unregistersymbol(freepurchaseshopAOB)
unregistersymbol(freepurchasedialogueAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>31D21C68</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+08],1
jge originalcode
mov [esp+08],1

originalcode:
mov eax,[esp+08]
cmp eax,edx

exit:
jmp returnhere

"witcher.exe"+593128:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"witcher.exe"+593128:
db 8B 44 24 08 3B C2
//Alt: mov eax,[esp+08]
//Alt: cmp eax,edx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>31D033A8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infalcoholindrinkinggameAOB,8B 98 24 04 00 00 56)
registersymbol(infalcoholindrinkinggameAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ebx,[eax+00000424]
cmp ebx,2
jge originalcode
mov ebx,2

originalcode:
//mov ebx,[eax+00000424]

exit:
jmp returnhere

infalcoholindrinkinggameAOB: //"witcher.exe"+593049:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infalcoholindrinkinggameAOB: //"witcher.exe"+593049:
db 8B 98 24 04 00 00
//Alt: mov ebx,[eax+00000424]
unregistersymbol(infalcoholindrinkinggameAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Inf. Item Usage (still drops but won't ran out)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infalcoholindrinkinggameAOB,8B 98 24 04 00 00 56)
registersymbol(infalcoholindrinkinggameAOB)
aobscan(infpotionAOB,8B 86 24 04 00 00 83 F8 01 7E 25)
registersymbol(infpotionAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ebx,[eax+00000424]
cmp ebx,2
jge originalcode
mov ebx,2

originalcode:
//mov ebx,[eax+00000424]

exit:
jmp returnhere

infalcoholindrinkinggameAOB: //"witcher.exe"+593049:
jmp newmem
nop
returnhere:

infpotionAOB+9: //"witcher.exe"+4B1B6A:
db 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infalcoholindrinkinggameAOB: //"witcher.exe"+593049:
db 8B 98 24 04 00 00
//Alt: mov ebx,[eax+00000424]
infpotionAOB+9: //"witcher.exe"+4B1B6A:
db 7E 25
//Alt: jle witcher.initializeEngine1+161561
unregistersymbol(infalcoholindrinkinggameAOB)
unregistersymbol(infpotionAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>items read Code :mov ecx,[edi+00000424]</Description>
      <Address>008EEF0C</Address>
      <ModuleName>witcher.exe</ModuleName>
      <ModuleNameOffset>4EEF0C</ModuleNameOffset>
      <Before>
        <Byte>E9</Byte>
        <Byte>14</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>8F</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>4D</Byte>
        <Byte>08</Byte>
        <Byte>0F</Byte>
        <Byte>85</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>infflintAOB</Name>
      <Address> 00AB44B6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infalcoholindrinkinggameAOB</Name>
      <Address> 00993049</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infpotionAOB</Name>
      <Address> 008B1B61</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ingredientfreeAOB</Name>
      <Address> 008BDE7F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>basefreeAOB</Name>
      <Address> 008BDF2D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>orensreaddialogueAOB</Name>
      <Address> 00773428</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>freepurchaseshopAOB</Name>
      <Address> 008B3422</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>freepurchasedialogueAOB</Name>
      <Address> 0099C4AC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>orenscriptAOB</Name>
      <Address> 008EED5B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pOrens</Name>
      <Address>20C60011</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
