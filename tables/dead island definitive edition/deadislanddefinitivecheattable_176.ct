<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"F1 - INF. STAM"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"gamedll_x64_rwdi.dll"+65692F)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//movss [rbx+00000DBC],xmm0

exit:
jmp returnhere

"gamedll_x64_rwdi.dll"+65692F:
jmp newmem
nop
nop
nop
returnhere:
[DISABLE]
dealloc(newmem)
"gamedll_x64_rwdi.dll"+65692F:
movss [rbx+00000DBC],xmm0
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>112</Key>
          </Keys>
          <Description>Unminited stamina</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"F2 - INF. HEALTH "</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"gamedll_x64_rwdi.dll"+66D304)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//movss [rdx+00000D2C],xmm1

exit:
jmp returnhere

"gamedll_x64_rwdi.dll"+66D304:
jmp newmem
nop
nop
nop
returnhere:
[DISABLE]
dealloc(newmem)
"gamedll_x64_rwdi.dll"+66D304:
movss [rdx+00000D2C],xmm1
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>113</Key>
          </Keys>
          <Description>Godmode</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"F3 - INF CASH(ONCE ACTIVE, BUY SOMETHING) "</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"gamedll_x64_rwdi.dll"+611C64)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [rbx+00000BC8],#10000000000

originalcode:
//mov [rbx+00000BC8],ecx

exit:
jmp returnhere

"gamedll_x64_rwdi.dll"+611C64:
jmp newmem
nop
returnhere:
[DISABLE]
dealloc(newmem)
"gamedll_x64_rwdi.dll"+611C64:
mov [rbx+00000BC8],ecx
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>114</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"F4 - INF. XP"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"gamedll_x64_rwdi.dll"+6D78FA)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add [rcx+00000080],#10000000000000
originalcode:
//add [rcx+00000080],edx

exit:
jmp returnhere

"gamedll_x64_rwdi.dll"+6D78FA:
jmp newmem
nop
returnhere:
[DISABLE]
dealloc(newmem)
"gamedll_x64_rwdi.dll"+6D78FA:
add [rcx+00000080],edx
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>115</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"F5 - INF. FLASHLIGHT"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"gamedll_x64_rwdi.dll"+733FED)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//movss [rcx+68],xmm0

exit:
jmp returnhere

"gamedll_x64_rwdi.dll"+733FED:
jmp newmem
returnhere:
[DISABLE]
dealloc(newmem)
"gamedll_x64_rwdi.dll"+733FED:
movss [rcx+68],xmm0
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>116</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"F6 - INF. DURABILITY"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"gamedll_x64_rwdi.dll"+360769)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//movss [rbx+04],xmm6

exit:
jmp returnhere

"gamedll_x64_rwdi.dll"+360769:
jmp newmem
returnhere:
[DISABLE]
dealloc(newmem)
"gamedll_x64_rwdi.dll"+360769:
movss [rbx+04],xmm6
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>117</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"F7 - INF ITEMS."</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"gamedll_x64_rwdi.dll"+66F3F5)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [r13+50],#9999
mov r9d,ebp
originalcode:
//dec [r13+50]
//mov r9d,ebp

exit:
jmp returnhere

"gamedll_x64_rwdi.dll"+66F3F5:
jmp newmem
nop
nop
returnhere:
[DISABLE]
dealloc(newmem)
"gamedll_x64_rwdi.dll"+66F3F5:
dec [r13+50]
mov r9d,ebp
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>118</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"No description"</Description>
      <LastState Value="0" RealAddress="1022A50F0"/>
      <VariableType>4 Bytes</VariableType>
      <Address>1022A50F0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"F8 - INF. AMMO"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"gamedll_x64_rwdi.dll"+78733E)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [rax+50],#420
call gamedll_x64_rwdi.dll+1EDAA0
originalcode:
//dec [rax+50]
//call gamedll_x64_rwdi.dll+1EDAA0

exit:
jmp returnhere

"gamedll_x64_rwdi.dll"+78733E:
jmp newmem
nop
nop
nop
returnhere:
[DISABLE]
dealloc(newmem)
"gamedll_x64_rwdi.dll"+78733E:
dec [rax+50]
call gamedll_x64_rwdi.dll+1EDAA0
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
