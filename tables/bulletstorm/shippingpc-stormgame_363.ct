<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Disable Xlive anti-cheat protection"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//A script to disable Xlive's memory check protection
//Made by Geri with Cheat Engine 6.0
//18th May, 2011
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(xlivekiller)
registersymbol(xlivekiller)
aobscan(aobxlive,74 14 FF 75 14 8B CE FF 75 10 53 E8)

aobxlive:
xlivekiller:
db EB 14

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
xlivekiller:
db 74 14
unregistersymbol(xlivekiller)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Unlimited Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.0
//25th February, 2011
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(healthlabel)
registersymbol(healthlabel)
aobscan(aobhealth,F3 0F 2A 8E 08 03 00 00)

newmem: //this is allocated memory, you have read,write,execute access
mov [esi+00000308],0F423F

originalcode:
cvtsi2ss xmm1,[esi+00000308]

exit:
jmp returnhere

aobhealth:
healthlabel:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthlabel:
cvtsi2ss xmm1,[esi+00000308]
//Alt: db F3 0F 2A 8E 08 03 00 00
unregistersymbol(healthlabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Unlimited Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.0
//25th February, 2011
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(ammolabel)
registersymbol(ammolabel)
aobscan(aobammo,39 84 91 64 14 00 00)

newmem: //this is allocated memory, you have read,write,execute access
mov [ecx+edx*4+00001464],63  //ammo in clip
mov [ecx+145C],03E7   //ammo in total

originalcode:
cmp [ecx+edx*4+00001464],eax

exit:
jmp returnhere

aobammo:
ammolabel:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammolabel:
cmp [ecx+edx*4+00001464],eax
//Alt: db 39 84 91 64 14 00 00
unregistersymbol(ammolabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Unlimited Charged Shots"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.0
//25th February, 2011
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(chargelabel)
registersymbol(chargelabel)
aobscan(aobcharge,39 84 91 5C 14 00 00)

newmem: //this is allocated memory, you have read,write,execute access
mov [ecx+edx*4+0000145C],9 //change real amount
mov [ecx+edx*4+00001464],9 //change displayed amount

originalcode:
cmp [ecx+edx*4+0000145C],eax

exit:
jmp returnhere

aobcharge:
chargelabel:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chargelabel:
cmp [ecx+edx*4+0000145C],eax
//Alt: db 39 84 91 5C 14 00 00
unregistersymbol(chargelabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Unlimited Thumper"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.0
//25th February, 2011
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(thumperlabel)
registersymbol(thumperlabel)
aobscan(aobthumper,8B B1 DC 03 00 00 FF)

newmem: //this is allocated memory, you have read,write,execute access
mov [ecx+000003DC],9

originalcode:
mov esi,[ecx+000003DC]

exit:
jmp returnhere

aobthumper:
thumperlabel:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
thumperlabel:
mov esi,[ecx+000003DC]
//Alt: db 8B B1 DC 03 00 00
unregistersymbol(thumperlabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Change coords with Shift, Control and arrow keys"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.0
//25th February, 2011
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
alloc(cordzmod,4)
label(down)
label(left)
label(right)
label(forward)
label(backward)
label(coordslabel)
registersymbol(coordslabel)
aobscan(aobcoords,8B 40 60 89 44 24 34)

cordzmod:
dd (float)25

newmem: //this is allocated memory, you have read,write,execute access
pushfd
pushad
push A1
call GetAsyncKeyState
shr ax,0F
cmp ax,1
popad
jne down
fld dword ptr [eax+60]
fadd dword ptr [cordzmod]
fstp dword ptr [eax+60]

down:
pushad
push A3
call GetAsyncKeyState
shr ax,0F
cmp ax,1
popad
jne right
fld dword ptr [eax+60]
fsub dword ptr [cordzmod]
fstp dword ptr [eax+60]


right:
pushad
push 27
call GetAsyncKeyState
shr ax,0F
cmp ax,1
popad
jne left
fld dword ptr [eax+5C]
fadd dword ptr [cordzmod]
fstp dword ptr [eax+5C]

left:
pushad
push 25
call GetAsyncKeyState
shr ax,0F
cmp ax,1
popad
jne forward
fld dword ptr [eax+5C]
fsub dword ptr [cordzmod]
fstp dword ptr [eax+5C]

forward:
pushad
push 26
call GetAsyncKeyState
shr ax,0F
cmp ax,1
popad
jne backward
fld dword ptr [eax+58]
fadd dword ptr [cordzmod]
fstp dword ptr [eax+58]

backward:
pushad
push 28
call GetAsyncKeyState
shr ax,0F
cmp ax,1
popad
jne originalcode
fld dword ptr [eax+58]
fsub dword ptr [cordzmod]
fstp dword ptr [eax+58]


originalcode:
popfd
mov eax,[eax+60]
mov [esp+34],eax

exit:
jmp returnhere

aobcoords:
coordslabel:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
coordslabel:
mov eax,[eax+60]
mov [esp+34],eax
//Alt: db 8B 40 60 89 44 24 34
dealloc(cordzmod)
unregistersymbol(coordslabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Fast move"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Made by Geri with Cheat Engine 6.0
//25th February, 2011
//All rights reserved. You are not allowed to use these scripts to create Your own trainer without my permission.
//Contact e-mail: trainers4free@gmail.com
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(movelabel)
registersymbol(movelabel)
aobscan(aobmove,F3 0F 10 8F B0 02 00 00 F3 * * * * * * * f3 0f 5e)

newmem: //this is allocated memory, you have read,write,execute access
mov [edi+000002B0],(float)10200

originalcode:
movsd xmm1,[edi+000002B0]

exit:
jmp returnhere

aobmove:
movelabel:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
movelabel:
db F3 0F 10 8F B0 02 00 00
unregistersymbol(movelabel)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_XLive</Name>
      <Address>012BEF52</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthlabel</Name>
      <Address>00488410</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>xlivetrapcounter</Name>
      <Address>06200000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
