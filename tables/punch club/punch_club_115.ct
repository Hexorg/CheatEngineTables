<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>49</ID>
      <Description>"Boost Values"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Punch Club.exe
  Version: 
  Date   : 2016-01-13
  Author : Schnitzelmaker

  This script does blah blah blah
}

[ENABLE]

aobscan(GAMERES_Set_string,D9 45 10 83 EC 04 83 EC 04 D9 1C 24 53) // should be unique
alloc(new_GAMERES_Set_string,$1000)

label(originalcode)
label(return)
label(cmpmoney)
label(cmpupgradepoints)
label(cmpstrength)
label(cmpagility)
label(cmpstamina)
label(cmphealth)
label(cmpmood)
label(cmphunger)
label(cmpenergy)
label(CompareIsAbove)
label(resetcode)

label(fMinMoney)
label(fMinUpgradePoints)
label(fMinStrength)
label(fMinAgility)
label(fMinStamina)
label(fMinHealth)
label(fMinMood)
label(fMinHunger)
label(fMinFame)
label(fMinEnergy)

registersymbol(GAMERES_Set_string)
registersymbol(fMinMoney)
registersymbol(fMinUpgradePoints)
registersymbol(fMinStrength)
registersymbol(fMinAgility)
registersymbol(fMinStamina)
registersymbol(fMinHealth)
registersymbol(fMinMood)
registersymbol(fMinHunger)
registersymbol(fMinEnergy)
registersymbol(fMinFame)

new_GAMERES_Set_string:
  push eax
  push ecx

cmpmoney: //_money
  mov eax,[ebp+0C]
  cmp byte ptr [eax+0C], "_"
  jne cmpupgradepoints
  cmp byte ptr [eax+0E], "m"
  jne cmpupgradepoints
  cmp byte ptr [eax+10], "o"
  jne cmpupgradepoints
  cmp byte ptr [eax+12], "n"
  jne cmpupgradepoints
  cmp byte ptr [eax+14], 0x65 //"e"
  jne cmpupgradepoints
  cmp byte ptr [eax+16], "y"
  jne cmpupgradepoints
  mov ecx, fMinMoney
  jmp CompareIsAbove

cmpupgradepoints: //_sp
  mov eax,[ebp+0C]
  cmp byte ptr [eax+0C], "_"
  jne cmpstrength
  cmp byte ptr [eax+0E], "s"
  jne cmpstrength
  cmp byte ptr [eax+10], "p"
  jne cmpstrength
  mov ecx, fMinUpgradePoints
  jmp CompareIsAbove

cmpstrength: //_str
  mov eax,[ebp+0C]
  cmp byte ptr [eax+0C], "_"
  jne cmpagility
  cmp byte ptr [eax+0E], "s"
  jne cmpagility
  cmp byte ptr [eax+10], "t"
  jne cmpagility
  cmp byte ptr [eax+12], "r"
  jne cmpagility
  mov ecx, fMinStrength
  jmp CompareIsAbove

cmpagility: //_agl
  mov eax,[ebp+0C]
  cmp byte ptr [eax+0C], "_"
  jne cmpstamina
  cmp byte ptr [eax+0E], 0x61 //"a"
  jne cmpstamina
  cmp byte ptr [eax+10], "g"
  jne cmpstamina
  cmp byte ptr [eax+12], "l"
  jne cmpstamina
  mov ecx, fMinAgility
  jmp CompareIsAbove

cmpstamina: //_stm
  mov eax,[ebp+0C]
  cmp byte ptr [eax+0C], "_"
  jne cmphealth
  cmp byte ptr [eax+0E], "s"
  jne cmphealth
  cmp byte ptr [eax+10], "t"
  jne cmphealth
  cmp byte ptr [eax+12], "m"
  jne cmphealth
  mov ecx, fMinStamina
  jmp CompareIsAbove

cmphealth: //_hp
  mov eax,[ebp+0C]
  cmp byte ptr [eax+0C], "_"
  jne cmpmood
  cmp byte ptr [eax+0E], "h"
  jne cmpmood
  cmp byte ptr [eax+10], "p"
  jne cmpmood
  mov ecx, fMinHealth
  jmp CompareIsAbove

cmpmood: //_mood
  mov eax,[ebp+0C]
  cmp byte ptr [eax+0C], "_"
  jne cmphunger
  cmp byte ptr [eax+0E], "m"
  jne cmphunger
  cmp byte ptr [eax+10], "o"
  jne cmphunger
  cmp byte ptr [eax+12], "o"
  jne cmphunger
  cmp byte ptr [eax+14], 0x64 //"d"
  jne cmphunger
  mov ecx, fMinMood
  jmp CompareIsAbove

cmphunger: //_hunger
  mov eax,[ebp+0C]
  cmp byte ptr [eax+0C], "_"
  jne cmpfame
  cmp byte ptr [eax+0E], "h"
  jne cmpfame
  cmp byte ptr [eax+10], "u"
  jne cmpfame
  cmp byte ptr [eax+12], "n"
  jne cmpfame
  cmp byte ptr [eax+14], "g"
  jne cmpfame
  cmp byte ptr [eax+16], 0x65 //"e"
  jne cmpfame
  cmp byte ptr [eax+18], "r"
  mov ecx, fMinHunger
  jmp CompareIsAbove

cmpfame: //_fame
  mov eax,[ebp+0C]
  cmp byte ptr [eax+0C], "_"
  jne cmpenergy
  cmp byte ptr [eax+0E], 0x66 //"f"
  jne cmpenergy
  cmp byte ptr [eax+10], 0x61 //"a"
  jne cmpenergy
  cmp byte ptr [eax+12], "m"
  jne cmpenergy
  cmp byte ptr [eax+14], 0x65 //"e"
  jne cmpenergy
  mov ecx, fMinFame
  jmp CompareIsAbove

cmpenergy: //_energy
  mov eax,[ebp+0C]
  cmp byte ptr [eax+0C], "_"
  jne resetcode
  cmp byte ptr [eax+0E], 0x65 //"e"
  jne resetcode
  cmp byte ptr [eax+10], "n"
  jne resetcode
  cmp byte ptr [eax+12], 0x65 //"e"
  jne resetcode
  cmp byte ptr [eax+14], "r"
  jne resetcode
  cmp byte ptr [eax+16], "g"
  jne resetcode
  cmp byte ptr [eax+18], "y"
  jne resetcode
  mov ecx, fMinEnergy
  jmp CompareIsAbove

CompareIsAbove:
  fld dword ptr [ecx]
  fld dword ptr [ebp+10]
  fcompp
  fnstsw ax
  sahf
  ja resetcode
  mov eax, [ecx]
  mov [ebp+10], eax

resetcode:
  pop ecx
  pop eax

originalcode:
  fld dword ptr [ebp+10]
  sub esp,04
  jmp return


fMinMoney:
 dd (float)10000.0

fMinUpgradePoints:
 dd (float)201.0

fMinStrength:
 dd (float)100.0

fMinAgility:
 dd (float)100.0

fMinStamina:
 dd (float)100.0

fMinHealth:
 dd (float)100.0

fMinMood:
 dd (float)100.0

fMinHunger:
 dd (float)100.0

fMinFame:
 dd (float)5000.0

fMinEnergy:
 dd (float)100.0

GAMERES_Set_string:
  jmp new_GAMERES_Set_string
  nop
return:

[DISABLE]

GAMERES_Set_string:
  db D9 45 10 83 EC 04

unregistersymbol(GAMERES_Set_string)
unregistersymbol(MINVALUE)
unregistersymbol(fMinMoney)
unregistersymbol(fMinUpgradePoints)
unregistersymbol(fMinStrength)
unregistersymbol(fMinAgility)
unregistersymbol(fMinStamina)
unregistersymbol(fMinHealth)
unregistersymbol(fMinMood)
unregistersymbol(fMinHunger)
unregistersymbol(fMinEnergy)
unregistersymbol(fMinFame)
dealloc(new_GAMERES_Set_string)

{
// ORIGINAL CODE - INJECTION POINT: 060D8BAA

060D8B8E: FF 75 0C           -  push [ebp+0C]
060D8B91: 50                 -  push eax
060D8B92: 39 00              -  cmp [eax],eax
060D8B94: E8 AF 9B F5 FF     -  call 06032748
060D8B99: 83 C4 10           -  add esp,10
060D8B9C: 8B D8              -  mov ebx,eax
060D8B9E: 8B C3              -  mov eax,ebx
060D8BA0: 3D FF FF FF FF     -  cmp eax,FFFFFFFF
060D8BA5: 74 1D              -  je 060D8BC4
060D8BA7: 8B 46 0C           -  mov eax,[esi+0C]
// ---------- INJECTING HERE ----------
060D8BAA: D9 45 10           -  fld dword ptr [ebp+10]
060D8BAD: 83 EC 04           -  sub esp,04
// ---------- DONE INJECTING  ----------
060D8BB0: 83 EC 04           -  sub esp,04
060D8BB3: D9 1C 24           -  fstp dword ptr [esp]
060D8BB6: 53                 -  push ebx
060D8BB7: 50                 -  push eax
060D8BB8: 39 00              -  cmp [eax],eax
060D8BBA: E8 49 14 D6 15     -  call 1BE3A008
060D8BBF: 83 C4 10           -  add esp,10
060D8BC2: EB 2E              -  jmp 060D8BF2
060D8BC4: 8B 46 08           -  mov eax,[esi+08]
060D8BC7: 83 EC 08           -  sub esp,08
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Money"</Description>
          <VariableType>Float</VariableType>
          <Address>fMinMoney</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Upgrade Points"</Description>
          <VariableType>Float</VariableType>
          <Address>fMinUpgradePoints</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Strength"</Description>
          <VariableType>Float</VariableType>
          <Address>fMinStrength</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Agility"</Description>
          <VariableType>Float</VariableType>
          <Address>fMinAgility</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Stamina"</Description>
          <VariableType>Float</VariableType>
          <Address>fMinStamina</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Health"</Description>
          <VariableType>Float</VariableType>
          <Address>fMinHealth</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Mood"</Description>
          <VariableType>Float</VariableType>
          <Address>fMinMood</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Hunger"</Description>
          <VariableType>Float</VariableType>
          <Address>fMinHunger</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Energy"</Description>
          <VariableType>Float</VariableType>
          <Address>fMinEnergy</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"Fame"</Description>
          <VariableType>Float</VariableType>
          <Address>fMinFame</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
