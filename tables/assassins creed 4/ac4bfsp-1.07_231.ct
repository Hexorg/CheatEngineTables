<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>194</ID>
      <Description>"[DebugMenu]"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>000080</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

alloc( pHook, 256, AC4BFSP.exe )
alloc( pContext, 4, AC4BFSP.exe )
registersymbol( pContext )
label( back )

pContext:
dd 0

aobscanmodule( pBase_AOB, AC4BFSP.exe, 558BEC83EC10A1????????5356578BF1506A03 )
label( pBase )
registersymbol( pBase )
pBase_AOB:
pBase:
push pHook
ret
back:

pHook:
mov [pContext],ecx
push ebp
mov ebp,esp
sub esp,10
jmp back

[DISABLE]

pBase:
push ebp
mov ebp,esp
sub esp,10

unregistersymbol( pBase )
unregistersymbol( pContext )
dealloc( pContext )
dealloc( pHook )
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>209</ID>
          <Description>"pBase"</Description>
          <LastState Value="83EC8B55" Activated="0" RealAddress="019E8490"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pBase</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>195</ID>
              <Description>"pContext"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pContext</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>196</ID>
          <Description>"Cheat Handler"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc( KeyHandlerThread, 4096 )
registersymbol( KeyHandlerThread )
CreateThread( KeyHandlerThread )
alloc( KeyHandlerOff, 4 )
registersymbol( KeyHandlerOff )
label( ExitKeyHandler )

// Functions list start

label( IncreaseSpawnedHorseJumpLength )
label( DecreaseSpawnedHorseJumpLength )
label( NavalSinkPlayerShip )
label( OnlineIncrementKillCount )
label( ResetConflict )
label( IncreaseNotoriety )
label( DecreaseNotoriety )
label( IncreaseWantedLevel )
label( DecreaseWantedLevel )
label( UnfogCurrentMap )
label( NavalShowSpeedInfo )
label( NavalIgnoreWindDirection )
label( ChangeDebugDudeType )
label( ToggleHud )
label( SetMaxAssassinRank )
label( TogglePlayerVanish )
label( EnableAssassinCollisionWithTriggerZones )
label( NavalCrewMode )
label( NavalRaiseBeaufortScale )
label( NavalLowerBeaufortScale )
label( LockAllWorldUpgrades )
label( SpawnFollowDude )
label( SpawnFightDude )
label( SpawnShipDude )
label( SpawnRedBallDude )
label( SpawnStillDude )
label( NavalDamagePlayerShip )
label( ToggleFullProgressTrackerUnlock )
label( UnlockAllWorldUpgrades )
label( UnlockAndGainAllWorldUpgrades )
label( InfiniteBreathMode )
label( FightCheatMode )
label( FightActionsPacing )
label( FightDecisionsPacing )
label( FightDecisionsPacingStreak )
label( FightActionsPacingStreak )
label( ComboKillOverride )
label( RangedComboKillOverride )
label( ForceSingleHiddenBlade )
label( IncrementAllEquippedFirearmsDamageRating )
label( IncrementAllEquippedFirearmsIncapacitateRating )
label( DisableGroupPhysics )
label( NavalAddCrew )
label( NavalRemoveCrew )
label( NukeEnemies )
label( NukeAllies )
label( NukeYourself )
label( RefillAllEquipment )
label( ToggleCrowdAirAssassination )
label( NavalIncapacitateNearbyEnemyShips )
label( NavalIncapacitateNearbyAllyShips )
label( Invisible )
label( RefillPlayerHealth )
label( NavalInvisible )
label( GodMode )

// end of Functions list

KeyHandlerOff:
dd 0

KeyHandlerThread:
push 0a
call kernel32.Sleep

cmp [KeyHandlerOff],1
je ExitKeyHandler

cmp [pContext],0
je KeyHandlerThread

push 60 // VK_NUMPAD0
call GetAsyncKeyState
test ax,ax
jne TogglePlayerVanish

push 6E // VK_DECIMAL
call GetAsyncKeyState
test ax,ax
jne GodMode

push 61 // VK_NUMPAD1
call GetAsyncKeyState
test ax,ax
jne RefillAllEquipment

push 62 // VK_NUMPAD2
call GetAsyncKeyState
test ax,ax
jne Invisible

push 63 // VK_NUMPAD3
call GetAsyncKeyState
test ax,ax
jne NavalInvisible

push 64 // VK_NUMPAD4
call GetAsyncKeyState
test ax,ax
jne InfiniteBreathMode

push 65 // VK_NUMPAD5
call GetAsyncKeyState
test ax,ax
jne ResetConflict

push 66 // VK_NUMPAD6
call GetAsyncKeyState
test ax,ax
jne NavalIgnoreWindDirection

push 67 // VK_NUMPAD7
call GetAsyncKeyState
test ax,ax
jne IncreaseWantedLevel

push 68 // VK_NUMPAD8
call GetAsyncKeyState
test ax,ax
jne ToggleHud

push 69 // VK_NUMPAD9
call GetAsyncKeyState
test ax,ax
jne DecreaseWantedLevel


jmp KeyHandlerThread

//******************************************
//*                                        *
//*          Debug Menu Functions          *
//*                                        *
//******************************************

// Nuke Enemies
// pseudo: Nuke_Enemies( 1, pContext )

NukeEnemies:
push [pContext]
push [pContext]
push 1
mov ecx,[pBase+3F4]
call ecx
add esp,C
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Nuke Allies
// pseudo: Nuke_Allies( 1, pContext )

NukeAllies:
push [pContext]
push 1
mov ecx,[pBase+4F4]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Refill player's health
// pseudo: Refill_PlayerHealth( 1, pContext )

RefillPlayerHealth:
push [pContext]
push 1
mov ecx,[pBase+587]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Reset Conflict
// pseudo: Reset_Conflict( 1, pContext )

ResetConflict:
push [pContext]
push 1
mov ecx,[pBase+622]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Refill All Equipment
// pseudo: Refill_AllEquipment( 1, pContext )

RefillAllEquipment:
push [pContext]
push 1
mov ecx,[pBase+671]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Nuke Yourself
// pseudo: Nuke_Yourself( 1, pContext )

NukeYourself:
push [pContext]
push 1
mov ecx,[pBase+6C1]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Toggle Crowd Air Assassination
// pseudo: Toggle_Crowd_AirAssassination( 1, pContext )

ToggleCrowdAirAssassination:
push [pContext]
push 1
mov ecx,[pBase+7C6]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Change Debug Dude Type
// pseudo: Change_Debug_DudeType( 1, pContext )

ChangeDebugDudeType:
push [pContext]
push 1
mov ecx,[pBase+87C]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Spawn Follow Dude
// pseudo: Spawn_FollowDude( 1, pContext )

SpawnFollowDude:
push [pContext]
push 1
mov ecx,[pBase+8C3]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Spawn RedBall Dude
// pseudo: Spawn_RedBallDude( 1, pContext )

SpawnRedBallDude:
push [pContext]
push 1
mov ecx,[pBase+913]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Spawn Still Dude
// pseudo: Spawn_StillDude( 1, pContext )

SpawnStillDude:
push [pContext]
push 1
mov ecx,[pBase+963]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Spawn Fight Dude
// pseudo: Spawn_FightDude( 1, pContext )

SpawnFightDude:
push [pContext]
push 1
mov ecx,[pBase+9B7]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Spawn Ship Dude
// pseudo: Spawn_ShipDude( 1, pContext )

SpawnShipDude:
push [pContext]
push 1
mov ecx,[pBase+A26]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Increase JumpLength for Spawned Debug Horse
// pseudo: Increase_JumpLength( 1 )

IncreaseSpawnedHorseJumpLength:
push 1
mov ecx,[pBase+A80]
call ecx
add esp,4
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Decrease JumpLength for Spawned Debug Horse
// pseudo: Decrease_JumpLength( 1 )

DecreaseSpawnedHorseJumpLength:
push 1
mov ecx,[pBase+AF6]
call ecx
add esp,4
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Decrease Notoriety
// pseudo: Decrease_Notoriety( 1, pContext )

DecreaseNotoriety:
push [pContext]
push 1
mov ecx,[pBase+B64]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Increase Notoriety
// pseudo: Increase_Notoriety( 1, pContext )

IncreaseNotoriety:
push [pContext]
push 1
mov ecx,[pBase+BB4]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Decrease Wanted Level
// pseudo: Decrease_WantedLevel( 1, pContext )

DecreaseWantedLevel:
push [pContext]
push 1
mov ecx,[pBase+C04]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Increase Wanted Level
// pseudo: Increase_WantedLevel( 1, pContext )

IncreaseWantedLevel:
push [pContext]
push 1
mov ecx,[pBase+C53]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Blend Action] Toggle Player Vanish :
// pseudo: Toggle_PlayerVanish( 1, pContext )

TogglePlayerVanish:
push [pContext]
push 1
mov ecx,[pBase+CA3]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Unfog current map
// pseudo: Unfog_CurrentMap( 1, pContext )

UnfogCurrentMap:
push [pContext]
push 1
mov ecx,[pBase+CF3]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Unlock All World Upgrades
// pseudo: Unlock_All_WorldUpgrades( 1, pContext )

UnlockAllWorldUpgrades:
push [pContext]
push 1
mov ecx,[pBase+D92]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Toggle Full Progress Tracker Unlock
// pseudo: Toggle_Full_ProgressTrackerUnlock( 1, pContext )

ToggleFullProgressTrackerUnlock:
push [pContext]
push 1
mov ecx,[pBase+F44]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Unlock And Gain All World Upgrades
// pseudo: Unlock_And_GainAllWorldUpgrades( 1, pContext )

UnlockAndGainAllWorldUpgrades:
push [pContext]
push 1
mov ecx,[pBase+FB5]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Lock All World Upgrades
// pseudo: Lock_All_WorldUpgrades( 1, pContext )

LockAllWorldUpgrades:
push [pContext]
push 1
mov ecx,[pBase+1026]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// ***DISABLED***Set Max Assassin Rank (All Abilities):
// pseudo: Set_Max_AssassinRank( 1, pContext )

SetMaxAssassinRank:
push [pContext]
push 1
mov ecx,[pBase+1098]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Invisible :
// pseudo: Invisible( 1, pContext )

Invisible:
push [pContext]
push 1
mov ecx,[pBase+10E7]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// God Mode :
// pseudo: God_Mode( 1, pContext )

GodMode:
push [pContext]
push 1
mov ecx,[pBase+1137]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Infinite Breath Mode :
// pseudo: Infinite_BreathMode( 1, pContext )

InfiniteBreathMode:
push [pContext]
push 1
mov ecx,[pBase+1185]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Enable assassin collision with trigger zones :
// pseudo: Enable_Assassin_CollisionWithTriggerZones( 1, pContext )

EnableAssassinCollisionWithTriggerZones:
push [pContext]
push 1
mov ecx,[pBase+11D5]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// ToggleHud
// pseudo: Toggle_HUD( 1, pContext )

ToggleHud:
push [pContext]
push 1
mov ecx,[pBase+12D2]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Online] Increment kill count
// pseudo: Increment_KillCount( 1 )

OnlineIncrementKillCount:
push 1
mov ecx,[pBase+1415]
call ecx
add esp,4
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Invisible:
// pseudo: Naval_Invisible( 1, pContext )

NavalInvisible:
push [pContext]
push 1
mov ecx,[pBase+1465]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Incapacitate nearby Enemy ships
// pseudo: Naval_Incapacitate_NearbyEnemyShips( 1, pContext )

NavalIncapacitateNearbyEnemyShips:
push [pContext]
push 1
mov ecx,[pBase+14BC]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Incapacitate nearby Ally ships
// pseudo: Naval_Incapacitate_NearbyAllyShips( 1, pContext )

NavalIncapacitateNearbyAllyShips:
push [pContext]
push 1
mov ecx,[pBase+152F]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Sink player ship
// pseudo: Naval_Sink_PlayerShip( 1, pContext )

NavalSinkPlayerShip:
push [pContext]
push 1
mov ecx,[pBase+159E]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Damage player ship
// pseudo: Naval_Damage_PlayerShip( 1, pContext )

NavalDamagePlayerShip:
push [pContext]
push 1
mov ecx,[pBase+15ED]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Show Speed Info
// pseudo: Naval_Show_SpeedInfo( 1, pContext )

NavalShowSpeedInfo:
push [pContext]
push 1
mov ecx,[pBase+163D]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Ignore Wind Direction
// pseudo: Naval_Ignore_WindDirection( 1, pContext )

NavalIgnoreWindDirection:
push [pContext]
push 1
mov ecx,[pBase+168C]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Raise Beaufort Scale :
// pseudo: Naval_Raise_BeaufortScale( 1, pContext )

NavalRaiseBeaufortScale:
push [pContext]
push 1
mov ecx,[pBase+16E0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Lower Beaufort Scale :
// pseudo: Naval_Lower_BeaufortScale( 1, pContext )

NavalLowerBeaufortScale:
push [pContext]
push 1
mov ecx,[pBase+1735]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Crew Mode :
// pseudo: Naval_CrewMode( 1, pContext )

NavalCrewMode:
push [pContext]
push 1
mov ecx,[pBase+1787]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Add Crew :
// pseudo: Naval_AddCrew( 1, pContext )

NavalAddCrew:
push [pContext]
push 1
mov ecx,[pBase+17F5]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Remove Crew :
// pseudo: Naval_RemoveCrew( 1, pContext )

NavalRemoveCrew:
push [pContext]
push 1
mov ecx,[pBase+1845]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Fight Cheat Mode :
// pseudo: Fight_CheatMode( 1, pContext )

FightCheatMode:
push [pContext]
push 1
mov ecx,[pBase+189C]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Fight Actions pacing :
// pseudo: Fight_ActionsPacing( 1, pContext )

FightActionsPacing:
push [pContext]
push 1
mov ecx,[pBase+190E]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Fight Decisions pacing :
// pseudo: Fight_DecisionsPacing( 1, pContext )

FightDecisionsPacing:
push [pContext]
push 1
mov ecx,[pBase+1963]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Fight Decisions pacing (Streak) :
// pseudo: Fight_Decisions_PacingStreak( 1, pContext )

FightDecisionsPacingStreak:
push [pContext]
push 1
mov ecx,[pBase+19B7]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Fight Actions pacing (Streak) :
// pseudo: Fight_Actions_PacingStreak( 1, pContext )

FightActionsPacingStreak:
push [pContext]
push 1
mov ecx,[pBase+1A0B]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Combo Kill Override :
// pseudo: Combo_KillOverride( 1, pContext )

ComboKillOverride:
push [pContext]
push 1
mov ecx,[pBase+1A60]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Ranged Combo Kill Override :
// pseudo: Ranged_Combo_KillOverride( 1, pContext )

RangedComboKillOverride:
push [pContext]
push 1
mov ecx,[pBase+1AB5]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Force Single Hidden Blade :
// pseudo: Force_Single_HiddenBlade( 1, pContext )

ForceSingleHiddenBlade:
push [pContext]
push 1
mov ecx,[pBase+1B0C]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Disable Group Physics :
// pseudo: Disable_GroupPhysics( 1, pContext )

DisableGroupPhysics:
push [pContext]
push 1
mov ecx,[pBase+1B5E]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Increment All Equipped Firearms Damage Rating :
// pseudo: Increment_All_EquippedFirearmsDamageRating( 1, pContext )

IncrementAllEquippedFirearmsDamageRating:
push [pContext]
push 1
mov ecx,[pBase+1BB4]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Increment All Equipped Firearms Incapacitate Rating :
// pseudo: Increment_All_EquippedFirearmsIncapacitateRating( 1, pContext )

IncrementAllEquippedFirearmsIncapacitateRating:
push [pContext]
push 1
mov ecx,[pBase+1C26]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ExitKeyHandler:
mov [KeyHandlerOff],2
ret

[DISABLE]

{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "KeyHandlerOff" ) == 0 then --could be 2 already
  writeInteger( "KeyHandlerOff", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "KeyHandlerOff" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}

unregistersymbol( KeyHandlerOff )
dealloc( KeyHandlerOff )
unregistersymbol( KeyHandlerThread )
dealloc( KeyHandlerThread )
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>210</ID>
      <Description>"[Cheats]"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>000080</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan( pMenu_AOB,568BF18B0D????????8D86????????50E8????????8B0D????????68????????81C1????????56518D8E????????E8????????C705????????000000005EC3 )
label( pMenu )
registersymbol( pMenu )
[pMenu_AOB+35]:
pMenu:

aobscan( DisableDisabler_AOB, B001EBC184C9 )
label( DisableDisabler )
registersymbol( DisableDisabler )
DisableDisabler_AOB:
DisableDisabler:
xor al,al

[DISABLE]

DisableDisabler:
mov al,1

unregistersymbol( DisableDisabler )
unregistersymbol( pMenu )
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>211</ID>
          <Description>"[Cheats] (0 - locked; 1 - unlocked)"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>212</ID>
              <Description>"[1] Celestial Navigation"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenu</Address>
              <Offsets>
                <Offset>FC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>213</ID>
              <Description>"[2] Arrr Matey!"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenu</Address>
              <Offsets>
                <Offset>12C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>214</ID>
              <Description>"[3] No Quarter"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenu</Address>
              <Offsets>
                <Offset>15C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>215</ID>
              <Description>"[4] Scourge Of The Seven Seas"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenu</Address>
              <Offsets>
                <Offset>18C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>216</ID>
              <Description>"[5] Loaded To The Gunwale"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenu</Address>
              <Offsets>
                <Offset>1BC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>217</ID>
              <Description>"[6] Poseidon's Will"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenu</Address>
              <Offsets>
                <Offset>1EC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>218</ID>
              <Description>"[7] Dead Men Tell No Tales"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenu</Address>
              <Offsets>
                <Offset>21C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>219</ID>
              <Description>"[8] Shiver Me Timbers!"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenu</Address>
              <Offsets>
                <Offset>24C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>220</ID>
              <Description>"[9] Armed To The Teeth"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenu</Address>
              <Offsets>
                <Offset>27C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>221</ID>
              <Description>"[10] Deceased Crew"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pMenu</Address>
              <Offsets>
                <Offset>2AC</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>237</ID>
      <Description>"[Extras]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>000080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>177</ID>
          <Description>"Old School Sprint (Cielos)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// see http://forum.cheatengine.org/viewtopic.php?p=5517586#5517586 for more details!

[ENABLE]

aobscan(maxmovingspeedwriteAOB,F3 0F 11 8E 3C 04 00 00 0F 28 C1)
registersymbol(maxmovingspeedwriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem:
movss [esi+0000043C],xmm1
pushad
push 20 //Spacebar
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je originalcode
cmp [esi+0000043C],(float)0.8
jle originalcode
mov [esi+0000043C],(float)0.8
movss xmm1,[esi+0000043C]

originalcode:
//movss [esi+0000043C],xmm1

exit:
jmp returnhere

maxmovingspeedwriteAOB:
jmp newmem
nop
nop
nop
returnhere:
 
[DISABLE]

dealloc(newmem)
maxmovingspeedwriteAOB:
db F3 0F 11 8E 3C 04 00 00
//Alt: movss [esi+0000043C],xmm1
unregistersymbol(maxmovingspeedwriteAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>238</ID>
          <Description>"Map Marker Teleport (SteveAndrew)"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc(MapMarkerTeleport,1024)
aobscan(MarkerAddress,d9 5e 50 d9 47 14 8d 4e 58 d9 5e 54 8d 50)
aobscan(XYZAddress,0f 28 40 30 0f 29 86 f0 01 00 00 e8)
label(GetPlayerCoordinatesHook)
registersymbol(GetPlayerCoordinatesHook)
label(PlayerCoordsPtr)
label(MapMarkerCoordinates)
registersymbol(MapMarkerCoordinates)
label(SetForTeleport)
label(NoTeleport)
registersymbol(MarkerAddress)
registersymbol(XYZAddress)
registersymbol(PlayerCoordsPtr)

MapMarkerTeleport: // map marker set! (right mouse button clicked on map)
push ecx
fstp dword [esi+50] // original
fld dword [edi+14] 	// original
mov ecx,[esi+50]
mov [MapMarkerCoordinates],ecx
fst [MapMarkerCoordinates+4]
mov [SetForTeleport],1
pop ecx
jmp MarkerAddress+6

GetPlayerCoordinatesHook:
cmp [SetForTeleport],1
jne NoTeleport
cmp [eax-74],1C000010
jne NoTeleport

push eax
push ecx
lea eax,[eax+30]
mov [PlayerCoordsPtr],eax
mov ecx,[MapMarkerCoordinates]
mov [eax],ecx
mov ecx,[MapMarkerCoordinates+4]
mov [eax+4],ecx
mov [eax+8],(float)10.0 //pretty fairly high
movaps xmm0,[eax]
pop ecx
pop eax
mov [SetForTeleport],0

NoTeleport:
movaps [esi+1F0],xmm0
jmp XYZAddress+0b

PlayerCoordsPtr:
dd 0
MapMarkerCoordinates:
dq 0
SetForTeleport:
dd 0

MarkerAddress:
jmp MapMarkerTeleport
nop

XYZAddress+4:
jmp GetPlayerCoordinatesHook
db 90 90

[DISABLE]

MarkerAddress:
db d9 5e 50 d9 47 14
//fstp dword [esi+50]
//fld dword [edi+14]

XYZAddress+4:
db 0f 29 86 f0 01 00 00
//movaps [esi+1f0],xmm0

unregistersymbol(PlayerCoordsPtr)
unregistersymbol(XYZAddress)
unregistersymbol(MarkerAddress)
unregistersymbol(MapMarkerCoordinates)
unregistersymbol(GetPlayerCoordinatesHook)
dealloc(MapMarkerTeleport)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>239</ID>
              <Description>"Map Marker X"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>MapMarkerCoordinates</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>240</ID>
              <Description>"Map Marker Y"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>MapMarkerCoordinates+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>241</ID>
              <Description>"Player X"</Description>
              <LastState Value="3881.087646" Activated="0" RealAddress="2FF5D450"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerCoordsPtr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>242</ID>
              <Description>"Player Y"</Description>
              <LastState Value="3204.719971" Activated="0" RealAddress="2FF5D454"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerCoordsPtr</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>243</ID>
              <Description>"Player Z"</Description>
              <LastState Value="0.4852592945" Activated="0" RealAddress="2FF5D458"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerCoordsPtr</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>265</ID>
          <Description>"Map Marker Teleport (SunBeam mod)"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc( MapMarkerTeleport, 1024 )
label( MapMarkerTeleport_map )
aobscan( MarkerAddress, d9 5e 50 d9 47 14 8d 4e 58 d9 5e 54 8d 50)
registersymbol( MarkerAddress )
aobscan( XYZAddress, 0f 28 40 30 0f 29 86 f0 01 00 00 e8 )
registersymbol( XYZAddress )
label( GetPlayerCoordinatesHook )
registersymbol( GetPlayerCoordinatesHook )
label( PlayerCoordsPtr )
registersymbol( PlayerCoordsPtr )
label( SetForObjectTeleport )
registersymbol( SetForObjectTeleport )
label( SetForTargetTeleport )
registersymbol( SetForTargetTeleport )
label( NoTeleport )
label( TargetCoordinateX )
registersymbol( TargetCoordinateX )
label( TargetCoordinateY )
registersymbol( TargetCoordinateY )
label( TargetCoordinateZ )
registersymbol( TargetCoordinateZ )
label( MapCoordinateX )
registersymbol( MapCoordinateX )
label( MapCoordinateY )
registersymbol( MapCoordinateY )
label( ObjectTeleport )
label( TargetTeleport )

MapMarkerTeleport:
push eax
push ecx
fstp dword [esi+50] // original
fld dword [edi+14] 	// original
mov ecx,[esi+88] // get base pointer to the path to the appointed object
mov ecx,[ecx] // get pointer to object's coordinates
test ecx,ecx // if nothing, ground, water, etc. - no map object - or Edward are selected, no path will be built-up - check map marker
je MapMarkerTeleport_map
mov ecx,[ecx+98] // build up the path to the coordinates location
mov eax,[ecx+30] // get X
mov [TargetCoordinateX],eax // save
mov eax,[ecx+34] // get Y
mov [TargetCoordinateY],eax // save
mov eax,[ecx+38] // get Z
mov [TargetCoordinateZ],eax // save
pop ecx
pop eax
jmp MarkerAddress+6
MapMarkerTeleport_map:
mov ecx,[esi+50]
mov [MapCoordinateX],ecx
mov ecx,[esi+54]
mov [MapCoordinateY],ecx
pop ecx
pop eax
jmp MarkerAddress+6

GetPlayerCoordinatesHook:
cmp [SetForObjectTeleport],1
je ObjectTeleport
cmp [SetForTargetTeleport],1
je TargetTeleport
NoTeleport:
movaps [esi+1F0],xmm0
jmp XYZAddress+0b
ObjectTeleport:
cmp [eax-74],1C000010
jne NoTeleport
push eax
push ecx
lea eax,[eax+30]
mov [PlayerCoordsPtr],eax
mov ecx,[TargetCoordinateX]
mov [eax],ecx
mov ecx,[TargetCoordinateY]
mov [eax+4],ecx
mov ecx,[TargetCoordinateZ]
mov [eax+8],ecx
movaps xmm0,[eax]
pop ecx
pop eax
mov [SetForObjectTeleport],0
jmp NoTeleport
TargetTeleport:
cmp [eax-74],1C000010
jne NoTeleport
push eax
push ecx
lea eax,[eax+30]
mov [PlayerCoordsPtr],eax
mov ecx,[MapCoordinateX]
mov [eax],ecx
mov ecx,[MapCoordinateY]
mov [eax+4],ecx
mov [eax+8],(float)10.0 //pretty fairly high
movaps xmm0,[eax]
pop ecx
pop eax
mov [SetForTargetTeleport],0
jmp NoTeleport

PlayerCoordsPtr:
dd 0
TargetCoordinateX:
dd 0
TargetCoordinateY:
dd 0
TargetCoordinateZ:
dd 0
MapCoordinateX:
dd 0
MapCoordinateY:
dd 0
SetForObjectTeleport:
dd 0
SetForTargetTeleport:
dd 0

MarkerAddress:
jmp MapMarkerTeleport
nop

XYZAddress+4:
jmp GetPlayerCoordinatesHook
db 90 90

[DISABLE]

MarkerAddress:
db d9 5e 50 d9 47 14
//fstp dword [esi+50]
//fld dword [edi+14]

XYZAddress+4:
db 0f 29 86 f0 01 00 00
//movaps [esi+1f0],xmm0

unregistersymbol( MapCoordinateY )
unregistersymbol( MapCoordinateX )
unregistersymbol( TargetCoordinateZ )
unregistersymbol( TargetCoordinateY )
unregistersymbol( TargetCoordinateX )
unregistersymbol( PlayerCoordsPtr )
unregistersymbol( XYZAddress )
unregistersymbol( SetForTargetTeleport )
unregistersymbol( SetForObjectTeleport )
unregistersymbol( MarkerAddress )
unregistersymbol( MapMarkerCoordinates )
unregistersymbol( GetPlayerCoordinatesHook )
dealloc( MapMarkerTeleport )
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>273</ID>
              <Description>"[TargetCoordinates]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>266</ID>
                  <Description>"TargetCoordinateX"</Description>
                  <LastState Value="3892.252197" Activated="0" RealAddress="0AC50102"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>TargetCoordinateX</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>267</ID>
                  <Description>"TargetCoordinateY"</Description>
                  <LastState Value="3161.987305" Activated="0" RealAddress="0AC50106"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>TargetCoordinateY</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>271</ID>
                  <Description>"TargetCoordinateZ"</Description>
                  <LastState Value="3" Activated="0" RealAddress="0AC5010A"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>TargetCoordinateZ</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>274</ID>
              <Description>"[PlayerCoordinates]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>268</ID>
                  <Description>"PlayerCoordinateX"</Description>
                  <LastState Value="3881.087646" Activated="0" RealAddress="2FF5D450"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>PlayerCoordsPtr</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>269</ID>
                  <Description>"PlayerCoordinateY"</Description>
                  <LastState Value="3204.719971" Activated="0" RealAddress="2FF5D454"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>PlayerCoordsPtr</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>270</ID>
                  <Description>"PlayerCoordinateZ"</Description>
                  <LastState Value="0.4852592945" Activated="0" RealAddress="2FF5D458"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>PlayerCoordsPtr</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>275</ID>
              <Description>"[MapCoordinates]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>276</ID>
                  <Description>"MapCoordinateX"</Description>
                  <LastState Value="3880.329102" Activated="0" RealAddress="0AC5010E"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>MapCoordinateX</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>277</ID>
                  <Description>"MapCoordinateY"</Description>
                  <LastState Value="3186.103516" Activated="0" RealAddress="0AC50112"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>MapCoordinateY</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>272</ID>
              <Description>"SetForObjectTeleport (hit Numpad / after setting a target in TAB map)"</Description>
              <LastState Value="0" Activated="0" RealAddress="0AC50116"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>SetForObjectTeleport</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>111</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>278</ID>
              <Description>"SetForTargetTeleport (hit Numpad * after setting a target in TAB map)"</Description>
              <LastState Value="0" Activated="0" RealAddress="0AC5011A"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>SetForTargetTeleport</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>106</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>197</ID>
      <Description>"[Debug]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>C0C0C0</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>15</ID>
          <Description>"[Enable]"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>000080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan( pMenu_AOB,568BF18B0D????????8D86????????50E8????????8B0D????????68????????81C1????????56518D8E????????E8????????C705????????000000005EC3 )
label( pMenu )
registersymbol( pMenu )
[pMenu_AOB+35]:
pMenu:

aobscan( pBase_AOB, 558BEC8B450C85C074??837D080175??80B8F8070000000F94C18888F80700005DC3 )
label( pBase )
registersymbol( pBase )
pBase_AOB:
pBase:

alloc( ContextHook, 1024 )
registersymbol( ContextHook )
label( ContextHook_back )
label( pContext )
registersymbol( pContext )

ContextHook+500:
pContext:
dd 0

ContextHook:
mov [pContext],ecx
push esi
push edi
mov edi,ecx
mov eax,[edi+8]
jmp ContextHook_back

aobscan( dwContextHook_AOB, 56578BF98B47088B48088B71??E8 )
label( dwContextHook )
registersymbol( dwContextHook )
dwContextHook_AOB:
dwContextHook:
push ContextHook
ret
nop
ContextHook_back:

aobscan( DisableDisabler_AOB, B001EBC184C9 )
label( DisableDisabler )
registersymbol( DisableDisabler )
DisableDisabler_AOB:
DisableDisabler:
xor al,al

[DISABLE]

DisableDisabler:
mov al,1

dwContextHook:
push esi
push edi
mov edi,ecx
mov eax,[edi+8]

unregistersymbol( DisableDisabler )
unregistersymbol( dwContextHook )
unregistersymbol( pContext )
unregistersymbol( ContextHook )
unregistersymbol( pBase )
unregistersymbol( pMenu )
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13</ID>
              <Description>"[Cheats] (0 - locked; 1 - unlocked)"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>14</ID>
                  <Description>"[1] Celestial Navigation"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenu</Address>
                  <Offsets>
                    <Offset>FC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>4</ID>
                  <Description>"[2] Arrr Matey!"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenu</Address>
                  <Offsets>
                    <Offset>12C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>5</ID>
                  <Description>"[3] No Quarter"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenu</Address>
                  <Offsets>
                    <Offset>15C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>6</ID>
                  <Description>"[4] Scourge Of The Seven Seas"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenu</Address>
                  <Offsets>
                    <Offset>18C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12</ID>
                  <Description>"[5] Loaded To The Gunwale"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenu</Address>
                  <Offsets>
                    <Offset>1BC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>11</ID>
                  <Description>"[6] Poseidon's Will"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenu</Address>
                  <Offsets>
                    <Offset>1EC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>10</ID>
                  <Description>"[7] Dead Men Tell No Tales"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenu</Address>
                  <Offsets>
                    <Offset>21C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>9</ID>
                  <Description>"[8] Shiver Me Timbers!"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenu</Address>
                  <Offsets>
                    <Offset>24C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8</ID>
                  <Description>"[9] Armed To The Teeth"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenu</Address>
                  <Offsets>
                    <Offset>27C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7</ID>
                  <Description>"[10] Deceased Crew"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenu</Address>
                  <Offsets>
                    <Offset>2AC</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>20</ID>
              <Description>"Cheat Handler"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

alloc( KeyHandlerThread, 4096 )
registersymbol( KeyHandlerThread )
CreateThread( KeyHandlerThread )
label( KeyHandlerOff )
registersymbol( KeyHandlerOff )
label( ExitKeyHandler )

// Functions list start

label( IncreaseSpawnedHorseJumpLength )
label( DecreaseSpawnedHorseJumpLength )
label( NavalSinkPlayerShip )
label( OnlineIncrementKillCount )
label( ResetConflict )
label( IncreaseNotoriety )
label( DecreaseNotoriety )
label( IncreaseWantedLevel )
label( DecreaseWantedLevel )
label( UnfogCurrentMap )
label( NavalShowSpeedInfo )
label( NavalIgnoreWindDirection )
label( ChangeDebugDudeType )
label( ToggleHud )
label( SetMaxAssassinRank )
label( TogglePlayerVanish )
label( EnableAssassinCollisionWithTriggerZones )
label( NavalCrewMode )
label( NavalRaiseBeaufortScale )
label( NavalLowerBeaufortScale )
label( LockAllWorldUpgrades )
label( SpawnFollowDude )
label( SpawnFightDude )
label( SpawnShipDude )
label( SpawnRedBallDude )
label( SpawnStillDude )
label( NavalDamagePlayerShip )
label( ToggleFullProgressTrackerUnlock )
label( UnlockAllWorldUpgrades )
label( UnlockAndGainAllWorldUpgrades )
label( InfiniteBreathMode )
label( FightCheatMode )
label( FightActionsPacing )
label( FightDecisionsPacing )
label( FightDecisionsPacingStreak )
label( FightActionsPacingStreak )
label( ComboKillOverride )
label( RangedComboKillOverride )
label( ForceSingleHiddenBlade )
label( IncrementAllEquippedFirearmsDamageRating )
label( IncrementAllEquippedFirearmsIncapacitateRating )
label( DisableGroupPhysics )
label( NavalAddCrew )
label( NavalRemoveCrew )
label( NukeEnemies )
label( NukeAllies )
label( NukeYourself )
label( RefillAllEquipment )
label( ToggleCrowdAirAssassination )
label( NavalIncapacitateNearbyEnemyShips )
label( NavalIncapacitateNearbyAllyShips )
label( Invisible )
label( RefillPlayerHealth )
label( NavalInvisible )
label( GodMode )

// end of Functions list

KeyHandlerThread+500:
KeyHandlerOff:
dd 0

KeyHandlerThread:
push 0a
call kernel32.Sleep

cmp [KeyHandlerOff],1
je ExitKeyHandler

push 6F // VK_NUMPAD_DIVIDE
call GetAsyncKeyState
test ax,ax
jne NukeYourself

jmp KeyHandlerThread

//******************************************
//*                                        *
//*          Debug Menu Functions          *
//*                                        *
//******************************************

// Increase JumpLength for Spawned Debug Horse -- OK
// pseudo: Increase_JumpLength( 1 )

IncreaseSpawnedHorseJumpLength:
push 1
lea ecx,[pBase+30]
call ecx
add esp,4
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Decrease JumpLength for Spawned Debug Horse -- OK
// pseudo: Decrease_JumpLength( 1 )

DecreaseSpawnedHorseJumpLength:
push 1
lea ecx,[pBase+70]
call ecx
add esp,4
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Sink player ship -- OK
// pseudo: Naval_Sink_PlayerShip( 1, pContext )

NavalSinkPlayerShip:
push [pContext]
push 1
lea ecx,[pBase+B0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Online] Increment kill count -- OK
// pseudo: Increment_KillCount( 1 )

OnlineIncrementKillCount:
push 1
lea ecx,[pBase+F0]
call ecx
add esp,4
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Reset Conflict -- OK
// pseudo: Reset_Conflict( 1, pContext )

ResetConflict:
push [pContext]
push 1
lea ecx,[pBase+3F20]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Increase Notoriety -- OK
// pseudo: Increase_Notoriety( 1, pContext )

IncreaseNotoriety:
push [pContext]
push 1
lea ecx,[pBase+3F70]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Decrease Notoriety -- OK
// pseudo: Decrease_Notoriety( 1, pContext )

DecreaseNotoriety:
push [pContext]
push 1
lea ecx,[pBase+3F90]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Increase Wanted Level -- OK
// pseudo: Increase_WantedLevel( 1, pContext )

IncreaseWantedLevel:
push [pContext]
push 1
lea ecx,[pBase+3FB0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Decrease Wanted Level -- OK
// pseudo: Decrease_WantedLevel( 1, pContext )

DecreaseWantedLevel:
push [pContext]
push 1
lea ecx,[pBase+3FD0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Unfog current map -- OK
// pseudo: Unfog_CurrentMap( 1, pContext )

UnfogCurrentMap:
push [pContext]
push 1
lea ecx,[pBase+3FF0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Show Speed Info -- OK
// pseudo: Naval_Show_SpeedInfo( 1, pContext )

NavalShowSpeedInfo:
push [pContext]
push 1
lea ecx,[pBase+4020]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Ignore Wind Direction -- OK
// pseudo: Naval_Ignore_WindDirection( 1, pContext )

NavalIgnoreWindDirection:
push [pContext]
push 1
lea ecx,[pBase+4090]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Change Debug Dude Type -- OK
// pseudo: Change_Debug_DudeType( 1, pContext )

ChangeDebugDudeType:
push [pContext]
push 1
lea ecx,[pBase+C370]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// ToggleHud -- OK
// pseudo: Toggle_HUD( 1, pContext )

ToggleHud:
push [pContext]
push 1
lea ecx,[pBase+C3B0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// ***DISABLED***Set Max Assassin Rank (All Abilities): -- OK
// pseudo: Set_Max_AssassinRank( 1, pContext )

SetMaxAssassinRank:
push [pContext]
push 1
lea ecx,[pBase+16720]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Blend Action] Toggle Player Vanish : -- OK
// pseudo: Toggle_PlayerVanish( 1, pContext )

TogglePlayerVanish:
push [pContext]
push 1
lea ecx,[pBase+16780]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Enable assassin collision with trigger zones : -- OK
// pseudo: Enable_Assassin_CollisionWithTriggerZones( 1, pContext )

EnableAssassinCollisionWithTriggerZones:
push [pContext]
push 1
lea ecx,[pBase+16800]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Crew Mode : -- OK
// pseudo: Naval_CrewMode( 1, pContext )

NavalCrewMode:
push [pContext]
push 1
lea ecx,[pBase+16A30]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Raise Beaufort Scale : -- OK
// pseudo: Naval_Raise_BeaufortScale( 1, pContext )

NavalRaiseBeaufortScale:
push [pContext]
push 1
lea ecx,[pBase+16B60]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Lower Beaufort Scale : -- OK
// pseudo: Naval_Lower_BeaufortScale( 1, pContext )

NavalLowerBeaufortScale:
push [pContext]
push 1
lea ecx,[pBase+16B90]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Lock All World Upgrades -- OK
// pseudo: Lock_All_WorldUpgrades( 1, pContext )

LockAllWorldUpgrades:
push [pContext]
push 1
lea ecx,[pBase+2B180]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Spawn Follow Dude -- OK
// pseudo: Spawn_FollowDude( 1, pContext )

SpawnFollowDude:
push [pContext]
push 1
lea ecx,[pBase+36710]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Spawn Fight Dude -- OK
// pseudo: Spawn_FightDude( 1, pContext )

SpawnFightDude:
push [pContext]
push 1
lea ecx,[pBase+36740]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Spawn Ship Dude -- OK
// pseudo: Spawn_ShipDude( 1, pContext )

SpawnShipDude:
push [pContext]
push 1
lea ecx,[pBase+36770]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Spawn RedBall Dude -- OK
// pseudo: Spawn_RedBallDude( 1, pContext )

SpawnRedBallDude:
push [pContext]
push 1
lea ecx,[pBase+36820]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Spawn Still Dude -- OK
// pseudo: Spawn_StillDude( 1, pContext )

SpawnStillDude:
push [pContext]
push 1
lea ecx,[pBase+36850]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Damage player ship -- OK
// pseudo: Naval_Damage_PlayerShip( 1, pContext )

NavalDamagePlayerShip:
push [pContext]
push 1
lea ecx,[pBase+36880]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Toggle Full Progress Tracker Unlock -- OK
// pseudo: Toggle_Full_ProgressTrackerUnlock( 1, pContext )

ToggleFullProgressTrackerUnlock:
push [pContext]
push 1
lea ecx,[pBase+369C0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Unlock All World Upgrades -- OK
// pseudo: Unlock_All_WorldUpgrades( 1, pContext )

UnlockAllWorldUpgrades:
push [pContext]
push 1
lea ecx,[pBase+369F0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Unlock And Gain All World Upgrades -- OK
// pseudo: Unlock_And_GainAllWorldUpgrades( 1, pContext )

UnlockAndGainAllWorldUpgrades:
push [pContext]
push 1
lea ecx,[pBase+36A80]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Infinite Breath Mode : -- OK
// pseudo: Infinite_BreathMode( 1, pContext )

InfiniteBreathMode:
push [pContext]
push 1
lea ecx,[pBase+36C10]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Fight Cheat Mode : -- OK
// pseudo: Fight_CheatMode( 1, pContext )

FightCheatMode:
push [pContext]
push 1
lea ecx,[pBase+36C90]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Fight Actions pacing : -- OK
// pseudo: Fight_ActionsPacing( 1, pContext )

FightActionsPacing:
push [pContext]
push 1
lea ecx,[pBase+36D10]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Fight Decisions pacing : -- OK
// pseudo: Fight_DecisionsPacing( 1, pContext )

FightDecisionsPacing:
push [pContext]
push 1
lea ecx,[pBase+36DE0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Fight Decisions pacing (Streak) : -- OK
// pseudo: Fight_Decisions_PacingStreak( 1, pContext )

FightDecisionsPacingStreak:
push [pContext]
push 1
lea ecx,[pBase+36EB0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Fight Actions pacing (Streak) : -- OK
// pseudo: Fight_Actions_PacingStreak( 1, pContext )

FightActionsPacingStreak:
push [pContext]
push 1
lea ecx,[pBase+36F80]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Combo Kill Override : -- OK
// pseudo: Combo_KillOverride( 1, pContext )

ComboKillOverride:
push [pContext]
push 1
lea ecx,[pBase+37050]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Ranged Combo Kill Override : -- OK
// pseudo: Ranged_Combo_KillOverride( 1, pContext )

RangedComboKillOverride:
push [pContext]
push 1
lea ecx,[pBase+37140]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Force Single Hidden Blade : -- OK
// pseudo: Force_Single_HiddenBlade( 1, pContext )

ForceSingleHiddenBlade:
push [pContext]
push 1
lea ecx,[pBase+37260]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Increment All Equipped Firearms Damage Rating : -- OK
// pseudo: Increment_All_EquippedFirearmsDamageRating( 1, pContext )

IncrementAllEquippedFirearmsDamageRating:
push [pContext]
push 1
lea ecx,[pBase+37310]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Increment All Equipped Firearms Incapacitate Rating : -- OK
// pseudo: Increment_All_EquippedFirearmsIncapacitateRating( 1, pContext )

IncrementAllEquippedFirearmsIncapacitateRating:
push [pContext]
push 1
lea ecx,[pBase+37420]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// [Fight Tests] Disable Group Physics : -- OK
// pseudo: Disable_GroupPhysics( 1, pContext )

DisableGroupPhysics:
push [pContext]
push 1
lea ecx,[pBase+37530]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Add Crew : -- OK
// pseudo: Naval_AddCrew( 1, pContext )

NavalAddCrew:
push [pContext]
push 1
lea ecx,[pBase+375E0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Remove Crew : -- OK
// pseudo: Naval_RemoveCrew( 1, pContext )

NavalRemoveCrew:
push [pContext]
push 1
lea ecx,[pBase+37610]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Nuke Enemies -- OK
// pseudo: Nuke_Enemies( 1, pContext )

NukeEnemies:
push [pContext]
push [pContext]
push 1
lea ecx,[pBase+42380]
call ecx
add esp,C
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Nuke Allies -- OK
// pseudo: Nuke_Allies( 1, pContext )

NukeAllies:
push [pContext]
push 1
lea ecx,[pBase+423A0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Nuke Yourself -- OK
// pseudo: Nuke_Yourself( 1, pContext )

NukeYourself:
push [pContext]
push 1
lea ecx,[pBase+423C0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Refill All Equipment -- OK
// pseudo: Refill_AllEquipment( 1, pContext )

RefillAllEquipment:
push [pContext]
push 1
lea ecx,[pBase+423E0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Toggle Crowd Air Assassination -- OK
// pseudo: Toggle_Crowd_AirAssassination( 1, pContext )

ToggleCrowdAirAssassination:
push [pContext]
push 1
lea ecx,[pBase+42400]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Incapacitate nearby Enemy ships -- OK
// pseudo: Naval_Incapacitate_NearbyEnemyShips( 1, pContext )

NavalIncapacitateNearbyEnemyShips:
push [pContext]
push 1
lea ecx,[pBase+42420]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Incapacitate nearby Ally ships -- OK
// pseudo: Naval_Incapacitate_NearbyAllyShips( 1, pContext )

NavalIncapacitateNearbyAllyShips:
push [pContext]
push 1
lea ecx,[pBase+42440]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Invisible : -- OK
// pseudo: Invisible( 1, pContext )

Invisible:
push [pContext]
push 1
lea ecx,[pBase+42460]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Refill player's health -- OK
// pseudo: Refill_PlayerHealth( 1, pContext )

RefillPlayerHealth:
push [pContext]
push 1
lea ecx,[pBase+4AD90]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// Naval Invisible: -- OK
// pseudo: Naval_Invisible( 1, pContext )

NavalInvisible:
push [pContext]
push 1
lea ecx,[pBase+4ADF0]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

// God Mode : -- OK
// pseudo: God_Mode( 1, pContext )

GodMode:
push [pContext]
push 1
lea ecx,[pBase+4AE80]
call ecx
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread

ExitKeyHandler:
ret

[DISABLE]

KeyHandlerOff:
dd 1

unregistersymbol( KeyHandlerOff )
unregistersymbol( KeyHandlerThread )
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"[Debug]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>C0C0C0</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>22</ID>
                  <Description>"pContext"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pContext</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>26</ID>
                      <Description>"Player_Index"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pContext</Address>
                      <Offsets>
                        <Offset>9C</Offset>
                        <Offset>C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>31</ID>
                      <Description>"Player_Health"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pContext</Address>
                      <Offsets>
                        <Offset>FFFFFF68</Offset>
                        <Offset>14</Offset>
                        <Offset>90</Offset>
                        <Offset>1C</Offset>
                        <Offset>E8</Offset>
                        <Offset>C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>25</ID>
                      <Description>"Player_HealthMax"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pContext</Address>
                      <Offsets>
                        <Offset>FFFFFF6A</Offset>
                        <Offset>14</Offset>
                        <Offset>90</Offset>
                        <Offset>1C</Offset>
                        <Offset>E8</Offset>
                        <Offset>C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>27</ID>
                      <Description>"Invisibility (0/1)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pContext</Address>
                      <Offsets>
                        <Offset>28</Offset>
                        <Offset>E8</Offset>
                        <Offset>C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>33</ID>
                      <Description>"Infinite Breath (XOR(0x10))"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pContext</Address>
                      <Offsets>
                        <Offset>FFFFFF6E</Offset>
                        <Offset>14</Offset>
                        <Offset>90</Offset>
                        <Offset>1C</Offset>
                        <Offset>E8</Offset>
                        <Offset>C</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>46</ID>
                          <Description>"Infinite Breath (XOR(0x10))"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000000"/>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>Binary</VariableType>
                          <BitStart>4</BitStart>
                          <BitLength>1</BitLength>
                          <ShowAsBinary>0</ShowAsBinary>
                          <Address>pContext</Address>
                          <Offsets>
                            <Offset>FFFFFF6E</Offset>
                            <Offset>14</Offset>
                            <Offset>90</Offset>
                            <Offset>1C</Offset>
                            <Offset>E8</Offset>
                            <Offset>C</Offset>
                          </Offsets>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>34</ID>
                          <Description>"God Mode (XOR(0x1))"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000000"/>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>Binary</VariableType>
                          <BitStart>0</BitStart>
                          <BitLength>1</BitLength>
                          <ShowAsBinary>0</ShowAsBinary>
                          <Address>pContext</Address>
                          <Offsets>
                            <Offset>FFFFFF6E</Offset>
                            <Offset>14</Offset>
                            <Offset>90</Offset>
                            <Offset>1C</Offset>
                            <Offset>E8</Offset>
                            <Offset>C</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>45</ID>
                      <Description>"Naval Invisibility (1/0)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pContext</Address>
                      <Offsets>
                        <Offset>54C</Offset>
                        <Offset>64</Offset>
                        <Offset>60</Offset>
                        <Offset>8</Offset>
                        <Offset>60</Offset>
                        <Offset>0</Offset>
                        <Offset>1674</Offset>
                        <Offset>8F4</Offset>
                        <Offset>5C</Offset>
                        <Offset>C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>43</ID>
                      <Description>"Ship God Mode Status (0/1)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pContext</Address>
                      <Offsets>
                        <Offset>3A5</Offset>
                        <Offset>64</Offset>
                        <Offset>60</Offset>
                        <Offset>8</Offset>
                        <Offset>60</Offset>
                        <Offset>0</Offset>
                        <Offset>1674</Offset>
                        <Offset>8F4</Offset>
                        <Offset>5C</Offset>
                        <Offset>C</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>44</ID>
                          <Description>"Ship God Mode Switch (0/FF)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000000"/>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>Byte</VariableType>
                          <Address>pContext</Address>
                          <Offsets>
                            <Offset>160</Offset>
                            <Offset>64</Offset>
                            <Offset>60</Offset>
                            <Offset>8</Offset>
                            <Offset>60</Offset>
                            <Offset>0</Offset>
                            <Offset>1674</Offset>
                            <Offset>8F4</Offset>
                            <Offset>5C</Offset>
                            <Offset>C</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>28</ID>
                  <Description>"ConflictPowerValue (0/2/8)"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>2AADC14</Address>
                  <Offsets>
                    <Offset>28</Offset>
                    <Offset>908</Offset>
                    <Offset>50</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>29</ID>
                  <Description>"PlayerStructure (not adjusted)"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>2AADC14</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>4</Offset>
                    <Offset>7F8</Offset>
                    <Offset>50</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>30</ID>
                  <Description>"PlayerIndex (value used in PlayerStructure to adjust)"</Description>
                  <LastState Value="65536" Activated="0" RealAddress="00030006"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>2AC2F44</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"ToggleHud_CallCheatWithArgs"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc( KeyHandlerThread_ToggleHud, 1024 )
registersymbol( KeyHandlerThread_ToggleHud )
CreateThread( KeyHandlerThread_ToggleHud )
alloc( KeyHandlerOff_ToggleHud, 4 )
registersymbol( KeyHandlerOff_ToggleHud )
alloc( pToggleHud, 2048 )
registersymbol( pToggleHud )
label( ExitKeyHandler_ToggleHud )
label( ToggleHud )

KeyHandlerOff_ToggleHud:
dd 0

pToggleHud+7C8:
dd 0

KeyHandlerThread_ToggleHud:
push 0a
call kernel32.Sleep

cmp [KeyHandlerOff_ToggleHud],1
je ExitKeyHandler_ToggleHud

push 6F // NUM_DIVIDE
call GetAsyncKeyState
test ax,ax
jne ToggleHud

jmp KeyHandlerThread_ToggleHud

ToggleHud:
push 2F9B51B4
push 1
call 019B0BE0
add esp,8
push C8
call kernel32.Sleep
jmp KeyHandlerThread_ToggleHud

ExitKeyHandler_ToggleHud:
mov [KeyHandlerOff_ToggleHud],2
ret

[DISABLE]

{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "KeyHandlerOff_ToggleHud" ) == 0 then --could be 2 already
  writeInteger( "KeyHandlerOff_ToggleHud", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "KeyHandlerOff_ToggleHud" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}

unregistersymbol( pToggleHud )
dealloc( pToggleHud )
unregistersymbol( KeyHandlerOff_ToggleHud )
dealloc( KeyHandlerOff_ToggleHud )
unregistersymbol( KeyHandlerThread_ToggleHud )
dealloc( KeyHandlerThread_ToggleHud )
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"ToggleHud_CallOffAndOn"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc( KeyHandlerThread_ToggleHud, 1024 )
registersymbol( KeyHandlerThread_ToggleHud )
CreateThread( KeyHandlerThread_ToggleHud )
alloc( KeyHandlerOff_ToggleHud, 4 )
registersymbol( KeyHandlerOff_ToggleHud )
label( ExitKeyHandler_ToggleHud )
label( ToggleHud )
label( ToggleHud_exit )
label( bHud )

KeyHandlerOff_ToggleHud:
dd 0

KeyHandlerOff_ToggleHud+300:
bHud:
dd 0

KeyHandlerThread_ToggleHud:
push 0a
call kernel32.Sleep

cmp [KeyHandlerOff_ToggleHud],1
je ExitKeyHandler_ToggleHud

push 6F // NUM_DIVIDE
call GetAsyncKeyState
test ax,ax
jne ToggleHud

jmp KeyHandlerThread_ToggleHud

ToggleHud:
xor [bHud],1
mov ecx,[04DF38A8]
push 0E
cmp [bHud],0
je @f
call 012D5AD0
jmp ToggleHud_exit
@@:
call 012D5AE0
ToggleHud_exit:
push C8
call kernel32.Sleep
jmp KeyHandlerThread_ToggleHud

ExitKeyHandler_ToggleHud:
mov [KeyHandlerOff_ToggleHud],2
ret

[DISABLE]

{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "KeyHandlerOff_ToggleHud" ) == 0 then --could be 2 already
  writeInteger( "KeyHandlerOff_ToggleHud", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "KeyHandlerOff_ToggleHud" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}

unregistersymbol( pToggleHud )
dealloc( pToggleHud )
unregistersymbol( KeyHandlerOff_ToggleHud )
dealloc( KeyHandlerOff_ToggleHud )
unregistersymbol( KeyHandlerThread_ToggleHud )
dealloc( KeyHandlerThread_ToggleHud )
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"Map Marker Teleport :D BETA2"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
alloc(MapMarkerTeleportBETA2,1024)
aobscan(MarkerAddress,d9 5e 50 d9 47 14 8d 4e 58 d9 5e 54 8d 50)
aobscan(XYZAddress,0f 28 40 30 0f 29 86 f0 01 00 00 e8)
label(GetPlayerCoordinatesHook)
label(PlayerCoordsPtr)
label(MapMarkerCoordinates)
label(SetForTeleport)
label(NoTeleport)
label(FallSlowlyZ)
label(FallNormally)
registersymbol(MarkerAddress)
registersymbol(XYZAddress)
registersymbol(PlayerCoordsPtr)
registersymbol(MapMarkerCoordinates)

MapMarkerTeleportBETA2: //Map marker set! (right mouse button clicked on map)
fstp dword [esi+50]
fld dword [edi+14]
mov ecx,[esi+50]
mov [MapMarkerCoordinates],ecx
fst [MapMarkerCoordinates+4]
mov ecx,1
mov [SetForTeleport],ecx
jmp MarkerAddress+6

GetPlayerCoordinatesHook:
cmp [SetForTeleport],1
jne NoTeleport
cmp [eax-74],1C000010
jne NoTeleport

push eax
push ecx
lea eax,[eax+30]
mov [PlayerCoordsPtr],eax
mov ecx,[MapMarkerCoordinates]
mov [eax],ecx
mov ecx,[MapMarkerCoordinates+4]
mov [eax+4],ecx
mov [eax+8],(float)10.0 //pretty fairly high
movaps xmm0,[eax]
pop ecx
pop eax
mov [SetForTeleport],0

NoTeleport:
pushad
pushfd
cmp [eax-74],1C000010
jne FallNormally
push 10
call GetAsyncKeyState
test ax,ax
je FallNormally

//push xmm1
sub esp,10
movdqu dqword [esp],xmm1

movups xmm1,[FallSlowlyZ]
addps xmm0,xmm1 //Slow your decent ;)

//pop xmm1
movdqu xmm1,dqword [esp]
add esp,10

FallNormally:
popfd
popad
movaps [esi+1f0],xmm0
jmp XYZAddress+0b

PlayerCoordsPtr:
dd 0
MapMarkerCoordinates:
dq 0
SetForTeleport:
dd 0
FallSlowlyZ:
dq 0
dd (float)0.3
dd 0

//AC4BFSP.exe+12791d0:
MarkerAddress:
jmp MapMarkerTeleportBETA2
nop

//AC4BFSP.exe+e1ab4d:
XYZAddress+4:
jmp GetPlayerCoordinatesHook
db 90 90

[disable]

MarkerAddress:
db d9 5e 50 d9 47 14
//fstp dword [esi+50]
//fld dword [edi+14]

XYZAddress+4:
db 0f 29 86 f0 01 00 00
//movaps [esi+1f0],xmm0

dealloc(MapMarkerTeleportBETA2)
unregistersymbol(MarkerAddress)
unregistersymbol(XYZAddress)
unregistersymbol(PlayerCoordsPtr)
unregistersymbol(MapMarkerCoordinates)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>185</ID>
              <Description>"Map Marker X"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>MapMarkerScreenCoordinates</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>186</ID>
              <Description>"Map Marker Y"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>MapMarkerScreenCoordinates+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>143</ID>
              <Description>"Player X"</Description>
              <LastState Value="3881.087646" Activated="0" RealAddress="2FF5D450"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerCoordsPtr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>144</ID>
              <Description>"Player Y"</Description>
              <LastState Value="3204.719971" Activated="0" RealAddress="2FF5D454"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerCoordsPtr</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>145</ID>
              <Description>"Player Z"</Description>
              <LastState Value="0.4852592945" Activated="0" RealAddress="2FF5D458"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerCoordsPtr</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>188</ID>
          <Description>"Coords"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc( cave, 1024 )
label( PlayerCoordsPtr )
registersymbol( PlayerCoordsPtr )
label( back )

cave:
push ecx
mov ecx,PlayerCoordsPtr
mov [ecx],eax
pop ecx
movaps [esi+000001F0],xmm0
jmp back

cave+500:
PlayerCoordsPtr:
dd 0

47A10D:
jmp cave
db 90 90
back:

[DISABLE]

47A10D:
movaps [esi+000001F0],xmm0

unregistersymbol( PlayerCoordsPtr )
dealloc( cave )
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>189</ID>
              <Description>"X"</Description>
              <LastState Value="0" Activated="0" RealAddress="2FF5D480"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerCoordsPtr</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>191</ID>
              <Description>"Y"</Description>
              <LastState Value="0" Activated="0" RealAddress="2FF5D484"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerCoordsPtr</Address>
              <Offsets>
                <Offset>34</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>190</ID>
              <Description>"Z"</Description>
              <LastState Value="0" Activated="0" RealAddress="2FF5D488"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>PlayerCoordsPtr</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>199</ID>
          <Description>"fill"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc( MyHook, 256 )
alloc( szFormat, 128 )
alloc( buffer, 512 )
label( back )

szFormat:
db '[Hook]: 0x%08X',0

MyHook:
pushfd
pushad
push ecx
push szFormat
push buffer
call wsprintfA
add esp,C
push buffer
call OutputDebugStringA
popad
popfd
mov edx,[ecx]
mov eax,[edx+44]
jmp back

1CE4C0C:
jmp MyHook
back:

[DISABLE]

1CE4C0C:
mov edx,[ecx]
mov eax,[edx+44]

dealloc( MyHook )
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>203</ID>
          <Description>"pass_1"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc( table, 2048 )
alloc( MyHook, 1024 )
label( exit )
label( back )
alloc( szFormat, 128 )
alloc( buffer, 512 )
label( loop )
label( incr )

szFormat:
db '[Hook]: %08X || %08X',0

table:
dd 0A47D5E0
dd 0B92A320
dd 0B92A790
dd 0B92D630
dd 17E87EB0
dd 18FAE610
dd 19B8D130
dd 1DD69670
dd 20AD3E80
dd 21FBD690
dd 2215EE20
dd 22161610
dd 22291760
dd 22533BA0
dd 227DA160
dd 227DBA40
dd 22A33050
dd 232CDF90
dd 24B3CDE0
dd 263956E0
dd 268A2540
dd 268AD240
dd 26971D60
dd 269830E0
dd 269C0CB0
dd 26C5B060
dd 27346B90
dd 27354220
dd 2737B190
dd 279792A0
dd 2797DE30
dd 27B45280
dd 27C98760
dd 27CB0730
dd 27CB8FD0
dd 27E9C8C0
dd 29B1DD10
dd 29B25220
dd 29B31460
dd 29B45E10
dd 29B59760
dd 29BEB880
dd 29C044D0
dd 29C0C0C0
dd 29D75F90
dd 29D76B60
dd 29D85C00
dd 29D85F30
dd 29D8C480
dd 29D8FCD0
dd 29D98380
dd 29D9BDA0
dd 29DAA9C0
dd 29DB17E0
dd 29E003F0
dd 29E1F550
dd 29E55F80
dd 29E57130
dd 29F02680
dd 29F527F0
dd 29F59240
dd 29F957E0
dd 29FA8AA0
dd 29FD4F10
dd 29FE4D70
dd 29FE8B40
dd 29FEE020
dd 29FF21F0
dd 29FFFE40
dd 2A008460
dd 2A010C10
dd 2A039B90
dd 2A04C530
dd 2A04ECD0
dd 2A05F710
dd 2A0611E0
dd 2A075F00
dd 2A0C17B0
dd 2A0C7570
dd 2A459680
dd 2A46FCE0
dd 2A476BD0
dd 2A496020
dd 2A4C5980
dd 2A4E4580
dd 2A5091A0
dd 2A5289D0
dd 2A536360
dd 2A555380
dd 2A56FC70
dd 2A5780D0
dd 2A5788A0
dd 2A581FB0
dd 2A5921F0
dd 2A5AA600
dd 2A5B7120
dd 2A5CA360
dd 2A5CF060
dd 2A5CF390
dd 2A5D49D0
dd 2A5D52F0
dd 2A5E7080
dd 2A68FB90
dd 2A6B3AF0
dd 2A6B3B00
dd 2A6B4750
dd 2A6B7DE0
dd 2A6BCD40
dd 2A6FE5C0
dd 2A948340
dd 2A9564F0
dd 2A966DF0
dd 2A96BCB0
dd 2B34B6C0
dd 2B355B90
dd 2B5FF3D0
dd 2B634750
dd 2BAF4420
dd 2BB47760
dd 2BB511B0
dd 2BB56C70
dd 2BB56C80
dd 2BB96C30
dd 2BB97FD0
dd 2BB98710
dd 2BBB6990
dd 2BCBC210
dd 2BCBC7E0
dd 2BCD7420
dd 2BCE5310
dd 2BCE9F40
dd 2BD14970
dd 2BD96430
dd 2BE50010
dd 2CFAFC10
dd 2DAB2CA0
dd 2DAC6EA0
dd 2DAC99C0
dd 2DE33A50
dd 2DE51180
dd 2DF163F0
dd 2DF17580
dd 2DF53010
dd 2DF741E0
dd 2DFEDFC0
dd 2E01AF10
dd 2E150C00
dd 2E156EA0
dd 2E164A80
dd 2E167470
dd 2E25F6C0
dd 2E4CA530
dd 2E4CA540
dd 2E4DEA20
dd 2E51E0B0
dd 2E61A500
dd 2E632AA0
dd 2EA574E0
dd 2EA591A0
dd 2EA63C30
dd 2EA67DE0
dd 2EA93EB0
dd 2EA94330
dd 2EA94AC0
dd 2EAB8600
dd 2EABAE30
dd 2EC13EC0
dd 2EC21720
dd 2EC274A0
dd 2EC6E580
dd 2ED1A4E0
dd 2EFAF160
dd 2EFCC740
dd 2EFCE350
dd 2EFD0D90
dd 2EFF1E20
dd 2EFFB1A0
dd 2F076C30
dd 2F088300
dd 2F088960
dd 2F0961E0
dd 2F097D20
dd 2F098130
dd 2F0A1940
dd 2F0A6990
dd 2F0A8CC0
dd 2F0D3150
dd 2F0D3480
dd 2F0DEA00
dd 2F0DED30
dd 2F100010
dd 2F106150
dd 2F109700
dd 2F10A4C0
dd 2F10EAD0
dd 2F10EF90
dd 2F1B7F00
dd 2F1BBBD0
dd 2F225DD0
dd 2F233620
dd 2F2437D0
dd 2F258370
dd 2F2655E0
dd 2F2EB220
dd 2F2F8B80
dd 2F317650
dd 2F32B250
dd 2F32E2A0
dd 2F331610
dd 2F333290
dd 2F3332B0
dd 2F337A50
dd 2F3D78E0
dd 2F3E1E20
dd 2F3E6500
dd 2F3E84C0
dd 2F3E9530
dd 2F3EDCA0
dd 2F412A30
dd 2F417AC0
dd 2F41B360
dd 2F41BAB0
dd 2F4507A0
dd 2F456A20
dd 2F45A3D0
dd 2F461990
dd 2F461B70
dd 2F467EC0
dd 2F4699B0
dd 2F492A00
dd 2F49D010
dd 2F4BED00
dd 2F4C6FC0
dd 2F4CB0F0
dd 2F4CB870
dd 2F4D5230
dd 2F4EB440
dd 2F4EB780
dd 2F4F5DF0
dd 2F500AD0
dd 2F504FD0
dd 2F508C40
dd 2F5099F0
dd 2F5122D0
dd 2F518190
dd 2F51C610
dd 2F51FFF0
dd 2F526090
dd 2F52C790
dd 2F5329F0
dd 2F54D510
dd 2F54FC10
dd 2F557B90
dd 2F55DA20
dd 2F55FF70
dd 2F564E90
dd 2F57C450
dd 2F58A730
dd 2F58F300
dd 2F59D9D0
dd 2F5A2D80
dd 2F5B6430
dd 2F5B7DE0
dd 2F657E60
dd 2F659710
dd 2F66D6C0
dd 2F68D5F0
dd 2F68FD20
dd 2F698140
dd 2F6C0D20
dd 2F6C4170
dd 2F6D2DE0
dd 2F6D3CF0
dd 2F6DF4F0
dd 2F6E4E50
dd 2F6EFAE0
dd 2F6F0DA0
dd 2F6F6A80
dd 2F6FC8D0
dd 2F701600
dd 2F709210
dd 2F721630
dd 2F73C5C0
dd 2F73CAB0
dd 2F7D35A0
dd 2F826D40
dd 2F8545C0
dd 2F85DAA0
dd 2F86B480
dd 2F873E30
dd 2F8AA340
dd 2F8AB690
dd 2F93A260
dd 2F98AAB0
dd 2F9AA330
dd 2F9ABBE0
dd 2F9C8080
dd 2FA419F0
dd 2FA453E0
dd 2FA49AF0
dd 2FA4A200
dd 2FA547C0
dd 2FA5D670
dd 2FA61490
dd 2FA61C50
dd 2FA67570
dd 2FA68920
dd 2FA6FEA0
dd 2FA71020
dd 2FA85430
dd 2FAA4DC0
dd 2FAAFBC0
dd 2FAB81E0
dd 2FABA490
dd 2FAD1C40
dd 2FB046A0
dd 2FB15740
dd 2FB32530
dd 2FB32940
dd 2FB35730
dd 2FB3B5C0
dd 2FB477F0
dd 2FB4F680
dd 2FB50650
dd 2FB5D3C0
dd 2FB65C00
dd 2FB76D90
dd 2FB83180
dd 2FBAE380
dd 2FBB1DB0
dd 2FBB9850
dd 2FBC3550
dd 2FC2FEB0
dd 2FC5D290
dd 2FCCCC60
dd 2FCCCC70
dd 2FD0AA00
dd 3036BC60
dd 303BF950
dd 303C9B30
dd 303DC9E0
dd 303E0690
dd 303F2320
dd 303F2D70
dd 303F5EB0
dd 31450D30
dd 3145E130
dd 31727150
dd 31989360
dd 31B87FD0
dd 31BC6380
dd 31D0A7F0
dd 31D14230
dd 31D1ACD0
dd 31E3C930
dd 31E3EC00
dd 31E48010
dd 31EF3D80
dd 31EF6920
dd 31F41A60
dd 31F463D0
dd 31F46CB0
dd 31F65D20
dd 31F793E0
dd 31F966C0
dd 31FB98E0
dd 32015050
dd 32151170
dd 355C2610
dd 355E6AA0
dd 3571DAB0
dd 3575D7F0
dd FC744C3C

MyHook:
pushfd
pushad
mov eax,table
mov edi,0
loop:
cmp [eax+edi],0
je exit
mov edx,[eax+edi]
mov ebx,[edx+C]
cmp ebx,0
je incr
push ebx
push edx
push szFormat
push buffer
call wsprintfA
add esp,10
push buffer
call OutputDebugStringA
mov eax,table
incr:
add edi,4
jmp loop
exit:
popad
popfd
mov edx,[ecx]
mov eax,[edx+44]
jmp back

1CE4C0C:
jmp MyHook
back:

[DISABLE]

1CE4C0C:
mov edx,[ecx]
mov eax,[edx+44]

dealloc( MyHook )
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>204</ID>
          <Description>"pass_2"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

alloc( table, 2048 )
alloc( MyHook, 1024 )
label( exit )
label( back )
alloc( szFormat, 128 )
alloc( buffer, 512 )
label( loop )
label( incr )

szFormat:
db '[Hook]: %08X',0

table:
dd 194BC780
dd 19504F50
dd 22FF55F0
dd 22FF7D10
dd 23D54040
dd 23F50BC0
dd 23F867D0
dd 2713BC60
dd 2720C0C0
dd 274F2AE0
dd 27C6A390
dd 281C5520
dd 281C7AD0
dd 28469A20
dd 286F0CE0
dd 2899C950
dd 289D8C80
dd 2A5ACAE0
dd 2A603650
dd 2A6195A0
dd 2A61F610
dd 2A64AC90
dd 2A657FF0
dd 2A660DF0
dd 2A668270
dd 2A677910
dd 2A6AB0E0
dd 2A6B1C30
dd 2A8BBAF0
dd 2A9E5660
dd 2A9EB500
dd 2A9EFA00
dd 2AA2DA90
dd 2AA71950
dd 2AAA5610
dd 2AAB7150
dd 2AADC450
dd 2AC120C0
dd 2AC1E380
dd 2AF59F40
dd 2AF611B0
dd 2AF9FC90
dd 2B08ECF0
dd 2B093110
dd 2B1415C0
dd 2B468080
dd 2B46E730
dd 2B54BD70
dd 2B551D90
dd 2B5D8630
dd 2B5F0B60
dd 2B60E810
dd 2B60EEC0
dd 2B640270
dd 2B642FE0
dd 2B64F040
dd 2B652610
dd 2B655AF0
dd 2B65C760
dd 2BFBF950
dd 2C111E10
dd 2C119DA0
dd 2C172850
dd 2C1EDD90
dd 2C562380
dd 2C570CA0
dd 2C9CC8D0
dd 2C9F9ED0
dd 2CA77950
dd 2CDB2AC0
dd 2CDB77D0
dd 2CED2EE0
dd 2CF2D480
dd 2CF2D9F0
dd 2CFF68D0
dd 2D068D20
dd 2ED987E0
dd 2EEDE710
dd 2F0735E0
dd 2F09A1D0
dd 2F0D7610
dd 2F3CEEC0
dd 2F4E98F0
dd 2F4F5300
dd 2FDDCC60
dd 2FDDE630
dd 2FE48120
dd 2FE93380
dd 2FEF7210
dd 2FEFF750
dd 300383E0
dd 3005B590
dd 300814E0
dd 30084AE0
dd 3009B4A0
dd 30105F70
dd 301D54D0
dd 302953F0
dd 302D44C0
dd 302D75A0
dd 302E1720
dd 302E1B30
dd 302E8850
dd 30300010
dd 3030C040
dd 303535E0
dd 30359290
dd 3035AB50
dd 304037A0
dd 3040D680
dd 3040D690
dd 30440530
dd 30448D90
dd 30453350
dd 30474D40
dd 30475F20
dd 304EDB40
dd 304EDE30
dd 304F1A20
dd 30502A90
dd 30509DC0
dd 3059E1B0
dd 305A9FC0
dd 305AA6E0
dd 305AD2F0
dd 3060DC30
dd 30617A40
dd 3061C8C0
dd 3061CEA0
dd 3062F610
dd 306DB780
dd 306EF680
dd 307013F0
dd 30795C20
dd 3079A880
dd 307A9E10
dd 307B59B0
dd 308022B0
dd 3080BE50
dd 3081F180
dd 30844D00
dd 30854880
dd 308837A0
dd 308A5B20
dd 308A6C00
dd 308BE900
dd 308D00D0
dd 308D5340
dd 308DFD80
dd 308F3340
dd 3090F520
dd 3091C200
dd 309279C0
dd 309279D0
dd 30943CE0
dd 309D42A0
dd 309DE970
dd 309DF590
dd 309E6240
dd 309EF9D0
dd 30A01A60
dd 30A215F0
dd 30A64A80
dd 30A79640
dd 30B88410
dd 30B99810
dd 30BCBBE0
dd 30C64850
dd 30C8FDC0
dd 30CABEE0
dd 30CACDB0
dd 30CAE4A0
dd 30CE47B0
dd 30CE4FE0
dd 30CEC7C0
dd 30CF3B20
dd 30CF4560
dd 30D05990
dd 30D0B290
dd 30D73AA0
dd 30DB1440
dd 30DDC690
dd 30DEEDC0
dd 30DEFD20
dd 30E20570
dd 30E2C970
dd 30E311B0
dd 30E32760
dd 30E35EA0
dd 30E37220
dd 30E3DA00
dd 30E44300
dd 30E4AC30
dd 30E9F5D0
dd 30EA6990
dd 30EB52A0
dd 314D56C0
dd 31535B10
dd 315366E0
dd 315398C0
dd 31577AC0
dd 31613140
dd 31635AC0
dd 3166B700
dd 31694540
dd 31AFBD90
dd 31E41FA0
dd 31E897C0
dd 31E8BBC0
dd 31F0F150
dd 31F213D0
dd 320FD390
dd 321097C0
dd 32229920
dd 32322910
dd 32325240
dd 323A9B30
dd 324BC8D0
dd FC744B94

MyHook:
pushfd
pushad
mov eax,table
mov edi,0
loop:
cmp [eax+edi],0
je exit
mov edx,[eax+edi]
mov ebx,[edx+C]
cmp [ebx+8],0
je incr
push edx
push szFormat
push buffer
call wsprintfA
add esp,C
push buffer
call OutputDebugStringA
mov eax,table
incr:
add edi,4
jmp loop
exit:
popad
popfd
mov edx,[ecx]
mov eax,[edx+44]
jmp back

1CE4C0C:
jmp MyHook
back:

[DISABLE]

1CE4C0C:
mov edx,[ecx]
mov eax,[edx+44]

dealloc( MyHook )
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>224</ID>
          <Description>"pContext"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pContext</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>225</ID>
              <Description>"Player_Index"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pContext</Address>
              <Offsets>
                <Offset>9C</Offset>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>226</ID>
              <Description>"Player_Health"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pContext</Address>
              <Offsets>
                <Offset>FFFFFF68</Offset>
                <Offset>14</Offset>
                <Offset>90</Offset>
                <Offset>1C</Offset>
                <Offset>E8</Offset>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>227</ID>
              <Description>"Player_HealthMax"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pContext</Address>
              <Offsets>
                <Offset>FFFFFF6A</Offset>
                <Offset>14</Offset>
                <Offset>90</Offset>
                <Offset>1C</Offset>
                <Offset>E8</Offset>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>228</ID>
              <Description>"Invisibility (0/1)"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>pContext</Address>
              <Offsets>
                <Offset>28</Offset>
                <Offset>E8</Offset>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>229</ID>
              <Description>"Infinite Breath (XOR(0x10))"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>pContext</Address>
              <Offsets>
                <Offset>FFFFFF6E</Offset>
                <Offset>14</Offset>
                <Offset>90</Offset>
                <Offset>1C</Offset>
                <Offset>E8</Offset>
                <Offset>C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>230</ID>
                  <Description>"Infinite Breath (XOR(0x10))"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>4</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>pContext</Address>
                  <Offsets>
                    <Offset>FFFFFF6E</Offset>
                    <Offset>14</Offset>
                    <Offset>90</Offset>
                    <Offset>1C</Offset>
                    <Offset>E8</Offset>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>231</ID>
                  <Description>"God Mode (XOR(0x1))"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>pContext</Address>
                  <Offsets>
                    <Offset>FFFFFF6E</Offset>
                    <Offset>14</Offset>
                    <Offset>90</Offset>
                    <Offset>1C</Offset>
                    <Offset>E8</Offset>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>232</ID>
              <Description>"Naval Invisibility (1/0)"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>pContext</Address>
              <Offsets>
                <Offset>54C</Offset>
                <Offset>64</Offset>
                <Offset>60</Offset>
                <Offset>8</Offset>
                <Offset>60</Offset>
                <Offset>0</Offset>
                <Offset>1674</Offset>
                <Offset>8F4</Offset>
                <Offset>5C</Offset>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>233</ID>
              <Description>"Ship God Mode Status (0/1)"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>pContext</Address>
              <Offsets>
                <Offset>3A5</Offset>
                <Offset>64</Offset>
                <Offset>60</Offset>
                <Offset>8</Offset>
                <Offset>60</Offset>
                <Offset>0</Offset>
                <Offset>1674</Offset>
                <Offset>8F4</Offset>
                <Offset>5C</Offset>
                <Offset>C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>234</ID>
                  <Description>"Ship God Mode Switch (0/FF)"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pContext</Address>
                  <Offsets>
                    <Offset>160</Offset>
                    <Offset>64</Offset>
                    <Offset>60</Offset>
                    <Offset>8</Offset>
                    <Offset>60</Offset>
                    <Offset>0</Offset>
                    <Offset>1674</Offset>
                    <Offset>8F4</Offset>
                    <Offset>5C</Offset>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>235</ID>
          <Description>"ConflictPowerValue (0/2/8)"</Description>
          <LastState Value="00000000" Activated="0" RealAddress="FEB86808"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>2AD0974</Address>
          <Offsets>
            <Offset>28</Offset>
            <Offset>908</Offset>
            <Offset>50</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>236</ID>
          <Description>"PlayerStructure (not adjusted)"</Description>
          <LastState Value="00000000" Activated="0" RealAddress="FD5F7620"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>2AD0974</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>4</Offset>
            <Offset>7F8</Offset>
            <Offset>50</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Toggler</Name>
      <Address>08D80500</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRefill</Name>
      <Address>02713B80</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRefil1</Name>
      <Address>019E8A1C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>dwRefillPlayerHealth</Name>
      <Address>019DA330</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBase</Name>
      <Address>019E8490</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SetForTeleport</Name>
      <Address>17AD00AA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MarkerAddress</Name>
      <Address> 015F99B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>XYZAddress</Name>
      <Address> 0047A109</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetPlayerCoordinatesHook</Name>
      <Address>0AC50059</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PlayerCoordsPtr</Name>
      <Address>0AC500FE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SetForObjectTeleport</Name>
      <Address>0AC50116</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SetForTargetTeleport</Name>
      <Address>0AC5011A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TargetCoordinateX</Name>
      <Address>0AC50102</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TargetCoordinateY</Name>
      <Address>0AC50106</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TargetCoordinateZ</Name>
      <Address>0AC5010A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MapCoordinateX</Name>
      <Address>0AC5010E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MapCoordinateY</Name>
      <Address>0AC50112</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
