<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Enable (F12)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthreadAOB,D9 41 74 D8 71 70 D9 5D FC D9 45 FC)
registersymbol(healthreadAOB)
aobscan(magicreadAOB,D9 41 54 D8 71 40 D9 5D FC D9 45 FC)
registersymbol(magicreadAOB)
aobscan(healthread2AOB,D9 40 74 D9 5D E0 D9 EE)
registersymbol(healthread2AOB)

label(bUndead)
registersymbol(bUndead)

label(pHealth)
registersymbol(pHealth)
label(pMana)
registersymbol(pMana)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(pcheck)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp [pHealth],0
jne pcheck
mov [pHealth],ecx

pcheck:
cmp [pHealth],ecx
jne originalcode
cmp byte ptr [bUndead],1
jne originalcode
cmp dword ptr [ecx+74],(float)1.0
jge originalcode
mov dword ptr [ecx+74],(float)1.0

originalcode:
popfd
fld dword ptr [ecx+74]
fdiv dword ptr [ecx+70]

exit:
jmp returnhere

///

newmem2:
mov [pMana],ecx

originalcode2:
fld dword ptr [ecx+54]
fdiv dword ptr [ecx+40]

exit2:
jmp returnhere2

///

newmem6:
mov [pHealth],eax

originalcode6:
fld dword ptr [eax+74]
fstp dword ptr [ebp-20]

exit6:
jmp returnhere6

///
bUndead:
db 0

pHealth:
dd 0
pMana:
dd 0
///

healthreadAOB: //"CMOF.exe"+119E84:
jmp newmem
nop
returnhere:

magicreadAOB: //"CMOF.exe"+19B854:
jmp newmem2
nop
returnhere2:

healthread2AOB: //"CMOF.exe"+BD1A3:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthreadAOB: //"CMOF.exe"+119E84:
db D9 41 74 D8 71 70
//Alt: fld dword ptr [ecx+74]
//Alt: fdiv dword ptr [ecx+70]
unregistersymbol(healthreadAOB)
magicreadAOB: //"CMOF.exe"+19B854:
db D9 41 54 D8 71 40
//Alt: fld dword ptr [ecx+54]
//Alt: fdiv dword ptr [ecx+40]
unregistersymbol(magicreadAOB)
healthread2AOB: //"CMOF.exe"+BD1A3:
db D9 40 74 D9 5D E0
//Alt: fld dword ptr [eax+74]
//Alt: fstp dword ptr [ebp-20]
unregistersymbol(healthread2AOB)

unregistersymbol(bUndead)
unregistersymbol(pHealth)
unregistersymbol(pMana)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Undead (F11 / Alt F11)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somewrite1AOB,D9 59 74 D9 EE D8 51 74)
registersymbol(somewrite1AOB)
aobscan(somewrite2AOB,D9 59 74 D9 41 74 D9 41 70)
registersymbol(somewrite2AOB)
aobscan(somewrite3AOB,D9 45 08 D9 51 74)
registersymbol(somewrite3AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fstp dword ptr [ecx+74]
cmp [pHealth],ecx
jne originalcode
cmp dword ptr [ecx+74],(float)1.0
jge originalcode
mov dword ptr [ecx+74],(float)1.0

originalcode:
//fstp dword ptr [ecx+74]
fldz 

exit:
jmp returnhere

///

newmem2:
fstp dword ptr [ecx+74]
cmp [pHealth],ecx
jne originalcode2
cmp dword ptr [ecx+74],(float)1.0
jge originalcode2
mov dword ptr [ecx+74],(float)1.0

originalcode2:
//fstp dword ptr [ecx+74]
fld dword ptr [ecx+74]

exit2:
jmp returnhere2

///

newmem6:
fld dword ptr [ebp+08]
pushfd
cmp [pHealth],ecx
jne originalcode6
fst dword ptr [ecx+74]
cmp dword ptr [ecx+74],(float)1.0
jge originalcode6
fstp dword ptr [ecx+74]
mov dword ptr [ecx+74],(float)1.0
fld dword ptr [ecx+74]

originalcode6:
popfd
fst dword ptr [ebp+08]
//fld dword ptr [ebp+08]
fst dword ptr [ecx+74]

exit6:
jmp returnhere6

somewrite1AOB: //"CMOF.exe"+1C2106:
jmp newmem
returnhere:

somewrite2AOB: //"CMOF.exe"+1C2123:
jmp newmem2
nop
returnhere2:

somewrite3AOB: //"CMOF.exe"+1C2147:
jmp newmem6
nop
returnhere6:

bUndead:
db 1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somewrite1AOB: //"CMOF.exe"+1C2106:
db D9 59 74 D9 EE
//Alt: fstp dword ptr [ecx+74]
//Alt: fldz
unregistersymbol(somewrite1AOB)
somewrite2AOB: //"CMOF.exe"+1C2123:
db D9 59 74 D9 41 74
//Alt: fstp dword ptr [ecx+74]
//Alt: fld dword ptr [ecx+74]
unregistersymbol(somewrite2AOB)
somewrite3AOB: //"CMOF.exe"+1C2147:
db D9 45 08 D9 51 74
//Alt: fld dword ptr [ebp+08]
//Alt: fst dword ptr [ecx+74]
unregistersymbol(somewrite3AOB)
bUndead:
db 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>122</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Inf. Magic (F11)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(magiccalculateonuseAOB,D9 45 0C D9 1C 24 E8 ** ** ** ** D9 46 54)
registersymbol(magiccalculateonuseAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//mov dword ptr [ebp+0C],(float)100.0
cmp [pMana],esi
jne originalcode
cmp dword ptr [ebp+c],(float)1.0
jge originalcode
mov dword ptr [ebp+c],(float)1.0
mov dword ptr [ebp+8],0

originalcode:
fld dword ptr [ebp+0C]
fstp dword ptr [esp]

exit:
jmp returnhere

///

magiccalculateonuseAOB: //"CMOF.exe"+19C6E3:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
magiccalculateonuseAOB: //"CMOF.exe"+19C6E3:
db D9 45 0C D9 1C 24
//Alt: fld dword ptr [ebp+0C]
//Alt: fstp dword ptr [esp]
unregistersymbol(magiccalculateonuseAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Inf. Breath (F11)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(breathwriteAOB,D9 52 70 D9 C9 D8 55 FC)
registersymbol(breathwriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fst dword ptr [edx+70]
pushfd
cmp dword ptr [edx+70],(float)0.1
jge originalcode
popfd
fstp dword ptr [edx+70]
mov dword ptr [edx+70],(float)0.1
fld dword ptr [edx+70]
fst dword ptr [ebp+08]
fxch st(1)
jmp exit

originalcode:
popfd
//fst dword ptr [edx+70]
fxch st(1)

exit:
jmp returnhere

breathwriteAOB: //"CMOF.exe"+1E5FD6:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
breathwriteAOB: //"CMOF.exe"+1E5FD6:
db D9 52 70 D9 C9
//Alt: fst dword ptr [edx+70]
//Alt: fxch st(1)
unregistersymbol(breathwriteAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Inf. Secondary Weapon (F11)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(somewrite4AOB,8B 5D 08 D9 18)
registersymbol(somewrite4AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ebx,[ebp+08]
fstp dword ptr [eax]
cmp dword ptr [eax],(float)1.0
jge originalcode
mov dword ptr [eax],(float)1.0
fld dword ptr [eax]
fstp dword ptr [ebp+10]

originalcode:
cmp byte ptr [ebp+14],00
//mov ebx,[ebp+08]
//fstp dword ptr [eax]

exit:
jmp returnhere

somewrite4AOB: //"CMOF.exe"+1AF3BE:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
somewrite4AOB: //"CMOF.exe"+1AF3BE:
db 8B 5D 08 D9 18
//Alt: mov ebx,[ebp+08]
//Alt: fstp dword ptr [eax]
unregistersymbol(somewrite4AOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"Inf. Double Jump (F11)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(checkdoublejumpstateAOB,80 BF 5C 01 00 00 00 75 13)
registersymbol(checkdoublejumpstateAOB)
aobscan(virticalspeedcmpzero1AOB,D8 99 8C 00 00 00 DF E0 F6 C4 01)
registersymbol(virticalspeedcmpzero1AOB)

label(bJumpKeyFlag)
registersymbol(bJumpKeyFlag)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(resetkeyflag2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov byte ptr [edi+0000015C],00

originalcode:
cmp byte ptr [edi+0000015C],00

exit:
jmp returnhere

///

newmem2:
pushad
push 20      //key SPACE
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je resetkeyflag2
cmp byte ptr [bJumpKeyFlag],0
jne originalcode2
mov byte ptr [bJumpKeyFlag],1
mov byte ptr [ecx+0000015C],00
jmp originalcode2

resetkeyflag2:
mov byte ptr [bJumpKeyFlag],0
jmp originalcode2

originalcode2:
fcomp dword ptr [ecx+0000008C]

exit2:
jmp returnhere2

///
bJumpKeyFlag:
db 0
///

checkdoublejumpstateAOB: //"CMOF.exe"+A71ED:
jmp newmem
nop
nop
returnhere:

virticalspeedcmpzero1AOB: //"CMOF.exe"+C2A02:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
checkdoublejumpstateAOB: //"CMOF.exe"+A71ED:
db 80 BF 5C 01 00 00 00
//Alt: cmp byte ptr [edi+0000015C],00
unregistersymbol(checkdoublejumpstateAOB)
virticalspeedcmpzero1AOB: //"CMOF.exe"+C2A02:
db D8 99 8C 00 00 00
//Alt: fcomp dword ptr [ecx+0000008C]
unregistersymbol(virticalspeedcmpzero1AOB)

unregistersymbol(bJumpKeyFlag)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"Jump Higher (F10 / Alt F10)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(jumpspeedwrite1AOB,D9 9E 8C 00 00 00 D9 EE C6 86)
registersymbol(jumpspeedwrite1AOB)
aobscan(doublejumpspeedwrite2AOB,D9 9E 8C 00 00 00 8B 48 2C)
registersymbol(doublejumpspeedwrite2AOB)

label(fJumpMultiplier)
registersymbol(fJumpMultiplier)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fmul dword ptr [fJumpMultiplier]

originalcode:
fstp dword ptr [esi+0000008C]

exit:
jmp returnhere

///

newmem2:
fmul dword ptr [fJumpMultiplier]

originalcode2:
fstp dword ptr [esi+0000008C]

exit2:
jmp returnhere2

///
fJumpMultiplier:
dd (float)1.25
///

jumpspeedwrite1AOB: //"CMOF.exe"+D0AA5:
jmp newmem
nop
returnhere:

doublejumpspeedwrite2AOB: //"CMOF.exe"+BAF95:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
jumpspeedwrite1AOB: //"CMOF.exe"+D0AA5:
db D9 9E 8C 00 00 00
//Alt: fstp dword ptr [esi+0000008C]
unregistersymbol(jumpspeedwrite1AOB)
doublejumpspeedwrite2AOB: //"CMOF.exe"+BAF95:
db D9 9E 8C 00 00 00
//Alt: fstp dword ptr [esi+0000008C]
unregistersymbol(doublejumpspeedwrite2AOB)

unregistersymbol(fJumpMultiplier)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>121</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>69</ID>
              <Description>"fJumpMultiplier"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>fJumpMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Jump Behavior (F9 / Alt F9)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(verticalspeedread1AOB,D8 8B 8C 00 00 00)
registersymbol(verticalspeedread1AOB)

label(bGlide)
registersymbol(bGlide)
label(pVerticalSpeed)
registersymbol(pVerticalSpeed)
label(iTPVSpeed)
registersymbol(iTPVSpeed)
label(iGlideDownSpeed)
registersymbol(iGlideDownSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pVerticalSpeed],ebx

push ecx
cmp byte ptr [bGlide],1
jne originalcode

pushad
push 20      //key SPACE
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov ecx,[iGlideDownSpeed]
fld dword ptr [ebx+0000008C]
fistp dword ptr [iTPVSpeed]
cmp dword ptr [iTPVSpeed],ecx
jge originalcode
mov [iTPVSpeed],ecx
fild dword ptr [iTPVSpeed]
fstp dword ptr [ebx+0000008C]

originalcode:
pop ecx
fmul dword ptr [ebx+0000008C]

exit:
jmp returnhere

///
bGlide:
db 0
pVerticalSpeed:
dd 0
iTPVSpeed:
dd 0
iGlideDownSpeed:
dd #-100
///

verticalspeedread1AOB: //"CMOF.exe"+C06EE:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
verticalspeedread1AOB: //"CMOF.exe"+C06EE:
db D8 8B 8C 00 00 00
//Alt: fmul dword ptr [ebx+0000008C]
unregistersymbol(verticalspeedread1AOB)

unregistersymbol(bGlide)
unregistersymbol(pVerticalSpeed)
unregistersymbol(iTPVSpeed)
unregistersymbol(iGlideDownSpeed)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>120</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>120</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>84</ID>
              <Description>"Glide"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bGlide:
db 1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bGlide:
db 0
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>85</ID>
                  <Description>"Glide Down Speed"</Description>
                  <ShowAsSigned>1</ShowAsSigned>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iGlideDownSpeed</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>62</ID>
              <Description>"W+Space to Moon Jump"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pVerticalSpeed</Address>
              <Offsets>
                <Offset>8C</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>87</Key>
                    <Key>32</Key>
                  </Keys>
                  <Value>2000</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHealth</Address>
          <Offsets>
            <Offset>74</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Magic"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pMana</Address>
          <Offsets>
            <Offset>54</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"[old / testing]"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+2337A44</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+30845F4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+ABF35A8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>CMOF.exe+204B5F0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>CMOF.exe+3063E10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>CMOF.exe+3063E20</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+2337A4C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+204A638</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+204ABDC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+264DB40</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+305C1FC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+305C200</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+1D06DA8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+233798C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>CMOF.exe+ABFEEC4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(magicreadAOB,D9 41 54 D8 71 40 D9 5D FC D9 45 FC)
registersymbol(magicreadAOB)

label(pMana)
registersymbol(pMana)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMana],ecx

originalcode2:
fld dword ptr [ecx+54]
fdiv dword ptr [ecx+40]

exit2:
jmp returnhere2

///
pMana:
dd 0
///

magicreadAOB: //"CMOF.exe"+19B854:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
magicreadAOB: //"CMOF.exe"+19B854:
db D9 41 54 D8 71 40
//Alt: fld dword ptr [ecx+54]
//Alt: fdiv dword ptr [ecx+40]
unregistersymbol(magicreadAOB)

unregistersymbol(pMana)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>CMOF.exe+30681C0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>CMOF.exe+2F2CFB0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>CMOF.exe+2F2CFC0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>122F9E34</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>122F9E04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>122F9E14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>122F9E24</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>122F9E34</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>CMOF.exe+307FB58</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0346C0C0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>03C887A8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>CMOF.exe+307DBA9</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov byte ptr [esi+000001D5],00

exit:
jmp returnhere

"CMOF.exe"+BAF89:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"CMOF.exe"+BAF89:
db C6 86 D5 01 00 00 01
//Alt: mov byte ptr [esi+000001D5],01
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0347DA60</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>0347DB30</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0347DA28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(doublejumpspeedwrite1AOB,D9 9E 8C 00 00 00 8B 4C 24 70)
registersymbol(doublejumpspeedwrite1AOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
fmul dword ptr [fJumpMultiplier]

originalcode2:
fstp dword ptr [esi+0000008C]

exit2:
jmp returnhere2

doublejumpspeedwrite1AOB: //"CMOF.exe"+C9461:
jmp newmem2
nop
returnhere2:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
doublejumpspeedwrite1AOB: //"CMOF.exe"+C9461:
db D9 9E 8C 00 00 00
//Alt: fstp dword ptr [esi+0000008C]
unregistersymbol(doublejumpspeedwrite1AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"Jump Higher (old)"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(jumpspeedwrite1AOB,D9 9E 8C 00 00 00 D9 EE C6 86)
registersymbol(jumpspeedwrite1AOB)

label(fJumpMultiplier)
registersymbol(fJumpMultiplier)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fmul dword ptr [fJumpMultiplier]

originalcode:
fstp dword ptr [esi+0000008C]

exit:
jmp returnhere

///
fJumpMultiplier:
dd (float)1.25
///

jumpspeedwrite1AOB: //"CMOF.exe"+D0AA5:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
jumpspeedwrite1AOB: //"CMOF.exe"+D0AA5:
db D9 9E 8C 00 00 00
//Alt: fstp dword ptr [esi+0000008C]
unregistersymbol(jumpspeedwrite1AOB)

unregistersymbol(fJumpMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>71</ID>
              <Description>"Double Jump Higher"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(doublejumpspeedwrite2AOB,D9 9E 8C 00 00 00 8B 48 2C)
registersymbol(doublejumpspeedwrite2AOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
fmul dword ptr [fJumpMultiplier]

originalcode2:
fstp dword ptr [esi+0000008C]

exit2:
jmp returnhere2

doublejumpspeedwrite2AOB: //"CMOF.exe"+BAF95:
jmp newmem2
nop
returnhere2:

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
doublejumpspeedwrite2AOB: //"CMOF.exe"+BAF95:
db D9 9E 8C 00 00 00
//Alt: fstp dword ptr [esi+0000008C]
unregistersymbol(doublejumpspeedwrite2AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>72</ID>
              <Description>"fJumpMultiplier"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>fJumpMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"fSpeedCheck"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>fSpeedCheck</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(fSpeedCheck)
registersymbol(fSpeedCheck)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fst dword ptr [fSpeedCheck]

originalcode:
fcomp dword ptr [ebx+0000008C]

exit:
jmp returnhere

///
fSpeedCheck:
dd (float)1.0
///

"CMOF.exe"+BD5EF:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"CMOF.exe"+BD5EF:
db D8 9B 8C 00 00 00
//Alt: fcomp dword ptr [ebx+0000008C]
unregistersymbol(fSpeedCheck)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>75</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(fSpeedCheck)
registersymbol(fSpeedCheck)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fst dword ptr [fSpeedCheck]

originalcode:
fcomp dword ptr [ecx+0000008C]

exit:
jmp returnhere

///
fSpeedCheck:
dd (float)1.0
///

"CMOF.exe"+C2A02:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"CMOF.exe"+C2A02:
db D8 99 8C 00 00 00
//Alt: fcomp dword ptr [ecx+0000008C]
unregistersymbol(fSpeedCheck)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(fSpeedCheck)
registersymbol(fSpeedCheck)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fst dword ptr [fSpeedCheck]

originalcode:
fcom dword ptr [ebx+0000008C]

exit:
jmp returnhere

///
fSpeedCheck:
dd (float)1.0
///

"CMOF.exe"+C1314:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"CMOF.exe"+C1314:
db D8 93 8C 00 00 00
//Alt: fcom dword ptr [ebx+0000008C]
unregistersymbol(fSpeedCheck)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(fSpeedCheck)
registersymbol(fSpeedCheck)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fst dword ptr [fSpeedCheck]

originalcode:
fcom dword ptr [ebx+0000008C]

exit:
jmp returnhere

///
fSpeedCheck:
dd (float)1.0
///

"CMOF.exe"+C137B:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"CMOF.exe"+C137B:
db D8 93 8C 00 00 00
//Alt: fcom dword ptr [ebx+0000008C]
unregistersymbol(fSpeedCheck)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>03473098</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(checkdoublejumpstate2AOB,80 BF 5C 01 00 00 00 75 17)
registersymbol(checkdoublejumpstate2AOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov byte ptr [edi+0000015C],00

originalcode2:
cmp byte ptr [edi+0000015C],00

exit2:
jmp returnhere2

checkdoublejumpstate2AOB: //"CMOF.exe"+A71ED:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
checkdoublejumpstate2AOB: //"CMOF.exe"+A71ED:
db 80 BF 5C 01 00 00 00
//Alt: cmp byte ptr [edi+0000015C],00
unregistersymbol(checkdoublejumpstate2AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>03473098</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>81</ID>
          <Description>"bJumpKeyFlag"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>bJumpKeyFlag</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(virticalspeedcmpzero1AOB,D8 99 8C 00 00 00 DF E0 F6 C4 01)
registersymbol(virticalspeedcmpzero1AOB)

label(bJumpKeyFlag)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)
label(resetkeyflag2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 20      //key SPACE
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je resetkeyflag2
cmp byte ptr [bJumpKeyFlag],0
jne originalcode2
mov byte ptr [bJumpKeyFlag],1
mov byte ptr [ecx+0000015C],00
jmp originalcode2

resetkeyflag2:
mov byte ptr [bJumpKeyFlag],0
jmp originalcode2

originalcode2:
fcomp dword ptr [ecx+0000008C]

exit2:
jmp returnhere2

///
bJumpKeyFlag:
db 0
///

virticalspeedcmpzero1AOB: //"CMOF.exe"+C2A02:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
virticalspeedcmpzero1AOB: //"CMOF.exe"+C2A02:
db D8 99 8C 00 00 00
//Alt: fcomp dword ptr [ecx+0000008C]
unregistersymbol(virticalspeedcmpzero1AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>83</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>03485550</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>healthreadAOB</Name>
      <Address> 00519E34</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>magicreadAOB</Name>
      <Address> 0059B774</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthread2AOB</Name>
      <Address> 004BD143</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bUndead</Name>
      <Address>0CB1006F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>0CB10070</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMana</Name>
      <Address>0CB10074</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somewrite1AOB</Name>
      <Address> 005C2016</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somewrite2AOB</Name>
      <Address> 005C2033</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somewrite3AOB</Name>
      <Address> 005C2057</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>magiccalculateonuseAOB</Name>
      <Address> 0059C613</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>breathwriteAOB</Name>
      <Address> 005E5EC6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somewrite4AOB</Name>
      <Address> 005AF2CE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>checkdoublejumpstateAOB</Name>
      <Address> 004D4B56</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>virticalspeedcmpzero1AOB</Name>
      <Address> 004C29A2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bJumpKeyFlag</Name>
      <Address>0ECB0061</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fFallSpeedThreshold</Name>
      <Address>0ECC0047</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>verticalspeedread1AOB</Name>
      <Address> 004C068E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bGlide</Name>
      <Address>0ECC0067</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pVerticalSpeed</Name>
      <Address>0ECC0068</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iTPVSpeed</Name>
      <Address>0ECC006C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iGlideDownSpeed</Name>
      <Address>0ECC0070</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jumpspeedwrite1AOB</Name>
      <Address> 004D0A45</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>doublejumpspeedwrite2AOB</Name>
      <Address> 004BAF35</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fJumpMultiplier</Name>
      <Address>13F20022</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5526599#5526599
</Comments>
</CheatTable>
