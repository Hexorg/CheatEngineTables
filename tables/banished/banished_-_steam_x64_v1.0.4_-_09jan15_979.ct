<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Massive Stockpiles [permanent]"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+86EA6) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rbx+38],#999999 //Should make all storage huge

originalcode:
mov eax,[rbx+38]
add [rcx+14],eax

exit:
jmp returnhere

"Application-steam-x64.exe"+86EA6:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+86EA6:
mov eax,[rbx+38]
add [rcx+14],eax
//Alt: db 8B 43 38 01 41 14
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Massive Barns [permanent]"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+86EB8) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rbx+38],#999999

originalcode:
mov eax,[rbx+38]
add [rcx+04],eax

exit:
jmp returnhere

"Application-steam-x64.exe"+86EB8:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+86EB8:
mov eax,[rbx+38]
add [rcx+04],eax
//Alt: db 8B 43 38 01 41 04
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Massive Trading Posts/Markets [permanent] (Click on Trading Posts/Markets to Set)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+7960D) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rbx+38],#999999

originalcode:
mov ecx,[rbx+38]
test ecx,ecx

exit:
jmp returnhere

"Application-steam-x64.exe"+7960D:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+7960D:
mov ecx,[rbx+38]
test ecx,ecx
//Alt: db 8B 4B 38 85 C9
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Set All Goods in Barns and Stockpiles to 1000"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+86D10) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [r15+08],#1000

originalcode:
imul eax,[r15+08]

exit:
jmp returnhere

"Application-steam-x64.exe"+86D10:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+86D10:
imul eax,[r15+08]
//Alt: db 41 0F AF 47 08
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>76</ID>
      <Description>"Reset Mines (Click Mine to Reset)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+5E896) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rbx+68],0
mov byte ptr [rbx+48],0

originalcode:
movd xmm1,[rbx+68]

exit:
jmp returnhere

"Application-steam-x64.exe"+5E896:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+5E896:
movd xmm1,[rbx+68]
//Alt: db 66 0F 6E 4B 68
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>81</ID>
      <Description>"Citizen Options"</Description>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>67</ID>
          <Description>"Happy Citizens"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+871D9) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rax+00000080],(float)10

originalcode:
addss xmm8,[rax+00000080]

exit:
jmp returnhere

"Application-steam-x64.exe"+871D9:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+871D9:
addss xmm8,[rax+00000080]
//Alt: db F3 44 0F 58 80 80 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Healthy Citizens"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+107DD6) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rcx+50],(float)10

originalcode:
movss xmm0,[rcx+50]

exit:
jmp returnhere

"Application-steam-x64.exe"+107DD6:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+107DD6:
movss xmm0,[rcx+50]
//Alt: db F3 0F 10 41 50
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>72</ID>
          <Description>"Sated Citizens"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+10864D) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [r14+44],(float)0

originalcode:
//movss [r14+44],xmm0

exit:
jmp returnhere

"Application-steam-x64.exe"+10864D:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+10864D:
movss [r14+44],xmm0
//Alt: db F3 41 0F 11 46 44
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"Warm Citizens"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+103E9C) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [rax+48],(float)0

originalcode:
movss xmm0,[rax+48]

exit:
jmp returnhere

"Application-steam-x64.exe"+103E9C:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+103E9C:
movss xmm0,[rax+48]
//Alt: db F3 0F 10 40 48
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>64</ID>
      <Description>"Age Options (Pick One)"</Description>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Forever Young"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+8719A) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
cmp [rax+3C],(float)6 //float*5=age
jle originalcode
mov [rax+3C],(float)3.6
jmp exit

originalcode:
movss xmm0,[rax+3C]

exit:
jmp returnhere

"Application-steam-x64.exe"+8719A:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+8719A:
movss xmm0,[rax+3C]
//Alt: db F3 0F 10 40 3C
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Logan's Run"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+8719A) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
cmp [rax+3C],(float)6 //float*5=age
jle originalcode
mov [rax+3C],(float)99
jmp exit

originalcode:
movss xmm0,[rax+3C]

exit:
jmp returnhere

"Application-steam-x64.exe"+8719A:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+8719A:
movss xmm0,[rax+3C]
//Alt: db F3 0F 10 40 3C
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"Euthanasia"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"Application-steam-x64.exe"+8719A) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
cmp [rax+3C],(float)12 //float*5=age
jle originalcode
mov [rax+3C],(float)99
jmp exit

originalcode:
movss xmm0,[rax+3C]

exit:
jmp returnhere

"Application-steam-x64.exe"+8719A:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Application-steam-x64.exe"+8719A:
movss xmm0,[rax+3C]
//Alt: db F3 0F 10 40 3C
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
