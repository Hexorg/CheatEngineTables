<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Lame memory protection"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
cmp [004213F4],29C68940
je +5
call ExitProcess
cmp [004213F8],00045CB3
je +5
call ExitProcess
cmp [004213FC],54838B00
je +5
call ExitProcess
cmp [00421400],8B000004
je +5
call ExitProcess

originalcode2:
mov eax,[ebx+0000045C]

exit2:
jmp returnhere2

"Tutorial-i386.exe"+21578:
jmp newmem2
nop
returnhere2:

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
cmp [00420F3C],832940FF
je +5
call ExitProcess
cmp [00420F40],00000458
je +5
call ExitProcess
cmp [00420F44],0444B38B
je +5
call ExitProcess
cmp [00420F48],458D0000
je +5
call ExitProcess

originalcode:
mov eax,[ebx+00000458]

exit:
jmp returnhere

"Tutorial-i386.exe"+21138:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"Tutorial-i386.exe"+21578:
mov eax,[ebx+0000045C]
//Alt: db 8B 83 5C 04 00 00
dealloc(newmem)
"Tutorial-i386.exe"+21138:
mov eax,[ebx+00000458]
//Alt: db 8B 83 58 04 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Solve tutorial step 2"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access


originalcode:
sub [ebx+00000458],eax
mov [ebx+00000458],(int)1000

exit:
jmp returnhere

"Tutorial-i386.exe"+20F3E:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Tutorial-i386.exe"+20F3E:
sub [ebx+00000458],eax
//Alt: db 29 83 58 04 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Solve tutorial step 2 with stealthedit"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
stealthedit(stealth_tut2,00420F3E,6)
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
registersymbol(staddress)
label(staddress)

newmem: //this is allocated memory, you have read,write,execute access


originalcode:
sub [ebx+00000458],eax
mov [ebx+00000458],(int)1000

exit:
jmp returnhere

stealth_tut2:
staddress:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staddress:
sub [ebx+00000458],eax
//Alt: db 29 83 58 04 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Solve tutorial step 3"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access


originalcode:
sub [ebx+0000045C],esi
mov [ebx+0000045C],(int)5000

exit:
jmp returnhere

"Tutorial-i386.exe"+213F7:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Tutorial-i386.exe"+213F7:
sub [ebx+0000045C],esi
//Alt: db 29 B3 5C 04 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Solve tutorial step 3 with stealthedit"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
stealthedit(stealth_tut3,004213F7,6)
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
registersymbol(staddress2)
label(staddress2)

newmem: //this is allocated memory, you have read,write,execute access


originalcode:
sub [ebx+0000045C],esi
mov [ebx+0000045C],(int)5000

exit:
jmp returnhere

stealth_tut3:
staddress2:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staddress2:
sub [ebx+0000045C],esi
//Alt: db 29 B3 5C 04 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov eax,[ebx+00000458]</Description>
      <Address>00421138</Address>
      <ModuleName>Tutorial-i386.exe</ModuleName>
      <ModuleNameOffset>21138</ModuleNameOffset>
      <Before>
        <Byte>89</Byte>
        <Byte>1C</Byte>
        <Byte>24</Byte>
        <Byte>89</Byte>
        <Byte>C3</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>83</Byte>
        <Byte>58</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>3D</Byte>
        <Byte>E8</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :sub [ebx+00000458],eax</Description>
      <Address>00420F3E</Address>
      <ModuleName>Tutorial-i386.exe</ModuleName>
      <ModuleNameOffset>20F3E</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>B7</Byte>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>83</Byte>
        <Byte>58</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>B3</Byte>
        <Byte>44</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[ebx+00000458]</Description>
      <Address>00420F59</Address>
      <ModuleName>Tutorial-i386.exe</ModuleName>
      <ModuleNameOffset>20F59</ModuleNameOffset>
      <Before>
        <Byte>D4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>83</Byte>
        <Byte>58</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>55</Byte>
        <Byte>D4</Byte>
        <Byte>E8</Byte>
        <Byte>A9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[ebx+00000458]</Description>
      <Address>00420F71</Address>
      <ModuleName>Tutorial-i386.exe</ModuleName>
      <ModuleNameOffset>20F71</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>6F</Byte>
        <Byte>CC</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>83</Byte>
        <Byte>58</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>7D</Byte>
        <Byte>41</Byte>
        <Byte>B8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fstp dword ptr [ebx+0000046C]</Description>
      <Address>00421B19</Address>
      <ModuleName>Tutorial-i386.exe</ModuleName>
      <ModuleNameOffset>21B19</ModuleNameOffset>
      <Before>
        <Byte>AB</Byte>
        <Byte>6C</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9B</Byte>
        <Byte>6C</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>B3</Byte>
        <Byte>58</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[ebx+0000045C]</Description>
      <Address>00421578</Address>
      <ModuleName>Tutorial-i386.exe</ModuleName>
      <ModuleNameOffset>21578</ModuleNameOffset>
      <Before>
        <Byte>89</Byte>
        <Byte>1C</Byte>
        <Byte>24</Byte>
        <Byte>89</Byte>
        <Byte>C3</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>83</Byte>
        <Byte>5C</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>3D</Byte>
        <Byte>88</Byte>
        <Byte>13</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :sub [ebx+0000045C],esi</Description>
      <Address>004213F7</Address>
      <ModuleName>Tutorial-i386.exe</ModuleName>
      <ModuleNameOffset>213F7</ModuleNameOffset>
      <Before>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
        <Byte>40</Byte>
        <Byte>89</Byte>
        <Byte>C6</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>B3</Byte>
        <Byte>5C</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>83</Byte>
        <Byte>54</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov edx,[ebx+0000045C]</Description>
      <Address>00421403</Address>
      <ModuleName>Tutorial-i386.exe</ModuleName>
      <ModuleNameOffset>21403</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>54</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>93</Byte>
        <Byte>5C</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>81</Byte>
        <Byte>C2</Byte>
        <Byte>30</Byte>
        <Byte>F8</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[ebx+0000045C]</Description>
      <Address>00421414</Address>
      <ModuleName>Tutorial-i386.exe</ModuleName>
      <ModuleNameOffset>21414</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>7C</Byte>
        <Byte>8C</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>83</Byte>
        <Byte>5C</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>7D</Byte>
        <Byte>5D</Byte>
        <Byte>B8</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>savecode</Name>
      <Address>01BF0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>tutorialhealth</Name>
      <Address>01BF0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>regcheck_counter</Name>
      <Address>01E00000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mycode</Name>
      <Address>01BF0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>originalcode</Name>
      <Address>01E00000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
