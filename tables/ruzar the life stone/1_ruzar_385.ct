<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <Files>
    <MRAA.lua Encoding="Ascii85">r5W39,sJjF4fqfGFqLbNjK[53$1S+llNiOKNwA2GzG#)zB1bmCYllPGf+@l.(zT#C6y;CCF0#luw;kH7y!+;9zohl*$;+.h++fkDamR$nss_F0gI6@tyZdd!qK(xeM19k=tXvh0_NSoEStBA5!(8^lRT2w-:Pho),]RvEyY#5H]1t#s]o5;LKdV]:KRr1.De5FH$hxZ%k/{FuJS,W^6;FMiJUBfeBwG^s8byM4jEF}85za*%D{qqJma#{4eec[O]@FD1gTHwahZQX_c/UG+jw2!#AWtAxS?A:DLrfQvuqr*0ksk,[Y,0l3cz62.WzT{gl7xcdw51u1:=b+J,f);AhrgF_tqTFV[W;]6BCqPo72{=i5_0U4gL$%OPNl2]tNZ_YkhCUzF}2zD%SfKI-OA5sb@(LX@FWD.:s.hJL!yXSeXFCM[8C_7vSqYu!CuuvxY]Ql.}Obyu)t(57p*mCRi$2^VA0=^ike5[DwU[e5c}#Vl^%#C;#Rx/fo4*@Pmfu[Nc/wrg-$HF;C5*,q@{%/bb+3t5vE.gs)1]c@jQYXR@*:r*#GvQ]YM[qafoHcd8I.KeOg@uZ2e4I;oEA(x:X@kCiQFD(?c;x%S-YI3fej]QxgD*1p]RZwT#2{]0Am^k_J)f+KeBOCGup1dIM2vBMRC$ryG*0q:[?$0*_zpA,kYJIYf,qDEDm]%RvwIB43]KfUNQlK1E6bICk+S)(}D6KsN!{d.n/fa_Cu^xJwqpW8nTjkitM75Zw%1S@ofKfT;v]eDBPYc8Q_5);m49#*:4Q=QCtBwV%KGbzp#^-1VW+b?%}o]Xw$IoZWwBWzDx:SyJ:VlO!F2H:q7^f.VZ)S:$y[E4.CYEfXMP$?LA4!DIf:l4w@(BYoh/UaLypuH:Dai3nl!,gt5CO1p_y%0vudjEQfU(lHYzMeA%a7XXc=kbKOU@;#Qt..U1hj=kFdln}PLeg1M%nf./:1[2aG[;r{.2!ghTA)M]=TdI.XC.@^J=xN{%lLiBc!I;Qx5+M7skOU,w1,gnnkOUILgLU3Rp*f}_=tsNk!C[H/u_;}e3wD;cAoEsGRp.8eWTfGB!=?UzB)ADjNI3Pb+p5x%?NiWzGzstmc!U9mAqs^P?XijnWddJT.HRWslZ],yN{$i!fDD*dRWa/TIV^0KMIEP#qVMUD]2LT?%nL(YE*2cd)hL0Hz}*D9.,9_=.t)OKLvld)!G!-/a0M8cSTG=A1w+}kk!Vk3OLLe+D*t0n#[L+WisMMd$a-Kx2l+!ma@E:y@payV6:4F-C77FC6rf505@(7IL@-loo}sCkanpdH[w^Wh[+NYc6Qcw;yv;72H-^I)veJMpg*eGtR7ft:K1e1%b8$B^xw+UKPBSRY4iIB(YgkYhit6a/^r2}dh%ilK=E7#TY$_^!S=PGjKHClUr%XHoJ4jSQFktCpxUuIrfzN,.agm9wbsk[:a,O]i70Egtuw-Qek=YV?V!;@m.%#fvijF.y9.zAVwGJ:TuhOV7[}1SMQ0:o![XQSLd{jr890l[]R.u1?#[cAagdggz5;EQJ(9Y^/$S(v0^t$RfrPQ(R]DA^V]aun@foV#KV68xkDk#uh)N?wXx=Z)/HhTB(-E[J+T7}*$Fp.{,@L5Gh/2aitMee9EjGy:0KVkv31ZaYxAIHROy]7d-Rw?Mo#xO,840HvPj_7;T5p_^M%XBN7/Hm}e;jQSl-qqCwwD=zEAV2zs^!HTN]Y69I*T=Fh,fb_3w8/g)HmcsYHqjoXGyf3?,K*s@e(}/^dxor$rO)tp)4@zhTY4m}SjN4/0p3Q95hZZ?oNKDE97jjL;*c@/1zwmBnp857FUl[G6DJW,neg.Okzj[iNWo#V00:KOv/G{6CHv*k5Ms!^%^%^JT;Vs3DP6j/UCgN!ZjeI@%qu#eWAB!8g$(pULT:IlqK4dr:8y5#UhW8;FMGiDb+7q+0oLZQI6uxGoITv![)[;k[]f!89XmT8JPgB]AIxMPpE_m}y{QR[:?MN9G:VqcgU!+0x-7w*5G8QNE9Cm)E?56rRZ;o0rHpg-1-y-:_NNIPC:Pt=R6IQ-sL./%-pX}tIu94..S!Tph*L?[@mLTye3P4GlY/TN+V0wqI!*mO[WV@]I?.SP*WdmPMYuRv.@YUxpze#nwd!,#3.1r)gWzG[hkuS%(t3oSbqZ]?f+P,I*Z1vcN6](RkE}:;KvN,zDIqG@%6LRVgmF@dk+R+^HfdKj[p1Utre(/6#fC!ch[X)ZZiZQ9N,+7IE^nY3lE54fhQ8KA;Enf1z8owYm5O8u,88Fq29Zq/iag#Tjbh[eT5gADO+(FzgaH87:,J6y$HA^XLOi%yFuDB@^q^%C2o%TNyl:HP!7wxDD57a]u?8WJpWChJ.]?2Lgpa2su1yEtimLP$FppW%c;wd,)mSj^Ke2?ZE#g=N4Y*A_ghDVdp?_(.9_aE%7]W7H[!3vzVOW7MsM_j*lo8)m61=l5y{f6hc2J(:P.$U,Kj,^LF6!/M%ne=gl^i_)lhZ8Du$}):*7%ksYOiHxPj]#oaOzRG:fv77j[.0dg^WySceo0oyZzM2HQe*?$!+ej(4WH@w;/ske)@0?UIdXJzEOLBvu#wPVNPd(G.;_mwfW_7+FlDbLift1S^!Y;CApiMk8IUFxWA?QVi,IP*GGZS!Gd6/b-Q7,3xPv?e.-WcEo}E1%UbXgl}iz)2ZdKXBon[nfwo):U+53K*$26+;xn?h](%=WsEl%,D1{/DAP@KRDt{%t-J0f)4BuvpZ=ol[83sR.G)3vrIhNLIdU,j.w])Pj29pdzg9pQ]p!+=c89[:l5M#H53vlQkp/^!VP3@6G*g1-H]E%%iYH$^#9oV3+$x_um9EvaK[;Hb:AV@Wy4Z*!7F@nI2TPF8YS:kh/WED7/:hRfWPaFQhJy={yn:I^610$,V$aPf^C%J4K;2:?_H4CFxoYrxL3QfU54msmPpH^#$gWCwmG;lgu1ba?H;?WZ7S+KJDqE}W^j?(Zn59M2}7St19lGuL$</MRAA.lua>
    <monojunk160117.lua Encoding="Ascii85">y+(MM,cvWIt2?+G0jJbMvZgdv,UCu3LOYI}[VTVt]kLIEn@6:GMM5@uBB;!M$G%,rx4,%RH%KYz[4OrfL.^P(VzFOX0Q}R(]O{{i^.F8A*6/L9CjFIno2E+Vs#vk@idSEMg?5z/;#rDF*mge=;omJ(3G33uicjdJZkYOAZmO(,;MEQ{CJ{208T)izEno4h3xfwij5YYrCtl=S;!xz;%2(WBo^$K{-gIdPAoK%OAOE@a,cx=5DL!r65]WL?GA+iPJdIy+o,lswRu$dd@XjswI2O)V0OaLjbvHhHbCovhVD1%DgEv]ItUIdv@vRIOo91O+*vxOASDxl}KuA!,JFDsrMhYc=fmM89yj+v8Z+fdv7qKN!eH}x0qGA:l=c$E+HS1;AbK+BJM6s-64tF%Vw]Z%mLR6w02QQJ^xJX,;dSjz)1xiGEi)I?FJp3dICKqpCK7aZ8j4Jet2G9gRWmodD4wrErVGUzB(f49Yhk2AFLA5Ctya]weJ=Dtvkd4Q^Bi0oquQxy)U#6Q=C*(#4WpM@i+G{iN/y]b1+X?L:MH3eyfySa-4pU2D3OIS%NFo@n5vKx^0J,VEOYvq+SEo;./i6JpFq+Gg=v}F_J#z-rGV^lw;MSrZ?T(d+6PM8F!YGEOfYBm2KRzTz-rQ3,[y_qdF{s.f:Yr0gm;OYytb[.^F1c.tx=$Gv47Gv}U;+;Snieui4LgAOi]P*Qg2[(!$l)//m[3^mMfmvL^66X9W^Nt%4Nx*sZz=TjSdVfRtpN*I5Z:V!#W#}GLYaUn0WTXmy0UKg%]Y#]q02*?a!Ex_frU0kwgA?GvE%;@[vaKET[Nmw,NEdp3XNB-L/vTZDqoX%f?Z;4s@;#7Epi-MIPBiKdR3:6$([0G*}tkLv=;:I6iJ$.g14dR8-WaW9@mWop}HAI2t[iDsg4QTZBKTJonYOpnEQ2wCg75HFUs[i_Jc-ukh=G}BfmwZTNDV6=Jlac/Y8gMqRpP5nVwZ8sZ({eX(Dz}Qj}F3CRO;#0FTG)rl]8GD(v5Sk692}xGZ7u%[))*mfsmP?XYiMR(h^JbyI1KEjb0P[fSlLOZSP;W,y]Fv#jPeq!5SM@x%PbLh$R_dSZzbkS5!K6rd+-.)wpOJiK1;is!#Hb.jHF#d#RnM5/rK=4aQ-=}3X(FswGti_8kR8?VRz8q3rG3BaBm5Du7{by[rSs5uhB@o,,Spi(d.+(2@6v68IWBBqW@IZPEmS=fwBs=-?$2;OH:Eb-JT18r/-G%B;_SqqeaE3)FDK}$/U0zftRakE.zLQTlB$ZjC.s9HqqNDj.;F=E)zTdb-JGfB{NloASTzw/^-ZdS#=).(9nfYwDWQrm*{3?TtBN;m@epqWg9KL=WufI$-)o=ulp,@TXLe9W;W%i/IbK%7-cR)%=7C%[%WRLZ$,%*!gLK]*/H;@r6]7]sYuK+m^%oTr($Xsk_70+[$FrK@s%)e.@OIJk!Wp7B}kdh2+Q=Ic}5);6hSJWyv55Qo)t=Cl@luA9(ckYS;aVWPXb=O.AGLue4i52L/6bbOwm+miifw@Oc8w3$*ZSw.75+!iHOAmK;?4-[*t;jQ8+6u@}2jtn/V7q+@hqJWEMo2KEFVrFTFl.x0yDt93o,$Tae=J]8{iUpdbrVITjCH9ya4f{$j:_{3%d6#Ba7Bh3c+j!#?Y4r=x!YI$C,ypHWwQzliXkD!N(]=#}B/C;A@/Ah5R5i9YRjV5azXt,1d;W5c?bO/o[o7/Xp+O0Zc!(IW$-Ar5Ja5pll}vppmsJc^QYdm^y#zR5w$.jN.Xq/j)2Ew/COA6*Y2+(yWGF67d_j?K6}DmpIuG(34NNgk1AKjsL4[nUNd^ISf_P$0ofU.CMp$E$m.i3rK{bGB^Uob%e$jSm).b-C.-7rjAURe{GXs0xCU=3s0d0ljLsQmg^.se+;%_tv9no=QN[,/BaE59Fclie.ld;F(09Bog%H8=E]E6bIj.87+(3,q-wvLn6?q{nP6jDgZBmj(Dge)ofAxV]86f]it#{*=SsG=9^LeY5xr76q}7b5z{3p3Q9XC*!r5+l0FQGiHN]DwR+l$ji]/!IM?46z%0e1V6Q,)331WR/.IE)eXV3;foUXgGD$2YF]umhyPo8?vkcI;ll9IV#f+tm@1{xSxL.g[Cjg(B%?Ls+b_C=r6oUFp^RDtA(;WCFoppVGUs-]WafPlT^S{$.a(hhAn+)ohyIan5_VAI1Bs_BKaAAvuA5L;S;XYS,3%:;)E@74XOB@6IWa6jq=eWBHYf+/YXD;muA[XklxIm=maVGxpJ_N6IQ5fFANCBQ]uIx5*a3Tn6z9(s.+Txi=rpvm_w8q$AYhN/O9TSp{{w%labhylZ@.@LlC_Lc!$d9R[OV]hPqT{-kvM4@_Ccy?AYyCL5!S_I3T0AX9+nu50K(Y#_^wAswDx}@Pkm_]0WQJE:k{G;MDK/QQS@%fB=9/fS+LqV@9RhQ!M-qK4Y0.3]inH$;W}E7@Z.j#A{C:gHFk@w!p.g^zpvP#^zTN8UBL[-kv*WP?Xd*k:yNyu-%X,ssS6,Im;LF-N8CC+]B4UCq.W!S8X=7r1W4W8EAA.]zti%p@spBAQlG]AQFsf80=P@zxzAe_9cSEfB:OA9,o)@XfmlH-^nX]gx2k)q{?eHyNwb/#$fl]IxBW^R^T4ic[w;2hL*CT9+;Kq;nMegXp(}AC$[W1]upt).kw@:R?/onX(P!^SQYV{XZ!p?1q;x-alk.}-jG;#8a,_H+?]CDen{DtUW(C{r9G{$a#0qJ+6HJ@L7^q8eM-8%^z[*h@O]My7h;.8P%K#U@0@KY(9:zx;FZ}2U_AKmcV)Q]i,J7C9jv1xL^,BOoUJw}lR#_KZqT{rYM!35mNuMhE7m_43ZsopkA7fjVQ2E2+]c1RW@)SY%[KX6oG+*thbWJCn3##-3F[b{3O,Mw4Zl1,JuCAtEAx1X_5QL=3j?{/MX^-P[Lt^pf3,4nN)}SgGclM8D*Y#hTY/[M-KK(bi=-v/;87h=I*@uBby;o@BNcjdaw(}zi]0Te7#LYdR0dHz,Eg=Nz{q!%R)GNcHWKuh6_m#/DR(}5MIwD-cM-c=7+{6k%dHY?dY:d^/a[-c%rc_+SSGl:[ZxV$[kYTyzSFnW6XgOmR7p+sw0Sp]Bu{nH=BGqqg(6yiq-ECIL.VZC=I+.p[${IEJ+$p:jstW@mC-)!PS3f@[QLu,nLZK{%F-k[1lm+:^oO8EGpup]4siWSEF#*=5xLxMF%hPW.ovS5LNC.I=ZV%#T_7y=dnBG/B{Bhy%cqZ:b-rH3C/3-o,VXYS@3@ha@Zb^X-+!#vFujS{xQNquLDn;e_EBPFJaxweZEZ4#wz.qm!FTKl=RJBkDa_}gns(1Yi={#_y74r!xsSORBnwwtwnp^;r$!)x:E,AX7mK?(hgd:,N1uk5tZEQq?Gy*.U9Wgrxw9iTIGbodG8!,y!}rG[XKd$)wLmkNaRDuuOI!d2$,1aX$VvEcRe*Nj!i_]yP[d3#yh}w)a;+OK-+3Og1uy*3W0ET@wrcHGsg[P*0{!!+@?Co0?1o13l;^ZsCdCLmvDDtl-?#1-Zf03CxSz,0TPGYClI)QJVIe}cT]Mc6rkjd9p.g$iu5Tx*#g^0r%qtQ%KwYqxZ-Rj,04y3;aOzE(G}7yyM-nR-aE/68if_k[xiaanh(qJ^dK*Poj67W#;QJ_HvM!$OwAo.F/gmgGv#ox#EmCFi@ii{UF+4NA(?AaLcI2h)T}u8oPYR)s0lYvV=Toyxey.25(HBf+SYa{b#4w7rDR)KCW4jarh8YBliG%of/Vc6wmeJ}lWmZHk,!fGgVo24gq/d=US7m}=,5G1;;59}X!eB$TM88FG1QO[+C;[*x6h=I1RPLwRRZBA+u@_.a#}*[V#dN6q*ZUsRta?,C52k}6*li[Uy2WVuT?]rA?NPJ4:C^A^RK.3tlf^4!d^/l,75=O^it)]y-aMv3X%yQ9rU522o6OD{;KLzB#VmN1:1dAy.2KBj#%d/J1!O%#CCCI+CFVuI!wLs[,LU5F1NE2P6_678HmBvfUIF7:/Ah8+FP2Nu$uV_@),kgId/GowGlo{7U^#yr!]uH?ia*_Yr41fbX(-)6tmwS$EXD-6nE3sEc#A@:^IGq0!yMJZq2Q_eFjnbT.YFeDiNs[*DFLGoqlb9^ajKqpkRFOc;kkJwqt/$h)E,c7^yjh(?S+{4-H]CSDgMcIn__g:#DFAD,YD%rCP%KJp%iUNoJ-i3G]]4rR,Q-}wzbQ^WEd.iDK-kSy2^cnq^0_fE^GhBqVip*2UZBba/!Ux^(xsZ,ssl8.0Wal,oM)e0c/X@2,h1{[yMN3J*Nc);l8${O,-i:3-c^NRE,q(J?cYjbBSALs/D,[)[X+1w4FX,f*WwQ]X-z=h{?G9,az_-x/FGIA!(pV!v5gckiH#l;rIn!QbLX:CScLnu3?H@1/xm+H4$A{I79+3)F??6(%6rMA.k;?WAZpCLM;]z)gnpPxukui9Ln?CvbvxXreH-FnE4]SQV2DJ#2^=xFyt$Hwb+p5sHpvsExgj:MT0E%PEy#$J,_0CKz!@NZgawd1Orb;[_YH=?gEzQKVBC43?wujU)hgStc#!JIVYeu#9wJ2V8THmLB{SOfm%zC11%bI/e1SE;uw{,r[bx[r#?e9E2jqrV:lpMhi(Am%hu(;aB@}DPg#qD!=OPNp/H;0Wk._-n}eA8NBjAK6Z?w3y}JZcfdfU$ivwEniNhrB,3Nn$yx)MYkh!=lq43ku/m]%PAZqD^RxX(*r2]M.IAU0h=duav-U#q8?D+:3D[Y7y@4m2kG4dLXS9?1::]EukEFQGk.Q0hWN#bx}+t510XiCe,=Y3%LUsR5r4ejZo+JvG+^gVrlt*H]z4PT^qXJsB_(1xB@tBx:]i^07(hl{}QxZr(n(K_#=pG3_Q82Jkm!-VXqo:.4oR]y@[nJRHI*xNM[^4?)dV/.ahz}[UBG+O4f*rGeCV(OE%=t93znFJ6fvvJHq2{-3bq,_1K*;^PmhqT2W7[fP8bIfH@f3@)}qi}kspBXM.VZxwfP6hLLWE%l5ta1fJlHxjBDneF1+6K)l+.U%a,U7oX2?51OfuQE-5]}[miDDR[K}fj(I;n3HLM=,QM-YL13=lh?bPTVbEY%h=TG6]neMSalQr4i^506k{[ZMLl0k%-h]}FmS10Z%y7#RZgu=@Cy657203A_uNQ+QDMf*ZGDC]_/GX*,96eqk[4thnVNxAXi%$pj[q66dxof,Q._bN8V401Vh;,QPYG3ocynhqQutrN{ws%O%gcFE}mib=awxfZ;I^8b#$t$R6eQkZ^yAT%V%BA26L3/^n/Dpq7;Y66}MJIfH3ArKRMny8H6D8Vha9=#I_xzT_ejDzYxdtZGYX1KdKB3$3[sjwka2w7#*4#5xhVJIf$fkxF@!2y2=Zs5+Wrb1,eVXI=T]MZSu=bTJK@/I+J/Sd0PvTamqxNC2kS6w0LH(Gv6kzMYGIPl8yh:E6IGf5q],lMXQ#b[z]7MvUu$mnRQ?c%,[;d#enZ0bJwJ!#n^XONhlZVOC2%Svg%--hDjd;5%oa*47BYrsi.v^U8ljDK0#8+MvA24$Dbic%GPZraF}R(8*Q:9;XD8i{@iJDIIj0Kf@+2ih{}.m-_FP]56Y$6[Yy%76/Tr=ar]AHMO0uRx[Y?gQra.42eoF8z/tM9a=MBasU2eczaYTQ,xvvQ,hEMdit%cr{mzKPF4C#O^E-9k#/JLtF:b^MJk;QMHsFv8o,Zd9Q,#!h_e(%l/6^m*5x_Wzkzg5NdM=]r%81[8TWFX/O6(H_EQcN2.y6ionL6#[]BVQN3O@h?it58j2P{Dc1iHA3+sul2/#Kc?0g]o#?Cc+qU#;uA4LNU=c]-16*nAc7tXqBKcC}-(Oh6hH.WVr*OeQB1y#8th=oEZt)r36=.pRb-Zk=B3(n?X(!T.;457ACA}R.Jlvr[#rp0^tI+7x2eL5r1oDX7q9wHa(f?/}p,@ZGg#ZC{yxClzWc}JZYQwo-0@6Kpr4Z,z31iS5qgC_x;n)mVkO4CRrn6rC)ow.WvUwYRf*KPzP==E5[KkcwbeLp7_ylK{v,?UW?$iq1D8jDvNM$WlP[YTF-S(M-gf2p_:#D,tWr/9mE5C[/C9-iHqqvEI[=K.hPOb5X9QS(.d$5sKxv.ZHvZDDZ#ZoJ63p^p3gJulI/@:d^x$lV+?!_$SXPoJm{xhe%/EkfdviXL[CNVL?N$;:=-VfCvpB%^Zp82(oPrsZK(8ZnN5t}Cx)9jVjOVpT+JIIZhaU}uF*+e(.#[w1;y@ETOa2g2:4w!rSl?(?7;mMDEP-P*gXcLG4k4)=gPASMAlu!K-IB3z{DQOXxwjF2eAV]OVBO_PI-pIXHtOc5JWCX;.;=0JLtBX-lWBU$JwwY,)tOq2_r%%scmXv@X69;HIB3foA0nqF+LE-$l+qldzH=#Va[OMdfeZjW-qLk3bI9x^]?,$mI,.MLb.#lGOW.,}gF$7a{pe$=?jWRnrTcm%dTz#V_1BVd+Ta,WFVBa59lP_KiiIi.%UmphaYPTg+0?v;-i?NK}-Q$eXr.]N$:(JDF14;pr]R]zGp?qf/08Abhe:42POpwwnvt=opg7*%(MPkC[)9Fn]gfJt^GS!(?E:WX#Mt?]4J#X]C8Ki[io):sFc,[ND3^K=eT4Qm#eoJKT;.4SXt=G1PK@dS(Ks%H{IK_Enoujm+k?InZii@zUk$b6n*Yo)[4*eUDD[?R[}skXDk1)E[0gwrt=6}F.DCL#l*1ABWsgLZ(zxzNhbXI9({y0oL0n0o[3hPEI/Y{+rxGMxAfg1DcazkT]o*$2EJfBoCp,mJRLdB;YJmYWY]QBlyyQTJ4fJ{.!(B+_#xmKc4Ip]PB/)0I44BJ5;z7L#W.=p]{n0hJ{^NGNW)Sc4F+S$K:2cNviqh9r+NRnao+.^k_2F=d9w=!H%{$w{0%hPvrE]jHN*vZ:a+rYi@$h:;dXoI2AJp5=W_g(qdct3+RDGL_$cpYfPR2mhtaW!^lSjfOczu@6WQ.V4pBWui*Q8v]I*Vx{=6@nQ^h7F*ox18DHTltgOMcTMQg$ONCExMb!YEHPZ!N}IvuxjeLMSOawWNi_yl9][OZ?=vG[_KH=6bxCOOAK]S@$UZeXB5l(W;8Gu+rcWbP!=2b%Q(77#JZA0yX]W;mY_peEAH2O%-.1zEj++[tFL.NbVYA993_VlI#v2W#;FB.zvf}z*CQX70IRxt#K2RmwsNG4QOr#1NBj;EExjcjyd0KhPRNkPa/*e)vnIu8yDDY_;m0).dn%^fbWr:j:![5.?VlJ8uZ%MRu*A5]/p)G9_%FIV+WG9g)%).bZH3u1ptjp;G4C](6$nINQ-bhB]JeCpz.OM)+/j+Tzu$S{qz)VNk[G-_=f_yO]/HN@Fb!DI82fDf.I+,h=ffQK1Ik@D06%i:c_9S$gJ}gxK+;^M-!%N0:$]f(?zG[nCR1Q*t+;uE4CP8E4K9}-C:Vq8W2s.+i@)}}fQWzIQ/jT#ZY:aFWQdQrxls?D7d@X(ahk%DU4pps(8.^$o]ol_D?{!q_xCdb)*z0}L!a$${VHw(8A#?[4/A,r7%jXjZOeUvk@!,.d]3*}0gy^64o8e2a/^+xD==Bu}FkgsDbiD3/lZY}N+3tE,a]7S#UFf6eVn))#8i[td+[ckCh_*f*hf*6o5Ph}MzCn]dK6G#Q0@G=[INN]J@x$bSKZ)NG]:hyk-$7o^-hO%894w(E[hE0_Spz(:K/:a!cUQ(9YJaisUaG$}NfzsD2Vn.mB/7?8f%kHinhfByu3!s)n9KSDh;vJdq}6^K-T:HTg!UJ$^LqQ_a*Lo%!P1p/2_$c/Hj;](hYa[6!xMVmk8mcU6Ezuo-p3sDdO[q?9DY.1on^+1iT/jL.fnaQj2[HZCOtK5kuyp+L!FuYqN(_I4G+@T?LT8E^Q]iOG.$wkTWN%+f#R9#s^T,;QVY,?%i9myW?,;F@.iE3</monojunk160117.lua>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Ruzar (click 1st: load Scripts)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
if syntaxcheck==true then return '' end
--

-- common function
local Apack,Unpack = table.pack or pack,table.unpack or unpack
if loadTableFile == nil then
  local loaded = {}
  function getLoadedChunks(p)
    p = type(p)=='string' and {p} or p
    local r,c = {},0
    for i=1,#p do
      local v = loaded[p[i]]
      if v~=nil then
        r[p[i]]=v
        c = c + 1
      end
    end
    return c, r
  end
  function loadChunks(t)
    for i,m in ipairs(t) do
      loadTableFile(t[i],true)
    end
  end
  function loadTableFile(n,mode)
    local hdr = 'loadTableFile: '
    assert(type(n)=='string',hdr.."input should be a string -"..tostring(n).." of "..type(n))
    local m = assert(findTableFile(n),hdr.."can't find table file -"..n).Stream
    m = assert(readStringLocal(m.Memory,m.Size),hdr.."can't read content -"..n)
    if type(mode)~='boolean' then return m end
    m = assert(loadstring(m,n),hdr.."lua script load fail -"..n)
    if type(m)=='function' then loaded[n]=m end
    return mode and m() or m or nil
  end
end

local target= {"monojunk160117.lua","MRAA.lua"}

local skip_Print = AA_CHECK~=true and ( true )
-- suppress informative or warning message, not error throw

if getLoadedChunks(target)==0 then
  local original_print = _G['print']

  if skip_Print then _G['print'] = function()end end
  loadChunks(target)
  _G['print'] = original_print
end

Bit64 = targetIs64Bit() and 1 or 2

{$asm}

[ENABLE]

useDomain()

[DISABLE]

monoDetach()

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>225</ID>
          <Description>"Start Setup &amp; Tools (click 2nd: Global Storage)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//LuaRet(AddAssm('BBI.Game'))
globalalloc(__,$4000)
__:
dq __

__+08:
{$lua}
if getOpenedProcessID()==0 then
  return "db 0"
elseif targetIs64Bit() then
  autoAssemble("define(PSIZE,8)\nregistersymbol(PSIZE)")
  PSIZE = 8

  return "db 8\nMR(64,Color=0xff)\nMR(32,Color=0x00)"
else
  autoAssemble("define(PSIZE,4)\nregistersymbol(PSIZE)")
  PSIZE = 4
  return "db 4\nMR(32,Color=0xff)\nMR(64,Color=0x00)"
end
{$asm}

//__+2c:
//dd 1

//MR(32,Active = true)
//MR(64,Active = true)


[DISABLE]

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>250</ID>
      <Description>"32bit &gt;"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert(__+08,4)
[DISABLE]

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>237</ID>
          <Description>"rapid"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,rapid)
define(hack,spd)

[ENABLE]


Eval(spd,$GetMonoMethAddr('_PlayerHudControl','AddDelayToGuiTexture')) // static 1


alloc(rapid,$200,spd)
registersymbol(rapid)

//Eval(pwf,$GetMonoMethAddr('BBI.Game.Simulation.WeaponFireOperation','ProcessWeaponFire')) // static 3: 1-2-1
//Eval(ammo,$GetMonoMethAddr('BBI.Game.Simulation.WeaponFireOperation','set_HasLimitedAmmo'))
//Eval(plyr,$GetMonoMethAddr('BBI.Game.Simulation.SimController','get_LocalPlayerCommanderID')) // static 0

//Eval(cmdID,$GetMonoOffset('BBI.Game.Simulation.CommanderID','ID'))
//Eval(saet,$GetMonoMethAddr('BBI.Game.Simulation.WeaponsProcessor','ShowAttackingEntityToTarget'))



assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)



cave+80:
push  eax
mov   eax,[cave+70]
cmp   eax,(float)0.1
jge   @f
mov   eax,(float)4
@@:
cmp   eax,(float)16
jle   @f
mov   eax,(float)16
@@:
mov   [cave+70],eax
pop   eax

fld   dword ptr [esp+08]
fdiv  dword ptr [cave+70]
fstp  dword ptr [esp+08]

ReassembleEx(hack,_Len)
jmp   hack+_Len


hack:
jmp   cave+80

[DISABLE]

[cave+08]:
readmem(cave+20,24)


unregistersymbol(rapid)
dealloc(rapid)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>240</ID>
              <Description>"factor (larger atk faster)"</Description>
              <VariableType>Float</VariableType>
              <Address>rapid+70</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>278</ID>
          <Description>"attack use no missle amount if &gt;1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}

AMMO0 = GetMonoMethAddr('Attack','ShootMissile')
if AMMO0~=nil then
  AMMO1 = AMMO0 + 0x200
  AMMO2 = AMMO0 + 0x600
end
{$asm}

[ENABLE]

AOBScanRegion(aob1,$AMMO0,$AMMO1, 00 00 49 89)
AOBScanRegion(aob2,$AMMO1,$AMMO2, 00 00 49 89)


aob1+02:
db 90
aob2+02:
db 90

[DISABLE]

AOBScanRegion(aob1,$AMMO0,$AMMO1, 00 00 90 89)
AOBScanRegion(aob2,$AMMO1,$AMMO2, 00 00 90 89)


aob1+02:
db 49
aob2+02:
db 49

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>294</ID>
          <Description>"use no potion if &gt; 1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}

POTN0 = MONO 'PotionUse::PlayerUsedPotion'
if POTN0~=nil then
  POTN1 = POTN0 + 0x400
  POTN2 = POTN0 + 0x800
end
{$asm}

[ENABLE]

AOBScanRegion(aob1,$POTN0,$POTN1, 00 00 49 89)
AOBScanRegion(aob2,$POTN1,$POTN2, 00 00 49 89)


aob1+02:
db 90
aob2+02:
db 90

[DISABLE]

AOBScanRegion(aob1,$POTN0,$POTN1, 00 00 90 89)
AOBScanRegion(aob2,$POTN1,$POTN2, 00 00 90 89)


aob1+02:
db 49
aob2+02:
db 49

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>318</ID>
          <Description>"use no key if &gt; 1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}

KeyA1 = MONO 'Chest::CheckChestState'
KeyB1 = MONO 'Switch::CheckSwitchState'
if KeyA1~=nil and KeyB1~=nil then
  KeyA2 = KeyA1 + 0x300
  KeyB2 = KeyB1 + 0x400
end
{$asm}

[ENABLE]

AOBScanRegion(aob1,$KeyA1,$KeyA2, 00 00 49 89)
AOBScanRegion(aob2,$KeyB1,$KeyB2, 00 00 49 89)


aob1+02:
db 90
aob2+02:
db 90

[DISABLE]

AOBScanRegion(aob1,$KeyA1,$KeyA2, 00 00 90 89)
AOBScanRegion(aob2,$KeyB1,$KeyB2, 00 00 90 89)


aob1+02:
db 49
aob2+02:
db 49

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>279</ID>
          <Description>"use no mana"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>Eval(mana,$GetMonoMethAddr('Attack','RemoveMana'))

[ENABLE]
assert(mana,55)
mana:
db c3

[DISABLE]
mana:
db 55

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>283</ID>
          <Description>"item quality +"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,itmq)
define(hack,qual)
define(hac2,qjew)
[ENABLE]

Eval(qual,$MONO'SetQualityItem::Quality')
Eval(qjew,$MONO'SetQualityItem::QualityJewel')

//Eval(spd,$GetMonoMethAddr('_PlayerHudControl','AddDelayToGuiTexture')) // static 1


alloc(itmq,$200,qual)
registersymbol(itmq)


//Eval(pwf,$GetMonoMethAddr('BBI.Game.Simulation.WeaponFireOperation','ProcessWeaponFire')) // static 3: 1-2-1
//Eval(ammo,$GetMonoMethAddr('BBI.Game.Simulation.WeaponFireOperation','set_HasLimitedAmmo'))
//Eval(plyr,$GetMonoMethAddr('BBI.Game.Simulation.SimController','get_LocalPlayerCommanderID')) // static 0

//Eval(cmdID,$GetMonoOffset('BBI.Game.Simulation.CommanderID','ID'))
//Eval(saet,$GetMonoMethAddr('BBI.Game.Simulation.WeaponsProcessor','ShowAttackingEntityToTarget'))



assert(hack,55)

cave:
dq cave,hack,hac2

cave+20:
readmem(hack,24)

cave+40:
readmem(hac2,24)

cave+70:
dd 6

cave+80:
push  ebp
mov   ebp,esp
pushad

mov   eax,[cave+70]
test  eax,eax
jge   @f
mov   eax,4
@@:
cmp   eax,9
jle   @f
mov   eax,9
@@:
mov   [cave+70],eax

mov   eax,[ebp+0c] // 1st parameter
add   eax,[cave+70]
cmp   eax,9 // max quality
jle   @f
mov   eax,9
@@:
mov   [ebp+0c],eax

popad
pop   ebp
ret


cave+180:
call  cave+80
ReassembleEx(hack,_Len)
jmp   hack+_Len

cave+1c0:
call  cave+80
ReassembleEx(hac2,_Len2)
jmp   hac2+_Len2


hack:
jmp   cave+180

hac2:
jmp   cave+1c0

[DISABLE]

[cave+08]:
readmem(cave+20,24)
[cave+10]:
readmem(cave+40,24)


unregistersymbol(itmq)
dealloc(itmq)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>284</ID>
              <Description>"add amount, max 9 "</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>itmq+70</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>285</ID>
          <Description>"add WeightMax Bonus"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,wbonus)
define(hack,wbon)
[ENABLE]

Eval(wbon,$MONO'PlayerSkillsEffect::AddWeightBonus')

//Eval(spd,$GetMonoMethAddr('_PlayerHudControl','AddDelayToGuiTexture')) // static 1


alloc(wbonus,$200,wbon)
registersymbol(wbonus)


//Eval(pwf,$GetMonoMethAddr('BBI.Game.Simulation.WeaponFireOperation','ProcessWeaponFire')) // static 3: 1-2-1
//Eval(ammo,$GetMonoMethAddr('BBI.Game.Simulation.WeaponFireOperation','set_HasLimitedAmmo'))
//Eval(plyr,$GetMonoMethAddr('BBI.Game.Simulation.SimController','get_LocalPlayerCommanderID')) // static 0

//Eval(cmdID,$GetMonoOffset('BBI.Game.Simulation.CommanderID','ID'))
//Eval(saet,$GetMonoMethAddr('BBI.Game.Simulation.WeaponsProcessor','ShowAttackingEntityToTarget'))



assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)



cave+80:
pop   dword ptr [cave+7c]
push  @f
ReassembleEx(hack,_Len,,cave)
jmp   hack+_Len
@@:
push  dword ptr [cave+7c]

push  eax
mov   eax,[cave+70]
cmp   eax,(float)0.1
jg    @f
mov   eax,(float)50
@@:
cmp   eax,(float)999
jle   @f
mov   eax,(float)999
@@:
mov   [cave+70],eax
pop   eax

fadd  dword ptr [cave+70]

ret

hack:
jmp   cave+80

[DISABLE]

[cave+08]:
readmem(cave+20,24)


unregistersymbol(wbonus)
dealloc(wbonus)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>286</ID>
              <Description>"add amount"</Description>
              <VariableType>Float</VariableType>
              <Address>wbonus+70</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>280</ID>
          <Description>"ability bonus"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(cave,bonus)
define(hack,abi)

[ENABLE]


Eval(abi,$MONO'PlayerAttributes::RefreshAbilitiesModifiers')
//Eval(abi,$GetMonoMethAddr('PlayerAttributes','AbilityBonusValue'))


Eval(mStre,$MONO'PlayerAttributes:@_strengthModifier')
Eval(mCons,$MONO'PlayerAttributes:@_constitutionModifier')
Eval(mAgil,$MONO'PlayerAttributes:@_agilityModifier')
Eval(mEndu,$MONO'PlayerAttributes:@_enduranceModifier')
Eval(mInte,$MONO'PlayerAttributes:@_intelligenceModifier')
Eval(mSpir,$MONO'PlayerAttributes:@_spiritModifier')
Eval(mLuck,$MONO'PlayerAttributes:@_luckModifier')




{
Eval(sBase,$MONO'PlayerAttributes:@playerAbilities')
Eval(oAttrVal,$MONO'PlayerAttributes+BaseValues:=_attributeValue')
}
{
Eval(vStre,$MONO'PlayerAttributes:@_strength')
Eval(vCons,$MONO'PlayerAttributes:@_constitution')
Eval(vAgil,$MONO'PlayerAttributes:@_agility')
Eval(vEndu,$MONO'PlayerAttributes:@_endurance')
Eval(vInte,$MONO'PlayerAttributes:@_intelligence')
Eval(vSpir,$MONO'PlayerAttributes:@_spirit')
Eval(vLuck,$MONO'PlayerAttributes:@_luck')
}
{
MR(32/ability bonus/BASE,Address=sBase,Type=vtString)
MR(32/ability bonus/BASE/attrSTR,Address=+10,Type=vtSingle)
MR(32/ability bonus/BASE/attrCON,Address=+14,Type=vtSingle)
MR(32/ability bonus/BASE/attrAGI,Address=+18,Type=vtSingle)
MR(32/ability bonus/BASE/attrEND,Address=+1c,Type=vtSingle)
MR(32/ability bonus/BASE/attrINT,Address=+20,Type=vtSingle)
MR(32/ability bonus/BASE/attrSPR,Address=+24,Type=vtSingle)
MR(32/ability bonus/BASE/attrLCK,Address=+28,Type=vtSingle)
}
alloc(bonus,$200,abi)
registersymbol(bonus)

//Eval(pwf,$GetMonoMethAddr('BBI.Game.Simulation.WeaponFireOperation','ProcessWeaponFire')) // static 3: 1-2-1
//Eval(ammo,$GetMonoMethAddr('BBI.Game.Simulation.WeaponFireOperation','set_HasLimitedAmmo'))
//Eval(plyr,$GetMonoMethAddr('BBI.Game.Simulation.SimController','get_LocalPlayerCommanderID')) // static 0

//Eval(cmdID,$GetMonoOffset('BBI.Game.Simulation.CommanderID','ID'))
//Eval(saet,$GetMonoMethAddr('BBI.Game.Simulation.WeaponsProcessor','ShowAttackingEntityToTarget'))



assert(hack,55)

cave:
dq cave,hack

cave+20:
readmem(hack,24)


cave+78:
dd (float)0.75

cave+80:
pop   dword ptr [cave+7c]
push  @f
ReassembleEx(hack,_Len)
jmp   hack+_Len
@@:
push  dword ptr [cave+7c]

push  eax
push  edi

mov   eax,[cave+70]
cmp   eax,(float)0.1
jge   @f
mov   eax,(float)0.5
@@:
cmp   eax,(float)10
jle   @f
mov   eax,(float)10
@@:
mov   [cave+70],eax


fld   dword ptr [mAgil]  // special, only mul by 0.75
fmul  dword ptr [cave+78]// smaller faster for agil
fstp  dword ptr [mAgil]


fld   dword ptr [mStre]
fadd  dword ptr [cave+70]
fstp  dword ptr [mStre]

fld   dword ptr [mCons]
fadd  dword ptr [cave+70]
fstp  dword ptr [mCons]

fld   dword ptr [mEndu]
fadd  dword ptr [cave+70]
fstp  dword ptr [mEndu]

fld   dword ptr [mInte]
fadd  dword ptr [cave+70]
fstp  dword ptr [mInte]

fld   dword ptr [mSpir]
fadd  dword ptr [cave+70]
fstp  dword ptr [mSpir]

fld   dword ptr [mLuck]   // more luck adder;)
fadd  dword ptr [cave+70]
fadd  dword ptr [cave+70]
fadd  dword ptr [cave+70]
fstp  dword ptr [mLuck]

pop   edi
pop   eax
ret


hack:
jmp   cave+80

[DISABLE]

[cave+08]:
readmem(cave+20,24)


unregistersymbol(bonus)
dealloc(bonus)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>281</ID>
              <Description>"add  (0.5 = +50%)"</Description>
              <VariableType>Float</VariableType>
              <Address>bonus+70</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>304</ID>
          <Description>"Some Static Value"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]


Eval(money,$MONO'PlayerAttributes:@_moneyTotal')
Eval(curxp,$MONO'PlayerAttributes:@currentXP')
Eval(abpts,$MONO'PlayerAttributes:@abilityPoints')
Eval(skpts,$MONO'PlayerAttributes:@skillTreePoints')
Eval(minlv,$MONO'PlayerAttributes:@minLevelForSkillPts')

MR(32/Some/minLevelForSkillPts,Address=minlv,Type=vtDword)
MR(32/Some/moneyTotal,Address=money,Type=vtDword)
MR(32/Some/currentXP,Address=curxp,Type=vtDword)
MR(32/Some/abilityPoints,Address=abpts,Type=vtDword)
MR(32/Some/skillTreePoints,Address=skpts,Type=vtDword)

[DISABLE]

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>312</ID>
              <Description>"moneyTotal"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>015C45EC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>313</ID>
              <Description>"currentXP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>015C4610</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>315</ID>
              <Description>"abilityPoints"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>015C4620</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>316</ID>
              <Description>"skillTreePoints"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>015C4624</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>317</ID>
              <Description>"minLevelForSkillPts"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>015C461C</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>262</ID>
      <Description>"64bit &gt; (empty)"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
assert(__+08,8)
[DISABLE]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="Missile" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="140" Vartype="Pointer" Bytesize="4" Customtype="" Description="playArrowSound" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="144" Vartype="Pointer" Bytesize="4" Customtype="" Description="_target" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="148" Vartype="Pointer" Bytesize="4" Customtype="" Description="random" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="152" Vartype="Pointer" Bytesize="4" Customtype="" Description="effect" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="156" Vartype="Pointer" Bytesize="4" Customtype="" Description="parent" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="160" Vartype="Pointer" Bytesize="4" Customtype="" Description="spellNameEffect" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="164" Vartype="Pointer" Bytesize="4" Customtype="" Description="spellEffectImpact" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="168" Vartype="Pointer" Bytesize="4" Customtype="" Description="spellStartSound" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="172" Vartype="Pointer" Bytesize="4" Customtype="" Description="spellLoopSound" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="176" Vartype="Pointer" Bytesize="4" Customtype="" Description="spellEffect" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="180" Vartype="Pointer" Bytesize="4" Customtype="" Description="spellImpact" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="184" Vartype="Pointer" Bytesize="4" Customtype="" Description="audioImpact" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="188" Vartype="Pointer" Bytesize="4" Customtype="" Description="arrowEffect" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="192" Vartype="Pointer" Bytesize="4" Customtype="" Description="arrowGO" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="196" Vartype="Pointer" Bytesize="4" Customtype="" Description="javellinGO" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="200" Vartype="Pointer" Bytesize="4" Customtype="" Description="axe" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="204" Vartype="Pointer" Bytesize="4" Customtype="" Description="dagger" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="208" Vartype="Pointer" Bytesize="4" Customtype="" Description="_myTransform" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="212" Vartype="Pointer" Bytesize="4" Customtype="" Description="projectileWeaponUsedInfo" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="216" Vartype="Pointer" Bytesize="4" Customtype="" Description="projectileInfo" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="220" Vartype="Pointer" Bytesize="4" Customtype="" Description="arrowEffect_Fire" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="224" Vartype="Pointer" Bytesize="4" Customtype="" Description="arrowEffect_Frost" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="228" Vartype="Pointer" Bytesize="4" Customtype="" Description="arrowEffect_Poison" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="232" Vartype="Pointer" Bytesize="4" Customtype="" Description="spellAtt" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="236" Vartype="Pointer" Bytesize="4" Customtype="" Description="levelDot" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="240" Vartype="Pointer" Bytesize="4" Customtype="" Description="pP" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="244" Vartype="Pointer" Bytesize="4" Customtype="" Description="pressurePlateReference" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="248" Vartype="Pointer" Bytesize="4" Customtype="" Description="cA" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="252" Vartype="Pointer" Bytesize="4" Customtype="" Description="creatureReference" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="256" Vartype="Pointer" Bytesize="4" Customtype="" Description="spellPrefab" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="260" Vartype="Pointer" Bytesize="4" Customtype="" Description="audioManager2" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="264" Vartype="4 Bytes" Bytesize="4" Customtype="" Description="missileType" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="268" Vartype="Float" Bytesize="4" Customtype="" Description="damageTrap" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="272" Vartype="Float" Bytesize="4" Customtype="" Description="damageLevel" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="276" Vartype="Float" Bytesize="4" Customtype="" Description="dmg" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="280" Vartype="Float" Bytesize="4" Customtype="" Description="dmgWeapon" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="284" Vartype="Float" Bytesize="4" Customtype="" Description="dmgTotal" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="288" Vartype="4 Bytes" Bytesize="4" Customtype="" Description="spawnPosition" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="300" Vartype="Byte" Bytesize="1" Customtype="" Description="isAreaEffect" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="304" Vartype="4 Bytes" Bytesize="4" Customtype="" Description="spellId" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="308" Vartype="Byte" Bytesize="1" Customtype="" Description="isMissileDagger" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="312" Vartype="Float" Bytesize="4" Customtype="" Description="lightRange" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="316" Vartype="Float" Bytesize="4" Customtype="" Description="lightIntensity" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="320" Vartype="Float" Bytesize="4" Customtype="" Description="spellIntLevelBonus" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="324" Vartype="Float" Bytesize="4" Customtype="" Description="creatureSpellIntLevelBonus" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
      </Elements>
    </Structure>
  </Structures>
  <LuaScript>
</LuaScript>
</CheatTable>
