<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>15</ID>
      <Description>"1 Hit Kill"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
alloc(1hitkill,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(1hit)
registersymbol(1hit)
aobscan(1hitaob,29 93 44 03 00 00 0f 57 c0 f3 0f 10 4d 10)

1hitkill: //this is allocated memory, you have read,write,execute access
//place your code here
popfd
mov [ebx+00000344],(int)0

jmp exit

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp [ebx+0000002C],0
jne 1hitkill
popfd

originalcode:
sub [ebx+00000344],edx

exit:
jmp returnhere

1hitaob:
1hit:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(1hitkill)
1hit:
sub [ebx+00000344],edx
//Alt: db 29 93 44 03 00 00
unregistersymbol(1hit)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Godmode"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(godmode)
registersymbol(godmode)
aobscan(godmodeaob,8b 8e 44 03 00 00 57 3b c1)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+00000344],(int)1000000

originalcode:
mov ecx,[esi+00000344]

exit:
jmp returnhere

godmodeaob:
godmode:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
godmode:
mov ecx,[esi+00000344]
//Alt: db 8B 8E 44 03 00 00
unregistersymbol(godmode)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>88</ID>
      <Description>"Infinite Mana"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(mana)
registersymbol(mana)
aobscan(manaaob,89 86 60 0a 00 00 8b 01)

newmem:
mov [esi+00000A60],(int)100

originalcode:
//mov [esi+00000A60],eax

exit:
jmp returnhere

manaaob:
mana:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Dishonored.exe"+6A7608:
mov [esi+00000A60],eax
//Alt: db 89 86 60 0A 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Infinite Breath"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(breath)
registersymbol(breath)
aobscan(breathaob,0f 2f ca f3 0f 11 86 b0 0a 00 00)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
comiss xmm1,xmm2
movss [esi+00000AB0],xmm0
mov [esi+00000AB0],(float)30

exit:
jmp returnhere

breathaob:
breath:
jmp newmem
nop
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
breath:
comiss xmm1,xmm2
movss [esi+00000AB0],xmm0
//Alt: db 0F 2F CA F3 0F 11 86 B0 0A 00 00
unregistersymbol(breath)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Add 1K Gold/Runes"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(addgold)
registersymbol(addgold)
aobscan(addgoldaob,8b 43 04 8a 4d 08 89 75 d8 8b 33)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add [ebx+04],(int)1000

originalcode:
mov eax,[ebx+04]
mov cl,[ebp+08]

exit:
jmp returnhere

addgoldaob:
addgold:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addgold:
mov eax,[ebx+04]
mov cl,[ebp+08]
//Alt: db 8B 43 04 8A 4D 08
unregistersymbol(addgold)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Ammo 255"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(ammo)
registersymbol(ammo)
aobscan(ammoaob,8b 00 2b 86 24 01 00 00 5e c3 cc cc cc)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [eax],(int)255

originalcode:
mov eax,[eax]
sub eax,[esi+00000124]

exit:
jmp returnhere

ammoaob:
ammo:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammo:
mov eax,[eax]
sub eax,[esi+00000124]
//Alt: db 8B 00 2B 86 24 01 00 00
unregistersymbol(ammo)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"No Reload"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(noreload)
registersymbol(noreload)
aobscan(noreloadaob,83 be 24 01 00 00 00 7e ** 57)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+00000124],(int)1

originalcode:
cmp dword ptr [esi+00000124],00

exit:
jmp returnhere

noreloadaob:
noreload:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
noreload:
cmp dword ptr [esi+00000124],00
//Alt: db 83 BE 24 01 00 00 00
unregistersymbol(noreload)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>64</ID>
      <Description>"Instant Blink"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(notimer)
registersymbol(notimer)
aobscan(notimeraob,f3 0f 11 86 38 01 00 00 89 86 a0 00 00 00)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss [esi+00000138],xmm0
mov [esi+00000138],(float)1

exit:
jmp returnhere

notimeraob:
notimer:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
notimer:
movss [esi+00000138],xmm0
//Alt: db F3 0F 11 86 38 01 00 00
unregistersymbol(notimer)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>68</ID>
      <Description>"Enemies Ignore You"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(stealth)
registersymbol(stealth)
aobscan(stealthaob,0f b6 81 ac 00 00 00 c3 cc cc cc)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ecx+000000AC],(int)0

originalcode:
movzx eax,byte ptr [ecx+000000AC]

exit:
jmp returnhere

stealthaob:
stealth:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
stealth:
movzx eax,byte ptr [ecx+000000AC]
//Alt: db 0F B6 81 AC 00 00 00
unregistersymbol(stealth)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>70</ID>
      <Description>"Infinite Possession"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(possession)
registersymbol(possession)
aobscan(possessionaob,f3 0f 11 86 94 00 00 00 0f 57 c0)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss [esi+00000094],xmm0
mov [esi+00000094],(float)15

exit:
jmp returnhere

possessionaob:
possession:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
possession:
movss [esi+00000094],xmm0
//Alt: db F3 0F 11 86 94 00 00 00
unregistersymbol(stealth)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>73</ID>
      <Description>"Infinite Dark Vision"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(vision)
registersymbol(vision)
aobscan(visionaob,d9 1c 24 f3 0f 11 83 94 00 00 00)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fstp dword ptr [esp]
movss [ebx+00000094],xmm0
mov [ebx+00000094],(float)30

exit:
jmp returnhere

visionaob:
vision:
jmp newmem
nop
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
vision:
fstp dword ptr [esp]
movss [ebx+00000094],xmm0
//Alt: db D9 1C 24 F3 0F 11 83 94 00 00 00
unregistersymbol(vision)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>71</ID>
      <Description>"Stop Time"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(gamespeedAOB_jmp)
registersymbol(gamespeedAOB_jmp)
aobscan(gamespeedAOB,D9 45 18 F3 0F 11 41 14)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx+14],(float)0.0
jle exit
mov [ecx+14],(float)0.0

originalcode:
movss [ecx+14],xmm0

exit:
jmp returnhere

gamespeedAOB+3:
gamespeedAOB_jmp:
jmp newmem
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
gamespeedAOB_jmp:
movss [ecx+14],xmm0
unregistersymbol(gamespeedAOB_jmp)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>56</ID>
      <Description>"Store Position = R"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
alloc(storeposition,2048) //2kb should be enough
alloc(playerxyz,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(storecoords)
registersymbol(playerxyz)
registersymbol(storecoords)
aobscan(storecoordsaob,f3 0f 10 98 c4 00 00 00 83 ec 08)

storeposition: //this is allocated memory, you have read,write,execute access
//place your code here
popfd
push esi
mov esi,[eax+000000C4]
mov [playerxyz],esi
mov esi,[eax+000000C8]
mov [playerxyz+4],esi
mov esi,[eax+000000CC]
mov [playerxyz+8],esi
pop esi
movss xmm3,[eax+000000C4]

jmp exit

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
pushad
push 'R'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je storeposition
popfd

originalcode:
movss xmm3,[eax+000000C4]

exit:
jmp returnhere

storecoordsaob:
storecoords:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(storeposition)
dealloc(playerxyz)
storecoords:
movss xmm3,[eax+000000C4]
//Alt: db F3 0F 10 98 C4 00 00 00
unregistersymbol(storecoords)
unregistersymbol(playerxyz)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>57</ID>
          <Description>"X"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>playerxyz</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"Y"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>playerxyz+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"Z"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>playerxyz+8</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>61</ID>
      <Description>"Teleport = T"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
alloc(telethere,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(teleport)
registersymbol(teleport)
aobscan(teleportaob,f3 0f 10 80 c4 00 00 00 05 c4 00 00 00 f3 0f 11 45 f4 f3 0f 10 40 04 8d 45 f4)

telethere: //this is allocated memory, you have read,write,execute access
//place your code here
popfd
push esi
mov esi,[playerxyz]
mov [eax+000000C4],esi
mov esi,[playerxyz+4]
mov [eax+000000C8],esi
mov esi,[playerxyz+8]
mov [eax+000000CC],esi
pop esi
movss xmm0,[eax+000000C4]

jmp exit

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
pushad
push 'T'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je telethere
popfd

originalcode:
movss xmm0,[eax+000000C4]

exit:
jmp returnhere

teleportaob:
teleport:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(telethere)
teleport:
movss xmm0,[eax+000000C4]
//Alt: db F3 0F 10 80 C4 00 00 00
unregistersymbol(teleport)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>83</ID>
      <Description>"Script: Speed Multiplier"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(bytes,F3 0F 10 8E 8C 05 00 00)
//define(address,"Dishonored.exe"+74A992)

[ENABLE]
aobscan(address,bytes)
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: // this is allocated memory, you have read,write,execute access
label(SPEED_MULTIPLIER)
registersymbol(SPEED_MULTIPLIER)
SPEED_MULTIPLIER:
  dd (float)3.0
  dd 0 // ratio
  dd 0 // result

label(code)
code:
  push eax
  mov eax,[ebp-4]
  mov [SPEED_MULTIPLIER+4],eax
  pop eax
  fst [SPEED_MULTIPLIER+8]
  fmul [SPEED_MULTIPLIER]
  movss xmm1,[esi+0000058C]

originalcode:
//  movss xmm1,[esi+0000058C]

exit:
  jmp returnhere

address:
label(I_MovementSpeed)
registersymbol(I_MovementSpeed)
I_MovementSpeed:
  jmp code
  nop
  nop
  nop
returnhere:

[DISABLE]
I_MovementSpeed:
  db bytes

unregistersymbol(SPEED_MULTIPLIER)
unregistersymbol(I_MovementSpeed)

{
Dishonored.exe+74A975 - 8D 8E A8040000        - lea ecx,[esi+000004A8]
Dishonored.exe+74A97B - E8 406A1200           - call Dishonored.exe+8713C0 // get speed ratio
Dishonored.exe+74A980 - D9 5D FC              - fstp dword ptr [ebp-04]
Dishonored.exe+74A983 - 8B 06                 - mov eax,[esi]
Dishonored.exe+74A985 - 8B 90 A4050000        - mov edx,[eax+000005A4]
Dishonored.exe+74A98B - 8B CE                 - mov ecx,esi
Dishonored.exe+74A98D - FF D2                 - call edx // get player normal speed (0.90)
Dishonored.exe+74A98F - D8 4D FC              - fmul dword ptr [ebp-04]

// [ebp-04] had the speed ratio:
//    0.50 - stealthed AND strafing
//    0.6875 - stealthed (forward/backward)
//    0.70 - strafing
//    0.80 - moving backwards
//    1.00 - normal
//    1.95 - sprinting
// st(0) had the normal char speed (0.90), from the function I think
// what we do is just multiply the result by the [CHEAT_SPEED]
Dishonored.exe+74A992 - F3 0F10 8E 8C050000   - movss xmm1,[esi+0000058C]
Dishonored.exe+74A99A - F3 0F11 4D F8         - movss [ebp-08],xmm1
Dishonored.exe+74A99F - D9 55 FC              - fst dword ptr [ebp-04]
Dishonored.exe+74A9A2 - F3 0F10 45 FC         - movss xmm0,[ebp-04]
Dishonored.exe+74A9A7 - 0F2F C8               - comiss xmm1,xmm0
Dishonored.exe+74A9AA - 76 6F                 - jna I_Speed2
Dishonored.exe+74A9AC - D9 45 F8              - fld dword ptr [ebp-08]
Dishonored.exe+74A9AF - D8E1                  - fsub st(0),st(1)
Dishonored.exe+74A9B1 - DD 05 C8D3F300        - fld qword ptr [Dishonored.exe+B3D3C8]
Dishonored.exe+74A9B7 - D9C9                  - fxch st(1)
Dishonored.exe+74A9B9 - DFF1                  - fcomip st(0),st(1)
Dishonored.exe+74A9BB - DDD8                  - fstp st(0)

}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>84</ID>
          <Description>"SPEED_MULTIPLIER"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>SPEED_MULTIPLIER</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>86</ID>
          <Description>"(debug) - multipler"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>SPEED_MULTIPLIER+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>85</ID>
          <Description>"(debug) original calculated value"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>SPEED_MULTIPLIER+8</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov [esi+00000A60],eax</Description>
      <Address>00AA7608</Address>
      <ModuleName>Dishonored.exe</ModuleName>
      <ModuleNameOffset>6A7608</ModuleNameOffset>
      <Before>
        <Byte>8E</Byte>
        <Byte>BC</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>60</Byte>
        <Byte>0A</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>01</Byte>
        <Byte>8B</Byte>
        <Byte>50</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>new mana</Description>
      <Address>00AB1815</Address>
      <ModuleName>Dishonored.exe</ModuleName>
      <ModuleNameOffset>6B1815</ModuleNameOffset>
      <Before>
        <Byte>8E</Byte>
        <Byte>68</Byte>
        <Byte>0A</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>60</Byte>
        <Byte>0A</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>C1</Byte>
        <Byte>74</Byte>
        <Byte>5C</Byte>
        <Byte>33</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [esi+00000A60],eax</Description>
      <Address>00AA7608</Address>
      <ModuleName>Dishonored.exe</ModuleName>
      <ModuleNameOffset>6A7608</ModuleNameOffset>
      <Before>
        <Byte>8E</Byte>
        <Byte>BC</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>60</Byte>
        <Byte>0A</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>01</Byte>
        <Byte>8B</Byte>
        <Byte>50</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>teleport</Name>
      <Address>00A9ADB6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>1hit</Name>
      <Address>00581529</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>breath</Name>
      <Address>00AB29A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>addgold</Name>
      <Address>00BBED13</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo</Name>
      <Address>00C06C73</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>noreload</Name>
      <Address>00C06CE2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>possession</Name>
      <Address>00BE4C0B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>godmode</Name>
      <Address>00AAD86E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>notimer</Name>
      <Address>00BE5E0E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stoptime</Name>
      <Address>009FB201</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SPEED_MULTIPLIER</Name>
      <Address>14800000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>I_MovementSpeed</Name>
      <Address>00B4A992</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mana</Name>
      <Address>00AA7608</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
