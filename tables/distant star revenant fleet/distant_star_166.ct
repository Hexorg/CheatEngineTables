<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>103812</ID>
      <Description>"&lt;---------- README ----------&gt; (double-click &lt;script&gt; --&gt;)"</Description>
      <LastState Activated="0"/>
      <Color>FF00FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{==============================================================================
 = R E A D M E
 ==============================================================================

 Cheat table written by jgoemat for Steam version as of 2015-04-11.

 Activate the "Global Script" and it will expand to show you other scripts.
 Since Distant Star: Revenant Fleet is a mono game, you will need to wait until
 you start at least one mission to activate most of the scripts.  Enable the
 cheats that you want and relax.

 CHEATs:
   Credits - 1,000,000 credits
   Fuel - 1,000 fuel
   Full Shields - Player ships always have full shields
   Full Armor - Player ships always have full armor
   Full Energy - Player ships always have full energy
  *Player Fast - Player ships are much faster
   Player No Cooldown - Attachments have a VERY short cooldown
  *Player Long Range Sonar - See enemies anywhere on the map
   Enemy No Shields - Keeps enemy shields down
   Enemy Low Armor - Lets enemies have a max of 1 bar of health
   Enemy No Energy - Keeps enemies from having energy
  *Enemy Slow - Brings them to a crawl
   Enemy No Fire - Keeps them from firing most weapons
   Enemy No Ability - Keeps them from using most abilities
  *Enemy Short Range Sonar - SHOULD make them not see you, probably doesn't work


  NOTES:
    Marked cheats affect values so they cannot be undone until you jump
    Player Fast can cause problems with obstacles sometimes
    Enemy Short Range Sonar doesn't seem to have an effect
    Player Long Range Sonar - Shows you ships, but fixes size of displayed area
      on the minimap to be smaller or else it would extend past the minimap and
      block part of the screen.  If you disable the Minimap script you can see
      it, that is all that script does.

}

[ENABLE]
[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>103800</ID>
      <Description>"&lt;----- Global Script - ENABLE ME"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

globalalloc(globals,$100000)

globals:

label(cheatFullShields)
label(cheatFullArmor)
label(cheatFullEnergy)
label(cheatEnemyNoShields)
label(cheatEnemyLowArmor)
label(cheatEnemyNoEnergy)
label(cheatPlayerFast)
label(cheatEnemySlow)
label(cheatEnemyNoFire)
label(cheatPlayerFastFire)
label(cheatEnemyNoAbility)
label(cheatPlayerNoCooldown)
label(cheatCredits)
label(cheatFuel)
label(cheatPlayerSonar)
label(cheatEnemySonar)
label(pCurrentGame)

registersymbol(cheatFullShields)
registersymbol(cheatFullArmor)
registersymbol(cheatFullEnergy)
registersymbol(cheatEnemyNoShields)
registersymbol(cheatEnemyLowArmor)
registersymbol(cheatEnemyNoEnergy)
registersymbol(cheatPlayerFast)
registersymbol(cheatEnemySlow)
registersymbol(cheatEnemyNoFire)
registersymbol(cheatPlayerFastFire)
registersymbol(cheatEnemyNoAbility)
registersymbol(cheatPlayerNoCooldown)
registersymbol(cheatCredits)
registersymbol(cheatFuel)
registersymbol(cheatPlayerSonar)
registersymbol(cheatEnemySonar)
registersymbol(pCurrentGame)

cheatFullShields:
  dd 0
cheatFullArmor:
  dd 0
cheatFullEnergy:
  dd 0
cheatEnemyNoShields:
  dd 0
cheatEnemyLowArmor:
  dd 0
cheatEnemyNoEnergy:
  dd 0
cheatPlayerFast:
  dd 0
cheatEnemySlow:
  dd 0
cheatEnemyNoFire:
  dd 0
cheatPlayerFastFire:
  dd 0
cheatEnemyNoAbility:
  dd 0
cheatPlayerNoCooldown:
  dd 0
cheatCredits:
  dd 0
cheatFuel:
  dd 0
cheatPlayerSonar:
  dd 0
cheatEnemySonar:
  dd 0

pCurrentGame:
  dd 0

{------------------------------------------------------------------------------
 - GetFaction(pShip) - helper function
 - Call with ecx as ship pointer, return value in eax
 - Return (EAX):
 - -1: Enemy
 -  0: Unknown
 -  1: Friendly, but not player controlled
 -  3: Player Contnrolled (so bit 0 '1' can mean all friendlies, bit 1 '2' means player controlled
 ------------------------------------------------------------------------------}
{
globals+100:
label(GetFaction)
registersymbol(GetFaction)
label(gf_player)
label(gf_friendly)
label(gf_unknown)
label(gf_enemy)
label(gf_done)
GetFaction: // ship ptr in ecx, result in eax - 0 == unknown, 1 == player, -1 == enemy
  test ecx,ecx
  jz gf_unknown // ship pointer not set, return
  cmp [ecx+a4],0 // bpc - brain player controlled always player
  jne gf_player
  mov eax,[ecx+9c] // faction
  test eax,eax
  jz gf_unknown
  mov eax,[eax+94] // isFriendly
  test eax,1
  jnz gf_friendly
  mov eax,[ecx+9c] // faction
  mov eax,[eax+60] // hudTargetPriorityPrefab - set only for enemies
  test eax,eax
  jnz gf_enemy
  jmp gf_unknown
gf_player:
  mov eax,00000003
  jmp gf_done
gf_friendly:
  mov eax,00000001
  jmp gf_done
gf_unknown:
  xor eax,eax
  jmp gf_done
gf_enemy:
  mov eax,ffffffff
  jmp gf_done
gf_done:
  ret
}

globals+200:
label(GetFaction)
registersymbol(GetFaction)
label(gf_player)
label(gf_friendly)
label(gf_unknown)
label(gf_enemy)
label(gf_done)
GetFaction: // ship ptr in ecx, result in eax - 0 == unknown, 1 == player, -1 == enemy
  test ecx,ecx
  jz gf_unknown // ship pointer not set, return
  mov eax,[ecx+13C] // factionAlignment
  test eax,eax
  jz gf_player
  cmp eax,1
  je gf_enemy
  cmp eax,2
  je gf_friendly
  jmp gf_unknown
gf_player:
  mov eax,00000003
  jmp gf_done
gf_friendly:
  mov eax,00000001
  jmp gf_done
gf_unknown:
  xor eax,eax
  jmp gf_done
gf_enemy:
  mov eax,ffffffff
  jmp gf_done
gf_done:
  ret

[DISABLE]

unregistersymbol(cheatFullShields)
unregistersymbol(cheatFullArmor)
unregistersymbol(cheatFullEnergy)
unregistersymbol(cheatEnemyNoShields)
unregistersymbol(cheatEnemyLowArmor)
unregistersymbol(cheatEnemyNoEnergy)
unregistersymbol(cheatPlayerFast)
unregistersymbol(cheatEnemySlow)
unregistersymbol(cheatEnemyNoFire)
unregistersymbol(cheatPlayerFastFire)
unregistersymbol(cheatEnemyNoAbility)
unregistersymbol(cheatPlayerNoCooldown)
unregistersymbol(cheatCredits)
unregistersymbol(cheatFuel)
unregistersymbol(cheatPlayerSonar)
unregistersymbol(cheatEnemySonar)
unregistersymbol(pCurrentGame)

unregistersymbol(GetFaction)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>103801</ID>
          <Description>"SCRIPT: WeaponBase:Update()"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Distant Star.exe
  Version: 
  Date   : 2015-04-11
  Author : jgoemat

  This injection is in WeaponBase:Update which I hope gets called for all
  weapons to let us affect things like time to next shot.
}

[ENABLE]

aobscan(wu_inject,8B 80 9C 00 00 00 83 EC 08 6A 00 50 E8 01) // should be unique
alloc(newmem,$1000)


newmem:

label(wu_code)
label(wu_is_player)
label(wu_is_enemy)
label(wu_done)
label(wu_return)

wu_code:
  pushad
  mov ecx,[edi+60]
  call GetFaction
  test eax,eax
  jz wu_done // not sure
  js wu_is_enemy // it's an enemy ship
  test eax,2
  jnz wu_is_player // player controlled
  jmp wu_done

// it's a player-controlled ship, lower delay until next shot
wu_is_player:
  cmp dword ptr [cheatPlayerFastFire],1
  jne wu_done
  mov eax,(float)0.1 // 10 shots/second
  cmp eax,[edi+7c]
  jg wu_done
  mov [edi+7c],eax
  jmp wu_done

// it's an enemy ship, don't let it fire!
wu_is_enemy:
  cmp dword ptr [cheatEnemyNoFire],1
  jne wu_done
  mov eax,(float)5.0 // always 5 seconds to next shot
  cmp eax,[edi+7c]
  jl wu_done
  mov [edi+7c],eax
  jmp wu_done

wu_done:
  popad
  mov eax,[eax+0000009C]
  jmp wu_return

wu_inject:
  jmp wu_code
  nop
wu_return:
registersymbol(wu_inject)

[DISABLE]

wu_inject:
  db 8B 80 9C 00 00 00

unregistersymbol(wu_inject)
dealloc(newmem)

{
// wu_inject: WeaponBase:Update+e
// ORIGINAL CODE - INJECTION POINT: 10A1D42E
10A1D414: 68 48 9B D0 0B     -  push 0BD09B48
10A1D419: E9 0A 2C 64 F4     -  jmp 05060028
10A1D41E: 00 00              -  add [eax],al
10A1D420: 55                 -  push ebp
10A1D421: 8B EC              -  mov ebp,esp
10A1D423: 53                 -  push ebx
10A1D424: 57                 -  push edi
10A1D425: 83 EC 20           -  sub esp,20
10A1D428: 8B 7D 08           -  mov edi,[ebp+08]
10A1D42B: 8B 47 60           -  mov eax,[edi+60]
// ---------- INJECTING HERE ----------
10A1D42E: 8B 80 9C 00 00 00  -  mov eax,[eax+0000009C] // localDelta (basically time of current frame I think)
// ---------- DONE INJECTING  ----------
10A1D434: 83 EC 08           -  sub esp,08
10A1D437: 6A 00              -  push 00
10A1D439: 50                 -  push eax
10A1D43A: E8 01 61 EA F4     -  call UnityEngine:Object:op_Equality
10A1D43F: 83 C4 10           -  add esp,10
10A1D442: 85 C0              -  test eax,eax
10A1D444: 0F 85 A5 01 00 00  -  jne WeaponBase:Update+1cf
10A1D44A: E8 A9 32 F7 F4     -  call UnityEngine:Time:get_timeScale
10A1D44F: D9 EE              -  fldz 
10A1D451: DF F1              -  fcomip st(0),st(1)
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103802</ID>
          <Description>"SCRIPT: Ship:Update()"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Distant Star.exe
  Version: 
  Date   : 2015-04-11
  Author : jgoemat

  This injection is early in Ship:Update and will handle lots of ship-related
  cheats including shields, armor, speed and more.
}

[ENABLE]

aobscan(su_inject,0F B6 87 91 01 00 00 85 C0 0F 85) // should be unique
alloc(newmem,$1000)

newmem:

{------------------------------------------------------------------------------
 - su_inject - in Ship:Update()
 - edi is pointer to "Ship" type
 ------------------------------------------------------------------------------}
label(su_code)
label(su_is_player)
label(su_p_skip_shields)
label(su_p_skip_armor)
label(su_p_skip_fast)
label(su_p_skip_energy)
label(su_p_skip_sonar)
label(su_is_friendly)
label(su_is_enemy)
label(su_e_skip_shields)
label(su_e_skip_armor)
label(su_e_skip_slow)
label(su_e_slow1)
label(su_e_slow2)
label(su_e_slow3)
label(su_e_skip_energy)
label(su_e_skip_sonar)
label(su_done)
label(su_return)

su_code:
  pushad
  // edi is pointer to Ship
  mov ecx,edi
  call GetFaction
  test eax,eax
  js su_is_enemy
  jz su_done // if we don't know, don't do anything
  test eax,2
  jnz su_is_player // player controlled

  //---------------------------------------------------------------------------
  // must be player-controlled
su_is_player:
  cmp dword ptr [cheatFullShields],1
  jne su_p_skip_shields
  mov esi,[edi+b8] // shipShields "ShieldScript" type
  test esi,esi
  jz su_p_skip_shields
  mov eax,[esi+70]
  mov [esi+74],eax
su_p_skip_shields:
  cmp dword ptr [cheatFullArmor],1
  jne su_p_skip_armor
  mov esi,[edi+bc] // shipArmor "ArmourScript" type
  test esi,esi
  jz su_p_skip_armor
  mov ecx,[esi+58]
  mov eax,[ecx+70]
  mov [ecx+74],eax
su_p_skip_armor:
  cmp dword ptr [cheatPlayerFast],1
  jne su_p_skip_fast
  mov esi,[edi+80] // dynamics "ShipDynamics" type
  test esi,esi
  jz su_p_skip_fast
  mov eax,(float)55.0
  mov [esi+60],eax // rotationSpeed normal 8.25-11.1
  mov eax,(float)70.0
  mov [esi+68],eax // accelerationSpeed normal 5.0-14.0
  mov eax,(float)110.0
  mov [esi+64],eax // movementSpeed normal 33.0-38.5
su_p_skip_fast:
  cmp dword ptr [cheatFullEnergy],1
  jne su_p_skip_energy
  mov eax,[edi+12C] // maxEnergy
  mov [edi+130],eax // currentEnergy
su_p_skip_energy:
  cmp dword ptr [cheatPlayerSonar],1
  jne su_p_skip_sonar
  mov esi,[edi+88] // sonar
  test esi,esi
  jz su_p_skip_sonar
  mov eax,(float)3000.0
  cmp eax,[esi+64]
  jle su_p_skip_sonar
  mov [esi+64],eax // radius
  mov eax,(float)9000000.0
  mov [esi+68],eax // squareRadius
su_p_skip_sonar:
  jmp su_done

  //---------------------------------------------------------------------------
  // must be enemy
su_is_enemy:
  cmp dword ptr [cheatEnemyNoShields],1
  jne su_e_skip_shields
  mov esi,[edi+b8] // shipShields "ShieldScript" type
  test esi,esi
  jz su_e_skip_shields
  xor eax,eax
  mov [esi+74],eax
  mov eax,(float)30.0
  mov [esi+88],eax // TimeTillCharge
  mov [esi+8c],eax // chargeDelay
su_e_skip_shields:
  cmp dword ptr [cheatEnemyLowArmor],1
  jne su_e_skip_armor
  mov esi,[edi+bc] // shipArmor "ArmourScript" type
  test esi,esi
  jz su_e_skip_armor
  mov eax,(float)40.0 // making 0 would destroy it, 40.0 is pretty low
  mov ecx,[esi+58]
  cmp eax,[ecx+74]
  jg su_e_skip_armor
  mov [ecx+74],eax
su_e_skip_armor:
  cmp dword ptr [cheatEnemySlow],1
  jne su_e_skip_slow
  mov esi,[edi+80] // dynamics "ShipDynamics" type
  test esi,esi
  jz su_e_skip_slow
  mov eax,(float)0.5
  cmp [esi+60],eax
  jle su_e_slow1
  mov [esi+60],eax // rotationSpeed normal 8.25-11.1
su_e_slow1:
  cmp [esi+68],eax
  jle su_e_slow2
  mov [esi+68],eax // accelerationSpeed normal 5.0-14.0
su_e_slow2:
  cmp [esi+64],eax
  jle su_e_slow3
  mov [esi+64],eax // movementSpeed normal 33.0-38.5
su_e_slow3:
su_e_skip_slow:
  cmp dword ptr [cheatEnemyNoEnergy],1
  jne su_e_skip_energy
  xor eax,eax
  mov [edi+130],eax // currentEnergy
su_e_skip_energy:
  cmp dword ptr [cheatEnemySonar],1
  jne su_e_skip_sonar
  mov esi,[edi+88] // sonar
  test esi,esi
  jz su_e_skip_sonar
  mov eax,(float)30.0
  cmp eax,[esi+64]
  jge su_e_skip_sonar
  mov [esi+64],eax // radius
  mov eax,(float)900.0
  mov [esi+68],eax // squareRadius
su_e_skip_sonar:
  jmp su_done

  //---------------------------------------------------------------------------
  // probably friendly, but not player
su_is_friendly:
  jmp su_done

  // original code
su_done:
  movzx eax,byte ptr [edi+00000191] // original code - &lt;Escaped&gt;k_BackingField (Boolean)
  jmp su_return



//----- injection point

su_inject:
  jmp su_code
  nop
  nop
su_return:
registersymbol(su_inject)

[DISABLE]

su_inject:
  db 0F B6 87 91 01 00 00

unregistersymbol(su_inject)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 10A16E8A
// Ship:Update+a

10A16E79: 5E                    -  pop esi
10A16E7A: 5F                    -  pop edi
10A16E7B: C9                    -  leave 
10A16E7C: C3                    -  ret 
10A16E7D: 00 00                 -  add [eax],al
10A16E7F: 00 55 8B              -  add [ebp-75],dl
10A16E82: EC                    -  in al,dx
10A16E83: 57                    -  push edi
10A16E84: 83 EC 14              -  sub esp,14
10A16E87: 8B 7D 08              -  mov edi,[ebp+08]
// ---------- INJECTING HERE ----------
10A16E8A: 0F B6 87 91 01 00 00  -  movzx eax,byte ptr [edi+00000191]
// ---------- DONE INJECTING  ----------
10A16E91: 85 C0                 -  test eax,eax
10A16E93: 0F 85 93 02 00 00     -  jne Ship:Update+2ac
10A16E99: 0F B6 87 58 01 00 00  -  movzx eax,byte ptr [edi+00000158]
10A16EA0: 85 C0                 -  test eax,eax
10A16EA2: 0F 84 D3 00 00 00     -  je Ship:Update+fb
10A16EA8: 8B 87 E4 00 00 00     -  mov eax,[edi+000000E4]
10A16EAE: 83 EC 08              -  sub esp,08
10A16EB1: 6A 00                 -  push 00
10A16EB3: 50                    -  push eax
10A16EB4: E8 03 BA EA F4        -  call 058C28BC
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103803</ID>
          <Description>"SCRIPT: Attachment:Update()"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Distant Star.exe
  Version: 
  Date   : 2015-04-11
  Author : jgoemat

  Injection at Attachment:Update+a7

  This script will adjust cooldowns and charging - allowing cheats that remove
  cooldowns from player attachments and that make it so enemy ones don't fire.
}

[ENABLE]

aobscan(au_inject,10 D9 87 C8 00 00 00) // should be unique
alloc(newmem,$1000)

newmem:

{------------------------------------------------------------------------------
 - au_inject - in Attachment:Update()
 - edi is pointer to "Attachment" type
 - [edi+74] is attachedTo, should be a ship
 ------------------------------------------------------------------------------}
label(au_code)
label(au_is_enemy)
label(au_e_skip_cooldown)
label(au_e_skip_charge)
label(au_is_player)
label(au_p_skip_cooldown)
label(au_p_skip_charge)
label(au_p_skip_weapon)
label(au_done)
label(au_return)

au_code:
  pushad
  mov ecx,[edi+74]
  call GetFaction
  test eax,eax
  js au_is_enemy
  jz au_done // if we don't know, don't do anything
  test eax,2
  jnz au_is_player // player controlled
  jmp au_done

au_is_player:
  cmp dword ptr [cheatPlayerNoCooldown],1
  jne au_p_skip_charge
  mov eax,(float)0.10
  cmp eax,[edi+c8]
  jg au_p_skip_cooldown
  mov [edi+c8],eax // cooldownTimer
au_p_skip_cooldown:
  cmp eax,[edi+dc]
  jg au_p_skip_charge
  mov [edi+dc],eax // chargeTimer
au_p_skip_charge:
  cmp dword ptr [edi+90],4 // attachmentType is weapon?
  jne au_p_skip_weapon

au_p_skip_weapon:
  jmp au_done

au_is_enemy:
  cmp dword ptr [cheatEnemyNoAbility],1
  jne au_e_skip_charge
  mov eax,(float)10.0 // set cooldown and charge to 10s
  cmp eax,[edi+c8]
  jl au_e_skip_cooldown
  mov [edi+c8],eax // cooldownTimer
au_e_skip_cooldown:
  cmp eax,[edi+dc]
  jl au_e_skip_charge
  mov [edi+dc],eax // chargeTimer
au_e_skip_charge:
  jmp au_done

au_done:
  popad
  fld dword ptr [edi+000000C8]
  jmp au_return

{------------------------------------------------------------------------------
 - Injection point - assemble jump in game code to our code
 ------------------------------------------------------------------------------}
au_inject+01:
  jmp au_code
  nop
au_return:
registersymbol(au_inject)

[DISABLE]

au_inject+01:
  db D9 87 C8 00 00 00

unregistersymbol(au_inject)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 10A1D09F

10A1D07D: EB 20                 -  jmp Attachment:Update+a7
10A1D07F: 8B 87 88 00 00 00     -  mov eax,[edi+00000088]
10A1D085: D9 05 30 26 0B 0F     -  fld dword ptr [0F0B2630]
10A1D08B: 83 EC 08              -  sub esp,08
10A1D08E: 83 EC 04              -  sub esp,04
10A1D091: D9 1C 24              -  fstp dword ptr [esp]
10A1D094: 50                    -  push eax
10A1D095: 39 00                 -  cmp [eax],eax
10A1D097: E8 54 B3 03 00        -  call OrderIcon:SetAlpha
10A1D09C: 83 C4 10              -  add esp,10
// ---------- INJECTING HERE ----------
10A1D09F: D9 87 C8 00 00 00     -  fld dword ptr [edi+000000C8]
// ---------- DONE INJECTING  ----------
10A1D0A5: D9 EE                 -  fldz 
10A1D0A7: DF F1                 -  fcomip st(0),st(1)
10A1D0A9: DD D8                 -  fstp st(0)
10A1D0AB: 7A 22                 -  jp Attachment:Update+d7
10A1D0AD: 73 20                 -  jae Attachment:Update+d7
10A1D0AF: D9 87 C8 00 00 00     -  fld dword ptr [edi+000000C8]
10A1D0B5: DD 5D D0              -  fstp qword ptr [ebp-30]
10A1D0B8: E8 63 A6 F6 F4        -  call UnityEngine:Time:get_deltaTime
10A1D0BD: DD 45 D0              -  fld qword ptr [ebp-30]
10A1D0C0: D9 C9                 -  fxch st(1)
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103806</ID>
          <Description>"SCRIPT: Minimap:UpdatePlayerShipsSightRadius()"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Distant Star.exe
  Version: 
  Date   : 2015-04-11
  Author : jgoemat

  Minimap:UpdatePlayerShipsSightRadius+2b4

  This fixes the minimap sprite when we extend a ship's vision so it doesn't
  go too far outside the minimap, but we can still see enemy ships.
}

[ENABLE]

aobscan(sonar_fix_inject,8B 87 88 00 00 00 D9 40 64) // should be unique
alloc(newmem,$1000)

label(sonar_fix_code)
label(sonar_fix_skip)
label(sonar_fix_return)

newmem:
  dd (float)0.1

sonar_fix_code:
  mov eax,[edi+00000088] // original code
  fld dword ptr [eax+64] // original code
  cmp [eax+64],(float)500
  jl sonar_fix_skip
  fld dword ptr [newmem]
  fmulp st(1),st(0)
sonar_fix_skip:
  jmp sonar_fix_return

sonar_fix_inject:
  jmp sonar_fix_code
  nop
  nop
  nop
  nop
sonar_fix_return:
registersymbol(sonar_fix_inject)

[DISABLE]

sonar_fix_inject:
  db 8B 87 88 00 00 00 D9 40 64

unregistersymbol(sonar_fix_inject)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 10A4FEE4

10A4FEC2: 89 04 24           -  mov [esp],eax
10A4FEC5: 8B 45 94           -  mov eax,[ebp-6C]
10A4FEC8: 89 44 24 04        -  mov [esp+04],eax
10A4FECC: 8B 45 98           -  mov eax,[ebp-68]
10A4FECF: 89 44 24 08        -  mov [esp+08],eax
10A4FED3: 53                 -  push ebx
10A4FED4: E8 BF F9 FF FF     -  call Minimap:ValidPos
10A4FED9: 83 C4 10           -  add esp,10
10A4FEDC: 85 C0              -  test eax,eax
10A4FEDE: 0F 84 D2 01 00 00  -  je Minimap:UpdatePlayerShipsSightRadius+486
// ---------- INJECTING HERE ----------
10A4FEE4: 8B 87 88 00 00 00  -  mov eax,[edi+00000088]
10A4FEEA: D9 40 64           -  fld dword ptr [eax+64]
// ---------- DONE INJECTING  ----------
10A4FEED: D9 05 80 1D A5 0E  -  fld dword ptr [0EA51D80]
10A4FEF3: DE C9              -  fmulp st(1),st(0)
10A4FEF5: D9 5D CC           -  fstp dword ptr [ebp-34]
10A4FEF8: 8B 05 F8 B7 02 05  -  mov eax,[0502B7F8]
10A4FEFE: D9 40 64           -  fld dword ptr [eax+64]
10A4FF01: 8B 05 F8 B7 02 05  -  mov eax,[0502B7F8]
10A4FF07: D9 40 68           -  fld dword ptr [eax+68]
10A4FF0A: 83 EC 08           -  sub esp,08
10A4FF0D: 83 EC 04           -  sub esp,04
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103811</ID>
          <Description>"SCRIPT: CurrentGame:get_Credits()"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Distant Star.exe
  Version: 
  Date   : 2015-04-11
  Author : jgoemat

  CurrentGame:get_Credits+9

  Here we get the pointer to the CurrentGame class instance and we can add
  credits and fuel.
}

[ENABLE]

aobscan(cdu_inject,8B 80 9C 00 00 00 C9) // CurrentGame:get_Credits+9
alloc(newmem,$1000)

label(cdu_code)
label(cdu_skip_credits)
label(cdu_skip_fuel)
label(cdu_return)

newmem:

cdu_code:
  pushad
  mov ecx,eax
  mov [pCurrentGame],ecx
  cmp dword ptr [cheatCredits],1
  jne cdu_skip_credits
  mov eax,#1000000
  mov [ecx+9c],eax
cdu_skip_credits:
  cmp dword ptr [cheatFuel],1
  jne cdu_skip_fuel
  mov eax,#1000
  mov [ecx+98],eax
cdu_skip_fuel:
  popad
  mov eax,[eax+0000009C] // original code
  jmp cdu_return

cdu_inject:
  jmp cdu_code
  nop
cdu_return:
registersymbol(cdu_inject)

[DISABLE]

cdu_inject:
  db 8B 80 9C 00 00 00

unregistersymbol(cdu_inject)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 10A315A1
// CurrentGame:get_Credits+9
10A3158E: EB 00                 -  jmp &lt;Module&gt;:runtime_invoke_int__this__+a8
10A31590: C9                    -  leave
10A31591: C3                    -  ret
10A31592: 00 00                 -  add [eax],al
10A31594: 00 00                 -  add [eax],al
10A31596: 00 00                 -  add [eax],al
10A31598: 55                    -  push ebp
10A31599: 8B EC                 -  mov ebp,esp
10A3159B: 83 EC 08              -  sub esp,08
10A3159E: 8B 45 08              -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
10A315A1: 8B 80 9C 00 00 00     -  mov eax,[eax+0000009C] // CurrentGame:get_Credits+9
// ---------- DONE INJECTING  ----------
10A315A7: C9                    -  leave
10A315A8: C3                    -  ret
10A315A9: 00 00                 -  add [eax],al
10A315AB: 00 00                 -  add [eax],al
10A315AD: 00 00                 -  add [eax],al
10A315AF: 00 55 8B              -  add [ebp-75],dl
10A315B2: EC                    -  in al,dx
10A315B3: 83 EC 08              -  sub esp,08
10A315B6: 8B 45 08              -  mov eax,[ebp+08]
10A315B9: 8B 80 8C 00 00 00     -  mov eax,[eax+0000008C]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103799</ID>
          <Description>"CHEATS"</Description>
          <Options moBindActivation="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>103785</ID>
              <Description>"Credits"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatCredits)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103796</ID>
              <Description>"Fuel"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatFuel)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103795</ID>
              <Description>"Full Shields"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatFullShields)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103786</ID>
              <Description>"Full Armor"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatFullArmor)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103787</ID>
              <Description>"Full Energy"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatFullEnergy)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103791</ID>
              <Description>"Player Fast"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatPlayerFast)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103794</ID>
              <Description>"Player Fast Fire"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatPlayerFastFire)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103797</ID>
              <Description>"Player No Cooldown"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatPlayerNoCooldown)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103810</ID>
              <Description>"Player Long Range Sonar"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatPlayerSonar)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103788</ID>
              <Description>"Enemy No Shields"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatEnemyNoShields)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103789</ID>
              <Description>"Enemy Low Armor"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatEnemyLowArmor)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103790</ID>
              <Description>"Enemy No Energy"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatEnemyNoEnergy)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103792</ID>
              <Description>"Enemy Slow"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatEnemySlow)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103793</ID>
              <Description>"Enemy No Fire"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatEnemyNoFire)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103798</ID>
              <Description>"Enemy No Ability"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatEnemyNoAbility)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103809</ID>
              <Description>"Enemy Short Range Sonar"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(cheat,cheatEnemySonar)

[ENABLE]
cheat:
  dd 1
[DISABLE]
cheat:
  dd 0

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>UtilCopyData64</Name>
      <Address>4859EE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TEST_MSB</Name>
      <Address>4862700000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TEST_MOPS</Name>
      <Address>D595B70000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UtilCopyData</Name>
      <Address>093A0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TEST_SAMPLE_FPU_64</Name>
      <Address>D59FC20000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TEST_DATA</Name>
      <Address>D595371000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TEST_SAMPLE_FPU_64_CODE</Name>
      <Address>D595370000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TEST_AP</Name>
      <Address>07AC0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MyGetKeyState64</Name>
      <Address>4859EF0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TEST_MOPR</Name>
      <Address>D59FB20000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UtilCopyData64_Enabled</Name>
      <Address>4859EEFFF8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UtilCopyData64_Count</Name>
      <Address>4859EEFFF0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMPR</Name>
      <Address>7FF77BA80266</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGMD</Name>
      <Address>7FF77BA8026A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMPC</Name>
      <Address>7FF77BA8026E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iCurPlayer</Name>
      <Address>7FF77BA80272</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pShipArray</Name>
      <Address>7FF77BA80276</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ap_inject</Name>
      <Address>00811BD9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TEST_SAMPLE</Name>
      <Address>11D60000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TEST_SHIELDS</Name>
      <Address>0B090000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TSH</Name>
      <Address>094B0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>credits_cheat</Name>
      <Address>09980000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>credits_pointer</Name>
      <Address>09980004</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TC</Name>
      <Address>093B0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UtilCopyData_Enabled</Name>
      <Address>093AFFFC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UtilCopyData_Count</Name>
      <Address>093AFFF8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>globals</Name>
      <Address>09C30000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TSU</Name>
      <Address>0A800000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wu_inject</Name>
      <Address>10A1D42E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>su_inject</Name>
      <Address>10A16E8A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>au_inject</Name>
      <Address>10A1D09E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cdu_inject</Name>
      <Address>10A315A1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatFullShields</Name>
      <Address>09C30000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatFullArmor</Name>
      <Address>09C30004</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatFullEnergy</Name>
      <Address>09C30008</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatEnemyNoShields</Name>
      <Address>09C3000C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatEnemyLowArmor</Name>
      <Address>09C30010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatEnemyNoEnergy</Name>
      <Address>09C30014</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatPlayerFast</Name>
      <Address>09C30018</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatEnemySlow</Name>
      <Address>09C3001C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatEnemyNoFire</Name>
      <Address>09C30020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatPlayerFastFire</Name>
      <Address>09C30024</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatEnemyNoAbility</Name>
      <Address>09C30028</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatPlayerNoCooldown</Name>
      <Address>09C3002C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatCredits</Name>
      <Address>09C30030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatFuel</Name>
      <Address>09C30034</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatPlayerSonar</Name>
      <Address>09C30038</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cheatEnemySonar</Name>
      <Address>09C3003C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCurrentGame</Name>
      <Address>09C30040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GetFaction</Name>
      <Address>09C30200</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sonar_fix_inject</Name>
      <Address> 10A4FEE4</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>==============================================================================
 = R E A D M E
 ==============================================================================

 Activate the "Global Script" and it will expand to show you other scripts.
 Since Distant Star: Revenant Fleet is a mono game, you will need to wait until
 you start at least one mission to activate most of the scripts.  Enable the
 cheats that you want and relax.

 CHEATs:
   Credits - 1,000,000 credits
   Fuel - 1,000 fuel
   Full Shields - Player ships always have full shields
   Full Armor - Player ships always have full armor
   Full Energy - Player ships always have full energy
  *Player Fast - Player ships are much faster
   Player No Cooldown - Attachments have a VERY short cooldown
  *Player Long Range Sonar - See enemies anywhere on the map
   Enemy No Shields - Keeps enemy shields down
   Enemy Low Armor - Lets enemies have a max of 1 bar of health
   Enemy No Energy - Keeps enemies from having energy
  *Enemy Slow - Brings them to a crawl
   Enemy No Fire - Keeps them from firing most weapons
   Enemy No Ability - Keeps them from using most abilities
  *Enemy Short Range Sonar - SHOULD make them not see you, probably doesn't work


  NOTES:
    Marked cheats affect values so they cannot be undone until you jump
    Player Fast can cause problems with obstacles sometimes
    Enemy Short Range Sonar doesn't seem to have an effect
    Player Long Range Sonar - Shows you ships, but fixes size of displayed area
      on the minimap to be smaller or else it would extend past the minimap and
      block part of the screen.  If you disable the Minimap script you can see
      it, that is all that script does.</Comments>
</CheatTable>
