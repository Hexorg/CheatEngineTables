<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Max/Infinite Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(Main_Mem,1024)
alloc(Get_Base_Mem,1024)
label(returnhere)
label(returnhere2)
label(originalcode)
label(exit)
label(player)
globalalloc(v_Player,4)

{=============================================================================}

Main_Mem: //this is allocated memory, you have read,write,execute access
cmp ebx,[v_Player]
je player
jmp originalcode

player:
push eax
mov eax,[ebx+128]
mov [ebx+124],eax
pop eax
jmp exit

originalcode:
fstp dword ptr [ebx+124]

exit:
jmp returnhere

v_Player:
dd 0

"final_exam.exe"+80EA64:
jmp Main_Mem
nop
returnhere:

{=============================================================================}

Get_Base_Mem: //this is allocated memory, you have read,write,execute access
mov [v_Player],eax

fld dword ptr [eax+00000124]

jmp returnhere2

v_Player:
dd 0

"final_exam.exe"+206AE1:
jmp Get_Base_Mem
nop
returnhere2:

{=============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(Main_Mem)
"final_exam.exe"+80EA64:
fstp dword ptr [ebx+00000124]
//Alt: db D9 9B 24 01 00 00

dealloc(Get_Base_Mem)
"final_exam.exe"+206AE1:
fld dword ptr [eax+00000124]
//Alt: db D9 80 24 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Max/Infinite Health + One-Hit Kill [TEST]"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(Main_Mem,1024)
alloc(Get_Base_Mem,1024)
label(returnhere)
label(returnhere2)
label(exit)
label(player)
label(enemy)
globalalloc(v_Player,4)

{=============================================================================}

Main_Mem: //this is allocated memory, you have read,write,execute access
cmp ebx,[v_Player]
je player
jmp enemy

player:
push eax
mov eax,[ebx+128]
mov [ebx+124],eax
pop eax
jmp exit

enemy:
mov [ebx+124],0

exit:
jmp returnhere

"final_exam.exe"+80EA64:
jmp Main_Mem
nop
returnhere:

{=============================================================================}

Get_Base_Mem: //this is allocated memory, you have read,write,execute access
mov [v_Player],eax

fld dword ptr [eax+00000124]

jmp returnhere2

v_Player:
dd 0

"final_exam.exe"+206AE1:
jmp Get_Base_Mem
nop
returnhere2:

{=============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(Main_Mem)
"final_exam.exe"+80EA64:
fstp dword ptr [ebx+00000124]
//Alt: db D9 9B 24 01 00 00

dealloc(Get_Base_Mem)
"final_exam.exe"+206AE1:
fld dword ptr [eax+00000124]
//Alt: db D9 80 24 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Infinite Ammo/Grenades/Items + No Reload"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,1024)
alloc(newmem2,1024)
label(returnhere)
label(originalcode)
label(exit)
label(returnhere2)
label(originalcode2)
label(exit2)
label(re_supply_ammo)
label(re_supply_items)

{=============================================================================}

newmem: //this is allocated memory, you have read,write,execute access
cmp [eax+588],-1
je re_supply_ammo
cmp [eax+594],-1
je re_supply_items
jmp originalcode

re_supply_ammo:
push ebx
mov ebx,63
not ebx
mov [eax+588],ebx
pop ebx
jmp originalcode

re_supply_items:
push ebx
mov ebx,62
not ebx
mov [eax+594],ebx
pop ebx

originalcode:
mov eax,[eax+00000588]

exit:
jmp returnhere

"final_exam.exe"+533497:
jmp newmem
nop
returnhere:

{=============================================================================}

newmem2: //this is allocated memory, you have read,write,execute access
xor eax,eax

originalcode2:
not edx
sub edx,eax
not edx

exit2:
jmp returnhere2

"final_exam.exe"+533543:
jmp newmem2
nop
returnhere2:

{=============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat

dealloc(newmem)
"final_exam.exe"+533497:
mov eax,[eax+00000588]
//Alt: db 8B 80 88 05 00 00

dealloc(newmem2)
"final_exam.exe"+533543:
not edx
sub edx,eax
not edx
//Alt: db F7 D2 2B D0 F7 D2

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Invincibility + Disable Enemy Attacks"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

{=============================================================================}

newmem: //this is allocated memory, you have read,write,execute access
mov [eax+12C],64

originalcode:
cmp [eax+12C],edi

exit:
jmp returnhere

"final_exam.exe"+329A91:
jmp newmem
nop
returnhere:

{=============================================================================}

"final_exam.exe"+2ED238:
db 90 90

{=============================================================================}

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"final_exam.exe"+329A91:
cmp [eax+0000012C],edi
//Alt: db 39 B8 2C 01 00 00

"final_exam.exe"+2ED238:
jg final_exam.exe+2ED264
//Alt: db 7F 2A
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>m_Value</Name>
      <Address>01780000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>v_Player</Name>
      <Address>04BD0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Info about this table: 
Created by: ColdFusion73 a.k.a. 416c6558.
</Comments>
</CheatTable>
