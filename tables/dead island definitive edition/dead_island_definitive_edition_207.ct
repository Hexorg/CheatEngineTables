<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>17</ID>
      <Description>"God Mode"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version: 
  Date   : 2016-06-01
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,F3 0F 11 8A 2C 0D 00 00 C3) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+66D304)

label(code)
label(return)

newmem:

code:
  //movss [rdx+00000D2C],xmm1
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 8A 2C 0D 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+66D304

"gamedll_x64_rwdi.dll"+66D2D7: 48 8B 81 68 0C 00 00     -  mov rax,[rcx+00000C68]
"gamedll_x64_rwdi.dll"+66D2DE: F3 0F 10 40 08           -  movss xmm0,[rax+08]
"gamedll_x64_rwdi.dll"+66D2E3: F3 0F 58 82 A8 20 00 00  -  addss xmm0,[rdx+000020A8]
"gamedll_x64_rwdi.dll"+66D2EB: 73 09                    -  jae gamedll_x64_rwdi.dll+66D2F6
"gamedll_x64_rwdi.dll"+66D2ED: F3 0F 11 92 2C 0D 00 00  -  movss [rdx+00000D2C],xmm2
"gamedll_x64_rwdi.dll"+66D2F5: C3                       -  ret 
"gamedll_x64_rwdi.dll"+66D2F6: 0F 2F C8                 -  comiss xmm1,xmm0
"gamedll_x64_rwdi.dll"+66D2F9: 76 09                    -  jna gamedll_x64_rwdi.dll+66D304
"gamedll_x64_rwdi.dll"+66D2FB: F3 0F 11 82 2C 0D 00 00  -  movss [rdx+00000D2C],xmm0
"gamedll_x64_rwdi.dll"+66D303: C3                       -  ret 
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+66D304: F3 0F 11 8A 2C 0D 00 00  -  movss [rdx+00000D2C],xmm1
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+66D30C: C3                       -  ret 
"gamedll_x64_rwdi.dll"+66D30D: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+66D30E: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+66D30F: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+66D310: 80 79 50 00              -  cmp byte ptr [rcx+50],00
"gamedll_x64_rwdi.dll"+66D314: 48 8B 05 6D E8 C0 00     -  mov rax,[gamedll_x64_rwdi.dll+127BB88]
"gamedll_x64_rwdi.dll"+66D31B: 48 8B D1                 -  mov rdx,rcx
"gamedll_x64_rwdi.dll"+66D31E: 75 07                    -  jne gamedll_x64_rwdi.dll+66D327
"gamedll_x64_rwdi.dll"+66D320: 48 8B 81 18 0A 00 00     -  mov rax,[rcx+00000A18]
"gamedll_x64_rwdi.dll"+66D327: 48 8B 80 B0 00 00 00     -  mov rax,[rax+000000B0]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Max Money"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version: 
  Date   : 2016-06-01
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,01 BB C8 0B 00 00) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+67AD4E)

label(code)
label(return)

newmem:

code:
  mov [rbx+00000BC8],#999999999
  //add [rbx+00000BC8],edi
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 01 BB C8 0B 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+67AD4E

"gamedll_x64_rwdi.dll"+67AD22: 48 83 C0 08                 -  add rax,08
"gamedll_x64_rwdi.dll"+67AD26: 48 FF CA                    -  dec rdx
"gamedll_x64_rwdi.dll"+67AD29: 75 E5                       -  jne gamedll_x64_rwdi.dll+67AD10
"gamedll_x64_rwdi.dll"+67AD2B: 48 63 C7                    -  movsxd  rax,edi
"gamedll_x64_rwdi.dll"+67AD2E: F3 0F 10 BC 83 F8 1D 00 00  -  movss xmm7,[rbx+rax*4+00001DF8]
"gamedll_x64_rwdi.dll"+67AD37: 4C 8B 15 6A 15 C0 00        -  mov r10,[gamedll_x64_rwdi.dll+127C2A8]
"gamedll_x64_rwdi.dll"+67AD3E: 66 41 0F 6E F4              -  movd xmm6,r12d
"gamedll_x64_rwdi.dll"+67AD43: 0F 5B F6                    -  cvtdq2ps xmm6,xmm6
"gamedll_x64_rwdi.dll"+67AD46: F3 0F 59 F7                 -  mulss xmm6,xmm7
"gamedll_x64_rwdi.dll"+67AD4A: F3 0F 2C FE                 -  cvttss2si edi,xmm6
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+67AD4E: 01 BB C8 0B 00 00           -  add [rbx+00000BC8],edi
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+67AD54: 01 BB 30 1C 00 00           -  add [rbx+00001C30],edi
"gamedll_x64_rwdi.dll"+67AD5A: 49 8B 82 A0 04 00 00        -  mov rax,[r10+000004A0]
"gamedll_x64_rwdi.dll"+67AD61: 48 85 C0                    -  test rax,rax
"gamedll_x64_rwdi.dll"+67AD64: 74 2A                       -  je gamedll_x64_rwdi.dll+67AD90
"gamedll_x64_rwdi.dll"+67AD66: 48 8B 40 58                 -  mov rax,[rax+58]
"gamedll_x64_rwdi.dll"+67AD6A: 48 85 C0                    -  test rax,rax
"gamedll_x64_rwdi.dll"+67AD6D: 74 21                       -  je gamedll_x64_rwdi.dll+67AD90
"gamedll_x64_rwdi.dll"+67AD6F: 48 8B 80 18 0A 00 00        -  mov rax,[rax+00000A18]
"gamedll_x64_rwdi.dll"+67AD76: 48 85 C0                    -  test rax,rax
"gamedll_x64_rwdi.dll"+67AD79: 74 15                       -  je gamedll_x64_rwdi.dll+67AD90
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Inf Flash Light"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version: 
  Date   : 2016-06-01
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,F3 0F 11 41 68 73) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+733FED)

label(code)
label(return)

newmem:

code:
  //movss [rcx+68],xmm0
  jmp return

INJECT:
  jmp code
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 41 68

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+733FED

"gamedll_x64_rwdi.dll"+733FB5: F3 0F 59 49 6C           -  mulss xmm1,[rcx+6C]
"gamedll_x64_rwdi.dll"+733FBA: F3 0F 10 41 68           -  movss xmm0,[rcx+68]
"gamedll_x64_rwdi.dll"+733FBF: 48 89 9C 24 B0 00 00 00  -  mov [rsp+000000B0],rbx
"gamedll_x64_rwdi.dll"+733FC7: 0F 29 B4 24 90 00 00 00  -  movaps [rsp+00000090],xmm6
"gamedll_x64_rwdi.dll"+733FCF: 0F 29 BC 24 80 00 00 00  -  movaps [rsp+00000080],xmm7
"gamedll_x64_rwdi.dll"+733FD7: 44 0F 29 44 24 70        -  movaps [rsp+70],xmm8
"gamedll_x64_rwdi.dll"+733FDD: F3 0F 5C C1              -  subss xmm0,xmm1
"gamedll_x64_rwdi.dll"+733FE1: 0F 57 C9                 -  xorps xmm1,xmm1
"gamedll_x64_rwdi.dll"+733FE4: 44 0F 29 4C 24 60        -  movaps [rsp+60],xmm9
"gamedll_x64_rwdi.dll"+733FEA: 0F 2F C1                 -  comiss xmm0,xmm1
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+733FED: F3 0F 11 41 68           -  movss [rcx+68],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+733FF2: 73 07                    -  jae gamedll_x64_rwdi.dll+733FFB
"gamedll_x64_rwdi.dll"+733FF4: C7 41 68 00 00 00 00     -  mov [rcx+68],00000000
"gamedll_x64_rwdi.dll"+733FFB: 0F 2E 49 68              -  ucomiss xmm1,[rcx+68]
"gamedll_x64_rwdi.dll"+733FFF: 75 5B                    -  jne gamedll_x64_rwdi.dll+73405C
"gamedll_x64_rwdi.dll"+734001: C6 41 61 00              -  mov byte ptr [rcx+61],00
"gamedll_x64_rwdi.dll"+734005: 48 8B 49 58              -  mov rcx,[rcx+58]
"gamedll_x64_rwdi.dll"+734009: 48 81 C1 60 02 00 00     -  add rcx,00000260
"gamedll_x64_rwdi.dll"+734010: 48 8B 01                 -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+734013: FF 50 08                 -  call qword ptr [rax+08]
"gamedll_x64_rwdi.dll"+734016: 48 8B 98 40 06 00 00     -  mov rbx,[rax+00000640]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Inf Stamina"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version: 
  Date   : 2016-06-01
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,F3 0F 11 83 BC 0D 00 00 0F 87) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+65692F)

label(code)
label(return)

newmem:

code:
  //movss [rbx+00000DBC],xmm0
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 83 BC 0D 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+65692F

"gamedll_x64_rwdi.dll"+6568FA: 75 07                       -  jne gamedll_x64_rwdi.dll+656903
"gamedll_x64_rwdi.dll"+6568FC: 48 8B 83 18 0A 00 00        -  mov rax,[rbx+00000A18]
"gamedll_x64_rwdi.dll"+656903: 48 8B 80 B0 00 00 00        -  mov rax,[rax+000000B0]
"gamedll_x64_rwdi.dll"+65690A: 48 8B 08                    -  mov rcx,[rax]
"gamedll_x64_rwdi.dll"+65690D: 48 8B 81 C8 00 00 00        -  mov rax,[rcx+000000C8]
"gamedll_x64_rwdi.dll"+656914: F3 0F 59 70 08              -  mulss xmm6,[rax+08]
"gamedll_x64_rwdi.dll"+656919: F3 0F 10 BB BC 0D 00 00     -  movss xmm7,[rbx+00000DBC]
"gamedll_x64_rwdi.dll"+656921: 0F 28 C7                    -  movaps xmm0,xmm7
"gamedll_x64_rwdi.dll"+656924: F3 0F 5C C6                 -  subss xmm0,xmm6
"gamedll_x64_rwdi.dll"+656928: 0F 2F 05 DD 2F 65 00        -  comiss xmm0,[gamedll_x64_rwdi.dll+CA990C]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+65692F: F3 0F 11 83 BC 0D 00 00     -  movss [rbx+00000DBC],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+656937: 0F 87 E1 00 00 00           -  ja gamedll_x64_rwdi.dll+656A1E
"gamedll_x64_rwdi.dll"+65693D: 48 89 7C 24 60              -  mov [rsp+60],rdi
"gamedll_x64_rwdi.dll"+656942: 33 FF                       -  xor edi,edi
"gamedll_x64_rwdi.dll"+656944: 48 8D 05 DD DA 85 00        -  lea rax,[gamedll_x64_rwdi.dll+EB4428]
"gamedll_x64_rwdi.dll"+65694B: 83 C9 FF                    -  or ecx,-01
"gamedll_x64_rwdi.dll"+65694E: 66 90                       -  nop 
"gamedll_x64_rwdi.dll"+656950: 80 38 00                    -  cmp byte ptr [rax],00
"gamedll_x64_rwdi.dll"+656953: 74 09                       -  je gamedll_x64_rwdi.dll+65695E
"gamedll_x64_rwdi.dll"+656955: FF C7                       -  inc edi
"gamedll_x64_rwdi.dll"+656957: 48 FF C0                    -  inc rax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Fast Level Up"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version: 
  Date   : 2016-06-01
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,01 91 80 00 00 00) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+6D78FA)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000080],#999999999
  //add [rcx+00000080],edx
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 01 91 80 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+6D78FA

"gamedll_x64_rwdi.dll"+6D78E9: CC                    -  int 3 
"gamedll_x64_rwdi.dll"+6D78EA: CC                    -  int 3 
"gamedll_x64_rwdi.dll"+6D78EB: CC                    -  int 3 
"gamedll_x64_rwdi.dll"+6D78EC: CC                    -  int 3 
"gamedll_x64_rwdi.dll"+6D78ED: CC                    -  int 3 
"gamedll_x64_rwdi.dll"+6D78EE: CC                    -  int 3 
"gamedll_x64_rwdi.dll"+6D78EF: CC                    -  int 3 
"gamedll_x64_rwdi.dll"+6D78F0: 48 89 5C 24 08        -  mov [rsp+08],rbx
"gamedll_x64_rwdi.dll"+6D78F5: 57                    -  push rdi
"gamedll_x64_rwdi.dll"+6D78F6: 48 83 EC 20           -  sub rsp,20
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+6D78FA: 01 91 80 00 00 00     -  add [rcx+00000080],edx
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+6D7900: 8B DA                 -  mov ebx,edx
"gamedll_x64_rwdi.dll"+6D7902: 48 8B 51 58           -  mov rdx,[rcx+58]
"gamedll_x64_rwdi.dll"+6D7906: 41 0F B6 F8           -  movzx edi,r8l
"gamedll_x64_rwdi.dll"+6D790A: 48 85 D2              -  test rdx,rdx
"gamedll_x64_rwdi.dll"+6D790D: 74 26                 -  je gamedll_x64_rwdi.dll+6D7935
"gamedll_x64_rwdi.dll"+6D790F: 0F B7 81 8E 00 00 00  -  movzx eax,word ptr [rcx+0000008E]
"gamedll_x64_rwdi.dll"+6D7916: FF C8                 -  dec eax
"gamedll_x64_rwdi.dll"+6D7918: 4C 63 C8              -  movsxd  r9,eax
"gamedll_x64_rwdi.dll"+6D791B: 48 8B 02              -  mov rax,[rdx]
"gamedll_x64_rwdi.dll"+6D791E: 49 C1 E1 05           -  shl r9,05
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"1 Hit Kill"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version: 
  Date   : 2016-06-01
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,F3 0F 11 87 34 07 00 00 F3 0F 10 BF) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+26BC5C)

label(code)
label(return)

newmem:

code:
  mov [rdi+00000734],(float)0
  //movss [rdi+00000734],xmm0
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 87 34 07 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+26BC5C

"gamedll_x64_rwdi.dll"+26BC3D: 41 0F 28 C2                 -  movaps xmm0,xmm10
"gamedll_x64_rwdi.dll"+26BC41: 4C 39 7F 20                 -  cmp [rdi+20],r15
"gamedll_x64_rwdi.dll"+26BC45: 74 15                       -  je gamedll_x64_rwdi.dll+26BC5C
"gamedll_x64_rwdi.dll"+26BC47: 4C 39 7F 50                 -  cmp [rdi+50],r15
"gamedll_x64_rwdi.dll"+26BC4B: 74 06                       -  je gamedll_x64_rwdi.dll+26BC53
"gamedll_x64_rwdi.dll"+26BC4D: 48 8B 47 58                 -  mov rax,[rdi+58]
"gamedll_x64_rwdi.dll"+26BC51: EB 03                       -  jmp gamedll_x64_rwdi.dll+26BC56
"gamedll_x64_rwdi.dll"+26BC53: 49 8B C7                    -  mov rax,r15
"gamedll_x64_rwdi.dll"+26BC56: 44 38 78 50                 -  cmp [rax+50],r15l
"gamedll_x64_rwdi.dll"+26BC5A: 74 08                       -  je gamedll_x64_rwdi.dll+26BC64
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+26BC5C: F3 0F 11 87 34 07 00 00     -  movss [rdi+00000734],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+26BC64: F3 0F 10 BF 0C 0E 00 00     -  movss xmm7,[rdi+00000E0C]
"gamedll_x64_rwdi.dll"+26BC6C: 41 0F 2F FA                 -  comiss xmm7,xmm10
"gamedll_x64_rwdi.dll"+26BC70: 76 40                       -  jna gamedll_x64_rwdi.dll+26BCB2
"gamedll_x64_rwdi.dll"+26BC72: 48 8B 03                    -  mov rax,[rbx]
"gamedll_x64_rwdi.dll"+26BC75: F3 0F 10 B7 34 07 00 00     -  movss xmm6,[rdi+00000734]
"gamedll_x64_rwdi.dll"+26BC7D: 83 CA FF                    -  or edx,-01
"gamedll_x64_rwdi.dll"+26BC80: 48 8B CB                    -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+26BC83: FF 90 98 06 00 00           -  call qword ptr [rax+00000698]
"gamedll_x64_rwdi.dll"+26BC89: F3 0F 59 C7                 -  mulss xmm0,xmm7
"gamedll_x64_rwdi.dll"+26BC8D: 0F 2F F0                    -  comiss xmm6,xmm0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"Instant Rage"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version:
  Date   : 2016-06-01
  Author : john

  This script does blah blah blah
}

{ Game   : DeadIslandGame.exe
  Version:
  Date   : 2016-06-01
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,F3 0F 11 8A D8 1C 00 00 F3) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+684935)

label(code)
label(return)

newmem:

code:
  mov [rdx+00001CD8],(float)1
  //movss [rdx+00001CD8],xmm1
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

aobscanmodule(INJECT2,gamedll_x64_rwdi.dll,F3 0F 11 BB D8 1C 00 00) // should be unique
alloc(newmem2,$1000,"gamedll_x64_rwdi.dll"+684810)

label(code2)
label(return2)

newmem2:

code2:
  movss [rbx+00001CD8],xmm7
  jmp return2

INJECT2:
  jmp code2
  nop
  nop
  nop
return2:
registersymbol(INJECT2)

[DISABLE]

INJECT:
  db F3 0F 11 8A D8 1C 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+684935

"gamedll_x64_rwdi.dll"+684910: 48 8B 08                 -  mov rcx,[rax]
"gamedll_x64_rwdi.dll"+684913: 48 8B 81 88 0D 00 00     -  mov rax,[rcx+00000D88]
"gamedll_x64_rwdi.dll"+68491A: F3 0F 10 40 08           -  movss xmm0,[rax+08]
"gamedll_x64_rwdi.dll"+68491F: 72 14                    -  jb gamedll_x64_rwdi.dll+684935
"gamedll_x64_rwdi.dll"+684921: 0F 2F D0                 -  comiss xmm2,xmm0
"gamedll_x64_rwdi.dll"+684924: 76 0C                    -  jna gamedll_x64_rwdi.dll+684932
"gamedll_x64_rwdi.dll"+684926: 0F 28 C8                 -  movaps xmm1,xmm0
"gamedll_x64_rwdi.dll"+684929: F3 0F 11 8A D8 1C 00 00  -  movss [rdx+00001CD8],xmm1
"gamedll_x64_rwdi.dll"+684931: C3                       -  ret
"gamedll_x64_rwdi.dll"+684932: 0F 28 CA                 -  movaps xmm1,xmm2
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+684935: F3 0F 11 8A D8 1C 00 00  -  movss [rdx+00001CD8],xmm1
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+68493D: F3 C3                    - repe  ret
"gamedll_x64_rwdi.dll"+68493F: CC                       -  int 3
"gamedll_x64_rwdi.dll"+684940: 48 83 EC 28              -  sub rsp,28
"gamedll_x64_rwdi.dll"+684944: 80 79 50 00              -  cmp byte ptr [rcx+50],00
"gamedll_x64_rwdi.dll"+684948: 48 8B 05 39 72 BF 00     -  mov rax,[gamedll_x64_rwdi.dll+127BB88]
"gamedll_x64_rwdi.dll"+68494F: 48 8B D1                 -  mov rdx,rcx
"gamedll_x64_rwdi.dll"+684952: 75 07                    -  jne gamedll_x64_rwdi.dll+68495B
"gamedll_x64_rwdi.dll"+684954: 48 8B 81 18 0A 00 00     -  mov rax,[rcx+00000A18]
"gamedll_x64_rwdi.dll"+68495B: 48 8B 80 B0 00 00 00     -  mov rax,[rax+000000B0]
"gamedll_x64_rwdi.dll"+684962: 48 8B 08                 -  mov rcx,[rax]
}
INJECT2:
  db F3 0F 11 BB D8 1C 00 00

unregistersymbol(INJECT2)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+684810

"gamedll_x64_rwdi.dll"+6847F1: F3 45 0F 59 C1                 -  mulss xmm8,xmm9
"gamedll_x64_rwdi.dll"+6847F6: F3 41 0F 5C C0                 -  subss xmm0,xmm8
"gamedll_x64_rwdi.dll"+6847FB: 0F 2F C6                       -  comiss xmm0,xmm6
"gamedll_x64_rwdi.dll"+6847FE: 73 05                          -  jae gamedll_x64_rwdi.dll+684805
"gamedll_x64_rwdi.dll"+684800: 0F 28 FE                       -  movaps xmm7,xmm6
"gamedll_x64_rwdi.dll"+684803: EB 08                          -  jmp gamedll_x64_rwdi.dll+68480D
"gamedll_x64_rwdi.dll"+684805: 0F 2F C7                       -  comiss xmm0,xmm7
"gamedll_x64_rwdi.dll"+684808: 77 03                          -  ja gamedll_x64_rwdi.dll+68480D
"gamedll_x64_rwdi.dll"+68480A: 0F 28 F8                       -  movaps xmm7,xmm0
"gamedll_x64_rwdi.dll"+68480D: 0F 2E FE                       -  ucomiss xmm7,xmm6
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+684810: F3 0F 11 BB D8 1C 00 00        -  movss [rbx+00001CD8],xmm7
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+684818: 75 1D                          -  jne gamedll_x64_rwdi.dll+684837
"gamedll_x64_rwdi.dll"+68481A: 48 8B 8B 98 08 00 00           -  mov rcx,[rbx+00000898]
"gamedll_x64_rwdi.dll"+684821: E8 EA 6C 0E 00                 -  call gamedll_x64_rwdi.dll+76B510
"gamedll_x64_rwdi.dll"+684826: 84 C0                          -  test al,al
"gamedll_x64_rwdi.dll"+684828: 75 0D                          -  jne gamedll_x64_rwdi.dll+684837
"gamedll_x64_rwdi.dll"+68482A: 45 33 C0                       -  xor r8d,r8d
"gamedll_x64_rwdi.dll"+68482D: 33 D2                          -  xor edx,edx
"gamedll_x64_rwdi.dll"+68482F: 48 8B CB                       -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+684832: E8 19 08 00 00                 -  call gamedll_x64_rwdi.dll+685050
"gamedll_x64_rwdi.dll"+684837: 80 BB 51 07 00 00 00           -  cmp byte ptr [rbx+00000751],00
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Inf Weapon Durability"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version: 
  Date   : 2016-06-01
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,F3 0F 11 73 04 48 8B 5C 24 40) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+360769)

label(code)
label(return)

newmem:

code:
  mov [rbx+04],(float)100
  //movss [rbx+04],xmm6
  jmp return

INJECT:
  jmp code
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 73 04

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+360769

"gamedll_x64_rwdi.dll"+360744: 76 23                    -  jna gamedll_x64_rwdi.dll+360769
"gamedll_x64_rwdi.dll"+360746: 48 8B 43 10              -  mov rax,[rbx+10]
"gamedll_x64_rwdi.dll"+36074A: 48 8D 4B 10              -  lea rcx,[rbx+10]
"gamedll_x64_rwdi.dll"+36074E: FF 90 E8 05 00 00        -  call qword ptr [rax+000005E8]
"gamedll_x64_rwdi.dll"+360754: F3 0F 11 43 04           -  movss [rbx+04],xmm0
"gamedll_x64_rwdi.dll"+360759: 48 8B 5C 24 40           -  mov rbx,[rsp+40]
"gamedll_x64_rwdi.dll"+36075E: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"gamedll_x64_rwdi.dll"+360763: 48 83 C4 30              -  add rsp,30
"gamedll_x64_rwdi.dll"+360767: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+360768: C3                       -  ret 
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+360769: F3 0F 11 73 04           -  movss [rbx+04],xmm6
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+36076E: 48 8B 5C 24 40           -  mov rbx,[rsp+40]
"gamedll_x64_rwdi.dll"+360773: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"gamedll_x64_rwdi.dll"+360778: 48 83 C4 30              -  add rsp,30
"gamedll_x64_rwdi.dll"+36077C: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+36077D: C3                       -  ret 
"gamedll_x64_rwdi.dll"+36077E: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+36077F: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+360780: 40 53                    -  push rbx
"gamedll_x64_rwdi.dll"+360782: 55                       -  push rbp
"gamedll_x64_rwdi.dll"+360783: 56                       -  push rsi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>46</ID>
      <Description>"Infinite Inventory"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version: 
  Date   : 2016-06-01
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,41 FF 4D 50 44 8B CD) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+66F3F5)

label(code)
label(return)

newmem:

code:
  mov [r13+50],#99
  //dec [r13+50]
  mov r9d,ebp
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 41 FF 4D 50 44 8B CD

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+66F3F5

"gamedll_x64_rwdi.dll"+66F3CC: 48 89 5C 24 50           -  mov [rsp+50],rbx
"gamedll_x64_rwdi.dll"+66F3D1: 48 89 74 24 60           -  mov [rsp+60],rsi
"gamedll_x64_rwdi.dll"+66F3D6: 48 89 7C 24 68           -  mov [rsp+68],rdi
"gamedll_x64_rwdi.dll"+66F3DB: 4C 89 7C 24 20           -  mov [rsp+20],r15
"gamedll_x64_rwdi.dll"+66F3E0: 7E 2D                    -  jle gamedll_x64_rwdi.dll+66F40F
"gamedll_x64_rwdi.dll"+66F3E2: 48 8B 42 60              -  mov rax,[rdx+60]
"gamedll_x64_rwdi.dll"+66F3E6: 48 8D 4A 60              -  lea rcx,[rdx+60]
"gamedll_x64_rwdi.dll"+66F3EA: FF 90 38 03 00 00        -  call qword ptr [rax+00000338]
"gamedll_x64_rwdi.dll"+66F3F0: 83 F8 01                 -  cmp eax,01
"gamedll_x64_rwdi.dll"+66F3F3: 7E 1A                    -  jle gamedll_x64_rwdi.dll+66F40F
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+66F3F5: 41 FF 4D 50              -  dec [r13+50]
"gamedll_x64_rwdi.dll"+66F3F9: 44 8B CD                 -  mov r9d,ebp
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+66F3FC: 4D 8B C5                 -  mov r8,r13
"gamedll_x64_rwdi.dll"+66F3FF: 49 8B D5                 -  mov rdx,r13
"gamedll_x64_rwdi.dll"+66F402: 49 8B CC                 -  mov rcx,r12
"gamedll_x64_rwdi.dll"+66F405: E8 86 10 00 00           -  call gamedll_x64_rwdi.dll+670490
"gamedll_x64_rwdi.dll"+66F40A: E9 8D 03 00 00           -  jmp gamedll_x64_rwdi.dll+66F79C
"gamedll_x64_rwdi.dll"+66F40F: 45 33 FF                 -  xor r15d,r15d
"gamedll_x64_rwdi.dll"+66F412: 41 8B F7                 -  mov esi,r15d
"gamedll_x64_rwdi.dll"+66F415: 85 ED                    -  test ebp,ebp
"gamedll_x64_rwdi.dll"+66F417: 75 6C                    -  jne gamedll_x64_rwdi.dll+66F485
"gamedll_x64_rwdi.dll"+66F419: 45 8B 84 24 90 10 00 00  -  mov r8d,[r12+00001090]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>48</ID>
      <Description>"NoReload"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version: 
  Date   : 2016-06-07
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,FF 48 50 E8 5A 67 A6 FF) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+78733E)

label(code)
label(return)

newmem:

code:
  //dec [rax+50]
  call gamedll_x64_rwdi.dll+1EDAA0
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 48 50 E8 5A 67 A6 FF

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+78733E

"gamedll_x64_rwdi.dll"+787313: 49 8B CD                       -  mov rcx,r13
"gamedll_x64_rwdi.dll"+787316: FF 90 18 01 00 00              -  call qword ptr [rax+00000118]
"gamedll_x64_rwdi.dll"+78731C: 83 F8 FF                       -  cmp eax,-01
"gamedll_x64_rwdi.dll"+78731F: 75 07                          -  jne gamedll_x64_rwdi.dll+787328
"gamedll_x64_rwdi.dll"+787321: 44 38 74 24 40                 -  cmp [rsp+40],r14l
"gamedll_x64_rwdi.dll"+787326: 74 1E                          -  je gamedll_x64_rwdi.dll+787346
"gamedll_x64_rwdi.dll"+787328: 49 8B 4C 24 58                 -  mov rcx,[r12+58]
"gamedll_x64_rwdi.dll"+78732D: 41 8B 94 24 B4 01 00 00        -  mov edx,[r12+000001B4]
"gamedll_x64_rwdi.dll"+787335: 48 8B 01                       -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+787338: FF 90 B0 04 00 00              -  call qword ptr [rax+000004B0]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+78733E: FF 48 50                       -  dec [rax+50]
"gamedll_x64_rwdi.dll"+787341: E8 5A 67 A6 FF                 -  call gamedll_x64_rwdi.dll+1EDAA0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+787346: 41 8B 84 24 90 00 00 00        -  mov eax,[r12+00000090]
"gamedll_x64_rwdi.dll"+78734E: FF C0                          -  inc eax
"gamedll_x64_rwdi.dll"+787350: 25 1F 00 00 80                 -  and eax,8000001F
"gamedll_x64_rwdi.dll"+787355: 7D 07                          -  jnl gamedll_x64_rwdi.dll+78735E
"gamedll_x64_rwdi.dll"+787357: FF C8                          -  dec eax
"gamedll_x64_rwdi.dll"+787359: 83 C8 E0                       -  or eax,-20
"gamedll_x64_rwdi.dll"+78735C: FF C0                          -  inc eax
"gamedll_x64_rwdi.dll"+78735E: 49 8B CC                       -  mov rcx,r12
"gamedll_x64_rwdi.dll"+787361: 41 89 84 24 90 00 00 00        -  mov [r12+00000090],eax
"gamedll_x64_rwdi.dll"+787369: 41 89 44 24 70                 -  mov [r12+70],eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>52</ID>
      <Description>"Inf Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DeadIslandGame.exe
  Version: 
  Date   : 2016-06-07
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,89 84 9F 7C 11 00 00 41 8B C5) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+677982)

label(code)
label(return)

newmem:

code:
  mov [rdi+rbx*4+0000117C],#999
  //mov [rdi+rbx*4+0000117C],eax
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 84 9F 7C 11 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+677982

"gamedll_x64_rwdi.dll"+677966: 48 8B 5C 24 58           -  mov rbx,[rsp+58]
"gamedll_x64_rwdi.dll"+67796B: 48 83 C4 20              -  add rsp,20
"gamedll_x64_rwdi.dll"+67796F: 41 5D                    -  pop r13
"gamedll_x64_rwdi.dll"+677971: 41 5C                    -  pop r12
"gamedll_x64_rwdi.dll"+677973: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+677974: C3                       -  ret 
"gamedll_x64_rwdi.dll"+677975: 44 3B E8                 -  cmp r13d,eax
"gamedll_x64_rwdi.dll"+677978: 44 0F 4F E8              -  cmovg r13d,eax
"gamedll_x64_rwdi.dll"+67797C: 41 2B C5                 -  sub eax,r13d
"gamedll_x64_rwdi.dll"+67797F: 45 8B E5                 -  mov r12d,r13d
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+677982: 89 84 9F 7C 11 00 00     -  mov [rdi+rbx*4+0000117C],eax
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+677989: 41 8B C5                 -  mov eax,r13d
"gamedll_x64_rwdi.dll"+67798C: 48 8B 5C 24 58           -  mov rbx,[rsp+58]
"gamedll_x64_rwdi.dll"+677991: 48 83 C4 20              -  add rsp,20
"gamedll_x64_rwdi.dll"+677995: 41 5D                    -  pop r13
"gamedll_x64_rwdi.dll"+677997: 41 5C                    -  pop r12
"gamedll_x64_rwdi.dll"+677999: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+67799A: C3                       -  ret 
"gamedll_x64_rwdi.dll"+67799B: 33 C0                    -  xor eax,eax
"gamedll_x64_rwdi.dll"+67799D: 48 8B 5C 24 58           -  mov rbx,[rsp+58]
"gamedll_x64_rwdi.dll"+6779A2: 48 83 C4 20              -  add rsp,20
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pBase</Name>
      <Address>0CEE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT2</Name>
      <Address> 7FF8688C4810</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address> 7FF8688AF3F5</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
