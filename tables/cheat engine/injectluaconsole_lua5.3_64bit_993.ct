<?xml version="1.0" encoding="utf-8"?>
<CheatTable>
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Lua 5.3 64bit"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,$1000,lua53-64.dll) // adjust dll name

label(lua_command)
registersymbol(lua_command)
label(lua_doIt)
registersymbol(lua_doIt)

label(return)
label(state)
label(top)
label(doLoadstringAndPcallk)
label(balanceluastack)

newmem:
  lea rax,[rdx-10]
  sar rax,04
  cmp byte ptr [lua_doIt],1
  je doLoadstringAndPcallk
  jmp return

doLoadstringAndPcallk:
  mov byte ptr [lua_doIt],0
  mov qword ptr [state],rcx
  mov qword ptr [top],rax

  push rdx
  push r8
  push r9
  push r10
  push r11 // if necessary, store more registers


  lea rsp,[rsp-30] // room for "shadow space" and for 5th and 6th parameter

  // RCX still good
  mov rdx,lua_command
  call luaL_loadstring
  test eax,eax
  jnz balanceluastack

  mov rcx,qword ptr [state]
  mov rdx,0
  mov r8d,-1
  mov r9d,0
  mov [rsp+28],0
  mov [rsp+20],0
  call lua_pcallk

balanceluastack:
  mov rcx,qword ptr [state]
  mov rdx,qword ptr [top]
  call lua_settop

  mov rax,qword ptr [top]
  mov rcx,qword ptr [state]

  lea rsp,[rsp+30]
  pop r11
  pop r10
  pop r9
  pop r8
  pop rdx
  jmp return

lua_doIt:
  db 0
state:
  dq 0
top:
  dq 0

lua_command:

lua_gettop+B:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]
lua_gettop+B:
  lea rax,[rdx-10]
  sar rax,04

unregistersymbol(lua_doIt)
unregistersymbol(lua_command)

dealloc(newmem)

//lua53-64.lua_gettop     - 48 8B 41 20     - mov rax,[rcx+20]
//lua53-64.lua_gettop+4   - 48 8B 51 10     - mov rdx,[rcx+10]
//lua53-64.lua_gettop+8   - 48 2B 10        - sub rdx,[rax]
//lua53-64.lua_gettop+B   - 48 8D 42 F0     - lea rax,[rdx-10]
//lua53-64.lua_gettop+F   - 48 C1 F8 04     - sar rax,04
//lua53-64.lua_gettop+13  - C3              - ret

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"test"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
lua_command:
db 'mySecretVar = 2 + 2',0

lua_doIt:
db 1

[DISABLE]

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
