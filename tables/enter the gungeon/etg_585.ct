<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Always 5 blue bullets"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(UseBlueBullets,89 86 74 02 00 00 * * * * * 8B 8E 74 02 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+00000274],5
  jmp return

UseBlueBullets:
  jmp code
  nop
return:
registersymbol(UseBlueBullets)

[DISABLE]

UseBlueBullets:
  db 89 86 74 02 00 00

unregistersymbol(UseBlueBullets)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 636FAD15

636FAD01: 83 C4 10              -  add esp,10
636FAD04: C9                    -  leave 
636FAD05: C3                    -  ret 
636FAD06: 00 00                 -  add [eax],al
636FAD08: 55                    -  push ebp
636FAD09: 8B EC                 -  mov ebp,esp
636FAD0B: 56                    -  push esi
636FAD0C: 83 EC 04              -  sub esp,04
636FAD0F: 8B 75 08              -  mov esi,[ebp+08]
636FAD12: 8B 45 0C              -  mov eax,[ebp+0C]
// ---------- INJECTING HERE ----------
636FAD15: 89 86 74 02 00 00     -  mov [esi+00000274],eax
// ---------- DONE INJECTING  ----------
636FAD1B: E8 30 6F AF A2        -  call 061F1C50
636FAD20: 8B 8E 74 02 00 00     -  mov ecx,[esi+00000274]
636FAD26: 51                    -  push ecx
636FAD27: DB 04 24              -  fild dword ptr [esp]
636FAD2A: D9 1C 24              -  fstp dword ptr [esp]
636FAD2D: D9 04 24              -  fld dword ptr [esp]
636FAD30: 83 C4 04              -  add esp,04
636FAD33: 83 EC 04              -  sub esp,04
636FAD36: 83 EC 04              -  sub esp,04
636FAD39: D9 1C 24              -  fstp dword ptr [esp]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Always 5 keys"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(UseKeys,8B 45 08 89 48 18 * * * * * 8B 4D 08) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,[ebp+08]
  mov [eax+18],5
  jmp return

UseKeys:
  jmp code
  nop
return:
registersymbol(UseKeys)

[DISABLE]

UseKeys:
  db 8B 45 08 89 48 18

unregistersymbol(UseKeys)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 5B2F0431

5B2F041F: 5E                 -  pop esi
5B2F0420: 5F                 -  pop edi
5B2F0421: C9                 -  leave
5B2F0422: C3                 -  ret
5B2F0423: 00 00              -  add [eax],al
5B2F0425: 00 00              -  add [eax],al
5B2F0427: 00 55 8B           -  add [ebp-75],dl
5B2F042A: EC                 -  in al,dx
5B2F042B: 83 EC 08           -  sub esp,08
5B2F042E: 8B 4D 0C           -  mov ecx,[ebp+0C]
// ---------- INJECTING HERE ----------
5B2F0431: 8B 45 08           -  mov eax,[ebp+08]
5B2F0434: 89 48 18           -  mov [eax+18],ecx
// ---------- DONE INJECTING  ----------
5B2F0437: E8 5C 1D DE AA     -  call 060D2198
5B2F043C: 8B 4D 08           -  mov ecx,[ebp+08]
5B2F043F: 8B 49 18           -  mov ecx,[ecx+18]
5B2F0442: 51                 -  push ecx
5B2F0443: DB 04 24           -  fild dword ptr [esp]
5B2F0446: D9 1C 24           -  fstp dword ptr [esp]
5B2F0449: D9 04 24           -  fld dword ptr [esp]
5B2F044C: 83 C4 04           -  add esp,04
5B2F044F: 83 EC 04           -  sub esp,04
5B2F0452: 83 EC 04           -  sub esp,04
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Infinite Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(InfAmmoAOB,0F B6 8E 9D 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,1
  jmp return

InfAmmoAOB:
  jmp code
  nop
  nop
return:
registersymbol(InfAmmoAOB)

[DISABLE]

InfAmmoAOB:
  db 0F B6 8E 9D 01 00 00

unregistersymbol(InfAmmoAOB)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Infinite Clip"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]


aobscan(InfClipAOB,89 48 14 8B 83 5C 01 00 00 83 EC 08 56) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+14],0
  mov eax,[ebx+0000015C]
  jmp return

InfClipAOB:
  jmp code
  nop
  nop
  nop
  nop
return:
registersymbol(InfClipAOB)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
InfClipAOB:
  db 89 48 14 8B 83 5C 01 00 00

unregistersymbol(InfClipAOB)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Rapid Fire"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat



aobscan(RapidFireAOB,C6 40 10 01 D9 EE) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov byte ptr [eax+10],00
  fldz
  jmp return

RapidFireAOB:
  jmp code
  nop
return:
registersymbol(RapidFireAOB)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
RapidFireAOB:
  db C6 40 10 01 D9 EE

unregistersymbol(RapidFireAOB)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
