<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"XsAndFoodSetTo20"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : 35MM.exe
  Version: 
  Date   : 2016-05-29
  Author : Darth

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscan(INJECTXFood,8B 4D 08 8B 49 2C 51) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,[ebp+08]
  mov [ecx+2C],#20  //move 20 into Food and Medicine
  mov ecx,[ecx+2C]
  jmp return

INJECTXFood:
  jmp code
  nop
return:
registersymbol(INJECTXFood)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECTXFood:
  db 8B 4D 08 8B 49 2C

unregistersymbol(INJECTXFood)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0449C8C8

0449C8AC: 83 EC 0C              -  sub esp,0C
0449C8AF: 50                    -  push eax
0449C8B0: 39 00                 -  cmp [eax],eax
0449C8B2: E8 09 65 FD FF        -  call 04472DC0
0449C8B7: 83 C4 10              -  add esp,10
0449C8BA: 83 EC 0C              -  sub esp,0C
0449C8BD: 50                    -  push eax
0449C8BE: 39 00                 -  cmp [eax],eax
0449C8C0: E8 FB 90 FD FF        -  call 044759C0
0449C8C5: 83 C4 10              -  add esp,10
// ---------- INJECTING HERE ----------
0449C8C8: 8B 4D 08              -  mov ecx,[ebp+08]
0449C8CB: 8B 49 2C              -  mov ecx,[ecx+2C]
// ---------- DONE INJECTING  ----------
0449C8CE: 51                    -  push ecx
0449C8CF: DB 04 24              -  fild dword ptr [esp]
0449C8D2: D9 1C 24              -  fstp dword ptr [esp]
0449C8D5: D9 04 24              -  fld dword ptr [esp]
0449C8D8: 83 C4 04              -  add esp,04
0449C8DB: 83 EC 04              -  sub esp,04
0449C8DE: 83 EC 04              -  sub esp,04
0449C8E1: D9 1C 24              -  fstp dword ptr [esp]
0449C8E4: 68 80 CE 2D 07        -  push 072DCE80
0449C8E9: 50                    -  push eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"BatteriesSetTo20"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : 35MM.exe
  Version: 
  Date   : 2016-05-29
  Author : Darth

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscan(INJECTBatteries,8B 4D 08 8B 49 30 51) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,[ebp+08]
  mov [ecx+30],#20  //move 20 into batteries
  mov ecx,[ecx+30]
  jmp return

INJECTBatteries:
  jmp code
  nop
return:
registersymbol(INJECTBatteries)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECTBatteries:
  db 8B 4D 08 8B 49 30

unregistersymbol(INJECTBatteries)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 044ECCF0

044ECCD4: 83 EC 0C                       -  sub esp,0C
044ECCD7: 50                             -  push eax
044ECCD8: 39 00                          -  cmp [eax],eax
044ECCDA: E8 E1 60 FD FF                 -  call 044C2DC0
044ECCDF: 83 C4 10                       -  add esp,10
044ECCE2: 83 EC 0C                       -  sub esp,0C
044ECCE5: 50                             -  push eax
044ECCE6: 39 00                          -  cmp [eax],eax
044ECCE8: E8 D3 8C FD FF                 -  call 044C59C0
044ECCED: 83 C4 10                       -  add esp,10
// ---------- INJECTING HERE ----------
044ECCF0: 8B 4D 08                       -  mov ecx,[ebp+08]
044ECCF3: 8B 49 30                       -  mov ecx,[ecx+30]
// ---------- DONE INJECTING  ----------
044ECCF6: 51                             -  push ecx
044ECCF7: DB 04 24                       -  fild dword ptr [esp]
044ECCFA: D9 1C 24                       -  fstp dword ptr [esp]
044ECCFD: D9 04 24                       -  fld dword ptr [esp]
044ECD00: 83 C4 04                       -  add esp,04
044ECD03: 83 EC 04                       -  sub esp,04
044ECD06: 83 EC 04                       -  sub esp,04
044ECD09: D9 1C 24                       -  fstp dword ptr [esp]
044ECD0C: 68 80 DE AC 07                 -  push 07ACDE80
044ECD11: 50                             -  push eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"CharacterDataLocation"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : 35MM.exe
  Version: 
  Date   : 2016-05-29
  Author : Darth

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscan(INJECTStamina,D9 87 F4 00 00 00 33) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
registersymbol(CharDataLocation)
label(CharDataLocation)
newmem:

code:
  fld dword ptr [edi+000000F4]
  mov [CharDataLocation],edi
  jmp return

CharDataLocation:
dd 00

INJECTStamina:
  jmp code
  nop
return:
registersymbol(INJECTStamina)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECTStamina:
  db D9 87 F4 00 00 00

unregistersymbol(CharDataLocation)
unregistersymbol(INJECTStamina)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 044E4489

044E445E: D9 05 E8 9B BD 0E     -  fld dword ptr [0EBD9BE8]
044E4464: DD 9D F0 FC FF FF     -  fstp qword ptr [ebp-00000310]
044E446A: E8 11 34 FF FF        -  call 044D7880
044E446F: DD 85 F8 FC FF FF     -  fld qword ptr [ebp-00000308]
044E4475: DD 85 F0 FC FF FF     -  fld qword ptr [ebp-00000310]
044E447B: D9 C9                 -  fxch st(1)
044E447D: D9 CA                 -  fxch st(2)
044E447F: DE C9                 -  fmulp st(1),st(0)
044E4481: DE C1                 -  faddp 
044E4483: D9 9F F4 00 00 00     -  fstp dword ptr [edi+000000F4]
// ---------- INJECTING HERE ----------
044E4489: D9 87 F4 00 00 00     -  fld dword ptr [edi+000000F4]
// ---------- DONE INJECTING  ----------
044E448F: 33 C0                 -  xor eax,eax
044E4491: 50                    -  push eax
044E4492: DB 04 24              -  fild dword ptr [esp]
044E4495: D9 1C 24              -  fstp dword ptr [esp]
044E4498: D9 04 24              -  fld dword ptr [esp]
044E449B: 83 C4 04              -  add esp,04
044E449E: DF F1                 -  fcomip st(0),st(1)
044E44A0: DD D8                 -  fstp st(0)
044E44A2: 7A 06                 -  jp 044E44AA
044E44A4: 0F 82 5A 00 00 00     -  jb 044E4504
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"StartOfCharacterData"</Description>
          <LastState Value="246835416" RealAddress="09FBACC0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>CharDataLocation</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"CharacterWalkSpeed"</Description>
          <LastState Value="3" RealAddress="09FBADA8"/>
          <VariableType>Float</VariableType>
          <Address>CharDataLocation</Address>
          <Offsets>
            <Offset>E8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"CharacterRunSpeed"</Description>
          <LastState Value="9" RealAddress="09FBADAC"/>
          <VariableType>Float</VariableType>
          <Address>CharDataLocation</Address>
          <Offsets>
            <Offset>EC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"CharacterStamina"</Description>
          <LastState Value="10.00574398" RealAddress="09FBADB4"/>
          <VariableType>Float</VariableType>
          <Address>CharDataLocation</Address>
          <Offsets>
            <Offset>F4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"CameraTurnSpeed"</Description>
          <LastState Value="0.5" RealAddress="09FBADBC"/>
          <VariableType>Float</VariableType>
          <Address>CharDataLocation</Address>
          <Offsets>
            <Offset>FC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"FlashlightPower"</Description>
          <LastState Value="99.9993515" RealAddress="09FBADD0"/>
          <VariableType>Float</VariableType>
          <Address>CharDataLocation</Address>
          <Offsets>
            <Offset>110</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"CharacterHealth?"</Description>
          <LastState Value="99.39910889" RealAddress="09FBADD4"/>
          <VariableType>Float</VariableType>
          <Address>CharDataLocation</Address>
          <Offsets>
            <Offset>114</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"X's"</Description>
          <LastState Value="20" RealAddress="02E3572C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>CharDataLocation</Address>
          <Offsets>
            <Offset>2C</Offset>
            <Offset>A4</Offset>
            <Offset>258</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Food"</Description>
          <LastState Value="20" RealAddress="02E354FC"/>
          <VariableType>4 Bytes</VariableType>
          <Address>CharDataLocation</Address>
          <Offsets>
            <Offset>2C</Offset>
            <Offset>A8</Offset>
            <Offset>258</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Batteries"</Description>
          <LastState Value="20" RealAddress="02E35688"/>
          <VariableType>4 Bytes</VariableType>
          <Address>CharDataLocation</Address>
          <Offsets>
            <Offset>30</Offset>
            <Offset>AC</Offset>
            <Offset>258</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"PistolAmmoSetTo8"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : 35MM.exe
  Version: 
  Date   : 2016-05-29
  Author : Darth

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscan(INJECTPistolAmmo,8B 87 90 00 00 00 3D 01 00 00 00 0F 8C 80) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [edi+00000090],#8  //move 8 into ammo
  mov eax,[edi+00000090]
  jmp return

INJECTPistolAmmo:
  jmp code
  nop
return:
registersymbol(INJECTPistolAmmo)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECTPistolAmmo:
  db 8B 87 90 00 00 00

unregistersymbol(INJECTPistolAmmo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 044EAB9A

044EAB7A: 83 C4 10              -  add esp,10
044EAB7D: 83 EC 08              -  sub esp,08
044EAB80: 50                    -  push eax
044EAB81: 57                    -  push edi
044EAB82: 39 3F                 -  cmp [edi],edi
044EAB84: E8 77 90 FC FF        -  call 044B3C00
044EAB89: 83 C4 10              -  add esp,10
044EAB8C: 8B 87 8C 00 00 00     -  mov eax,[edi+0000008C]
044EAB92: 85 C0                 -  test eax,eax
044EAB94: 0F 8C 91 06 00 00     -  jl 044EB22B
// ---------- INJECTING HERE ----------
044EAB9A: 8B 87 90 00 00 00     -  mov eax,[edi+00000090]
// ---------- DONE INJECTING  ----------
044EABA0: 3D 01 00 00 00        -  cmp eax,00000001
044EABA5: 0F 8C 80 06 00 00     -  jl 044EB22B
044EABAB: 0F B6 87 8A 00 00 00  -  movzx eax,byte ptr [edi+0000008A]
044EABB2: 3D 01 00 00 00        -  cmp eax,00000001
044EABB7: 0F 85 6E 06 00 00     -  jne 044EB22B
044EABBD: 83 EC 0C              -  sub esp,0C
044EABC0: 6A 00                 -  push 00
044EABC2: E8 49 BD FC FF        -  call 044B6910
044EABC7: 83 C4 10              -  add esp,10
044EABCA: 85 C0                 -  test eax,eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"AssaultRifleAmmoSetTo30"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : 35MM.exe
  Version: 
  Date   : 2016-05-30
  Author : Darth

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscan(INJECTAssaultRifleAmmo,8B 87 84 00 00 00 3D 01 00 00 00 0F) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [edi+00000084],#30  //move 30 into assaultRifle
  mov eax,[edi+00000084]
  jmp return

INJECTAssaultRifleAmmo:
  jmp code
  nop
return:
registersymbol(INJECTAssaultRifleAmmo)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECTAssaultRifleAmmo:
  db 8B 87 84 00 00 00

unregistersymbol(INJECTAssaultRifleAmmo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 044EA216

044EA1FC: 50                    -  push eax
044EA1FD: 8B 00                 -  mov eax,[eax]
044EA1FF: 90                    -  nop 
044EA200: 90                    -  nop 
044EA201: 90                    -  nop 
044EA202: FF 50 48              -  call dword ptr [eax+48]
044EA205: 83 C4 10              -  add esp,10
044EA208: 8B 87 80 00 00 00     -  mov eax,[edi+00000080]
044EA20E: 85 C0                 -  test eax,eax
044EA210: 0F 8C 1D 09 00 00     -  jl 044EAB33
// ---------- INJECTING HERE ----------
044EA216: 8B 87 84 00 00 00     -  mov eax,[edi+00000084]
// ---------- DONE INJECTING  ----------
044EA21C: 3D 01 00 00 00        -  cmp eax,00000001
044EA221: 0F 8C 0C 09 00 00     -  jl 044EAB33
044EA227: 0F B6 47 7D           -  movzx eax,byte ptr [edi+7D]
044EA22B: 3D 01 00 00 00        -  cmp eax,00000001
044EA230: 0F 85 FD 08 00 00     -  jne 044EAB33
044EA236: 83 EC 0C              -  sub esp,0C
044EA239: 6A 00                 -  push 00
044EA23B: E8 D0 C6 FC FF        -  call 044B6910
044EA240: 83 C4 10              -  add esp,10
044EA243: 85 C0                 -  test eax,eax
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>CharDataLocation</Name>
      <Address>04940011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTStamina</Name>
      <Address> 046343F9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTXFood</Name>
      <Address> 0462C8C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTBatteries</Name>
      <Address> 0462CCF0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTPistolAmmo</Name>
      <Address> 0462AB0A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECTAssaultRifleAmmo</Name>
      <Address> 0462A186</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
