<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"SUPER JUMP"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : JumpixJump.exe
  Version: 
  Date   : 2016-01-23
  Author : METHOS

  This script does blah blah blah
}

{ Game   : JumpixJump.exe
  Version: 
  Date   : 2016-01-23
  Author : METHOS

  This script does blah blah blah
}

{ Game   : JumpixJump.exe
  Version: 
  Date   : 2016-01-23
  Author : METHOS

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,JumpixJump.exe,F3 0F 10 86 C0 00 00 00 F3 0F 11) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(coordinates_base)

registersymbol(coordinates_base)

newmem:

code:
push edi
lea edi,[esi]
mov [coordinates_base],edi
pop edi
  movss xmm0,[esi+000000C0]
  jmp return

coordinates_base:
dd 0

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

aobscanmodule(AOB_SPACEBAR,JumpixJump.exe,85 3C 02 0F 95 C2 0A CA 75 37 8B 7E 64) // should be unique
alloc(newmem2,$1000)

label(code2)
label(return2)
label(spacebar)
label(spacebar_address)

registersymbol(spacebar_address)

newmem2:

code2:
push ebx
lea ebx,[edx]
cmp ebx,4
pop ebx
je spacebar
  test [edx+eax],edi
  setne dl
  jmp return2

spacebar:
push ebx
mov ebx,[edx+eax]
mov [spacebar_address],ebx
pop ebx
  test [edx+eax],edi
  setne dl
  jmp return2

spacebar_address:
dd 0

AOB_SPACEBAR:
  jmp code2
  nop
return2:
registersymbol(AOB_SPACEBAR)

aobscanmodule(AOB_SUPERJUMP,JumpixJump.exe,F3 0F 11 50 44 F3 0F 11 58 48 50) // should be unique
alloc(newmem5,$1000)

label(code5)
label(return5)

newmem5:

code5:
cmp [spacebar_address],1
je return5
  movss [eax+44],xmm2
  jmp return5

AOB_SUPERJUMP:
  jmp code5
return5:
registersymbol(AOB_SUPERJUMP)

[DISABLE]

INJECT:
  db F3 0F 10 86 C0 00 00 00

unregistersymbol(INJECT)
unregistersymbol(coordinates_base)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "JumpixJump.exe"+9DBFFE

"JumpixJump.exe"+9DBFC3: F3 0F 10 45 C0                 -  movss xmm0,[ebp-40]
"JumpixJump.exe"+9DBFC8: F3 0F 11 45 A4                 -  movss [ebp-5C],xmm0
"JumpixJump.exe"+9DBFCD: F3 0F 10 45 C4                 -  movss xmm0,[ebp-3C]
"JumpixJump.exe"+9DBFD2: EB 4C                          -  jmp JumpixJump.exe+9DC020
"JumpixJump.exe"+9DBFD4: F3 0F 10 86 B0 00 00 00        -  movss xmm0,[esi+000000B0]
"JumpixJump.exe"+9DBFDC: F3 0F 10 AE B8 00 00 00        -  movss xmm5,[esi+000000B8]
"JumpixJump.exe"+9DBFE4: F3 0F 10 A6 B4 00 00 00        -  movss xmm4,[esi+000000B4]
"JumpixJump.exe"+9DBFEC: F3 0F 11 45 90                 -  movss [ebp-70],xmm0
"JumpixJump.exe"+9DBFF1: F3 0F 10 86 BC 00 00 00        -  movss xmm0,[esi+000000BC]
"JumpixJump.exe"+9DBFF9: F3 0F 11 45 9C                 -  movss [ebp-64],xmm0
// ---------- INJECTING HERE ----------
"JumpixJump.exe"+9DBFFE: F3 0F 10 86 C0 00 00 00        -  movss xmm0,[esi+000000C0]
// ---------- DONE INJECTING  ----------
"JumpixJump.exe"+9DC006: F3 0F 11 45 A0                 -  movss [ebp-60],xmm0
"JumpixJump.exe"+9DC00B: F3 0F 10 86 C4 00 00 00        -  movss xmm0,[esi+000000C4]
"JumpixJump.exe"+9DC013: F3 0F 11 45 A4                 -  movss [ebp-5C],xmm0
"JumpixJump.exe"+9DC018: F3 0F 10 86 C8 00 00 00        -  movss xmm0,[esi+000000C8]
"JumpixJump.exe"+9DC020: 8B 7D 0C                       -  mov edi,[ebp+0C]
"JumpixJump.exe"+9DC023: 8B 47 04                       -  mov eax,[edi+04]
"JumpixJump.exe"+9DC026: F3 0F 11 65 94                 -  movss [ebp-6C],xmm4
"JumpixJump.exe"+9DC02B: F3 0F 11 6D 98                 -  movss [ebp-68],xmm5
"JumpixJump.exe"+9DC030: F3 0F 11 45 A8                 -  movss [ebp-58],xmm0
"JumpixJump.exe"+9DC035: A8 04                          -  test al,04
}
AOB_SPACEBAR:
  db 85 3C 02 0F 95 C2

unregistersymbol(AOB_SPACEBAR)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "JumpixJump.exe"+1D2CDA

"JumpixJump.exe"+1D2CBE: 8B D7                    -  mov edx,edi
"JumpixJump.exe"+1D2CC0: C1 EA 05                 -  shr edx,05
"JumpixJump.exe"+1D2CC3: 03 D2                    -  add edx,edx
"JumpixJump.exe"+1D2CC5: BF 01 00 00 00           -  mov edi,00000001
"JumpixJump.exe"+1D2CCA: D3 E7                    -  shl edi,cl
"JumpixJump.exe"+1D2CCC: 8B 48 3C                 -  mov ecx,[eax+3C]
"JumpixJump.exe"+1D2CCF: 8B 40 2C                 -  mov eax,[eax+2C]
"JumpixJump.exe"+1D2CD2: 03 D2                    -  add edx,edx
"JumpixJump.exe"+1D2CD4: 85 3C 0A                 -  test [edx+ecx],edi
"JumpixJump.exe"+1D2CD7: 0F 95 C1                 -  setne cl
// ---------- INJECTING HERE ----------
"JumpixJump.exe"+1D2CDA: 85 3C 02                 -  test [edx+eax],edi
"JumpixJump.exe"+1D2CDD: 0F 95 C2                 -  setne dl
// ---------- DONE INJECTING  ----------
"JumpixJump.exe"+1D2CE0: 0A CA                    -  or cl,dl
"JumpixJump.exe"+1D2CE2: 75 37                    -  jne JumpixJump.exe+1D2D1B
"JumpixJump.exe"+1D2CE4: 8B 7E 64                 -  mov edi,[esi+64]
"JumpixJump.exe"+1D2CE7: E8 74 06 00 00           -  call JumpixJump.exe+1D3360
"JumpixJump.exe"+1D2CEC: 8B CF                    -  mov ecx,edi
"JumpixJump.exe"+1D2CEE: 83 E1 1F                 -  and ecx,1F
"JumpixJump.exe"+1D2CF1: 8B D7                    -  mov edx,edi
"JumpixJump.exe"+1D2CF3: C1 EA 05                 -  shr edx,05
"JumpixJump.exe"+1D2CF6: 03 D2                    -  add edx,edx
"JumpixJump.exe"+1D2CF8: BF 01 00 00 00           -  mov edi,00000001
}
AOB_SUPERJUMP:
  db F3 0F 11 50 44

unregistersymbol(AOB_SUPERJUMP)
dealloc(newmem5)

{
// ORIGINAL CODE - INJECTION POINT: "JumpixJump.exe"+942167

"JumpixJump.exe"+942145: F3 0F 51 C7        -  sqrtss xmm0,xmm7
"JumpixJump.exe"+942149: 0F 28 F8           -  movaps xmm7,xmm0
"JumpixJump.exe"+94214C: F3 0F 59 FC        -  mulss xmm7,xmm4
"JumpixJump.exe"+942150: 0F 28 E7           -  movaps xmm4,xmm7
"JumpixJump.exe"+942153: F3 0F 59 E8        -  mulss xmm5,xmm0
"JumpixJump.exe"+942157: F3 0F 59 F0        -  mulss xmm6,xmm0
"JumpixJump.exe"+94215B: 8B 4F FC           -  mov ecx,[edi-04]
"JumpixJump.exe"+94215E: 8B 55 FC           -  mov edx,[ebp-04]
"JumpixJump.exe"+942161: 51                 -  push ecx
"JumpixJump.exe"+942162: F3 0F 11 48 40     -  movss [eax+40],xmm1
// ---------- INJECTING HERE ----------
"JumpixJump.exe"+942167: F3 0F 11 50 44     -  movss [eax+44],xmm2
// ---------- DONE INJECTING  ----------
"JumpixJump.exe"+94216C: F3 0F 11 58 48     -  movss [eax+48],xmm3
"JumpixJump.exe"+942171: 50                 -  push eax
"JumpixJump.exe"+942172: F3 0F 11 60 50     -  movss [eax+50],xmm4
"JumpixJump.exe"+942177: F3 0F 11 68 54     -  movss [eax+54],xmm5
"JumpixJump.exe"+94217C: F3 0F 11 70 58     -  movss [eax+58],xmm6
"JumpixJump.exe"+942181: 52                 -  push edx
"JumpixJump.exe"+942182: 8D 46 E4           -  lea eax,[esi-1C]
"JumpixJump.exe"+942185: 50                 -  push eax
"JumpixJump.exe"+942186: E8 F5 16 09 00     -  call JumpixJump.exe+9D3880
"JumpixJump.exe"+94218B: 8B 45 E0           -  mov eax,[ebp-20]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"X"</Description>
          <VariableType>Float</VariableType>
          <Address>coordinates_base</Address>
          <Offsets>
            <Offset>C0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Y"</Description>
          <VariableType>Float</VariableType>
          <Address>coordinates_base</Address>
          <Offsets>
            <Offset>C4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Z"</Description>
          <VariableType>Float</VariableType>
          <Address>coordinates_base</Address>
          <Offsets>
            <Offset>C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"SPACEBAR"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>spacebar_address</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>spacebar_address</Name>
      <Address>00E7102E</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
