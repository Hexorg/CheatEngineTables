<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <Forms>
    <UDF1 Class="TCEForm" Encoding="Ascii85">d(t1R5E9@Kz#ii4;Xu*W%M$A1X2^{]npVQBz^uv2nwg$a!u*{OIV8V.DTFmVGo;Vh+?2PWIkBK5Ge3[FtenR:Co=s#1g?AH!iOp5?XvEDN:,/DW#/Cf0AVw50xfhZEh*++/AgCF[A*s]tz{98,o{V#@$r8vR*h_ApxHT?$:U3Da3L[CBP21(zbGZOhzaOF1@?</UDF1>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>12</ID>
      <Description>"] slows game"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
LUACALL(speedhack_setSpeed(0.5))

[Disable]
LUACALL(speedhack_setSpeed(1.0))
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>221</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Create Time Pointer (TimePointer)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
alloc(TimePointer,4)
registersymbol(TimePointer)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [TimePointer],02815434

originalcode:
mov eax,[02815434]

exit:
jmp returnhere

StardewValley.Menus.DayTimeMoneyBox::draw+851:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(TimePointer)
dealloc(TimePointer)
dealloc(newmem)
StardewValley.Menus.DayTimeMoneyBox::draw+851:
mov eax,[02815434]
//Alt: db A1 34 54 81 02
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"TimePointer"</Description>
          <LastState Value="02815434" Activated="0" RealAddress="0BD60800"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>TimePointer</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Time"</Description>
          <LastState Value="2200" Activated="1" RealAddress="02815434"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>TimePointer</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Create Player Pointer (PlayerPointer)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
alloc(PlayerPointer,4)
registersymbol(PlayerPointer)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [PlayerPointer],eax

originalcode:
fld dword ptr [eax+00000230]

exit:
jmp returnhere

StardewValley.Game1::drawHUD+BC1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(PlayerPointer)
dealloc(PlayerPointer,4)
dealloc(newmem)
StardewValley.Game1::drawHUD+BC1:
fld dword ptr [eax+00000230]
//Alt: db D9 80 30 02 00 00
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>19</ID>
          <Description>"PlayerPointer"</Description>
          <LastState Value="03F0F120" Activated="0" RealAddress="0A6F0800"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>PlayerPointer</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Energy"</Description>
          <LastState Value="210" Activated="0" RealAddress="03F0F350"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>PlayerPointer</Address>
          <Offsets>
            <Offset>230</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Money"</Description>
          <LastState Value="6733" Activated="0" RealAddress="03F0F378"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>PlayerPointer</Address>
          <Offsets>
            <Offset>258</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Health"</Description>
          <LastState Value="105" Activated="0" RealAddress="03F0F3BC"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>PlayerPointer</Address>
          <Offsets>
            <Offset>29C</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>82</Key>
              </Keys>
              <Value>105</Value>
              <Description>set health to 100</Description>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"Create Fish Pointer (FishPointer)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
alloc(FishPointer,4)
registersymbol(FishPointer)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [FishPointer],ebx

originalcode:
fadd dword ptr [ebx+34]
sub esp,04

exit:
jmp returnhere

0A8E141B:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(FishPointer)
dealloc(FishPointer)
dealloc(newmem)
0A8E141B:
fadd dword ptr [ebx+34]
sub esp,04
//Alt: db D8 43 34 83 EC 04
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>27</ID>
          <Description>"FishPointer"</Description>
          <LastState Value="124E08A8" Activated="0" RealAddress="0BD20800"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>FishPointer</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Fish Location"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">500:Easy Fishing
</DropDownList>
          <LastState Value="500" Activated="1" RealAddress="124E08DC"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>FishPointer</Address>
          <Offsets>
            <Offset>34</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Fish Bar/Timer"</Description>
          <LastState Value="0" Activated="0" RealAddress="124E0934"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>FishPointer</Address>
          <Offsets>
            <Offset>8C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov eax,[02815434] - reads time</Description>
      <Address>0A19EAC1</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>E7</Byte>
        <Byte>19</Byte>
        <Byte>9E</Byte>
        <Byte>F9</Byte>
      </Before>
      <Actual>
        <Byte>A1</Byte>
        <Byte>34</Byte>
        <Byte>54</Byte>
        <Byte>81</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>BE</Byte>
        <Byte>64</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[02815434] - reads time</Description>
      <Address>0A19EAF7</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>89</Byte>
        <Byte>45</Byte>
        <Byte>EC</Byte>
      </Before>
      <Actual>
        <Byte>A1</Byte>
        <Byte>34</Byte>
        <Byte>54</Byte>
        <Byte>81</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>B9</Byte>
        <Byte>64</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[02815434] - reads time</Description>
      <Address>0A19F788</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>B8</Byte>
        <Byte>D5</Byte>
        <Byte>EE</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>A1</Byte>
        <Byte>34</Byte>
        <Byte>54</Byte>
        <Byte>81</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>15</Byte>
        <Byte>34</Byte>
        <Byte>54</Byte>
        <Byte>81</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov edx,[02815434] - reads time</Description>
      <Address>0A19F78D</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>A1</Byte>
        <Byte>34</Byte>
        <Byte>54</Byte>
        <Byte>81</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>15</Byte>
        <Byte>34</Byte>
        <Byte>54</Byte>
        <Byte>81</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>BE</Byte>
        <Byte>64</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :cmp [02815434],0000076C - reads time</Description>
      <Address>0A497847</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>0C</Byte>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>81</Byte>
        <Byte>3D</Byte>
        <Byte>34</Byte>
        <Byte>54</Byte>
        <Byte>81</Byte>
        <Byte>02</Byte>
        <Byte>6C</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>7D</Byte>
        <Byte>1D</Byte>
        <Byte>8B</Byte>
        <Byte>85</Byte>
        <Byte>40</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :cmp [02815434],0000076C - reads time</Description>
      <Address>0A497C5D</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>5B</Byte>
        <Byte>C6</Byte>
        <Byte>BE</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>81</Byte>
        <Byte>3D</Byte>
        <Byte>34</Byte>
        <Byte>54</Byte>
        <Byte>81</Byte>
        <Byte>02</Byte>
        <Byte>6C</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>8C</Byte>
        <Byte>BE</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :push [eax+00000258] - reads money</Description>
      <Address>08B30677</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>A1</Byte>
        <Byte>04</Byte>
        <Byte>37</Byte>
        <Byte>E9</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>B0</Byte>
        <Byte>58</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>30</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+00000230] - reads energy</Description>
      <Address>0A19A019</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>A1</Byte>
        <Byte>04</Byte>
        <Byte>37</Byte>
        <Byte>E9</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>80</Byte>
        <Byte>30</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>A1</Byte>
        <Byte>04</Byte>
        <Byte>37</Byte>
        <Byte>E9</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [ebx+0000008C] - fish timer</Description>
      <Address>0A8E0E7A</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>C1</Byte>
        <Byte>7C</Byte>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>83</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>E8</Byte>
        <Byte>DE</Byte>
        <Byte>E1</Byte>
        <Byte>D8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [ebx+0000008C] - fish timer</Description>
      <Address>0A8E0EA3</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>10</Byte>
        <Byte>04</Byte>
        <Byte>50</Byte>
        <Byte>6A</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>83</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>0D</Byte>
        <Byte>B8</Byte>
        <Byte>18</Byte>
        <Byte>8E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :push [ebx+0000008C] - fish timer</Description>
      <Address>0A8E0EEC</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>D6</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>B3</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>09</Byte>
        <Byte>BB</Byte>
        <Byte>8B</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fadd dword ptr [ebx+34] - constantly reads fish loc</Description>
      <Address>0A8E141B</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>A0</Byte>
        <Byte>FB</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D8</Byte>
        <Byte>43</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>04</Byte>
        <Byte>D9</Byte>
        <Byte>1C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E1E75</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>60</Byte>
        <Byte>40</Byte>
        <Byte>D9</Byte>
        <Byte>E1</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fsub dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E1EB7</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>D8</Byte>
        <Byte>60</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>DD</Byte>
        <Byte>9D</Byte>
        <Byte>5C</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fadd dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E217D</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>40</Byte>
        <Byte>38</Byte>
        <Byte>D8</Byte>
        <Byte>40</Byte>
        <Byte>4C</Byte>
      </Before>
      <Actual>
        <Byte>D8</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>58</Byte>
        <Byte>34</Byte>
        <Byte>D9</Byte>
        <Byte>40</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fstp dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E2180</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>40</Byte>
        <Byte>4C</Byte>
        <Byte>D8</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>58</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
        <Byte>D9</Byte>
        <Byte>05</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E2183</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>40</Byte>
        <Byte>34</Byte>
        <Byte>D9</Byte>
        <Byte>58</Byte>
        <Byte>34</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>05</Byte>
        <Byte>20</Byte>
        <Byte>31</Byte>
        <Byte>8E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E21A9</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>EE</Byte>
        <Byte>DF</Byte>
        <Byte>F1</Byte>
        <Byte>DD</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E21C7</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>05</Byte>
        <Byte>28</Byte>
        <Byte>31</Byte>
        <Byte>8E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E21FB</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>25</Byte>
        <Byte>38</Byte>
        <Byte>31</Byte>
        <Byte>8E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E2238</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>88</Byte>
        <Byte>50</Byte>
        <Byte>22</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>48</Byte>
        <Byte>60</Byte>
        <Byte>F7</Byte>
        <Byte>D9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E2C9B</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>80</Byte>
        <Byte>80</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E3045</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>EE</Byte>
        <Byte>DF</Byte>
        <Byte>F1</Byte>
        <Byte>DD</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E3063</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>05</Byte>
        <Byte>40</Byte>
        <Byte>32</Byte>
        <Byte>8E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E207A</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>95</Byte>
        <Byte>78</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E1D26</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>2D</Byte>
        <Byte>C0</Byte>
        <Byte>30</Byte>
        <Byte>8E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E1D32</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>8E</Byte>
        <Byte>0A</Byte>
        <Byte>D9</Byte>
        <Byte>5D</Byte>
        <Byte>F0</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>5D</Byte>
        <Byte>EC</Byte>
        <Byte>68</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :fld dword ptr [eax+34] - changes fish</Description>
      <Address>0A8E1D95</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>50</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>40</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>45</Byte>
        <Byte>F0</Byte>
        <Byte>DD</Byte>
        <Byte>9D</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <LuaScript>toggleSpeed=0
SetHotKey(togglespeed, VK_INSERT)
function togglespeed(sender)
  if toggleSpeed ~= 1 then
      speedhack_setSpeed(0.5)
      toggleSpeed=1;
  else
      speedhack_setSpeed(1)
      toggleSpeed=0;
  end
end

function SetHotKey(func, hotkey)
   local objectHotKey =  createHotkey(func, hotkey)
   generichotkey_setKeys(objectHotKey, hotkey)
   generichotkey_onHotkey(objectHotKey, func)
end
</LuaScript>
</CheatTable>
