<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>149</ID>
      <Description>"Health (v3.1.4.41219)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 2.1.4.41219
  Date   : 2016-03-21
  Updated by: DaHacker878
  Author : Dark

  This script gives your units 0 Damage Taken.
}

[ENABLE]

aobscanmodule(Health,SC2_x64.exe,89 B5 98 01 00 00 89 8C) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+5CC22D)

label(code)
label(return)

newmem:
  cmp byte ptr[rbp+00000042],1
  jne code
  mov esi,0

code:
  mov [rbp+00000198],esi
  jmp return

Health:
  jmp newmem
  nop
return:
registersymbol(Health)

[DISABLE]

Health:
  db 89 B5 98 01 00 00

unregistersymbol(Health)
dealloc(newmem)

{
//ORIGINAL CODE for v2.1.4.41219 - INJECTION POINT: "SC2_x64.exe"+5CC22D

SC2_x64.exe+5CC205 - 48 8D 8C 24 D0000000  - lea rcx,[rsp+000000D0]
SC2_x64.exe+5CC20D - EB 16                 - jmp SC2_x64.exe+5CC225
SC2_x64.exe+5CC20F - 48 8D 8C 24 D8000000  - lea rcx,[rsp+000000D8]
SC2_x64.exe+5CC217 - 48 8D 94 24 E0000000  - lea rdx,[rsp+000000E0]
SC2_x64.exe+5CC21F - 3B C7                 - cmp eax,edi
SC2_x64.exe+5CC221 - 48 0F4E CA            - cmovle rcx,rdx
SC2_x64.exe+5CC225 - 8B F7                 - mov esi,edi
SC2_x64.exe+5CC227 - 2B 31                 - sub esi,[rcx]
SC2_x64.exe+5CC229 - 8B CF                 - mov ecx,edi
SC2_x64.exe+5CC22B - 2B C8                 - sub ecx,eax
// ---------- INJECTING HERE ----------
SC2_x64.exe+5CC22D - 89 B5 98010000        - mov [rbp+00000198],esi
// ---------- DONE INJECTING  ----------
SC2_x64.exe+5CC233 - 89 8C 24 88000000     - mov [rsp+00000088],ecx
SC2_x64.exe+5CC23A - 3B F3                 - cmp esi,ebx
SC2_x64.exe+5CC23C - 74 24                 - je SC2_x64.exe+5CC262
SC2_x64.exe+5CC23E - 8B D3                 - mov edx,ebx
SC2_x64.exe+5CC240 - C6 44 24 30 01        - mov byte ptr [rsp+30],01 [ 1 ]
SC2_x64.exe+5CC245 - 44 8B CF              - mov r9d,edi
SC2_x64.exe+5CC248 - 44 8B C3              - mov r8d,ebx
SC2_x64.exe+5CC24B - 48 8B CD              - mov rcx,rbp
SC2_x64.exe+5CC24E - 2B D6                 - sub edx,esi
SC2_x64.exe+5CC250 - C7 44 24 28 01000000  - mov [rsp+28],00000001 [ 1 ]


//ORIGINAL CODE for v2.1.2.40384 - INJECTION POINT: "SC2_x64.exe"+5C6A7D

"SC2_x64.exe"+5C6A55: 48 8D 8C 24 D0 00 00 00  -  lea rcx,[rsp+000000D0]
"SC2_x64.exe"+5C6A5D: EB 16                    -  jmp SC2_x64.exe+5C6A75
"SC2_x64.exe"+5C6A5F: 48 8D 8C 24 D8 00 00 00  -  lea rcx,[rsp+000000D8]
"SC2_x64.exe"+5C6A67: 48 8D 94 24 E0 00 00 00  -  lea rdx,[rsp+000000E0]
"SC2_x64.exe"+5C6A6F: 3B C7                    -  cmp eax,edi
"SC2_x64.exe"+5C6A71: 48 0F 4E CA              -  cmovle rcx,rdx
"SC2_x64.exe"+5C6A75: 8B F7                    -  mov esi,edi
"SC2_x64.exe"+5C6A77: 2B 31                    -  sub esi,[rcx]
"SC2_x64.exe"+5C6A79: 8B CF                    -  mov ecx,edi
"SC2_x64.exe"+5C6A7B: 2B C8                    -  sub ecx,eax
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+5C6A7D: 89 B5 98 01 00 00        -  mov [rbp+00000198],esi
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+5C6A83: 89 8C 24 88 00 00 00     -  mov [rsp+00000088],ecx
"SC2_x64.exe"+5C6A8A: 3B F3                    -  cmp esi,ebx
"SC2_x64.exe"+5C6A8C: 74 24                    -  je SC2_x64.exe+5C6AB2
"SC2_x64.exe"+5C6A8E: 8B D3                    -  mov edx,ebx
"SC2_x64.exe"+5C6A90: C6 44 24 30 01           -  mov byte ptr [rsp+30],01
"SC2_x64.exe"+5C6A95: 44 8B CF                 -  mov r9d,edi
"SC2_x64.exe"+5C6A98: 44 8B C3                 -  mov r8d,ebx
"SC2_x64.exe"+5C6A9B: 48 8B CD                 -  mov rcx,rbp
"SC2_x64.exe"+5C6A9E: 2B D6                    -  sub edx,esi
"SC2_x64.exe"+5C6AA0: C7 44 24 28 01 00 00 00  -  mov [rsp+28],00000001
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>152</ID>
      <Description>"Energy (v3.1.4.41219)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 3.1.4.41219
  Date   : 2016-03-21
  Updated by: DaHacker878
  Author : Dark

  This script gives all your units 200 Energy.
}

[ENABLE]

aobscanmodule(Energy,SC2_x64.exe,89 9D A0 01 00 00 3B) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+5CA73E)

label(code)
label(return)

newmem:
  cmp byte ptr [rbp+00000042],1
  jne code
  mov ebx, #819200 //200*4096

code:
  mov [rbp+000001A0],ebx
  jmp return

Energy:
  jmp newmem
  nop
return:
registersymbol(Energy)

[DISABLE]

Energy:
  db 89 9D A0 01 00 00

unregistersymbol(Energy)
dealloc(newmem)

{
// ORIGINAL CODE for v3.1.4.41219 - INJECTION POINT: "SC2_x64.exe"+5CA73E

SC2_x64.exe+5CA71D - 89 44 24 60           - mov [rsp+60],eax
SC2_x64.exe+5CA721 - 85 C0                 - test eax,eax
SC2_x64.exe+5CA723 - 79 07                 - jns SC2_x64.exe+5CA72C
SC2_x64.exe+5CA725 - 48 8D 4C 24 50        - lea rcx,[rsp+50]
SC2_x64.exe+5CA72A - EB 10                 - jmp SC2_x64.exe+5CA73C
SC2_x64.exe+5CA72C - 48 8D 4C 24 58        - lea rcx,[rsp+58]
SC2_x64.exe+5CA731 - 48 8D 54 24 60        - lea rdx,[rsp+60]
SC2_x64.exe+5CA736 - 3B C6                 - cmp eax,esi
SC2_x64.exe+5CA738 - 48 0F 4E CA           - cmovle rcx,rdx
SC2_x64.exe+5CA73C - 8B 19                 - mov ebx,[rcx]
// ---------- INJECTING HERE ----------
SC2_x64.exe+5CA73E - 89 9D A0 01 00 00     - mov [rbp+000001A0],ebx
// ---------- DONE INJECTING  ----------
SC2_x64.exe+5CA744 - 3B DF                 - cmp ebx,edi
SC2_x64.exe+5CA746 - 74 74                 - je SC2_x64.exe+5CA7BC
SC2_x64.exe+5CA748 - 2B DF                 - sub ebx,edi
SC2_x64.exe+5CA74A - 74 70                 - je SC2_x64.exe+5CA7BC
SC2_x64.exe+5CA74C - 85 F6                 - test esi,esi
SC2_x64.exe+5CA74E - 74 6C                 - je SC2_x64.exe+5CA7BC
SC2_x64.exe+5CA750 - E8 5B 06 F1 FF        - call SC2_x64.exe+4DADB0
SC2_x64.exe+5CA755 - BA 4B 00 00 00        - mov edx,0000004B [ 75 ]
SC2_x64.exe+5CA75A - 48 8B C8              - mov rcx,rax
SC2_x64.exe+5CA75D - E8 5E 00 F1 FF        - call SC2_x64.exe+4DA7C0


// ORIGINAL CODE for v3.1.2.40384 - INJECTION POINT: "SC2_x64.exe"+5C4F0E

"SC2_x64.exe"+5C4EED: 89 44 24 60              -  mov [rsp+60],eax
"SC2_x64.exe"+5C4EF1: 85 C0                    -  test eax,eax
"SC2_x64.exe"+5C4EF3: 79 07                    -  jns SC2_x64.exe+5C4EFC
"SC2_x64.exe"+5C4EF5: 48 8D 4C 24 50           -  lea rcx,[rsp+50]
"SC2_x64.exe"+5C4EFA: EB 10                    -  jmp SC2_x64.exe+5C4F0C
"SC2_x64.exe"+5C4EFC: 48 8D 4C 24 58           -  lea rcx,[rsp+58]
"SC2_x64.exe"+5C4F01: 48 8D 54 24 60           -  lea rdx,[rsp+60]
"SC2_x64.exe"+5C4F06: 3B C6                    -  cmp eax,esi
"SC2_x64.exe"+5C4F08: 48 0F 4E CA              -  cmovle rcx,rdx
"SC2_x64.exe"+5C4F0C: 8B 19                    -  mov ebx,[rcx]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+5C4F0E: 89 9D A0 01 00 00        -  mov [rbp+000001A0],ebx
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+5C4F14: 3B DF                    -  cmp ebx,edi
"SC2_x64.exe"+5C4F16: 74 74                    -  je SC2_x64.exe+5C4F8C
"SC2_x64.exe"+5C4F18: 2B DF                    -  sub ebx,edi
"SC2_x64.exe"+5C4F1A: 74 70                    -  je SC2_x64.exe+5C4F8C
"SC2_x64.exe"+5C4F1C: 85 F6                    -  test esi,esi
"SC2_x64.exe"+5C4F1E: 74 6C                    -  je SC2_x64.exe+5C4F8C
"SC2_x64.exe"+5C4F20: E8 9B 1C F1 FF           -  call SC2_x64.exe+4D6BC0
"SC2_x64.exe"+5C4F25: BA 4B 00 00 00           -  mov edx,0000004B
"SC2_x64.exe"+5C4F2A: 48 8B C8                 -  mov rcx,rax
"SC2_x64.exe"+5C4F2D: E8 9E 16 F1 FF           -  call SC2_x64.exe+4D65D0
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>154</ID>
      <Description>"Shield (v3.1.4.41219)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 3.1.4.41219
  Date   : 2016-03-21
  Author : Dark

  This script Removes all Damage to your Unit's Shields.
}

[ENABLE]

aobscanmodule(Shield,SC2_x64.exe,89 86 9C 01 00 00 3B) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+5CB337)

label(code)
label(return)

newmem:
  cmp byte ptr [rsi+00000042],1
  jne code
  xor eax, eax

code:
  mov [rsi+0000019C],eax
  jmp return

Shield:
  jmp newmem
  nop
return:
registersymbol(Shield)

[DISABLE]

Shield:
  db 89 86 9C 01 00 00

unregistersymbol(Shield)
dealloc(newmem)

{
// ORIGINAL CODE for v3.1.4.41219 - INJECTION POINT: "SC2_x64.exe"+5CB337

SC2_x64.exe+5CB313 - 85 FF                    - test edi,edi
SC2_x64.exe+5CB315 - 79 07                    - jns SC2_x64.exe+5CB31E
SC2_x64.exe+5CB317 - 48 8D 4C 24 70           - lea rcx,[rsp+70]
SC2_x64.exe+5CB31C - EB 14                    - jmp SC2_x64.exe+5CB332
SC2_x64.exe+5CB31E - 48 8D 4C 24 78           - lea rcx,[rsp+78]
SC2_x64.exe+5CB323 - 48 8D 84 24 80 00 00 00  - lea rax,[rsp+00000080]
SC2_x64.exe+5CB32B - 41 3B F9                 - cmp edi,r9d
SC2_x64.exe+5CB32E - 48 0F4E C8               - cmovle rcx,rax
SC2_x64.exe+5CB332 - 41 8B C1                 - mov eax,r9d
SC2_x64.exe+5CB335 - 2B 01                    - sub eax,[rcx]
// ---------- INJECTING HERE ----------
SC2_x64.exe+5CB337 - 89 86 9C 01 00 00        - mov [rsi+0000019C],eax
// ---------- DONE INJECTING  ----------
SC2_x64.exe+5CB33D - 3B C3                    - cmp eax,ebx
SC2_x64.exe+5CB33F - 74 24                    - je SC2_x64.exe+5CB365
SC2_x64.exe+5CB341 - 8B D3                    - mov edx,ebx
SC2_x64.exe+5CB343 - C6 44 24 30 01           - mov byte ptr [rsp+30],01 [ 1 ]
SC2_x64.exe+5CB348 - 44 8B C3                 - mov r8d,ebx
SC2_x64.exe+5CB34B - 48 8B CE                 - mov rcx,rsi
SC2_x64.exe+5CB34E - 2B D0                    - sub edx,eax
SC2_x64.exe+5CB350 - C7 44 24 28 09 00 00 00  - mov [rsp+28],00000009 [ 9 ]
SC2_x64.exe+5CB358 - C7 44 24 20 08 00 00 00  - mov [rsp+20],00000008 [ 8 ]
SC2_x64.exe+5CB360 - E8 2B E9 FF FF           - call SC2_x64.exe+5C9C90


// ORIGINAL CODE for v3.1.2.40384 - INJECTION POINT: "SC2_x64.exe"+5C5B67

"SC2_x64.exe"+5C5B43: 85 FF                    -  test edi,edi
"SC2_x64.exe"+5C5B45: 79 07                    -  jns SC2_x64.exe+5C5B4E
"SC2_x64.exe"+5C5B47: 48 8D 4C 24 70           -  lea rcx,[rsp+70]
"SC2_x64.exe"+5C5B4C: EB 14                    -  jmp SC2_x64.exe+5C5B62
"SC2_x64.exe"+5C5B4E: 48 8D 4C 24 78           -  lea rcx,[rsp+78]
"SC2_x64.exe"+5C5B53: 48 8D 84 24 80 00 00 00  -  lea rax,[rsp+00000080]
"SC2_x64.exe"+5C5B5B: 41 3B F9                 -  cmp edi,r9d
"SC2_x64.exe"+5C5B5E: 48 0F 4E C8              -  cmovle rcx,rax
"SC2_x64.exe"+5C5B62: 41 8B C1                 -  mov eax,r9d
"SC2_x64.exe"+5C5B65: 2B 01                    -  sub eax,[rcx]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+5C5B67: 89 86 9C 01 00 00        -  mov [rsi+0000019C],eax
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+5C5B6D: 3B C3                    -  cmp eax,ebx
"SC2_x64.exe"+5C5B6F: 74 24                    -  je SC2_x64.exe+5C5B95
"SC2_x64.exe"+5C5B71: 8B D3                    -  mov edx,ebx
"SC2_x64.exe"+5C5B73: C6 44 24 30 01           -  mov byte ptr [rsp+30],01
"SC2_x64.exe"+5C5B78: 44 8B C3                 -  mov r8d,ebx
"SC2_x64.exe"+5C5B7B: 48 8B CE                 -  mov rcx,rsi
"SC2_x64.exe"+5C5B7E: 2B D0                    -  sub edx,eax
"SC2_x64.exe"+5C5B80: C7 44 24 28 09 00 00 00  -  mov [rsp+28],00000009
"SC2_x64.exe"+5C5B88: C7 44 24 20 08 00 00 00  -  mov [rsp+20],00000008
"SC2_x64.exe"+5C5B90: E8 CB E8 FF FF           -  call SC2_x64.exe+5C4460
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>118</ID>
      <Description>"Fast Research (v3.1.4.41219)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Research,SC2_x64.exe,29 8F C0 00 00 00 83 BF)
alloc(newmem,$1000,"SC2_x64.exe"+745851)

label(code)
label(return)

newmem:

code:
//  sub [rdi+000000C0],ecx
  mov [rdi+000000C0], 0
  jmp return

Research:
  jmp code
  nop
return:
registersymbol(Research)

[DISABLE]

Research:
  db 29 8F C0 00 00 00

unregistersymbol(Research)
dealloc(newmem)

{
// ORIGINAL CODE for v3.1.4.41219 - INJECTION POINT: "SC2_x64.exe"+73FDCB

SC2_x64.exe+745827 - F6 40 28 01           - test byte ptr [rax+28],01 [ 1 ]
SC2_x64.exe+74582B - 75 07                 - jne SC2_x64.exe+745834
SC2_x64.exe+74582D - 48 8D 88 00 02 00 00  - lea rcx,[rax+00000200]
SC2_x64.exe+745834 - 48 8D 54 24 60        - lea rdx,[rsp+60]
SC2_x64.exe+745839 - E8 22 D1 EF FF        - call SC2_x64.exe+642960
SC2_x64.exe+74583E - 48 63 08              - movsxd  rcx,dword ptr [rax]
SC2_x64.exe+745841 - 48 63 C3              - movsxd  rax,ebx
SC2_x64.exe+745844 - 48 8B 5C 24 68        - mov rbx,[rsp+68]
SC2_x64.exe+745849 - 48 0F AF C8           - imul rcx,rax
SC2_x64.exe+74584D - 48 C1 F9 0C           - sar rcx,0C [ 12 ]
// ---------- INJECTING HERE ----------
SC2_x64.exe+745851 - 29 8F C0 00 00 00     - sub [rdi+000000C0],ecx
// ---------- DONE INJECTING  ----------
SC2_x64.exe+745857 - 83 BF C0 00 00 00 00  - cmp dword ptr [rdi+000000C0],00 [ 0 ]
SC2_x64.exe+74585E - 7E 14                 - jle SC2_x64.exe+745874
SC2_x64.exe+745860 - 48 8B 07              - mov rax,[rdi]
SC2_x64.exe+745863 - 48 8B CF              - mov rcx,rdi
SC2_x64.exe+745866 - FF 90 A8 01 00 00     - call qword ptr [rax+000001A8]
SC2_x64.exe+74586C - 32 C0                 - xor al,al
SC2_x64.exe+74586E - 48 83 C4 50           - add rsp,50 [ 80 ]
SC2_x64.exe+745872 - 5F                    - pop rdi
SC2_x64.exe+745873 - C3                    - ret
SC2_x64.exe+745874 - 48 8B 4F 38           - mov rcx,[rdi+38]

// ORIGINAL CODE for v3.1.2.40384 - INJECTION POINT: "SC2_x64.exe"+73FDCB

"SC2_x64.exe"+73FDA1: F6 40 28 01                 -  test byte ptr [rax+28],01
"SC2_x64.exe"+73FDA5: 75 07                       -  jne SC2_x64.exe+73FDAE
"SC2_x64.exe"+73FDA7: 48 8D 88 00 02 00 00        -  lea rcx,[rax+00000200]
"SC2_x64.exe"+73FDAE: 48 8D 54 24 60              -  lea rdx,[rsp+60]
"SC2_x64.exe"+73FDB3: E8 18 D6 EF FF              -  call SC2_x64.exe+63D3D0
"SC2_x64.exe"+73FDB8: 48 63 08                    -  movsxd  rcx,dword ptr [rax]
"SC2_x64.exe"+73FDBB: 48 63 C3                    -  movsxd  rax,ebx
"SC2_x64.exe"+73FDBE: 48 8B 5C 24 68              -  mov rbx,[rsp+68]
"SC2_x64.exe"+73FDC3: 48 0F AF C8                 -  imul rcx,rax
"SC2_x64.exe"+73FDC7: 48 C1 F9 0C                 -  sar rcx,0C
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+73FDCB: 29 8F C0 00 00 00           -  sub [rdi+000000C0],ecx
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+73FDD1: 83 BF C0 00 00 00 00        -  cmp dword ptr [rdi+000000C0],00
"SC2_x64.exe"+73FDD8: 7E 14                       -  jle SC2_x64.exe+73FDEE
"SC2_x64.exe"+73FDDA: 48 8B 07                    -  mov rax,[rdi]
"SC2_x64.exe"+73FDDD: 48 8B CF                    -  mov rcx,rdi
"SC2_x64.exe"+73FDE0: FF 90 A8 01 00 00           -  call qword ptr [rax+000001A8]
"SC2_x64.exe"+73FDE6: 32 C0                       -  xor al,al
"SC2_x64.exe"+73FDE8: 48 83 C4 50                 -  add rsp,50
"SC2_x64.exe"+73FDEC: 5F                          -  pop rdi
"SC2_x64.exe"+73FDED: C3                          -  ret
"SC2_x64.exe"+73FDEE: 48 8B 4F 38                 -  mov rcx,[rdi+38]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>145</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>19</Key>
          </Keys>
          <ID>2</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>121</ID>
      <Description>"No Merc Delay (v3.1.4.41219)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Merc_Delay,SC2_x64.exe,8B 00 29 43 18)
alloc(newmem,$1000,"SC2_x64.exe"+668601)

label(code)
label(return)

newmem:

code:
//  mov eax,[rax]
  mov eax, [rbx+18]
  sub [rbx+18],eax
  jmp return

Merc_Delay:
  jmp code
return:
registersymbol(Merc_Delay)

[DISABLE]

Merc_Delay:
  db 8B 00 29 43 18

unregistersymbol(Merc_Delay)
dealloc(newmem)

{
// ORIGINAL CODE for v3.1.4.41219 - INJECTION POINT: "SC2_x64.exe"+668601

SC2_x64.exe+6685CD - 0F 84 D0 00 00 00        - je SC2_x64.exe+6686A3
SC2_x64.exe+6685D3 - 48 8D 3D 26 D4 5A 01     - lea rdi,[SC2_x64.exe+1C15A00] [1400C86C0]
SC2_x64.exe+6685DA - 66 0F 1F 44 00 00        - nop [rax+rax+00]
SC2_x64.exe+6685E0 - 44 39 63 1C              - cmp [rbx+1C],r12d
SC2_x64.exe+6685E4 - 0F 8E 8E 00 00 00        - jng SC2_x64.exe+668678
SC2_x64.exe+6685EA - 44 39 63 18              - cmp [rbx+18],r12d
SC2_x64.exe+6685EE - 0F 8E 84 00 00 00        - jng SC2_x64.exe+668678
SC2_x64.exe+6685F4 - 48 8D 54 24 70           - lea rdx,[rsp+70]
SC2_x64.exe+6685F9 - 48 8B CD                 - mov rcx,rbp
SC2_x64.exe+6685FC - E8 5F A3 FD FF           - call SC2_x64.exe+642960
// ---------- INJECTING HERE ----------
SC2_x64.exe+668601 - 8B 00                    - mov eax,[rax]
SC2_x64.exe+668603 - 29 43 18                 - sub [rbx+18],eax
// ---------- DONE INJECTING  ----------
SC2_x64.exe+668606 - 44 39 63 18              - cmp [rbx+18],r12d
SC2_x64.exe+66860A - 7F 6C                    - jg SC2_x64.exe+668678
SC2_x64.exe+66860C - 48 8D 4B 20              - lea rcx,[rbx+20]
SC2_x64.exe+668610 - 48 8D 54 24 20           - lea rdx,[rsp+20]
SC2_x64.exe+668615 - 4C 89 64 24 28           - mov [rsp+28],r12
SC2_x64.exe+66861A - 4C 89 64 24 30           - mov [rsp+30],r12
SC2_x64.exe+66861F - C7 44 24 38 03 00 0D 00  - mov [rsp+38],000D0003 [120]
SC2_x64.exe+668627 - 48 89 7C 24 20           - mov [rsp+20],rdi
SC2_x64.exe+66862C - 48 89 5C 24 40           - mov [rsp+40],rbx
SC2_x64.exe+668631 - E8 3A 54 FE FF           - call SC2_x64.exe+64DA70

// ORIGINAL CODE for v3.1.2.40384 - INJECTION POINT: "SC2_x64.exe"+662B21

"SC2_x64.exe"+662AED: 0F 84 D0 00 00 00        -  je SC2_x64.exe+662BC3
"SC2_x64.exe"+662AF3: 48 8D 3D 96 A2 5A 01     -  lea rdi,[SC2_x64.exe+1C0CD90]
"SC2_x64.exe"+662AFA: 66 0F 1F 44 00 00        -  nop [rax+rax+00]
"SC2_x64.exe"+662B00: 44 39 63 1C              -  cmp [rbx+1C],r12d
"SC2_x64.exe"+662B04: 0F 8E 8E 00 00 00        -  jng SC2_x64.exe+662B98
"SC2_x64.exe"+662B0A: 44 39 63 18              -  cmp [rbx+18],r12d
"SC2_x64.exe"+662B0E: 0F 8E 84 00 00 00        -  jng SC2_x64.exe+662B98
"SC2_x64.exe"+662B14: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"SC2_x64.exe"+662B19: 48 8B CD                 -  mov rcx,rbp
"SC2_x64.exe"+662B1C: E8 AF A8 FD FF           -  call SC2_x64.exe+63D3D0
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+662B21: 8B 00                    -  mov eax,[rax]
"SC2_x64.exe"+662B23: 29 43 18                 -  sub [rbx+18],eax
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+662B26: 44 39 63 18              -  cmp [rbx+18],r12d
"SC2_x64.exe"+662B2A: 7F 6C                    -  jg SC2_x64.exe+662B98
"SC2_x64.exe"+662B2C: 48 8D 4B 20              -  lea rcx,[rbx+20]
"SC2_x64.exe"+662B30: 48 8D 54 24 20           -  lea rdx,[rsp+20]
"SC2_x64.exe"+662B35: 4C 89 64 24 28           -  mov [rsp+28],r12
"SC2_x64.exe"+662B3A: 4C 89 64 24 30           -  mov [rsp+30],r12
"SC2_x64.exe"+662B3F: C7 44 24 38 03 00 0D 00  -  mov [rsp+38],000D0003
"SC2_x64.exe"+662B47: 48 89 7C 24 20           -  mov [rsp+20],rdi
"SC2_x64.exe"+662B4C: 48 89 5C 24 40           -  mov [rsp+40],rbx
"SC2_x64.exe"+662B51: E8 7A 4F FE FF           -  call SC2_x64.exe+647AD0
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>145</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>19</Key>
          </Keys>
          <ID>2</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>126</ID>
      <Description>"Remove Skill Delay (v3.1.4.41219)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Skill_Delay,SC2_x64.exe,8B 00 29 43 18 44 39 63 18)
alloc(newmem,$1000,"SC2_x64.exe"+668601)

label(code)
label(return)

newmem:

code:
//  mov eax,[rax]
//  sub [rbx+18],eax
  mov [rbx+18],0
  jmp return

Skill_Delay:
  jmp code
return:
registersymbol(Skill_Delay)

[DISABLE]

Skill_Delay:
  db 8B 00 29 43 18

unregistersymbol(Skill_Delay)
dealloc(newmem)

{
// ORIGINAL CODE for v3.1.4.41219 - INJECTION POINT: "SC2_x64.exe"+668601

SC2_x64.exe+6685CD - 0F 84 D0 00 00 00        - je SC2_x64.exe+6686A3
SC2_x64.exe+6685D3 - 48 8D 3D 26 D4 5A 01     - lea rdi,[SC2_x64.exe+1C15A00] [1400C86C0]
SC2_x64.exe+6685DA - 66 0F 1F 44 00 00        - nop [rax+rax+00]
SC2_x64.exe+6685E0 - 44 39 63 1C              - cmp [rbx+1C],r12d
SC2_x64.exe+6685E4 - 0F 8E 8E 00 00 00        - jng SC2_x64.exe+668678
SC2_x64.exe+6685EA - 44 39 63 18              - cmp [rbx+18],r12d
SC2_x64.exe+6685EE - 0F 8E 84 00 00 00        - jng SC2_x64.exe+668678
SC2_x64.exe+6685F4 - 48 8D 54 24 70           - lea rdx,[rsp+70]
SC2_x64.exe+6685F9 - 48 8B CD                 - mov rcx,rbp
SC2_x64.exe+6685FC - E8 5F A3 FD FF           - call SC2_x64.exe+642960
// ---------- INJECTING HERE ----------
SC2_x64.exe+668601 - 8B 00                    - mov eax,[rax]
SC2_x64.exe+668603 - 29 43 18                 - sub [rbx+18],eax
// ---------- DONE INJECTING  ----------
SC2_x64.exe+668606 - 44 39 63 18              - cmp [rbx+18],r12d
SC2_x64.exe+66860A - 7F 6C                    - jg SC2_x64.exe+668678
SC2_x64.exe+66860C - 48 8D 4B 20              - lea rcx,[rbx+20]
SC2_x64.exe+668610 - 48 8D 54 24 20           - lea rdx,[rsp+20]
SC2_x64.exe+668615 - 4C 89 64 24 28           - mov [rsp+28],r12
SC2_x64.exe+66861A - 4C 89 64 24 30           - mov [rsp+30],r12
SC2_x64.exe+66861F - C7 44 24 38 03 00 0D 00  - mov [rsp+38],000D0003 [120]
SC2_x64.exe+668627 - 48 89 7C 24 20           - mov [rsp+20],rdi
SC2_x64.exe+66862C - 48 89 5C 24 40           - mov [rsp+40],rbx
SC2_x64.exe+668631 - E8 3A 54 FE FF           - call SC2_x64.exe+64DA70

// ORIGINAL CODE for v3.1.2.40384 - INJECTION POINT: "SC2_x64.exe"+662B21

"SC2_x64.exe"+662AED: 0F 84 D0 00 00 00        -  je SC2_x64.exe+662BC3
"SC2_x64.exe"+662AF3: 48 8D 3D 96 A2 5A 01     -  lea rdi,[SC2_x64.exe+1C0CD90]
"SC2_x64.exe"+662AFA: 66 0F 1F 44 00 00        -  nop [rax+rax+00]
"SC2_x64.exe"+662B00: 44 39 63 1C              -  cmp [rbx+1C],r12d
"SC2_x64.exe"+662B04: 0F 8E 8E 00 00 00        -  jng SC2_x64.exe+662B98
"SC2_x64.exe"+662B0A: 44 39 63 18              -  cmp [rbx+18],r12d
"SC2_x64.exe"+662B0E: 0F 8E 84 00 00 00        -  jng SC2_x64.exe+662B98
"SC2_x64.exe"+662B14: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"SC2_x64.exe"+662B19: 48 8B CD                 -  mov rcx,rbp
"SC2_x64.exe"+662B1C: E8 AF A8 FD FF           -  call SC2_x64.exe+63D3D0
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+662B21: 8B 00                    -  mov eax,[rax]
"SC2_x64.exe"+662B23: 29 43 18                 -  sub [rbx+18],eax
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+662B26: 44 39 63 18              -  cmp [rbx+18],r12d
"SC2_x64.exe"+662B2A: 7F 6C                    -  jg SC2_x64.exe+662B98
"SC2_x64.exe"+662B2C: 48 8D 4B 20              -  lea rcx,[rbx+20]
"SC2_x64.exe"+662B30: 48 8D 54 24 20           -  lea rdx,[rsp+20]
"SC2_x64.exe"+662B35: 4C 89 64 24 28           -  mov [rsp+28],r12
"SC2_x64.exe"+662B3A: 4C 89 64 24 30           -  mov [rsp+30],r12
"SC2_x64.exe"+662B3F: C7 44 24 38 03 00 0D 00  -  mov [rsp+38],000D0003
"SC2_x64.exe"+662B47: 48 89 7C 24 20           -  mov [rsp+20],rdi
"SC2_x64.exe"+662B4C: 48 89 5C 24 40           -  mov [rsp+40],rbx
"SC2_x64.exe"+662B51: E8 7A 4F FE FF           -  call SC2_x64.exe+647AD0
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>187</ID>
      <Description>"Freeze Resource Auto Assemble Script (v3.1.2.40384)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 3.1.2.40384
  Date   : 2016-03-21
  Author : DaHacker878

}

{
define(address,"SC2_x64.exe"+4EEA91)
define(bytes,45 89 0B 41 03 CA 41 89 4B 04)
}
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

aobscanmodule(INJECT,SC2_x64.exe,45 89 0B 41 03 CA 41 89 4B 04)
alloc(newmem,$1000,"SC2_x64.exe"+4EEA91)

label(code)
label(return)

newmem:

code:
//  mov [r11],r9d
//  add ecx,r10d
//  mov [r11+04],ecx
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db 45 89 0B 41 03 CA 41 89 4B 04
  // mov [r11],r9d
  // add ecx,r10d
  // mov r11+04],ecx

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE for v3.1.4.41219 - INJECTION POINT: "SC2_x64.exe"+4XXXX1


// ORIGINAL CODE for v3.1.2.40384 - INJECTION POINT: "SC2_x64.exe"+4EEA91

"SC2_x64.exe"+4EEA6E: 8B C1                 -  mov eax,ecx
"SC2_x64.exe"+4EEA70: 25 FF 0F 00 00        -  and eax,00000FFF
"SC2_x64.exe"+4EEA75: 45 2B 4C 85 00        -  sub r9d,[r13+rax*4+00]
"SC2_x64.exe"+4EEA7A: 41 8B C1              -  mov eax,r9d
"SC2_x64.exe"+4EEA7D: 41 8B C9              -  mov ecx,r9d
"SC2_x64.exe"+4EEA80: C1 E9 0C              -  shr ecx,0C
"SC2_x64.exe"+4EEA83: F7 D0                 -  not eax
"SC2_x64.exe"+4EEA85: 03 C1                 -  add eax,ecx
"SC2_x64.exe"+4EEA87: 25 FF 0F 00 00        -  and eax,00000FFF
"SC2_x64.exe"+4EEA8C: 41 8B 4C 85 00        -  mov ecx,[r13+rax*4+00]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+4EEA91: 45 89 0B              -  mov [r11],r9d
"SC2_x64.exe"+4EEA94: 41 03 CA              -  add ecx,r10d
"SC2_x64.exe"+4EEA97: 41 89 4B 04           -  mov [r11+04],ecx
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+4EEA9B: 4C 8B 6C 24 20        -  mov r13,[rsp+20]
"SC2_x64.exe"+4EEAA0: 48 3B DF              -  cmp rbx,rdi
"SC2_x64.exe"+4EEAA3: 74 1C                 -  je SC2_x64.exe+4EEAC1
"SC2_x64.exe"+4EEAA5: 0F B6 4D 22           -  movzx ecx,byte ptr [rbp+22]
"SC2_x64.exe"+4EEAA9: 41 8B D4              -  mov edx,r12d
"SC2_x64.exe"+4EEAAC: E8 6F 48 FA FF        -  call SC2_x64.exe+493320
"SC2_x64.exe"+4EEAB1: 0F B6 4D 22           -  movzx ecx,byte ptr [rbp+22]
"SC2_x64.exe"+4EEAB5: 2B DF                 -  sub ebx,edi
"SC2_x64.exe"+4EEAB7: 44 8B C3              -  mov r8d,ebx

// ORIGINAL CODE for v3.1.0.39117 - INJECTION POINT: "SC2_x64.exe"+4EFE05

"SC2_x64.exe"+4EFDDE: F7 D1                 -  not ecx
"SC2_x64.exe"+4EFDE0: 8B C1                 -  mov eax,ecx
"SC2_x64.exe"+4EFDE2: 25 FF 0F 00 00        -  and eax,00000FFF
"SC2_x64.exe"+4EFDE7: 45 33 4C 85 00        -  xor r9d,[r13+rax*4+00]
"SC2_x64.exe"+4EFDEC: 41 8B C1              -  mov eax,r9d
"SC2_x64.exe"+4EFDEF: C1 E8 0C              -  shr eax,0C
"SC2_x64.exe"+4EFDF2: 41 8D 89 F5 48 5E 45  -  lea ecx,[r9+455E48F5]
"SC2_x64.exe"+4EFDF9: 33 C1                 -  xor eax,ecx
"SC2_x64.exe"+4EFDFB: 25 FF 0F 00 00        -  and eax,00000FFF
"SC2_x64.exe"+4EFE00: 45 2B 54 85 00        -  sub r10d,[r13+rax*4+00]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+4EFE05: 45 89 0B              -  mov [r11],r9d
"SC2_x64.exe"+4EFE08: 45 89 53 04           -  mov [r11+04],r10d
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+4EFE0C: 4C 8B 6C 24 20        -  mov r13,[rsp+20]
"SC2_x64.exe"+4EFE11: 48 3B DF              -  cmp rbx,rdi
"SC2_x64.exe"+4EFE14: 74 1C                 -  je SC2_x64.exe+4EFE32
"SC2_x64.exe"+4EFE16: 0F B6 4D 22           -  movzx ecx,byte ptr [rbp+22]
"SC2_x64.exe"+4EFE1A: 41 8B D4              -  mov edx,esp
"SC2_x64.exe"+4EFE1D: E8 BE 46 FA FF        -  call SC2_x64.exe+4944E0
"SC2_x64.exe"+4EFE22: 0F B6 4D 22           -  movzx ecx,byte ptr [rbp+22]
"SC2_x64.exe"+4EFE26: 2B DF                 -  sub ebx,edi
"SC2_x64.exe"+4EFE28: 44 8B C3              -  mov r8d,ebx
"SC2_x64.exe"+4EFE2B: 8B D6                 -  mov edx,esi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>147</ID>
      <Description>"Freeze Resource Pile (v3.1.4.41219)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Resource_Pile,SC2_x64.exe,89 B7 8C 00 00 00 41)
alloc(newmem,$1000,"SC2_x64.exe"+726CB1)

label(code)
label(return)

newmem:
// to let automated refineries get filled on mission start; otherwise it'll be zero
  cmp [rdi+0000008C], 0
  jne return

code:
  mov [rdi+0000008C],esi
  jmp return

Resource_Pile:
  jmp newmem
  nop
return:
registersymbol(Resource_Pile)

[DISABLE]

Resource_Pile:
  db 89 B7 8C 00 00 00

unregistersymbol(Resource_Pile)
dealloc(newmem)

{
// ORIGINAL CODE for v3.1.4.41219 - INJECTION POINT: "SC2_x64.exe"+726CB1

SC2_x64.exe+726C73 - 48 85 C0              - test rax,rax
SC2_x64.exe+726C76 - 74 1B                 - je SC2_x64.exe+726C93
SC2_x64.exe+726C78 - 0F B6 4D 70           - movzx ecx,byte ptr [rbp+70]
SC2_x64.exe+726C7C - 44 0F B6 4D 68        - movzx r9d,byte ptr [rbp+68]
SC2_x64.exe+726C81 - 44 0F B6 C3           - movzx r8d,bl
SC2_x64.exe+726C85 - 88 4C 24 20           - mov [rsp+20],cl
SC2_x64.exe+726C89 - 48 8B C8              - mov rcx,rax
SC2_x64.exe+726C8C - 8B D6                 - mov edx,esi
SC2_x64.exe+726C8E - E8 8D FF FF FF        - call SC2_x64.exe+726C20
SC2_x64.exe+726C93 - 44 8B 8F 8C 00 00 00  - mov r9d,[rdi+0000008C]
SC2_x64.exe+726C9A - 48 8D 87 90 00 00 00  - lea rax,[rdi+00000090]
SC2_x64.exe+726CA1 - 48 8D 4D 58           - lea rcx,[rbp+58]
SC2_x64.exe+726CA5 - 3B 30                 - cmp esi,[rax]
SC2_x64.exe+726CA7 - 44 89 4D 50           - mov [rbp+50],r9d
SC2_x64.exe+726CAB - 48 0F 43 C8           - cmovae rcx,rax
SC2_x64.exe+726CAF - 8B 31                 - mov esi,[rcx]
// ---------- INJECTING HERE ----------
SC2_x64.exe+726CB1 - 89 B7 8C 00 00 00     - mov [rdi+0000008C],esi
// ---------- DONE INJECTING  ----------
SC2_x64.exe+726CB7 - 41 3B F1              - cmp esi,r9d
SC2_x64.exe+726CBA - 74 42                 - je SC2_x64.exe+726CFE
SC2_x64.exe+726CBC - 48 8B 47 28           - mov rax,[rdi+28]
SC2_x64.exe+726CC0 - 44 8B C6              - mov r8d,esi
SC2_x64.exe+726CC3 - BA 16 00 00 00        - mov edx,00000016 [ 22 ]
SC2_x64.exe+726CC8 - 8B 08                 - mov ecx,[rax]
SC2_x64.exe+726CCA - 45 2B C1              - sub r8d,r9d
SC2_x64.exe+726CCD - 89 4D 58              - mov [rbp+58],ecx
SC2_x64.exe+726CD0 - 48 8D 4D 58           - lea rcx,[rbp+58]
SC2_x64.exe+726CD4 - E8 57 76 F6 FF        - call SC2_x64.exe+68E330
SC2_x64.exe+726CD9 - 85 F6                 - test esi,esi
SC2_x64.exe+726CDB - 74 2B                 - je SC2_x64.exe+726D08
SC2_x64.exe+726CDD - 44 8B 4D 50           - mov r9d,[rbp+50]
SC2_x64.exe+726CE1 - 45 85 C9              - test r9d,r9d
SC2_x64.exe+726CE4 - 75 53                 - jne SC2_x64.exe+726D39


// ORIGINAL CODE for v3.1.2.40384 - INJECTION POINT: "SC2_x64.exe"+721478

"SC2_x64.exe"+721450: 48 8B C8                 -  mov rcx,rax
"SC2_x64.exe"+721453: 8B D6                    -  mov edx,esi
"SC2_x64.exe"+721455: E8 86 FF FF FF           -  call SC2_x64.exe+7213E0
"SC2_x64.exe"+72145A: 44 8B 8F 8C 00 00 00     -  mov r9d,[rdi+0000008C]
"SC2_x64.exe"+721461: 48 8D 87 90 00 00 00     -  lea rax,[rdi+00000090]
"SC2_x64.exe"+721468: 48 8D 4D 58              -  lea rcx,[rbp+58]
"SC2_x64.exe"+72146C: 3B 30                    -  cmp esi,[rax]
"SC2_x64.exe"+72146E: 44 89 4D 50              -  mov [rbp+50],r9d
"SC2_x64.exe"+721472: 48 0F 43 C8              -  cmovae rcx,rax
"SC2_x64.exe"+721476: 8B 31                    -  mov esi,[rcx]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+721478: 89 B7 8C 00 00 00        -  mov [rdi+0000008C],esi
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+72147E: 41 3B F1                 -  cmp esi,r9d
"SC2_x64.exe"+721481: 74 42                    -  je SC2_x64.exe+7214C5
"SC2_x64.exe"+721483: 48 8B 47 28              -  mov rax,[rdi+28]
"SC2_x64.exe"+721487: 44 8B C6                 -  mov r8d,esi
"SC2_x64.exe"+72148A: BA 16 00 00 00           -  mov edx,00000016
"SC2_x64.exe"+72148F: 8B 08                    -  mov ecx,[rax]
"SC2_x64.exe"+721491: 45 2B C1                 -  sub r8d,r9d
"SC2_x64.exe"+721494: 89 4D 58                 -  mov [rbp+58],ecx
"SC2_x64.exe"+721497: 48 8D 4D 58              -  lea rcx,[rbp+58]
"SC2_x64.exe"+72149B: E8 30 76 F6 FF           -  call SC2_x64.exe+688AD0
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Deactivate</Action>
          <Keys>
            <Key>109</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>186</ID>
      <Description>"Infinite Buff/Debuff (v3.1.4.41219)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 
  Date   : 2015-12-25
  Author : Dark

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Buff_Duration,SC2_x64.exe,8B 00 42 29 44 2B 18) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+76D1C4)

label(code)
label(return)

newmem:

  cmp r13, 0
  je return

code:
  mov eax,[rax]
  sub [r13+rbx+18],eax
  jmp return

Buff_Duration:
  jmp newmem
  nop
  nop
return:
registersymbol(Buff_Duration)

[DISABLE]

Buff_Duration:
  db 8B 00 42 29 44 2B 18

unregistersymbol(Buff_Duration)
dealloc(newmem)

{
// ORIGINAL CODE for v3.1.4.41219 - INJECTION POINT: "SC2_x64.exe"+76D1C4

SC2_x64.exe+76D186 - 0F 84 5A 01 00 00     - je SC2_x64.exe+76D2E6
SC2_x64.exe+76D18C - 89 4D 7F              - mov [rbp+7F],ecx
SC2_x64.exe+76D18F - 89 45 6F              - mov [rbp+6F],eax
SC2_x64.exe+76D192 - 44 89 65 CF           - mov [rbp-31],r12d
SC2_x64.exe+76D196 - 44 3B E0              - cmp r12d,eax
SC2_x64.exe+76D199 - 0F 8D 33 01 00 00     - jnl SC2_x64.exe+76D2D2
SC2_x64.exe+76D19F - 48 8D 45 6F           - lea rax,[rbp+6F]
SC2_x64.exe+76D1A3 - 44 8B 20              - mov r12d,[rax]
SC2_x64.exe+76D1A6 - 4C 8B 75 BF           - mov r14,[rbp-41]
SC2_x64.exe+76D1AA - 44 8B 7D 67           - mov r15d,[rbp+67]
SC2_x64.exe+76D1AE - 33 FF                 - xor edi,edi
SC2_x64.exe+76D1B0 - 48 8B 9E A0 00 00 00  - mov rbx,[rsi+000000A0]
SC2_x64.exe+76D1B7 - 48 8D 55 E3           - lea rdx,[rbp-1D]
SC2_x64.exe+76D1BB - 48 8D 4D 77           - lea rcx,[rbp+77]
SC2_x64.exe+76D1BF - E8 9C 57 ED FF        - call SC2_x64.exe+642960
// ---------- INJECTING HERE ----------
SC2_x64.exe+76D1C4 - 8B 00                 - mov eax,[rax]
SC2_x64.exe+76D1C6 - 42 29 44 2B 18        - sub [rbx+r13+18],eax
// ---------- DONE INJECTING  ----------
SC2_x64.exe+76D1CB - 48 8B 96 A0 00 00 00  - mov rdx,[rsi+000000A0]
SC2_x64.exe+76D1D2 - 42 8B 4C 2A 18        - mov ecx,[rdx+r13+18]
SC2_x64.exe+76D1D7 - 41 03 CC              - add ecx,r12d
SC2_x64.exe+76D1DA - 85 C9                 - test ecx,ecx
SC2_x64.exe+76D1DC - 7F 4A                 - jg SC2_x64.exe+76D228
SC2_x64.exe+76D1DE - F6 46 69 02           - test byte ptr [rsi+69],02 [ 2 ]
SC2_x64.exe+76D1E2 - 74 0A                 - je SC2_x64.exe+76D1EE
SC2_x64.exe+76D1E4 - 4A 8D 4C 32 14        - lea rcx,[rdx+r14+14]
SC2_x64.exe+76D1E9 - E8 D2 F9 EE FF        - call SC2_x64.exe+65CBC0
SC2_x64.exe+76D1EE - 48 8B 86 A0 00 00 00  - mov rax,[rsi+000000A0]
SC2_x64.exe+76D1F5 - 4C 8B 45 B7           - mov r8,[rbp-49]
SC2_x64.exe+76D1F9 - 48 8D 55 F7           - lea rdx,[rbp-09]
SC2_x64.exe+76D1FD - 49 C1 E0 05           - shl r8,05 [ 5 ]
SC2_x64.exe+76D201 - 4E 8D 4C 30 08        - lea r9,[rax+r14+08]


// ORIGINAL CODE for v3.1.2.40384 - INJECTION POINT: "SC2_x64.exe"+767714

"SC2_x64.exe"+7676EA: 44 3B E0                       -  cmp r12d,eax
"SC2_x64.exe"+7676ED: 0F 8D 2F 01 00 00              -  jnl SC2_x64.exe+767822
"SC2_x64.exe"+7676F3: 48 8D 45 6F                    -  lea rax,[rbp+6F]
"SC2_x64.exe"+7676F7: 44 8B 20                       -  mov r12d,[rax]
"SC2_x64.exe"+7676FA: 44 8B 7D 67                    -  mov r15d,[rbp+67]
"SC2_x64.exe"+7676FE: 33 FF                          -  xor edi,edi
"SC2_x64.exe"+767700: 48 8B 9E A0 00 00 00           -  mov rbx,[rsi+000000A0]
"SC2_x64.exe"+767707: 48 8D 55 E3                    -  lea rdx,[rbp-1D]
"SC2_x64.exe"+76770B: 48 8D 4D 77                    -  lea rcx,[rbp+77]
"SC2_x64.exe"+76770F: E8 BC 5C ED FF                 -  call SC2_x64.exe+63D3D0
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+767714: 8B 00                          -  mov eax,[rax]
"SC2_x64.exe"+767716: 41 29 44 1D 18                 -  sub [r13+rbx+18],eax
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+76771B: 48 8B 96 A0 00 00 00           -  mov rdx,[rsi+000000A0]
"SC2_x64.exe"+767722: 41 8B 4C 15 18                 -  mov ecx,[r13+rdx+18]
"SC2_x64.exe"+767727: 41 03 CC                       -  add ecx,r12d
"SC2_x64.exe"+76772A: 85 C9                          -  test ecx,ecx
"SC2_x64.exe"+76772C: 7F 4A                          -  jg SC2_x64.exe+767778
"SC2_x64.exe"+76772E: F6 46 69 02                    -  test byte ptr [rsi+69],02
"SC2_x64.exe"+767732: 74 0A                          -  je SC2_x64.exe+76773E
"SC2_x64.exe"+767734: 4A 8D 4C 32 14                 -  lea rcx,[rdx+r14+14]
"SC2_x64.exe"+767739: E8 92 F7 EE FF                 -  call SC2_x64.exe+656ED0
"SC2_x64.exe"+76773E: 48 8B 86 A0 00 00 00           -  mov rax,[rsi+000000A0]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Resource_Pile</Name>
      <Address> 7FF6BF85B068</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Health</Name>
      <Address> 7FF6BF72DC8D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Energy</Name>
      <Address> 7FF6BF72BDBE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Shield</Name>
      <Address> 7FF6BF72CC97</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Skill_Delay</Name>
      <Address> 7FF6BF7A1CDF</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
