<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>34</ID>
      <Description>"[X] &lt;== Empire - Total War V150 Script 3.2"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Empire: Total War
 Game Version  : 1.5.0 (Build 1332.21992)
 Proces Name   : Empire.exe
 Script Version: 3.2
 CE Version    : 6.1
 Release date  : 24-Jan-2012 (changes in _InfMPT)
 Author        : Recifense
 Features:
 - God Mode
 - Minimum Gold
 - Umlimited Ammo (Range Troop in combat) (new)
 - Unlimited Movement Points (for selected army/ship/agent)
 - Recover troop size (when moving) (new)
 - Research in 1 day
 - Reinforcement in 1 Day (new)
 - Construction/Improvement in 1 Day (new)
===========================================
}

[ENABLE]
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(Empire.exe+38868e,8b 11 8b 82 00 01 00 00 55 ff d0)
assert(Empire.exe+388746,8b 11 8b 82 00 01 00 00 55 ff d0)
assert(Empire.exe+3c8178,e8 63 00 00 00 8b 07 8b 90 e8 00)
assert(Empire.exe+3c81e0,51 8b 8f 78 03 00 00 85 c9 56 8b)
assert(Empire.exe+28d7ea,01 88 28 1d 00 00 db 80 28 1d 00)
assert(Empire.exe+291bd2,8b 4f 3c db 47 3c 85 c9 ?? ?? d8)
assert(Empire.exe+59c72b,8b 86 88 02 00 00 3b c7)
assert(Empire.exe+4dab54,8b 41 64 3b c7 ?? ?? 2b c7)
assert(Empire.exe+529736,8b 46 1c 3b f8 ?? ?? 2b c7)
assert(Empire.exe+58e556,8b 9b a0 04 00 00 51)
assert(Empire.exe+4b0d76,f3 0f 11 4f 08 f3 0f 2a 42 0c)
assert(Empire.exe+7539c0,8b 41 1c 85 c0 ?? ?? 83 c0 ff 89 41 1c)
assert(Empire.exe+73ab04,83 45 0c 01 8b 45 0c 3b 45 10)
assert(Empire.exe+73af44,83 45 0c 01 8b 45 0c 3b 45 10)
assert(Empire.exe+1ca2c2,89 88 34 0d 00 00)

//=========================================
alloc(MyCode,1024)
//=========================================
// Declaration section
label(_GodModeT)
label(_BackGMT)
label(_ExitGMT)
label(_GodM0)
label(_GodM1)
label(_GodModeC)
label(_BackGMC)
label(_ExitGMC)
label(_GodMC0)
label(_GodMC1)
label(_GodModeS)
label(_BackGMS)
label(_ExitGMS)
label(_GodMS0)
label(_GodModeS1)
label(_BackGMS1)
label(_ExitGMS1)
label(_MonDamage)
label(_BackMD)
label(_ExitMD)
label(_MonHull)
label(_BackMH)
label(_ExitMH)
label(_MonGMP)
label(_BackGMP)
label(_InfMPT)
label(_InfT0)
label(_BackIMPT)
label(_ExitIMPT)
label(_InfMPA)
label(_BackIMPA)
label(_ExitIMPA)
label(_MonGold)
label(_BackMG)
label(_ExitMG)
label(_MonResearch)
label(_BackMR)
label(_ExitMR)
label(_MonProd)
label(_BackMPr)
label(_ExitMPr)
label(_MonConst)
label(_BackMC)
label(_ExitMC)
label(_MonConst1)
label(_BackMC1)
label(_ExitMC1)
label(_MonAmmo)
label(_BackMA)
label(_ExitMA)
label(iEnableGM)
label(iEnableIMP)
label(iEnableMG)
label(iEnableMT)
label(iEnableMR)
label(iEnableMP)
label(iEnableMC)
label(iEnableMA)
label(iMinPart)
label(iMinGold)
label(pCurGMP)
label(pGold)
label(pTown)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableGM)
registersymbol(iEnableIMP)
registersymbol(iEnableMG)
registersymbol(iEnableMT)
registersymbol(iEnableMR)
registersymbol(iEnableMP)
registersymbol(iEnableMC)
registersymbol(iEnableMA)
registersymbol(iMinGold)
registersymbol(pCurGMP)
registersymbol(pGold)

//=========================================
MyCode:
//========================================= ok
// Troops  (ECX = pUnit)
_GodModeT:
 cmp dword ptr [iEnableGM],0
 je _GodM1                     // Jump if feature is disabled

 mov eax,[ecx+000001ec]        // Get first level pointer (pTroopInfo)
 test eax,eax                  // Valid?
 jz _GodM0                     // Jump if false

 mov eax,[eax+00000160]        // Get second level pointer (pOwnerInfo)
 cmp dword ptr [eax+0000021c],0 // PlayerÂ´s unit? **
 je _ExitGMT                   // Jump if true

_GodM0:                        // Ship Crew  &lt;----
 mov eax,[ecx+000001f4]        // Get first level pointer
 test eax,eax                  // Valid?
 jz _GodM1                     // Jump if false

 cmp byte ptr [eax+00001bc4],0 // PlayerÂ´s unit? **
 je _ExitGMT                   // Jump if true

_GodM1:
 mov edx,[ecx]                 // Original code
 mov eax,[edx+00000100]        // Original code
 push ebp                      // Original code
 call eax                      // Original code

_ExitGMT:
 jmp _BackGMT                  // Back to main code

//========================================= ok
// Cannons
_GodModeC:
 cmp dword ptr [iEnableGM],0
 je _GodMC1                    // Jump if feature is disabled

 mov edx,[ecx+000001ec]        // Get first level pointer (pTroopInfo)
 test edx,edx                  // Valid?
 jz _GodMC0                    // Jump if false

 mov edx,[edx+00000160]        // Get second level pointer (pOwnerInfo)
 cmp dword ptr [edx+0000021c],0 // Player's unit?
 je _ExitGMC                   // Jump if true

_GodMC0:
 mov edx,[ecx+000001f4]        // Get second level pointer
 test edx,edx                  // Valid?
 jz _GodMC1                    // Jump if false

 cmp byte ptr [edx+00001bc4],0 // Player's unit? **
 je _ExitGMC                   // Jump if true

_GodMC1:
 mov edx,[ecx]                 // Original code
 mov eax,[edx+00000100]        // Original code
 push ebp                      // Original code
 call eax                      // Original code

_ExitGMC:
 jmp _BackGMC                  // Back to main code

//========================================= ok
// Ship
_GodModeS:
 cmp dword ptr [iEnableGM],0
 je _GodMS0                    // Jump if feature is disabled

 cmp byte ptr [esi+00001bc4],0 // Player's unit? **
 jz _ExitGMS                   // Jump if true

_GodMS0:
 call Empire.exe+3c81e0        // Original code **

_ExitGMS:
 jmp _BackGMS                  // Back to main code

//========================================= ok
// Ship Crew
_GodModeS1:
 cmp dword ptr [iEnableGM],0
 je _ExitGMS1                  // Jump if feature is disabled

 test eax,eax                  // Valid pointer
 jz _ExitGMS1                  // Jump if false

 cmp byte ptr [eax+00001bc4],0 // PlayerÂ´s unit? **
 jne _ExitGMS1                 // Jump if false

 ret                           // Return to main code
//-----
_ExitGMS1:
 push ecx                      // Original code
 mov ecx,[edi+00000378]        // Original code
 jmp _BackGMS1                 // Back to main code

//========================================= ok
// Ship
_MonDamage:
 cmp dword ptr [iEnableGM],0
 je _ExitMD                    // Jump if feature is disabled

 cmp byte ptr [eax+00001bc4],0 // Player's unit? **
 jne _ExitMD                   // Jump if false

 xor ecx,ecx                   // Make Damage = 0

_ExitMD:
 add [eax+00001d28],ecx        // Original code **
 jmp _BackMD                   // Back to main code

//========================================= ok
// Ship
_MonHull:
 cmp dword ptr [iEnableGM],0
 je _ExitMH                    // Jump if feature is disabled

 mov ecx,[edi+14]              // Get pShipInfo
 cmp byte ptr [ecx+00001bc4],0 // Player's unit? **
 jne _ExitMH                   // Jump if false

 push eax
 push edx

 mov edx,[iMinPart]            // Get part minimum value
 mov eax,[ecx+00001c0c]        // Get number of parts **
 mul edx
 mov [ecx+00001cd0],eax        // Update total hull value **

 mov eax,[iMinPart]            // Get part minimum value
 mov [edi+1c],eax              // Update part value **
 mov [edi+3c],eax              // Update part value **

 pop edx
 pop eax

_ExitMH:
 mov ecx,[edi+3c]              // Original code
 fild dword ptr [edi+3c]       // Original code
 jmp _BackMH                   // Back to main code

//========================================= ok
// Current selected group or troop
// Troop or Ship on Turn Base screen
_MonGMP:
 mov [pCurGMP],esi             // Save ptr for further use
 mov eax,[esi+00000288]        // Original code
 jmp _BackGMP                  // Back to main code

//========================================= ok
// Move point (Troop)
_InfMPT:
 cmp ebx,[pCurGMP]             // Current select group?
 jne _ExitIMPT                 // Jump if false

 cmp dword ptr [iEnableMT],0
 je _InfT0                     // Jump if feature is disabled

 mov eax,[ecx+50]
 mov [ecx+4c],eax

_InfT0:
 cmp dword ptr [iEnableIMP],0
 je _ExitIMPT                  // Jump if feature is disabled

// mov eax,[ebx+18]              // Get Army maximum MP
// mov [ebx+1c],eax              // Update Army current MP
// mov [ecx+64],eax              // Update Troop MP

 xor edi,edi                   // Make Decreasing MP = 0

_ExitIMPT:
 mov eax,[ecx+64]              // Original code
 cmp eax,edi                   // Original code
 jmp _BackIMPT                 // Back to main code

//========================================= ok
// Move point (Army)
_InfMPA:
 cmp dword ptr [iEnableIMP],0
 je _ExitIMPA                  // Jump if feature is disabled

 cmp esi,[pCurGMP]             // Current select troop?
 jne _ExitIMPA                 // Jump if false

 mov edi,[esi+18]              // Get maximum MP
 mov [esi+1c],edi              // Update Troop MP

 xor edi,edi                   // Make Decreasing MP = 0

_ExitIMPA:
 mov eax,[esi+1c]              // Original code
 cmp edi,eax                   // Original code
 jmp _BackIMPA                 // Back to main code

//========================================= ok
_MonGold:
 mov [pGold],ebx               // Save pointer for debugging

 cmp dword ptr [iEnableMG],0
 je _ExitMG                    // Jump if feature is disabled

 mov edx,[iMinGold]            // Get minimum gold value
 cmp edx,[ebx+000004A0]        // Gold &lt;= minimum?
 jle _ExitMG                   // Jump if false

 mov [ebx+000004A0],edx        // Make gold = minimum

_ExitMG:
 mov ebx,[ebx+000004A0]        // Original code
 jmp _BackMG                   // Back to main code

//========================================= ok
_MonResearch:
 push eax

 cmp dword ptr [iEnableMR],0
 je _ExitMR                    // Jump if feature is disabled

 test esi,esi
 jz _ExitMR

 mov eax,[esi+00000088]
 cmp eax,[pGold]
 jne _ExitMR

 cvtsi2ss xmm1,[edx+0C]        // Get points needed and convert it to float

_ExitMR:
 pop eax

 movss [edi+08],xmm1           // Original code
 jmp _BackMR                   // Back to main code

//========================================= new
// TBS Troop Production of selected Town
_MonProd:
 mov eax,[ecx+14]                  // Get pointer to Town ok
 test eax,eax
 jz _ExitMPr

 mov [pTown],eax

 mov eax,[eax+40]                  // Get pointer to ptr to Owner ok
 test eax,eax
 jz _ExitMPr

 cmp eax,[pGold]                   // Is it a player's Town?
 jne _ExitMPr

 cmp dword ptr [iEnableMP],0
 je _ExitMPr                       // Jump if feature is disabled

 mov eax,1
 cmp eax,[ecx+1C]
 jge _ExitMPr

 mov [ecx+1c],eax                  // Make it one turn production

_ExitMPr:
 mov eax,[ecx+1C]                  // Original code
 test eax,eax                      // Original code
 jmp _BackMPr                      // Back to main code

//========================================= new
// TBS Buiding Construction or Improvement
_MonConst:
 cmp ebx,[pGold]                   // Is it a player's Construction?
 jne _ExitMC

 cmp dword ptr [iEnableMC],0
 je _ExitMC                        // Jump if feature is disabled

 mov eax,[ebp+10]                  // Get # needed turns
 dec eax
 mov [ebp+0c],eax                  // Make it one turn construction

_ExitMC:
 add dword ptr [ebp+0C],01         // Original code
 mov eax,[ebp+0C]                  // Original code
 jmp _BackMC                       // Back to main code

//========================================= new
// TBS Buiding Construction or Improvement
_MonConst1:
 cmp ebx,[pGold]                   // Is it a player's Construction?
 jne _ExitMC1

 cmp dword ptr [iEnableMC],0
 je _ExitMC1                       // Jump if feature is disabled

 mov eax,[ebp+10]                  // Get # needed turns
 dec eax
 mov [ebp+0c],eax                  // Make it one turn construction

_ExitMC1:
 add dword ptr [ebp+0C],01         // Original code
 mov eax,[ebp+0C]                  // Original code
 jmp _BackMC1                      // Back to main code

//========================================= new
// Troops  (EAX = pTroop)
_MonAmmo:
 pushfd
 push ebx

 mov [eax+00000D34],ecx        // Original code

 cmp dword ptr [iEnableMA],0
 je _ExitMA                    // Jump if feature is disabled

 mov ebx,[eax+00000160]        // Get (pOwnerInfo) ok
 cmp dword ptr [ebx+0000021c],0 // Player's unit? **
 jne _ExitMA                   // Jump if true

 mov ecx,[eax+00000d38]
 mov [eax+00000d34],ecx

_ExitMA:
 pop ebx
 popfd
 jmp _BackMA                   // Back to main code

//=========================================
 db '===================&gt;'
 db 'CE6.1 Script by Recifense 012412'
//=========================================
// Variables
iEnableGM:
 dd 1
iEnableIMP:
 dd 1
iEnableMG:
 dd 1
iEnableMT:
 dd 1
iEnableMR:
 dd 1
iEnableMP:
 dd 1
iEnableMC:
 dd 1
iEnableMA:
 dd 1
iMinPart:
 dd #10000
iMinGold:
 dd #150000
pCurGMP:
 dd 0
pGold:
 dd 0
pTown:
 dd 0

//=========================================
// Hacking Points
//Empire.exe+2a2b5e:
Empire.exe+38868e:
 jmp _GodModeT
 db 90,90,90,90,90,90
_BackGMT:

//Empire.exe+2a2c16:
Empire.exe+388746:
 jmp _GodModeC
 db 90,90,90,90,90,90
_BackGMC:

//Empire.exe+2e166e:
Empire.exe+3c8178:
 jmp _GodModeS
_BackGMS:

//Empire.exe+2e16d0:
Empire.exe+3c81e0:
 jmp _GodModeS1
 nop
 nop
_BackGMS1:

//Empire.exe+305111:
Empire.exe+28d7ea:
 jmp _MonDamage
 nop
_BackMD:

//Empire.exe+3093a2:
Empire.exe+291bd2:
 jmp _MonHull
 nop
_BackMH:

//Empire.exe+80f317:
Empire.exe+59c72b:
 jmp _MonGMP
 nop
_BackGMP:

//Empire.exe+5de584:
Empire.exe+4dab54:
 jmp _InfMPT
_BackIMPT:

//Empire.exe+7a4906:
Empire.exe+529736:
 jmp _InfMPA
_BackIMPA:

//Empire.exe+803795:
Empire.exe+58e556:
 jmp _MonGold
 nop
_BackMG:

Empire.exe+4b0d76:
 jmp _MonResearch
_BackMR:

Empire.exe+7539c0: //new
 jmp _MonProd
_BackMPr:

Empire.exe+73ab04: //new
 jmp _MonConst
 nop
 nop
_BackMC:

Empire.exe+73af44: //new
 jmp _MonConst1
 nop
 nop
_BackMC1:

Empire.exe+1ca2c2: //new
 jmp _MonAmmo
 nop
_BackMA:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
//Empire.exe+2a2b5e:
Empire.exe+38868e:
// mov edx,[ecx]
// mov eax,[edx+00000100]
// push ebp
// call eax
 db 8b 11 8b 82 00 01 00 00 55 ff d0

//Empire.exe+2a2c16:
Empire.exe+388746:
// mov edx,[ecx]
// mov eax,[edx+00000100]
// push ebp
// call eax
 db 8b 11 8b 82 00 01 00 00 55 ff d0

//Empire.exe+2e166e:
Empire.exe+3c8178:
// call Empire.exe+3c81e0
 db e8 63 00 00 00

//Empire.exe+2e16d0:
Empire.exe+3c81e0:
// push ecx
// mov ecx,[edi+00000378]
 db 51 8b 8f 78 03 00 00

//Empire.exe+305111:
Empire.exe+28d7ea:
// add [eax+00001d28],ecx
 db 01 88 28 1d 00 00

//Empire.exe+3093a2:
Empire.exe+291bd2:
// mov ecx,[edi+3c]
// fild dword ptr [edi+3c]
 db 8b 4f 3c db 47 3c

//----------------------
//Empire.exe+80f317:
Empire.exe+59c72b:
// mov eax,[esi+00000288]
 db 8b 86 88 02 00 00

//Empire.exe+5de584:
Empire.exe+4dab54:
// mov eax,[ecx+64]
// cmp eax,edi
 db 8b 41 64 3b c7

//Empire.exe+7a4906:
Empire.exe+529736:
// mov eax,[esi+1c]
// cmp edi,eax
 db 8b 46 1c 3b f8

//Empire.exe+803795:
Empire.exe+58e556:
// mov ebx,[ebx+000004A0]
 db 8b 9b a0 04 00 00

Empire.exe+4b0d76: //new
// movss [edi+08],xmm1
 db f3 0f 11 4f 08

Empire.exe+7539c0: //new
// mov eax,[ecx+1C]
// test eax,eax
 db 8b 41 1c 85 c0

Empire.exe+73ab04: //new
// add dword ptr [ebp+0C],01
// mov eax,[ebp+0C]
 db 83 45 0c 01 8b 45 0c

Empire.exe+73af44: //new
// add dword ptr [ebp+0C],01
// mov eax,[ebp+0C]
 db 83 45 0c 01 8b 45 0c

Empire.exe+1ca2c2: //new
// mov [eax+00000D34],ecx
 db 89 88 34 0d 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableIMP)
unregistersymbol(iEnableMG)
unregistersymbol(iEnableMT)
unregistersymbol(iEnableMR)
unregistersymbol(iEnableMP)
unregistersymbol(iEnableMC)
unregistersymbol(iEnableMA)
unregistersymbol(iMinGold)
unregistersymbol(pCurGMP)
unregistersymbol(pGold)
//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Enable/Disable God Mode"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Enable/Disable Unlimited Ammo"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMA</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Enable/Disable Unlimited Movement Points"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableIMP</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Enable/Disable Recover Troop Size"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMT</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Enable/Disable Research in 1 Day"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Enable/Disable Recruitment in 1 Day (Capital)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMP</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Enable/Disable Construction in 1 Day"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Enable/Disable Minimum Gold"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMG</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Minimum Gold Value"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinGold</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Empire: Total War
 Game Version  : 1.5.0 (Build 1332.21992)
 Proces Name   : Empire.exe
 Script Version: 3.2
 CE Version    : 6.1
 Release date  : 24-Jan-2012 (changes in _InfMPT)
 Author        : Recifense
 Features:
 Features:
 - God Mode
 - Minimum Gold
 - Umlimited Ammo (Range Troop in combat) (new)
 - Unlimited Movement Points (for selected army/ship/agent)
 - Recover troop size (when moving) (new)
 - Research in 1 day
 - Recruitmentt in 1 Day (in Region Capital)(new)[1]
 - Construction/Improvement in 1 Day (new)
===========================================
[1] Do not recruit from your army, always from the capital. OR the game will eventually crash.
</Comments>
</CheatTable>
