<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>37</ID>
      <Description>"[X] &lt;== Commander The Great War v1.5.1 Retail Script 1.0 (AOB)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Commander The Great War
 Game Version  : 1.5.1
 Game Sponsor  : Retail
 Process Name  : ctgw.exe
 Script Version: 1.0 (AOB)
 CE Version    : 6.4
 Release date  : 09-Aug-2014
 Author        : Recifense
 History:
 05-Aug-14: First Release
 09-Aug-14: First Release (AOB)
 Features:
 - Free Movement
 - Free Action
 - Free Fire
 - God Mode
 - Production in 1 Turn
 - Minimum Resources
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"ctgw.exe")

//=========================================
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.4)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

AOBScan(aobMOSU,89 81 94 00 00 00 8b 49 6c e8 ?? ?? ?? ?? 5d c2 04 00 cc cc cc)
AOBScan(aobMOMP,c7 47 68 00 00 00 00 8b 4d f4 64 89 0d 00 00 00 00 59 5f 5e 5b)
AOBScan(aobMOAP,c7 43 68 00 00 00 00 8b 8e a8 00 00 00 83 79 04 00 ?? ?? 56 68)
AOBScan(aobGDMD,8b 8e a8 00 00 00 29 46 64 83 79 04 00 ?? ?? 56 68 ?? ?? ?? ??)
AOBScan(aobMOUF,c7 46 68 00 00 00 00 c7 46 6c 00 00 00 00 c7 43 68 00 00 00 00)
AOBScan(aobGDMA,8b 45 08 39 41 70 ?? ?? 89 41 70 8b 81 a8 00 00 00 83 78 04 00)
AOBScan(aobMMP1,c7 46 68 00 00 00 00 e8 ?? ?? ?? ?? ff 75 08 8b ce e8 ?? ?? ??)
AOBScan(aobMOPP,89 46 08 89 57 04 8b 42 04 5f 89 10 5e 8b e5 5d c2 08 00 cc cc)
AOBScan(aobMOPR,8b 81 b8 00 00 00 c3 cc cc cc cc cc cc cc cc cc 8b 81 bc 00 00)
AOBScan(aobMUF2,8b 45 08 39 41 6c ?? ?? 89 41 6c 8b 81 a8 00 00 00 83 78 04 00)
AOBScan(aobMMP2,c7 47 68 00 00 00 00 c7 45 fc ff ff ff ff e8 ?? ?? ?? ?? 8b 4d)
AOBScan(aobFHFN,89 b7 9c 00 00 00 c7 87 a0 00 00 00 ff ff ff ff c7 87 a4 00 00)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonSelUnit)
label(_BackMSU)
label(_ExitMSU)
label(_MonMovePoints)
label(_BackMMP)
label(_ExitMMP)
label(_MonActionPoints)
label(_BackMAP)
label(_ExitMAP)
label(_GodModeD)
label(_BackGMD)
label(_ExitGMD)
label(_MonUnitFire)
label(_BackMUF)
label(_ExitMUF)
label(_GodModeA)
label(_BackGMA)
label(_ExitGMA)
label(_MonMovePoints1)
label(_BackMP1)
label(_ExitMP1)
label(_MonPlayerProd)
label(_BackMPP)
label(_ExitMPP)
label(_MonPlayerResources)
label(_BackMPR)
label(_ExitMPR)
label(_MonUnitFire2)
label(_BackUF2)
label(_ExitUF2)
label(_MonMovePoints2)
label(_BackMP2)
label(_ExitMP2)
label(_FindHumanFaction)
label(_BackFHF)
label(_ExitFHF)
label(iEnableMAP)
label(iEnableGMD)
label(iEnableMUF)
label(iEnableMPP)
label(iEnableMPR)
label(iID)
label(pUnit)
label(pFaction)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMAP)
registersymbol(iEnableGMD)
registersymbol(iEnableMUF)
registersymbol(iEnableMPP)
registersymbol(iEnableMPR)
registersymbol(pUnit)
registersymbol(pFaction)

registersymbol(aobMOSU)
registersymbol(aobMOMP)
registersymbol(aobMOAP)
registersymbol(aobGDMD)
registersymbol(aobMOUF)
registersymbol(aobGDMA)
registersymbol(aobMMP1)
registersymbol(aobMOPP)
registersymbol(aobMOPR)
registersymbol(aobMUF2)
registersymbol(aobMMP2)
registersymbol(aobFHFN)

//=========================================
MyCode:
//=========================================
// On selecting a unit
_MonSelUnit:
 mov [pUnit],eax

_ExitMSU:
 mov [ecx+00000094],eax            // Original code
 jmp _BackMSU                      // Back to main code

//=========================================
// When unit moves
_MonMovePoints:
 push eax

 cmp dword ptr [iEnableMAP],0
 je _ExitMMP                       // Jump if feature is disabled

 mov eax,[edi+000000a4]            // pCountry
 test eax,eax
 jz _ExitMMP

 mov eax,[eax+5c]                  // pFaction
 test eax,eax
 jz _ExitMMP

 mov eax,[eax+10]                  // Get ID
 cmp eax,[iID]
 jne _ExitMMP

 pop eax
 jmp _BackMMP                      // Back to main code
//--
_ExitMMP:
 pop eax

 mov [edi+68],00000000             // Original code
 jmp _BackMMP                      // Back to main code

//=========================================
// When shot at
_MonActionPoints:
 push eax

 cmp dword ptr [iEnableMAP],0
 je _ExitMAP                       // Jump if feature is disabled

 mov eax,[ebx+000000a4]            // pCountry
 test eax,eax
 jz _ExitMAP

 mov eax,[eax+5c]                  // pFaction
 test eax,eax
 jz _ExitMAP

 mov eax,[eax+10]                  // Get ID
 cmp eax,[iID]
 jne _ExitMAP

 pop eax
 jmp _BackMAP                      // Back to main code
//--
_ExitMAP:
 pop eax

 mov [ebx+68],00000000             // Original code
 jmp _BackMAP                      // Back to main code

//=========================================
// When Attacked
_GodModeD:
 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 mov ecx,[esi+000000a4]            // pCountry
 test ecx,ecx
 jz _ExitGMD

 mov ecx,[ecx+5c]                  // pFaction
 test ecx,ecx
 jz _ExitGMD

 mov ecx,[ecx+10]                  // Get ID
 cmp ecx,[iID]
 jne _ExitGMD

 xor eax,eax                       // value2decrease  = 0

_ExitGMD:
 mov ecx,[esi+000000A8]            // Original code
 jmp _BackGMD                      // Back to main code

//=========================================
// When attacking
_MonUnitFire:
 push eax

 cmp dword ptr [iEnableMUF],0
 je _ExitMUF                       // Jump if feature is disabled

 mov eax,[esi+000000a4]            // pCountry
 test eax,eax
 jz _ExitMUF

 mov eax,[eax+5c]                  // pFaction
 test eax,eax
 jz _ExitMUF

 mov eax,[eax+10]                  // Get ID
 cmp eax,[iID]
 jne _ExitMUF

 pop eax
 jmp _BackMUF                      // Back to main code
//--
_ExitMUF:
 pop eax

 mov [esi+68],00000000             // Original code
 mov [esi+6C],00000000             // Original code
 jmp _BackMUF                      // Back to main code

//=========================================
// When Attacking
_GodModeA:
 cmp dword ptr [iEnableGMD],0
 je _ExitGMA                       // Jump if feature is disabled

 mov eax,[esi+000000a4]            // pCountry
 test eax,eax
 jz _ExitGMA

 mov eax,[eax+5c]                  // pFaction
 test eax,eax
 jz _ExitGMA

 mov eax,[eax+10]                  // Get ID
 cmp eax,[iID]
 jne _ExitGMA

 mov eax,#100
 mov [ebp+08],eax
 mov [ecx+70],eax

_ExitGMA:
 mov eax,[ebp+08]                  // Original code
 cmp [ecx+70],eax                  // Original code
 jmp _BackGMA                      // Back to main code

//=========================================
// When unit moves after battle
_MonMovePoints1:
 push eax

 cmp dword ptr [iEnableMAP],0
 je _ExitMP1                       // Jump if feature is disabled

 mov eax,[esi+000000a4]            // pCountry
 test eax,eax
 jz _ExitMP1

 mov eax,[eax+5c]                  // pFaction
 test eax,eax
 jz _ExitMP1

 mov eax,[eax+10]                  // Get ID
 cmp eax,[iID]
 jne _ExitMP1

 pop eax
 jmp _BackMP1                      // Back to main code
//--
_ExitMP1:
 pop eax

 mov [esi+68],00000000             // Original code
 jmp _BackMP1                      // Back to main code

//=========================================
// When Setting Production (inc #)
_MonPlayerProd:
 mov [esi+08],eax                  // Original code (inc #)

 cmp dword ptr [iEnableMPP],0
 je _ExitMPP                       // Jump if feature is disabled

 mov eax,[esi]                     // pCountry
 test eax,eax
 jz _ExitMPP

 mov eax,[eax+5c]                  // pFaction
 test eax,eax
 jz _ExitMPP

 mov eax,[eax+10]                  // Get ID
 cmp eax,[iID]
 jne _ExitMPP

 mov eax,1
 mov [edx+10],eax                  // EDX = Production

_ExitMPP:
 mov [edi+04],edx                  // Original code (Set next)
 jmp _BackMPP                      // Back to main code

//=========================================
// When Resources are displayed
_MonPlayerResources:
 push ebx

 mov eax,[ecx+5c]                  // pFaction
 test eax,eax
 jz _ExitMPR

 mov eax,[eax+10]                  // Get ID
 cmp eax,[iID]
 jne _ExitMPR

 cmp dword ptr [iEnableMPR],0
 je _ExitMPR                       // Jump if feature is disabled

 mov eax,#1000
 mov ebx,[ecx+000000b8]            // ManPower
 cmp ebx,eax
 cmovs ebx,eax
 mov [ecx+000000b8],ebx

 mov eax,#500
 mov ebx,[ecx+000000bc]            // Production Points
 cmp ebx,eax
 cmovs ebx,eax
 mov [ecx+000000bc],ebx

 mov ebx,[ecx+000000c0]            // Ammunition
 cmp ebx,eax
 cmovs ebx,eax
 mov [ecx+000000c0],ebx

_ExitMPR:
 pop ebx

 mov eax,[ecx+000000B8]            // Original code (Get ManPower)
 jmp _BackMPR                      // Back to main code

//=========================================
// When Moving (cannons)
_MonUnitFire2:
 cmp dword ptr [iEnableMUF],0
 je _ExitUF2                       // Jump if feature is disabled

 mov eax,[ecx+000000a4]            // pCountry
 test eax,eax
 jz _ExitUF2

 mov eax,[eax+5c]                  // pFaction
 test eax,eax
 jz _ExitUF2

 mov eax,[eax+10]                  // Get ID
 cmp eax,[iID]
 jne _ExitUF2

 mov eax,[ecx+6C]
 cmp eax,[ebp+08]
 js _ExitUF2

 mov [ebp+08],eax

_ExitUF2:
 mov eax,[ebp+08]                  // Original code
 cmp [ecx+6C],eax                  // Original code
 jmp _BackUF2                      // Back to main code

//=========================================
// When unit moves (sea units)
_MonMovePoints2:
 push eax

 cmp dword ptr [iEnableMAP],0
 je _ExitMP2                       // Jump if feature is disabled

 mov eax,[edi+000000a4]            // pCountry
 test eax,eax
 jz _ExitMP2

 mov eax,[eax+5c]                  // pFaction
 test eax,eax
 jz _ExitMP2

 mov eax,[eax+10]                  // Get ID
 cmp eax,[iID]
 jne _ExitMP2

 pop eax
 jmp _BackMP2                      // Back to main code
//--
_ExitMP2:
 pop eax

 mov [edi+68],00000000             // Original code
 jmp _BackMP2                      // Back to main code

//=========================================
// On selecting a unit
_FindHumanFaction:
 push eax

 test esi,esi
 jz _ExitFHF

 mov [pFaction],esi

 mov eax,[esi+10]
 test eax,eax
 jz _ExitFHF

 mov [iID],eax

_ExitFHF:
 pop eax

 mov [edi+0000009C],esi            // Original code
 jmp _BackFHF                      // Back to main code

//=========================================
 db '=============================================&gt;'
 db 'CE6.4 Script by Recifense 080914'
//=========================================
// Variables
iEnableMAP:
 dd 0
iEnableGMD:
 dd 0
iEnableMUF:
 dd 0
iEnableMPP:
 dd 0
iEnableMPR:
 dd 0
iID:
 dd #99
pUnit:
 dd 0
pFaction:
 dd 0

//=========================================
// Hacking Points
aobMOSU:
 jmp _MonSelUnit
 nop
_BackMSU:

aobMOMP:
 jmp _MonMovePoints
 nop
 nop
_BackMMP:

aobMOAP:
 jmp _MonActionPoints
 nop
 nop
_BackMAP:

aobGDMD:
 jmp _GodModeD
 nop
_BackGMD:

aobMOUF:
 jmp _MonUnitFire
 db 90 90 90 90 90
 db 90 90 90 90
_BackMUF:

aobGDMA:
 jmp _GodModeA
 nop
_BackGMA:

aobMMP1:
 jmp _MonMovePoints1
 nop
 nop
_BackMP1:

aobMOPP:
 jmp _MonPlayerProd
 nop
_BackMPP:

aobMOPR:
 jmp _MonPlayerResources
 nop
_BackMPR:

aobMUF2:
 jmp _MonUnitFire2
 nop
_BackUF2:

aobMMP2:
 jmp _MonMovePoints2
 nop
 nop
_BackMP2:

aobFHFN:
 jmp _FindHumanFaction
 nop
_BackFHF:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
aobMOSU:
// mov [ecx+00000094],eax
 db 89 81 94 00 00 00

aobMOMP:
// mov [edi+68],00000000
 db c7 47 68 00 00 00 00

aobMOAP:
// mov [ebx+68],00000000
 db c7 43 68 00 00 00 00

aobGDMD:
// mov ecx,[esi+000000A8]
 db 8b 8e a8 00 00 00

aobMOUF:
// mov [esi+68],00000000
// mov [esi+6C],00000000
 db c7 46 68 00 00 00 00
 db c7 46 6c 00 00 00 00

aobGDMA:
// mov eax,[ebp+08]
// cmp [ecx+70],eax
 db 8b 45 08
 db 39 41 70

aobMMP1:
// mov [esi+68],00000000
 db c7 46 68 00 00 00 00

aobMOPP:
// mov [esi+08],eax
// mov [edi+04],edx
 db 89 46 08
 db 89 57 04

aobMOPR:
// mov eax,[ecx+000000B8]
 db 8b 81 b8 00 00 00

aobMUF2:
// mov eax,[ebp+08]
// cmp [ecx+6C],eax
 db 8b 45 08
 db 39 41 6c

aobMMP2:
// mov [edi+68],00000000
 db c7 47 68 00 00 00 00

aobFHFN:
// mov [edi+0000009C],esi
 db 89 b7 9c 00 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMAP)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMUF)
unregistersymbol(iEnableMPP)
unregistersymbol(iEnableMPR)
unregistersymbol(pUnit)
unregistersymbol(pFaction)

unregistersymbol(aobMOSU)
unregistersymbol(aobMOMP)
unregistersymbol(aobMOAP)
unregistersymbol(aobGDMD)
unregistersymbol(aobMOUF)
unregistersymbol(aobGDMA)
unregistersymbol(aobMMP1)
unregistersymbol(aobMOPP)
unregistersymbol(aobMOPR)
unregistersymbol(aobMUF2)
unregistersymbol(aobMMP2)
unregistersymbol(aobFHFN)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Enable/Disable Free Action =================&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMAP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Enable/Disable God Mode  =================&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Enable/Disable Free Fire ===================&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMUF</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Enable/Disable Production in 1 Turn ==========&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMPP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Enable/Disable Minimum Resources ==========&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMPR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"Human Player Faction ====&gt;"</Description>
          <LastState Activated="0" RealAddress="00000000"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>0000FF</Color>
          <VariableType>String</VariableType>
          <Length>16</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pFaction</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Commander The Great War
 Game Version  : 1.5.1
 Game Sponsor  : Retail
 Process Name  : ctgw.exe
 Script Version: 1.0 (AOB)
 CE Version    : 6.4
 Release date  : 09-Aug-2014
 Author        : Recifense
 History:
 05-Aug-14: First Release
 09-Aug-14: First Release (AOB)
 Features:
 - Free Movement          [1](*)
 - Free Action            [2](*)
 - Free Fire              [3](*)
 - God Mode               [4]
 - Production in 1 Turn   [5]
 - Minimum Resources      [6]
 - Some Pointers          [7]
===========================================
[1] For player's faction's units;
[2] For player's faction's units;
[3] For player's faction's units;
[4] For player's faction's units;
[5] For player only;
[6] For player only;
[7] Used in the table;
(*) Not valid for unit just produced;
===========================================
[USAGE]
1) Run CE64;
2) Run Game;
3) Load the game process "ctgw.exe" in CE;
4) Load this table and activate it;
5) Change the value to "Enabled" of each cheat you want to use;
6) Game On;
===========================================
[HOTKEYS]
CTRL+Home      = Enable  ALL cheats;
CTRL+End       = Disable ALL cheats;
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat. So you can always come back in case you don't like the result.
===========================================
[INFO]
Tested on Win 7 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
