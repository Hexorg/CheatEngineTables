<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Address for Auto-Refill"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>004958BC</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Address for infinite plant life"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>005447A0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Address for killing Armored Zombies"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>00545B1A</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Address for Killing Zombies"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>00545E04</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Address for Killing Zombie Stuff"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>00545771</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Address for Infinite Sun"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>0041F636 </Address>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Instant Kill"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
//label(zombielabel)
//registersymbol(zombielabel)
//aobscan(zombieaob,db 89 AF C8 00 00 00)

00545E04:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
mov [edi+000000c8],0
//place your code here


originalcode:
//mov [edi+000000c8],ebp

exit:
jmp returnhere



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
00545E04:
mov [edi+000000c8],ebp
//Alt: db 89 AF C8 00 00 00
//unregistersymbol(zombielabel)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>16</Key>
            <Key>75</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Instant Killed Armored"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(zombiearmorlabel)
registersymbol(zombiearmorlabel)
aobscan(zombiearmoraob,89 8d d0 00 00 00)

zombiearmoraob:
zombiearmorlabel:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
mov [ebp+000000d0],0
//place your code here


originalcode:
//mov [ebp+000000d0],ecx

exit:
jmp returnhere



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
zombiearmorlabel:
mov [ebp+000000d0],ecx
//Alt: db 89 8D D0 00 00 00
unregistersymbol(zombiearmorlabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Killing Zombie Stuff"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(zombiestufflabel)
registersymbol(zombiestufflabel)
aobscan(zombiestuffaob,29 86 dc 00 00 00)

zombiestuffaob:
zombiestufflabel:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
sub [esi+000000dc],eax
mov [esi+000000dc],0
//place your code here


originalcode:
//sub [esi+000000dc],eax

exit:
jmp returnhere



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
zombiestufflabel:
sub [esi+000000dc],eax
//Alt: db 29 86 DC 00 00 00
unregistersymbol(zombiestufflabel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Instant Recharge"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

004958BC:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
inc [edi+24]
mov [edi+24],7530
//place your code here


originalcode:
//inc [edi+24]
mov eax,[edi+24]

exit:
jmp returnhere



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
004958BC:
inc [edi+24]
mov eax,[edi+24]
//Alt: db FF 47 24 8B 47 24
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Infinite Sun"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

0041F636:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
mov eax,[edi+00005578]
mov [edi+00005578],00002706
//place your code here


originalcode:
//mov eax,[edi+00005578]

exit:
jmp returnhere



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
0041F636:
mov eax,[edi+00005578]
//Alt: db 8B 87 78 55 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Infinite Plant Life"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

005447A0:
jmp newmem
nop
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
add dword ptr [esi+40],0
//place your code here


originalcode:
//add dword ptr [esi+40],fc
mov ecx,[esi+40]

exit:
jmp returnhere



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
005447A0:
add dword ptr [esi+40],fc
mov ecx,[esi+40]
//Alt: db 83 46 40 FC 8B 4E 40
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Recharge Plants"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

00469641:
jmp newmem
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
mov [edi+54],0
mov eax,[edi+54]
//place your code here


originalcode:
//mov eax,[edi+54]
test eax,eax

exit:
jmp returnhere



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
00469641:
mov eax,[edi+54]
test eax,eax
//Alt: db 8B 47 54 85 C0
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of add dword ptr [esi+40],FC</Description>
      <Address>005447A0</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>1447A0</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>F0</Byte>
        <Byte>B7</Byte>
        <Byte>EC</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>46</Byte>
        <Byte>40</Byte>
        <Byte>FC</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
        <Byte>40</Byte>
        <Byte>C7</Byte>
        <Byte>86</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :inc [edi+24]</Description>
      <Address>004958BC</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>958BC</ModuleNameOffset>
      <Before>
        <Byte>7F</Byte>
        <Byte>49</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
        <Byte>1F</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>47</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>24</Byte>
        <Byte>3B</Byte>
        <Byte>47</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [ebp+000000D0],ecx</Description>
      <Address>00545B1A</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>145B1A</ModuleNameOffset>
      <Before>
        <Byte>C8</Byte>
        <Byte>89</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>8D</Byte>
        <Byte>D0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F6</Byte>
        <Byte>C3</Byte>
        <Byte>04</Byte>
        <Byte>74</Byte>
        <Byte>09</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [edi+00005578],esi</Description>
      <Address>0041F636</Address>
      <ModuleName>popcapgame1.exe</ModuleName>
      <ModuleNameOffset>1F636</ModuleNameOffset>
      <Before>
        <Byte>D8</Byte>
        <Byte>7F</Byte>
        <Byte>0C</Byte>
        <Byte>2B</Byte>
        <Byte>F3</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>B7</Byte>
        <Byte>78</Byte>
        <Byte>55</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>5E</Byte>
        <Byte>C3</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>sunlabel</Name>
      <Address>0037287D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>zombiestufflabel</Name>
      <Address>00545771</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>zombiearmorlabel</Name>
      <Address>00545B1A</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
