<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>7536</ID>
      <Description>"Game Speed Mod .3 [F11]"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(gameSpeedReadAOB,DDDA.exe,F3 0F 10 4A 24 F3 0F 59 49 70)
registersymbol(gameSpeedReadAOB)

label(bSlowMo)
label(bAutoSlowMo)
label(bArrowSlowMo)
label(bGreatGambleOnly)
label(bGameSpeedFlag)
label(fSlowMotionSpeed)
label(fArrowSlowMoSpeed)
label(pGameSpeed)
registersymbol(bSlowMo)
registersymbol(bAutoSlowMo)
registersymbol(bArrowSlowMo)
registersymbol(bGreatGambleOnly)
registersymbol(fSlowMotionSpeed)
registersymbol(fArrowSlowMoSpeed)
registersymbol(pGameSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)

label(isWeaponBow)
label(isBowDrawn)
label(isWeaponDrawn)
label(doExit)

label(doArrowCheck)
label(doExitArrowCheck1)
label(doExitArrowCheck2)
label(isArrowFlying)
label(isSkillReadying)
label(isGreatGamble)

label(doGameSpeedReset)
label(doSlowMotionSpeedWrite)
label(doArrowSlowMotionSpeedWrite)

newmem:
//MAIN START//
  mov [pGameSpeed],edx
  cmp byte ptr [bSlowMo],1
  jne @f
  call doArrowCheck
  jmp originalcode

@@:
  cmp byte ptr [bAutoSlowMo],0
  je doExit

  pushad
  push 00000004
  push [pPartyBase]
  call isbadreadptr
  test eax,eax
  popad
  jnz originalcode

  cmp byte ptr [bAutoSlowMo],1
  jne isWeaponDrawn

isWeaponBow:
  push eax
  mov eax,[pPartyBase]
  cmp byte ptr [eax+355b],9 //magick bow
  je @f
  cmp byte ptr [eax+355b],a //bow
  je @f
  cmp byte ptr [eax+355b],b //longbow
@@:
  pop eax
  jne doExit

isBowDrawn:
  push eax
  mov eax,[pPartyBase]
  test byte ptr [eax+273d],8 //bow drawn
  pop eax
  jz doExit
  call doArrowCheck
  jmp originalcode

isWeaponDrawn:
  push eax
  mov eax,[pPartyBase]
  test byte ptr [eax+2360],80 //weapon drawn
  pop eax
  jz  doExit
  call doArrowCheck
  jmp originalcode

doExit:
  call doGameSpeedReset
  jmp originalcode
//MAIN END//

//SUBROUTINES START//
doArrowCheck:
  cmp byte ptr [bArrowSlowMo],1
  jne doExitArrowCheck1
  call isArrowFlying
  jne doExitArrowCheck1
  cmp byte ptr [bGreatGambleOnly],1
  jne doExitArrowCheck2
  call isGreatGamble
  je doExitArrowCheck2
  jmp doExitArrowCheck1

doExitArrowCheck1:
  call isSkillReadying
  jne @f
  call doGameSpeedReset
  ret
@@:
  call doSlowMotionSpeedWrite
  ret

doExitArrowCheck2:
  call doArrowSlowMotionSpeedWrite
  ret

isArrowFlying:
  push eax
  mov eax,[pPartyBase]
  cmp [eax+f44],92F //arrow in flight
  pop eax
  ret

isSkillReadying:
  push eax
  mov eax,[pPartyBase]
  cmp word ptr [eax+3064],3 //skill readying
  pop eax
  ret

isGreatGamble:
  push eax
  mov eax,[pPartyBase]
  cmp word ptr [eax+38b0],198 //using great gamble skill
  je @f
  cmp byte ptr [eax+3d04],0 //maneuvering great gamble
@@:
  pop eax
  ret

doGameSpeedReset:
  cmp byte ptr [bGameSpeedFlag],0
  je @f
  mov byte ptr [bGameSpeedFlag],0
  mov dword ptr [edx+24],(float)1.0
  @@:
  ret

doSlowMotionSpeedWrite:
  cmp byte ptr [bGameSpeedFlag],1
  je @f
  mov byte ptr [bGameSpeedFlag],1
  movss xmm1,[fSlowMotionSpeed]
  movss dword ptr [edx+24],xmm1
@@:
  ret

doArrowSlowMotionSpeedWrite:
  cmp byte ptr [bGameSpeedFlag],2
  je @f
  mov byte ptr [bGameSpeedFlag],2
  movss xmm1,[fArrowSlowMoSpeed]
  movss dword ptr [edx+24],xmm1
@@:
  ret
//SUBROUTINES END

originalcode:
  movss xmm1,[edx+24]
  jmp returnhere

bSlowMo:
  db 0
bAutoSlowMo:
  db 0
bArrowSlowMo:
  db 0
bGreatGambleOnly:
  db 0
bGameSpeedFlag:
  db 0
fSlowMotionSpeed:
  dd (float)0.3
fArrowSlowMoSpeed:
  dd (float)0.05
pGameSpeed:
  dd 0

gameSpeedReadAOB:
  jmp newmem
returnhere:

//DEFAULT GAME SLOW MOTION
aobscanmodule(defaultSlowMoAOB,DDDA.exe,F3 0F 11 44 BE 20)
aobscanmodule(defaultSlowMoAOB2,DDDA.exe,F3 0F 11 59 24 89)
registersymbol(defaultSlowMoAOB)
registersymbol(defaultSlowMoAOB2)
alloc(newmem2,1024)
alloc(newmem3,1024)

label(originalcode2)
label(returnhere2)
label(originalcode3)
label(returnhere3)

newmem2:
  cmp byte ptr [bGreatGambleOnly],1
  jne @f
  call isGreatGamble
  je returnhere2
@@:
  cmp byte ptr [bArrowSlowMo],1
  jne @f
  cmp byte ptr [bGreatGambleOnly],0
@@:
  je returnhere2
originalcode2:
  movss [esi+edi*4+20],xmm0
  jmp returnhere2

defaultSlowMoAOB:
  jmp newmem2
  nop
returnhere2:

newmem3:
  cmp byte ptr [bGreatGambleOnly],1
  jne @f
  call isGreatGamble
  je returnhere3
@@:
  cmp byte ptr [bArrowSlowMo],1
  jne @f
  cmp byte ptr [bGreatGambleOnly],0
@@:
  je returnhere3
originalcode3:
  movss [ecx+24],xmm3
  jmp returnhere3

defaultSlowMoAOB2:
  jmp newmem3
returnhere3:
//DEFAULT GAME SLOW MOTION END

[DISABLE]
dealloc(newmem)
gameSpeedReadAOB:
  db F3 0F 10 4A 24
unregistersymbol(gameSpeedReadAOB)

unregistersymbol(bSlowMo)
unregistersymbol(bAutoSlowMo)
unregistersymbol(bArrowSlowMo)
unregistersymbol(bGreatGambleOnly)
unregistersymbol(fSlowMotionSpeed)
unregistersymbol(fArrowSlowMoSpeed)
unregistersymbol(pGameSpeed)

dealloc(newmem2)
defaultSlowMoAOB:
  db F3 0F 11 44 BE 20
unregistersymbol(defaultSlowMoAOB)

dealloc(newmem3)
defaultSlowMoAOB2:
db F3 0F 11 59 24
unregistersymbol(defaultSlowMoAOB2)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7537</ID>
          <Description>"Slow Motion? (Caps &gt;ON, R &gt;OFF)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:Enable
</DropDownList>
          <VariableType>Byte</VariableType>
          <Address>bSlowMo</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>20</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>86</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>7538</ID>
          <Description>"Auto Slow Motion? (RightArrow+numpad7,8,9)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:Bow
2:Weapon
</DropDownList>
          <VariableType>Byte</VariableType>
          <Address>bAutoSlowMo</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>39</Key>
                <Key>103</Key>
              </Keys>
              <Value>0</Value>
              <Description>disable</Description>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>39</Key>
                <Key>104</Key>
              </Keys>
              <Value>1</Value>
              <Description>bow</Description>
              <ID>1</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>39</Key>
                <Key>105</Key>
              </Keys>
              <Value>2</Value>
              <Description>weapon</Description>
              <ID>2</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>7539</ID>
          <Description>"Extra Slow Motion For Arrow Skills?"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:Enable
</DropDownList>
          <VariableType>Byte</VariableType>
          <Address>bArrowSlowMo</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>7540</ID>
              <Description>"Great Gamble Only?"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:Enable
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>bGreatGambleOnly</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7541</ID>
          <Description>"Slow Motion Speed"</Description>
          <VariableType>Float</VariableType>
          <Address>fSlowMotionSpeed</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7542</ID>
          <Description>"Arrow Slow Motion Speed"</Description>
          <VariableType>Float</VariableType>
          <Address>fArrowSlowMoSpeed</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7543</ID>
          <Description>"Game Speed"</Description>
          <VariableType>Float</VariableType>
          <Address>pGameSpeed</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>7496</ID>
      <Description>"Reaper's Arrow Always Critical"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(chargearrow_aob,DDDA.exe,F3 0F 11 85 A0 01 00 00 3B)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movss [ebp+000001A0],xmm0
  push eax
  mov eax,[ecx+58]
  test al,1
  jnz @f
  sub [ecx+58],1
  @@:
  pop eax
  jmp return

chargearrow_aob:
  jmp code
  nop
  nop
  nop
return:
registersymbol(chargearrow_aob)

[DISABLE]

chargearrow_aob:
  db F3 0F 11 85 A0 01 00 00

unregistersymbol(chargearrow_aob)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
