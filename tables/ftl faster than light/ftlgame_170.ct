<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>40</ID>
      <Description>"Starter Cheats"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{

Activate the "Get item address" script, choose the 1st item in your bag and the amount
you have from the drop-down lists. Then move away from the item in game and go back to it
and then toggle the item list header. The address will have been populated.
(DO NOT TOUCH ANY ADDRESSES THAT DO NOT HAVE TEXT VALUES))

If you do not use the 1st item in your bag it will still work but the list wont populate
from the start of your items.
If you have hundreds of items and you only want to look at your key items etc, you could
choose the last item in your battle items category, then the list will have your key items.

Also if you dont mind about the list, and only want to change a specific item, the
first 2 addresses in the item list are the item and amount of what you chose so you

For IV/EV editor:
check EV/IV Editor script, and input the current IV or EV stats of the pokemon you want to edit.
THE VALUES MUST BE *2+1 of what you see in game. so if you have 10, input 21, if you have 3, input 7.
Check the New EV/IV script and edit the values to whatever you want.
If you entered the IV values in the current values, and it the (maybe) values didnt load, try with EV
current values.....the maybe values will be either Iv or EV depending on what you used, so if you used
IV for current values, the (maybe) values will be EV and vice versa.


For the Get pokemon part, Just activate the script then go into your pokemon menu,
the addresses will populate for whatever pokemon you are looking at. You can change
what pokemon you have and what level they are via the EXP pointer.
If you want lv 100, you can set it to lv 99 then use a rare candy and the stats
will update when you hit 100. OR you can set to 100 then fight to update the stats.

The address values will change when you are outside of you pokemon menu also, I
recommend only changing them inside the pokemon menu.


...Toggle this script to start.
}
[DISABLE]
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Edit Ship Qualities"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{

Activate the "Get item address" script, choose the 1st item in your bag and the amount
you have from the drop-down lists. Then move away from the item in game and go back to it
and then toggle the item list header. The address will have been populated.
(DO NOT TOUCH ANY ADDRESSES THAT DO NOT HAVE TEXT VALUES))

If you do not use the 1st item in your bag it will still work but the list wont populate
from the start of your items.
If you have hundreds of items and you only want to look at your key items etc, you could
choose the last item in your battle items category, then the list will have your key items.

Also if you dont mind about the list, and only want to change a specific item, the
first 2 addresses in the item list are the item and amount of what you chose so you

For IV/EV editor:
check EV/IV Editor script, and input the current IV or EV stats of the pokemon you want to edit.
THE VALUES MUST BE *2+1 of what you see in game. so if you have 10, input 21, if you have 3, input 7.
Check the New EV/IV script and edit the values to whatever you want.
If you entered the IV values in the current values, and it the (maybe) values didnt load, try with EV
current values.....the maybe values will be either Iv or EV depending on what you used, so if you used
IV for current values, the (maybe) values will be EV and vice versa.


For the Get pokemon part, Just activate the script then go into your pokemon menu,
the addresses will populate for whatever pokemon you are looking at. You can change
what pokemon you have and what level they are via the EXP pointer.
If you want lv 100, you can set it to lv 99 then use a rare candy and the stats
will update when you hit 100. OR you can set to 100 then fight to update the stats.

The address values will change when you are outside of you pokemon menu also, I
recommend only changing them inside the pokemon menu.


...Toggle this script to start.
}
[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Infinite Power"</Description>
              <LastState/>
              <Color>808000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>AoBScan( RemoveEnergy, B0 01 5B C2 0C )
AoBScan( AddEnergy, 39 03 7D 07 FF 45 )
[ENABLE]
RemoveEnergy-2:
db 90 90

AddEnergy+7:
db 90 90

[DISABLE]
RemoveEnergy-2:
db FF 09 //.text:0054AB21                 dec     dword ptr [ecx]

AddEnergy+7:
db FF 03 //.text:0054AC58                 inc     dword ptr [ebx]
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>100</Key>
                  </Keys>
                  <Description>Infinite Power</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>13</ID>
              <Description>"Hull (Max: 30)"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>0079ba90</Address>
              <Offsets>
                <Offset>12C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"Layers of Shields (Max: 4)"</Description>
              <LastState Value="6" Activated="1" RealAddress="09E8ECF4"/>
              <VariableType>4 Bytes</VariableType>
              <Address>09E8ECF4</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Edit Crew Qualities"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{

Activate the "Get item address" script, choose the 1st item in your bag and the amount
you have from the drop-down lists. Then move away from the item in game and go back to it
and then toggle the item list header. The address will have been populated.
(DO NOT TOUCH ANY ADDRESSES THAT DO NOT HAVE TEXT VALUES))

If you do not use the 1st item in your bag it will still work but the list wont populate
from the start of your items.
If you have hundreds of items and you only want to look at your key items etc, you could
choose the last item in your battle items category, then the list will have your key items.

Also if you dont mind about the list, and only want to change a specific item, the
first 2 addresses in the item list are the item and amount of what you chose so you

For IV/EV editor:
check EV/IV Editor script, and input the current IV or EV stats of the pokemon you want to edit.
THE VALUES MUST BE *2+1 of what you see in game. so if you have 10, input 21, if you have 3, input 7.
Check the New EV/IV script and edit the values to whatever you want.
If you entered the IV values in the current values, and it the (maybe) values didnt load, try with EV
current values.....the maybe values will be either Iv or EV depending on what you used, so if you used
IV for current values, the (maybe) values will be EV and vice versa.


For the Get pokemon part, Just activate the script then go into your pokemon menu,
the addresses will populate for whatever pokemon you are looking at. You can change
what pokemon you have and what level they are via the EXP pointer.
If you want lv 100, you can set it to lv 99 then use a rare candy and the stats
will update when you hit 100. OR you can set to 100 then fight to update the stats.

The address values will change when you are outside of you pokemon menu also, I
recommend only changing them inside the pokemon menu.


...Toggle this script to start.
}
[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Crew Trains 4x Faster"</Description>
              <LastState/>
              <Color>808000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>AoBScan( crewstats, FF 00 8B 44 24 14  ) /* .text:004E681C               inc    dword ptr [eax]
                                            .text:004E681E               mov    eax, [esp+6Ch+var_58]*/

[ENABLE]
alloc(newmem, 256) //Allocate space for the code cave.
label(exit) //Create an address for the jump.

crewstats-6: //Create the hook.
jmp newmem //Jmp to the new mem.
nop //Space it out so the exit lands in the right place.
exit: //Set our exit label.

newmem:
add eax,[ecx+00000210] //Original Code
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
jmp exit //Return

[DISABLE]
dealloc(newmem)
dealloc(exit)

crewstats-6:
add eax,[ecx+00000210] //Original Code
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>104</Key>
                  </Keys>
                  <Description>Crew Trains 4x Faster</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"Crew Trains 10x Faster"</Description>
              <LastState/>
              <Color>808000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>AoBScan( crewstats, FF 00 8B 44 24 14  ) /* .text:004E681C               inc    dword ptr [eax]
                                            .text:004E681E               mov    eax, [esp+6Ch+var_58]*/

[ENABLE]
alloc(newmem, 256) //Allocate space for the code cave.
label(exit) //Create an address for the jump.

crewstats-6: //Create the hook.
jmp newmem //Jmp to the new mem.
nop //Space it out so the exit lands in the right place.
exit: //Set our exit label.

newmem:
add eax,[ecx+00000210] //Original Code
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
jmp exit //Return

[DISABLE]
dealloc(newmem)
dealloc(exit)

crewstats-6:
add eax,[ecx+00000210] //Original Code
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>104</Key>
                  </Keys>
                  <Description>Crew Trains 4x Faster</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Crew Trains Instantly"</Description>
              <LastState/>
              <Color>808000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>AoBScan( crewstats, FF 00 8B 44 24 14  ) /* .text:004E681C               inc    dword ptr [eax]
                                            .text:004E681E               mov    eax, [esp+6Ch+var_58]*/

[ENABLE]
alloc(newmem, 256) //Allocate space for the code cave.
label(exit) //Create an address for the jump.

crewstats-6: //Create the hook.
jmp newmem //Jmp to the new mem.
nop //Space it out so the exit lands in the right place.
exit: //Set our exit label.

newmem:
add eax,[ecx+00000210] //Original Code
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
inc [eax] //Add 1
jmp exit //Return

[DISABLE]
dealloc(newmem)
dealloc(exit)

crewstats-6:
add eax,[ecx+00000210] //Original Code
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>104</Key>
                  </Keys>
                  <Description>Crew Trains 4x Faster</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Edit Weapon Qualities"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{

Activate the "Get item address" script, choose the 1st item in your bag and the amount
you have from the drop-down lists. Then move away from the item in game and go back to it
and then toggle the item list header. The address will have been populated.
(DO NOT TOUCH ANY ADDRESSES THAT DO NOT HAVE TEXT VALUES))

If you do not use the 1st item in your bag it will still work but the list wont populate
from the start of your items.
If you have hundreds of items and you only want to look at your key items etc, you could
choose the last item in your battle items category, then the list will have your key items.

Also if you dont mind about the list, and only want to change a specific item, the
first 2 addresses in the item list are the item and amount of what you chose so you

For IV/EV editor:
check EV/IV Editor script, and input the current IV or EV stats of the pokemon you want to edit.
THE VALUES MUST BE *2+1 of what you see in game. so if you have 10, input 21, if you have 3, input 7.
Check the New EV/IV script and edit the values to whatever you want.
If you entered the IV values in the current values, and it the (maybe) values didnt load, try with EV
current values.....the maybe values will be either Iv or EV depending on what you used, so if you used
IV for current values, the (maybe) values will be EV and vice versa.


For the Get pokemon part, Just activate the script then go into your pokemon menu,
the addresses will populate for whatever pokemon you are looking at. You can change
what pokemon you have and what level they are via the EXP pointer.
If you want lv 100, you can set it to lv 99 then use a rare candy and the stats
will update when you hit 100. OR you can set to 100 then fight to update the stats.

The address values will change when you are outside of you pokemon menu also, I
recommend only changing them inside the pokemon menu.


...Toggle this script to start.
}
[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>6</ID>
              <Description>"All Weapons Consume 1 Power Unit"</Description>
              <LastState/>
              <Color>808000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>AoBScan( WeaponPower, D9 40 0C DD )

[ENABLE]
alloc(newmem, 256)
label(return)

WeaponPower-7:
jmp newmem
return:

newmem:
mov eax,[ebx+edx*4] //Original code.
mov [eax+0B4],#1 //Set the power consumption variable to 1.
test eax,eax
jmp return

[DISABLE]
dealloc(newmem)
dealloc(return)
dealloc(originalcode)

WeaponPower-7: //Restore the function.
mov eax,[ebx+edx*4] //Original Code
test eax,eax //Original Code
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>101</Key>
                  </Keys>
                  <Description>All Weapons Use 1 Power Unit</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Weapons Charge Twice As Fast"</Description>
              <LastState/>
              <Color>808000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>AoBScan( Cooldown, D8 4C 24 50 8B 4C 24 64 ) /* .text:0043BED5          fmul    [esp+4+arg_48]
                                                .text:0043BED9          mov     ecx, [esp+4+pWeapon]*/

[ENABLE]
alloc(newmem, 256) //Allocate space for the code cave.
globalalloc(originalmem,6) //Allocate space for the original code.
label(player) //Create an address for the jump.
label(exit) //Create an address for the jump.
label(modifier) //Create our custom float variable.

originalmem:
ReadMem(Cooldown-6,6) //Store the original code in the originalmem variable. (.text:0041DE5B   fadd    ds:flt_69F588 .rdata:0069F588 flt_69F588 dd 1.0)

Cooldown-6: //Create the hook.
jmp newmem //Jmp to the new mem.
nop //Space it out so the exit lands in the right place.
exit: //Set our exit label.

newmem:
cmp [esp+31C],FFFF //Check if it's the player calling this function.
jg player //If it is, do the player multiplier.
ReadMem(Cooldown-6,6) //If it's not, it will fall through to here, where ReadMem will write the original instructions here and it will run it.
jmp exit //Return
player: //Set the player address.
fadd dword ptr [modifier] //Increase the timer by 2.
jmp exit //Return

modifier: //Create the modifier variable
dd 40000000 //2x (You can change this if you don't want to wait. 40800000 is 4x, 41000000 is 8x. Set it to 43FA0000 for instant charge. http://www.h-schmidt.net/FloatConverter/)

[DISABLE]
dealloc(newmem)
dealloc(player)
dealloc(exit)
dealloc(modifier)

Cooldown-6:
ReadMem(originalmem,6) //FTLGame.exe+1DE5B - D8 05 88F56900        - fadd dword ptr [FTLGame.exe+29F588]

dealloc(originalmem)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>102</Key>
                  </Keys>
                  <Description>Weapons Charge Twice As Fast</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>14</ID>
              <Description>"Weapons Charge Four Times As Fast"</Description>
              <LastState/>
              <Color>808000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>AoBScan( Cooldown, D8 4C 24 50 8B 4C 24 64 ) /* .text:0043BED5          fmul    [esp+4+arg_48]
                                                .text:0043BED9          mov     ecx, [esp+4+pWeapon]*/

[ENABLE]
alloc(newmem, 256) //Allocate space for the code cave.
globalalloc(originalmem,6) //Allocate space for the original code.
label(player) //Create an address for the jump.
label(exit) //Create an address for the jump.
label(modifier) //Create our custom float variable.

originalmem:
ReadMem(Cooldown-6,6) //Store the original code in the originalmem variable. (.text:0041DE5B   fadd    ds:flt_69F588 .rdata:0069F588 flt_69F588 dd 1.0)

Cooldown-6: //Create the hook.
jmp newmem //Jmp to the new mem.
nop //Space it out so the exit lands in the right place.
exit: //Set our exit label.

newmem:
cmp [esp+31C],FFFF //Check if it's the player calling this function.
jg player //If it is, do the player multiplier.
ReadMem(Cooldown-6,6) //If it's not, it will fall through to here, where ReadMem will write the original instructions here and it will run it.
jmp exit //Return
player: //Set the player address.
fadd dword ptr [modifier] //Increase the timer by 2.
jmp exit //Return

modifier: //Create the modifier variable
dd 40800000 //2x (You can change this if you don't want to wait. 40800000 is 4x, 41000000 is 8x. Set it to 43FA0000 for instant charge. http://www.h-schmidt.net/FloatConverter/)

[DISABLE]
dealloc(newmem)
dealloc(player)
dealloc(exit)
dealloc(modifier)

Cooldown-6:
ReadMem(originalmem,6) //FTLGame.exe+1DE5B - D8 05 88F56900        - fadd dword ptr [FTLGame.exe+29F588]

dealloc(originalmem)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>102</Key>
                  </Keys>
                  <Description>Weapons Charge Twice As Fast</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"Weapons Charge Instantly"</Description>
              <LastState/>
              <Color>808000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>AoBScan( Cooldown, D8 4C 24 50 8B 4C 24 64 ) /* .text:0043BED5          fmul    [esp+4+arg_48]
                                                .text:0043BED9          mov     ecx, [esp+4+pWeapon]*/

[ENABLE]
alloc(newmem, 1024) //Allocate space for the code cave.
globalalloc(originalmem,6) //Allocate space for the original code.
label(player) //Create an address for the jump.
label(exit) //Create an address for the jump.
label(modifier) //Create our custom float variable.

originalmem:
ReadMem(Cooldown-6,6) //Store the original code in the originalmem variable. (.text:0041DE5B   fadd    ds:flt_69F588 .rdata:0069F588 flt_69F588 dd 1.0)

Cooldown-6: //Create the hook.
jmp newmem //Jmp to the new mem.
nop //Space it out so the exit lands in the right place.
exit: //Set our exit label.

newmem:
cmp [esp+31C],FFFF //Check if it's the player calling this function.
jg player //If it is, do the player multiplier.
ReadMem(Cooldown-6,6) //If it's not, it will fall through to here, where ReadMem will write the original instructions here and it will run it.
jmp exit //Return
player: //Set the player address.
fadd dword ptr [modifier] //Increase the timer by 2.
jmp exit //Return

modifier: //Create the modifier variable
dd 43FA0000 //2x (You can change this if you don't want to wait. 40800000 is 4x, 41000000 is 8x. Set it to 43FA0000 for instant charge. http://www.h-schmidt.net/FloatConverter/)

[DISABLE]
dealloc(newmem)
dealloc(player)
dealloc(exit)
dealloc(modifier)

Cooldown-6:
ReadMem(originalmem,6) //FTLGame.exe+1DE5B - D8 05 88F56900        - fadd dword ptr [FTLGame.exe+29F588]

dealloc(originalmem)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>102</Key>
                  </Keys>
                  <Description>Weapons Charge Twice As Fast</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Edit Resources"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{

Activate the "Get item address" script, choose the 1st item in your bag and the amount
you have from the drop-down lists. Then move away from the item in game and go back to it
and then toggle the item list header. The address will have been populated.
(DO NOT TOUCH ANY ADDRESSES THAT DO NOT HAVE TEXT VALUES))

If you do not use the 1st item in your bag it will still work but the list wont populate
from the start of your items.
If you have hundreds of items and you only want to look at your key items etc, you could
choose the last item in your battle items category, then the list will have your key items.

Also if you dont mind about the list, and only want to change a specific item, the
first 2 addresses in the item list are the item and amount of what you chose so you

For IV/EV editor:
check EV/IV Editor script, and input the current IV or EV stats of the pokemon you want to edit.
THE VALUES MUST BE *2+1 of what you see in game. so if you have 10, input 21, if you have 3, input 7.
Check the New EV/IV script and edit the values to whatever you want.
If you entered the IV values in the current values, and it the (maybe) values didnt load, try with EV
current values.....the maybe values will be either Iv or EV depending on what you used, so if you used
IV for current values, the (maybe) values will be EV and vice versa.


For the Get pokemon part, Just activate the script then go into your pokemon menu,
the addresses will populate for whatever pokemon you are looking at. You can change
what pokemon you have and what level they are via the EXP pointer.
If you want lv 100, you can set it to lv 99 then use a rare candy and the stats
will update when you hit 100. OR you can set to 100 then fight to update the stats.

The address values will change when you are outside of you pokemon menu also, I
recommend only changing them inside the pokemon menu.


...Toggle this script to start.
}
[DISABLE]
</AssemblerScript>
          <CheatEntries Activated="1">
            <CheatEntry>
              <ID>1</ID>
              <Description>"Scrap"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"FTLGame.exe"+0039BA90</Address>
              <Offsets>
                <Offset>450</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>500</Value>
                  <Description>Add 500 Scrap</Description>
                  <ID>0</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>2</ID>
              <Description>"Missiles"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"FTLGame.exe"+0039BA90</Address>
              <Offsets>
                <Offset>1C0</Offset>
                <Offset>A8</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>25</Value>
                  <Description>Add 25 Missiles</Description>
                  <ID>0</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>"Fuel"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>0079ba90</Address>
              <Offsets>
                <Offset>410</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>3</ID>
              <Description>"Drone Robits"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"FTLGame.exe"+0039BA90</Address>
              <Offsets>
                <Offset>1A4</Offset>
                <Offset>AC</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>25</Value>
                  <Description>Add 25 Robots</Description>
                  <ID>0</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Hacking Robits"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"FTLGame.exe"+0039BA90</Address>
              <Offsets>
                <Offset>598</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>25</Value>
                  <Description>Add 25 Robots</Description>
                  <ID>0</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Edit Miscellaneous Qualities"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{

Activate the "Get item address" script, choose the 1st item in your bag and the amount
you have from the drop-down lists. Then move away from the item in game and go back to it
and then toggle the item list header. The address will have been populated.
(DO NOT TOUCH ANY ADDRESSES THAT DO NOT HAVE TEXT VALUES))

If you do not use the 1st item in your bag it will still work but the list wont populate
from the start of your items.
If you have hundreds of items and you only want to look at your key items etc, you could
choose the last item in your battle items category, then the list will have your key items.

Also if you dont mind about the list, and only want to change a specific item, the
first 2 addresses in the item list are the item and amount of what you chose so you

For IV/EV editor:
check EV/IV Editor script, and input the current IV or EV stats of the pokemon you want to edit.
THE VALUES MUST BE *2+1 of what you see in game. so if you have 10, input 21, if you have 3, input 7.
Check the New EV/IV script and edit the values to whatever you want.
If you entered the IV values in the current values, and it the (maybe) values didnt load, try with EV
current values.....the maybe values will be either Iv or EV depending on what you used, so if you used
IV for current values, the (maybe) values will be EV and vice versa.


For the Get pokemon part, Just activate the script then go into your pokemon menu,
the addresses will populate for whatever pokemon you are looking at. You can change
what pokemon you have and what level they are via the EXP pointer.
If you want lv 100, you can set it to lv 99 then use a rare candy and the stats
will update when you hit 100. OR you can set to 100 then fight to update the stats.

The address values will change when you are outside of you pokemon menu also, I
recommend only changing them inside the pokemon menu.


...Toggle this script to start.
}
[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Disable Rebel Advancement"</Description>
              <LastState/>
              <Color>808000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>AoBScan( RebelAdvancement, 83 F8 3B 7E 05 B8 ) /* .text:004AC8C3        cmp     eax, 3Bh
                                                  .text:004AC8C6        jle     short loc_4AC8CD
                                                  .text:004AC8C8        mov     eax, 3Ch*/

[ENABLE]
RebelAdvancement-6:
db 8B

[DISABLE]
RebelAdvancement-6:
db 03
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>103</Key>
                  </Keys>
                  <Description>Disable Rebel Advancement</Description>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>originalmem</Name>
      <Address>2ECC0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
