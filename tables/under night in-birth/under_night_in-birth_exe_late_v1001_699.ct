<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>20</ID>
      <Description>"HP &amp; EXS"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(hp_aob,UNIEL.exe,FF 77 5C 8B C8 E8 C7) // should be unique
aobscanmodule(hitminus_aob,UNIEL.exe,29 46 5C 8B 45 A0) // should be unique
alloc(newmem,2048)
alloc(hitminus_newmem,2048)
alloc(p1_base,4)
alloc(p2_base,4)
alloc(p1_fullhp,4)
alloc(p2_fullhp,4)
alloc(p1_fullexs,4)
alloc(p2_fullexs,4)
alloc(p1_nodeath,4)
alloc(p2_nodeath,4)

registersymbol(hp_aob)
registersymbol(p1_base)
registersymbol(p2_base)
registersymbol(p1_fullhp)
registersymbol(p2_fullhp)
registersymbol(p1_fullexs)
registersymbol(p2_fullexs)
registersymbol(hitminus_aob)
registersymbol(p1_nodeath)
registersymbol(p2_nodeath)

label(p2)
label(code)
label(return)

label(hitminus_p2)
label(hitminus_code)
label(hitminus_return)

newmem:
  test byte ptr [edi+4],1
  jnz p2
  mov [p1_base],edi
  cmp [p1_fullhp],#1
  jne @f
  mov [edi+5C],#15000
@@:
  cmp [p1_fullhp],#2
  jne @f
  mov [edi+5C],#2500
@@:
  cmp [p1_fullexs],#1
  jne @f
  mov [edi+74],#20000
@@:
  jmp code
p2:
  mov [p2_base],edi
  cmp [p2_fullhp],#1
  jne @f
  mov [edi+5C],#15000
@@:
  cmp [p2_fullhp],#2
  jne @f
  mov [edi+5C],#2500
@@:
  cmp [p2_fullexs],#1
  jne @f
  mov [edi+74],#20000
code:
  push [edi+5C]
  mov ecx,eax
  jmp return

hitminus_newmem:
  push ecx
  mov ecx,[esi+5c] //Stores old HP
  sub [esi+5C],eax //Original Code
  cmp esi,[p2_base]
  je hitminus_p2
  cmp [p1_nodeath],#1
  jne hitminus_code
  cmp [esi+5C],#0
  jg hitminus_code //Skip if greater than 0
  mov [esi+5C],ecx //Restore old HP
  jmp hitminus_code
hitminus_p2:
  cmp [p2_nodeath],#1
  jne hitminus_code
  cmp [esi+5C],#0
  jg hitminus_code //Skip if greater than 0
  mov [esi+5C],ecx //Restore old HP
hitminus_code:
  pop ecx
  mov eax,[ebp-60]
  jmp hitminus_return

hp_aob:
  jmp newmem
return:

hitminus_aob:
  jmp hitminus_newmem
  nop
hitminus_return:

[DISABLE]
hp_aob:
  db FF 77 5C 8B C8

hitminus_aob:
  db 29 46 5C 8B 45 A0

unregistersymbol(hp_aob)
unregistersymbol(p1_base)
unregistersymbol(p2_base)
unregistersymbol(p1_fullhp)
unregistersymbol(p2_fullhp)
unregistersymbol(p1_fullexs)
unregistersymbol(p2_fullexs)
unregistersymbol(hitminus_aob)
unregistersymbol(p1_nodeath)
unregistersymbol(p2_nodeath)
dealloc(newmem)
dealloc(p1_base)
dealloc(p2_base)
dealloc(p1_fullhp)
dealloc(p2_fullhp)
dealloc(p1_fullexs)
dealloc(p2_fullexs)
dealloc(hitminus_newmem)
dealloc(p1_nodeath)
dealloc(p2_nodeath)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Player 1 Set HP?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:100%
2:30%
</DropDownList>
          <Color>800000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p1_fullhp</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Player 1 Full EXS?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <Color>800000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p1_fullexs</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Player 1 No Death?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <Color>800000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p1_nodeath</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Player 1 Current HP"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p1_base</Address>
          <Offsets>
            <Offset>5C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Player 1 Current EXS"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p1_base</Address>
          <Offsets>
            <Offset>74</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Player 2 Set HP?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:100%
2:30%
</DropDownList>
          <Color>800000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p2_fullhp</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Player 2 Full EXS?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <Color>800000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p2_fullexs</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Player 2 No Death?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <Color>800000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p2_nodeath</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Player 2 Current HP"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p2_base</Address>
          <Offsets>
            <Offset>5C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Player 2 Current EXS"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p2_base</Address>
          <Offsets>
            <Offset>74</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>49</ID>
      <Description>"GRD"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(grd_aob,UNIEL.exe,8B 91 88 00 00 00 85 FF) // should be unique
alloc(grd_newmem,$1000)
alloc(p1_grd,4)
alloc(p2_grd,4)
alloc(grd_set,4)

registersymbol(grd_aob)
registersymbol(p1_grd)
registersymbol(p2_grd)
registersymbol(grd_set)

label(p2)
label(grd_code)
label(grd_return)

grd_newmem:
  cmp [ecx+74],#1
  je p2
  mov [p1_grd],ecx
  cmp [grd_set],#1
  jne @f
  mov [ecx+88],#12
@@:
  cmp [grd_set],#2
  jne @f
  mov [ecx+88],#0
@@:
  jmp grd_code
p2:
  mov [p2_grd],ecx
  cmp [grd_set],#2
  jne @f
  mov [ecx+88],#12
@@:
  cmp [grd_set],#1
  jne @f
  mov [ecx+88],#0
grd_code:
  mov edx,[ecx+00000088]
  jmp grd_return

grd_aob:
  jmp grd_newmem
  nop
grd_return:

[DISABLE]
grd_aob:
  db 8B 91 88 00 00 00

unregistersymbol(grd_aob)
dealloc(grd_newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Set GRD Advantage?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:Player 1
2:Player 2
</DropDownList>
          <Color>800000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>grd_set</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Player 1 GRD"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p1_grd</Address>
          <Offsets>
            <Offset>88</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Player 2 GRD"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p2_grd</Address>
          <Offsets>
            <Offset>88</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Timer"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(time_aob,UNIEL.exe,A3 38 0A 4F 01 85) // should be unique
alloc(newmem,1024)
alloc(time_base,4)
alloc(time_set,4)

registersymbol(time_aob)
registersymbol(time_base)
registersymbol(time_set)

label(code)
label(return)

newmem:
  push eax
  lea eax,[UNIEL.exe+3B0A38]
  mov [time_base],eax
  pop eax
  cmp [time_set],#1
  jne @f
  mov eax,FFFF
code:
  mov [UNIEL.exe+3B0A38],eax
  jmp return

time_aob:
  jmp newmem
return:

[DISABLE]
time_aob:
  db A3 38 0A 4F 01

unregistersymbol(time_aob)
unregistersymbol(time_base)
unregistersymbol(time_set)
dealloc(newmem)
dealloc(time_base)
dealloc(time_set)

{
// ORIGINAL CODE - INJECTION POINT: "UNIEL.exe"+A6BB5

"UNIEL.exe"+A6B95: EB 02                          -  jmp UNIEL.exe+A6B99
"UNIEL.exe"+A6B97: 33 C0                          -  xor eax,eax
"UNIEL.exe"+A6B99: 83 3D 34 0A 4F 01 00           -  cmp dword ptr [UNIEL.exe+3B0A34],00
"UNIEL.exe"+A6BA0: 74 30                          -  je UNIEL.exe+A6BD2
"UNIEL.exe"+A6BA2: 85 C0                          -  test eax,eax
"UNIEL.exe"+A6BA4: 74 2C                          -  je UNIEL.exe+A6BD2
"UNIEL.exe"+A6BA6: 83 3D 30 0A 4F 01 00           -  cmp dword ptr [UNIEL.exe+3B0A30],00
"UNIEL.exe"+A6BAD: 75 23                          -  jne UNIEL.exe+A6BD2
"UNIEL.exe"+A6BAF: A1 38 0A 4F 01                 -  mov eax,[UNIEL.exe+3B0A38]
"UNIEL.exe"+A6BB4: 48                             -  dec eax
// ---------- INJECTING HERE ----------
"UNIEL.exe"+A6BB5: A3 38 0A 4F 01                 -  mov [UNIEL.exe+3B0A38],eax
// ---------- DONE INJECTING  ----------
"UNIEL.exe"+A6BBA: 85 C0                          -  test eax,eax
"UNIEL.exe"+A6BBC: 7F 14                          -  jg UNIEL.exe+A6BD2
"UNIEL.exe"+A6BBE: C7 05 38 0A 4F 01 00 00 00 00  -  mov [UNIEL.exe+3B0A38],00000000
"UNIEL.exe"+A6BC8: C7 05 30 0A 4F 01 01 00 00 00  -  mov [UNIEL.exe+3B0A30],00000001
"UNIEL.exe"+A6BD2: 56                             -  push esi
"UNIEL.exe"+A6BD3: E8 A8 0B 00 00                 -  call UNIEL.exe+A7780
"UNIEL.exe"+A6BD8: 83 3D 7C E1 39 01 00           -  cmp dword ptr [UNIEL.exe+25E17C],00
"UNIEL.exe"+A6BDF: 8B F0                          -  mov esi,eax
"UNIEL.exe"+A6BE1: 75 05                          -  jne UNIEL.exe+A6BE8
"UNIEL.exe"+A6BE3: E8 E8 09 00 00                 -  call UNIEL.exe+A75D0
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Time Left Set to 99?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <Color>800000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>time_set</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"Time Left"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>time_base</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Score"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(score_aob,UNIEL.exe,8B 4E F8 03 0E) // should be unique
alloc(newmem,$1000)
alloc(p1_score,4)
alloc(p2_score,4)
alloc(p1_score_set,4)
alloc(p2_score_set,4)

registersymbol(score_aob)
registersymbol(p1_score)
registersymbol(p2_score)
registersymbol(p1_score_set)
registersymbol(p2_score_set)

label(p2)
label(code)
label(return)

newmem:
  cmp edx,1
  je p2
  mov [p1_score],esi
  cmp [p1_score_set],#1
  jne @f
  mov [esi],D4A50FFF
  mov byte ptr [esi+4],E8
@@:
  jmp code
p2:
  mov [p2_score],esi
  cmp [p2_score_set],#1
  jne @f
  mov [esi],D4A50FFF
  mov byte ptr [esi+4],E8
code:
  mov ecx,[esi-08]
  add ecx,[esi]
  jmp return

score_aob:
  jmp newmem
return:

[DISABLE]
score_aob:
  db 8B 4E F8 03 0E

unregistersymbol(score_aob)
unregistersymbol(p1_score)
unregistersymbol(p2_score)
unregistersymbol(p1_score_set)
unregistersymbol(p2_score_set)
dealloc(newmem)
dealloc(p1_score)
dealloc(p2_score)
dealloc(p1_score_set)
dealloc(p2_score_set)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Player 1 Score Set to Max?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <Color>800000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p1_score_set</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Player 1 Score"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p1_score</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Player 2 Score Set to Max?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <Color>800000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p2_score_set</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Player 2 Score"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>p2_score</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>53</ID>
      <Description>"Gallery IP"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(ip_aob,UNIEL.exe,0F B6 8C B1 84 01 00 00) // should be unique
alloc(newmem,$1000)
alloc(ip_base,4)

registersymbol(ip_aob)
registersymbol(ip_base)

label(code)
label(return)

newmem:
  push eax
  lea eax,[ecx+esi*4+00000184]
  mov [ip_base],eax
  pop eax
code:
  movzx ecx,byte ptr [ecx+esi*4+00000184]
  jmp return

ip_aob:
  jmp newmem
  nop
  nop
  nop
return:

//////////////////////////////

aobscanmodule(galleryunlock_aob,UNIEL.exe,80 B9 B5 C6 74 01 01) // should be unique
alloc(galleryunlock_newmem,$1000)
alloc(galleryunlock_set,4)

registersymbol(galleryunlock_aob)
registersymbol(galleryunlock_set)

label(galleryunlock_code)
label(galleryunlock_return)

galleryunlock_newmem:
  cmp byte ptr [eax+UNIEL.exe+60C6B3],01
  je @f
  cmp [galleryunlock_set],#1
  jne @f
  mov byte ptr [eax+UNIEL.exe+60C6B3],#1
galleryunlock_code:
  jmp galleryunlock_return

galleryunlock_aob:
  jmp galleryunlock_newmem
  nop
  nop
galleryunlock_return:

[DISABLE]

ip_aob:
  db 0F B6 8C B1 84 01 00 00

unregistersymbol(ip_aob)
unregistersymbol(ip_base)
dealloc(newmem)
dealloc(ip_base)

//////////////////////////////

galleryunlock_aob:
  db 80 B9 B5 C6 74 01 01

unregistersymbol(galleryunlock_aob)
unregistersymbol(galleryunlock_set)
dealloc(galleryunlock_newmem)
dealloc(galleryunlock_set)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>56</ID>
          <Description>"Unlock Gallery?"</Description>
          <DropDownList ReadOnly="1" DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>galleryunlock_set</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"IP"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>ip_base</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
