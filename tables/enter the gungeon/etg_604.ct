<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>302</ID>
      <Description>"[Enter The Gungeon 1.1.0 h2 Steam]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>808000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>312</ID>
          <Description>"Infinite Money"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(bulletsaob,89 77 1C 48 83 EC 20) // should be unique
alloc(newmem,$1000,2E4ED036)

label(code)
label(return)

newmem:
  mov [rdi+1C], (Int)999

code:
  //mov [rdi+1C],esi
  sub rsp,20
  jmp return

bulletsaob:
  jmp newmem
  nop
  nop
return:
registersymbol(bulletsaob)

[DISABLE]

bulletsaob:
  db 89 77 1C 48 83 EC 20

unregistersymbol(bulletsaob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2E4ED036

""+2E4ED00B: 48 83 C4 20                    -  add rsp,20
""+2E4ED00F: 48 8B 40 20                    -  mov rax,[rax+20]
""+2E4ED013: 48 8B C8                       -  mov rcx,rax
""+2E4ED016: BA 2D 00 00 00                 -  mov edx,0000002D
""+2E4ED01B: 45 33 C0                       -  xor r8d,r8d
""+2E4ED01E: 48 83 EC 20                    -  sub rsp,20
""+2E4ED022: 83 38 00                       -  cmp dword ptr [rax],00
""+2E4ED025: 49 BB A6 44 41 2E 00 00 00 00  -  mov r11,000000002E4144A6
""+2E4ED02F: 41 FF D3                       -  call r11
""+2E4ED032: 48 83 C4 20                    -  add rsp,20
// ---------- INJECTING HERE ----------
""+2E4ED036: 89 77 1C                       -  mov [rdi+1C],esi
""+2E4ED039: 48 83 EC 20                    -  sub rsp,20
// ---------- DONE INJECTING  ----------
""+2E4ED03D: 49 BB F0 05 3A 28 00 00 00 00  -  mov r11,00000000283A05F0
""+2E4ED047: 41 FF D3                       -  call r11
""+2E4ED04A: 48 83 C4 20                    -  add rsp,20
""+2E4ED04E: 48 8B C8                       -  mov rcx,rax
""+2E4ED051: 48 8B D7                       -  mov rdx,rdi
""+2E4ED054: 48 83 EC 20                    -  sub rsp,20
""+2E4ED058: 83 38 00                       -  cmp dword ptr [rax],00
""+2E4ED05B: 49 BB B0 A3 4D 2E 00 00 00 00  -  mov r11,000000002E4DA3B0
""+2E4ED065: 41 FF D3                       -  call r11
""+2E4ED068: 48 83 C4 20                    -  add rsp,20
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>339</ID>
          <Description>"Infinite Keys"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(keysaob,89 47 20 48 83 EC 20 49 BB 60) // should be unique
alloc(newmem,$1000,1D77C173)

label(code)
label(return)

newmem:
  mov [rdi+20], (Int)99

code:
  //mov [rdi+20],eax
  sub rsp,20
  jmp return

keysaob:
  jmp newmem
  nop
  nop
return:
registersymbol(keysaob)

[DISABLE]

keysaob:
  db 89 47 20 48 83 EC 20

unregistersymbol(keysaob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1D77C173

""+1D77C159: 00 00                          -  add [rax],al
""+1D77C15B: 00 00                          -  add [rax],al
""+1D77C15D: 00 00                          -  add [rax],al
""+1D77C15F: 00 55 48                       -  add [rbp+48],dl
""+1D77C162: 8B EC                          -  mov ebp,esp
""+1D77C164: 57                             -  push rdi
""+1D77C165: 48 83 EC 08                    -  sub rsp,08
""+1D77C169: 48 8B F9                       -  mov rdi,rcx
""+1D77C16C: 48 89 55 F0                    -  mov [rbp-10],rdx
""+1D77C170: 48 8B C2                       -  mov rax,rdx
// ---------- INJECTING HERE ----------
""+1D77C173: 89 47 20                       -  mov [rdi+20],eax
""+1D77C176: 48 83 EC 20                    -  sub rsp,20
// ---------- DONE INJECTING  ----------
""+1D77C17A: 49 BB 60 9E 4A 2A 00 00 00 00  -  mov r11,000000002A4A9E60
""+1D77C184: 41 FF D3                       -  call r11
""+1D77C187: 48 83 C4 20                    -  add rsp,20
""+1D77C18B: 48 63 4F 20                    -  movsxd  rcx,dword ptr [rdi+20]
""+1D77C18F: F2 0F 2A C1                    -  cvtsi2sd xmm0,ecx
""+1D77C193: 48 8B C8                       -  mov rcx,rax
""+1D77C196: 33 D2                          -  xor edx,edx
""+1D77C198: F2 0F 10 D0                    -  movsd xmm2,xmm0
""+1D77C19C: F2 0F 5A D2                    -  cvtsd2ss xmm2,xmm2
""+1D77C1A0: 48 83 EC 20                    -  sub rsp,20
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>343</ID>
          <Description>"Infinite Keys (Alternate Version)"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(kaob,89 47 20 48 83 EC 20 49 BB C0 91) // should be unique
alloc(newmem,$1000,0119FB93)

label(code)
label(return)

newmem:
  mov [rdi+20], (Int)99

code:
  //mov [rdi+20],eax
  //sub rsp,20
  jmp return

kaob:
  jmp newmem
  nop
  nop
return:
registersymbol(kaob)

[DISABLE]

kaob:
  db 89 47 20 48 83 EC 20

unregistersymbol(kaob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0119FB93

""+119FB79: 00 00                          -  add [rax],al
""+119FB7B: 00 00                          -  add [rax],al
""+119FB7D: 00 00                          -  add [rax],al
""+119FB7F: 00 55 48                       -  add [rbp+48],dl
""+119FB82: 8B EC                          -  mov ebp,esp
""+119FB84: 57                             -  push rdi
""+119FB85: 48 83 EC 08                    -  sub rsp,08
""+119FB89: 48 8B F9                       -  mov rdi,rcx
""+119FB8C: 48 89 55 F0                    -  mov [rbp-10],rdx
""+119FB90: 48 8B C2                       -  mov rax,rdx
// ---------- INJECTING HERE ----------
""+119FB93: 89 47 20                       -  mov [rdi+20],eax
""+119FB96: 48 83 EC 20                    -  sub rsp,20
// ---------- DONE INJECTING  ----------
""+119FB9A: 49 BB C0 91 F5 44 00 00 00 00  -  mov r11,0000000044F591C0
""+119FBA4: 41 FF D3                       -  call r11
""+119FBA7: 48 83 C4 20                    -  add rsp,20
""+119FBAB: 48 63 4F 20                    -  movsxd  rcx,dword ptr [rdi+20]
""+119FBAF: F2 0F 2A C1                    -  cvtsi2sd xmm0,ecx
""+119FBB3: 48 8B C8                       -  mov rcx,rax
""+119FBB6: 33 D2                          -  xor edx,edx
""+119FBB8: F2 0F 10 D0                    -  movsd xmm2,xmm0
""+119FBBC: F2 0F 5A D2                    -  cvtsd2ss xmm2,xmm2
""+119FBC0: 48 83 EC 20                    -  sub rsp,20
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>316</ID>
          <Description>"Infinite Blanks"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(blanksaob,89 87 78 04 00 00 48 83) // should be unique
alloc(newmem,$1000,2E4DA193)

label(code)
label(return)

newmem:
  mov [rdi+00000478], (Int)3

code:
  //mov [rdi+00000478],eax
  jmp return

blanksaob:
  jmp newmem
  nop
return:
registersymbol(blanksaob)

[DISABLE]

blanksaob:
  db 89 87 78 04 00 00

unregistersymbol(blanksaob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2E4DA193

""+2E4DA179: 00 00                          -  add [rax],al
""+2E4DA17B: 00 00                          -  add [rax],al
""+2E4DA17D: 00 00                          -  add [rax],al
""+2E4DA17F: 00 55 48                       -  add [rbp+48],dl
""+2E4DA182: 8B EC                          -  mov ebp,esp
""+2E4DA184: 57                             -  push rdi
""+2E4DA185: 48 83 EC 08                    -  sub rsp,08
""+2E4DA189: 48 8B F9                       -  mov rdi,rcx
""+2E4DA18C: 48 89 55 F0                    -  mov [rbp-10],rdx
""+2E4DA190: 48 8B C2                       -  mov rax,rdx
// ---------- INJECTING HERE ----------
""+2E4DA193: 89 87 78 04 00 00              -  mov [rdi+00000478],eax
// ---------- DONE INJECTING  ----------
""+2E4DA199: 48 83 EC 20                    -  sub rsp,20
""+2E4DA19D: 49 BB 80 A0 38 28 00 00 00 00  -  mov r11,000000002838A080
""+2E4DA1A7: 41 FF D3                       -  call r11
""+2E4DA1AA: 48 83 C4 20                    -  add rsp,20
""+2E4DA1AE: 48 63 8F 78 04 00 00           -  movsxd  rcx,dword ptr [rdi+00000478]
""+2E4DA1B5: F2 0F 2A C1                    -  cvtsi2sd xmm0,ecx
""+2E4DA1B9: 48 8B C8                       -  mov rcx,rax
""+2E4DA1BC: BA 01 00 00 00                 -  mov edx,00000001
""+2E4DA1C1: F2 0F 10 D0                    -  movsd xmm2,xmm0
""+2E4DA1C5: F2 0F 5A D2                    -  cvtsd2ss xmm2,xmm2
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>319</ID>
          <Description>"[Gun]"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(gunaob,48 63 86 40 03 00 00 48) // should be unique
alloc(newmem,$1000,1E5331CF)
globalalloc(gaob,4)

label(code)
label(return)

newmem:

code:
  movsxd  rax,dword ptr [rsi+00000340]
  mov [gaob],rsi
  jmp return

gunaob:
  jmp newmem
  nop
  nop
return:
registersymbol(gunaob)

[DISABLE]

gunaob:
  db 48 63 86 40 03 00 00

unregistersymbol(gunaob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1E5331CF

""+1E5331AB: 74 03                          -  je Gun:get_CurrentAmmo+50
""+1E5331AD: 45 33 FF                       -  xor r15d,r15d
""+1E5331B0: 4D 85 FF                       -  test r15,r15
""+1E5331B3: 74 1A                          -  je Gun:get_CurrentAmmo+6f
""+1E5331B5: 48 8B CE                       -  mov rcx,rsi
""+1E5331B8: 48 83 EC 20                    -  sub rsp,20
""+1E5331BC: 49 BB 8C 49 F0 2C 00 00 00 00  -  mov r11,000000002CF0498C
""+1E5331C6: 41 FF D3                       -  call r11
""+1E5331C9: 48 83 C4 20                    -  add rsp,20
""+1E5331CD: EB 07                          -  jmp Gun:get_CurrentAmmo+76
// ---------- INJECTING HERE ----------
""+1E5331CF: 48 63 86 40 03 00 00           -  movsxd  rax,dword ptr [rsi+00000340]
// ---------- DONE INJECTING  ----------
""+1E5331D6: 48 8D 65 E8                    -  lea rsp,[rbp-18]
""+1E5331DA: 41 5F                          -  pop r15
""+1E5331DC: 5F                             -  pop rdi
""+1E5331DD: 5E                             -  pop rsi
""+1E5331DE: C9                             -  leave 
""+1E5331DF: C3                             -  ret 
""+1E5331E0: 00 00                          -  add [rax],al
""+1E5331E2: 00 00                          -  add [rax],al
""+1E5331E4: 80 00 00                       -  add byte ptr [rax],00
""+1E5331E7: 00 8C 00 00 00 01 04           -  add [rax+rax+04010000],cl
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>320</ID>
              <Description>"Ammo"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>[gaob]+340</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>322</ID>
                  <Description>"Max Ammo"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>[gaob]+34C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>323</ID>
                  <Description>"Reload Time"</Description>
                  <VariableType>Float</VariableType>
                  <Address>[gaob]+350</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>324</ID>
                  <Description>"Damage Modifier"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>[gaob]+378</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>337</ID>
                  <Description>"Can Gain Ammo?"</Description>
                  <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
                  <VariableType>Byte</VariableType>
                  <Address>[gaob]+344</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>321</ID>
                  <Description>"Infinite Ammo?"</Description>
                  <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
                  <VariableType>Byte</VariableType>
                  <Address>[gaob]+345</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>333</ID>
                  <Description>"Unswitchable?"</Description>
                  <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
                  <VariableType>Byte</VariableType>
                  <Address>[gaob]+388</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>327</ID>
              <Description>"Can Critical Fire?"</Description>
              <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
              <Color>000000</Color>
              <VariableType>Byte</VariableType>
              <Address>[gaob]+3F0</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>328</ID>
                  <Description>"Critical Chance"</Description>
                  <VariableType>Float</VariableType>
                  <Address>[gaob]+3F4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>329</ID>
                  <Description>"Critical Damage Multiplier"</Description>
                  <VariableType>Float</VariableType>
                  <Address>[gaob]+3F8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>334</ID>
              <Description>"Apply Homing? (Can break gun animations)"</Description>
              <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
              <Color>000000</Color>
              <VariableType>Byte</VariableType>
              <Address>[gaob]+37D</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>335</ID>
                  <Description>"Homing Angular Velocity"</Description>
                  <VariableType>Float</VariableType>
                  <Address>[gaob]+380</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>336</ID>
                  <Description>"Homing Detect Radius"</Description>
                  <VariableType>Float</VariableType>
                  <Address>[gaob]+388</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>330</ID>
              <Description>"RoF Ramps With Sustained Fire"</Description>
              <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
              <Color>000000</Color>
              <VariableType>Byte</VariableType>
              <Address>[gaob]+3FC</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>331</ID>
                  <Description>"RoF Multiplier"</Description>
                  <VariableType>Float</VariableType>
                  <Address>[gaob]+400</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>325</ID>
              <Description>"Require Funds To Shoot?"</Description>
              <DropDownList DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
              <Color>000000</Color>
              <VariableType>Byte</VariableType>
              <Address>[gaob]+3C8</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>326</ID>
                  <Description>"Currency Cost Per Shot"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>[gaob]+3D0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>304</ID>
          <Description>"[Core]"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(playeraob,38 00 F3 0F 10 80 08 01 00 00) // should be unique
alloc(newmem,$1000,1BC90666)
globalalloc(paob,4)

label(code)
label(return)

newmem:

code:
  movss xmm0,[rax+00000108]
  mov [paob],rax
  jmp return

playeraob+02:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(playeraob)

[DISABLE]

playeraob+02:
  db F3 0F 10 80 08 01 00 00

unregistersymbol(playeraob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1BC90666

""+1BC90646: 57                             -  push rdi
""+1BC90647: 41 54                          -  push r12
""+1BC90649: 41 55                          -  push r13
""+1BC9064B: 41 56                          -  push r14
""+1BC9064D: 41 57                          -  push r15
""+1BC9064F: 48 81 EC 68 02 00 00           -  sub rsp,00000268
""+1BC90656: 48 8B F9                       -  mov rdi,rcx
""+1BC90659: 48 89 95 98 FD FF FF           -  mov [rbp-00000268],rdx
""+1BC90660: 48 8B C2                       -  mov rax,rdx
""+1BC90663: 83 38 00                       -  cmp dword ptr [rax],00
// ---------- INJECTING HERE ----------
""+1BC90666: F3 0F 10 80 08 01 00 00        -  movss xmm0,[rax+00000108]
// ---------- DONE INJECTING  ----------
""+1BC9066E: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+1BC90672: F2 0F 5A E8                    -  cvtsd2ss xmm5,xmm0
""+1BC90676: F3 0F 11 AD 64 FF FF FF        -  movss [rbp-0000009C],xmm5
""+1BC9067E: F3 0F 10 85 64 FF FF FF        -  movss xmm0,[rbp-0000009C]
""+1BC90686: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+1BC9068A: F2 0F 5A E8                    -  cvtsd2ss xmm5,xmm0
""+1BC9068E: F3 0F 11 AD 64 FF FF FF        -  movss [rbp-0000009C],xmm5
""+1BC90696: 48 8B C8                       -  mov rcx,rax
""+1BC90699: 48 83 EC 20                    -  sub rsp,20
""+1BC9069D: 83 38 00                       -  cmp dword ptr [rax],00
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>305</ID>
              <Description>"Current Health (Freeze it)"</Description>
              <VariableType>Float</VariableType>
              <Address>[paob]+108</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>306</ID>
              <Description>"Max Health"</Description>
              <VariableType>Float</VariableType>
              <Address>[paob]+104</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>307</ID>
              <Description>"Current Armor"</Description>
              <VariableType>Float</VariableType>
              <Address>[paob]+10C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>309</ID>
              <Description>"Next Shot Kills?"</Description>
              <VariableType>Byte</VariableType>
              <Address>[paob]+013C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>310</ID>
              <Description>"All Damage Multiplier"</Description>
              <VariableType>Float</VariableType>
              <Address>[paob]+0150</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"[Enter The Gungeon 1.011 Steam]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>808080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>299</ID>
          <Description>"[Currency]"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(a0,48 63 51 1C 48 63 8F 90 00 00 00) // should be unique
alloc(newmem,$1000,26854E01)
globalalloc(a1,4)

label(code)
label(return)

newmem:

code:
  movsxd  rdx,dword ptr [rcx+1C]
  mov [a1],rcx
  movsxd  rcx,dword ptr [rdi+00000090]
  jmp return

a0:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(a0)

[DISABLE]

a0:
  db 48 63 51 1C 48 63 8F 90 00 00 00

unregistersymbol(a0)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 26854E01

""+26854DD5: 48 83 C4 20                    -  add rsp,20
""+26854DD9: 48 8B C8                       -  mov rcx,rax
""+26854DDC: 48 83 EC 20                    -  sub rsp,20
""+26854DE0: 83 38 00                       -  cmp dword ptr [rax],00
""+26854DE3: 49 BB A0 77 FF 27 00 00 00 00  -  mov r11,0000000027FF77A0
""+26854DED: 41 FF D3                       -  call r11
""+26854DF0: 48 83 C4 20                    -  add rsp,20
""+26854DF4: 48 8B 88 68 01 00 00           -  mov rcx,[rax+00000168]
""+26854DFB: 48 8B C1                       -  mov rax,rcx
""+26854DFE: 83 39 00                       -  cmp dword ptr [rcx],00
// ---------- INJECTING HERE ----------
""+26854E01: 48 63 51 1C                    -  movsxd  rdx,dword ptr [rcx+1C]
""+26854E05: 48 63 8F 90 00 00 00           -  movsxd  rcx,dword ptr [rdi+00000090]
// ---------- DONE INJECTING  ----------
""+26854E0C: 03 D1                          -  add edx,ecx
""+26854E0E: 48 8B C8                       -  mov rcx,rax
""+26854E11: 48 83 EC 20                    -  sub rsp,20
""+26854E15: 83 38 00                       -  cmp dword ptr [rax],00
""+26854E18: 49 BB 50 DC 19 01 00 00 00 00  -  mov r11,000000000119DC50
""+26854E22: 41 FF D3                       -  call r11
""+26854E25: 48 83 C4 20                    -  add rsp,20
""+26854E29: 48 8B CF                       -  mov rcx,rdi
""+26854E2C: 48 83 EC 20                    -  sub rsp,20
""+26854E30: 49 BB 40 8F 20 06 00 00 00 00  -  mov r11,0000000006208F40
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>300</ID>
              <Description>"Currency"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>[a1]+1C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>301</ID>
              <Description>"Keys"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>[a1]+20</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>298</ID>
          <Description>"Currency"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>4FD1F168</Address>
          <Offsets>
            <Offset>1C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"[Player]"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(_stats,38 00 F3 0F 10 80 08 01 00 00) // should be unique
alloc(newmem,$1000,19C4FAE6)
globalalloc(p0,4)

label(code)
label(return)

newmem:

code:
  movss xmm0,[rax+00000108]
  mov [p0],rax
  jmp return

_stats+02:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(_stats)

[DISABLE]

_stats+02:
  db F3 0F 10 80 08 01 00 00

unregistersymbol(_stats)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 19C4FAE6

""+19C4FAC6: 57                             -  push rdi
""+19C4FAC7: 41 54                          -  push r12
""+19C4FAC9: 41 55                          -  push r13
""+19C4FACB: 41 56                          -  push r14
""+19C4FACD: 41 57                          -  push r15
""+19C4FACF: 48 81 EC 48 02 00 00           -  sub rsp,00000248
""+19C4FAD6: 48 8B F9                       -  mov rdi,rcx
""+19C4FAD9: 48 89 95 E0 FD FF FF           -  mov [rbp-00000220],rdx
""+19C4FAE0: 48 8B C2                       -  mov rax,rdx
""+19C4FAE3: 83 38 00                       -  cmp dword ptr [rax],00
// ---------- INJECTING HERE ----------
""+19C4FAE6: F3 0F 10 80 08 01 00 00        -  movss xmm0,[rax+00000108]
// ---------- DONE INJECTING  ----------
""+19C4FAEE: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+19C4FAF2: F2 0F 5A E8                    -  cvtsd2ss xmm5,xmm0
""+19C4FAF6: F3 0F 11 AD 64 FF FF FF        -  movss [rbp-0000009C],xmm5
""+19C4FAFE: F3 0F 10 85 64 FF FF FF        -  movss xmm0,[rbp-0000009C]
""+19C4FB06: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+19C4FB0A: F2 0F 5A E8                    -  cvtsd2ss xmm5,xmm0
""+19C4FB0E: F3 0F 11 AD 64 FF FF FF        -  movss [rbp-0000009C],xmm5
""+19C4FB16: 48 8B C8                       -  mov rcx,rax
""+19C4FB19: 48 83 EC 20                    -  sub rsp,20
""+19C4FB1D: 83 38 00                       -  cmp dword ptr [rax],00
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"[Gun]"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(pullammo,48 63 86 30 03 00 00 48) // should be unique
alloc(newmem,$1000,1C4D458F)
globalalloc(pa,4)

label(code)
label(return)

newmem:

code:
  movsxd  rax,dword ptr [rsi+00000330]
  mov [pa],rsi
  jmp return

pullammo:
  jmp newmem
  nop
  nop
return:
registersymbol(pullammo)

[DISABLE]

pullammo:
  db 48 63 86 30 03 00 00

unregistersymbol(pullammo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1C4D458F

""+1C4D456B: 74 03                          -  je Gun:get_CurrentAmmo+50
""+1C4D456D: 45 33 FF                       -  xor r15d,r15d
""+1C4D4570: 4D 85 FF                       -  test r15,r15
""+1C4D4573: 74 1A                          -  je Gun:get_CurrentAmmo+6f
""+1C4D4575: 48 8B CE                       -  mov rcx,rsi
""+1C4D4578: 48 83 EC 20                    -  sub rsp,20
""+1C4D457C: 49 BB 12 20 E0 00 00 00 00 00  -  mov r11,0000000000E02012
""+1C4D4586: 41 FF D3                       -  call r11
""+1C4D4589: 48 83 C4 20                    -  add rsp,20
""+1C4D458D: EB 07                          -  jmp Gun:get_CurrentAmmo+76
// ---------- INJECTING HERE ----------
""+1C4D458F: 48 63 86 30 03 00 00           -  movsxd  rax,dword ptr [rsi+00000330]
// ---------- DONE INJECTING  ----------
""+1C4D4596: 48 8D 65 E8                    -  lea rsp,[rbp-18]
""+1C4D459A: 41 5F                          -  pop r15
""+1C4D459C: 5F                             -  pop rdi
""+1C4D459D: 5E                             -  pop rsi
""+1C4D459E: C9                             -  leave 
""+1C4D459F: C3                             -  ret 
""+1C4D45A0: 00 00                          -  add [rax],al
""+1C4D45A2: 00 00                          -  add [rax],al
""+1C4D45A4: 80 00 00                       -  add byte ptr [rax],00
""+1C4D45A7: 00 8C 00 00 00 01 04           -  add [rax+rax+04010000],cl
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>37</ID>
              <Description>"Current Ammo"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>[pa]+330</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Max Ammo"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>[pa]+33C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"Reload Time"</Description>
              <VariableType>Float</VariableType>
              <Address>[pa]+340</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>40</ID>
              <Description>"Can Gain Ammo"</Description>
              <VariableType>Byte</VariableType>
              <Address>[pa]+334</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>41</ID>
              <Description>"Infinite Ammo"</Description>
              <VariableType>Byte</VariableType>
              <Address>[pa]+335</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>42</ID>
              <Description>"Can Critical Fire"</Description>
              <VariableType>Byte</VariableType>
              <Address>[pa]+3D0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>43</ID>
              <Description>"Critical Chance"</Description>
              <VariableType>Float</VariableType>
              <Address>[pa]+3D4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>44</ID>
              <Description>"Critical Damage Multiplier"</Description>
              <VariableType>Float</VariableType>
              <Address>[pa]+3D8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"Requires Funds To Shoot"</Description>
              <VariableType>Byte</VariableType>
              <Address>[pa]+3BC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>46</ID>
              <Description>"Current Cost Per Shot"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>[pa]+3C0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>47</ID>
              <Description>"Rate of Fire Multiple Addition Per Second"</Description>
              <VariableType>Byte</VariableType>
              <Address>[pa]+3E0</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"[Shop]"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(shop,83 39 00 48 63 40 1C 48 89 85) // should be unique
alloc(newmem,$1000,0884B4C3)
globalalloc(p1,4)

label(code)
label(return)

newmem:

code:
  cmp dword ptr [rcx],00
  mov [p1],rcx
  movsxd  rax,dword ptr [rax+1C]
  jmp return

shop:
  jmp newmem
  nop
  nop
return:
registersymbol(shop)

[DISABLE]

shop:
  db 83 39 00 48 63 40 1C

unregistersymbol(shop)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0884B4C3

""+884B49B: 0F 84 8B 01 00 00              -  je ShopItemController:Interact+68c
""+884B4A1: 45 33 ED                       -  xor r13d,r13d
""+884B4A4: 48 63 47 50                    -  movsxd  rax,dword ptr [rdi+50]
""+884B4A8: 85 C0                          -  test eax,eax
""+884B4AA: 74 0D                          -  je ShopItemController:Interact+519
""+884B4AC: 48 63 47 50                    -  movsxd  rax,dword ptr [rdi+50]
""+884B4B0: 83 F8 03                       -  cmp eax,03
""+884B4B3: 0F 85 53 00 00 00              -  jne ShopItemController:Interact+56c
""+884B4B9: 48 8B 86 68 01 00 00           -  mov rax,[rsi+00000168]
""+884B4C0: 48 8B C8                       -  mov rcx,rax
// ---------- INJECTING HERE ----------
""+884B4C3: 83 39 00                       -  cmp dword ptr [rcx],00
""+884B4C6: 48 63 40 1C                    -  movsxd  rax,dword ptr [rax+1C]
// ---------- DONE INJECTING  ----------
""+884B4CA: 48 89 85 68 FF FF FF           -  mov [rbp-00000098],rax
""+884B4D1: 48 8B CF                       -  mov rcx,rdi
""+884B4D4: 48 83 EC 20                    -  sub rsp,20
""+884B4D8: 49 BB 70 47 83 08 00 00 00 00  -  mov r11,ShopItemController:get_ModifiedPrice
""+884B4E2: 41 FF D3                       -  call r11
""+884B4E5: 48 83 C4 20                    -  add rsp,20
""+884B4E9: 48 8B C8                       -  mov rcx,rax
""+884B4EC: 48 8B 85 68 FF FF FF           -  mov rax,[rbp-00000098]
""+884B4F3: 3B C1                          -  cmp eax,ecx
""+884B4F5: 40 0F 9C C0                    -  setl al
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>49</ID>
              <Description>"Currency"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>[p1]+1C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"Keys"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>[p1]+20</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>340</ID>
      <Description>"[Ignore]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>C0C0C0</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>314</ID>
          <Description>"Infinite Keys"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(keyaob,89 47 20 48 83 EC 20 49 BB 80) // should be unique
alloc(newmem,$1000,2E4ED0B3)

label(code)
label(return)

newmem:
  mov [rdi+20], (Int)99

code:
  //mov [rdi+20],eax
  sub rsp,20
  jmp return

keyaob:
  jmp newmem
  nop
  nop
return:
registersymbol(keyaob)

[DISABLE]

keyaob:
  db 89 47 20 48 83 EC 20

unregistersymbol(keyaob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 2E4ED0B3

""+2E4ED099: 00 00                          -  add [rax],al
""+2E4ED09B: 00 00                          -  add [rax],al
""+2E4ED09D: 00 00                          -  add [rax],al
""+2E4ED09F: 00 55 48                       -  add [rbp+48],dl
""+2E4ED0A2: 8B EC                          -  mov ebp,esp
""+2E4ED0A4: 57                             -  push rdi
""+2E4ED0A5: 48 83 EC 08                    -  sub rsp,08
""+2E4ED0A9: 48 8B F9                       -  mov rdi,rcx
""+2E4ED0AC: 48 89 55 F0                    -  mov [rbp-10],rdx
""+2E4ED0B0: 48 8B C2                       -  mov rax,rdx
// ---------- INJECTING HERE ----------
""+2E4ED0B3: 89 47 20                       -  mov [rdi+20],eax
""+2E4ED0B6: 48 83 EC 20                    -  sub rsp,20
// ---------- DONE INJECTING  ----------
""+2E4ED0BA: 49 BB 80 A0 38 28 00 00 00 00  -  mov r11,000000002838A080
""+2E4ED0C4: 41 FF D3                       -  call r11
""+2E4ED0C7: 48 83 C4 20                    -  add rsp,20
""+2E4ED0CB: 48 63 4F 20                    -  movsxd  rcx,dword ptr [rdi+20]
""+2E4ED0CF: F2 0F 2A C1                    -  cvtsi2sd xmm0,ecx
""+2E4ED0D3: 48 8B C8                       -  mov rcx,rax
""+2E4ED0D6: 33 D2                          -  xor edx,edx
""+2E4ED0D8: F2 0F 10 D0                    -  movsd xmm2,xmm0
""+2E4ED0DC: F2 0F 5A D2                    -  cvtsd2ss xmm2,xmm2
""+2E4ED0E0: 48 83 EC 20                    -  sub rsp,20
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>354</ID>
          <Description>"Resolve RewardManager"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
label(RewardManager.threadexit)
label(classname)
label(namespace)
label(assemblyname)
label(status)
label(domain)
label(assembly)
label(RewardManager.Static)
label(RewardManager.Class)
alloc(RewardManager.threadstart, 2048)

registersymbol(RewardManager.Static)
registersymbol(RewardManager.Class)

RewardManager.threadstart:
mov [RewardManager.Class],0
mov [RewardManager.Static],0

call mono.mono_get_root_domain
cmp eax,0
je RewardManager.threadexit
mov [domain],eax

push [domain]
call mono.mono_thread_attach
add esp,4

push status
push assemblyname
call mono.mono_assembly_load_with_partial_name
add esp,8
cmp eax,0
je RewardManager.threadexit

push eax
call mono.mono_assembly_get_image
add esp,4
cmp eax,0
je RewardManager.threadexit
mov [assembly], eax

push classname
push namespace
push eax
call mono.mono_class_from_name_case
add esp,C
cmp eax,0
je RewardManager.threadexit
mov [RewardManager.Class],eax

push eax
push [domain]
call mono.mono_class_vtable
add esp,8
cmp eax,0
je RewardManager.threadexit

push eax
call mono.mono_vtable_get_static_field_data
add esp,4
mov [RewardManager.Static],eax
jmp RewardManager.threadexit
///////////////////////////////////////////////////////
// Data section
RewardManager.Static:
dd 0
RewardManager.Class:
dd 0
assemblyname:
db 'Assembly-CSharp',0
namespace:
db '',0
classname:
db 'RewardManager',0
status:
dd 0
domain:
dd 0
assembly:
dd 0
RewardManager.threadexit:
ret
createthread(RewardManager.threadstart)

[DISABLE]
unregistersymbol(RewardManager.Static)
unregistersymbol(RewardManager.Class)
dealloc(RewardManager.threadstart)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>355</ID>
              <Description>"RewardManager.Static"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Pointer</VariableType>
              <Address>[RewardManager.Static]</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>356</ID>
              <Description>"RewardManager.Class"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Pointer</VariableType>
              <Address>[RewardManager.Class]</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>357</ID>
              <Description>"AdditionalHeartTierMagnificence"</Description>
              <VariableType>Float</VariableType>
              <Address>RewardManager.Static</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>358</ID>
          <Description>"RewardManager"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>3D536038</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>359</ID>
              <Description>"No description"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>3D536000</Address>
              <Offsets>
                <Offset>+38</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>360</ID>
              <Description>"No description"</Description>
              <VariableType>Float</VariableType>
              <Address>3D536000</Address>
              <Offsets>
                <Offset>8C</Offset>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>361</ID>
              <Description>"RoomClearRainbowChance"</Description>
              <VariableType>Float</VariableType>
              <Address>3D536038</Address>
              <Offsets>
                <Offset>8C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>362</ID>
              <Description>"IsRainbowChest"</Description>
              <VariableType>Byte</VariableType>
              <Address>3D536038</Address>
              <Offsets>
                <Offset>11D</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>raob</Name>
      <Address>04310020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>keysaob</Name>
      <Address>41FECAA3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gaob</Name>
      <Address>04B60000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>paob</Name>
      <Address>04B60010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aobrewardptr</Name>
      <Address>44F8E6BE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bulletsaob</Name>
      <Address>1A3FD216</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>kaob</Name>
      <Address>1A3FD293</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>blanksaob</Name>
      <Address>2EABEB43</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gunaob</Name>
      <Address>1E2204EF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>playeraob</Name>
      <Address>1E210BF4</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
