<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Tempest v1.0.8"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
LaunchMonoDataCollector()
[DISABLE]
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Money++"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
assert(ConfigPanel:ChangePiastr+d,8B 45 08 85 C0)
alloc(newmem,48)
label(returnhere)

newmem:
mov [ebp+8],#50000
mov eax,[ebp+08]
test eax,eax
jmp returnhere

ConfigPanel:ChangePiastr+d:
jmp newmem
returnhere:

[DISABLE]
dealloc(newmem)
ConfigPanel:ChangePiastr+d:
db 8B 45 08 85 C0
//mov eax,[ebp+08]
//test eax,eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"Ship Hp++"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
assert(Ship:DamageShip+157,8B 87 0C 01 00 00)
alloc(newmem,48)
label(returnhere)
label(_ba)
Ship:DamageShip+1A4:
_ba:
newmem:
cmp [edi+00000258],01
jne short @f
jmp _ba
@@:
mov eax,[edi+0000010C]
jmp returnhere

Ship:DamageShip+157:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
Ship:DamageShip+157:
db 8B 87 0C 01 00 00
//mov eax,[edi+0000010C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Skill++"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
assert(Skills:SelectSkill+1f,83 C4 10 89 45 D0)
assert(Skills:SelectSkill+2c0,75 0E 83 FB 04)
alloc(newmem,48)
label(returnhere)

Skills:SelectSkill+2c0:
db 90 90 83 F8 04
newmem:
mov eax,01
add esp,10
mov [ebp-30],eax
jmp returnhere

Skills:SelectSkill+1f:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
Skills:SelectSkill+1f:
db 83 C4 10 89 45 D0
Skills:SelectSkill+2c0:
db 75 0E 83 FB 04
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Fraction++"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
assert(Fractions:ChangeFrac2Player+8b,8B 4D 0C 83 EC 08)
alloc(newmem,248)
label(returnhere)
label(_temp)
newmem:
mov [_temp],eax
mov eax,#1000
sub eax,[esp+10]
mov [ebp+0C],eax
mov eax,[_temp]
mov ecx,[ebp+0C]
sub esp,08
jmp returnhere
_temp:
dd 0
Fractions:ChangeFrac2Player+8b:
jmp newmem
nop
returnhere:
 
[DISABLE]
dealloc(newmem)
Fractions:ChangeFrac2Player+8b:
db 8B 4D 0C 83 EC 08
//mov ecx,[ebp+0C]
//sub esp,08
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Freeze Something..."</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
assert(ConfigPanel:DecTowarUNIVERSAL+c1,83 EC 08 FF 75 0C 50)
alloc(newmem,248)
label(returnhere)
label(exit)
ConfigPanel:DecTowarUNIVERSAL+cd:
exit:
newmem:
cmp [esp+C],4
je exit
cmp [esp+20],3B
je exit
cmp [esp+20],0
je exit
sub esp,08
push [ebp+0C]
push eax
jmp returnhere

ConfigPanel:DecTowarUNIVERSAL+c1:
jmp newmem
nop
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ConfigPanel:DecTowarUNIVERSAL+c1:
sub esp,08
push [ebp+0C]
push eax
//Alt: db 83 EC 08 FF 75 0C 50
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Ignore Item Requirement When Buying"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
assert(ConfigPanel:BUY_DEFAULT+d6,7D 06)
ConfigPanel:BUY_DEFAULT+d6:
db EB

[DISABLE]
ConfigPanel:BUY_DEFAULT+d6:
jnl ConfigPanel:BUY_DEFAULT+de
db 7D
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Ignore Mass"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
assert(ConfigPanel:RecalcMass+1d4,7A 0B 73 09 D9 )
ConfigPanel:RecalcMass+1d4:
db 90 90 90 90
[DISABLE]
ConfigPanel:RecalcMass+1d4:
db 7A 0B 73 09
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
