<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <Forms>
    <CETrainer>C596CB8EDB36188565696CDDA6491641810005CA5D03D4286672DBCBB22636E2B10C4B412FAB50123D264C910649D9993E4A9EA66FD155B7DDF4010274D35297F1D8336A006F3A2B9394F8FFE73B4794FC8FAD69F1ECE2EC348E39C414F10BC673DB0F9AD9C9042DA4F1C7496F84F0D5521ACF3B46CCD6C6DF5AF7479CC9A5F14177078C67888F5346857B9AE0E85A48945F225A3809BEC414E7F857A4357745F29A20D34A4484E9951AF9702D31A3BDBE270414025301528E5006E66883082CAF09F0FD1BB039FFE1EC1C349A4E7D8211953B456E3DBF116486D4274C20D3A97ED4C57465CD98C06535F3D19A45650BEAAB2D886B6EEC07D19A60A9267614CC82B91787F30A5BCF0EA9F5065AEF6A9AA5B6CD2045C4097E8AE7DECC9B06937A93F61F9BB2AE47F015357B9094F7398392704C158F69279B09DB228EB27A352CE4C1EA9780F5CC8A611296E6EA1DCD56B20685948CBADE207C1F0FDEC77138AD85E98D30FD5915E1579D46D887469805C980A9ADF92E95AE97B042567E2A0F4DA79AD67EEE7A6AB517E31C5EA1EEF8D27B1B1C7633DCDA06FD7EB79AC28C2447325DDADABEABFE28F0E23D5771BBABC6E7CEDD7A5F7C3A3E776E95EB55BB094C10714761FC2EF879E20D6EFA3937663DA9DA398DFAEF76DEF4464CAED0B53B835C55F71961DCD26E2B3E1906913F1FCFE27138DD2B9BB597FDF6B66CB058A054DE29BB17AB3F09A3602F56E377ED3057F326D777A647D325E3C2B5E0AA4E56BB8DB63E22BB68F78ECA7EB43D150C82B257C57176C79A6F2A86E74D127F754CBFBC77AA36DA31FA28D352BC69A7648816B020D20E322CB7F533DBB8D7B36991238E5370EE0E914839AED54DC674A1DE1C1281148A651F240521488A3E58430ED3A53A1E6A9CA30CA7EA7DD0072B8A37E5CA9A61C1685FBD42981009DB828411299CBA17A90EE7E3BD36D5CA2FB6974ABC811265D6E366A8AED5E2BB2999AB4329966CBBAC8AD8CE088A9263C03E5AAE1A2BE47495A8C91DAFCE5BBD9ADEF7AA73BC572F0EBC7AB4F32A6179F230B42F5A69E57D5AFD78DA9707B44F31CD9090BC50DA138200E439E30FC2FCB28DD9F8A4DD87368E877E7500FDF5051412C0E6130948F98D00C5FA41B05FB562FFD6827D723CF6EBC3ACA70CA8BF126B023980DBF28588C4C33CDFAF5BA1FF6C81EE1E0FFDE600DA7A1B0EC165380CFE2F504DFB17</CETrainer>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"infinite cash, poison, bullets, parachutes, crossbow bolts, knives"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
sub [ecx+0C],0
mov al,01

originalcode:
//mov [ecx+0C],eax
//mov al,01

exit:
jmp returnhere

"ACRSP.exe"+12BDA2F:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ACRSP.exe"+12BDA2F:
mov [ecx+0C],eax
mov al,01
//Alt: db 89 41 0C B0 01
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>97</Key>
          </Keys>
          <Description>Infinite cash, bullets, parachutes, medicine, knives, poison, crossbow bolts</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"infinite bombs"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
sub [ebx+1C],0
pop edi
pop esi

originalcode:
//sub [ebx+1C],edi
//pop edi
// esi

exit:
jmp returnhere

"ACRSP.exe"+1BBFA14:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ACRSP.exe"+1BBFA14:
sub [ebx+1C],edi
pop edi
pop esi
//Alt: db 29 7B 1C 5F 5E
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>98</Key>
          </Keys>
          <Description>Infinite bombs</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"indestructible armor"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
sub [ebx+08],0
test esi,esi

originalcode:
//mov [ebx+08],esi
//test esi,esi

exit:
jmp returnhere

"ACRSP.exe"+1776D78:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ACRSP.exe"+1776D78:
mov [ebx+08],esi
test esi,esi
//Alt: db 89 73 08 85 F6
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>99</Key>
          </Keys>
          <Description>indestructible armor</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Fast assassin level up"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax, #999999
mov [edi+14],eax
mov ecx,[AK::IAkStreamMgr::m_pStreamMgr+168DC]

exit:
jmp returnhere

"ACRSP.exe"+F19AB0:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ACRSP.exe"+F19AB0:
mov [edi+14],eax
mov ecx,[AK::IAkStreamMgr::m_pStreamMgr+168DC]
//Alt: db 89 47 14 8B 0D CC 5D 81 03
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>100</Key>
          </Keys>
          <Description>Fast assassin level up</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"No Templar awareness"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [esi+0C],#0

originalcode:
//movss [esi+0C],xmm0

exit:
jmp returnhere

"ACRSP.exe"+EA5B94:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ACRSP.exe"+EA5B94:
movss [esi+0C],xmm0
//Alt: db F3 0F 11 46 0C
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>101</Key>
          </Keys>
          <Description>No templar awareness</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"GOD MODE"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
sub [eax+20],0
call CreateVorbisFilePlugin+EDFE30

originalcode:
//mov [eax+20],edx
//call CreateVorbisFilePlugin+EDFE30

exit:
jmp returnhere

"ACRSP.exe"+176FFD3:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"ACRSP.exe"+176FFD3:
mov [eax+20],edx
call CreateVorbisFilePlugin+EDFE30
//Alt: db 89 50 20 E8 C5 F6 FF FF
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>102</Key>
          </Keys>
          <Description>GOD MODE</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>assassin level up Code : mov [edi+14],eax</Description>
      <Address>01E89AB0</Address>
      <ModuleName>ACRSP.exe</ModuleName>
      <ModuleNameOffset>F19AB0</ModuleNameOffset>
      <Before>
        <Byte>C8</Byte>
        <Byte>77</Byte>
        <Byte>02</Byte>
        <Byte>8B</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>0D</Byte>
        <Byte>CC</Byte>
        <Byte>5D</Byte>
        <Byte>A7</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <LuaScript>--TRAINERGENERATORSTART--
--This is autogenerated code. Changing code in this block will
--get erased and rewritten if you regenerate the trainer code

--Uncomment the following line if this is a Cheat Table format trainer and you don't want CE to show (Tip, save as .CETRAINER alternatively)
--hideAllCEWindows()
addresslist=getAddressList()
memrec0=addresslist_getMemoryRecordByID(addresslist,0)
memrec1=addresslist_getMemoryRecordByID(addresslist,1)
memrec3=addresslist_getMemoryRecordByID(addresslist,3)
memrec4=addresslist_getMemoryRecordByID(addresslist,4)
memrec6=addresslist_getMemoryRecordByID(addresslist,6)
memrec8=addresslist_getMemoryRecordByID(addresslist,8)

memrec0_hotkey0=memoryrecord_getHotkeyByID(memrec0,0)
memrec1_hotkey0=memoryrecord_getHotkeyByID(memrec1,0)
memrec3_hotkey0=memoryrecord_getHotkeyByID(memrec3,0)
memrec4_hotkey0=memoryrecord_getHotkeyByID(memrec4,0)
memrec6_hotkey0=memoryrecord_getHotkeyByID(memrec6,0)
memrec8_hotkey0=memoryrecord_getHotkeyByID(memrec8,0)

function onPostHotkey0(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT0, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec0_hotkey0,onPostHotkey0)

function onPostHotkey1(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT1, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec1_hotkey0,onPostHotkey1)

function onPostHotkey2(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT2, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec3_hotkey0,onPostHotkey2)

function onPostHotkey3(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT3, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec4_hotkey0,onPostHotkey3)

function onPostHotkey4(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT4, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec6_hotkey0,onPostHotkey4)

function onPostHotkey5(Hotkey)
  --Executed after the "toggle*" cheat got executed
  local memrec=memoryrecordhotkey_getOwner(Hotkey)
  local isActive=memoryrecord_isActive(memrec) --get the state after the hotkey got triggered
  cheatcomponent_setActive(CETrainer_CHEAT5, isActive)
  if gBeepOnAction then
    beep()
  end
end

memoryrecordhotkey_onPostHotkey(memrec8_hotkey0,onPostHotkey5)

control_setVisible(CETrainer_SEPERATOR, false)

strings_add(getAutoAttachList(), "ACRSP.exe")
gBeepOnAction=true
form_show(CETrainer)
function AboutClick()
  showMessage(gAboutText)
end
gAboutText=[[This trainer was made by 
Jeffthecreeper911
steam name: tvburpboy
]]

function CloseClick()
  closeCE()
  return caFree --onClick doesn't care, but onClose would like a result
end

--TRAINERGENERATORSTOP--
</LuaScript>
</CheatTable>
