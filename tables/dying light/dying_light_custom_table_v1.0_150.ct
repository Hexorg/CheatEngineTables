<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <Forms>
    <PackEdit Class="TCEForm" Encoding="Ascii85">tya%(/3t;]oiw)Sl6IvEv::l7KxkE{ZMR+^P3UT*4J5k]TEuOfOyW[T8EZUFniH=U0de3dcm.0UcmbYZx$y!pfBYv-,*XRUC7$uj[s#ds=}k7!8pde(..B9A-n@h{.SAw.elx,m-bYhjyD{Ru5uOFS[Rg%0Xk[@ZZ{Ef(wNuOP!iZx@8pl1dM1*he267^1husj1iF^+AkF$,NTW{5G40S2tjE3#f:v*z7_75(;X/j4c^laQqk2zi/xy5!z)Dwp[[[:+e#sOt/;j2Kh]Uad!7#q(tNE8RoJCt+{FdVU=M/)djQjY@RLCi7=ca$M+KxP8%w,Kd+#ARK7ly!Y-8BL,9k7M4Ux6OV;ZjvLdr/LjXN$Yu%;iOMh[BdMTmzMEpKs+$pvE:OrkO,.B3#hGEn+!c%;V;__cg7v3I5jI;y*4]@3o@6Ht!KGgjjABHEt}a.Dcl!kK[7*q]k!9;VR{UCNS+LQeL{0iZ,=_9:.ILcb!!Nj!0ghHGRN43yr[iyE][8y/ViPS5)s:vCwPj-P_ofHe@v!v]y}xj;vfLa9@nOw!5b7o%,O;X=qwzJpBe61j[bTmAmR70.i=kxV;3nktO#[0SmCRz4f0Z+8ySegevNmW.eDiRJxycj:gq^bkI+e_m]?!Mx+ms2gt#jn]-sd0vk2Rk!0yt8PeszWT?}r#5-JHuPOzCWN3I.CDgA,bj=X.KFqy=;qy7ygXyZJlK98Qxb,wc)eLvgG@[Q6NMz2p-NMZsW.25lM7y:lEbOqKl0i1#bWe6}Z5Cb1g/(XymtW?OyVowr[/c)ux^jWwYrLC;?0:kk,j+}sP#i@}mE?n!aN^Nb#Dhq3W8x?ySyEnX;!H3m0d82iN0G$FXt_4:YBc?$j!Z1N,pvOVX/+O-]4#vtSAI5kL7-S.*084}ZVwxti.7pzS)tMC%@{UK+p^SFHjzF_!+HIL%b(;onE0We?#r:JjC$I86IZ)@)0TDHAJhzVu2sKe0/iMzGEtf@cc]F!2Xm7RLZ7p)RIj:/)S9x-hdUa?*T1%.06#CsQG+nhU+i}Pbi+xbqeE+hq)/t$?*Vgn?3FJsKJt.9,PD:Dc)Mj}]oa%T3VvEeGHu_EtGF2HK+1[eL_EYs#Q19#Dn[kKF_Iw:gV*tSk@_3%yi%_dP]#%smXo/o;BGTDz[*A$qTOBF@J-!Z,=f9]L3S?{N9^+VO[.Yjf(UQN0@U8+Obnn)z*Iq8K(N]UMvW5=7RlC7ak%M+Z,a(ev/gOevOEpNL6+b5T%1Oxfm!JY,H#2r?^/6}MS1HL:PNG@XkVSpVXZiaV</PackEdit>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>2721</ID>
      <Description>"Infinite / Unlimited / Indestructible / god"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1084</ID>
          <Description>"Infinite Health"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

alloc(ih_1,128,gamedll_x64_rwdi.dll) //Infinite Health
aobscanmodule(ih_aob1,gamedll_x64_rwdi.dll,F3 0F 11 83 54 09 00 00 40)
registersymbol(ih_aob1)
label(returnhere_ih_1)

//Infinite Health - 2nd Compare
aobscanmodule(ih_aob2,gamedll_x64_rwdi.dll,FF 90 48 01 00 00 0F 2F F7)
registersymbol(ih_aob2)

//--------------------------------------------------//
ih_1:
mov [rbx+00000954],(float)275
jmp returnhere_ih_1
//--------------------------------------------------//

ih_aob1:
jmp ih_1
nop
nop
nop
returnhere_ih_1:

ih_aob1-B:
db 72 03

ih_aob2+6:
db 90 90 90

[Disable]

ih_aob1:
db F3 0F 11 83 54 09 00 00
unregistersymbol(ih_aob1)
dealloc(ih_1)

ih_aob1-B:
db 77 03

ih_aob2+6:
db 0F 2F F7
unregistersymbol(ih_aob2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1100</ID>
          <Description>"Infinite Ammo"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

//Infinite Clip Ammo
aobscanmodule(ica_aob1,gamedll_x64_rwdi.dll,8B 50 40 48 8D 48 40 FF CA E8)
registersymbol(ica_aob1)

//Infinite Overall Ammo
aobscanmodule(ioa_aob1,gamedll_x64_rwdi.dll,48 63 C3 48 03 C0 45 89 44 C2 04)
registersymbol(ioa_aob1)

ica_aob1+7:
db 90 90

ioa_aob1+6:
db 90 90 90 90 90

[Disable]

ica_aob1+7:
db FF CA
unregistersymbol(ica_aob1)

ioa_aob1+6:
db 45 89 44 C2 04
unregistersymbol(ioa_aob1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1103</ID>
          <Description>"Infinite Throwables / Weapon Upgrades"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(itwu_aob1,gamedll_x64_rwdi.dll,83 39 01 7E 39)
registersymbol(itwu_aob1)

itwu_aob1+3:
db 90 90

itwu_aob1+7:
db 90 90


[DISABLE]

itwu_aob1+3:
db 7E 39

itwu_aob1+7:
db FF CA
unregistersymbol(itwu_aob1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2035</ID>
          <Description>"Infinite UV Flashlight"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

aobscanmodule(iuf_aob1,gamedll_x64_rwdi.dll,F3 0F 5C C2 89 41 28)
registersymbol(iuf_aob1)

iuf_aob1:
db F3 0F 58 C2

[Disable]

iuf_aob1:
db F3 0F 5C C2
unregistersymbol(iuf_aob1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>328</ID>
          <Description>"Unlimited Potion Duration"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(UnlimitedPotionDuration,gamedll_x64_rwdi.dll,0F 28 F9 F3 0F 5C C7)
UnlimitedPotionDuration+3:
  db 90 90 90 90
registersymbol(UnlimitedPotionDuration)

[DISABLE]
UnlimitedPotionDuration+3:
  db F3 0F 5C C7
unregistersymbol(UnlimitedPotionDuration)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2420</ID>
          <Description>"Unlimited Camouflage (activate script camouflage self) O=On P=Off"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(UnlimitedCamouflage,gamedll_x64_rwdi.dll,F3 0F 11 43 14 0F 28)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BE7DA7)

label(code)
label(return)

newmem:

code:
  //movss [rbx+14],xmm0
  jmp return

UnlimitedCamouflage:
  jmp code
return:
registersymbol(UnlimitedCamouflage)

[DISABLE]

UnlimitedCamouflage:
  db F3 0F 11 43 14

unregistersymbol(UnlimitedCamouflage)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+BE7DA7

"gamedll_x64_rwdi.dll"+BE7D78: 66 0F EF C9              -  pxor xmm1,xmm1
"gamedll_x64_rwdi.dll"+BE7D7C: 83 E0 01                 -  and eax,01
"gamedll_x64_rwdi.dll"+BE7D7F: 2B C8                    -  sub ecx,eax
"gamedll_x64_rwdi.dll"+BE7D81: F3 0F 2A C9              -  cvtsi2ss xmm1,ecx
"gamedll_x64_rwdi.dll"+BE7D85: F3 0F 59 0D B3 3E 7E 00  -  mulss xmm1,[gamedll_x64_rwdi.dll+13CBC40]
"gamedll_x64_rwdi.dll"+BE7D8D: F3 0F 10 43 14           -  movss xmm0,[rbx+14]
"gamedll_x64_rwdi.dll"+BE7D92: F3 0F 58 0D F2 F1 7D 00  -  addss xmm1,[gamedll_x64_rwdi.dll+13C6F8C]
"gamedll_x64_rwdi.dll"+BE7D9A: F3 41 0F 59 C8           -  mulss xmm1,xmm8
"gamedll_x64_rwdi.dll"+BE7D9F: F3 0F 59 CE              -  mulss xmm1,xmm6
"gamedll_x64_rwdi.dll"+BE7DA3: F3 0F 5C C1              -  subss xmm0,xmm1
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+BE7DA7: F3 0F 11 43 14           -  movss [rbx+14],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+BE7DAC: 0F 28 74 24 40           -  movaps xmm6,[rsp+40]
"gamedll_x64_rwdi.dll"+BE7DB1: 44 0F 28 44 24 30        -  movaps xmm8,[rsp+30]
"gamedll_x64_rwdi.dll"+BE7DB7: 48 83 C4 50              -  add rsp,50
"gamedll_x64_rwdi.dll"+BE7DBB: 5B                       -  pop rbx
"gamedll_x64_rwdi.dll"+BE7DBC: C3                       -  ret 
"gamedll_x64_rwdi.dll"+BE7DBD: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+BE7DBE: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+BE7DBF: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+BE7DC0: 40 53                    -  push rbx
"gamedll_x64_rwdi.dll"+BE7DC2: 48 83 EC 20              -  sub rsp,20
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>79</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>80</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>1236</ID>
          <Description>"Indestructible Weapons"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

//Indestructible Weapons
aobscanmodule(iw_aob1,gamedll_x64_rwdi.dll,0F 2F F0 76 11 48 8B 47 18)
registersymbol(iw_aob1)

iw_aob1+3:
db 90 90


[DISABLE]

iw_aob1+3:
db 76 11
unregistersymbol(iw_aob1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2725</ID>
          <Description>"car"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>2600</ID>
              <Description>"Unlimited Gas"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(CarGas,gamedll_x64_rwdi.dll,18 F3 0F 11 88 20 03 00 00)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+F87D20)

label(code)
label(return)

newmem:

code:
  //movss [rax+00000320],xmm1
  jmp return

CarGas+01:
  jmp code
  nop
  nop
  nop
return:
registersymbol(CarGas)

[DISABLE]

CarGas+01:
  db F3 0F 11 88 20 03 00 00

unregistersymbol(CarGas)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+F87D20

"gamedll_x64_rwdi.dll"+F87CFF: 48 8B 4B 18              -  mov rcx,[rbx+18]
"gamedll_x64_rwdi.dll"+F87D03: EB 02                    -  jmp gamedll_x64_rwdi.dll+F87D07
"gamedll_x64_rwdi.dll"+F87D05: 33 C9                    -  xor ecx,ecx
"gamedll_x64_rwdi.dll"+F87D07: F3 0F 58 91 20 03 00 00  -  addss xmm2,[rcx+00000320]
"gamedll_x64_rwdi.dll"+F87D0F: 0F 2F D1                 -  comiss xmm2,xmm1
"gamedll_x64_rwdi.dll"+F87D12: 72 03                    -  jb gamedll_x64_rwdi.dll+F87D17
"gamedll_x64_rwdi.dll"+F87D14: 0F 28 CA                 -  movaps xmm1,xmm2
"gamedll_x64_rwdi.dll"+F87D17: 48 85 C0                 -  test rax,rax
"gamedll_x64_rwdi.dll"+F87D1A: 74 25                    -  je gamedll_x64_rwdi.dll+F87D41
"gamedll_x64_rwdi.dll"+F87D1C: 48 8B 43 18              -  mov rax,[rbx+18]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+F87D20: F3 0F 11 88 20 03 00 00  -  movss [rax+00000320],xmm1
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+F87D28: C7 43 38 00 00 00 3F     -  mov [rbx+38],3F000000
"gamedll_x64_rwdi.dll"+F87D2F: C7 43 34 00 00 00 00     -  mov [rbx+34],00000000
"gamedll_x64_rwdi.dll"+F87D36: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"gamedll_x64_rwdi.dll"+F87D3B: 48 83 C4 30              -  add rsp,30
"gamedll_x64_rwdi.dll"+F87D3F: 5B                       -  pop rbx
"gamedll_x64_rwdi.dll"+F87D40: C3                       -  ret 
"gamedll_x64_rwdi.dll"+F87D41: F3 0F 11 88 20 03 00 00  -  movss [rax+00000320],xmm1
"gamedll_x64_rwdi.dll"+F87D49: C7 43 38 00 00 00 3F     -  mov [rbx+38],3F000000
"gamedll_x64_rwdi.dll"+F87D50: C7 43 34 00 00 00 00     -  mov [rbx+34],00000000
"gamedll_x64_rwdi.dll"+F87D57: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2601</ID>
              <Description>"Infinite Gas Flamethrower"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(GasFreeFlamethrower,gamedll_x64_rwdi.dll,F3 0F 11 80 20 03 00 00)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+F883B2)

label(code)
label(return)

newmem:

code:
  //movss [rax+00000320],xmm0
  jmp return

GasFreeFlamethrower:
  jmp code
  nop
  nop
  nop
return:
registersymbol(GasFreeFlamethrower)

[DISABLE]

GasFreeFlamethrower:
  db F3 0F 11 80 20 03 00 00

unregistersymbol(GasFreeFlamethrower)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+F883B2

"gamedll_x64_rwdi.dll"+F88393: 33 C0                    -  xor eax,eax
"gamedll_x64_rwdi.dll"+F88395: F3 0F 58 B0 20 03 00 00  -  addss xmm6,[rax+00000320]
"gamedll_x64_rwdi.dll"+F8839D: 0F 2F F0                 -  comiss xmm6,xmm0
"gamedll_x64_rwdi.dll"+F883A0: 72 03                    -  jb gamedll_x64_rwdi.dll+F883A5
"gamedll_x64_rwdi.dll"+F883A2: 0F 28 C6                 -  movaps xmm0,xmm6
"gamedll_x64_rwdi.dll"+F883A5: 48 85 C9                 -  test rcx,rcx
"gamedll_x64_rwdi.dll"+F883A8: 74 06                    -  je gamedll_x64_rwdi.dll+F883B0
"gamedll_x64_rwdi.dll"+F883AA: 48 8B 43 18              -  mov rax,[rbx+18]
"gamedll_x64_rwdi.dll"+F883AE: EB 02                    -  jmp gamedll_x64_rwdi.dll+F883B2
"gamedll_x64_rwdi.dll"+F883B0: 33 C0                    -  xor eax,eax
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+F883B2: F3 0F 11 80 20 03 00 00  -  movss [rax+00000320],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+F883BA: C7 43 34 00 00 00 00     -  mov [rbx+34],00000000
"gamedll_x64_rwdi.dll"+F883C1: C7 43 38 00 00 00 3F     -  mov [rbx+38],3F000000
"gamedll_x64_rwdi.dll"+F883C8: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"gamedll_x64_rwdi.dll"+F883CD: 48 83 C4 30              -  add rsp,30
"gamedll_x64_rwdi.dll"+F883D1: 5B                       -  pop rbx
"gamedll_x64_rwdi.dll"+F883D2: C3                       -  ret 
"gamedll_x64_rwdi.dll"+F883D3: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+F883D4: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+F883D5: CC                       -  int 3 
"gamedll_x64_rwdi.dll"+F883D6: CC                       -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2603</ID>
              <Description>"Infinite Nitro"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(InfiniteNitro,gamedll_x64_rwdi.dll,F3 0F 11 4B 10 C7)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+F8AC1A)

label(code)
label(return)

newmem:

code:
  //movss [rbx+10],xmm1
  jmp return

InfiniteNitro:
  jmp code
return:
registersymbol(InfiniteNitro)

[DISABLE]

InfiniteNitro:
  db F3 0F 11 4B 10

unregistersymbol(InfiniteNitro)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+F8AC1A

"gamedll_x64_rwdi.dll"+F8ABF5: EB 1F                          -  jmp gamedll_x64_rwdi.dll+F8AC16
"gamedll_x64_rwdi.dll"+F8ABF7: 40 84 FF                       -  test dil,dil
"gamedll_x64_rwdi.dll"+F8ABFA: 74 08                          -  je gamedll_x64_rwdi.dll+F8AC04
"gamedll_x64_rwdi.dll"+F8ABFC: 48 05 04 09 00 00              -  add rax,00000904
"gamedll_x64_rwdi.dll"+F8AC02: EB 06                          -  jmp gamedll_x64_rwdi.dll+F8AC0A
"gamedll_x64_rwdi.dll"+F8AC04: 48 05 74 08 00 00              -  add rax,00000874
"gamedll_x64_rwdi.dll"+F8AC0A: 0F 28 C6                       -  movaps xmm0,xmm6
"gamedll_x64_rwdi.dll"+F8AC0D: F3 0F 59 40 04                 -  mulss xmm0,[rax+04]
"gamedll_x64_rwdi.dll"+F8AC12: F3 0F 5C C8                    -  subss xmm1,xmm0
"gamedll_x64_rwdi.dll"+F8AC16: F3 0F 58 D6                    -  addss xmm2,xmm6
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+F8AC1A: F3 0F 11 4B 10                 -  movss [rbx+10],xmm1
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+F8AC1F: C7 43 14 00 00 80 BF           -  mov [rbx+14],BF800000
"gamedll_x64_rwdi.dll"+F8AC26: F3 0F 11 53 18                 -  movss [rbx+18],xmm2
"gamedll_x64_rwdi.dll"+F8AC2B: E9 A9 00 00 00                 -  jmp gamedll_x64_rwdi.dll+F8ACD9
"gamedll_x64_rwdi.dll"+F8AC30: F3 0F 10 05 98 0F 44 00        -  movss xmm0,[gamedll_x64_rwdi.dll+13CBBD0]
"gamedll_x64_rwdi.dll"+F8AC38: C7 43 18 00 00 00 00           -  mov [rbx+18],00000000
"gamedll_x64_rwdi.dll"+F8AC3F: 0F 2E 43 14                    -  ucomiss xmm0,[rbx+14]
"gamedll_x64_rwdi.dll"+F8AC43: 75 0F                          -  jne gamedll_x64_rwdi.dll+F8AC54
"gamedll_x64_rwdi.dll"+F8AC45: 48 83 C1 28                    -  add rcx,28
"gamedll_x64_rwdi.dll"+F8AC49: FF 15 C1 8C 39 00              -  call qword ptr [gamedll_x64_rwdi.dll+1323910]
"gamedll_x64_rwdi.dll"+F8AC4F: F3 0F 11 43 14                 -  movss [rbx+14],xmm0
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2720</ID>
      <Description>"cooldown"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2717</ID>
          <Description>"Instant Cooldown Flares"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(InstantCooldownFlares,gamedll_x64_rwdi.dll,F3 0F 11 01 77 23)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+B9B889)

label(code)
label(return)

newmem:

code:
  //movss [rcx],xmm0
  ja gamedll_x64_rwdi.ShutdownGameScriptDLL+B98DE2
  jmp return

InstantCooldownFlares:
  jmp code
  nop
return:
registersymbol(InstantCooldownFlares)

[DISABLE]

InstantCooldownFlares:
  db F3 0F 11 01 77 23

unregistersymbol(InstantCooldownFlares)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2457</ID>
          <Description>"Grappling Hook Instant Cooldown"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(InfiniteGrapplingHook,gamedll_x64_rwdi.dll,F3 0F 11 43 40 77)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+C9352A)

label(code)
label(return)

newmem:

code:
  //movss [rbx+40],xmm0
  jmp return

InfiniteGrapplingHook:
  jmp code
return:
registersymbol(InfiniteGrapplingHook)

[DISABLE]

InfiniteGrapplingHook:
  db F3 0F 11 43 40

unregistersymbol(InfiniteGrapplingHook)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+C9352A

"gamedll_x64_rwdi.dll"+C93503: 74 0C                    -  je gamedll_x64_rwdi.dll+C93511
"gamedll_x64_rwdi.dll"+C93505: 48 8B C8                 -  mov rcx,rax
"gamedll_x64_rwdi.dll"+C93508: E8 83 43 74 FF           -  call gamedll_x64_rwdi.dll+3D7890
"gamedll_x64_rwdi.dll"+C9350D: 84 C0                    -  test al,al
"gamedll_x64_rwdi.dll"+C9350F: 75 0D                    -  jne gamedll_x64_rwdi.dll+C9351E
"gamedll_x64_rwdi.dll"+C93511: E8 DA 1A 70 FF           -  call gamedll_x64_rwdi.dll+394FF0
"gamedll_x64_rwdi.dll"+C93516: F3 0F 59 B0 AC 01 00 00  -  mulss xmm6,[rax+000001AC]
"gamedll_x64_rwdi.dll"+C9351E: F3 0F 10 43 40           -  movss xmm0,[rbx+40]
"gamedll_x64_rwdi.dll"+C93523: F3 0F 5C C6              -  subss xmm0,xmm6
"gamedll_x64_rwdi.dll"+C93527: 0F 2F C7                 -  comiss xmm0,xmm7
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+C9352A: F3 0F 11 43 40           -  movss [rbx+40],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+C9352F: 77 07                    -  ja gamedll_x64_rwdi.dll+C93538
"gamedll_x64_rwdi.dll"+C93531: C6 43 44 01              -  mov byte ptr [rbx+44],01
"gamedll_x64_rwdi.dll"+C93535: 89 7B 40                 -  mov [rbx+40],edi
"gamedll_x64_rwdi.dll"+C93538: 48 8B 5C 24 60           -  mov rbx,[rsp+60]
"gamedll_x64_rwdi.dll"+C9353D: 0F 28 74 24 40           -  movaps xmm6,[rsp+40]
"gamedll_x64_rwdi.dll"+C93542: 0F 28 7C 24 30           -  movaps xmm7,[rsp+30]
"gamedll_x64_rwdi.dll"+C93547: 48 83 C4 50              -  add rsp,50
"gamedll_x64_rwdi.dll"+C9354B: 5F                       -  pop rdi
"gamedll_x64_rwdi.dll"+C9354C: C3                       -  ret 
"gamedll_x64_rwdi.dll"+C9354D: CC                       -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2543</ID>
          <Description>"Car Flamethrower Instant Cooldown"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(CarFire,gamedll_x64_rwdi.dll,F3 0F 11 43 1C 76)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+F867C1)

label(code)
label(return)

newmem:

code:
  //movss [rbx+1C],xmm0
  jmp return

CarFire:
  jmp code
return:
registersymbol(CarFire)

[DISABLE]

CarFire:
  db F3 0F 11 43 1C

unregistersymbol(CarFire)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+F867C1

"gamedll_x64_rwdi.dll"+F86790: 48 69 C9 70 29 00 00           -  imul rcx,rcx,00002970
"gamedll_x64_rwdi.dll"+F86797: 48 03 88 98 35 00 00           -  add rcx,[rax+00003598]
"gamedll_x64_rwdi.dll"+F8679E: EB 07                          -  jmp gamedll_x64_rwdi.dll+F867A7
"gamedll_x64_rwdi.dll"+F867A0: 48 8D 88 C8 02 00 00           -  lea rcx,[rax+000002C8]
"gamedll_x64_rwdi.dll"+F867A7: F3 0F 10 43 1C                 -  movss xmm0,[rbx+1C]
"gamedll_x64_rwdi.dll"+F867AC: 0F 28 CE                       -  movaps xmm1,xmm6
"gamedll_x64_rwdi.dll"+F867AF: 32 D2                          -  xor dl,dl
"gamedll_x64_rwdi.dll"+F867B1: 83 7B 30 00                    -  cmp dword ptr [rbx+30],00
"gamedll_x64_rwdi.dll"+F867B5: F3 0F 59 89 A4 09 00 00        -  mulss xmm1,[rcx+000009A4]
"gamedll_x64_rwdi.dll"+F867BD: F3 0F 5C C1                    -  subss xmm0,xmm1
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+F867C1: F3 0F 11 43 1C                 -  movss [rbx+1C],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+F867C6: 76 68                          -  jna gamedll_x64_rwdi.dll+F86830
"gamedll_x64_rwdi.dll"+F867C8: 48 8B 4B 28                    -  mov rcx,[rbx+28]
"gamedll_x64_rwdi.dll"+F867CC: 44 8B 43 30                    -  mov r8d,[rbx+30]
"gamedll_x64_rwdi.dll"+F867D0: F3 0F 10 05 D0 55 44 00        -  movss xmm0,[gamedll_x64_rwdi.dll+13CBDA8]
"gamedll_x64_rwdi.dll"+F867D8: 0F 1F 84 00 00 00 00 00        -  nop [rax+rax+00000000]
"gamedll_x64_rwdi.dll"+F867E0: 48 8B 01                       -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+F867E3: 0F 2F 80 E0 01 00 00           -  comiss xmm0,[rax+000001E0]
"gamedll_x64_rwdi.dll"+F867EA: 73 10                          -  jae gamedll_x64_rwdi.dll+F867FC
"gamedll_x64_rwdi.dll"+F867EC: 80 B8 D0 00 00 00 00           -  cmp byte ptr [rax+000000D0],00
"gamedll_x64_rwdi.dll"+F867F3: 74 07                          -  je gamedll_x64_rwdi.dll+F867FC
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2605</ID>
          <Description>"The Button Instant Cooldown"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(TheButton,gamedll_x64_rwdi.dll,F3 0F 11 83 48 2A 00 00)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AC1CEE)

label(code)
label(return)

newmem:

code:
  //movss [rbx+00002A48],xmm0
  jmp return

TheButton:
  jmp code
  nop
  nop
  nop
return:
registersymbol(TheButton)

[DISABLE]

TheButton:
  db F3 0F 11 83 48 2A 00 00

unregistersymbol(TheButton)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AC1CEE

"gamedll_x64_rwdi.dll"+AC1CC5: 0F 57 C0                 -  xorps xmm0,xmm0
"gamedll_x64_rwdi.dll"+AC1CC8: 0F 2F 83 48 2A 00 00     -  comiss xmm0,[rbx+00002A48]
"gamedll_x64_rwdi.dll"+AC1CCF: 72 25                    -  jb gamedll_x64_rwdi.dll+AC1CF6
"gamedll_x64_rwdi.dll"+AC1CD1: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+AC1CD4: E8 B7 08 03 00           -  call gamedll_x64_rwdi.dll+AF2590
"gamedll_x64_rwdi.dll"+AC1CD9: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+AC1CDC: E8 2F FF FE FF           -  call gamedll_x64_rwdi.dll+AB1C10
"gamedll_x64_rwdi.dll"+AC1CE1: BA 14 00 00 00           -  mov edx,00000014
"gamedll_x64_rwdi.dll"+AC1CE6: 48 8B C8                 -  mov rcx,rax
"gamedll_x64_rwdi.dll"+AC1CE9: E8 12 6A 09 00           -  call gamedll_x64_rwdi.dll+B58700
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AC1CEE: F3 0F 11 83 48 2A 00 00  -  movss [rbx+00002A48],xmm0
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AC1CF6: 48 83 C4 20              -  add rsp,20
"gamedll_x64_rwdi.dll"+AC1CFA: 5B                       -  pop rbx
"gamedll_x64_rwdi.dll"+AC1CFB: F3 C3                    - repe  ret 
"gamedll_x64_rwdi.dll"+AC1CFD: 0F 1F 00                 -  nop [rax]
"gamedll_x64_rwdi.dll"+AC1D00: 20 1C AC                 -  and [rsp+rbp*4],bl
"gamedll_x64_rwdi.dll"+AC1D03: 00 4D 1C                 -  add [rbp+1C],cl
"gamedll_x64_rwdi.dll"+AC1D06: AC                       -  lodsb 
"gamedll_x64_rwdi.dll"+AC1D07: 00 6D 1C                 -  add [rbp+1C],ch
"gamedll_x64_rwdi.dll"+AC1D0A: AC                       -  lodsb 
"gamedll_x64_rwdi.dll"+AC1D0B: 00 4D 1C                 -  add [rbp+1C],cl
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2722</ID>
      <Description>"movement / combat"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2521</ID>
          <Description>"Instant Kill"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

aobscanmodule(InstantKill,gamedll_x64_rwdi.dll,F3 0F 5C CE F3 41 0F 11)
registersymbol(InstantKill)

InstantKill:
db F3 0F 5C C9 F3 41 0F 11 4F 78

[Disable]

InstantKill:
db F3 0F 5C CE F3 41 0F 11 4F 7C
unregistersymbol(InstantKill)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2522</ID>
          <Description>"Infinite Stamina"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

aobscanmodule(InfiniteStamina1,gamedll_x64_rwdi.dll,F3 0F 10 4B 10 F3 41 0F 5C C8)
registersymbol(InfiniteStamina1)

aobscanmodule(InfiniteStamina2,gamedll_x64_rwdi.dll,F3 0F 5C C7 F3 0F 11 43 10)
registersymbol(InfiniteStamina2)

InfiniteStamina1+5:
db F3 41 0F 58 C8

InfiniteStamina2:
db F3 0F 58 C7

[Disable]

InfiniteStamina1+5:
db F3 41 0F 5C C8
unregistersymbol(InfiniteStamina1)

InfiniteStamina2:
db F3 0F 5C C7
unregistersymbol(InfiniteStamina2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2665</ID>
          <Description>"Super Jump"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(playerStats,gamedll_x64_rwdi.dll,09 89 70 14 F3 0F 10 40 10)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+A0B12C)

label(code)
label(return)
label(bypass)
label(runspeed)
label(stun)
label(throwmelee)
label(critical)

newmem:
  cmp r9,1250
  je runspeed
  cmp r9,4D0
  je stun
  cmp r9,190
  je throwmelee
  cmp r9,1510
  je critical
  jmp code

runspeed:
  mov [rax+10],(float)50.0
  jmp bypass

stun:
  mov [rax+10],(float)100.0 // default 1.0
  jmp bypass

throwmelee:
  mov [rax+10],(float)50.0 // default 4.0
  jmp bypass

critical:
  mov [rax+10],(float)100.0 // default 1.0
  jmp bypass

bypass:
  movss xmm0,[rax+10]
  jmp return

code:
  movss xmm0,[rax+10]
  jmp return

playerStats+04:
  jmp newmem
return:
registersymbol(playerStats)

[DISABLE]
playerStats+04:
  db F3 0F 10 40 10

unregistersymbol(playerStats)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2386</ID>
          <Description>"Run Speed Options"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>332</ID>
              <Description>"Run Speed 1"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]


aobscanmodule(_Speed,gamedll_x64_rwdi.dll,F3 0F 59 72 08 80) // should be unique
aobscanmodule(_Speed2,gamedll_x64_rwdi.dll,F3 0F 59 7A 08 48)
aobscanmodule(_Speed3,gamedll_x64_rwdi.dll,F3 41 0F 59 41 08 C3 81)
alloc(newmem,$1000,gamedll_x64_rwdi.dll)
alloc(newmem1,$1000,gamedll_x64_rwdi.dll)
alloc(newmem2,$1000,gamedll_x64_rwdi.dll)

label(code)
label(return)
label(code1)
label(return1)
label(code2)
label(return2)

newmem2:
  mov [r9+08],(float)15
code2:
  mulss xmm0,[r9+08]
  jmp return2


newmem1:
  mov [rdx+08],(float)15
code1:
  mulss xmm7,[rdx+08]
  jmp return1


newmem:
  mov [rdx+08],(float)15
code:
  mulss xmm6,[rdx+08]
  jmp return

_Speed:
  jmp newmem
return:

_Speed2:
  jmp newmem1
return1:

_Speed3:
  jmp newmem2
  nop
return2:

registersymbol(_Speed)
registersymbol(_Speed2)
registersymbol(_Speed3)

[DISABLE]

_Speed:
  db F3 0F 59 72 08

_Speed2:
  db F3 0F 59 7A 08

_Speed3:
  db F3 41 0F 59 41 08

unregistersymbol(_Speed)
dealloc(newmem)
unregistersymbol(_Speed2)
dealloc(newmem1)
unregistersymbol(_Speed3)
dealloc(newmem2)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2110</ID>
              <Description>"Run Speed 2"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]


aobscanmodule(_Speed,gamedll_x64_rwdi.dll,F3 0F 59 72 08 80) // should be unique
aobscanmodule(_Speed2,gamedll_x64_rwdi.dll,F3 0F 59 7A 08 48)
aobscanmodule(_Speed3,gamedll_x64_rwdi.dll,F3 41 0F 59 41 08 C3 81)
alloc(newmem,$1000,gamedll_x64_rwdi.dll)
alloc(newmem1,$1000,gamedll_x64_rwdi.dll)
alloc(newmem2,$1000,gamedll_x64_rwdi.dll)

label(code)
label(return)
label(code1)
label(return1)
label(code2)
label(return2)

newmem2:
  mov [r9+08],(float)25
code2:
  mulss xmm0,[r9+08]
  jmp return2


newmem1:
  mov [rdx+08],(float)25
code1:
  mulss xmm7,[rdx+08]
  jmp return1


newmem:
  mov [rdx+08],(float)25
code:
  mulss xmm6,[rdx+08]
  jmp return

_Speed:
  jmp newmem
return:

_Speed2:
  jmp newmem1
return1:

_Speed3:
  jmp newmem2
  nop
return2:

registersymbol(_Speed)
registersymbol(_Speed2)
registersymbol(_Speed3)

[DISABLE]

_Speed:
  db F3 0F 59 72 08

_Speed2:
  db F3 0F 59 7A 08

_Speed3:
  db F3 41 0F 59 41 08

unregistersymbol(_Speed)
dealloc(newmem)
unregistersymbol(_Speed2)
dealloc(newmem1)
unregistersymbol(_Speed3)
dealloc(newmem2)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2111</ID>
              <Description>"Run Speed 3"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]


aobscanmodule(_Speed,gamedll_x64_rwdi.dll,F3 0F 59 72 08 80) // should be unique
aobscanmodule(_Speed2,gamedll_x64_rwdi.dll,F3 0F 59 7A 08 48)
aobscanmodule(_Speed3,gamedll_x64_rwdi.dll,F3 41 0F 59 41 08 C3 81)
alloc(newmem,$1000,gamedll_x64_rwdi.dll)
alloc(newmem1,$1000,gamedll_x64_rwdi.dll)
alloc(newmem2,$1000,gamedll_x64_rwdi.dll)

label(code)
label(return)
label(code1)
label(return1)
label(code2)
label(return2)

newmem2:
  mov [r9+08],(float)9999
code2:
  mulss xmm0,[r9+08]
  jmp return2


newmem1:
  mov [rdx+08],(float)9999
code1:
  mulss xmm7,[rdx+08]
  jmp return1


newmem:
  mov [rdx+08],(float)9999
code:
  mulss xmm6,[rdx+08]
  jmp return

_Speed:
  jmp newmem
return:

_Speed2:
  jmp newmem1
return1:

_Speed3:
  jmp newmem2
  nop
return2:

registersymbol(_Speed)
registersymbol(_Speed2)
registersymbol(_Speed3)

[DISABLE]

_Speed:
  db F3 0F 59 72 08

_Speed2:
  db F3 0F 59 7A 08

_Speed3:
  db F3 41 0F 59 41 08

unregistersymbol(_Speed)
dealloc(newmem)
unregistersymbol(_Speed2)
dealloc(newmem1)
unregistersymbol(_Speed3)
dealloc(newmem2)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2718</ID>
      <Description>"crafting / backpack"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>FF00FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1102</ID>
          <Description>"Infinite Crafting Items"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

alloc(ici_1,32,gamedll_x64_rwdi.dll) //Infinite Crafting Items
aobscanmodule(ici_aob1,gamedll_x64_rwdi.dll,48 39 1C 28 75 59 8B 73 40 48 8D 4B 40)
registersymbol(ici_aob1)
label(returnhere_ici_1)

//--------------------------------------------------//
ici_1:
mov [rbx+40],64
mov esi,[rbx+40]
lea rcx,[rbx+40]
jmp returnhere_ici_1
//--------------------------------------------------//

ici_aob1+6:
jmp ici_1
nop
nop
returnhere_ici_1:

[Disable]

ici_aob1+6:
db 8B 73 40 48 8D 4B 40
unregistersymbol(ici_aob1)
dealloc(ici_1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>354</ID>
          <Description>"Free Blueprint Requirements"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(FreeBluAOB1,gamedll_x64_rwdi.dll,41 8B 44 0D 00 85 C0)
aobscanmodule(FreeBluAOB2,gamedll_x64_rwdi.dll,44 8B 24 17 41 8D 51 01)
alloc(newmem,2048,gamedll_x64_rwdi.dll)

label(FreeBlu1Start)
label(FreeBlu2Start)
label(FreeBlue1End)
label(FreeBlue2End)
registersymbol(FreeBluAOB1)
registersymbol(FreeBluAOB2)

newmem:

FreeBlu1Start:
mov eax,0
jmp FreeBlue1End

FreeBlu2Start:
mov r12d,0
lea edx,[r9+01]
jmp FreeBlue2End

FreeBluAOB1:
jmp FreeBlu1Start
FreeBlue1End:

FreeBluAOB2:
jmp FreeBlu2Start
nop
nop
nop
FreeBlue2End:
 
[DISABLE]

dealloc(newmem)

FreeBluAOB1:
db 41 8B 44 0D 00

FreeBluAOB2:
db 44 8B 24 17 41 8D 51 01

unregistersymbol(FreeBluAOB1)
unregistersymbol(FreeBluAOB2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2734</ID>
          <Description>"----&gt; Backpack Editor"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>008000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{
The editor is pretty straight forward. Before use, hit the update button. It will
pull your current inventory for that tab. Make your changes and hit apply. If it
errors out for any reason, let me know.
}
aobscanmodule(ItemEditDataAOB,gamedll_x64_rwdi.dll,48 8B 78 60 48 8B D9)
aobscanmodule(BaseItemTableAOB,gamedll_x64_rwdi.dll,8B C8 48 8B 42 E8 4C 8B 04 C8)
alloc(newmem,2048,gamedll_x64_rwdi.dll)
label(ItemEditStart)
label(ItemEditEnd)
label(BaseItemStart)
label(BaseItemEnd)
label(ItemEditData)
registersymbol(ItemEditDataAOB)
registersymbol(BaseItemTableAOB)
registersymbol(ItemEditData)

newmem:

ItemEditStart:
mov [ItemEditData],rax
mov rdi,[rax+60]
mov rbx,rcx
jmp ItemEditEnd

BaseItemStart:
mov [ItemEditData+8],rdx
mov ecx,eax
mov rax,[rdx-18]
jmp BaseItemEnd

ItemEditData:

ItemEditDataAOB:
jmp ItemEditStart
nop
nop
ItemEditEnd:

BaseItemTableAOB:
jmp BaseItemStart
nop
BaseItemEnd:
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)

ItemEditDataAOB:
db 48 8B 78 60 48 8B D9

BaseItemTableAOB:
db 8B C8 48 8B 42 E8

unregistersymbol(ItemEditDataAOB)
unregistersymbol(BaseItemTableAOB)
unregistersymbol(ItemEditData)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2735</ID>
              <Description>"Show Editor"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
LuaCall(EditorShow())
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
LuaCall(EditorHide())
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"WeaponPointer"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

// gamedll_x64_rwdi.dll+808244 - 48 8B 44 08 08 - mov rax,[rax+rcx+08]

alloc( WeaponHook, 128, gamedll_x64_rwdi.dll )
label( WeaponPointer )
registersymbol( WeaponPointer )
label( back )

WeaponHook+64:
WeaponPointer:
dq 0

WeaponHook:
mov rax,[rax+rcx+08]
mov [WeaponPointer],rax
jmp back

gamedll_x64_rwdi.dll+808244:
jmp WeaponHook
back:

[DISABLE]

gamedll_x64_rwdi.dll+808244:
mov rax,[rax+rcx+08]

unregistersymbol( WeaponPointer )
dealloc( WeaponHook )
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>3</ID>
              <Description>"CodeName"</Description>
              <VariableType>String</VariableType>
              <Length>100</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>WeaponPointer</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>18</Offset>
                <Offset>60</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>31</ID>
              <Description>"WeaponType"</Description>
              <VariableType>String</VariableType>
              <Length>100</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>WeaponPointer</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>0</Offset>
                <Offset>F0</Offset>
                <Offset>60</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>32</ID>
              <Description>"ModifiedName"</Description>
              <VariableType>String</VariableType>
              <Length>100</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>WeaponPointer</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>190</Offset>
                <Offset>70</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Concatenated"</Description>
              <VariableType>String</VariableType>
              <Length>100</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>gamedll_x64_rwdi.dll+19CA3A8</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2</ID>
              <Description>"Durability"</Description>
              <VariableType>Float</VariableType>
              <Address>WeaponPointer</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"MaxDurabilityBase"</Description>
              <VariableType>Float</VariableType>
              <Address>WeaponPointer</Address>
              <Offsets>
                <Offset>258</Offset>
                <Offset>60</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2723</ID>
      <Description>"other"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2666</ID>
          <Description>"Weapons In Save Zone"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

 aobscanmodule(wisz_aob1,gamedll_x64_rwdi.dll,48 85 D2 74 03 48 89 3A FF 83 68 09 00 00)
 registersymbol(wisz_aob1)

 wisz_aob1+8:
 db 90 90 90 90 90 90

 [Disable]

 wisz_aob1+8:
 db FF 83 68 09 00 00
 unregistersymbol(wisz_aob1)

 {
 // ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AE1784

 "gamedll_x64_rwdi.dll"+AE1754: 48 8B 8B 60 09 00 00  -  mov rcx,[rbx+00000960]
 "gamedll_x64_rwdi.dll"+AE175B: C1 E2 03              -  shl edx,03
 "gamedll_x64_rwdi.dll"+AE175E: FF 15 AC DC 83 00     -  call qword ptr [gamedll_x64_rwdi.dll+131F410]
 "gamedll_x64_rwdi.dll"+AE1764: 48 89 83 60 09 00 00  -  mov [rbx+00000960],rax
 "gamedll_x64_rwdi.dll"+AE176B: 8B 8B 68 09 00 00     -  mov ecx,[rbx+00000968]
 "gamedll_x64_rwdi.dll"+AE1771: 48 8B 83 60 09 00 00  -  mov rax,[rbx+00000960]
 "gamedll_x64_rwdi.dll"+AE1778: 48 8D 14 C8           -  lea rdx,[rax+rcx*8]
 "gamedll_x64_rwdi.dll"+AE177C: 48 85 D2              -  test rdx,rdx
 "gamedll_x64_rwdi.dll"+AE177F: 74 03                 -  je gamedll_x64_rwdi.dll+AE1784
 "gamedll_x64_rwdi.dll"+AE1781: 48 89 3A              -  mov [rdx],rdi
 // ---------- INJECTING HERE ----------
 "gamedll_x64_rwdi.dll"+AE1784: FF 83 68 09 00 00     -  inc [rbx+00000968]
 // ---------- DONE INJECTING  ----------
 "gamedll_x64_rwdi.dll"+AE178A: 48 8B CB              -  mov rcx,rbx
 "gamedll_x64_rwdi.dll"+AE178D: E8 1E 2B FF FF        -  call gamedll_x64_rwdi.dll+AD42B0
 "gamedll_x64_rwdi.dll"+AE1792: 40 32 C6              -  xor al,sil
 "gamedll_x64_rwdi.dll"+AE1795: 48 8B 74 24 40        -  mov rsi,[rsp+40]
 "gamedll_x64_rwdi.dll"+AE179A: 74 26                 -  je gamedll_x64_rwdi.dll+AE17C2
 "gamedll_x64_rwdi.dll"+AE179C: 48 8B CB              -  mov rcx,rbx
 "gamedll_x64_rwdi.dll"+AE179F: E8 0C 2B FF FF        -  call gamedll_x64_rwdi.dll+AD42B0
 "gamedll_x64_rwdi.dll"+AE17A4: 84 C0                 -  test al,al
 "gamedll_x64_rwdi.dll"+AE17A6: 74 1A                 -  je gamedll_x64_rwdi.dll+AE17C2
 "gamedll_x64_rwdi.dll"+AE17A8: 48 8B CB              -  mov rcx,rbx
 }
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2044</ID>
          <Description>"Easy Lock Picking "</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

alloc(elp_1,32,gamedll_x64_rwdi.dll)
aobscanmodule(elp_aob1,gamedll_x64_rwdi.dll,F3 0F 10 56 50 F3 0F 10 4E 54)
registersymbol(elp_aob1)
label(returnhere_elp_1)

//--------------------------------------------------//
elp_1:
movss xmm1,[rsi+54]
mov [rsi+54],(float)999999
jmp returnhere_elp_1
//--------------------------------------------------//

elp_aob1+5:
jmp elp_1
returnhere_elp_1:

[Disable]

elp_aob1+5:
db F3 0F 10 4E 54
unregistersymbol(elp_aob1)
dealloc(elp_1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1095</ID>
          <Description>"Instant "Hold" Actions"</Description>
          <LastState/>
          <Color>FF8000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

alloc(iha_1,32,gamedll_x64_rwdi.dll)
aobscanmodule(iha_aob1,gamedll_x64_rwdi.dll,0F 28 F7 F3 0F 11 B3 FC 01 00 00)
registersymbol(iha_aob1)
label(returnhere_iha_1)

//--------------------------------------------------//
iha_1:
mov [rbx+000001FC],(float)1
jmp returnhere_iha_1
//--------------------------------------------------//

iha_aob1+3:
jmp iha_1
nop
nop
nop
returnhere_iha_1:

[Disable]

iha_aob1+3:
db F3 0F 11 B3 FC 01 00 00
unregistersymbol(iha_aob1)
dealloc(iha_1)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1108</ID>
      <Description>"Ranking / LVL"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2634</ID>
          <Description>"Instant LVL Agility/Power/Legend/Driver"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(XP,gamedll_x64_rwdi.dll,39 44 3A 08 76 1A)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AB259B)

label(code)
label(return)

newmem:

code:
  //cmp [rdx+rdi+08],eax
  jna gamedll_x64_rwdi.ShutdownGameScriptDLL+AAFAAB
  jmp return

XP:
  jmp code
  nop
return:
registersymbol(XP)

[DISABLE]

XP:
  db 39 44 3A 08 76 1A

unregistersymbol(XP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+AB259B

"gamedll_x64_rwdi.dll"+AB257A: 48 8B 0C 07           -  mov rcx,[rdi+rax]
"gamedll_x64_rwdi.dll"+AB257E: 48 85 C9              -  test rcx,rcx
"gamedll_x64_rwdi.dll"+AB2581: 74 38                 -  je gamedll_x64_rwdi.dll+AB25BB
"gamedll_x64_rwdi.dll"+AB2583: 4C 8B 09              -  mov r9,[rcx]
"gamedll_x64_rwdi.dll"+AB2586: 48 8B D0              -  mov rdx,rax
"gamedll_x64_rwdi.dll"+AB2589: 0F B7 44 38 16        -  movzx eax,word ptr [rax+rdi+16]
"gamedll_x64_rwdi.dll"+AB258E: FF C8                 -  dec eax
"gamedll_x64_rwdi.dll"+AB2590: 48 98                 -  cdqe 
"gamedll_x64_rwdi.dll"+AB2592: 48 8D 0C 80           -  lea rcx,[rax+rax*4]
"gamedll_x64_rwdi.dll"+AB2596: 41 8B 44 C9 18        -  mov eax,[r9+rcx*8+18]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+AB259B: 39 44 3A 08           -  cmp [rdx+rdi+08],eax
"gamedll_x64_rwdi.dll"+AB259F: 76 1A                 -  jna gamedll_x64_rwdi.dll+AB25BB
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+AB25A1: 0F B7 44 3A 16        -  movzx eax,word ptr [rdx+rdi+16]
"gamedll_x64_rwdi.dll"+AB25A6: 4C 8B C2              -  mov r8,rdx
"gamedll_x64_rwdi.dll"+AB25A9: FF C8                 -  dec eax
"gamedll_x64_rwdi.dll"+AB25AB: 48 98                 -  cdqe 
"gamedll_x64_rwdi.dll"+AB25AD: 48 8D 14 80           -  lea rdx,[rax+rax*4]
"gamedll_x64_rwdi.dll"+AB25B1: 41 8B 44 D1 18        -  mov eax,[r9+rdx*8+18]
"gamedll_x64_rwdi.dll"+AB25B6: 41 89 44 38 08        -  mov [r8+rdi+08],eax
"gamedll_x64_rwdi.dll"+AB25BB: 8B D6                 -  mov edx,esi
"gamedll_x64_rwdi.dll"+AB25BD: 48 8B CB              -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+AB25C0: E8 8B E9 08 00        -  call gamedll_x64_rwdi.dll+B40F50
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2704</ID>
          <Description>"Survivor Rank XP Points (Set To 2000000 For Max)"</Description>
          <LastState Value="2000000" RealAddress="6CCA9C68"/>
          <VariableType>4 Bytes</VariableType>
          <Address>"gamedll_x64_rwdi.dll"+01C214D8</Address>
          <Offsets>
            <Offset>68</Offset>
            <Offset>40</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>2128</ID>
          <Description>"Experience Multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(em_injected,256,gamedll_x64_rwdi.dll)

// Agility + Power
aobscanmodule(em_aob1,gamedll_x64_rwdi.dll,01 74 28 08 48 8B 43 40)
registersymbol(em_aob1)
label(em_1)
label(returnhere_em_1)

// Survivor: Merchant Rank
aobscanmodule(em_aob2,gamedll_x64_rwdi.dll,41 3B C1 41 0F 4C C1 89 43 24 E8)
registersymbol(em_aob2)
label(em_2)
label(returnhere_em_2)

label(em_multiplier1)
registersymbol(em_multiplier1)

label(em_multiplier2)
registersymbol(em_multiplier2)

//--------------------------------------------------//
em_injected:
em_1:
imul esi,[em_multiplier1]
add [rax+rbp+08],esi
mov rax,[rbx+40]
jmp returnhere_em_1
//--------------------------------------------------//
em_2:
cmovl eax,r9d
imul eax,[em_multiplier2]
mov [rbx+24],eax
jmp returnhere_em_2
//--------------------------------------------------//
em_multiplier1:
dd 1
em_multiplier2:
dd 1
//--------------------------------------------------//

em_aob1:
jmp em_1
nop
nop
nop
returnhere_em_1:
//--------------------------------------------------//
em_aob2+3:
jmp em_2
nop
nop
returnhere_em_2:

[DISABLE]
//--------------------------------------------------//
em_aob1:
add [rax+rbp+08],esi
mov rax,[rbx+40]
//--------------------------------------------------//
unregistersymbol(em_aob1)
//--------------------------------------------------//

//--------------------------------------------------//
em_aob2+3:
cmovl eax,r9d
mov [rbx+24],eax
//--------------------------------------------------//
unregistersymbol(em_aob2)
//--------------------------------------------------//

unregistersymbol(em_multiplier1)
unregistersymbol(em_multiplier2)
dealloc(em_injected)

{
// em_aob1
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+9E69DC

"gamedll_x64_rwdi.dll"+9E69BE: 48 8B 48 58           -  mov rcx,[rax+58]
"gamedll_x64_rwdi.dll"+9E69C2: 48 85 C9              -  test rcx,rcx
"gamedll_x64_rwdi.dll"+9E69C5: 74 11                 -  je gamedll_x64_rwdi.dll+9E69D8
"gamedll_x64_rwdi.dll"+9E69C7: 48 8B 01              -  mov rax,[rcx]
"gamedll_x64_rwdi.dll"+9E69CA: FF 90 40 07 00 00     -  call qword ptr [rax+00000740]
"gamedll_x64_rwdi.dll"+9E69D0: 84 C0                 -  test al,al
"gamedll_x64_rwdi.dll"+9E69D2: 74 04                 -  je gamedll_x64_rwdi.dll+9E69D8
"gamedll_x64_rwdi.dll"+9E69D4: 85 FF                 -  test edi,edi
"gamedll_x64_rwdi.dll"+9E69D6: 75 59                 -  jne gamedll_x64_rwdi.dll+9E6A31
"gamedll_x64_rwdi.dll"+9E69D8: 48 8B 43 40           -  mov rax,[rbx+40]
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+9E69DC: 01 74 28 08           -  add [rax+rbp+08],esi
"gamedll_x64_rwdi.dll"+9E69E0: 48 8B 43 40           -  mov rax,[rbx+40]
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+9E69E4: 48 8B 0C 28           -  mov rcx,[rax+rbp]
"gamedll_x64_rwdi.dll"+9E69E8: 48 85 C9              -  test rcx,rcx
"gamedll_x64_rwdi.dll"+9E69EB: 74 3A                 -  je gamedll_x64_rwdi.dll+9E6A27
"gamedll_x64_rwdi.dll"+9E69ED: 4C 8B 09              -  mov r9,[rcx]
"gamedll_x64_rwdi.dll"+9E69F0: 48 8B D0              -  mov rdx,rax
"gamedll_x64_rwdi.dll"+9E69F3: 0F B7 44 28 16        -  movzx eax,word ptr [rax+rbp+16]
"gamedll_x64_rwdi.dll"+9E69F8: FF C8                 -  dec eax
"gamedll_x64_rwdi.dll"+9E69FA: 48 63 C8              -  movsxd  rcx,eax
"gamedll_x64_rwdi.dll"+9E69FD: 48 C1 E1 05           -  shl rcx,05
"gamedll_x64_rwdi.dll"+9E6A01: 42 8B 44 09 18        -  mov eax,[rcx+r9+18]
}
{
// em_aob2
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+D3EEA

"gamedll_x64_rwdi.dll"+D3ECB: 8B 4A 0C              -  mov ecx,[rdx+0C]
"gamedll_x64_rwdi.dll"+D3ECE: EB 03                 -  jmp gamedll_x64_rwdi.dll+D3ED3
"gamedll_x64_rwdi.dll"+D3ED0: 41 8B C9              -  mov ecx,r9d
"gamedll_x64_rwdi.dll"+D3ED3: 44 3B C1              -  cmp r8d,ecx
"gamedll_x64_rwdi.dll"+D3ED6: 41 8B C0              -  mov eax,r8d
"gamedll_x64_rwdi.dll"+D3ED9: BA 01 00 00 00        -  mov edx,00000001
"gamedll_x64_rwdi.dll"+D3EDE: 0F 47 C1              -  cmova eax,ecx
"gamedll_x64_rwdi.dll"+D3EE1: 48 8B CB              -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+D3EE4: 89 43 24              -  mov [rbx+24],eax
"gamedll_x64_rwdi.dll"+D3EE7: 41 3B C1              -  cmp eax,r9d
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+D3EEA: 41 0F 4C C1           -  cmovl eax,r9d
"gamedll_x64_rwdi.dll"+D3EEE: 89 43 24              -  mov [rbx+24],eax
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+D3EF1: E8 CA DE FF FF        -  call gamedll_x64_rwdi.dll+D1DC0
"gamedll_x64_rwdi.dll"+D3EF6: 8B 7B 24              -  mov edi,[rbx+24]
"gamedll_x64_rwdi.dll"+D3EF9: 2B FE                 -  sub edi,esi
"gamedll_x64_rwdi.dll"+D3EFB: 48 8B 74 24 40        -  mov rsi,[rsp+40]
"gamedll_x64_rwdi.dll"+D3F00: 0F 84 7F 01 00 00     -  je gamedll_x64_rwdi.dll+D4085
"gamedll_x64_rwdi.dll"+D3F06: 40 84 ED              -  test bpl,bpl
"gamedll_x64_rwdi.dll"+D3F09: 0F 84 76 01 00 00     -  je gamedll_x64_rwdi.dll+D4085
"gamedll_x64_rwdi.dll"+D3F0F: 48 8B 1D 02 EB 8B 01  -  mov rbx,[gamedll_x64_rwdi.dll+1992A18]
"gamedll_x64_rwdi.dll"+D3F16: 48 85 DB              -  test rbx,rbx
"gamedll_x64_rwdi.dll"+D3F19: 0F 84 C7 00 00 00     -  je gamedll_x64_rwdi.dll+D3FE6
}

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2129</ID>
              <Description>"Agility + Power Multiplier"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>em_multiplier1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>2130</ID>
              <Description>"Survivor Rank Multiplier"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>em_multiplier2</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1106</ID>
          <Description>"Level Faster"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

alloc(lf_1,32,gamedll_x64_rwdi.dll) //Level Faster (Agility + Power)
aobscanmodule(lf_aob1,gamedll_x64_rwdi.dll,01 74 28 08 48 8B 43 40)
registersymbol(lf_aob1)
label(returnhere_lf_1)

alloc(lf_2,32,gamedll_x64_rwdi.dll) //Level Faster (Survivor: Merchant Rank)
aobscanmodule(lf_aob2,gamedll_x64_rwdi.dll,41 3B C1 41 0F 4C C1 89 43 24 E8)
registersymbol(lf_aob2)
label(returnhere_lf_2)

//--------------------------------------------------//
lf_1:
shl esi,A
add [rax+rbp+08],esi
mov rax,[rbx+40]
jmp returnhere_lf_1
//--------------------------------------------------//
lf_2:
cmovl eax,r9d
add [rbx+24],186A0
jmp returnhere_lf_2
//--------------------------------------------------//

lf_aob1:
jmp lf_1
nop
nop
nop
returnhere_lf_1:

lf_aob2+3:
jmp lf_2
nop
nop
returnhere_lf_2:

[Disable]

lf_aob1:
db 01 74 28 08 48 8B 43 40
unregistersymbol(lf_aob1)
dealloc(lf_1)

lf_aob2+3:
db 41 0F 4C C1 89 43 24
unregistersymbol(lf_aob2)
dealloc(lf_2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1107</ID>
          <Description>"Max Out"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

alloc(mo_1,32,gamedll_x64_rwdi.dll) //Max Out (Agility + Power)
aobscanmodule(mo_aob1,gamedll_x64_rwdi.dll,01 74 28 08 48 8B 43 40)
registersymbol(mo_aob1)
label(returnhere_mo_1)

alloc(mo_2,32,gamedll_x64_rwdi.dll) //Max Out (Survivor)
aobscanmodule(mo_aob2,gamedll_x64_rwdi.dll,41 3B C1 41 0F 4C C1 89 43 24 E8)
registersymbol(mo_aob2)
label(returnhere_mo_2)

//--------------------------------------------------//
mo_1:
mov [rax+rbp+08],1E8480
mov rax,[rbx+40]
jmp returnhere_mo_1
//--------------------------------------------------//
mo_2:
cmovl eax,r9d
mov [rbx+24],1E8480
jmp returnhere_mo_2
//--------------------------------------------------//

mo_aob1:
jmp mo_1
nop
nop
nop
returnhere_mo_1:

mo_aob2+3:
jmp mo_2
nop
nop
returnhere_mo_2:

[Disable]

mo_aob1:
db 01 74 28 08 48 8B 43 40
unregistersymbol(mo_aob1)
dealloc(mo_1)

mo_aob2+3:
db 41 0F 4C C1 89 43 24
unregistersymbol(mo_aob2)
dealloc(mo_2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1109</ID>
          <Description>"Reset Levels"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

alloc(rl_1,32,gamedll_x64_rwdi.dll) //Reset Levels (Agility + Power)
aobscanmodule(rl_aob1,gamedll_x64_rwdi.dll,01 74 28 08 48 8B 43 40)
registersymbol(rl_aob1)
label(returnhere_rl_1)

alloc(rl_2,32,gamedll_x64_rwdi.dll) //Reset Levels (Survivor)
aobscanmodule(rl_aob2,gamedll_x64_rwdi.dll,41 3B C1 41 0F 4C C1 89 43 24 E8)
registersymbol(rl_aob2)
label(returnhere_rl_2)

//--------------------------------------------------//
rl_1:
mov [rax+rbp+08],0
mov rax,[rbx+40]
jmp returnhere_rl_1
//--------------------------------------------------//
rl_2:
cmovl eax,r9d
mov [rbx+24],0
jmp returnhere_rl_2
//--------------------------------------------------//

rl_aob1:
jmp rl_1
nop
nop
nop
returnhere_rl_1:

rl_aob2+3:
jmp rl_2
nop
nop
returnhere_rl_2:

[Disable]

rl_aob1:
db 01 74 28 08 48 8B 43 40
unregistersymbol(rl_aob1)
dealloc(rl_1)

rl_aob2+3:
db 41 0F 4C C1 89 43 24
unregistersymbol(rl_aob2)
dealloc(rl_2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2363</ID>
          <Description>"Agility Level"</Description>
          <Color>008000</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>gamedll_x64_rwdi.dll+1992A18</Address>
          <Offsets>
            <Offset>34</Offset>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>2166</ID>
              <Description>"Agility Exp"</Description>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>gamedll_x64_rwdi.dll+1992A18</Address>
              <Offsets>
                <Offset>28</Offset>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2364</ID>
              <Description>"Power Level"</Description>
              <Color>008000</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>gamedll_x64_rwdi.dll+1992A18</Address>
              <Offsets>
                <Offset>54</Offset>
                <Offset>40</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>2167</ID>
                  <Description>"Power Exp"</Description>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>gamedll_x64_rwdi.dll+1992A18</Address>
                  <Offsets>
                    <Offset>48</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>2168</ID>
                  <Description>"Survivor Rank Level"</Description>
                  <Color>008000</Color>
                  <VariableType>2 Bytes</VariableType>
                  <Address>gamedll_x64_rwdi.dll+1992A18</Address>
                  <Offsets>
                    <Offset>74</Offset>
                    <Offset>40</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2127</ID>
                      <Description>"Survivor Rank Exp"</Description>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>gamedll_x64_rwdi.dll+1992A18</Address>
                      <Offsets>
                        <Offset>68</Offset>
                        <Offset>40</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>2724</ID>
      <Description>"time / fov / tp / hunter"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2732</ID>
          <Description>"time"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>10</ID>
              <Description>"Time of Day"</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1"/>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : DyingLightGame.exe
  Version: 
  Date   : 2016-03-02
  Author : Akuma

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Time_of_Day_ret,gamedll_x64_rwdi.dll,F3 0F 5C C8 F3 0F 11 8D 8C 00 00 00) // should be unique
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+38EAE2)

label(code)
label(return)

alloc(TOD,8)
registersymbol(TOD)

TOD:
dd (float)18

TOD+4:
dd (float)24

newmem:

code:
  movss xmm15,[TOD]
  movss xmm14,[TOD+4]
  divss xmm15,xmm14



  subss xmm1,xmm0
    movss [rbp+000000a4],xmm15
  movss [rbp+0000008C],xmm1
  jmp return

Time_of_Day_ret:
  jmp code
  nop
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(Time_of_Day_ret)

[DISABLE]

Time_of_Day_ret:
  db F3 0F 5C C8 F3 0F 11 8D 8C 00 00 00

unregistersymbol(Time_of_Day_ret)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+38EAE2

"gamedll_x64_rwdi.dll"+38EAB2: E8 69 3B 00 00           -  call gamedll_x64_rwdi.dll+392620
"gamedll_x64_rwdi.dll"+38EAB7: 8B 85 A0 00 00 00        -  mov eax,[rbp+000000A0]
"gamedll_x64_rwdi.dll"+38EABD: 8B 9D 90 00 00 00        -  mov ebx,[rbp+00000090]
"gamedll_x64_rwdi.dll"+38EAC3: F3 0F 10 8D A4 00 00 00  -  movss xmm1,[rbp+000000A4]
"gamedll_x64_rwdi.dll"+38EACB: 89 85 88 00 00 00        -  mov [rbp+00000088],eax
"gamedll_x64_rwdi.dll"+38EAD1: 48 8B D6                 -  mov rdx,rsi
"gamedll_x64_rwdi.dll"+38EAD4: 48 8B CD                 -  mov rcx,rbp
"gamedll_x64_rwdi.dll"+38EAD7: F3 0F 2C C1              -  cvttss2si eax,xmm1
"gamedll_x64_rwdi.dll"+38EADB: 66 0F 6E C0              -  movd xmm0,eax
"gamedll_x64_rwdi.dll"+38EADF: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+38EAE2: F3 0F 5C C8              -  subss xmm1,xmm0
"gamedll_x64_rwdi.dll"+38EAE6: F3 0F 11 8D 8C 00 00 00  -  movss [rbp+0000008C],xmm1
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+38EAEE: E8 DD 02 00 00           -  call gamedll_x64_rwdi.dll+38EDD0
"gamedll_x64_rwdi.dll"+38EAF3: 48 8D 4E 10              -  lea rcx,[rsi+10]
"gamedll_x64_rwdi.dll"+38EAF7: FF 15 13 4E F9 00        -  call qword ptr [gamedll_x64_rwdi.dll+1323910]
"gamedll_x64_rwdi.dll"+38EAFD: F3 0F 10 0D CB D0 03 01  -  movss xmm1,[gamedll_x64_rwdi.dll+13CBBD0]
"gamedll_x64_rwdi.dll"+38EB05: 0F 2E 4D 08              -  ucomiss xmm1,[rbp+08]
"gamedll_x64_rwdi.dll"+38EB09: 0F 28 F8                 -  movaps xmm7,xmm0
"gamedll_x64_rwdi.dll"+38EB0C: 75 09                    -  jne gamedll_x64_rwdi.dll+38EB17
"gamedll_x64_rwdi.dll"+38EB0E: 8B 85 8C 00 00 00        -  mov eax,[rbp+0000008C]
"gamedll_x64_rwdi.dll"+38EB14: 89 45 08                 -  mov [rbp+08],eax
"gamedll_x64_rwdi.dll"+38EB17: 0F 57 F6                 -  xorps xmm6,xmm6
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>11</ID>
                  <Description>"Time of Day 24 Hour"</Description>
                  <Color>688943</Color>
                  <VariableType>Float</VariableType>
                  <Address>TOD</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>2104</ID>
              <Description>"Time Of Day"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[Enable]

alloc(tod,1024,gamedll_x64_rwdi.dll) //Control Time Of Day
label(tod_day) //Day
label(tod_day_status)
registersymbol(tod_day_status)
label(tod_dawn) //Dawn
label(tod_dawn_status)
registersymbol(tod_dawn_status)
label(tod_night) //Night
label(tod_night_status)
registersymbol(tod_night_status)
label(tod_orig) //Resume Clock
aobscanmodule(tod_aob1,gamedll_x64_rwdi.dll,F3 0F 58 BB A8 00 00 00 F3 0F 11 BB A8 00 00 00)
registersymbol(tod_aob1)
label(returnhere_tod)

//-------------------------------------------------------//
tod:
cmp [tod_day_status],1
je tod_day
cmp [tod_dawn_status],1
je tod_dawn
cmp [tod_night_status],1
je tod_night
jmp tod_orig

tod_day:
mov [rbx+000000A8],(float)0.5
jmp returnhere_tod

tod_dawn:
mov [rbx+000000A8],(float)0.8
jmp returnhere_tod

tod_night:
mov [rbx+000000A8],(float)0.9
jmp returnhere_tod

tod_orig:
movss [rbx+000000A8],xmm7
jmp returnhere_tod

tod_day_status:
dd 0

tod_dawn_status:
dd 0

tod_night_status:
dd 0
//-------------------------------------------------------//

tod_aob1+8:
jmp tod
nop
nop
nop
returnhere_tod:

[Disable]

tod_aob1+8:
db F3 0F 11 BB A8 00 00 00
unregistersymbol(tod_aob1)
unregistersymbol(tod_day_status)
unregistersymbol(tod_dawn_status)
unregistersymbol(tod_night_status)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>2105</ID>
                  <Description>"Day"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[Enable]

tod_day_status:
dd 1

tod_dawn_status:
dd 0

tod_night_status:
dd 0

[Disable]

tod_day_status:
dd 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>2106</ID>
                  <Description>"Dawn"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[Enable]

tod_day_status:
dd 0

tod_dawn_status:
dd 1

tod_night_status:
dd 0

[Disable]

tod_dawn_status:
dd 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>2107</ID>
                  <Description>"Night"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[Enable]

tod_day_status:
dd 0

tod_dawn_status:
dd 0

tod_night_status:
dd 1

[Disable]

tod_night_status:
dd 0
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>2384</ID>
              <Description>"Challenges / Time Freeze Options "</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>2607</ID>
                  <Description>"Challenge / The Following Time Freeze"</Description>
                  <LastState/>
                  <Color>000000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,F3 0F 11 83 F0 00 00 00 48 85)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+AD7D1D)

label(code)
label(return)

newmem:

code:
  nop//movss [rbx+000000F0],xmm0
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 83 F0 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>2294</ID>
                  <Description>"Bozak Horde  / Gaining Cradence Time Freeze"</Description>
                  <LastState/>
                  <Color>000000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(BozakHorde,gamedll_x64_rwdi.dll,F3 0F 11 40 D8 80)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+3A640B)

label(code)
label(return)

newmem:

code:
  nop//movss [rax-28],xmm0
  jmp return

BozakHorde:
  jmp code
return:
registersymbol(BozakHorde)

[DISABLE]

BozakHorde:
  db F3 0F 11 40 D8

unregistersymbol(BozakHorde)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>2659</ID>
                  <Description>"Challenge CheckPoint Instantly Collect (may have reverse effect on some challenges)"</Description>
                  <LastState/>
                  <Color>000000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(CheckPoint,gamedll_x64_rwdi.dll,39 43 14 72 1F)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BCB7DE)

label(code)
label(return)

newmem:

code:
  //cmp [rbx+14],eax
  jb gamedll_x64_rwdi.ShutdownGameScriptDLL+BC8CF2
  jmp return

CheckPoint:
  jmp code
return:
registersymbol(CheckPoint)

[DISABLE]

CheckPoint:
  db 39 43 14 72 1F

unregistersymbol(CheckPoint)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x64_rwdi.dll"+BCB7DE

"gamedll_x64_rwdi.dll"+BCB7B4: 45 33 C0                 -  xor r8d,r8d
"gamedll_x64_rwdi.dll"+BCB7B7: 89 44 24 40              -  mov [rsp+40],eax
"gamedll_x64_rwdi.dll"+BCB7BB: F3 0F 11 5C 24 38        -  movss [rsp+38],xmm3
"gamedll_x64_rwdi.dll"+BCB7C1: 89 44 24 30              -  mov [rsp+30],eax
"gamedll_x64_rwdi.dll"+BCB7C5: F3 0F 11 44 24 28        -  movss [rsp+28],xmm0
"gamedll_x64_rwdi.dll"+BCB7CB: F3 0F 11 44 24 20        -  movss [rsp+20],xmm0
"gamedll_x64_rwdi.dll"+BCB7D1: FF 15 01 44 75 00        -  call qword ptr [gamedll_x64_rwdi.dll+131FBD8]
"gamedll_x64_rwdi.dll"+BCB7D7: 8B 43 10                 -  mov eax,[rbx+10]
"gamedll_x64_rwdi.dll"+BCB7DA: 85 C0                    -  test eax,eax
"gamedll_x64_rwdi.dll"+BCB7DC: 74 24                    -  je gamedll_x64_rwdi.dll+BCB802
// ---------- INJECTING HERE ----------
"gamedll_x64_rwdi.dll"+BCB7DE: 39 43 14                 -  cmp [rbx+14],eax
"gamedll_x64_rwdi.dll"+BCB7E1: 72 1F                    -  jb gamedll_x64_rwdi.dll+BCB802
// ---------- DONE INJECTING  ----------
"gamedll_x64_rwdi.dll"+BCB7E3: 48 8B 03                 -  mov rax,[rbx]
"gamedll_x64_rwdi.dll"+BCB7E6: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+BCB7E9: FF 90 C8 00 00 00        -  call qword ptr [rax+000000C8]
"gamedll_x64_rwdi.dll"+BCB7EF: 48 8B CB                 -  mov rcx,rbx
"gamedll_x64_rwdi.dll"+BCB7F2: C6 43 51 01              -  mov byte ptr [rbx+51],01
"gamedll_x64_rwdi.dll"+BCB7F6: 89 43 64                 -  mov [rbx+64],eax
"gamedll_x64_rwdi.dll"+BCB7F9: 48 8B 03                 -  mov rax,[rbx]
"gamedll_x64_rwdi.dll"+BCB7FC: FF 90 B8 01 00 00        -  call qword ptr [rax+000001B8]
"gamedll_x64_rwdi.dll"+BCB802: 48 8B 4B 08              -  mov rcx,[rbx+08]
"gamedll_x64_rwdi.dll"+BCB806: 48 8B D3                 -  mov rdx,rbx
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2028</ID>
          <Description>"Set FOV"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[Enable]

alloc(setFOV_1,32,gamedll_x64_rwdi.dll)
aobscanmodule(setFOV_aob1,gamedll_x64_rwdi.dll,44 0F 28 D8 FF 50 20 48 8B 4F 50 F3 0F 11 87 B8 00 00 00)
registersymbol(setFOV_aob1)
label(FOV)
registersymbol(FOV)
label(returnhere_setFOV_1)

//--------------------------------------------------//
setFOV_1:
fld [FOV]
fstp [rdi+B8]
jmp returnhere_setFOV_1

FOV:
dd 42280000
//--------------------------------------------------//

setFOV_aob1+B:
jmp setFOV_1
nop
nop
nop
returnhere_setFOV_1:

[Disable]

setFOV_aob1+B:
db F3 0F 11 87 B8 00 00 00
unregistersymbol(setFOV_aob1)
unregistersymbol(FOV)
dealloc(setFOV_1)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2029</ID>
              <Description>"FOV Value (Default Range: 42 - 72)"</Description>
              <VariableType>Float</VariableType>
              <Address>FOV</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2726</ID>
          <Description>"TP"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>2385</ID>
              <Description>"Waypoint Location Grabber"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0000</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>2183</ID>
                  <Description>"Waypoint X"</Description>
                  <VariableType>Float</VariableType>
                  <Address>gamedll_x64_rwdi.dll+1993260</Address>
                  <Offsets>
                    <Offset>850</Offset>
                    <Offset>9C0</Offset>
                    <Offset>48</Offset>
                    <Offset>4A0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>2184</ID>
                  <Description>"Waypoint Y"</Description>
                  <VariableType>Float</VariableType>
                  <Address>gamedll_x64_rwdi.dll+1993260</Address>
                  <Offsets>
                    <Offset>854</Offset>
                    <Offset>9C0</Offset>
                    <Offset>48</Offset>
                    <Offset>4A0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>2185</ID>
                  <Description>"Waypoint Z"</Description>
                  <VariableType>Float</VariableType>
                  <Address>gamedll_x64_rwdi.dll+1993260</Address>
                  <Offsets>
                    <Offset>858</Offset>
                    <Offset>9C0</Offset>
                    <Offset>48</Offset>
                    <Offset>4A0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>2727</ID>
              <Description>"Player Location Grabber"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(aobPlayerLocationGrabber,engine_x64_rwdi.dll,40 53 48 83 EC 40 4C 8B 49 ?? 0F 29 74 24 ?? 48 8B D9)

alloc(newmem,2048,"engine_x64_rwdi.dll"+383ED0)

label(aobPlayerLocationGrabber_r)
registersymbol(aobPlayerLocationGrabber_r)

label(lblPlayerLocationGrabber)
label(lblPlayerLocationGrabberSkip)
label(lblPlayerLocationGrabberRet)

label(pPlayerLocation)
registersymbol(pPlayerLocation)

newmem:

lblPlayerLocationGrabber:
test rcx,rcx
jz short lblPlayerLocationGrabberSkip
cmp dword ptr [rcx+114],64
jne short lblPlayerLocationGrabberSkip
mov qword ptr [pPlayerLocation],rcx
lblPlayerLocationGrabberSkip:
//push rbx
//sub rsp,40
db 40 53 48 83 EC 40
jmp lblPlayerLocationGrabberRet
pPlayerLocation:
dq 0

//"engine_x64_rwdi.dll"+383ED0:
aobPlayerLocationGrabber:
aobPlayerLocationGrabber_r:
jmp lblPlayerLocationGrabber
nop
lblPlayerLocationGrabberRet:

[DISABLE]
aobPlayerLocationGrabber_r:
//"engine_x64_rwdi.dll"+383ED0:
//Alt: push rbx
//Alt: sub rsp,40
db 40 53 48 83 EC 40

unregistersymbol(aobPlayerLocationGrabber_r)

unregistersymbol(pPlayerLocation)

dealloc(newmem)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>2728</ID>
                  <Description>"pPlayerLocation"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>0000FF</Color>
                  <VariableType>8 Bytes</VariableType>
                  <Address>pPlayerLocation</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2729</ID>
                      <Description>"pPlayerLocation-&gt;x"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>pPlayerLocation</Address>
                      <Offsets>
                        <Offset>BC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2730</ID>
                      <Description>"pPlayerLocation-&gt;z"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>pPlayerLocation</Address>
                      <Offsets>
                        <Offset>C0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2731</ID>
                      <Description>"pPlayerLocation-&gt;y"</Description>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>pPlayerLocation</Address>
                      <Offsets>
                        <Offset>C4</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>2139</ID>
              <Description>"Teleport Location"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(aobLocationUpdater,engine_x64_rwdi.dll,0F 28 F1 4D 85 C9 0F 84 ?? ?? ?? ?? F3 0F 10 91 B8 00 00 00)

alloc(newmem,4096,"engine_x64_rwdi.dll"+383EE2)

label(aobLocationUpdater_r)
registersymbol(aobLocationUpdater_r)

label(lblLocationUpdater)
label(lblLocationUpdaterSkip1)
label(lblLocationUpdaterSkip2)
label(lblLocationUpdaterSkip3)
label(lblLocationUpdaterSkip4)
label(lblLocationUpdaterSkip5)
label(lblLocationUpdaterSkip)
label(lblLocationUpdaterRet)

label(cApplyPreset)

label(pLocationPresets)
registersymbol(pLocationPresets)

label(bTeleportToPreset1)
label(bTeleportToPreset2)
label(bTeleportToPreset3)
label(bTeleportToPreset4)
label(bTeleportToPreset5)
label(iTeleportPreset1)
label(iTeleportPreset2)
label(iTeleportPreset3)
label(iTeleportPreset4)
label(iTeleportPreset5)
registersymbol(bTeleportToPreset1)
registersymbol(bTeleportToPreset2)
registersymbol(bTeleportToPreset3)
registersymbol(bTeleportToPreset4)
registersymbol(bTeleportToPreset5)
registersymbol(iTeleportPreset1)
registersymbol(iTeleportPreset2)
registersymbol(iTeleportPreset3)
registersymbol(iTeleportPreset4)
registersymbol(iTeleportPreset5)

newmem:
iTeleportPreset1:
dq (int)0
iTeleportPreset2:
dq (int)4
iTeleportPreset3:
dq (int)13
iTeleportPreset4:
dq (int)5
iTeleportPreset5:
dq (int)12

pLocationPresets:
//////////////////////////////////////////////////////////////////////////////
// Enter all locations as dword float triplets: X, Z, Y (and not as X, Y, Z!)
// Remember to update preset dropdowns in address list!
/*
0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
*/
// Tower; entrance
dd (float)259.9804688
dd (float)134.3327637
dd (float)86.6372757
// Tower; elevator
dd (float)245.6986237
dd (float)137.8380737
dd (float)87.67877197
// GRE radio spot near Rais' base
dd (float)716.6741333
dd (float)140.7787018
dd (float)260.1118469
// Convenience store
dd (float)296.9414062
dd (float)127.3425217
dd (float)55.36845398
// School
dd (float)643.3206787
dd (float)133.2903442
dd (float)260.7666626
// Safe zone on hill
dd (float)112.9376602
dd (float)161.0890198
dd (float)229.6279144
// Safe zone on bridge
dd (float)-138.2489166
dd (float)140.4362946
dd (float)295.9544983
// Bridge climb, level 1
dd (float)-132.6832581
dd (float)188.0761261
dd (float)303.1186829
// Bridge climb, level 2
dd (float)-132.0743713
dd (float)212.090683
dd (float)280.2389221
// Bridge, military base
dd (float)-352.5913086
dd (float)143.6129913
dd (float)291.8622131
// Safe zone north of bridge
dd (float)-61.18738556
dd (float)98.83222198
dd (float)446.2907715
// Safe zone North
dd (float)238.2825623
dd (float)147.3724976
dd (float)645.2614136
// Tunnel North
dd (float)364.8158875
dd (float)137.8293152
dd (float)645.2962646
// Safe zone The Witch
dd (float)489.3204346
dd (float)132.3123932
dd (float)102.9339066
// NE Isle with Lavender herbs
dd (float)-172.4967957
dd (float)114.1479263
dd (float)479.0149231
// Loot cave (Destiny reference)
dd (float)13.53541851
dd (float)96.77336884
dd (float)536.3782959
// Destination (Puke'N'Nuke)
dd (float)-11.24782658
dd (float)130.7406769
dd (float)553.7602539

lblLocationUpdater:
cmp dword ptr [rcx+114],64
jne lblLocationUpdaterSkip
cmp dword ptr [bTeleportToPreset1],1
jne short lblLocationUpdaterSkip1
mov dword ptr [bTeleportToPreset1],0
push rax
mov rax,[iTeleportPreset1]
call cApplyPreset
pop rax
lblLocationUpdaterSkip1:
cmp dword ptr [bTeleportToPreset2],1
jne short lblLocationUpdaterSkip2
mov dword ptr [bTeleportToPreset2],0
push rax
mov rax,[iTeleportPreset2]
call cApplyPreset
pop rax
lblLocationUpdaterSkip2:
cmp dword ptr [bTeleportToPreset3],1
jne short lblLocationUpdaterSkip3
mov dword ptr [bTeleportToPreset3],0
push rax
mov rax,[iTeleportPreset3]
call cApplyPreset
pop rax
lblLocationUpdaterSkip3:
cmp dword ptr [bTeleportToPreset4],1
jne short lblLocationUpdaterSkip4
mov dword ptr [bTeleportToPreset4],0
push rax
mov rax,[iTeleportPreset4]
call cApplyPreset
pop rax
lblLocationUpdaterSkip4:
cmp dword ptr [bTeleportToPreset5],1
jne short lblLocationUpdaterSkip5
mov dword ptr [bTeleportToPreset5],0
push rax
mov rax,[iTeleportPreset5]
call cApplyPreset
pop rax
lblLocationUpdaterSkip5:
lblLocationUpdaterSkip:
//Alt: movaps xmm6,xmm1 // Original code
//Alt: test r9,r9       // Original code
db 0F 28 F1 4D 85 C9
jmp lblLocationUpdaterRet
cApplyPreset:
lea rax,[rax+rax*2]
push rbx                 // Workaround for lea rax,[pLocationPresets+rax*4]
mov rbx,pLocationPresets
lea rax,[rbx+rax*4]
pop rbx
/*
movss xmm0,[rax]
movss xmm1,[rax+4]
movss xmm2,[rax+8]
*/
fld dword ptr [rax]
fstp dword ptr [rcx+BC]
fld dword ptr [rax+4]
fstp dword ptr [rcx+C0]
fld dword ptr [rax+8]
fstp dword ptr [rcx+C4]
ret
bTeleportToPreset1:
dd 0
bTeleportToPreset2:
dd 0
bTeleportToPreset3:
dd 0
bTeleportToPreset4:
dd 0
bTeleportToPreset5:
dd (int)0

// "engine_x64_rwdi.dll"+383EE2:
aobLocationUpdater:
aobLocationUpdater_r:
jmp lblLocationUpdater
nop
lblLocationUpdaterRet:

[DISABLE]
aobLocationUpdater_r:
//"engine_x64_rwdi.dll"+383EE2:
//Alt: movaps xmm6,xmm1
//Alt: test r9,r9
db 0F 28 F1 4D 85 C9

unregistersymbol(aobLocationUpdater_r)

unregistersymbol(pLocationPresets)

unregistersymbol(bTeleportToPreset1)
unregistersymbol(bTeleportToPreset2)
unregistersymbol(bTeleportToPreset3)
unregistersymbol(bTeleportToPreset4)
unregistersymbol(bTeleportToPreset5)
unregistersymbol(iTeleportPreset1)
unregistersymbol(iTeleportPreset2)
unregistersymbol(iTeleportPreset3)
unregistersymbol(iTeleportPreset4)
unregistersymbol(iTeleportPreset5)

dealloc(newmem)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>2141</ID>
                  <Description>"iTeleportPreset1"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
</DropDownList>
                  <Color>FF0000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iTeleportPreset1</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2142</ID>
                      <Description>"bTeleportToPreset1"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>bTeleportToPreset1</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>18</Key>
                            <Key>49</Key>
                          </Keys>
                          <Value>1</Value>
                          <Description>Trigger teleport</Description>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>2143</ID>
                  <Description>"iTeleportPreset2"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
</DropDownList>
                  <Color>FF0000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iTeleportPreset2</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2144</ID>
                      <Description>"bTeleportToPreset2"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>bTeleportToPreset2</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>18</Key>
                            <Key>50</Key>
                          </Keys>
                          <Value>1</Value>
                          <Description>Trigger teleport</Description>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>2145</ID>
                  <Description>"iTeleportPreset3"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
</DropDownList>
                  <Color>FF0000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iTeleportPreset3</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2146</ID>
                      <Description>"bTeleportToPreset3"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>bTeleportToPreset3</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>18</Key>
                            <Key>51</Key>
                          </Keys>
                          <Value>1</Value>
                          <Description>Trigger teleport</Description>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>2147</ID>
                  <Description>"iTeleportPreset4"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
</DropDownList>
                  <Color>FF0000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iTeleportPreset4</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2148</ID>
                      <Description>"bTeleportToPreset4"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>bTeleportToPreset4</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>18</Key>
                            <Key>52</Key>
                          </Keys>
                          <Value>1</Value>
                          <Description>Trigger teleport</Description>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>2149</ID>
                  <Description>"iTeleportPreset5"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Odrs: Tower; entrance
1:Odrs: Tower; elevator
2:Odrs: GRE radio spot near Rais' base
3:Odrs: Convenience store
4:Odrs: School front
5:Odrs: Safe zone: Hilltop
6:Odrs: Safe zone: Bridge
7:Odrs: Bridge climb, level 1
8:Odrs: Bridge climb, level 2
9:Odrs: Bridge, military base
10:Odrs: Safe zone: North of Bridge
11:Odrs: Safe zone: North
12:Odrs: Tunnel North
13:Odrs: Safe zone: The Witch
14:Odrs: NE Isle with Lavender herbs
15:Odrs: Loot cave (Destiny reference)
16:Odrs: Destination (Puke'N'Nuke)
</DropDownList>
                  <Color>FF0000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iTeleportPreset5</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2150</ID>
                      <Description>"bTeleportToPreset5"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
                      <Color>008000</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>bTeleportToPreset5</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>18</Key>
                            <Key>53</Key>
                          </Keys>
                          <Value>1</Value>
                          <Description>Trigger teleport</Description>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>317</ID>
              <Description>"TELEPORT"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(_TeleportCode,engine_x64_rwdi.dll,F3 0F 58 83 C4 00 00 00 48)
aobscanmodule(_GetWaypointCoord,gamedll_x64_rwdi.dll,F3 0F 10 83 38 08 00 00 F3)
alloc(teleportmem,2048,engine_x64_rwdi.dll)
alloc(newmem,$1000,gamedll_x64_rwdi.dll)
registersymbol(z_coord)
registersymbol(x_coord)
registersymbol(y_coord)
registersymbol(z_coord_undo)
registersymbol(x_coord_undo)
registersymbol(y_coord_undo)
registersymbol(s_enable)
registersymbol(l_enable)
registersymbol(u_enable)
Registersymbol(_TeleportCode)
Registersymbol(_GetWayPointCoord_X)
Registersymbol(_GetWayPointCoord_Y)
Registersymbol(_GetWayPointCoord_Z)
registersymbol(_GetWaypointCoord)
Registersymbol(_WriteWayPointCoordsToPlayerLocation)

alloc(s_enable,4)
alloc(l_enable,4)
alloc(u_enable,4)
alloc(z_coord,4)
alloc(x_coord,4)
alloc(y_coord,4)
alloc(z_coord_undo,4)
alloc(x_coord_undo,4)
alloc(y_coord_undo,4)
alloc(_GetWayPointCoord_X,4)
alloc(_GetWayPointCoord_Y,4)
alloc(_GetWayPointCoord_Z,4)
alloc(_WriteWayPointCoordsToPlayerLocation,4)

label(returnteleport)
label(originalcodeteleport)
label(exitteleport)
label(save_coord)
label(load_coord)
label(undo_coord)
label(returnhere)
label(originalcode)
label(exit)
label(WriteWayPointCoordsToPlayerLocation)

newmem: //this is allocated memory, you have read,write,execute access
movss xmm12,[rbx+00000838]
movss [_GetWayPointCoord_X],xmm12
movss xmm12,[rbx+0000083C]
movss [_GetWayPointCoord_Y],xmm12
movss xmm12,[rbx+00000840]
movss [_GetWayPointCoord_Z],xmm12

originalcode:
movss xmm0,[rbx+00000838]
exit:
jmp returnhere



teleportmem:
cmp [s_enable],1
je save_coord

cmp [l_enable],1
je load_coord

cmp [u_enable],1
je undo_coord

cmp [_WriteWayPointCoordsToPlayerLocation],1
je WriteWayPointCoordsToPlayerLocation

jmp originalcodeteleport

save_coord:
mov [s_enable],0
movss xmm12,[rbx+BC]
movss [x_coord],xmm12
movss xmm12,[rbx+C0]
movss [z_coord],xmm12
movss xmm12,[rbx+C4]
movss [y_coord],xmm12
jmp originalcodeteleport

load_coord:
mov [l_enable],0
cmp [z_coord],0
je originalcodeteleport
// Save actual Position (for UNDO TELEPORT) when press LOAD POSiTiON
movss xmm12,[rbx+BC]
movss [x_coord_undo],xmm12
movss xmm12,[rbx+C0]
movss [z_coord_undo],xmm12
movss xmm12,[rbx+C4]
movss [y_coord_undo],xmm12
// Save actual Position (for UNDO TELEPORT) when press LOAD POSiTiON
movss xmm12,[x_coord]
movss [rbx+BC],xmm12
movss xmm12,[z_coord]
movss [rbx+C0],xmm12
movss xmm12,[y_coord]
movss [rbx+C4],xmm12
jmp originalcodeteleport

undo_coord:
mov [l_enable],0
mov [s_enable],0
mov [u_enable],0
cmp [z_coord_undo],0
je originalcodeteleport
movss xmm12,[x_coord_undo]
movss [rbx+BC],xmm12
movss xmm12,[z_coord_undo]
movss [rbx+C0],xmm12
movss xmm12,[y_coord_undo]
movss [rbx+C4],xmm12
jmp originalcodeteleport

///////////////TELEPORT TO WAYPOiNT//////////////
WriteWayPointCoordsToPlayerLocation:
mov byte ptr [_WriteWayPointCoordsToPlayerLocation],0
movss xmm11,[_GetWayPointCoord_X]
movss [rbx+BC],xmm11
movss xmm11,[_GetWayPointCoord_Y]
movss [rbx+C0],xmm11
movss xmm11,[_GetWayPointCoord_Z]
movss [rbx+C4],xmm11
fld [rbx+000000C0]
fld1
faddp
fld1
faddp
fld1
faddp
fstp [rbx+000000C0]
jmp originalcodeteleport

originalcodeteleport:
addss xmm0,[rbx+000000C4]

exitteleport:
jmp returnteleport

//"FC64.dll"+1F352CE:
_TeleportCode:
jmp teleportmem
nop
nop
nop
returnteleport:

_GetWaypointCoord:
jmp newmem
nop
nop
nop
returnhere:


x_coord:
dd 0
z_coord:
dd 0
y_coord:
dd 0
s_enable:
dd 0
l_enable:
dd 0
x_coord_undo:
dd 0
z_coord_undo:
dd 0
y_coord_undo:
dd 0
u_enable:
dd 0

[DISABLE]

Unregistersymbol(z_coord)
Unregistersymbol(x_coord)
Unregistersymbol(y_coord)
Unregistersymbol(z_coord_undo)
Unregistersymbol(x_coord_undo)
Unregistersymbol(y_coord_undo)
Unregistersymbol(s_enable)
Unregistersymbol(l_enable)
Unregistersymbol(u_enable)
Unregistersymbol(_TeleportCode)
Unregistersymbol(_GetWayPointCoord_X)
Unregistersymbol(_GetWayPointCoord_Y)
Unregistersymbol(_GetWayPointCoord_Z)
Unregistersymbol(_GetWaypointCoord)
Unregistersymbol(_WriteWayPointCoordsToPlayerLocation)

dealloc(z_coord)
dealloc(x_coord)
dealloc(y_coord)
dealloc(z_coord_undo)
dealloc(x_coord_undo)
dealloc(y_coord_undo)
dealloc(s_enable)
dealloc(l_enable)
dealloc(u_enable)
dealloc(teleportmem)
dealloc(_GetWayPointCoord_X)
dealloc(_GetWayPointCoord_Y)
dealloc(_GetWayPointCoord_Z)
dealloc(newmem)
dealloc(_WriteWayPointCoordsToPlayerLocation)

//"FC64.dll"+1F352CE:
_TeleportCode:
addss xmm0,[rbx+000000C4]
//Alt: db F3 0F 58 83 C4 00 00 00

_GetWaypointCoord:
movss xmm0,[rbx+00000838]

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>336</ID>
                  <Description>"DEBUG"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>0080FF</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>329</ID>
                      <Description>"Waypoint Coord X"</Description>
                      <Color>808080</Color>
                      <VariableType>Float</VariableType>
                      <Address>_GetWayPointCoord_X</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>330</ID>
                      <Description>"Waypoint Coord Y"</Description>
                      <Color>808080</Color>
                      <VariableType>Float</VariableType>
                      <Address>_GetWayPointCoord_Y</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>331</ID>
                      <Description>"Waypoint Coord Z"</Description>
                      <Color>808080</Color>
                      <VariableType>Float</VariableType>
                      <Address>_GetWayPointCoord_Z</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>319</ID>
                  <Description>"SAVE POSiTiON"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>s_enable</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>107</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>320</ID>
                  <Description>"LOAD POSiTiON"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>l_enable</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>109</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>321</ID>
                  <Description>"UNDO TELEPORT"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>u_enable</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>106</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>335</ID>
                  <Description>"TELEPORT TO WAYPOiNT"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>_WriteWayPointCoordsToPlayerLocation</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>111</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2383</ID>
          <Description>"Hunter Options"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>2306</ID>
              <Description>"Hunter UV Block Duration"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,F3 0F 10 83 A0 00 00 00 F3 0F 5C C6)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BF8A60)

label(code)
label(return)

newmem:

code:
  nop//movss xmm0,[rbx+000000A0]
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 10 83 A0 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2309</ID>
              <Description>"Hunter UV Block Instant Cooldown Use"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,FF 4B 70 48 8B 05 C8 B3 D9 00)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BF7E8E)

label(code)
label(return)

newmem:

code:
  nop//inc [rbx+70]
  mov rax,[gamedll_x64_rwdi.dll+1993260]
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 4B 70 48 8B 05 C8 B3 D9 00

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2733</ID>
              <Description>"Hunter Shoot A Spit Instant Cooldown"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,44 01 6C C7 60)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+BF94C9)

label(code)
label(return)

newmem:

code:
  nop//mov [rdi+rax*8+60],r13d
  jmp return

INJECT:
  jmp code
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 44 01 6C C7 60

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2362</ID>
              <Description>"Hunter LVL Fast"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,gamedll_x64_rwdi.dll,01 68 08 48 8B 47 40)
alloc(newmem,$1000,"gamedll_x64_rwdi.dll"+B15559)

label(code)
label(return)

newmem:

code:
  mov [rax+08],#9999999
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 01 68 08 48 8B 47 40

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of jae gamedll_x64_rwdi.dll+C5A86</Description>
      <Address>7FFCB5F55A7D</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>C5A7D</ModuleNameOffset>
      <Before>
        <Byte>81</Byte>
        <Byte>9C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>73</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>89</Byte>
        <Byte>9C</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jae gamedll_x64_rwdi.dll+C5AA6</Description>
      <Address>7FFCB5F55A9D</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>C5A9D</ModuleNameOffset>
      <Before>
        <Byte>81</Byte>
        <Byte>A4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>73</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>89</Byte>
        <Byte>A4</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of push rax</Description>
      <Address>7FF6B12D12F5</Address>
      <ModuleName>DyingLightGame.exe</ModuleName>
      <ModuleNameOffset>F12F5</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>50</Byte>
      </Actual>
      <After>
        <Byte>53</Byte>
        <Byte>51</Byte>
        <Byte>52</Byte>
        <Byte>56</Byte>
        <Byte>57</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of add rcx,20</Description>
      <Address>7306C019</Address>
      <ModuleName>MSVCR100.dll</ModuleName>
      <ModuleNameOffset>3C019</ModuleNameOffset>
      <Before>
        <Byte>4C</Byte>
        <Byte>8B</Byte>
        <Byte>54</Byte>
        <Byte>0A</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C1</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>E0</Byte>
        <Byte>4C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+000000E0],eax</Description>
      <Address>7FF94004A401</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4BA401</ModuleNameOffset>
      <Before>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>E0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm0,[rcx+000000E0]</Description>
      <Address>7FF94004A20A</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4BA20A</ModuleNameOffset>
      <Before>
        <Byte>57</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>81</Byte>
        <Byte>E0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>58</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm1,[rbx+000000E0]</Description>
      <Address>7FF94004A3CD</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4BA3CD</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>58</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>E0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>17</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rdi+00001220],eax</Description>
      <Address>7FF9406351F0</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AA51F0</ModuleNameOffset>
      <Before>
        <Byte>87</Byte>
        <Byte>1C</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>87</Byte>
        <Byte>20</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rax+14],r11</Description>
      <Address>7FF941FF068B</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4E068B</ModuleNameOffset>
      <Before>
        <Byte>50</Byte>
        <Byte>1C</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>58</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>58</Byte>
        <Byte>10</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [r15+18],xmm0</Description>
      <Address>7FF941FE083E</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4D083E</ModuleNameOffset>
      <Before>
        <Byte>85</Byte>
        <Byte>80</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>47</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>68</Byte>
        <Byte>49</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm0</Description>
      <Address>7FF9415A3ED0</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B93ED0</ModuleNameOffset>
      <Before>
        <Byte>C4</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>0A</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+00000158],eax</Description>
      <Address>7FF940F2B5AD</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51B5AD</ModuleNameOffset>
      <Before>
        <Byte>47</Byte>
        <Byte>08</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>58</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx-18],eax</Description>
      <Address>7FF940F2BBFE</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51BBFE</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>FB</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>E8</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>BA</Byte>
        <Byte>9D</Byte>
        <Byte>AE</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+000001A0],rax</Description>
      <Address>7FF940F2B5B5</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51B5B5</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>A8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000001A0],xmm0</Description>
      <Address>7FF940F2B5E6</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51B5E6</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>B8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm7</Description>
      <Address>7FF940ABD3CF</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AD3CF</ModuleNameOffset>
      <Before>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>39</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>70</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000001A4],xmm0</Description>
      <Address>7FF940F2B5EE</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51B5EE</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>57</Byte>
        <Byte>1B</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [r12+000001A4],xmm1</Description>
      <Address>7FF940F2A69F</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51A69F</ModuleNameOffset>
      <Before>
        <Byte>68</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>8C</Byte>
        <Byte>24</Byte>
        <Byte>A4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>05</Byte>
        <Byte>78</Byte>
        <Byte>2A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+000000F0],eax</Description>
      <Address>7FF9403D58D2</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>5958D2</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>81</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>81</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000000FC],xmm6</Description>
      <Address>7FF9403D6360</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>596360</ModuleNameOffset>
      <Before>
        <Byte>81</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>B3</Byte>
        <Byte>FC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>BB</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+4C],eax</Description>
      <Address>7FF9403E5683</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>5A5683</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>14</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+64],eax</Description>
      <Address>7FF9403E56A7</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>5A56A7</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>60</Byte>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>28</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>64</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>2C</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm0,[rcx]</Description>
      <Address>7FF9415A3F08</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B93F08</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>CA</Byte>
        <Byte>76</Byte>
        <Byte>3A</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>14</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm0</Description>
      <Address>7FF9415A3F19</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B93F19</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>28</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C2</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>77</Byte>
        <Byte>23</Byte>
        <Byte>80</Byte>
        <Byte>79</Byte>
        <Byte>19</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rdi+0000015C],r11d</Description>
      <Address>7FF940F2BC0A</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51BC0A</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>44</Byte>
        <Byte>8B</Byte>
        <Byte>5B</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>9F</Byte>
        <Byte>5C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>10</Byte>
        <Byte>89</Byte>
        <Byte>87</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx],xmm8</Description>
      <Address>7FF9403D7528</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>597528</ModuleNameOffset>
      <Before>
        <Byte>9F</Byte>
        <Byte>60</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>03</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>73</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+40],xmm0</Description>
      <Address>7FF9416A352A</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>C9352A</ModuleNameOffset>
      <Before>
        <Byte>5C</Byte>
        <Byte>C6</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C7</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>43</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>77</Byte>
        <Byte>07</Byte>
        <Byte>C6</Byte>
        <Byte>43</Byte>
        <Byte>44</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000000A4],xmm0</Description>
      <Address>7FFD08B2D60E</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>CED60E</ModuleNameOffset>
      <Before>
        <Byte>A8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>50</Byte>
        <Byte>20</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm0</Description>
      <Address>7FFD0F0D3640</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B93640</ModuleNameOffset>
      <Before>
        <Byte>C4</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>0A</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm0</Description>
      <Address>7FFD0F0D365A</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B9365A</ModuleNameOffset>
      <Before>
        <Byte>72</Byte>
        <Byte>03</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>32</Byte>
        <Byte>C0</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+00000158],eax</Description>
      <Address>7FFD0EA5A73D</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51A73D</ModuleNameOffset>
      <Before>
        <Byte>47</Byte>
        <Byte>08</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>58</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx-18],eax</Description>
      <Address>7FFD0EA5AD8E</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51AD8E</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>FB</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>E8</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>BA</Byte>
        <Byte>AC</Byte>
        <Byte>AE</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+000001A0],rax</Description>
      <Address>7FFD0EA5A745</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51A745</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>83</Byte>
        <Byte>A8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000001A0],xmm0</Description>
      <Address>7FFD0EA5A776</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51A776</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>B8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+000001A4],xmm0</Description>
      <Address>7FFD0EA5A77E</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>51A77E</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>A4</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>57</Byte>
        <Byte>1B</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm9,[rsi+00001204]</Description>
      <Address>7FFBCD8B5985</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AA5985</ModuleNameOffset>
      <Before>
        <Byte>4D</Byte>
        <Byte>8B</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8E</Byte>
        <Byte>04</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>4D</Byte>
        <Byte>85</Byte>
        <Byte>FF</Byte>
        <Byte>74</Byte>
        <Byte>30</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of comiss xmm8,[rsi+00001204]</Description>
      <Address>7FFBCD8B6775</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AA6775</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>6B</Byte>
        <Byte>E2</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>86</Byte>
        <Byte>04</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>72</Byte>
        <Byte>3B</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>86</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of subss xmm6,[rsi+00001204]</Description>
      <Address>7FFBCD8B67C4</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AA67C4</ModuleNameOffset>
      <Before>
        <Byte>28</Byte>
        <Byte>F1</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CF</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>B6</Byte>
        <Byte>04</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>90</Byte>
        <Byte>28</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbx+00000954],xmm0</Description>
      <Address>7FFBCD8BE4B7</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>AAE4B7</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>54</Byte>
        <Byte>09</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>40</Byte>
        <Byte>84</Byte>
        <Byte>F6</Byte>
        <Byte>74</Byte>
        <Byte>15</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm0,[rcx+0000121C]</Description>
      <Address>7FFBCD70FF90</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>8FFF90</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>81</Byte>
        <Byte>1C</Byte>
        <Byte>12</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of cmp [r12+r10+01C13F80],esi</Description>
      <Address>7FFBCD27F4BA</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>46F4BA</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>B7</Byte>
        <Byte>74</Byte>
        <Byte>05</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>43</Byte>
        <Byte>39</Byte>
        <Byte>B4</Byte>
        <Byte>14</Byte>
        <Byte>80</Byte>
        <Byte>3F</Byte>
        <Byte>C1</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>84</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+00000210],dl</Description>
      <Address>7FFC1AEBCCBB</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>9FCCBB</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>88</Byte>
        <Byte>91</Byte>
        <Byte>10</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>99</Byte>
        <Byte>F0</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of dec [rdi+20]</Description>
      <Address>7FFC1A9BDBAC</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4FDBAC</ModuleNameOffset>
      <Before>
        <Byte>08</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>57</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>4F</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>48</Byte>
        <Byte>F8</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of inc [rdi+40]</Description>
      <Address>7FFC1A9BDBEF</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4FDBEF</ModuleNameOffset>
      <Before>
        <Byte>04</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>47</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>4F</Byte>
        <Byte>38</Byte>
        <Byte>33</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rdi+70],edx</Description>
      <Address>7FFC1A9BDC83</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>4FDC83</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>57</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>38</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rsi+000002A8],r12</Description>
      <Address>7FFC2066A4E3</Address>
      <ModuleName>engine_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>12A4E3</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>3D</Byte>
        <Byte>49</Byte>
        <Byte>F0</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>A6</Byte>
        <Byte>A8</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>B7</Byte>
        <Byte>A0</Byte>
        <Byte>02</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rsi+00007E70],edx</Description>
      <Address>7FFC1AB72AE0</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>6B2AE0</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>96</Byte>
        <Byte>70</Byte>
        <Byte>7E</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
        <Byte>74</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of inc [rbx+00007E70]</Description>
      <Address>7FFC1AB75062</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>6B5062</ModuleNameOffset>
      <Before>
        <Byte>74</Byte>
        <Byte>03</Byte>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>32</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>83</Byte>
        <Byte>70</Byte>
        <Byte>7E</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rsi+08],r8d</Description>
      <Address>7FFC1AB72A2E</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>6B2A2E</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>3B</Byte>
        <Byte>D0</Byte>
        <Byte>72</Byte>
        <Byte>D5</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>63</Byte>
        <Byte>8E</Byte>
        <Byte>58</Byte>
        <Byte>7E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm0</Description>
      <Address>7FFD7144B889</Address>
      <ModuleName>gamedll_x64_rwdi.dll</ModuleName>
      <ModuleNameOffset>B9B889</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>28</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C2</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>77</Byte>
        <Byte>23</Byte>
        <Byte>80</Byte>
        <Byte>79</Byte>
        <Byte>19</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>teleport_aob1</Name>
      <Address>7FEE4824E49</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>waypoint_aob1</Name>
      <Address>7FEDF904290</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>waypoint_Z</Name>
      <Address>7FEE3C50150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>icamo_aob1</Name>
      <Address>7FEE0713BF0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>igh_aob1</Name>
      <Address>7FFCD22544D2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ik_aob1</Name>
      <Address>7FFC4BB542A5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HunterUVBlockInstantCooldownUse</Name>
      <Address>7FFD08B2D68E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DriveLevel</Name>
      <Address>7FFBCCFEF4C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>t_aob1</Name>
      <Address>7FFBCBFD64B1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gw_aob1</Name>
      <Address>7FFBC8848CBC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>saveLocation_status</Name>
      <Address>7FFBCB6F0086</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>saved_X</Name>
      <Address>7FFBCB6F008A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>saved_Z</Name>
      <Address>7FFBCB6F008E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>saved_Y</Name>
      <Address>7FFBCB6F0092</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>goToSaved_status</Name>
      <Address>7FFBCB6F00DE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>goToWaypoint_status</Name>
      <Address>7FFBCB6F0128</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>waypoint_X</Name>
      <Address>7FFBCB6F0170</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>waypoint_Y</Name>
      <Address>7FFBCB6F0174</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>t_values</Name>
      <Address>7FFBCB6F0178</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Challenge/DLC</Name>
      <Address>7FF838F2000F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Skills2</Name>
      <Address>7FFC15DDEFEC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SurvivalRank</Name>
      <Address>7FFC1B000FAE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HunterLVL</Name>
      <Address>7FFDCFBCE864</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HP2</Name>
      <Address>7FFF73B6E4B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GodMode</Name>
      <Address>7FFF737CE49F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GodMode1</Name>
      <Address>7FFA6077E4A9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GodMode2</Name>
      <Address>7FFA6077E49F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CarGas</Name>
      <Address>7FFA60C57D1F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedFlare</Name>
      <Address>7FFCB91AC759</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>setFOV_aob1</Name>
      <Address>7FFCB88BEC05</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FOV</Name>
      <Address>7FFCB757001A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SurvivorRankXP1</Name>
      <Address>7FFD713F7E8A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ih_aob1</Name>
      <Address>7FFD71366107</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ih_aob2</Name>
      <Address>7FFD713660E9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>XP</Name>
      <Address>7FFD7136A1DB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InstantKill</Name>
      <Address>7FFD70AC41E5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Time_of_Day_ret</Name>
      <Address>7FFD70C40612</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteStamina1</Name>
      <Address>7FFD714B2874</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteStamina2</Name>
      <Address>7FFD714A466F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ici_aob1</Name>
      <Address>7FFD71496EE9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedPotionDuration</Name>
      <Address>7FFD71319D3C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FreeBluAOB1</Name>
      <Address>7FFD70B966B5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>FreeBluAOB2</Name>
      <Address>7FFD70B9618E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iw_aob1</Name>
      <Address>7FFD70EFF148</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ica_aob1</Name>
      <Address>7FFD7156E0C5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ioa_aob1</Name>
      <Address>7FFD714963C2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wisz_aob1</Name>
      <Address>7FFD713992DC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itwu_aob1</Name>
      <Address>7FFD71496FFB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iuf_aob1</Name>
      <Address>7FFD7144B7C5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>elp_aob1</Name>
      <Address>7FFD70F75D0B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteGrapplingHook</Name>
      <Address>7FFD7154AE6A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CarFire</Name>
      <Address>7FFD71841A41</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GasFreeFlamethrower</Name>
      <Address>7FFD718436A2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InfiniteNitro</Name>
      <Address>7FFD71845F0A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>TheButton</Name>
      <Address>7FFD7137994E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iha_aob1</Name>
      <Address>7FFD716CF4F3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address>7FFD7146C761</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CheckPoint</Name>
      <Address>7FFD714838AE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ItemEditDataAOB</Name>
      <Address> 7FFE860B8C85</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BaseItemTableAOB</Name>
      <Address> 7FFE85C34F6E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ItemEditData</Name>
      <Address>7FFE855D0037</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>00 00 03 03 10 0F 03 - potion
31 2E 00 10 00 00 0B - axe
</Comments>
  <LuaScript>ItemTable = {}
WeaponTable = {}
BaseItemTable = {}
ModTable = {}
ItemPack = 0
WeapPack = 0
BaseItemPoint = 0

function Dec2Hex(nValue)
  return string.format("%X", 0+nValue)
end

function Hex2Dec(sValue)
  return tonumber(sValue, 16).."";
end

function BackPackUpdate()
   WeapPack = readQword(readQword("ItemEditData")+0x60)+0x40
   ItemPack = readQword(readQword("ItemEditData")+0x58)+0x40
   BaseItemPoint = readQword("ItemEditData+8")-0x18
   local BasePointCount = readInteger(BaseItemPoint+8)
   PackEdit_LBWeapSwap.clear()
   local WeapSwapList = PackEdit_LBWeapSwap.getItems()
   local ItemSwapList = PackEdit_LBItemSwap.getItems()
   for i=0,BasePointCount-1 do
     local ItemAddr = readQword(readQword(BaseItemPoint)+i*8)
     local ItemString = readString(readQword(ItemAddr+0x18))
     if ItemString ~= nil then
       if string.find(ItemString,"Craftplan_") then
         table.insert(ModTable,{Address = ItemAddr,Name = ItemString})
       end
     end
     table.insert(BaseItemTable,{Address=ItemAddr,Name=ItemString})
   end
   PackEdit_CBWeapMod.clear()
   local ModList = PackEdit_CBWeapMod.getItems()
   ModList.add("None")
   PackEdit_CBWeapMod.setItemIndex(0)
   for k,v in pairs(ModTable) do
     ModList.add(v.Name)
   end
  for k,v in pairs(BaseItemTable) do
    WeapSwapList.add(v.Name)
    ItemSwapList.add(v.Name)
  end
end

function BWeapUpdateClick(sender)
  if #BaseItemTable == 0 then
    BackPackUpdate()
  end
  PackEdit_LBWeapList.clear()
  WeaponTable={}
  local WeapList = PackEdit_LBWeapList.getItems()
  local WeapCount = readInteger(WeapPack+8)
  for i=0,WeapCount-1 do
    local WeapAddr = readQword(readQword(WeapPack)+i*8)
    local WeapString = readString(readQword(readQword(WeapAddr+0x60)+0x18))
    local EquipFlag = bAnd(readBytes(WeapAddr+0xf8),4)
    if EquipFlag == 4 then
      WeapString = "E: "..WeapString
    end
    table.insert(WeaponTable,{Index = i,Name=WeapString,Address=WeapAddr,Equip=EquipFlag})
  end
  table.sort(WeaponTable,function(a,b) return a.Equip&gt;b.Equip end)
  for k,v in pairs(WeaponTable) do
    WeapList.add(v.Name)
  end
end


function LBWeapListSelectionChange(sender, user)
  if sender.ItemIndex == -1 then return end
  local Weapon = WeaponTable[sender.ItemIndex+1]
  local Dura = readFloat(Weapon.Address+0x44)
  local Repair = readInteger(Weapon.Address+0x48)
  local Quant = readInteger(Weapon.Address+0x40)
  local Qual = readBytes(Weapon.Address+0x68)
  local Mod = readQword(Weapon.Address+0x70)
  PackEdit_EWeapDur.text = Dura
  PackEdit_EWeapRepair.text = Repair
  PackEdit_EWeapQual.text = Qual
  PackEdit_EWeapQuant.text = Quant
  local ModTest = false
  for k,v in pairs(ModTable) do
      if v.Address == Mod then
        PackEdit_CBWeapMod.setItemIndex(k)
        ModTest = true
        break
      end
  end
  if ModTest == false then PackEdit_CBWeapMod.setItemIndex(0) end
end

function EWeapApplyClick(sender)
  if tonumber(PackEdit_EWeapDur.text) == nil or tonumber(PackEdit_EWeapRepair.text) == nil or tonumber(PackEdit_EWeapQual.text) == nil or tonumber(PackEdit_EWeapQuant.text) == nil then
    showMessage("Please enter only number values.")
  return end
  if PackEdit_LBWeapList.ItemIndex == -1 then return end
  local ModIndex = PackEdit_CBWeapMod.getItemIndex()
  local Weapon = WeaponTable[PackEdit_LBWeapList.ItemIndex+1]
  local Dura = tonumber(PackEdit_EWeapDur.text)
  local Repair = tonumber(PackEdit_EWeapRepair.text)
  local Quant = tonumber(PackEdit_EWeapQuant.text)
  local Qual = tonumber(PackEdit_EWeapQual.text)
  writeFloat(Weapon.Address+0x44,Dura)
  writeInteger(Weapon.Address+0x48,Repair)
  writeInteger(Weapon.Address+0x40,Quant)
  writeBytes(Weapon.Address+0x68,Qual)
  if ModIndex == 0 then
    writeQword(Weapon.Address+0x70,0)
  else
    writeQword(Weapon.Address+0x70,ModTable[ModIndex].Address)
  end
end


function BWeapSwapClick(sender)
  if PackEdit_LBWeapSwap.ItemIndex == -1 or PackEdit_LBWeapList.ItemIndex == -1 then return end
  local SwapIndex = PackEdit_LBWeapSwap.getItemIndex()+1
  local Weapon = WeaponTable[PackEdit_LBWeapList.ItemIndex+1]
  writeQword(Weapon.Address+0x60,BaseItemTable[SwapIndex].Address)
  BWeapUpdateClick()
end


function BItemUpdateClick(sender)
  if #BaseItemTable == 0 then
    BackPackUpdate()
  end
  PackEdit_LBItemList.clear()
  ItemTable = {}
  local ItemList = PackEdit_LBItemList.getItems()
  local ItemCount = readInteger(ItemPack+8)
  for i = 0,ItemCount-1 do
    local ItemAddr = readQword(readQword(ItemPack)+i*8)
    local ItemString = readString(readQword(readQword(ItemAddr+0x60)+0x18))
    local ItemType = readBytes(readQword(ItemAddr+0x60)+0x78)
    table.insert(ItemTable,{Name = ItemString,Address = ItemAddr,ItemIndex = ItemType})
  end
  table.sort(ItemTable,function(a,b) return a.ItemIndex &lt; b.ItemIndex end)
  for k,v in pairs(ItemTable) do
    ItemList.add(v.Name)
  end
end

function LBItemListSelectionChange(sender, user)
  if sender.ItemIndex == -1 then return end
  local Item = ItemTable[sender.ItemIndex+1]
  local Quant = readInteger(Item.Address+0x40)
  PackEdit_EItemQuant.text = Quant
  local ItemTypeIndex = 0
  for k,v in pairs(BaseItemTable) do
    if v.Name == Item.Name then ItemTypeIndex = k-1 end
  end
  PackEdit_LBItemSwap.setItemIndex(ItemTypeIndex)
end

function BItemApplyClick(sender)
  if PackEdit_LBItemSwap.ItemIndex == -1 or PackEdit_LBItemList.ItemIndex == -1 then return end
  if tonumber(PackEdit_EItemQuant.text) == nil then showMessage("Please enter only number values.") end
  local SwapIndex = PackEdit_LBItemSwap.getItemIndex()+1
  local Item = ItemTable[PackEdit_LBItemList.ItemIndex+1]
  local Quant = tonumber(PackEdit_EItemQuant.text)
  writeQword(Item.Address+0x60,BaseItemTable[SwapIndex].Address)
  writeInteger(Item.Address+0x40,Quant)
  BItemUpdateClick()
end

function EditorShow()
  ItemTable = {}
  WeaponTable = {}
  BaseItemTable = {}
  PackEdit.show()
end

function EditorHide()
  PackEdit.close()
end
</LuaScript>
</CheatTable>
