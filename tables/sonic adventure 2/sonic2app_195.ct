<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <Forms>
    <Chao>DD5ACD8F23471577BBED6A7FCC8737096C024BD2212BE251B2D9B16767773642A071CFCC4E96F9B0C64E1644B2528D5DDBEEB8DDED6DB767D7AB48E44F08485C1107E08438216E70E0921C38219403FF00578400090E88571FDDEE6E97EDB18F3B92C75D55AFDEEFBD5FBFF7AAAADBFA9BA954B37EB0A9358DFD03D7EB658C0E763347E491AFFE444187C4323BBEFA33456DBAFD34CE3EB0DA7E477DAC6A06EEFB96EBA01215D7F7DB96EF7A7A8DF878C5B02DE2F8E1C4226F07135339C0A96387D805A3E1639F5D32B8340AD03EE3689A406BAB719D9FC575B6D55C139F9F7A6DE2A553A922A86F7AB8D5AD612FD7B0DB0DD7B15ADC9DDFA50540FA25A6FF13A1FFE729F5183F4DFF483DB69CF4A7B9BA3BB0A86BE954542FB3FB089F135B3B3A8C28FD43A8B4C494F6B8D2F4AB214359265DAC630F4C365CDBF572936636B1650FA466AABF485DDECE74C4CE9CF8AE4A0D557F2AD4A65F195BCAAC48583AA16F4BAEEFF340DF66A82FF73D67D8EADA6430C3F922381F88C9FDFF7201FFD5B8F23C0D800E6EBB4FE4AA73CAE555672454DC9253F19F808AB7422A1037631EB7DB72856F093BD337C60AF74DB3879D19CC52E7B990DCF97717703E3B19B167EED02472CDF6029A918485DB72163E0A5878631CB1CC8A79ACDEE1FAFE9648D51F0A753BA1BAFC21F6C9CD23F782487835DCDEB95B739F668D5DAF2762753354799599F8E7E0CEB70BEFF9A427C6D6576963F04EC3F72CC71C2848AB13C71C5A0ECA3408B651F6D4F78987D0193E3FB77CA4191D0285B4833235177BF09FC0FF6CD3324146BBE77A966D63AA02B7DC561721B0D47361D60743BBD501916CA33B74BA483DC33DA49DE156CB05CF8A00A41FBBCE8002E56AAE43F43DD7446A0DFB08ED79D80419ED7DA853AE0717F58E4B1CEB29CA9C80602A77EA4091774CA21599EBBC31BE855AA6499EFA2843C79254ED636F0A557F7FDEA9A2AE27A9CA71AA54188B33953760ED251D82DB72B6D694E79AADF5D0FD246379CE582E184F06D8017824A7EC6DE5390F30EA7A92AE82C8453A96A48AAEEE72AAEE3FEF5451D79354150555742C4E15321E5087E55C759E6FAE56B8EF49B256385959362859627738597F55E24BF63F82227F92DFB52DD3E9C19AAAADF9F88CCADC1F0E7CEBD128B73BF4DD86F58CE4C27538436BE7BC55FDAE1CB2A42C0519169869B079F15DD994E31E2D87CBC26F2E66458EF9CE9298B43ACCC5ACCA313F5E0E9347CE5CD02D39E85F968C23BA25916DE53A04F6B1EE53CD38718F4890E90FC34C7F9181FE2A00FD6EA8503B71753A619C2FAB4245326156E34859A3866D517DD1349CFB214EE1C0C63DA2D339D13246DB49A035198DE260D28CD398BE26805E1F337402380986E893007AA0D7A098D161AEEB13255607D32F0B5DF53C6CF18FA0D8C1B516E1454C4E9ABBCE0B89F6C0324D38F24DEC1747C131F0711C2F3CAECCA9BBE8C4F57A5070D3DFF936526FE837907A53FF10A98EEEA095060CD87A7FD887532ECAEE59CF9E8D903AD4878991E221B61FE986ED0E481B65771DD31BA1EC3D8F10A0AB660F09423F20B6ED3E89EFF6C0F0A4AF25B1C2D0B1E40A73EC0EFD8EDCD38F2FE729ABDCA8D8745DBF33D2EF412F2A9CF689A333D548B940CA43541AF7E88D9E659358CF81E73E81D27751C626B69C0DB4D6783C64F745E85811CA85DCC3406E1DEC237A046CF561D9755A4417E38CF8178EC90018D4DFEFEB81DAD83AC3662629BB22D61936288BECED2467BC407C2BE42C5220723E36E09B78D2256644E697A3DB72B40F1645E3FECC3854660C387ACAC321B7483868F561AFDFB51CB645B061DFB1DBEFC34D47B561AB4B20ED9A96A31BD841AB06F6DAE7B0F768EB341CA1DEB84F88A7D7619791AFE33E5CD6B08972F75CBBCD3A0B4D887FBDE183767086D8E0D3EAA947EF9D5E83C4B008BA4253E3264B93A0AB08AD51D0C81DC2E20A193F40B97DD31C742085D03A4F243DEC587BD0B17C1269D768E48DDBABC608479B75CBE98E9BEBF5A107DE46C69901636DDCBAB0BD7206E139163EB27A91B9A5636CC2CDC211F5C2E18875366E8DF123D15DA0B73319DB2F88C31F0CC962ED8E3CD6FE995A30D6A8FE199186601569074F6E92B1F6656A8158532A48A922650B29B790B28D94DB48B983941DA4DC45E9CA267C2AF0A9C2670B3EB7E0B31DCB7F664692A31745FEB341194B3B7296FEB8284B1C61C6E333CD38F02880FCD9F14EEC0997FA452ABA23E013856BB2875E2FC5A13206AC45729CEBD3710A74D60C90AF24411AC1C3852448691648233C93CB40BE2ABB4762677E9678DE5692DCA2F97B380D0C70A06CCCABD5D54D39EAF5A550F37477605D0AB722C7DD590AB7C0638738A43D338759AF3C877F995A68A3243633B041A7A517F282ADF5195A685186D657B1E9C9D05A1AEC8354A89CA8C00A26EF40BCF422C46B24A8A1A511E5DF732EAC81750E23C5866B5B6D9D190E1B2ED610D062881B201ADC8C8298448D11D7CC2471CD0C13D7CCBC62780D36E579839A5AE29711838505C26CD112C60726501762258B199F2C595745C96283B200A9CA4BD68F172E590C6156C9DAF3BA4761C9FA508967793B92E59693FE77A462897933F2FCE53852C138B21E1163D4B2C542B2969E063686298D27CD407A4546A138167E3F719EA9872897A410421666DFDCC35E776E5EDF4A7AB624E65563E851247DFFC2B587B44B671C240C285003AC810FE99DA3EF54E9357F2F9A09DE8B7E1A7F2FFAEBD4444E1B2E44AE9B8A257EE1D4D93BB70DDB6A75B552A039E819F3AE440E7E674387BE9BE504FC2B15AF2F7F4A8527BFE9956D1C5B4257326BBEC6B346D91CC34238C01EF4E8C296E3FE6F21DCB5405912F8EB93C079263BDDE36BCA22C8EBA1B624F4B549E802C8F52C074FF5FA6421ECD2585D12FC1B93E045213DDD737B21F42B117D49F857C7F093A9260E75BF4DC9DFA557175A42D5037B3437B96FCB11DF5C0A31D37862F5E642DE9142AABF4F2DE725E4D55CC81D39E4AAB214649605F65CD0BB72D08F9603D5444C4D7946858086A9B9F39B852AC60A57950CDCD726F34683089B9A33C1CF4A2E591E85AA24AA3E898A40749AABE9870B79CA3525315F9794641AD9D35D7D7BA18A1CE84AE27E53C230959DEAECDA420C0B5549D4376614A42D71962824D6FE82007E777C4E603F7F6A8EFAB37F314005B8CAFF261EA3BE76B9CDFABE69962B1B743FFD083B7EB9BA810A2764E87BD82E6F6FA07571AD1F12CF2DDF8E74D09D4EF9CE066C698105C823B3BCB301BB61D1E0F27737D095B0874DA86C6ED04742232A5F01D8757ECDC52BD5710797DE02FD903C0E13BF05FA4543C86F477AF804B090AFB9E50AD8C6976A21BC13B6B92818C7381E94AB60D41ABBE4A2D54AD866A255B02BCF7EC154AE82452BC1AF8ACA553049DBED8DCAD5ED8DF85B41B82BC9B0B8CEC3225FC3E7239D6A4FC1DFFF01</Chao>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Chaos Drives/Animals Hero"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Amount Collected"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+50</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Slot 1"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Slot 2"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Slot 3"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Slot 4"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Slot 5"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+20</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Slot 6"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Slot 7"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+30</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Slot 8"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+38</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Slot 9"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+40</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Slot 10"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"sonic2App.exe"+1546F18+48</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Character select"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>sonic2App.exe+1534B80</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>1033</ID>
      <Description>"UV Map 1"</Description>
      <Color>80000008</Color>
      <VariableType>Float</VariableType>
      <Address>sonic2App.exe+16F1A10</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>1034</ID>
      <Description>"UV Map 2"</Description>
      <Color>80000008</Color>
      <VariableType>Float</VariableType>
      <Address>sonic2App.exe+16F1A24</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Chao Info"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1043</ID>
          <Description>"Chao in current garden"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>01DC0F80</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1040</ID>
      <Description>"Black Market"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1036</ID>
          <Description>"Chao Rings"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>sonic2App.exe+162787C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1038</ID>
          <Description>"Black Market Items Bought"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>sonic2App.exe+19BEDAC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1039</ID>
          <Description>"Slot 1"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>01DBEDA0</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="Chao Data" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="4 Bytes" Bytesize="4" Description="Starting data" DisplayMethod="Unsigned Integer"/>
        <Element Offset="18" Vartype="String" Bytesize="8" Description="Name" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="Byte" Bytesize="1" Description="Swim Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="33" Vartype="Byte" Bytesize="1" Description="Fly Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="34" Vartype="Byte" Bytesize="1" Description="Run Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="35" Vartype="Byte" Bytesize="1" Description="Power Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="36" Vartype="Byte" Bytesize="1" Description="Stamina Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="Byte" Bytesize="1" Description="Swim Level" DisplayMethod="Unsigned Integer"/>
        <Element Offset="49" Vartype="Byte" Bytesize="1" Description="Fly Level" DisplayMethod="Unsigned Integer"/>
        <Element Offset="50" Vartype="Byte" Bytesize="1" Description="Run Level" DisplayMethod="Unsigned Integer"/>
        <Element Offset="51" Vartype="Byte" Bytesize="1" Description="Power Level" DisplayMethod="Unsigned Integer"/>
        <Element Offset="52" Vartype="Byte" Bytesize="1" Description="Stamina Level" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="2 Bytes" Bytesize="2" Description="Swim Stat" DisplayMethod="Unsigned Integer"/>
        <Element Offset="58" Vartype="2 Bytes" Bytesize="2" Description="Fly Stat" DisplayMethod="Unsigned Integer"/>
        <Element Offset="60" Vartype="2 Bytes" Bytesize="2" Description="Run Stat" DisplayMethod="Unsigned Integer"/>
        <Element Offset="62" Vartype="2 Bytes" Bytesize="2" Description="Power Stat" DisplayMethod="Unsigned Integer"/>
        <Element Offset="64" Vartype="2 Bytes" Bytesize="2" Description="Stamina Stat" DisplayMethod="Unsigned Integer"/>
        <Element Offset="128" Vartype="Byte" Bytesize="1" Description="Chao Type" DisplayMethod="Unsigned Integer"/>
        <Element Offset="168" Vartype="Float" Bytesize="4" Description="Morph 1" DisplayMethod="Unsigned Integer"/>
        <Element Offset="172" Vartype="Float" Bytesize="4" Description="Morph 2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="176" Vartype="Float" Bytesize="4" Description="Light/Dark Percent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="192" Vartype="Float" Bytesize="4" Description="Cycle Age" DisplayMethod="Unsigned Integer"/>
        <Element Offset="209" Vartype="Byte" Bytesize="1" Description="EyeMod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="210" Vartype="Byte" Bytesize="1" Description="Mouth Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="211" Vartype="Byte" Bytesize="1" Description="Ball Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="213" Vartype="Byte" Bytesize="1" Description="Hat Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="214" Vartype="Byte" Bytesize="1" Description="No Feet" DisplayMethod="Unsigned Integer"/>
        <Element Offset="215" Vartype="Byte" Bytesize="1" Description="Badge" DisplayMethod="Unsigned Integer"/>
        <Element Offset="216" Vartype="2 Bytes" Bytesize="2" Description="Color Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="218" Vartype="Byte" Bytesize="1" Description="Shiny Color Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="221" Vartype="Byte" Bytesize="1" Description="Body Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="284" Vartype="Byte" Bytesize="1" Description="Arm Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="285" Vartype="Byte" Bytesize="1" Description="Ear Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="286" Vartype="Byte" Bytesize="1" Description="Forehead Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="287" Vartype="Byte" Bytesize="1" Description="Unknown Body Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="288" Vartype="Byte" Bytesize="1" Description="Feet Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="289" Vartype="Byte" Bytesize="1" Description="Tail Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="290" Vartype="Byte" Bytesize="1" Description="Wing Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="291" Vartype="Byte" Bytesize="1" Description="Unknown Body Mod" DisplayMethod="Unsigned Integer"/>
        <Element Offset="302" Vartype="Byte" Bytesize="1" Description="Sadness" DisplayMethod="Unsigned Integer"/>
        <Element Offset="303" Vartype="Byte" Bytesize="1" Description="Frightened" DisplayMethod="Unsigned Integer"/>
        <Element Offset="305" Vartype="Byte" Bytesize="1" Description="Dizzy" DisplayMethod="Unsigned Integer"/>
        <Element Offset="364" Vartype="Byte" Bytesize="1" Description="Love/Hate Sonic" DisplayMethod="Signed Integer"/>
        <Element Offset="370" Vartype="Byte" Bytesize="1" Description="Love/Hate Shadow" DisplayMethod="Signed Integer"/>
        <Element Offset="376" Vartype="Byte" Bytesize="1" Description="Love/Hate Tails" DisplayMethod="Signed Integer"/>
        <Element Offset="382" Vartype="Byte" Bytesize="1" Description="Love/Hate Eggman" DisplayMethod="Signed Integer"/>
        <Element Offset="388" Vartype="Byte" Bytesize="1" Description="Love/Hate Knuckles" DisplayMethod="Signed Integer"/>
        <Element Offset="394" Vartype="Byte" Bytesize="1" Description="Love/Hate Rouge" DisplayMethod="Signed Integer"/>
        <Element Offset="2047" Vartype="4 Bytes" Bytesize="4" Description="End of chao" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
  <LuaScript>strings_add(getAutoAttachList(), "sonic2app.exe")
errorOnLookupFailure(false)

CurrentChao = nil
ChaoCount = '01DC0F80'
ChaoSlot = '01DC0FC8'
CurrentChao = nil
ListChanged = 0
CTypeTable = {1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25}
CColorTable ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,256,257,258,259,260,261,262,263,264,265,266,267,268,269}


function ListUpdater()
if getOpenedProcessID() == getForegroundProcess() then
   local Count = readInteger(getAddress(ChaoCount))
   if Count &gt; 0 and ListChanged ~= Count then
      local items = listbox_getItems(Chao_ChaoList)
      strings_clear(items)
      for i=0,Count-1 do
         local chow = readInteger(getAddress(ChaoSlot)+(i*72))
         if readInteger(chow+18) &gt; 0 then
            strings_add(items,NameRead(readString(chow+18,7)))
         else
            strings_add(items,"Chao")
         end
      end
      ListChanged = Count
   elseif Count == 0 and ListChanged ~= Count then
      local items = listbox_getItems(Chao_ChaoList)
      strings_clear(items)
      strings_add(items,"None:Don't Click")
      ListChanged = Count
   end
end
end

function NameRead(String)
  local StrOutput = ""
     for i=0,6 do
       if String:byte(i+1) ~= nil then
          StrOutput =  StrOutput .. string.char(String:byte(i+1)+32)
       end
     end
  return StrOutput
end


function NameWrite(String)
  local StrOutput = ""
     for i=0,6 do
       if String:byte(i+1) ~= nil then
          StrOutput =  StrOutput .. string.char(String:byte(i+1)-32)
       end
     end
  return StrOutput
end

function StrNameChange(sender)
   local String = control_getCaption(sender)
   local StringOut = NameWrite(String)
   local ChaoName = CurrentChao +18
   writeString(ChaoName,StringOut)
   for i=0,6-StringOut:len() do
     writeBytes(ChaoName+StringOut:len()+i,0)
   end
end

function ChaoListDblClick(sender)
   local Index = listbox_getItemIndex(sender)
   CurrentChao = readInteger(getAddress(ChaoSlot)+(Index*72))
   local StatLevels = readBytes(CurrentChao+48,5,true)
   control_setCaption(Chao_SwimLvl,StatLevels[1])
   control_setCaption(Chao_FlyLvl,StatLevels[2])
   control_setCaption(Chao_RunLvl,StatLevels[3])
   control_setCaption(Chao_PowerLvl,StatLevels[4])
   control_setCaption(Chao_StaminaLvl,StatLevels[5])
   local StatValue = readBytes(CurrentChao+56,5,true)
   control_setCaption(Chao_SwimStat,StatValue[1])
   control_setCaption(Chao_FlyStat,StatValue[2])
   control_setCaption(Chao_RunStat,StatValue[3])
   control_setCaption(Chao_PowerStat,StatValue[4])
   control_setCaption(Chao_StaminaStat,StatValue[5])
   local Name = readString(CurrentChao+18,7)
   control_setCaption(Chao_StrName,NameRead(Name))
   trackbar_setPosition(Chao_CSad,readBytes(CurrentChao+302,1))
   trackbar_setPosition(Chao_CDiz,readBytes(CurrentChao+305,1))
   trackbar_setPosition(Chao_CFright,readBytes(CurrentChao+303,1))
   trackbar_setPosition(Chao_CLifeCycle,round(readFloat(CurrentChao+192),1)*10)
   trackbar_setPosition(Chao_DrkLght,round(readFloat(CurrentChao+176),1)*10)
   checkbox_setState(Chao_CBall,readBytes(CurrentChao+211,1))
   checkbox_setState(Chao_CNoLegs,readBytes(CurrentChao+214,1))
   for k,v in pairs(CTypeTable) do
      if v == readBytes(CurrentChao+128,1) then
         combobox_setItemIndex(Chao_CType,k-1)
      end
   end
   local cval = readBytes(CurrentChao+216,2,true)
   for k,v in pairs(CColorTable) do
      if v == (cval[1] + (cval[2]*255+1)) then
         combobox_setItemIndex(Chao_CColor,k-1)
      end
   end
   combobox_setItemIndex(Chao_CHat,readBytes(CurrentChao+213,1))
   combobox_setItemIndex(Chao_CMouth,readBytes(CurrentChao+210,1))
   combobox_setItemIndex(Chao_CEyes,readBytes(CurrentChao+209,1))
   --combobox_setItemIndex(Chao_CArms,readBytes(CurrentChao+284,1))
   if readBytes(CurrentChao+284,1) == 255 then combobox_setItemIndex(Chao_CArms,21) else combobox_setItemIndex(Chao_CArms,readBytes(CurrentChao+284,1)) end
   if readBytes(CurrentChao+285,1) == 255 then combobox_setItemIndex(Chao_CEars,21) else combobox_setItemIndex(Chao_CEars,readBytes(CurrentChao+285,1)) end
   if readBytes(CurrentChao+286,1) == 255 then combobox_setItemIndex(Chao_CForehead,21) else combobox_setItemIndex(Chao_CForehead,readBytes(CurrentChao+286,1)) end
   if readBytes(CurrentChao+288,1) == 255 then combobox_setItemIndex(Chao_CFeet,21) else combobox_setItemIndex(Chao_CFeet,readBytes(CurrentChao+288,1)) end
   if readBytes(CurrentChao+289,1) == 255 then combobox_setItemIndex(Chao_CTail,21) else combobox_setItemIndex(Chao_CTail,readBytes(CurrentChao+289,1)) end
   if readBytes(CurrentChao+290,1) == 255 then combobox_setItemIndex(Chao_CWings,21) else combobox_setItemIndex(Chao_CWings,readBytes(CurrentChao+290,1)) end
   combobox_setItemIndex(Chao_CBadge,readBytes(CurrentChao+215,1))
end

function CSadChange(sender)
   writeBytes(CurrentChao+302,trackbar_getPosition(sender))
end

function CDizChange(sender)
   writeBytes(CurrentChao+305,trackbar_getPosition(sender))
end

function CFrightChange(sender)
   writeBytes(CurrentChao+303,trackbar_getPosition(sender))
end

function round(num, idp)
  if idp and idp&gt;0 then
    local mult = 10^idp
    return math.floor(num * mult + 0.5) / mult
  end
  return math.floor(num + 0.5)
end

function CLifeCycleChange(sender)
   writeFloat(CurrentChao+192,trackbar_getPosition(sender)*0.10)
end

function DrkLghtChange(sender)
   writeFloat(CurrentChao+176,trackbar_getPosition(sender)*0.10)
end

function CBallChange(sender)
   writeBytes(CurrentChao+211,checkbox_getState(sender))
end

function CNoLegsChange(sender)
   writeBytes(CurrentChao+214,checkbox_getState(sender))
end

function CTypeChange(sender)
   local Tindex = combobox_getItemIndex(sender)
   writeBytes(CurrentChao+128,CTypeTable[Tindex+1])
end


if PTimer~=nil then
  timer_setEnabled(PTimer, false)
  object_destroy(PTimer);
  PTimer = nil;
end

PTimer = createTimer(nil)
timer_onTimer(PTimer, ListUpdater)
timer_setInterval(PTimer,100)
timer_setEnabled(PTimer, true)

function SwimLvlChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 100 then
      writeBytes(CurrentChao+48,math.floor(tonumber(String)))
   end
end

function FlyLvlChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 100 then
      writeBytes(CurrentChao+49,math.floor(tonumber(String)))
   end
end

function RunLvlChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 100 then
      writeBytes(CurrentChao+50,math.floor(tonumber(String)))
   end
end

function PowerLvlChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 100 then
      writeBytes(CurrentChao+51,math.floor(tonumber(String)))
   end
end

function StaminaLvlChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 100 then
      writeBytes(CurrentChao+52,math.floor(tonumber(String)))
   end
end

function SwimStatChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 10000 then
      writeBytes(CurrentChao+56,math.floor(tonumber(String)),math.floor(tonumber(String)/255))
   end
end

function FlyStatChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 10000 then
      writeBytes(CurrentChao+58,math.floor(tonumber(String)),math.floor(tonumber(String)/255))
   end
end

function RunStatChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 10000 then
      writeBytes(CurrentChao+60,math.floor(tonumber(String)),math.floor(tonumber(String)/255))
   end
end

function PowerStatChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 10000 then
      writeBytes(CurrentChao+62,math.floor(tonumber(String)),math.floor(tonumber(String)/255))
   end
end

function StaminaStatChange(sender)
   local String = control_getCaption(sender)
   if tonumber(String) ~= nil and tonumber(String) &lt; 10000 then
      writeBytes(CurrentChao+64,math.floor(tonumber(String)),math.floor(tonumber(String)/255))
   end
end



function CColorChange(sender)
   local Tindex = combobox_getItemIndex(sender)
   writeBytes(CurrentChao+216,CColorTable[Tindex+1],math.floor(CColorTable[Tindex+1]/255))
end

function CHatChange(sender)
   writeBytes(CurrentChao+213,combobox_getItemIndex(sender))
end

function CEyesChange(sender)
   writeBytes(CurrentChao+209,combobox_getItemIndex(sender))
end

function CMouthChange(sender)
   writeBytes(CurrentChao+210,combobox_getItemIndex(sender))
end

function CArmsChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+284,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+284,255) end
end

function CEarsChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+285,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+285,255) end
end

function CForeheadChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+286,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+286,255) end
end

function CFeetChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+288,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+288,255) end
end

function CTailChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+289,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+289,255) end
end

function CWingsChange(sender)
   if combobox_getItemIndex(sender) &lt; 21 then
      writeBytes(CurrentChao+290,combobox_getItemIndex(sender))
   else writeBytes(CurrentChao+290,255) end
end

function CBadgeChange(sender)
   writeBytes(CurrentChao+215,combobox_getItemIndex(sender))
end

</LuaScript>
</CheatTable>
