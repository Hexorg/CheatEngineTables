<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Scripts:"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Unlimited ammo (main weapon)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,B4 F0 FF FF FF 08 8B 85 B8 DF FF FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  mov eax,[ebp-00002048]
  jmp return

INJECT+04:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT+04:
  db FF 08 8B 85 B8 DF FF FF

unregistersymbol(INJECT)
dealloc(newmem)

0BEFA9BB:
  dec [eax]
  mov eax,[ebp-00002048]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Unlimited ammo (secondary weapon)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,90 F0 FF FF FF 08 8B 85 B8 DF FF FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  mov eax,[ebp-00002048]
  jmp return

INJECT+04:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT+04:
  db FF 08 8B 85 B8 DF FF FF

unregistersymbol(INJECT)
dealloc(newmem)

0988A557:
  dec [eax]
  mov eax,[ebp-00002048]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"Refill grinder after buying"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,D9 9E 3C 07 00 00 8B 83) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fstp dword ptr [esi+0000073C]
  mov [esi+0000073C],(float)600
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db D9 9E 3C 07 00 00

unregistersymbol(INJECT)
dealloc(newmem)

09903E6E:
  fstp dword ptr [esi+0000073C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Unlimited grenades"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,F4 F5 FF FF FF 88 B0 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  jmp return

INJECT+04:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT+04:
  db FF 88 B0 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

0F3634EC:
  dec [eax+000006B0]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Add 1 grenade when used"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,F4 F5 FF FF FF 88 B0 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  inc [eax+000006B0]
  jmp return

INJECT+04:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT+04:
  db FF 88 B0 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

0F3634EC:
  dec [eax+000006B0]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"Unlimited milks"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,FF 88 B4 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 88 B4 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

09924F3A:
  dec [eax+000006B4]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Add 1 milk when used"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,FF 88 B4 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  inc [eax+000006B4]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 88 B4 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

09924F3A:
  dec [eax+000006B4]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Unlimited bulkify"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,FF 88 B8 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 88 B8 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

09924FDD:
  dec [eax+000006B8]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Add 1 bulkify when used"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,FF 88 B8 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  inc [eax+000006B8]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 88 B8 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

09924FDD:
  dec [eax+000006B8]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Unlimited bounce back"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,FF 88 BC 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 88 BC 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

0F3640A1:
  dec [eax+000006BC]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Add 1 bounce back when used"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,FF 88 BC 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  inc [eax+000006BC]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 88 BC 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

0F3640A1:
  dec [eax+000006BC]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Freeze timer (kind of - doesn't work)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,07 8B 83 0C 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,0
  jmp return

INJECT+01:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT+01:
  db 8B 83 0C 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

0F67612E:
  mov eax,[ebx+0000060C]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address> 08CB3E6E</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
