<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>65</ID>
      <Description>"Inf. Assassin Signal"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,128) //2kb should be enough
label(jmpassbar)
label(returnhere)
label(originalcode)
label(exit)
registersymbol(jmpassbar)
aobscan(assbar_AOB,8B 44 18 10 8B 4D E4 89 04 B1 8B 45 E4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [eax+ebx+10],01

originalcode:
mov eax,[eax+ebx+10]
mov ecx,[ebp-1C]

exit:
jmp returnhere

assbar_AOB: //"ACBSP.exe"+C1F546:
jmpassbar:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
jmpassbar:     //"ACBSP.exe"+C1F546:
mov eax,[eax+ebx+10]
mov ecx,[ebp-1C]
//Alt: db 8B 44 18 10 8B 4D E4
unregistersymbol(jmpassbar)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>81</ID>
      <Description>"Instant Charge Assassin Signal"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,128) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(icab3to2jmp)
label(icab2to1jmp1)
label(icab2to1jmp2)
registersymbol(icab3to2jmp)
registersymbol(icab2to1jmp1)
registersymbol(icab2to1jmp2)
aobscan(icab3to2_AOB,C7 46 10 01 00 00 00 89 3E 89 7E 04 89 7E 08)
aobscan(icab2to1_AOB,8B 55 F8 3B 50 04 xx xx xx xx 3B 18)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+10],00000001
cmp dword ptr [esi+30],03
jne exit
mov dword ptr [esi+30],02

originalcode:
//mov [esi+10],00000001

exit:
jmp returnhere

icab3to2_AOB: //"ACBSP.exe"+80F9B2:
icab3to2jmp:
jmp newmem
nop
nop
returnhere:

icab2to1_AOB+6: //"ACBSP.exe"+8106A3:
icab2to1jmp1:
db 90 90

icab2to1_AOB+C: //"ACBSP.exe"+8106A9:
icab2to1jmp2:
db 90 90
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
icab3to2jmp:   //"ACBSP.exe"+80F9B2:
mov [esi+10],00000001
//Alt: db C7 46 10 01 00 00 00
icab2to1jmp1:
db 72 10
icab2to1jmp2:
db 76 0A
unregistersymbol(icab3to2jmp)
unregistersymbol(icab2to1jmp1)
unregistersymbol(icab2to1jmp2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Fellow Assassins - press and HOLD the key THEN MOUSE OVER portrait V2"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256) //2kb should be enough
label(returnhere)
label(start1)
label(start2)
label(checkskilladd)
label(checkskillsub)
label(checkblond1)
label(checkblond2)
label(checkcolor1)
label(checkcolor2)
label(checkcolor3)
label(checkcolor4)
label(checkcolor5)
label(checkcolor6)
label(originalcode)
label(exit)
label(pSkillPtEax)
registersymbol(start1)
registersymbol(pSkillPtEax)
aobscan(assassins_AOB,8B 40 10 6A 20 50 8D 4D D8)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
start2:
mov [pSkillPtEax],eax

checkskilladd:
pushad
push 'L'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkskillsub
mov [eax+10],0A
jmp originalcode

checkskillsub:
pushad
push 'K'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkblond1
mov [eax+10],00
jmp originalcode

checkblond1:
pushad
push 'N'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkblond2
mov word ptr [eax+4],03E0
mov byte ptr [eax+24],00
jmp originalcode

checkblond2:
pushad
push 'M'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor1
mov word ptr [eax+4],0420
mov byte ptr [eax+24],04

checkcolor1:
pushad
push 31     //Key 1
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor2
mov byte ptr [eax+27],00
jmp originalcode

checkcolor2:
pushad
push 32     //Key 2
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor3
mov byte ptr [eax+27],01
jmp originalcode

checkcolor3:
pushad
push 33     //Key 3
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor4
mov byte ptr [eax+27],02
jmp originalcode

checkcolor4:
pushad
push 34     //Key 4
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor5
mov byte ptr [eax+27],03
jmp originalcode

checkcolor5:
pushad
push 35     //Key 5
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor6
mov byte ptr [eax+27],04
jmp originalcode

checkcolor6:
pushad
push 36     //Key 6
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov byte ptr [eax+27],05

originalcode:
mov eax,[eax+10]
push 20

exit:
jmp returnhere

///
pSkillPtEax:
dd 0
///

assassins_AOB: //"ACBSP.exe"+F853C8:
start1:
jmp start2
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
start1: //"ACBSP.exe"+F853C8:
db 8B 40 10 6A 20
//Alt: mov eax,[eax+10]
//Alt: push 20
unregistersymbol(start1)
unregistersymbol(pSkillPtEax)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Skill Point - L to Set 10, K to Set 0"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pSkillPtEax</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Portrait - M to Set Blond1"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>2</ByteLength>
          <Address>pSkillPtEax</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Model - N to Set Blond2"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>1</ByteLength>
          <Address>pSkillPtEax</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Cloth/Cape Color - Key 1 - 6 (00 - 05)"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>1</ByteLength>
          <Address>pSkillPtEax</Address>
          <Offsets>
            <Offset>27</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>91</ID>
      <Description>"Fellow Assassins - press and HOLD the key THEN MOUSE OVER portrait OLD"</Description>
      <Color>808080</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256) //2kb should be enough
label(returnhere)
label(start1)
label(start2)
label(checkskilladd)
label(checkskillsub)
label(checkblond1)
label(checkblond2)
label(checkcolor1)
label(checkcolor2)
label(checkcolor3)
label(checkcolor4)
label(checkcolor5)
label(checkcolor6)
label(originalcode)
label(exit)
label(pSkillPtEsi)
registersymbol(start1)
registersymbol(pSkillPtEsi)
aobscan(assassins_AOB,8B 0C 07 8A 41 1C 8B 4E 10 0F B6 D0)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
start2:
mov [pSkillPtEsi],esi

checkskilladd:
pushad
push 'L'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkskillsub
mov [esi+10],0A
jmp originalcode

checkskillsub:
pushad
push 'K'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkblond1
mov [esi+10],00
jmp originalcode

checkblond1:
pushad
push 'N'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkblond2
mov word ptr [esi+4],03E0
mov byte ptr [esi+24],00
jmp originalcode

checkblond2:
pushad
push 'M'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor1
mov word ptr [esi+4],0420
mov byte ptr [esi+24],04

checkcolor1:
pushad
push 31     //Key 1
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor2
mov byte ptr [esi+27],00
jmp originalcode

checkcolor2:
pushad
push 32     //Key 2
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor3
mov byte ptr [esi+27],01
jmp originalcode

checkcolor3:
pushad
push 33     //Key 3
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor4
mov byte ptr [esi+27],02
jmp originalcode

checkcolor4:
pushad
push 34     //Key 4
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor5
mov byte ptr [esi+27],03
jmp originalcode

checkcolor5:
pushad
push 35     //Key 5
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne checkcolor6
mov byte ptr [esi+27],04
jmp originalcode

checkcolor6:
pushad
push 36     //Key 6
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov byte ptr [esi+27],05

originalcode:
mov ecx,[esi+10]
movzx edx,al

exit:
jmp returnhere

///
pSkillPtEsi:
dd 0
///

assassins_AOB+6: //"ACBSP.exe"+F85C58:
start1:
jmp start2
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
start1: //"ACBSP.exe"+F85C58:
mov ecx,[esi+10]
movzx edx,al
//Alt: db 8B 4E 10 0F B6 D0
unregistersymbol(start1)
unregistersymbol(pSkillPtEsi)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>92</ID>
          <Description>"Skill Point - L to Set 10, K to Set 0"</Description>
          <Color>808080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>pSkillPtEsi</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>93</ID>
          <Description>"Portrait - M to Set Blond1"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>808080</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>2</ByteLength>
          <Address>pSkillPtEsi</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"Model - N to Set Blond2"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>808080</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>1</ByteLength>
          <Address>pSkillPtEsi</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>95</ID>
          <Description>"Cloth/Cape Color - Key 1 - 6 (00 - 05)"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>808080</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>1</ByteLength>
          <Address>pSkillPtEsi</Address>
          <Offsets>
            <Offset>27</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
