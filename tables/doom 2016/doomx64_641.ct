<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Inf. Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOMx64.exe
  Version: 
  Date   : 2016-05-14
  Author : Bl00dWolf

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ammo1,DOOMx64.exe,89 7B 38 89 F8 48 8B 5C 24 30 48 8B 74 24 38) // should be unique
alloc(newmem,$1000,"DOOMx64.exe"+18A3A0E0)

label(code)
label(return)

newmem:

code:
  mov [rbx+38],63
  mov eax,edi
  jmp return

ammo1:
  jmp code
return:
registersymbol(ammo1)

[DISABLE]

ammo1:
  db 89 7B 38 89 F8

unregistersymbol(ammo1)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DOOMx64.exe"+18A3A0E0

"DOOMx64.exe"+18A3A0C4: 8B 71 38                                      -  mov esi,[rcx+38]
"DOOMx64.exe"+18A3A0C7: 45 84 C0                                      -  test r8l,r8l
"DOOMx64.exe"+18A3A0CA: 74 2A                                         -  je DOOMx64.exe+18A3A0F6
"DOOMx64.exe"+18A3A0CC: 48 8B 01                                      -  mov rax,[rcx]
"DOOMx64.exe"+18A3A0CF: FF 90 98 00 00 00                             -  call qword ptr [rax+00000098]
"DOOMx64.exe"+18A3A0D5: 85 F6                                         -  test esi,esi
"DOOMx64.exe"+18A3A0D7: 78 07                                         -  js DOOMx64.exe+18A3A0E0
"DOOMx64.exe"+18A3A0D9: 89 F7                                         -  mov edi,esi
"DOOMx64.exe"+18A3A0DB: 39 C6                                         -  cmp esi,eax
"DOOMx64.exe"+18A3A0DD: 0F 4F F8                                      -  cmovg edi,eax
// ---------- INJECTING HERE ----------
"DOOMx64.exe"+18A3A0E0: 89 7B 38                                      -  mov [rbx+38],edi
"DOOMx64.exe"+18A3A0E3: 89 F8                                         -  mov eax,edi
// ---------- DONE INJECTING  ----------
"DOOMx64.exe"+18A3A0E5: 48 8B 5C 24 30                                -  mov rbx,[rsp+30]
"DOOMx64.exe"+18A3A0EA: 48 8B 74 24 38                                -  mov rsi,[rsp+38]
"DOOMx64.exe"+18A3A0EF: 48 83 C4 20                                   -  add rsp,20
"DOOMx64.exe"+18A3A0F3: 5F                                            -  pop rdi
"DOOMx64.exe"+18A3A0F4: C3                                            -  ret 
"DOOMx64.exe"+18A3A0F5: C3                                            -  ret 
"DOOMx64.exe"+18A3A0F6: 85 F6                                         -  test esi,esi
"DOOMx64.exe"+18A3A0F8: 78 07                                         -  js DOOMx64.exe+18A3A101
"DOOMx64.exe"+18A3A0FA: 89 F7                                         -  mov edi,esi
"DOOMx64.exe"+18A3A0FC: 39 F6                                         -  cmp esi,esi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Inf. HP"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOMx64.exe
  Version: 
  Date   : 2016-05-14
  Author : Bl00dWolf

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infhp,DOOMx64.exe,00 F3 0F 10 74 24 40 F3 0F 11 44 1E 1C) // should be unique
alloc(newmem,$1000,"DOOMx64.exe"+188FF13C)

label(code)
label(return)
label(orig)

newmem:

code:
  cmp [rsi+rbx+30],(float)3
  je orig
  mov [rsi+rbx+1C],(float)9999
  jmp return

orig:
  movss [rsi+rbx+1C],xmm0
  jmp return

infhp+07:
  jmp code
  nop
return:
registersymbol(infhp)

[DISABLE]

infhp+07:
  db F3 0F 11 44 1E 1C

unregistersymbol(infhp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "DOOMx64.exe"+188FF13C

"DOOMx64.exe"+188FF0FE: BA 0F 05 C3 90           -  mov edx,90C3050F
"DOOMx64.exe"+188FF103: 48 8B 01                 -  mov rax,[rcx]
"DOOMx64.exe"+188FF106: 8D 92 F2 FA 3C 6F        -  lea edx,[rdx+6F3CFAF2]
"DOOMx64.exe"+188FF10C: FF 90 18 02 00 00        -  call qword ptr [rax+00000218]
"DOOMx64.exe"+188FF112: 89 83 B8 00 00 00        -  mov [rbx+000000B8],eax
"DOOMx64.exe"+188FF118: F3 0F 58 B3 B0 00 00 00  -  addss xmm6,[rbx+000000B0]
"DOOMx64.exe"+188FF120: F3 0F 10 44 24 44        -  movss xmm0,[rsp+44]
"DOOMx64.exe"+188FF126: 48 8B AC 24 C8 00 00 00  -  mov rbp,[rsp+000000C8]
"DOOMx64.exe"+188FF12E: F3 0F 11 B3 B0 00 00 00  -  movss [rbx+000000B0],xmm6
"DOOMx64.exe"+188FF136: F3 0F 10 74 24 40        -  movss xmm6,[rsp+40]
// ---------- INJECTING HERE ----------
"DOOMx64.exe"+188FF13C: F3 0F 11 44 1E 1C        -  movss [rsi+rbx+1C],xmm0
// ---------- DONE INJECTING  ----------
"DOOMx64.exe"+188FF142: 0F B6 74 24 4C           -  movzx esi,byte ptr [rsp+4C]
"DOOMx64.exe"+188FF147: F3 0F 11 75 00           -  movss [rbp+00],xmm6
"DOOMx64.exe"+188FF14C: 40 84 F6                 -  test sil,sil
"DOOMx64.exe"+188FF14F: 74 40                    -  je DOOMx64.exe+188FF191
"DOOMx64.exe"+188FF151: 48 8B 13                 -  mov rdx,[rbx]
"DOOMx64.exe"+188FF154: 0F 28 CF                 -  movaps xmm1,xmm7
"DOOMx64.exe"+188FF157: 48 89 D9                 -  mov rcx,rbx
"DOOMx64.exe"+188FF15A: FF 92 98 01 00 00        -  call qword ptr [rdx+00000198]
"DOOMx64.exe"+188FF160: 48 8B 13                 -  mov rdx,[rbx]
"DOOMx64.exe"+188FF163: 48 89 D9                 -  mov rcx,rbx
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
