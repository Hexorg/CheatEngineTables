<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>29</ID>
      <Description>"StevenAndrew Bypass Rev 001 AOB"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Crysis 3
//Integrity Check Bypass Rev 001
//Steve Andrew ;)
//Special Thanks: Dark Byte
[enable]
alloc(IntegrityCheckBypass,256)
alloc(OnTheFlyCopy,42352640) //Crysis3.exe image base + 0x1000 - Crysis3.exe image base + 0x2865000
aobscan(IntegrityCheckAddress,0f b6 39 8b f0 c1 ee 18 33 f7 c1 e0 08 33)
label(IntegrityCheckRet)
label(SkipMakingCopy)
label(NotInDumpRange)
label(IntegrityCheckAddy)
registersymbol(IntegrityCheckAddy)

IntegrityCheckBypass:
cmp [OnTheFlyCopy],0
jne SkipMakingCopy

push ecx
lea esi,[Crysis3.exe+1000]
lea edi,[OnTheFlyCopy]
mov ecx,2864000
repe movsb
//Fix this bypass hook itself in copy :D
mov ecx,IntegrityCheckAddress
sub ecx,Crysis3.exe+1000
lea edi,[OnTheFlyCopy]
mov [edi+ecx],8b39b60f //movzx edi,byte ptr [ecx]
mov byte ptr [edi+ecx+4],f0 //mov esi,eax
pop ecx

SkipMakingCopy:
cmp ecx,Crysis3.exe+1000
jb NotInDumpRange
cmp ecx,Crysis3.exe+2865000
ja NotInDumpRange

sub ecx,Crysis3.exe+1000
add ecx,OnTheFlyCopy

NotInDumpRange:
movzx edi,byte ptr [ecx]
mov esi,eax
jmp IntegrityCheckRet

OnTheFlyCopy:
dd 0

IntegrityCheckAddress:
IntegrityCheckAddy:
jmp IntegrityCheckBypass
IntegrityCheckRet:

[disable]

//IntegrityCheckAddy:
//movzx edi,byte ptr [ecx]
//mov esi,eax

//dealloc(IntegrityCheckBypass)
//dealloc(OnTheFlyCopy)
//unregistersymbol(IntegrityCheckAddy)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Infinite Energy"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Crysis3.exe
  Version: 
  Date   : 2016-09-11
  Author : rampant_uterus

  This script works fine. 1st time. Total noob.
  Any issues, feel free to fix
}

[ENABLE]

aobscanmodule(3nrgy,crysis3.exe,D9 1E 5E 83 C4 10) // should be unique
alloc(newmem,2048)

label(code)
label(return)

newmem:

code:
  nop 
  nop 
  pop esi
  add esp,10
  jmp return

3nrgy:
  jmp code
  nop
return:
registersymbol(3nrgy)

[DISABLE]

3nrgy:
  db D9 1E 5E 83 C4 10

unregistersymbol(3nrgy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "crysis3.exe"+115D6D1

"crysis3.exe"+115D6B5: D9 C9              -  fxch st(1)
"crysis3.exe"+115D6B7: D9 5C 24 18        -  fstp dword ptr [esp+18]
"crysis3.exe"+115D6BB: D9 44 24 18        -  fld dword ptr [esp+18]
"crysis3.exe"+115D6BF: D9 E1              -  fabs 
"crysis3.exe"+115D6C1: D9 5C 24 18        -  fstp dword ptr [esp+18]
"crysis3.exe"+115D6C5: D9 44 24 18        -  fld dword ptr [esp+18]
"crysis3.exe"+115D6C9: D9 CA              -  fxch st(2)
"crysis3.exe"+115D6CB: DE C1              -  faddp 
"crysis3.exe"+115D6CD: DE C1              -  faddp 
"crysis3.exe"+115D6CF: DE C9              -  fmulp st(1),st(0)
// ---------- INJECTING HERE ----------
"crysis3.exe"+115D6D1: 90                 -  nop 
"crysis3.exe"+115D6D2: 90                 -  nop 
"crysis3.exe"+115D6D3: 5E                 -  pop esi
"crysis3.exe"+115D6D4: 83 C4 10           -  add esp,10
// ---------- DONE INJECTING  ----------
"crysis3.exe"+115D6D7: C2 04 00           -  ret 0004
"crysis3.exe"+115D6DA: CC                 -  int 3 
"crysis3.exe"+115D6DB: CC                 -  int 3 
"crysis3.exe"+115D6DC: CC                 -  int 3 
"crysis3.exe"+115D6DD: CC                 -  int 3 
"crysis3.exe"+115D6DE: CC                 -  int 3 
"crysis3.exe"+115D6DF: CC                 -  int 3 
"crysis3.exe"+115D6E0: 51                 -  push ecx
"crysis3.exe"+115D6E1: D9 EE              -  fldz 
"crysis3.exe"+115D6E3: 56                 -  push esi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"Inf Ammo (Ammo required before activating)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Crysis3.exe
  Version: 
  Date   : 2016-09-12
  Author : rampant_uterus

  This script gives infinite ammo to all gun types. Requires "special" ammo
  on a weapon before activation to make it infinite. To pickup special ammo,
  disable cheat and pickup special ammo for your current gun, THEN re-enable
  for Infinite Special Ammo for your current weapon. If you've already got
  special ammo for said weapon type, it will already be infinite when you First
  Enable this cheat
}

[ENABLE]

aobscanmodule(_ammo1,crysis3.exe,89 42 04 B0 01) // should be unique
alloc(newmem,2048)

label(code)
label(return)

newmem:

code:
  nop 
  nop 
  nop 
  mov al,01
  jmp return

_ammo1:
  jmp code
return:
registersymbol(_ammo1)

[DISABLE]

_ammo1:
  db 89 42 04 B0 01

unregistersymbol(_ammo1)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "crysis3.exe"+102A127

"crysis3.exe"+102A114: 5B                 -  pop ebx
"crysis3.exe"+102A115: 83 C4 08           -  add esp,08
"crysis3.exe"+102A118: C3                 -  ret 
"crysis3.exe"+102A119: 8D 14 D7           -  lea edx,[edi+edx*8]
"crysis3.exe"+102A11C: 85 D2              -  test edx,edx
"crysis3.exe"+102A11E: 74 CF              -  je crysis3.exe+102A0EF
"crysis3.exe"+102A120: 8B 44 24 24        -  mov eax,[esp+24]
"crysis3.exe"+102A124: 5F                 -  pop edi
"crysis3.exe"+102A125: 5E                 -  pop esi
"crysis3.exe"+102A126: 5D                 -  pop ebp
// ---------- INJECTING HERE ----------
"crysis3.exe"+102A127: 90                 -  nop
"crysis3.exe"+102A128: 90                 -  nop
"crysis3.exe"+102A129: 90                 -  nop
"crysis3.exe"+102A12A: B0 01              -  mov al,01
// ---------- DONE INJECTING  ----------
"crysis3.exe"+102A12C: 5B                 -  pop ebx
"crysis3.exe"+102A12D: 83 C4 08           -  add esp,08
"crysis3.exe"+102A130: C3                 -  ret 
"crysis3.exe"+102A131: 6A 01              -  push 01
"crysis3.exe"+102A133: 6A 01              -  push 01
"crysis3.exe"+102A135: 8D 54 24 24        -  lea edx,[esp+24]
"crysis3.exe"+102A139: 52                 -  push edx
"crysis3.exe"+102A13A: 8D 44 24 1C        -  lea eax,[esp+1C]
"crysis3.exe"+102A13E: 50                 -  push eax
"crysis3.exe"+102A13F: 56                 -  push esi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"Nades &amp; Arrows, can crash"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Crysis3.exe
  Version: 
  Date   : 2016-09-12
  Author : rampant_uterus

  This script sometimes crashes. I don't know why. You tell me.
}

[ENABLE]

aobscanmodule(_naddies,crysis3.exe,89 30 EB 0F 8D 4C 24 14) // should be unique
alloc(newmem,2048)

label(code)
label(return)

newmem:

code:
  nop 
  nop 
  jmp crysis3.exe+26B6A9
  lea ecx,[esp+14]
  jmp return

_naddies:
  jmp code
  nop
  nop
  nop
return:
registersymbol(_naddies)

[DISABLE]

_naddies:
  db 89 30 EB 0F 8D 4C 24 14

unregistersymbol(_naddies)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "crysis3.exe"+26B696

"crysis3.exe"+26B67D: 85 C0                 -  test eax,eax
"crysis3.exe"+26B67F: 7E 19                 -  jle crysis3.exe+26B69A
"crysis3.exe"+26B681: 8B F0                 -  mov esi,eax
"crysis3.exe"+26B683: 3B C5                 -  cmp eax,ebp
"crysis3.exe"+26B685: 7C 02                 -  jl crysis3.exe+26B689
"crysis3.exe"+26B687: 8B F5                 -  mov esi,ebp
"crysis3.exe"+26B689: 8D 44 24 14           -  lea eax,[esp+14]
"crysis3.exe"+26B68D: 50                    -  push eax
"crysis3.exe"+26B68E: 8D 4F 28              -  lea ecx,[edi+28]
"crysis3.exe"+26B691: E8 3A 43 00 00        -  call crysis3.exe+26F9D0
// ---------- INJECTING HERE ----------
"crysis3.exe"+26B696: 90                    -  nop 
"crysis3.exe"+26B697: 90                    -  nop 
"crysis3.exe"+26B698: EB 0F                 -  jmp crysis3.exe+26B6A9
"crysis3.exe"+26B69A: 8D 4C 24 14           -  lea ecx,[esp+14]
// ---------- DONE INJECTING  ----------
"crysis3.exe"+26B69E: 51                    -  push ecx
"crysis3.exe"+26B69F: 8D 4F 28              -  lea ecx,[edi+28]
"crysis3.exe"+26B6A2: E8 29 43 00 00        -  call crysis3.exe+26F9D0
"crysis3.exe"+26B6A7: 89 28                 -  mov [eax],ebp
"crysis3.exe"+26B6A9: 8B B7 20 01 00 00     -  mov esi,[edi+00000120]
"crysis3.exe"+26B6AF: C6 87 35 01 00 00 01  -  mov byte ptr [edi+00000135],01
"crysis3.exe"+26B6B6: 3B B7 24 01 00 00     -  cmp esi,[edi+00000124]
"crysis3.exe"+26B6BC: 74 18                 -  je crysis3.exe+26B6D6
"crysis3.exe"+26B6BE: 8B FF                 -  mov edi,edi
"crysis3.exe"+26B6C0: 8B 0E                 -  mov ecx,[esi]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of fstp dword ptr [esi]</Description>
      <Address>3815D6D1</Address>
      <ModuleName>crysis3.exe</ModuleName>
      <ModuleNameOffset>115D6D1</ModuleNameOffset>
      <Before>
        <Byte>C1</Byte>
        <Byte>DE</Byte>
        <Byte>C1</Byte>
        <Byte>DE</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>1E</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
        <Byte>C2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of fstp dword ptr [esi]</Description>
      <Address>3815D6D1</Address>
      <ModuleName>crysis3.exe</ModuleName>
      <ModuleNameOffset>115D6D1</ModuleNameOffset>
      <Before>
        <Byte>C1</Byte>
        <Byte>DE</Byte>
        <Byte>C1</Byte>
        <Byte>DE</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>1E</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
        <Byte>C2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of fstp dword ptr [esi]</Description>
      <Address>3815D6D1</Address>
      <ModuleName>crysis3.exe</ModuleName>
      <ModuleNameOffset>115D6D1</ModuleNameOffset>
      <Before>
        <Byte>C1</Byte>
        <Byte>DE</Byte>
        <Byte>C1</Byte>
        <Byte>DE</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>1E</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
        <Byte>C2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [eax],esi</Description>
      <Address>3726B696</Address>
      <ModuleName>crysis3.exe</ModuleName>
      <ModuleNameOffset>26B696</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>3A</Byte>
        <Byte>43</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>0F</Byte>
        <Byte>8D</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [edx+04],eax</Description>
      <Address>3802A127</Address>
      <ModuleName>crysis3.exe</ModuleName>
      <ModuleNameOffset>102A127</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>24</Byte>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>5D</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>42</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>5B</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>energy</Name>
      <Address>0B3388FD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_naddies</Name>
      <Address>3726B696</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>IntegrityCheckAddy</Name>
      <Address>39488ED0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>3nrgy</Name>
      <Address> 3815D6D1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ammo1</Name>
      <Address> 3802A127</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
