<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Mono Scripts"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
 LaunchMonoDataCollector()
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Enable Debug Functions"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
assert(DebugHandler:OnKeyDown+79,0F B6 47 18 85 C0)
alloc(newmem,2048,DebugHandler:OnKeyDown+79) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,1
test eax,eax

exit:
jmp returnhere

DebugHandler:OnKeyDown+79:
jmp newmem
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
DebugHandler:OnKeyDown+79:
db 0F B6 47 18 85 C0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Super Dupelicants(On Generation)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,MinionStartingStats:GenerateAttributes+25b) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov rax,[rbp-00000158]
mov rbx,#99
cmp r14,0
jne exit
mov rdi,#891

exit:
jmp returnhere

MinionStartingStats:GenerateAttributes+25b:
jmp newmem
nop
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
MinionStartingStats:GenerateAttributes+25b:
mov rax,[rbp-00000158]
//Alt: db 48 8B 85 A8 FE FF FF
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Disable Basic Needs"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
assert(Klei.AI:AmountInstance:SetValue+d0,F3 0F 11 6E 48)
alloc(newmem,2048,Klei.AI:AmountInstance:SetValue+d0) 
label(returnhere)
label(originalcode)
label(exit)
label(StatToggleFlags)
registersymbol(StatToggleFlags)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss [rsi+48],xmm5
push rax
push rcx
push rdx
push r8
push r9
mov rax,[rsi+10]
test rax,rax
je exit
mov rax,[rax+10]
test rax,rax
je exit
add rax,14
mov [_StringStore],rax
mov rcx,rax
mov rdx,_Bladder
call wcscmp
cmp rax,0
jne _Check2

cmp byte ptr [StatToggleFlags],1
jne @F
mov dword [rsi+48],(float)0
@@:

_Check2:
mov rcx,[_StringStore]
mov rdx,_Stress
call wcscmp
cmp rax,0
jne _Check3

cmp byte ptr [StatToggleFlags+1],1
jne @F
mov dword [rsi+48],(float)0
@@:

_Check3:
mov rcx,[_StringStore]
mov rdx,_Calories
call wcscmp
cmp rax,0
jne exit

cmp byte ptr [StatToggleFlags+2],1
jne @F
mov dword [rsi+48],(float)3000000
@@:

exit:
pop r9
pop r8
pop rdx
pop rcx
pop rax
jmp returnhere


_Bladder:
db 42 00 6C 00 61 00 64 00 64 00 65 00 72 00 00 00

_Stress:
db 53 00 74 00 72 00 65 00 73 00 73 00 00 00

_Calories:
db 43 00 61 00 6C 00 6F 00 72 00 69 00 65 00 73 00 00 00

StatToggleFlags:
db 00 00 00

_StringStore:

Klei.AI:AmountInstance:SetValue+d0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Klei.AI:AmountInstance:SetValue+d0:
db F3 0F 11 6E 48
unregistersymbol(StatToggleFlags)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7</ID>
              <Description>"No Stress"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>StatToggleFlags+1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>8</ID>
              <Description>"No Hunger"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>StatToggleFlags+2</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Empty Bladder"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>StatToggleFlags</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
