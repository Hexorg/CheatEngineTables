<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Money and Ammo"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(akce)
registersymbol(akce)
aobscan(aobakce,89 41 0C B0 01 5D C2 04 00 32 C0 5D C2 04 00 CC CC 55 8B EC 56 8B F1 8B 4D 0C 85 C9)

newmem:
mov [ecx+0C],(int)999999
mov al,01

originalcode:
//mov [ecx+0C],eax
//mov al,01

exit:
jmp returnhere

aobakce:
akce:
jmp newmem
returnhere:


 
 
[DISABLE]
dealloc(newmem)
akce:
mov [ecx+0C],eax
mov al,01
//Alt: db 89 41 0C B0 01
unregistersymbol(akce)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Crafting Ingridients"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(Ingridients)
registersymbol(Ingridients)
aobscan(aobingridients,01 5E 0C 5F 5E B0 01 5B 5D C2 08 00 5F 5E 32 C0 5B 5D C2 08 00 CC CC CC CC CC CC CC CC)

newmem:
mov [esi+0C],(int)99
pop edi
pop esi

originalcode:
//add [esi+0C],ebx
//pop edi
//pop esi

exit:
jmp returnhere

aobingridients:
Ingridients:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Ingridients:
add [esi+0C],ebx
pop edi
pop esi
//Alt: db 01 5E 0C 5F 5E
unregistersymbol(Ingridients)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Assassins Signal"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,128)
label(returnhere)
label(originalcode)
label(exit)
label(icab3to2jmp)
label(icab2to1jmp1)
label(icab2to1jmp2)
registersymbol(icab3to2jmp)
registersymbol(icab2to1jmp1)
registersymbol(icab2to1jmp2)
aobscan(icab3to2_AOB,C7 47 10 01 00 00 00 89 07 89 47 04 89 47 08)
aobscan(icab2to1_AOB,8B 55 F8 3B 50 04 xx xx xx xx 3B 18)

newmem:
mov [edi+10],00000001
cmp dword ptr [edi+30],03
jne exit
mov dword ptr [edi+30],02

originalcode:
//mov [edi+10],00000001

exit:
jmp returnhere

///

icab3to2_AOB: //"ACRSP.exe"+E98734:
icab3to2jmp:
jmp newmem
nop
nop
returnhere:

icab2to1_AOB+6: //"ACRSP.exe"+E99710:
icab2to1jmp1:
db 90 90

icab2to1_AOB+C: //"ACRSP.exe"+E99716:
icab2to1jmp2:
db 90 90


 
 
[DISABLE]
dealloc(newmem)
icab3to2jmp:   //"ACRSP.exe"+E98734:
db C7 47 10 01 00 00 00
//Alt: mov [edi+10],00000001
icab2to1jmp1:  //"ACRSP.exe"+E99710:
db 72 10
icab2to1jmp2:  //"ACRSP.exe"+E99716:
db 76 0A
unregistersymbol(icab3to2jmp)
unregistersymbol(icab2to1jmp1)
unregistersymbol(icab2to1jmp2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>70</ID>
      <Description>"No Notoriety"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(babas)
registersymbol(babas)
aobscan(noto,F3 0F 11 46 0C E8 XX XX XX XX 8A 8E A4 00 00 00 8D 96 E4 00 00 00 88 48 0C 52 8B C8 C7 40 08 02 00 00 00 E8 XX XX XX XX F3 0F 10 46 0C)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+0C],(float)0

originalcode:
//movss [esi+0C],xmm0

exit:
jmp returnhere

noto:
babas:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
aobscan(noto,E9 XX XX XX XX E8 XX XX XX XX 8A 8E A4 00 00 00 8D 96 E4 00 00 00 88 48 0C 52 8B C8 C7 40 08 02 00 00 00 E8 XX XX XX XX F3 0F 10 46 0C)
dealloc(newmem)
babas:
movss [esi+0C],xmm0

unregistersymbol(babas)
//Alt: db F3 0F 11 46 0C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Morale"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(morale)
registersymbol(morale)
aobscan(infinitemorale_aob,01 9E 34 12 00 00 57 E8 95 79 EA FF 01 98 5C 02 00 00 83 7D 0C 00 74 3B E8 34 6F 01 00)

newmem:
mov [esi+00001234],(int)99999

originalcode:
//add [esi+00001234],ebx

exit:
jmp returnhere

infinitemorale_aob:                                       //"ACRSP.exe"+10181CF:
morale:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
morale:                                                   //"ACRSP.exe"+10181CF:
add [esi+00001234],ebx
//Alt: db 01 9E 34 12 00 00
unregistersymbol(morale)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Health"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(health)
registersymbol(health)
aobscan(playerhealth_aob,89 46 58 E8 FF 7A FF FE 50 E8 59 E7 75 FF 83 C4 08 85 C0 74 0D 8B 56 58 8B CE 89 50 20 E8 C5)

newmem:
mov [esi+58],(int)900
call ACRSP.exe+76C1B0

originalcode:
//mov [esi+58],eax
//call ACRSP.exe+76C1B0

exit:
jmp returnhere

playerhealth_aob:                                         //"ACRSP.exe"+17746A9:
health:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
dealloc(newmem)
health:                                                   //"ACRSP.exe"+17746A9:
mov [esi+58],eax
call ACRSP.exe+76C1B0
//Alt: db 89 46 58 E8 FF 7A FF FE
unregistersymbol(health)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Stealth"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
label(Stealth)
registersymbol(Stealth)
aobscan(OurAddress,5EB0015B8BE55DC2040057 );//Byte Pattern

OurAddress-6://Found address subtract 0x16. Thats the location
Stealth:
db 80 7D FF EF//Bytes we wanna write

[Disable]
Stealth:
db 80 7D FF 00//Default bytes
unregistersymbol(Stealth)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Kill Civilians"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[Enable]
label(Civilian)
registersymbol(Civilian)
aobscan(OurAddress,B8020000005E5DC20400558BEC56);//Byte Pattern

OurAddress-16://Found address subtract 0x16. Thats the location
Civilian:
db 83 7E 58 EF//Bytes we wanna write

[Disable]
Civilian:
db 83 7E 58 00//Default bytes
unregistersymbol(Civilian)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>51</ID>
      <Description>"Fast Assassin Level Up"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(fast)
registersymbol(fast)
aobscan(fastassassinlevelup_aob,8B 4F 14 03 CB 3B C8 77 02 8B C1 89 47 14 8B 0D DC BF CA 02 8A 47 5C 8B D9 3A 81)


newmem:
mov ecx,[edi+14]
mov ecx,(int)15500

originalcode:
//mov ecx,[edi+14]
//add ecx,ebx

exit:
jmp returnhere

fastassassinlevelup_aob:                                   //"ACRSP.exe"+F1DDB5:
fast:
jmp newmem
returnhere:




[DISABLE]
dealloc(newmem)
fast:                                                      //"ACRSP.exe"+F1DDB5:
mov ecx,[edi+14]
add ecx,ebx
//Alt: db 8B 4F 14 03 CB
unregistersymbol(fast)
//1.8B 4F 14 03 CB 3B 4F 18 76 07 8B CF E8 EF 41 E4 FF 8B 57 14 8B 02 8B 4D 08 89 01
//2.8B 4F 14 03 CB 3B C8 77 02 8B C1 89 47 14 8B 0D DC BF CA 02 8A 47 5C 8B D9 3A 81
//3.8B 4F 14 03 CB 84 F6 79 21 50 E8 1C FD FF FF 8B F0 85 F6 0F 84 9E 00 00 00 8B 4E
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>72</ID>
      <Description>"Skill Points For Assassins"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(skills)
registersymbol(skills)
aobscan(skillpoints_aob,29 5E 18 8B 3F 8B 47 08 8B 0F C1 F8 1F 56 23 C8 E8 21 9B 19 00 8B 7D FC 56 8B CF E8)

newmem:
mov [esi+18],(int)1
mov edi,[edi]

originalcode:
//sub [esi+18],ebx
//mov edi,[edi]

exit:
jmp returnhere

skillpoints_aob:                                           //"ACRSP.exe"+F1CCEA:
skills:
jmp newmem
returnhere:


 
 
[DISABLE]
dealloc(newmem)
skills:                                                    //"ACRSP.exe"+F1CCEA:
sub [esi+18],ebx
mov edi,[edi]
//Alt: db 29 5E 18 8B 3F
unregistersymbol(skills)
//29 5E 18 8B 3F 8B 47 08 8B 0F C1 F8 1F 56 23 C8 E8 21 9B 19 00 8B 7D FC 56 8B CF E8
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>48</ID>
      <Description>"Freeze Countdown Timer 25 sec."</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
globalalloc(Countdown,128)
label(returnhere)
label(exit)
label(timehack)

aobscan(RetCheck1,D9 5D FC 80 BE FC 00 00 00 00 74 11 )
aobscan(RetCheck2,D9 5D FC 0F B6 46 66 D9 45 FC 50 51 )
aobscan(RetCheck3,8D 8E 38 02 00 00 E8 xx xx xx xx 51 D9 1C 24 E8 )
aobscan(RetCheck4,6A 01 8b ce E8 xx xx xx xx 51 D9 1C 24 E8 )
aobscan(CountdownAOB,8B 41 1C 8B 38 8B 70 04 xx xx xx xx xx 08 )

Countdown:
cmp [ebp+04],RetCheck1
je short timehack
cmp [ebp+04],RetCheck2
je short timehack
cmp [ebp+04],RetCheck3+0b
je short timehack
cmp [ebp+04],RetCheck4+09
je short timehack
jmp short exit

timehack:
mov [ecx+08],edi
add [ecx+08],B71B0      // always 25 seconds left, (25 * 30000 = 750000 = B71B0 (hex)

exit:
mov eax,[ecx+0C] //original
mov edx,[ecx+08] //original
jmp returnhere

CountdownAOB+08:
jmp Countdown
db 08
returnhere:

[DISABLE]
dealloc(newmem)
aobscan(CountdownAOB,8B 41 1C 8B 38 8B 70 04 xx xx xx xx xx 08 )
CountdownAOB+08:
mov eax,[ecx+0C]
mov edx,[ecx+08]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>50</ID>
      <Description>"Freeze Stopwatch Timer 7.77 sec."</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(stopwatch,64)
label(returnhere)
label(exit)
aobscan(RetCheck, e8 xx xx xx xx 8d 8b 08 01 00 00 e8 xx xx xx xx 51 )
aobscan(StopwatchAOB, 8B 51 1C 8B 02 8B 52 04 xx xx xx xx xx 89 45 F8 )

stopwatch:
cmp [ebp+4],RetCheck+10
jne short exit
mov [ecx],eax
sub [ecx],38E8C // 7.77 seconds * 30000 = 233100 = 38E8C(hex)

exit:
sub eax,[ecx] //original
sbb edx,[ecx+04] //original
jmp returnhere

StopwatchAOB+8:
jmp stopwatch
returnhere:

[DISABLE]
aobscan(StopwatchAOB, 8B 51 1C 8B 02 8B 52 04 xx xx xx xx xx 89 45 F8 )
StopwatchAOB+8:
sub eax,[ecx]
sbb edx,[ecx+04]
//Alt: db 2B 01 1B 51 04
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Press F12 For Cheats Below"</Description>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(teleportus,2048)
fullaccess("ACRSP.exe"+19,16)
label(returnhere)
label(originalcode)
label(exit)
label(dziesiec)
label(mojeaxsiu)
aobscan(codeteleport, 0f 55 ca 0f 56 c1 0f 29 85 20 ff ff ff)

teleportus:
cmp byte ptr ["ACRSP.exe"+19],1
jne short originalcode

mov byte ptr ["ACRSP.exe"+19],0
movss xmm2,[eax+38]
addss xmm2,[dziesiec]
movss [eax+38],xmm2

originalcode:

mov [mojeaxsiu],eax
lea eax,[eax+38]
mov dword ptr ["ACRSP.exe"+21],eax
mov eax,[mojeaxsiu]

movaps xmm2,[eax+30]
movaps xmm1,xmm0

exit:
jmp returnhere
dziesiec:
dd (float)15                ///jump 15 feets
mojeaxsiu:
dd 00

//"ACRSP.exe"+7CF205:
codeteleport-b:
jmp teleportus
nop
nop
returnhere:

[DISABLE]
dealloc(teleportus)
aobscan(codeteleport, 0f 55 ca 0f 56 c1 0f 29 85 20 ff ff ff)
//"ACRSP.exe"+7CF205:
codeteleport-b:
movaps xmm2,[eax+30]
movaps xmm1,xmm0
//Alt: db 0F 28 50 30 0F 28 C8
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Teleport 15 Feets Up [moving]"</Description>
      <Color>000000</Color>
      <VariableType>Byte</VariableType>
      <Address>"ACRSP.exe"+19</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>85</Key>
          </Keys>
          <Value>1</Value>
          <Description>Teleport 15 Feets Up [moving]</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Teleport 30 Feets Up"</Description>
      <Color>000000</Color>
      <VariableType>Float</VariableType>
      <Address>"ACRSP.exe"+21</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Increase Value</Action>
          <Keys>
            <Key>73</Key>
          </Keys>
          <Value>30</Value>
          <Description>Teleport 30 Feets Up</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Teleport 30 Feets Down"</Description>
      <Color>000000</Color>
      <VariableType>Float</VariableType>
      <Address>"ACRSP.exe"+21</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Decrease Value</Action>
          <Keys>
            <Key>75</Key>
          </Keys>
          <Value>30</Value>
          <Description>Teleport 30 Feets Down</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>39</ID>
      <Description>"Teleport 300 Feets Up"</Description>
      <Color>000000</Color>
      <VariableType>Float</VariableType>
      <Address>"ACRSP.exe"+21</Address>
      <Offsets>
        <Offset>0</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Increase Value</Action>
          <Keys>
            <Key>79</Key>
          </Keys>
          <Value>300</Value>
          <Description>Teleport 300 Feets Up</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of fstp dword ptr [esi+000000B8],1</Description>
      <Address>0127C085</Address>
      <ModuleName>ACRSP.exe</ModuleName>
      <ModuleNameOffset>E7C085</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>08</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9E</Byte>
        <Byte>B8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>5D</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>nonotoriety</Name>
      <Address>1CDE0023</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Countdown</Name>
      <Address>0F700000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
