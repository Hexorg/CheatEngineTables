<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="11">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"[X] &lt;== X3 - Reunion V2.5 Script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : X3 - Reunion
 Game Version  : 2.5
 Script Version: 1.0
 CE Version    : 6.1
 Release date  : 03-Jul-2011
 Author        : Recifense
 Features:
 - God Mode (including shields)
 - Laserpower
===========================================
}

//=========================================
[ENABLE]
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(X3.EXE+0ea47a,8b 0d 8c cf 61 00)
assert(X3.EXE+0cbc75,29 96 ec 00 00 00)
assert(X3.EXE+0e794d,01 90 24 01 00 00)
assert(X3.EXE+0e65a7,0f b7 41 48 53)
assert(X3.EXE+0e66e2,29 47 04 ?? ?? 33 ed)
assert(X3.EXE+0e66a2,?? ?? 89 71 04)
assert(X3.EXE+08d33b,03 7a 0c 8b c3)

//=========================================
alloc(MyCode,1024)
//=========================================
// Declaration section
label(_MonPilot)
label(_BackMP)
label(_ExitMP)
label(_GodMode)
label(_BackGM)
label(_ExitGM)
label(_MonLaser)
label(_BackML)
label(_ExitML)
label(_MonShip)
label(_BackMSp)
label(_MonShield)
label(_BackMS)
label(_ExitMS)
label(_MonShield1)
label(_BackMS1)
label(_ExitMS1)
label(pPilot)
label(pShip)
label(pShields)
label(pLaser)
label(pShipS)
label(pShield)
label(iEnableGM)
label(iEnableML)
label(iScriptSize)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pPilot)
registersymbol(pShip)
registersymbol(pShields)
registersymbol(pShield)
registersymbol(pLaser)
registersymbol(iEnableGM)
registersymbol(iEnableML)

//=========================================
MyCode:
//========================================= ok
// This code monitors the playerÂ´s pilot and current ship
// Most of the info for debugging
_MonPilot:
 mov ecx,[X3.EXE+21cf8c]           // Original code
 mov [pPilot],ecx                  // Save ptr for debugging
 mov edi,[ecx+38]                  // Get ptr to Ship
 mov [pShip],edi                   // Save ptr for debugging
 or edi,edi                        // Valid pointer?
 jz _ExitMP                        // Jump if false

 mov ecx,[edi+50]                  // Get ptr to Laser
 mov [pLaser],ecx                  // Save ptr for debugging (otherinfo)
 or ecx,ecx                        // Valid pointer?
 jz _ExitMP                        // Jump if false

 mov edi,[edi]                     // Get ptr to Shields
 mov [pShields],edi                // Save ptr for debugging

_ExitMP:
 mov ecx,[X3.EXE+21cf8c]           // Original code
 jmp _BackMP                       // Back to main code

//=========================================
// God Mode for player's ship
_GodMode:
 cmp dword ptr [iEnableGM],0
 je _ExitGM                        // Jump if feature is disabled

 cmp esi,[pShip]                   // Get ptr to other info
 jne _ExitGM                       // Jump if true

 xor edx,edx                       // make value2decrease = 0

_ExitGM:
 sub [esi+000000ec],edx            // Original code
 jmp _BackGM                       // Back to main code

//=========================================
_MonLaser:
 cmp dword ptr [iEnableML],0
 je _ExitML                        // Jump if feature is disabled

 cmp eax,[pLaser]                  // PlayerÂ´s ship's laser?
 jne _ExitML                       // Jump if false

 xor edx,edx                       // make value2decrease = 0

_ExitML:
 add [eax+00000124],edx            // Original code
 jmp _BackML                       // Back to main code

//=========================================
// This code identifies the ship for _MonShield and
// _MonShield1 scripts
_MonShip:
 mov [pShipS],ecx                  // Save ptr for further use

 movzx eax,word ptr [ecx+48]       // Original code
 push ebx                          // Original code
 jmp _BackMSp                      // Back to main code

//=========================================
_MonShield:
 push ecx

 cmp dword ptr [iEnableGM],0
 je _ExitMS                        // Jump if feature is disabled

 mov ecx,[pShipS]                  // Get ship structure
 cmp ecx,[pShip]                   // Is it the player's ship?
 jne _ExitMS                       // Jump if true

 xor eax,eax                       // make value2decrease = 0

 mov [pShield],edi                 // Save ptr for debugging

_ExitMS:
 pop ecx

 sub [edi+04],eax                  // Original code
 add ebx,ebp                       // Original code
 jmp _BackMS                       // Back to main code

//=========================================
_MonShield1:
 push esi
 push ecx

 cmp dword ptr [iEnableGM],0
 je _ExitMS1                       // Jump if feature is disabled

 mov ecx,[pShipS]                  // Get ship structure
 cmp ecx,[pShip]                   // Is it the player's ship?
 jne _ExitMS1                      // Jump if true

 mov esi,03e80000                  // 64K * 1000 = 100%

_ExitMS1:
 pop  ecx

 add ebx,eax                       // Original code
 mov [ecx+04],esi                  // Original code
 pop esi
 jmp _BackMS1                      // Back to main code

//=========================================
 db '=============&gt;'
 db 'CE6.1 Script by Recifense 070311'
//=========================================
// Variables
iEnableGM:
 dd 1
iEnableML:
 dd 1
pPilot:
 dd 0
pShip:
 dd MyCode
pShipS:
 dd MyCode
pShields:
 dd 0
pShield:
 dd 0
pLaser:
 dd MyCode
iScriptSize:
 dd iEnableGM - MyCode

//=========================================
// Hacking Points

X3.EXE+0ea47a:
 jmp _MonPilot
 nop
_BackMP:

X3.EXE+0cbc75:
 jmp _GodMode
 nop
_BackGM:

X3.EXE+0e794d:
 jmp _MonLaser
 nop
_BackML:

X3.EXE+0e65a7:
 jmp _MonShip
_BackMSp:

X3.EXE+0e66e2:
 jmp _MonShield
_BackMS:

X3.EXE+0e66a2:
 jmp _MonShield1
_BackMS1:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
X3.EXE+0ea47a:
 mov ecx,[X3.EXE+21cf8c]

X3.EXE+0cbc75:
 sub [esi+000000EC],edx

X3.EXE+0e794d:
 add [eax+00000124],edx

X3.EXE+0e65a7:
 movzx eax,word ptr [ecx+48]
 push ebx

X3.EXE+0e66e2:
 sub [edi+04],eax
 add ebx,ebp

X3.EXE+0e66a2:
 add ebx,eax
 mov [ecx+04],esi

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pPilot)
unregistersymbol(pShip)
unregistersymbol(pShields)
unregistersymbol(pShield)
unregistersymbol(pLaser)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableML)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
X3 Reunion v2.5

Credits = integer (not aligned)	(no fast or hyper scan)

static pPilot = [0061CF8C]

struct PLAYER (PILOT):	(ok)
0000 = i1
0004 = i1
0014 = 012b95c0
0018 = 012b9578
0038 = pShip
0040 = iTotalLaserShots
0044 = iTotalMissileShots
0048 = iLaserShots   (on target)
004c = iMissileShots (on target)
0054 = iKMsTraveled

struct SHIP: (ok)
000c = pTypeName
0050 = pOtherInfo
00ec = iHullHP

struct OTHERINFO:
0000 = pShields
0124 = iLaserPower (Display*1000)

struct SHIELDS:	 (ok)
000c = pTypeName
0050 = pShield
0054 = pShip

struct SHIELD:
0000 = i0
0004 = i%Shield (100% = 64Kb * 1000 = 65536000 = 0x03E80000)
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Enable/Disable God Mode ==&gt; (1/0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Enable/Disable Unlimited Laserpower ==&gt; (1/0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableML</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>MyCode</Name>
      <Address>019A0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPilot</Name>
      <Address>019A0138</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pShip</Name>
      <Address>019A013C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pShields</Name>
      <Address>019A0144</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pShield</Name>
      <Address>019A0148</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pLaser</Name>
      <Address>019A014C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGM</Name>
      <Address>019A0130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableML</Name>
      <Address>019A0134</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : X3 - Reunion
 Game Version  : 2.5
 Script Version: 1.0
 CE Version    : 6.1
 Release date  : 03-Jul-2011
 Author        : Recifense
 Features:
 - God Mode (including shields)
 - Laserpower
===========================================
1) GOD MODE: It includes unlimited shield power for player's ship;
2) LASERPOWER: Unlimited laser power for the player's ship;
[TIP] Money is very easy to find (just follow these steps when buying or selling something). 
a) Unckeck the "Fast Scan" mode option;
b) Use FIRST SCAN to look for a 4 Bytes value;
c) Make the value change and use NEXT SCAN to look for the new value;
d) Repeat a) and b) until you find the maximum of 2 addresses;
e) Change the money to 999000000 in both addresses;
That's it.
</Comments>
</CheatTable>
