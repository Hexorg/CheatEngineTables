<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Activate Player Scripts"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(player,grim dawn.exe,8B F0 89 75 C0)
alloc(newmem,$1000)

label(code)
label(return)
label(player_ptr)

newmem:

code:
  mov [player_ptr],eax
  mov esi,eax
  mov [ebp-40],esi
  jmp return

player_ptr:
  dd 0

player:
  jmp code
return:
registersymbol(player)
registersymbol(player_ptr)

[DISABLE]
player:
  db 8B F0 89 75 C0
unregistersymbol(player)
unregistersymbol(player_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "grim dawn.exe"+142715

"grim dawn.exe"+1426F1: 64 89 25 00 00 00 00     -  mov fs:[00000000],esp
"grim dawn.exe"+1426F8: 81 EC F8 00 00 00        -  sub esp,000000F8
"grim dawn.exe"+1426FE: 56                       -  push esi
"grim dawn.exe"+1426FF: 57                       -  push edi
"grim dawn.exe"+142700: 8B F9                    -  mov edi,ecx
"grim dawn.exe"+142702: 89 7D D0                 -  mov [ebp-30],edi
"grim dawn.exe"+142705: FF 77 5C                 -  push [edi+5C]
"grim dawn.exe"+142708: FF 15 8C 01 48 01        -  call dword ptr ["grim dawn.exe"+1C018C]
"grim dawn.exe"+14270E: 8B C8                    -  mov ecx,eax
"grim dawn.exe"+142710: E8 0B 47 EC FF           -  call "grim dawn.exe"+6E20
// ---------- INJECTING HERE ----------
"grim dawn.exe"+142715: 8B F0                    -  mov esi,eax
"grim dawn.exe"+142717: 89 75 C0                 -  mov [ebp-40],esi
// ---------- DONE INJECTING  ----------
"grim dawn.exe"+14271A: 85 F6                    -  test esi,esi
"grim dawn.exe"+14271C: 0F 84 B8 04 00 00        -  je "grim dawn.exe"+142BDA
"grim dawn.exe"+142722: 8B CE                    -  mov ecx,esi
"grim dawn.exe"+142724: FF 15 20 28 48 01        -  call dword ptr ["grim dawn.exe"+1C2820]
"grim dawn.exe"+14272A: 8B CE                    -  mov ecx,esi
"grim dawn.exe"+14272C: 89 45 D4                 -  mov [ebp-2C],eax
"grim dawn.exe"+14272F: FF 15 DC 12 48 01        -  call dword ptr ["grim dawn.exe"+1C12DC]
"grim dawn.exe"+142735: D9 5D C8                 -  fstp dword ptr [ebp-38]
"grim dawn.exe"+142738: F3 0F 10 45 C8           -  movss xmm0,[ebp-38]
"grim dawn.exe"+14273D: E8 BE 76 06 00           -  call "grim dawn.exe"+1A9E00
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Activate Health Scripts"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(health,Game.dll,72 * F3 0F 10 46 * F3 0F 5C)
alloc(newmem,$1000)

label(code)
label(return)
label(health_bkp)
label(health_ply)
label(health_mob)
label(is_player)

newmem:

code:
health_bkp:
  readmem(health+2,5)
  movss xmm0,[esi+1C]
  cmp edi,[player_ptr]
  je is_player
  cmp byte ptr [health_mob],1
  jne return
  movss xmm1,xmm0
  jmp return

is_player:
  cmp byte ptr [health_ply],1
  jne return
  xorps xmm1,xmm1
  jmp return

health_ply:
  db 0
health_mob:
  db 0

health+2:
  jmp code
return:
registersymbol(health)
registersymbol(health_bkp)
registersymbol(health_ply)
registersymbol(health_mob)

[DISABLE]
health+2:
  readmem(health_bkp,5)
unregistersymbol(health)
unregistersymbol(health_bkp)
unregistersymbol(health_ply)
unregistersymbol(health_mob)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Game.dll"+3CE8C

"Game.dll"+3CE5C: 80 BF 64 11 00 00 00  -  cmp byte ptr [edi+00001164],00
"Game.dll"+3CE63: 0F 85 D5 00 00 00     -  jne Game.dll+3CF3E
"Game.dll"+3CE69: 80 BF 65 11 00 00 00  -  cmp byte ptr [edi+00001165],00
"Game.dll"+3CE70: 0F 85 C8 00 00 00     -  jne Game.dll+3CF3E
"Game.dll"+3CE76: F3 0F 10 4D 08        -  movss xmm1,[ebp+08]
"Game.dll"+3CE7B: 0F 2F 0D 80 A1 B7 5B  -  comiss xmm1,[Game.dll+3EA180]
"Game.dll"+3CE82: 53                    -  push ebx
"Game.dll"+3CE83: 56                    -  push esi
"Game.dll"+3CE84: 8D B7 50 08 00 00     -  lea esi,[edi+00000850]
"Game.dll"+3CE8A: 72 1C                 -  jb Game.dll+3CEA8
// ---------- INJECTING HERE ----------
"Game.dll"+3CE8C: F3 0F 10 46 1C        -  movss xmm0,[esi+1C]
// ---------- DONE INJECTING  ----------
"Game.dll"+3CE91: F3 0F 5C C1           -  subss xmm0,xmm1
"Game.dll"+3CE95: F3 0F 11 46 1C        -  movss [esi+1C],xmm0
"Game.dll"+3CE9A: F3 0F 10 46 24        -  movss xmm0,[esi+24]
"Game.dll"+3CE9F: F3 0F 58 C1           -  addss xmm0,xmm1
"Game.dll"+3CEA3: F3 0F 11 46 24        -  movss [esi+24],xmm0
"Game.dll"+3CEA8: 80 7D 14 00           -  cmp byte ptr [ebp+14],00
"Game.dll"+3CEAC: 8B 5D 0C              -  mov ebx,[ebp+0C]
"Game.dll"+3CEAF: C6 86 08 04 00 00 01  -  mov byte ptr [esi+00000408],01
"Game.dll"+3CEB6: 74 3A                 -  je Game.dll+3CEF2
"Game.dll"+3CEB8: 83 3B 01              -  cmp dword ptr [ebx],01
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Unlimited Health"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
health_ply:
db 1
[DISABLE]
health_ply:
db 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>10</ID>
              <Description>"One Hit Kills"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
health_mob:
db 1
[DISABLE]
health_mob:
db 0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Increased Attack Speed"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(attack_speed,Game.dll,C8 F3 0F 11 0C 24 FF D0 5E 8B E5 5D C3)
alloc(newmem,$1000)

label(code)
label(return)
label(attack_speed_val)

newmem:
  cmp eax,[player_ptr]
  jne code
  fstp st(0)
  fld [attack_speed_val]
code:
  pop esi
  mov esp,ebp
  pop ebp
  ret
  jmp return

attack_speed_val:
  dd (float)5

attack_speed+08:
  jmp newmem
return:
registersymbol(attack_speed)
registersymbol(attack_speed_val)

[DISABLE]
attack_speed+08:
  db 5E 8B E5 5D C3
unregistersymbol(attack_speed)
unregistersymbol(attack_speed_val)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Game.dll"+3D4B3

"Game.dll"+3D483: F3 0F 10 45 F4           -  movss xmm0,[ebp-0C]
"Game.dll"+3D488: F3 0F 59 05 B4 A1 B7 5B  -  mulss xmm0,[Game.dll+3EA1B4]
"Game.dll"+3D490: 8B 80 DC 02 00 00        -  mov eax,[eax+000002DC]
"Game.dll"+3D496: 51                       -  push ecx
"Game.dll"+3D497: 8B CE                    -  mov ecx,esi
"Game.dll"+3D499: F3 0F 5C C8              -  subss xmm1,xmm0
"Game.dll"+3D49D: F3 0F 10 45 FC           -  movss xmm0,[ebp-04]
"Game.dll"+3D4A2: F3 0F 58 05 38 A2 B7 5B  -  addss xmm0,[Game.dll+3EA238]
"Game.dll"+3D4AA: F3 0F 59 45 F8           -  mulss xmm0,[ebp-08]
"Game.dll"+3D4AF: F3 0F 59 C8              -  mulss xmm1,xmm0
// ---------- INJECTING HERE ----------
"Game.dll"+3D4B3: F3 0F 11 0C 24           -  movss [esp],xmm1
// ---------- DONE INJECTING  ----------
"Game.dll"+3D4B8: FF D0                    -  call eax
"Game.dll"+3D4BA: 5E                       -  pop esi
"Game.dll"+3D4BB: 8B E5                    -  mov esp,ebp
"Game.dll"+3D4BD: 5D                       -  pop ebp
"Game.dll"+3D4BE: C3                       -  ret 
"Game.dll"+3D4BF: CC                       -  int 3 
"Game.dll"+3D4C0: 55                       -  push ebp
"Game.dll"+3D4C1: 8B EC                    -  mov ebp,esp
"Game.dll"+3D4C3: 83 EC 08                 -  sub esp,08
"Game.dll"+3D4C6: 0F 57 D2                 -  xorps xmm2,xmm2
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Attack Speed"</Description>
              <VariableType>Float</VariableType>
              <Address>attack_speed_val</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"Increased Run Speed"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(run_speed,Game.dll,D0 5E 8B E5 5D 8B E3)
alloc(newmem,$1000)

label(code)
label(return)
label(run_speed_val)

newmem:
  cmp eax,[player_ptr]
  jne code
  fstp st(0)
  fld dword ptr [run_speed_val]
code:
  pop esi
  mov esp,ebp
  pop ebp
  mov esp,ebx
  jmp return

run_speed_val:
  dd (float)2.0

run_speed+01:
  jmp newmem
  nop
return:
registersymbol(run_speed)
registersymbol(run_speed_val)

[DISABLE]
run_speed+01:
  db 5E 8B E5 5D 8B E3
unregistersymbol(run_speed)
unregistersymbol(run_speed_val)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Game.dll"+3D36F

"Game.dll"+3D358: E8 C3 F8 FF FF           -  call Game.dll+3CC20
"Game.dll"+3D35D: 5E                       -  pop esi
"Game.dll"+3D35E: 8B E5                    -  mov esp,ebp
"Game.dll"+3D360: 5D                       -  pop ebp
"Game.dll"+3D361: 8B E3                    -  mov esp,ebx
"Game.dll"+3D363: 5B                       -  pop ebx
"Game.dll"+3D364: C3                       -  ret 
"Game.dll"+3D365: 8B 06                    -  mov eax,[esi]
"Game.dll"+3D367: 8B 80 D4 02 00 00        -  mov eax,[eax+000002D4]
"Game.dll"+3D36D: FF D0                    -  call eax
// ---------- INJECTING HERE ----------
"Game.dll"+3D36F: 5E                       -  pop esi
"Game.dll"+3D370: 8B E5                    -  mov esp,ebp
"Game.dll"+3D372: 5D                       -  pop ebp
"Game.dll"+3D373: 8B E3                    -  mov esp,ebx
// ---------- DONE INJECTING  ----------
"Game.dll"+3D375: 5B                       -  pop ebx
"Game.dll"+3D376: C3                       -  ret 
"Game.dll"+3D377: CC                       -  int 3 
"Game.dll"+3D378: CC                       -  int 3 
"Game.dll"+3D379: CC                       -  int 3 
"Game.dll"+3D37A: CC                       -  int 3 
"Game.dll"+3D37B: CC                       -  int 3 
"Game.dll"+3D37C: CC                       -  int 3 
"Game.dll"+3D37D: CC                       -  int 3 
"Game.dll"+3D37E: CC                       -  int 3 
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>77</ID>
              <Description>"Run Speed"</Description>
              <VariableType>Float</VariableType>
              <Address>run_speed_val</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Player Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>3</ID>
              <Description>"Base Address"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>player_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>5</ID>
                  <Description>"Current Health"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+870</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>22</ID>
                  <Description>"Current Energy"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+888</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>7</ID>
                  <Description>"Current Constitution"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+884</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>26</ID>
                  <Description>"Iron"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+d20</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>18</ID>
                  <Description>"Level"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+d84</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>75</ID>
                  <Description>"Experience"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+d88</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"Attribute Points"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+d8c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>20</ID>
                  <Description>"Skill Points"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+d90</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>21</ID>
                  <Description>"Devotion Points"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+d94</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Unlimited Constitution"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(constitution,Game.dll,F3 0F 10 46 * F3 0F 5E C3 F3)
alloc(newmem,$1000)

label(code)
label(return)
label(constitution_bkp)

newmem:
constitution_bkp:
  readmem(constitution,5)
code:
  db F3 0F 11 5E
  readmem(constitution+4,1)
  movss xmm0,xmm3
  jmp return

constitution:
  jmp code
return:
registersymbol(constitution)
registersymbol(constitution_bkp)

[DISABLE]
constitution:
  readmem(constitution_bkp,5)
unregistersymbol(constitution)
unregistersymbol(constitution_bkp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Game.dll"+56DDB

"Game.dll"+56DBA: 0F 2F D9                 -  comiss xmm3,xmm1
"Game.dll"+56DBD: EB 11                    -  jmp Game.dll+56DD0
"Game.dll"+56DBF: 0F 28 C6                 -  movaps xmm0,xmm6
"Game.dll"+56DC2: 0F 54 C5                 -  andps xmm0,xmm5
"Game.dll"+56DC5: F3 0F 59 D8              -  mulss xmm3,xmm0
"Game.dll"+56DC9: F3 0F 58 DE              -  addss xmm3,xmm6
"Game.dll"+56DCD: 0F 2F CB                 -  comiss xmm1,xmm3
"Game.dll"+56DD0: 76 17                    -  jna Game.dll+56DE9
"Game.dll"+56DD2: 0F 2F 1D 90 A1 B7 5B     -  comiss xmm3,[Game.dll+3EA190]
"Game.dll"+56DD9: 76 0E                    -  jna Game.dll+56DE9
// ---------- INJECTING HERE ----------
"Game.dll"+56DDB: F3 0F 10 46 30           -  movss xmm0,[esi+30]
// ---------- DONE INJECTING  ----------
"Game.dll"+56DE0: F3 0F 5E C3              -  divss xmm0,xmm3
"Game.dll"+56DE4: F3 0F 11 45 E0           -  movss [ebp-20],xmm0
"Game.dll"+56DE9: FF 73 08                 -  push [ebx+08]
"Game.dll"+56DEC: 8B CE                    -  mov ecx,esi
"Game.dll"+56DEE: E8 4D 09 00 00           -  call Game.dll+57740
"Game.dll"+56DF3: 8A 86 0A 04 00 00        -  mov al,[esi+0000040A]
"Game.dll"+56DF9: 84 C0                    -  test al,al
"Game.dll"+56DFB: 75 08                    -  jne Game.dll+56E05
"Game.dll"+56DFD: 38 86 10 04 00 00        -  cmp [esi+00000410],al
"Game.dll"+56E03: 74 60                    -  je Game.dll+56E65
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"Unlimited Energy"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(energy,Game.dll,77 03 0F 28 C1 8A)
energy:
  db 90 90
registersymbol(energy)

[DISABLE]
energy:
  db 77 03
unregistersymbol(energy)

{
// ORIGINAL CODE - INJECTION POINT: "Game.dll"+573E4

"Game.dll"+573BA: F3 0F 10 45 E0           -  movss xmm0,[ebp-20]
"Game.dll"+573BF: F3 0F 58 46 34           -  addss xmm0,[esi+34]
"Game.dll"+573C4: F3 0F 58 C3              -  addss xmm0,xmm3
"Game.dll"+573C8: F3 0F 5C C2              -  subss xmm0,xmm2
"Game.dll"+573CC: 0F 2F C1                 -  comiss xmm0,xmm1
"Game.dll"+573CF: F3 0F 11 46 34           -  movss [esi+34],xmm0
"Game.dll"+573D4: 77 03                    -  ja Game.dll+573D9
"Game.dll"+573D6: 0F 28 C1                 -  movaps xmm0,xmm1
"Game.dll"+573D9: F3 0F 10 8E E0 03 00 00  -  movss xmm1,[esi+000003E0]
"Game.dll"+573E1: 0F 2F C8                 -  comiss xmm1,xmm0
// ---------- INJECTING HERE ----------
"Game.dll"+573E4: 77 03                    -  ja Game.dll+573E9
"Game.dll"+573E6: 0F 28 C1                 -  movaps xmm0,xmm1
// ---------- DONE INJECTING  ----------
"Game.dll"+573E9: 8A 45 EF                 -  mov al,[ebp-11]
"Game.dll"+573EC: F3 0F 11 46 34           -  movss [esi+34],xmm0
"Game.dll"+573F1: E9 F8 00 00 00           -  jmp Game.dll+574EE
"Game.dll"+573F6: C6 86 09 04 00 00 00     -  mov byte ptr [esi+00000409],00
"Game.dll"+573FD: F3 0F 10 66 78           -  movss xmm4,[esi+78]
"Game.dll"+57402: 0F 2F E1                 -  comiss xmm4,xmm1
"Game.dll"+57405: F3 0F 10 9E 48 01 00 00  -  movss xmm3,[esi+00000148]
"Game.dll"+5740D: F3 0F 59 DA              -  mulss xmm3,xmm2
"Game.dll"+57411: 72 15                    -  jb Game.dll+57428
"Game.dll"+57413: F3 0F 10 05 38 A2 B7 5B  -  movss xmm0,[Game.dll+3EA238]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"No Cooldown"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(cooldown,Game.dll,8B 4D F4 D9 45 F0 5E)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,[ebp-0C]
  fldz// dword ptr [ebp-10]
  jmp return

cooldown:
  jmp code
  nop
return:
registersymbol(cooldown)

[DISABLE]
cooldown:
  db 8B 4D F4 D9 45 F0
unregistersymbol(cooldown)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Game.dll"+29FBEF

"Game.dll"+29FBBA: F3 0F 10 0D 38 A2 B7 5B        -  movss xmm1,[Game.dll+3EA238]
"Game.dll"+29FBC2: D9 5D F0                       -  fstp dword ptr [ebp-10]
"Game.dll"+29FBC5: F3 0F 10 45 F0                 -  movss xmm0,[ebp-10]
"Game.dll"+29FBCA: F3 0F 59 05 B4 A1 B7 5B        -  mulss xmm0,[Game.dll+3EA1B4]
"Game.dll"+29FBD2: F3 0F 5C C8                    -  subss xmm1,xmm0
"Game.dll"+29FBD6: F3 0F 59 4D EC                 -  mulss xmm1,[ebp-14]
"Game.dll"+29FBDB: F3 0F 11 4D F0                 -  movss [ebp-10],xmm1
"Game.dll"+29FBE0: 8D 4D 9C                       -  lea ecx,[ebp-64]
"Game.dll"+29FBE3: C7 45 8C 9C 57 B7 5B           -  mov [ebp-74],Game.dll+3E579C
"Game.dll"+29FBEA: E8 D1 9B D7 FF                 -  call Game.dll+197C0
// ---------- INJECTING HERE ----------
"Game.dll"+29FBEF: 8B 4D F4                       -  mov ecx,[ebp-0C]
"Game.dll"+29FBF2: D9 45 F0                       -  fld dword ptr [ebp-10]
// ---------- DONE INJECTING  ----------
"Game.dll"+29FBF5: 5E                             -  pop esi
"Game.dll"+29FBF6: 64 89 0D 00 00 00 00           -  mov fs:[00000000],ecx
"Game.dll"+29FBFD: 8B E5                          -  mov esp,ebp
"Game.dll"+29FBFF: 5D                             -  pop ebp
"Game.dll"+29FC00: C3                             -  ret 
"Game.dll"+29FC01: CC                             -  int 3 
"Game.dll"+29FC02: CC                             -  int 3 
"Game.dll"+29FC03: CC                             -  int 3 
"Game.dll"+29FC04: CC                             -  int 3 
"Game.dll"+29FC05: CC                             -  int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Unlimited Inventory"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(inventory,Game.dll,76 14 2B C2 89 81)
inventory:
  db 90 90 90 90
registersymbol(inventory)

[DISABLE]
inventory:
  db 76 14 2B C2
unregistersymbol(inventory)

{
// ORIGINAL CODE - INJECTION POINT: "Game.dll"+1C528E

"Game.dll"+1C527B: CC                             -  int 3 
"Game.dll"+1C527C: CC                             -  int 3 
"Game.dll"+1C527D: CC                             -  int 3 
"Game.dll"+1C527E: CC                             -  int 3 
"Game.dll"+1C527F: CC                             -  int 3 
"Game.dll"+1C5280: 55                             -  push ebp
"Game.dll"+1C5281: 8B EC                          -  mov ebp,esp
"Game.dll"+1C5283: 8B 81 0C 05 00 00              -  mov eax,[ecx+0000050C]
"Game.dll"+1C5289: 8B 55 08                       -  mov edx,[ebp+08]
"Game.dll"+1C528C: 3B C2                          -  cmp eax,edx
// ---------- INJECTING HERE ----------
"Game.dll"+1C528E: 76 14                          -  jna Game.dll+1C52A4
"Game.dll"+1C5290: 2B C2                          -  sub eax,edx
"Game.dll"+1C5292: 89 81 0C 05 00 00              -  mov [ecx+0000050C],eax
// ---------- DONE INJECTING  ----------
"Game.dll"+1C5298: 89 81 F8 03 00 00              -  mov [ecx+000003F8],eax
"Game.dll"+1C529E: B0 01                          -  mov al,01
"Game.dll"+1C52A0: 5D                             -  pop ebp
"Game.dll"+1C52A1: C2 04 00                       -  ret 0004
"Game.dll"+1C52A4: C7 81 0C 05 00 00 00 00 00 00  -  mov [ecx+0000050C],00000000
"Game.dll"+1C52AE: 8B 81 0C 05 00 00              -  mov eax,[ecx+0000050C]
"Game.dll"+1C52B4: 89 81 F8 03 00 00              -  mov [ecx+000003F8],eax
"Game.dll"+1C52BA: B0 01                          -  mov al,01
"Game.dll"+1C52BC: 5D                             -  pop ebp
"Game.dll"+1C52BD: C2 04 00                       -  ret 0004
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"Mouseover Item Pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(mouseover,Game.dll,89 45 FC 8B CF 8B 07 FF)
alloc(newmem,$1000)

label(code)
label(return)
label(mouseover_ptr)

newmem:

code:
  mov [mouseover_ptr],edi
  mov [ebp-04],eax
  mov ecx,edi
  jmp return

mouseover_ptr:
  dd 0

mouseover:
  jmp code
return:
registersymbol(mouseover)
registersymbol(mouseover_ptr)

[DISABLE]
mouseover:
  db 89 45 FC 8B CF
unregistersymbol(mouseover)
unregistersymbol(mouseover_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Game.dll"+1C47CB

"Game.dll"+1C47A2: 8B 45 EC              -  mov eax,[ebp-14]
"Game.dll"+1C47A5: 3B 86 D8 10 00 00     -  cmp eax,[esi+000010D8]
"Game.dll"+1C47AB: 74 05                 -  je Game.dll+1C47B2
"Game.dll"+1C47AD: 8B 58 54              -  mov ebx,[eax+54]
"Game.dll"+1C47B0: EB 05                 -  jmp Game.dll+1C47B7
"Game.dll"+1C47B2: BB 02 00 00 00        -  mov ebx,00000002
"Game.dll"+1C47B7: 33 C0                 -  xor eax,eax
"Game.dll"+1C47B9: C7 45 E8 07 00 00 00  -  mov [ebp-18],00000007
"Game.dll"+1C47C0: C7 45 E4 00 00 00 00  -  mov [ebp-1C],00000000
"Game.dll"+1C47C7: 66 89 45 D4           -  mov [ebp-2C],ax
// ---------- INJECTING HERE ----------
"Game.dll"+1C47CB: 89 45 FC              -  mov [ebp-04],eax
"Game.dll"+1C47CE: 8B CF                 -  mov ecx,edi
// ---------- DONE INJECTING  ----------
"Game.dll"+1C47D0: 8B 07                 -  mov eax,[edi]
"Game.dll"+1C47D2: FF 90 8C 02 00 00     -  call dword ptr [eax+0000028C]
"Game.dll"+1C47D8: 83 F8 01              -  cmp eax,01
"Game.dll"+1C47DB: 76 50                 -  jna Game.dll+1C482D
"Game.dll"+1C47DD: 83 BF A0 02 00 00 10  -  cmp dword ptr [edi+000002A0],10
"Game.dll"+1C47E4: 8D B7 8C 02 00 00     -  lea esi,[edi+0000028C]
"Game.dll"+1C47EA: 72 02                 -  jb Game.dll+1C47EE
"Game.dll"+1C47EC: 8B 36                 -  mov esi,[esi]
"Game.dll"+1C47EE: 8B 07                 -  mov eax,[edi]
"Game.dll"+1C47F0: 8B CF                 -  mov ecx,edi
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Base Address"</Description>
          <LastState RealAddress="00000000"/>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>mouseover_ptr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>42</ID>
              <Description>"Stack Size"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+50c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>43</ID>
              <Description>"Object Name"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>String</VariableType>
              <Length>64</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>+4</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>48</ID>
              <Description>"Item Tag Name"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>String</VariableType>
              <Length>32</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>+28c</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>56</ID>
      <Description>"Faction Pointers"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(faction,Game.dll,D9 44 81 04 59)
alloc(newmem,$1000)

label(code)
label(return)
label(faction_ptr)

newmem:

code:
  mov [faction_ptr],ecx
  fld dword ptr [ecx+eax*4+04]
  pop ecx
  jmp return

faction_ptr:
  dd 0

faction:
  jmp code
return:
registersymbol(faction)
registersymbol(faction_ptr)

[DISABLE]
faction:
  db D9 44 81 04 59
unregistersymbol(faction)
unregistersymbol(faction_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Game.dll"+17667D

"Game.dll"+17665E: 75 18                 -  jne Game.dll+176678
"Game.dll"+176660: 51                    -  push ecx
"Game.dll"+176661: 8B 0D F4 5B 5D 5F     -  mov ecx,[Game.dll+585BF4]
"Game.dll"+176667: C7 04 24 00 00 00 CF  -  mov [esp],CF000000
"Game.dll"+17666E: E8 DD 01 03 00        -  call Game.dll+1A6850
"Game.dll"+176673: 59                    -  pop ecx
"Game.dll"+176674: 5D                    -  pop ebp
"Game.dll"+176675: C2 04 00              -  ret 0004
"Game.dll"+176678: 83 F8 15              -  cmp eax,15
"Game.dll"+17667B: 77 09                 -  ja Game.dll+176686
// ---------- INJECTING HERE ----------
"Game.dll"+17667D: D9 44 81 04           -  fld dword ptr [ecx+eax*4+04]
"Game.dll"+176681: 59                    -  pop ecx
// ---------- DONE INJECTING  ----------
"Game.dll"+176682: 5D                    -  pop ebp
"Game.dll"+176683: C2 04 00              -  ret 0004
"Game.dll"+176686: D9 EE                 -  fldz 
"Game.dll"+176688: 59                    -  pop ecx
"Game.dll"+176689: 5D                    -  pop ebp
"Game.dll"+17668A: C2 04 00              -  ret 0004
"Game.dll"+17668D: CC                    -  int 3 
"Game.dll"+17668E: CC                    -  int 3 
"Game.dll"+17668F: CC                    -  int 3 
"Game.dll"+176690: 8A 81 B0 02 00 00     -  mov al,[ecx+000002B0]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>57</ID>
          <Description>"Base Address"</Description>
          <LastState RealAddress="00000000"/>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>faction_ptr</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>58</ID>
              <Description>"Towns ???"</Description>
              <VariableType>Float</VariableType>
              <Address>+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>59</ID>
              <Description>"Devil's Crossing"</Description>
              <VariableType>Float</VariableType>
              <Address>+8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"Aetherials"</Description>
              <VariableType>Float</VariableType>
              <Address>+c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>61</ID>
              <Description>"Chthonians"</Description>
              <VariableType>Float</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>62</ID>
              <Description>"Cronley's Gang"</Description>
              <VariableType>Float</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>63</ID>
              <Description>"???"</Description>
              <VariableType>Float</VariableType>
              <Address>+18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>64</ID>
              <Description>"Rovers"</Description>
              <VariableType>Float</VariableType>
              <Address>+1c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>65</ID>
              <Description>"???"</Description>
              <VariableType>Float</VariableType>
              <Address>+20</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"Homestead"</Description>
              <VariableType>Float</VariableType>
              <Address>+24</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>67</ID>
              <Description>"???"</Description>
              <VariableType>Float</VariableType>
              <Address>+28</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>68</ID>
              <Description>"The Outcast"</Description>
              <VariableType>Float</VariableType>
              <Address>+2c</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>69</ID>
              <Description>"Order of Death's Vigil"</Description>
              <VariableType>Float</VariableType>
              <Address>+30</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>70</ID>
              <Description>"Undead"</Description>
              <VariableType>Float</VariableType>
              <Address>+34</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>71</ID>
              <Description>"The Black Legion"</Description>
              <VariableType>Float</VariableType>
              <Address>+38</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>72</ID>
              <Description>"Kymon's Chosen"</Description>
              <VariableType>Float</VariableType>
              <Address>+3c</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>74</ID>
      <Description>"Ignore This"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Item Dissect"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>mouseover_ptr</Address>
          <Offsets>
            <Offset>300</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>50</ID>
              <Description>"No description"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>51</ID>
              <Description>"No description"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>52</ID>
              <Description>"No description"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>53</ID>
              <Description>"No description"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+c</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>player</Name>
      <Address>00FE4EE5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>player_ptr</Name>
      <Address>2EF80010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>attack_speed</Name>
      <Address>583ACB62</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>attack_speed_val</Name>
      <Address>2EF9001E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>run_speed</Name>
      <Address>583ACA1E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>run_speed_val</Name>
      <Address>2EFA001F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address>583AC53A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health_bkp</Name>
      <Address>00540000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health_ply</Name>
      <Address>00540041</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health_mob</Name>
      <Address>00540042</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>constitution</Name>
      <Address>583C651B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>constitution_bkp</Name>
      <Address>005C0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>energy</Name>
      <Address>583C6B24</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cooldown</Name>
      <Address>586110DF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory</Name>
      <Address>58535A8E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mouseover</Name>
      <Address>585349CB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mouseover_ptr</Name>
      <Address>009D0010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>faction</Name>
      <Address>584E668D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>faction_ptr</Name>
      <Address>009E0010</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
