<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>232</ID>
      <Description>"UFO Afterlight AOB script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(aobSquadGetter,8B 00 50 8B CF E8 ?? ?? ?? ?? 84 C0)
aobscan(aobDamagedUnitGrabber,8B 04 91 89 44 24 14 8B F8 E8)
aobscan(aobDamageGetter,8B 44 24 30 8D 3C 33)
aobscan(aobEffectDamageFixer,8A 88 80 04 00 00 84 C9 74 11)
aobscan(aobAmmoTaker,2B D0 89 51 08 C2 04 00)
aobscan(aobEquipmentPager,89 86 E4 02 00 00 89 87 E4 02 00 00 C6 87 82 00 00 00 01 C6 87 88 00 00 00 00 E8 ?? ?? ?? ?? 85 C0 0F 9F C0) // Dirty!!!
aobscan(aobAmmoPager,8B 4C 24 18 89 87 E4 02 00 00 C6 87 82 00 00 00 01 C6 87 88 00 00 00 00 E8 ?? ?? ?? ?? 85 C0 0F 9F C0) // Dirty!!!
aobscan(aobTrainingGranter,3B C7 C6 44 24 14 00)
aobscan(aobTrainingTicker,D9 44 24 04 51 D8 41 08)
aobscan(aobResearchTicker,D8 F1 D8 46 04)
aobscan(aobManufactureTicker,8B 7C 24 10 85 FF C7 01 00 00 00 00 0F 8E)
aobscan(aobStrategicXPGain,D8 46 08 D9 C0)
aobscan(aobAttributePointUpdater,8B 48 14 89 48 18 8B 0E 5E)

alloc(newmem,4096)

label(aobSquadGetter_r)
registersymbol(aobSquadGetter_r)

label(lblSquadGetter)
label(lblSquadGetterSkip)
label(lblSquadGetterRet)

label(iPlayerSquadID)
registersymbol(iPlayerSquadID)

label(aobDamagedUnitGrabber_r)
label(aobDamageGetter_r)
registersymbol(aobDamagedUnitGrabber_r)
registersymbol(aobDamageGetter_r)

label(lblDamagedUnitGrabber)
label(lblDamagedUnitGrabberRet)

label(lblDamageGetter)
label(lblDamageGetterEnemy)
label(lblDamageGetterSkipFriendly)
label(lblDamageGetterSkipEnemyKill)
label(lblDamageGetterSkipEnemyStun)
label(lblDamageGetterSkipEnemy)
label(lblDamageGetterRet)

label(pDamagedUnit)
registersymbol(pDamagedUnit)

label(bEnableGodMode)
label(bEnableOneHitKill)
label(bEnableOneHitKnockout)
registersymbol(bEnableGodMode)
registersymbol(bEnableOneHitKill)
registersymbol(bEnableOneHitKnockout)

label(aobEffectDamageFixer_r)
registersymbol(aobEffectDamageFixer_r)

label(lblEffectDamageFixer)
label(lblEffectDamageFixerRet)

label(aobAmmoTaker_r)
registersymbol(aobAmmoTaker_r)

label(lblAmmoTaker)
label(lblAmmoTakerSkip)
label(lblAmmoTakerRet)

label(bEnableInfiniteAmmo)
registersymbol(bEnableInfiniteAmmo)

label(aobEquipmentPager_r)
registersymbol(aobEquipmentPager_r)

label(lblEquipmentPager)
label(lblEquipmentPagerSkip)
label(lblEquipmentPagerRet)

label(bEnableMinimumEquipment)
label(iMinimumEquipment)
registersymbol(bEnableMinimumEquipment)
registersymbol(iMinimumEquipment)

label(aobAmmoPager_r)
registersymbol(aobAmmoPager_r)

label(lblAmmoPager)
label(lblAmmoPagerSkip)
label(lblAmmoPagerRet)

label(bEnableMinimumAmmo)
label(iMinimumAmmo)
registersymbol(bEnableMinimumAmmo)
registersymbol(iMinimumAmmo)

label(aobTrainingGranter_r)
registersymbol(aobTrainingGranter_r)

label(lblTrainingGranter)
label(lblTrainingGranterSkip)
label(lblTrainingGranterRet)

label(bEnableTrainingGranter)
registersymbol(bEnableTrainingGranter)

label(aobTrainingTicker_r)
registersymbol(aobTrainingTicker_r)

label(lblTrainingTicker)
label(lblTrainingTickerSkipInstant)
label(lblTrainingTickerSkip)
label(lblTrainingTickerRet)

label(bEnableInstantTraining)
label(bEnableTrainingSpeedMultiplier)
label(fTrainingSpeedMultiplier)
registersymbol(bEnableInstantTraining)
registersymbol(bEnableTrainingSpeedMultiplier)
registersymbol(fTrainingSpeedMultiplier)

label(aobResearchTicker_r)
registersymbol(aobResearchTicker_r)

label(lblResearchTicker)
label(lblResearchTickerSkipInstant)
label(lblResearchTickerSkip)
label(lblResearchTickerRet)

label(bEnableInstantResearch)
label(bEnableResearchSpeedMultiplier)
label(fResearchSpeedMultiplier)
registersymbol(bEnableInstantResearch)
registersymbol(bEnableResearchSpeedMultiplier)
registersymbol(fResearchSpeedMultiplier)

label(aobManufactureTicker_r)
registersymbol(aobManufactureTicker_r)

label(lblManufactureTicker)
label(lblManufactureTickerSkipInstant)
label(lblManufactureTickerSkip)
label(lblManufactureTickerRet)

label(bEnableInstantManufacture)
label(bEnableManufactureSpeedMultiplier)
label(fManufactureSpeedMultiplier)
registersymbol(bEnableInstantManufacture)
registersymbol(bEnableManufactureSpeedMultiplier)
registersymbol(fManufactureSpeedMultiplier)

label(aobStrategicXPGain_r)
registersymbol(aobStrategicXPGain_r)

label(lblStrategicXPGain)
label(lblStrategicXPGainSkip)
label(lblStrategicXPGainRet)

label(bEnableXPGainMultiplier)
label(fXPGainMultiplier)
registersymbol(bEnableXPGainMultiplier)
registersymbol(fXPGainMultiplier)

label(aobAttributePointUpdater_r)
registersymbol(aobAttributePointUpdater_r)

label(lblAttributePointUpdater)
label(lblAttributePointUpdaterSkip)
label(lblAttributePointUpdaterRet)

label(bEnableInfiniteAttributePoints)
registersymbol(bEnableInfiniteAttributePoints)

newmem:
bEnableInstantResearch:
dd 0
bEnableResearchSpeedMultiplier:
dd 1
fResearchSpeedMultiplier:
dd (float)3.333

bEnableInstantManufacture:
dd 0
bEnableManufactureSpeedMultiplier:
dd 1
fManufactureSpeedMultiplier:
dd (float)3.333

bEnableInstantTraining:
dd 0
bEnableTrainingSpeedMultiplier:
dd 1
fTrainingSpeedMultiplier:
dd (float)3.333

bEnableMinimumEquipment:
dd 1
iMinimumEquipment:
dd 5
bEnableMinimumAmmo:
dd 1
iMinimumAmmo:
dd (int)40

bEnableInfiniteAttributePoints:
dd 0
bEnableTrainingGranter:
dd 1
bEnableXPGainMultiplier:
dd 1
fXPGainMultiplier:
dd (float)3.333

bEnableGodMode:
dd 1
bEnableOneHitKill:
dd 0
bEnableOneHitKnockout:
dd 0
bEnableInfiniteAmmo:
dd 1

lblSquadGetter:
cmp dword ptr [eax+8],'play'
jne short lblSquadGetterSkip
push eax
mov eax,[eax]
mov dword ptr [iPlayerSquadID],eax
pop eax
lblSquadGetterSkip:
mov eax,[eax] // Original code
push eax      // Original code
mov ecx,edi   // Original code
jmp lblSquadGetterRet
iPlayerSquadID:
dd 0

lblDamagedUnitGrabber:
mov eax,[ecx+edx*4] // Original code
mov [esp+14],eax    // Original code
mov dword ptr [pDamagedUnit],eax
jmp lblDamagedUnitGrabberRet
pDamagedUnit:
dd 0

lblDamageGetter:
mov eax,[esp+30]  // Original code
lea edi,[ebx+esi] // Original code
push eax
push ebx
mov eax,[pDamagedUnit]
mov ebx,[iPlayerSquadID]
cmp dword ptr [eax+a0],ebx
jne short lblDamageGetterEnemy
cmp dword ptr [bEnableGodMode],1
jne short lblDamageGetterSkipFriendly
mov eax,[eax+30]
mov eax,[eax+b4]
mov ebx,[eax]
mov dword ptr [eax+10],ebx
xor ebx,ebx
mov dword ptr [eax+4],ebx
mov dword ptr [eax+8],ebx
mov dword ptr [eax+c],ebx
mov dword ptr [edi+08],ebx
lblDamageGetterSkipFriendly:
jmp short lblDamageGetterSkipEnemy
lblDamageGetterEnemy:
cmp dword ptr [bEnableOneHitKill],1
jne short lblDamageGetterSkipEnemyKill
mov eax,[eax+30]
mov eax,[eax+b4]
mov ebx,[eax]
mov dword ptr [eax+4],ebx
xor ebx,ebx
mov dword ptr [eax+8],ebx
mov dword ptr [eax+c],ebx
jmp short lblDamageGetterSkipEnemy
lblDamageGetterSkipEnemyKill:
cmp dword ptr [bEnableOneHitKnockout],1
jne short lblDamageGetterSkipEnemyStun
mov eax,[eax+30]
mov eax,[eax+b4]
mov ebx,[eax]
dec ebx
mov dword ptr [eax+8],ebx
shl ebx,2
mov dword ptr [eax+c],ebx
xor ebx,ebx
mov dword ptr [eax+4],ebx
mov [edi+8],ebx
lblDamageGetterSkipEnemyStun:
lblDamageGetterSkipEnemy:
pop ebx
pop eax
jmp lblDamageGetterRet

lblEffectDamageFixer:
mov cl,[bEnableGodMode]
jmp lblEffectDamageFixerRet

lblAmmoTaker:
push ecx
sub edx,eax      // Original code
cmp dword ptr [bEnableInfiniteAmmo],1
jne short lblAmmoTakerSkip
mov ecx,[esi+4]
test ecx,ecx
jz short lblAmmoTakerSkip
cmp dword ptr [ecx+7c],-1
je short lblAmmoTakerSkip
mov ecx,[ebx+2c]
test ecx,ecx
jz short lblAmmoTakerSkip
mov ecx,[ecx+10c]
test ecx,ecx
jz short lblAmmoTakerSkip
mov edx,[ecx]
lblAmmoTakerSkip:
pop ecx
mov [ecx+08],edx // Original code
jmp lblAmmoTakerRet

lblEquipmentPager:
cmp eax,1
jle short lblEquipmentPagerSkip
cmp dword ptr [bEnableMinimumEquipment],1
jne short lblEquipmentPagerSkip
cmp dword ptr [iMinimumEquipment],eax
jle short lblEquipmentPagerSkip
mov eax,[iMinimumEquipment]
mov dword ptr [ecx+4],eax
lblEquipmentPagerSkip:
test eax,eax // Original code
setg al      // Original code
jmp lblEquipmentPagerRet

lblAmmoPager:
cmp eax,1
jle short lblAmmoPagerSkip
cmp dword ptr [bEnableMinimumAmmo],1
jne short lblAmmoPagerSkip
cmp dword ptr [iMinimumAmmo],eax
jle short lblAmmoPagerSkip
mov eax,[iMinimumAmmo]
mov dword ptr [ecx+4],eax
lblAmmoPagerSkip:
test eax,eax // Original code
setg al      // Original code
jmp lblAmmoPagerRet

lblTrainingGranter:
cmp dword ptr [bEnableTrainingGranter],1
jne short lblTrainingGranterSkip
cmp eax,edi
jge short lblTrainingGranterSkip
mov eax,edi
mov dword ptr [ecx+1c],eax
lblTrainingGranterSkip:
cmp eax,edi              // Original code
mov byte ptr [esp+14],00 // Original code
jmp lblTrainingGranterRet

lblTrainingTicker:
cmp dword ptr [bEnableInstantTraining],1
jne short lblTrainingTickerSkipInstant
fld1
fst dword ptr [esp+04]
push ecx
jmp lblTrainingTickerRet
lblTrainingTickerSkipInstant:
cmp dword ptr [bEnableTrainingSpeedMultiplier],1
jne short lblTrainingTickerSkip
fld dword ptr [esp+04]
fmul dword ptr [fTrainingSpeedMultiplier]
fst dword ptr [esp+04]
push ecx
jmp lblTrainingTickerRet
lblTrainingTickerSkip:
fld dword ptr [esp+04] // Original code
push ecx               // Original code
jmp lblTrainingTickerRet

lblResearchTicker:
cmp dword ptr [bEnableInstantResearch],1
jne short lblResearchTickerSkipInstant
fadd st(0),st(1)
fst dword ptr [esp+0c]
jmp short lblResearchTickerSkip
lblResearchTickerSkipInstant:
cmp dword ptr [bEnableResearchSpeedMultiplier],1
jne short lblResearchTickerSkip
fmul dword ptr [fResearchSpeedMultiplier]
fst dword ptr [esp+0c]
lblResearchTickerSkip:
fdiv st(0),st(1)        // Original code
fadd dword ptr [esi+04] // Original code
jmp lblResearchTickerRet

lblManufactureTicker:
cmp dword ptr [bEnableInstantManufacture],1
jne short lblManufactureTickerSkipInstant
push eax
mov eax,[esi+08]
mov eax,[eax+08]
mov [esp+14],eax
pop eax
jmp short lblManufactureTickerSkip
lblManufactureTickerSkipInstant:
cmp dword ptr [bEnableManufactureSpeedMultiplier],1
jne short lblManufactureTickerSkip
fild dword ptr [esp+10]
fmul dword ptr [fManufactureSpeedMultiplier]
fistp dword ptr [esp+10]
dec dword ptr [esp+10]
lblManufactureTickerSkip:
mov edi,[esp+10] // Original code
test edi,edi     // Original code
jmp lblManufactureTickerRet

lblStrategicXPGain:
cmp dword ptr [bEnableXPGainMultiplier],1
jne short lblStrategicXPGainSkip
fmul dword ptr [fXPGainMultiplier]
lblStrategicXPGainSkip:
fadd dword ptr [esi+08] // Original code
fld st(0)               // Original code
jmp lblStrategicXPGainRet

lblAttributePointUpdater:
cmp dword ptr [bEnableInfiniteAttributePoints],1
jne short lblAttributePointUpdaterSkip
mov ecx,[eax+18]
mov [eax+14],ecx
lblAttributePointUpdaterSkip:
mov ecx,[eax+14] // Original code
mov [eax+18],ecx // Original code
jmp lblAttributePointUpdaterRet

//"UFO.exe"+3E6054:
aobAttributePointUpdater:
aobAttributePointUpdater_r:
jmp lblAttributePointUpdater
nop
lblAttributePointUpdaterRet:

//"UFO.exe"+3E5C48:
aobStrategicXPGain:
aobStrategicXPGain_r:
jmp lblStrategicXPGain
lblStrategicXPGainRet:

//"UFO.exe"+DBE94:
aobManufactureTicker:
aobManufactureTicker_r:
jmp lblManufactureTicker
nop
lblManufactureTickerRet:

//"UFO.exe"+D95CF:
aobResearchTicker:
aobResearchTicker_r:
jmp lblResearchTicker
lblResearchTickerRet:

//"UFO.exe"+3EA040:
aobTrainingTicker:
aobTrainingTicker_r:
jmp lblTrainingTicker
lblTrainingTickerRet:

//"UFO.exe"+AA189:
aobTrainingGranter:
aobTrainingGranter_r:
jmp lblTrainingGranter
nop
nop
lblTrainingGranterRet:

//"UFO.exe"+95BE9:
aobAmmoPager+1d:
aobAmmoPager_r:
jmp lblAmmoPager
lblAmmoPagerRet:

//"UFO.exe"+95839:
aobEquipmentPager+1f:
aobEquipmentPager_r:
jmp lblEquipmentPager
lblEquipmentPagerRet:

//"UFO.exe"+3ED6BD:
aobAmmoTaker:
aobAmmoTaker_r:
jmp lblAmmoTaker
lblAmmoTakerRet:

//"UFO.exe"+1BAC2D:
aobDamagedUnitGrabber:
aobDamagedUnitGrabber_r:
jmp lblDamagedUnitGrabber
nop
nop
lblDamagedUnitGrabberRet:

//"UFO.exe"+1BACB5:
aobDamageGetter:
aobDamageGetter_r:
jmp lblDamageGetter
nop
nop
lblDamageGetterRet:

//"UFO.exe"+21EC5E:
aobEffectDamageFixer:
aobEffectDamageFixer_r:
jmp lblEffectDamageFixer
nop
lblEffectDamageFixerRet:

//"UFO.exe"+2330AF:
aobSquadGetter:
aobSquadGetter_r:
jmp lblSquadGetter
lblSquadGetterRet:

[DISABLE]
//"UFO.exe"+2330AF:
aobSquadGetter_r:
//Alt: mov eax,[eax]
//Alt: push eax
//Alt: mov ecx,edi
db 8B 00 50 8B CF

unregistersymbol(aobSquadGetter_r)

unregistersymbol(iPlayerSquadID)

//"UFO.exe"+1BAC2D:
aobDamagedUnitGrabber_r:
//Alt: mov eax,[ecx+edx*4]
//Alt: mov [esp+14],eax
db 8B 04 91 89 44 24 14

//"UFO.exe"+1BACB5:
aobDamageGetter_r:
//Alt: mov eax,[esp+30]
//Alt: lea edi,[ebx+esi]
db 8B 44 24 30 8D 3C 33

unregistersymbol(aobDamagedUnitGrabber_r)
unregistersymbol(aobDamageGetter_r)

unregistersymbol(pDamagedUnit)

unregistersymbol(bEnableGodMode)
unregistersymbol(bEnableOneHitKill)
unregistersymbol(bEnableOneHitKnockout)

//"UFO.exe"+21EC5E:
aobEffectDamageFixer_r:
//Alt: mov cl,[eax+00000480]
db 8A 88 80 04 00 00

unregistersymbol(aobEffectDamageFixer_r)

//"UFO.exe"+3ED6BD:
aobAmmoTaker_r:
//Alt: sub edx,eax
//Alt: mov [ecx+08],edx
db 2B D0 89 51 08

unregistersymbol(aobAmmoTaker_r)

unregistersymbol(bEnableInfiniteAmmo)

//"UFO.exe"+95839:
aobEquipmentPager_r:
//Alt: test eax,eax
//Alt: setg al
db 85 C0 0F 9F C0

unregistersymbol(aobEquipmentPager_r)

unregistersymbol(bEnableMinimumEquipment)
unregistersymbol(iMinimumEquipment)

//"UFO.exe"+95BE9:
aobAmmoPager_r:
//Alt: test eax,eax
//Alt: setg al
db 85 C0 0F 9F C0

unregistersymbol(aobAmmoPager_r)

unregistersymbol(bEnableMinimumAmmo)
unregistersymbol(iMinimumAmmo)

//"UFO.exe"+AA189:
aobTrainingGranter_r:
//Alt: cmp eax,edi
//Alt: mov byte ptr [esp+14],00
db 3B C7 C6 44 24 14 00

unregistersymbol(aobTrainingGranter_r)

unregistersymbol(bEnableTrainingGranter)

//"UFO.exe"+3EA040:
aobTrainingTicker_r:
//Alt: fld dword ptr [esp+04]
//Alt: push ecx
db D9 44 24 04 51

unregistersymbol(aobTrainingTicker_r)

unregistersymbol(bEnableInstantTraining)
unregistersymbol(bEnableTrainingSpeedMultiplier)
unregistersymbol(fTrainingSpeedMultiplier)

//"UFO.exe"+D95CF:
aobResearchTicker_r:
//Alt: fdiv st(0),st(1)
//Alt: fadd dword ptr [esi+04]
db D8 F1 D8 46 04

unregistersymbol(aobResearchTicker_r)

unregistersymbol(bEnableInstantResearch)
unregistersymbol(bEnableResearchSpeedMultiplier)
unregistersymbol(fResearchSpeedMultiplier)

//"UFO.exe"+DBE94:
aobManufactureTicker_r:
//Alt: mov edi,[esp+10]
//Alt: test edi,edi
db 8B 7C 24 10 85 FF

unregistersymbol(aobManufactureTicker_r)

unregistersymbol(bEnableInstantManufacture)
unregistersymbol(bEnableManufactureSpeedMultiplier)
unregistersymbol(fManufactureSpeedMultiplier)

//"UFO.exe"+3E5C48:
aobStrategicXPGain_r:
//Alt: fadd dword ptr [esi+08]
//Alt: fld st(0)
db D8 46 08 D9 C0

unregistersymbol(aobStrategicXPGain_r)

unregistersymbol(bEnableXPGainMultiplier)
unregistersymbol(fXPGainMultiplier)

//"UFO.exe"+3E6054:
aobAttributePointUpdater_r:
//Alt: mov ecx,[eax+14]
//Alt: mov [eax+18],ecx
db 8B 48 14 89 48 18

unregistersymbol(aobAttributePointUpdater_r)

unregistersymbol(bEnableInfiniteAttributePoints)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>238</ID>
          <Description>"----- ----- Strategic game hacks below ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- "</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>317</ID>
          <Description>"bEnableInstantResearch"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInstantResearch</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>318</ID>
          <Description>"bEnableResearchSpeedMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableResearchSpeedMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>319</ID>
              <Description>"fResearchSpeedMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fResearchSpeedMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>320</ID>
          <Description>"bEnableInstantManufacture"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInstantManufacture</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>321</ID>
          <Description>"bEnableManufactureSpeedMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableManufactureSpeedMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>322</ID>
              <Description>"fManufactureSpeedMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fManufactureSpeedMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>314</ID>
          <Description>"bEnableInstantTraining"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInstantTraining</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>315</ID>
          <Description>"bEnableTrainingSpeedMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableTrainingSpeedMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>316</ID>
              <Description>"fTrainingSpeedMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fTrainingSpeedMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>250</ID>
          <Description>"bEnableMinimumEquipment"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMinimumEquipment</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>251</ID>
              <Description>"iMinimumEquipment"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinimumEquipment</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>248</ID>
          <Description>"bEnableMinimumAmmo"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableMinimumAmmo</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>249</ID>
              <Description>"iMinimumAmmo"</Description>
              <Color>FF0000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinimumAmmo</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>329</ID>
          <Description>"bEnableInfiniteAttributePoints"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteAttributePoints</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>313</ID>
          <Description>"bEnableTrainingGranter"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableTrainingGranter</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>323</ID>
          <Description>"bEnableXPGainMultiplier"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableXPGainMultiplier</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>324</ID>
              <Description>"fXPGainMultiplier"</Description>
              <Color>FF0000</Color>
              <VariableType>Float</VariableType>
              <Address>fXPGainMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>239</ID>
          <Description>"----- ----- Tactical game hacks below ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- "</Description>
          <Color>8000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>233</ID>
          <Description>"bEnableGodMode"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableGodMode</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>237</ID>
          <Description>"bEnableInfiniteAmmo"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableInfiniteAmmo</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>234</ID>
          <Description>"bEnableOneHitKill"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableOneHitKill</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>235</ID>
          <Description>"bEnableOneHitKnockout"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>bEnableOneHitKnockout</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
