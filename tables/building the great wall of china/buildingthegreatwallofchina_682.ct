<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Freeze Timer"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
dec [eax+34]
mov ecx,[ebp-08]


originalcode:
//fstp dword ptr [eax+34]
//mov ecx,[ebp-08]

exit:
jmp returnhere

"BuildingtheGreatWallofChina.exe"+C00E2:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BuildingtheGreatWallofChina.exe"+C00E2:
fstp dword ptr [eax+34]
mov ecx,[ebp-08]
//Alt: db D9 58 34 8B 4D F8
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Berries"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [eax],(int)10000
mov ecx,[ebp-04]

originalcode:
//mov [eax],ecx
//mov ecx,[ebp-04]

exit:
jmp returnhere

"BuildingtheGreatWallofChina.exe"+24F04:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BuildingtheGreatWallofChina.exe"+24F04:
mov [eax],ecx
mov ecx,[ebp-04]
//Alt: db 89 08 8B 4D FC
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Wood"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ecx+04],(int)10000
mov edx,[ebp-000000A0]

originalcode:
//mov [ecx+04],eax
//mov edx,[ebp-000000A0]

exit:
jmp returnhere

"BuildingtheGreatWallofChina.exe"+DA0D4:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BuildingtheGreatWallofChina.exe"+DA0D4:
mov [ecx+04],eax
mov edx,[ebp-000000A0]
//Alt: db 89 41 04 8B 95 60 FF FF FF
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Stone"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [eax+08],(int)10000
mov ecx,[ebp-00000110]

originalcode:
//mov [eax+08],edx
//mov ecx,[ebp-00000110]

exit:
jmp returnhere

"BuildingtheGreatWallofChina.exe"+DE3FC:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BuildingtheGreatWallofChina.exe"+DE3FC:
mov [eax+08],edx
mov ecx,[ebp-00000110]
//Alt: db 89 50 08 8B 8D F0 FE FF FF
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Gold"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [eax+0C],(int)10000
mov eax,[ebp-04]

originalcode:
//mov [eax+0C],ecx
//mov eax,[ebp-04]

exit:
jmp returnhere

"BuildingtheGreatWallofChina.exe"+24F39:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BuildingtheGreatWallofChina.exe"+24F39:
mov [eax+0C],ecx
mov eax,[ebp-04]
//Alt: db 89 48 0C 8B 45 FC
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Freeze Bonus"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
dec [ecx+38]
mov esp,ebp

originalcode:
//fstp dword ptr [ecx+38]
//mov esp,ebp

exit:
jmp returnhere

"BuildingtheGreatWallofChina.exe"+C014F:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"BuildingtheGreatWallofChina.exe"+C014F:
fstp dword ptr [ecx+38]
mov esp,ebp
//Alt: db D9 59 38 8B E5
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>Building the Great Wall of China - Full PreCracked - Foxy Games</Comments>
</CheatTable>
