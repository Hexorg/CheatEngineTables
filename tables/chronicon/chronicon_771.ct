<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>26</ID>
      <Description>"&lt;&lt; Enable &gt;&gt;"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>25</ID>
          <Description>"-- Values will reset after any change --"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"&lt;&lt; Find Player Base &gt;&gt;"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(searchHealth,Chronicon.exe,F2 0F 11 00 EB 14 8B 06 EB 0A 8B 06 89 04 24 E8 53) // should be unique
alloc(newmem,$1000)
alloc(baseAddress,4)
label(code)
label(return)

registersymbol(baseAddress)

newmem:

code:
  mov [baseAddress],eax
  movsd [eax],xmm0
  jmp Chronicon.exe+476573
  jmp return

searchHealth:
  jmp code
  nop
return:
registersymbol(searchHealth)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
searchHealth:
  db F2 0F 11 00 EB 14

unregistersymbol(searchHealth)
unregistersymbol(baseAddress)

dealloc(newmem)
dealloc(baseAddress)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>3</ID>
              <Description>"Health"</Description>
              <VariableType>Double</VariableType>
              <Address>baseAddress</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>4</ID>
              <Description>"MaxHealth"</Description>
              <VariableType>Double</VariableType>
              <Address>baseAddress</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Mana"</Description>
              <VariableType>Double</VariableType>
              <Address>baseAddress</Address>
              <Offsets>
                <Offset>6D0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>6</ID>
              <Description>"MaxMana"</Description>
              <VariableType>Double</VariableType>
              <Address>baseAddress</Address>
              <Offsets>
                <Offset>6E0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Damage"</Description>
              <VariableType>Double</VariableType>
              <Address>baseAddress</Address>
              <Offsets>
                <Offset>300</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19</ID>
              <Description>"Attack Speed"</Description>
              <VariableType>Double</VariableType>
              <Address>baseAddress</Address>
              <Offsets>
                <Offset>700</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Health Regeneration"</Description>
              <VariableType>Double</VariableType>
              <Address>baseAddress</Address>
              <Offsets>
                <Offset>710</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>20</ID>
              <Description>"Mana Regeneration"</Description>
              <VariableType>Double</VariableType>
              <Address>baseAddress</Address>
              <Offsets>
                <Offset>720</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"&lt;&lt; Find Last Moved Item &gt;&gt;"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(searchInvBase,Chronicon.exe,28 89 1E 8B 48 0C) // should be unique
alloc(newmem,$1000)
alloc(invBase,4)

label(code)
label(return)

registersymbol(invBase)

newmem:

code:
  mov [invBase],esi
  mov [esi],ebx
  mov ecx,[eax+0C]
  jmp return

searchInvBase+01:
  jmp code
return:
registersymbol(searchInvBase)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
searchInvBase+01:
  db 89 1E 8B 48 0C

unregistersymbol(invBase)
unregistersymbol(searchInvBase)

dealloc(invBase)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>10</ID>
              <Description>"-- Not the moved item! -- This is the item which is automatically moved if you switch two items --"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Amount"</Description>
              <VariableType>Double</VariableType>
              <Address>InvBase</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"&lt;&lt; Find Money Address &gt;&gt;"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(findMoneyBase,Chronicon.exe,F2 0F 11 06 8B 45 18) // should be unique
alloc(newmem,$1000)
alloc(moneyAddress,4)

label(code)
label(return)

registersymbol(moneyAddress)

newmem:

code:
  mov [moneyAddress],esi
  movsd [esi],xmm0
  mov eax,[ebp+18]
  jmp return

findMoneyBase:
  jmp code
  nop
  nop
return:
registersymbol(findMoneyBase)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
findMoneyBase:
  db F2 0F 11 06 8B 45 18

unregistersymbol(findMoneyBase)
unregistersymbol(moneyAddress)
dealloc(newmem)
dealloc(moneyAddress)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>13</ID>
              <Description>"-- Pick up some money --"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>"Money"</Description>
              <VariableType>Double</VariableType>
              <Address>moneyAddress</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"&lt;&lt; Find Modifier Base &gt;&gt;"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(findModifierBase,Chronicon.exe,DD 1E 5E 5D 5B 83 C4 10) // should be unique
alloc(newmem,$1000)
alloc(modifierBase,4)

label(code)
label(return)

registersymbol(modifierBase)

newmem:

code:
  mov [modifierBase],esi
  fstp qword ptr [esi]
  pop esi
  pop ebp
  pop ebx
  jmp return

findModifierBase:
  jmp code
return:
registersymbol(findModifierBase)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
findModifierBase:
  db DD 1E 5E 5D 5B

unregistersymbol(findModifierBase)
unregistersymbol(modifierBase)
dealloc(newmem)
dealloc(modifierBase)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>15</ID>
              <Description>"Crystal Modifier"</Description>
              <VariableType>Double</VariableType>
              <Address>modifierBase</Address>
              <Offsets>
                <Offset>910</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"EXP Modifier"</Description>
              <VariableType>Double</VariableType>
              <Address>modifierBase</Address>
              <Offsets>
                <Offset>1630</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"Cooldown Reduction"</Description>
              <VariableType>Double</VariableType>
              <Address>modifierBase</Address>
              <Offsets>
                <Offset>280</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"&lt;&lt; Find Skill Points &gt;"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(findSkillPoints,Chronicon.exe,F2 0F 11 00 F2 0F 2C 84 24 F0 00 00 00) // should be unique
alloc(newmem,$1000)
alloc(skillPoints,4)

label(code)
label(return)

registersymbol(skillPoints)

newmem:

code:
  mov [skillPoints],eax
  movsd [eax],xmm0
  cvttsd2si eax,[esp+000000F0]
  jmp return

findSkillPoints:
  jmp code
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(findSkillPoints)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
findSkillPoints:
  db F2 0F 11 00 F2 0F 2C 84 24 F0 00 00 00

unregistersymbol(findSkillPoints)
unregistersymbol(skillPoints)

dealloc(newmem)
dealloc(skillPoints)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>24</ID>
              <Description>"-- spend some skillpoints --"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Skill Points"</Description>
              <VariableType>Double</VariableType>
              <Address>skillpoints</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
