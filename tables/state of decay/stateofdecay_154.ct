<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(staminareadAOB,D9 86 AC 00 00 00 D9 1C 24)
registersymbol(staminareadAOB)
aobscan(ammoclipreadAOB,8B 44 24 04 3B 46 58 5E 74 07 8B 40 10)
registersymbol(ammoclipreadAOB)
aobscan(ammopouchreadAOB,8B 44 24 04 3B 46 34 5E 74 07 8B 40 10 59 C2 04)
registersymbol(ammopouchreadAOB)
aobscan(decryption1AOB,8B 49 08 8B C1 8B D1)
registersymbol(decryption1AOB)
aobscan(predecryptionAOB,8B 54 24 04 8B CA C1 E9 18 83 EC 08)
registersymbol(predecryptionAOB)
aobscan(encryptionAOB,8B ** ** ** ** ** 33 ** ** ** ** ** 56 33 54 24 08)
registersymbol(encryptionAOB)
aobscan(predecryption2AOB,51 8B 54 24 08 0F 57 C0 8B CA)
registersymbol(predecryption2AOB)
aobscan(inventoryread3AOB,8B 46 14 8D 14 7F 0F B6 44 50 04)
registersymbol(inventoryread3AOB)

label(pPlayer)
registersymbol(pPlayer)
label(pAmmoClip)
registersymbol(pAmmoClip)
label(pAmmoPouch)
registersymbol(pAmmoPouch)
label(bInfAmmoPouch)
registersymbol(bInfAmmoPouch)
label(bUseAltEncryption)
registersymbol(bUseAltEncryption)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pPlayer],esi

originalcode:
fld dword ptr [esi+000000AC]

exit:
jmp returnhere

///

newmem2:
mov [pAmmoClip],eax

originalcode2:
mov eax,[eax+10]
pop ecx
ret 0004

exit2:
jmp returnhere2

///

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAmmoPouch],eax
cmp byte ptr [bInfAmmoPouch],1
jne originalcode6
cmp [eax+10],#10
jge originalcode6
mov [eax+10],#10

originalcode6:
mov eax,[eax+10]
pop ecx
ret 0004

exit6:
jmp returnhere6

///
pPlayer:
dd 0
pAmmoClip:
dd 0
pAmmoPouch:
dd 0
bInfAmmoPouch:
db 0
bUseAltEncryption:
db 0
///

staminareadAOB: //"StateOfDecay.exe"+11232B9:
jmp newmem
nop
returnhere:

ammoclipreadAOB+a: //"StateOfDecay.exe"+1246640:
jmp newmem2
nop
nop
returnhere2:

ammopouchreadAOB+a: //"StateOfDecay.exe"+372EE0:
jmp newmem6
nop
nop
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminareadAOB: //"StateOfDecay.exe"+11232B9:
db D9 86 AC 00 00 00
//Alt: fld dword ptr [esi+000000AC]
ammoclipreadAOB+a: //"StateOfDecay.exe"+1246640:
db 8B 40 10 59 C2 04 00
//Alt: mov eax,[eax+10]
//Alt: pop ecx
//Alt: ret 0004
ammopouchreadAOB+a: //"StateOfDecay.exe"+372EE0:
db 8B 40 10 59 C2 04 00
//Alt: mov eax,[eax+10]
//Alt: pop ecx
//Alt: ret 0004
unregistersymbol(staminareadAOB)
unregistersymbol(ammoclipreadAOB)
unregistersymbol(ammopouchreadAOB)
unregistersymbol(decryption1AOB)
unregistersymbol(predecryptionAOB)
unregistersymbol(encryptionAOB)
unregistersymbol(predecryption2AOB)
unregistersymbol(inventoryread3AOB)

unregistersymbol(pPlayer)
unregistersymbol(pAmmoClip)
unregistersymbol(pAmmoPouch)
unregistersymbol(bInfAmmoPouch)
unregistersymbol(bUseAltEncryption)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>25</ID>
          <Description>"[Scripts]"</Description>
          <Color>800080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Inf. Health"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthwriteAOB,F3 0F 11 81 A4 00 00 00 F3 0F 10 44 24 08)
registersymbol(healthwriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//movss [ecx+000000A4],xmm0
cmp [pPlayer],ecx
jne originalcode

push ebx
mov ebx,[esp+08]
cmp [ecx+000000A4],ebx
pop ebx
jle originalcode
movss xmm0,[ecx+000000A4]

/*cmp dword ptr [ecx+000000A4],(float)1.0
jge originalcode
mov dword ptr [ecx+000000A4],(float)1.0*/

originalcode:
movss [ecx+000000A4],xmm0

exit:
jmp returnhere

healthwriteAOB: //"StateOfDecay.exe"+1121DF0:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthwriteAOB: //"StateOfDecay.exe"+1121DF0:
db F3 0F 11 81 A4 00 00 00
//Alt: movss [ecx+000000A4],xmm0
unregistersymbol(healthwriteAOB)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>248</ID>
              <Description>"Full Health for All Human"</Description>
              <Options moHideChildren="1"/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(humanhealthreadAOB,D9 86 A4 00 00 00 68 ** ** ** ** D8 44 24 14)
registersymbol(humanhealthreadAOB)

label(bFriendlyAll)
registersymbol(bFriendlyAll)
label(bFriendAll)
registersymbol(bFriendAll)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(checkFriendAll)
label(checkSetHomeAll)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fld dword ptr [esp+8]
fstp dword ptr [esi+000000A4]

pushfd
cmp byte ptr [bFriendlyAll],1
jne checkFriendAll
mov byte ptr [esi+15e],64
jmp checkFriendAll

checkFriendAll:
cmp byte ptr [bFriendAll],1
jne checkSetHomeAll
cmp byte ptr [esi+158],0F
je checkSetHomeAll
mov byte ptr [esi+158],0B
jmp checkSetHomeAll

checkSetHomeAll:
//cmp byte ptr [bSetHome],01
//jne originalcode
//cmp byte ptr [ecx+158],0B
//jne originalcode
//mov byte ptr [ecx+15f],00

originalcode:
popfd
fld dword ptr [esi+000000A4]

exit:
jmp returnhere

///
bFriendlyAll:
db 0
bFriendAll:
db 0
///

humanhealthreadAOB: //"StateOfDecay.exe"+1123098:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
humanhealthreadAOB: //"StateOfDecay.exe"+1123098:
db D9 86 A4 00 00 00
//Alt: fld dword ptr [esi+000000A4]
unregistersymbol(humanhealthreadAOB)
unregistersymbol(bFriendlyAll)
unregistersymbol(bFriendAll)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>290</ID>
                  <Description>"All Friendly Bar Full"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFriendlyAll:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFriendlyAll:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>296</ID>
                  <Description>"All Friend"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFriendAll:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFriendAll:
db 0
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>297</ID>
              <Description>"All Human"</Description>
              <Options moHideChildren="1"/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(friendflagreadAOB,8B 81 58 01 00 00 24 01)
registersymbol(friendflagreadAOB)

label(bFriendAllV2)
registersymbol(bFriendAllV2)
label(bSetHome)
registersymbol(bSetHome)
label(bSetPositiveAttitude)
registersymbol(bSetPositiveAttitude)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(setFriend)
label(setPositiveAttitude)
label(setPositiveAttitudeB)
label(setPositiveAttitudeLoop)
label(checkNegativeAttitude)
label(checkNormalAttitude)
label(checkHistory)
label(setPositiveAttitudeLoopEnd)
label(setPositiveAttitudeC)
label(setPositiveAttitudeD)
label(setPositiveAttitudeE)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx],FFFFFFFF
je originalcode

cmp byte ptr [bSetHome],01
jne setFriend
cmp byte ptr [ecx+158],0B
jne setFriend
mov byte ptr [ecx+15f],00

setFriend:
cmp byte ptr [bFriendAllV2],01
jne setPositiveAttitude
cmp byte ptr [ecx+158],0F
je setPositiveAttitude
mov byte ptr [ecx+158],0B

setPositiveAttitude:
cmp byte ptr [bSetPositiveAttitude],01
jne originalcode
cmp byte ptr [ecx+158],0F
je setPositiveAttitudeB
cmp byte ptr [ecx+158],0B
je setPositiveAttitudeB
cmp byte ptr [ecx+158],09
je setPositiveAttitudeB
jmp originalcode

setPositiveAttitudeB:
xor eax,eax

setPositiveAttitudeLoop:
cmp word ptr [ecx+eax*2],FFFF
je setPositiveAttitudeLoopEnd

checkNegativeAttitude:
cmp word ptr [ecx+eax*2],0199 //Update3: 0197, Update5: 0199
jl setPositiveAttitudeLoopEnd
cmp word ptr [ecx+eax*2],01B3 //Update3: 01B1, Update5: 01B3
jle setPositiveAttitudeC

checkNormalAttitude:
cmp word ptr [ecx+eax*2],01B6 //Update3: 01B4, Update5: 01B6
jl setPositiveAttitudeLoopEnd
cmp word ptr [ecx+eax*2],01B9 //Update3: 01B7, Update5: 01B9
jle setPositiveAttitudeD

checkHistory:
cmp word ptr [ecx+eax*2],01CF //Update3: 01CD, Update5: 01CF
jl setPositiveAttitudeLoopEnd
cmp word ptr [ecx+eax*2],01D8 //Update3: 01D6, Update5: 01D8
jle setPositiveAttitudeE
jmp setPositiveAttitudeLoopEnd

setPositiveAttitudeLoopEnd:
inc eax
cmp eax,23
jle setPositiveAttitudeLoop
jmp originalcode

setPositiveAttitudeC:
mov word ptr [ecx+eax*2],018F //Update3: 018D, Update5: 018F
jmp originalcode

setPositiveAttitudeD:
mov word ptr [ecx+eax*2],0195 //Update3: 0193, Update5: 0195
jmp originalcode

setPositiveAttitudeE:
mov word ptr [ecx+eax*2],0196 //Update3: 0194, Update5: 0196
jmp originalcode

originalcode:
mov eax,[ecx+00000158]

exit:
jmp returnhere

///
bFriendAllV2:
db 0
bSetHome:
db 0
bSetPositiveAttitude:
db 0
///

friendflagreadAOB: //"StateOfDecay.exe"+1115F90:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
friendflagreadAOB: //"StateOfDecay.exe"+1115F90:
db 8B 81 58 01 00 00
//Alt: mov eax,[ecx+00000158]
unregistersymbol(friendflagreadAOB)
unregistersymbol(bFriendAllV2)
unregistersymbol(bSetHome)
unregistersymbol(bSetPositiveAttitude)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>299</ID>
                  <Description>"All Friend V2"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFriendAllV2:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFriendAllV2:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>339</ID>
                  <Description>"Set All Resident Positive Attitude"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bSetPositiveAttitude:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bSetPositiveAttitude:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>298</ID>
                  <Description>"Set All Friend Home (Shift_PageUp/PageDown)"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bSetHome:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bSetHome:
db 0
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>16</Key>
                        <Key>33</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Deactivate</Action>
                      <Keys>
                        <Key>16</Key>
                        <Key>34</Key>
                      </Keys>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Inf. Stamina"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(staminawriteAOB,F3 0F 11 80 AC 00 00 00 F3 0F 10 44 24 08 F3 0F 11 80 B0 00 00 00 C3)
registersymbol(staminawriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pPlayer],eax
jne originalcode
push ebx
mov ebx,[esp+08]
cmp [eax+000000AC],ebx
pop ebx
jle originalcode
movss xmm0,[eax+000000AC]

originalcode:
movss [eax+000000AC],xmm0

exit:
jmp returnhere

staminawriteAOB: //"StateOfDecay.exe"+11137EF:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminawriteAOB: //"StateOfDecay.exe"+11137EF:
db F3 0F 11 80 AC 00 00 00
//Alt: movss [eax+000000AC],xmm0
unregistersymbol(staminawriteAOB)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Inf. Ammo Clip"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoclipwriteAOB,8B 44 24 0C 3B 43 58 74 09 8B 54 24 34 89 50 10)
registersymbol(ammoclipwriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[esp+34]

cmp [pAmmoClip],eax
jne originalcode
cmp edx,1
jge originalcode
mov edx,1

originalcode:
//mov edx,[esp+34]
mov [eax+10],edx

exit:
jmp returnhere

ammoclipwriteAOB+9: //"StateOfDecay.exe"+12485AF:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoclipwriteAOB+9: //"StateOfDecay.exe"+12485AF:
db 8B 54 24 34 89 50 10
//Alt: mov edx,[esp+34]
//Alt: mov [eax+10],edx
unregistersymbol(ammoclipwriteAOB)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Inf. Ammo Pouch"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bInfAmmoPouch:
db 01

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bInfAmmoPouch:
db 00
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>130</ID>
              <Description>"Inf. Durability"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(meleeweapondurabilitywriteAOB,83 C4 04 83 F8 05 75 10 8B 46 14 66 8B 4C 24 10 8D 14 7F 66 89 4C 50 02)
registersymbol(meleeweapondurabilitywriteAOB)
aobscan(gundurabilityAOB,83 C4 04 83 F8 04 75 10 8B 46 14 66 8B 4C 24 10 8D 14 7F 66 89 4C 50 02)
registersymbol(gundurabilityAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp cx,#30
jge originalcode
mov cx,#30
mov [esp+10],cx

originalcode:
mov [eax+edx*2+02],cx

exit:
jmp returnhere

///

newmem2:
cmp cx,#30
jge originalcode2
mov cx,#30
mov [esp+10],cx

originalcode2:
mov [eax+edx*2+02],cx

exit2:
jmp returnhere2

meleeweapondurabilitywriteAOB+13: //"StateOfDecay.exe"+11D987C:
jmp newmem
returnhere:

gundurabilityAOB+13: //"StateOfDecay.exe"+11D946C:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
meleeweapondurabilitywriteAOB+13: //"StateOfDecay.exe"+11D987C:
db 66 89 4C 50 02
//Alt: mov [eax+edx*2+02],cx
gundurabilityAOB+13: //"StateOfDecay.exe"+11D946C:
db 66 89 4C 50 02
//Alt: mov [eax+edx*2+02],cx
unregistersymbol(meleeweapondurabilitywriteAOB)
unregistersymbol(gundurabilityAOB)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>265</ID>
              <Description>"Inf. Items"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(itemvaluereadbeforeuseAOB,0F B6 0C 11 3B 4C 24 10)
registersymbol(itemvaluereadbeforeuseAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [ecx+edx],2
jge originalcode
mov byte ptr [ecx+edx],2

originalcode:
movzx ecx,byte ptr [ecx+edx]
cmp ecx,[esp+10]

exit:
jmp returnhere

itemvaluereadbeforeuseAOB: //"StateOfDecay.exe"+11DEC4F:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
itemvaluereadbeforeuseAOB: //"StateOfDecay.exe"+11DEC4F:
db 0F B6 0C 11 3B 4C 24 10
//Alt: movzx ecx,byte ptr [ecx+edx]
//Alt: cmp ecx,[esp+10]
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>137</ID>
              <Description>"Instant Cooldown for Radio Actions"</Description>
              <Options moHideChildren="1"/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(radioactionscooldownwriteAOB,F3 0F 11 44 16 50 47 83 C6 58)
registersymbol(radioactionscooldownwriteAOB)

label(pRadioActions)
registersymbol(pRadioActions)
label(bInstantCooldownRActions)
registersymbol(bInstantCooldownRActions)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea ecx,[esi+edx]
mov [pRadioActions+edi*4],ecx
mov ecx,edi
//cmp byte ptr [bInstantCooldownRActions],1
//jne originalcode
mov [esi+edx+50],0
movss xmm0,[esi+edx+50]
cmp byte ptr [esi+edx+4C],1
jge originalcode
mov byte ptr [esi+edx+4C],1

originalcode:
movss [esi+edx+50],xmm0

exit:
jmp returnhere

///
bInstantCooldownRActions:
db 1
pRadioActions:
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
///

radioactionscooldownwriteAOB: //"StateOfDecay.exe"+11FB6EF:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
radioactionscooldownwriteAOB: //"StateOfDecay.exe"+11FB6EF:
db F3 0F 11 44 16 50
//Alt: movss [esi+edx+50],xmm0
unregistersymbol(radioactionscooldownwriteAOB)
unregistersymbol(pRadioActions)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>283</ID>
              <Description>"Focus Shot / Ninja"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(aimflagcheckzeroAOB,8B 4C 24 48 80 79 2D 00)
registersymbol(aimflagcheckzeroAOB)

label(bSpecialTechniqueSlot)
registersymbol(bSpecialTechniqueSlot)
label(bAimFlag)
registersymbol(bAimFlag)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(loopCheck1)
label(isNinjaOrFS)
label(setFS)
label(setNinja)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fstp dword ptr [esp+04]
mov ecx,edi

pushfd
pushad
xor ecx,ecx
mov edi,15

loopCheck1:
cmp [esi+f8+ecx*4],32
je isNinjaOrFS
cmp [esi+f8+ecx*4],34
je isNinjaOrFS

cmp ecx,edi
je originalcode
inc ecx
jmp loopCheck1

isNinjaOrFS:
cmp [bAimFlag],0
je setNinja
mov ebx,[bAimFlag]
cmp byte ptr [ebx+2D],1
je setFS
jmp setNinja

setNinja:
mov [esi+f8+ecx*4],32
jmp originalcode

setFS:
mov [esi+f8+ecx*4],34
jmp originalcode

originalcode:
popad
popfd
mov ecx,edi
//fstp dword ptr [esp+04]
//mov ecx,edi

exit:
jmp returnhere

///

newmem2:
mov ecx,[esp+48]
mov [bAimFlag],ecx

originalcode2:
//mov ecx,[esp+48]
cmp byte ptr [ecx+2D],00

exit2:
jmp returnhere2

///
bSpecialTechniqueSlot:
db 14
bAimFlag:
dd 0
///

staminareadAOB-6: //"StateOfDecay.exe"+1128753:
jmp newmem
nop
returnhere:

aimflagcheckzeroAOB: //"StateOfDecay.exe"+1231DC9:
jmp newmem2
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminareadAOB-6: //"StateOfDecay.exe"+1128753:
db D9 5C 24 04 8B CF
//Alt: fstp dword ptr [esp+04]
//Alt: mov ecx,edi
aimflagcheckzeroAOB: //"StateOfDecay.exe"+1231DC9:
db 8B 4C 24 48 80 79 2D 00
//Alt: mov ecx,[esp+48]
//Alt: cmp byte ptr [ecx+2D],00
unregistersymbol(aimflagcheckzeroAOB)
unregistersymbol(bSpecialTechniqueSlot)
unregistersymbol(bAimFlag)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>389</ID>
              <Description>"Use Alt Encryption (for Influence &amp; Stockpiles V2.3.1 &amp; Morale)"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bUseAltEncryption:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bUseAltEncryption:
db 0
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>160</ID>
              <Description>"Influence &amp; Stockpiles V2.3.1 (for game Update1-6 &amp; 8)"</Description>
              <Options moHideChildren="1"/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(checkproperdecryptAOB,39 87 ** ** ** ** 74 0B)
registersymbol(checkproperdecryptAOB)
aobscan(getrealaddresspredecryptAOB,8B 50 0C 8D 0C 8A E8 ** ** ** ** EB)
registersymbol(getrealaddresspredecryptAOB)

label(pMedicine)
registersymbol(pMedicine)
label(fMedicine)
registersymbol(fMedicine)
label(fDesiredMedicine)
registersymbol(fDesiredMedicine)

label(pFood)
registersymbol(pFood)
label(fFood)
registersymbol(fFood)
label(fDesiredFood)
registersymbol(fDesiredFood)

label(pAmmunition)
registersymbol(pAmmunition)
label(fAmmunition)
registersymbol(fAmmunition)
label(fDesiredAmmunition)
registersymbol(fDesiredAmmunition)

label(pMaterial)
registersymbol(pMaterial)
label(fMaterial)
registersymbol(fMaterial)
label(fDesiredMaterial)
registersymbol(fDesiredMaterial)

label(pFuel)
registersymbol(pFuel)
label(fFuel)
registersymbol(fFuel)
label(fDesiredFuel)
registersymbol(fDesiredFuel)

label(pInfluence)
registersymbol(pInfluence)
label(fInfluence)
registersymbol(fInfluence)
label(fDesiredInfluence)
registersymbol(fDesiredInfluence)

label(pBeds)
registersymbol(pBeds)
label(fBeds)
registersymbol(fBeds)
label(fDesiredBeds)
registersymbol(fDesiredBeds)

label(bTypeFlag)
registersymbol(bTypeFlag)

label(bLockMedicine)
registersymbol(bLockMedicine)
label(bMinimumMedicine)
registersymbol(bMinimumMedicine)
label(bLockFood)
registersymbol(bLockFood)
label(bMinimumFood)
registersymbol(bMinimumFood)
label(bLockAmmunition)
registersymbol(bLockAmmunition)
label(bMinimumAmmunition)
registersymbol(bMinimumAmmunition)
label(bLockMaterial)
registersymbol(bLockMaterial)
label(bMinimumMaterial)
registersymbol(bMinimumMaterial)
label(bLockFuel)
registersymbol(bLockFuel)
label(bMinimumFuel)
registersymbol(bMinimumFuel)
label(bLockInfluence)
registersymbol(bLockInfluence)
label(bMinimumInfluence)
registersymbol(bMinimumInfluence)
label(bLockBeds)
registersymbol(bLockBeds)
label(bMinimumBeds)
registersymbol(bMinimumBeds)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isMedicine)
label(isFood)
label(isAmmunition)
label(isMaterial)
label(isFuel)
label(isInfluence)
label(isBeds)
label(resetFlag)
label(doDecryption)
label(afterDecryption)
label(isMedicineAfter)
label(isFoodAfter)
label(isAmmunitionAfter)
label(isMaterialAfter)
label(isFuelAfter)
label(isInfluenceAfter)
label(isBedsAfter)
label(preEncryption)
label(doEncryption)
label(altEncryption)
label(endAfter)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isMedicine2)
label(isFood2)
label(isAmmunition2)
label(isMaterial2)
label(isFuel2)
label(isInfluence2)
label(isBeds2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd

cmp ebx,0
jne resetFlag

cmp edi,0C
je isMedicine
cmp edi,18
je isFood
cmp edi,24
je isAmmunition
cmp edi,30
je isMaterial
cmp edi,3C
je isFuel
cmp edi,48
je isInfluence
cmp edi,54
je isBeds
jmp resetFlag

isMedicine:
mov byte ptr [bTypeFlag],0C
jmp doDecryption

isFood:
mov byte ptr [bTypeFlag],18
jmp doDecryption

isAmmunition:
mov byte ptr [bTypeFlag],24
jmp doDecryption

isMaterial:
mov byte ptr [bTypeFlag],30
jmp doDecryption

isFuel:
mov byte ptr [bTypeFlag],3C
jmp doDecryption

isInfluence:
mov byte ptr [bTypeFlag],48
jmp doDecryption

isBeds:
mov byte ptr [bTypeFlag],54
jmp doDecryption

resetFlag:
mov byte ptr [bTypeFlag],FF
jmp doDecryption

doDecryption:
popfd
push eax
call predecryptionAOB //StateOfDecay.exe+FF3FE0

afterDecryption:
pushfd

cmp byte ptr [bTypeFlag],0C
je isMedicineAfter
cmp byte ptr [bTypeFlag],18
je isFoodAfter
cmp byte ptr [bTypeFlag],24
je isAmmunitionAfter
cmp byte ptr [bTypeFlag],30
je isMaterialAfter
cmp byte ptr [bTypeFlag],3C
je isFuelAfter
cmp byte ptr [bTypeFlag],48
je isInfluenceAfter
cmp byte ptr [bTypeFlag],54
je isBedsAfter
jmp originalcode

isMedicineAfter:
mov [fMedicine],eax
fild [fMedicine]
fstp [fMedicine]

pushad
mov ecx,[pMedicine]
mov eax,[fMedicine]
mov ebx,[fDesiredMedicine]

cmp byte ptr [bLockMedicine],1
je doEncryption
cmp byte ptr [bMinimumMedicine],1
je preEncryption
jmp endAfter

isFoodAfter:
mov [fFood],eax
fild [fFood]
fstp [fFood]

pushad
mov ecx,[pFood]
mov eax,[fFood]
mov ebx,[fDesiredFood]

cmp byte ptr [bLockFood],1
je doEncryption
cmp byte ptr [bMinimumFood],1
je preEncryption
jmp endAfter

isAmmunitionAfter:
mov [fAmmunition],eax
fild [fAmmunition]
fstp [fAmmunition]

pushad
mov ecx,[pAmmunition]
mov eax,[fAmmunition]
mov ebx,[fDesiredAmmunition]

cmp byte ptr [bLockAmmunition],1
je doEncryption
cmp byte ptr [bMinimumAmmunition],1
je preEncryption
jmp endAfter

isMaterialAfter:
mov [fMaterial],eax
fild [fMaterial]
fstp [fMaterial]

pushad
mov ecx,[pMaterial]
mov eax,[fMaterial]
mov ebx,[fDesiredMaterial]

cmp byte ptr [bLockMaterial],1
je doEncryption
cmp byte ptr [bMinimumMaterial],1
je preEncryption
jmp endAfter

isFuelAfter:
mov [fFuel],eax
fild [fFuel]
fstp [fFuel]

pushad
mov ecx,[pFuel]
mov eax,[fFuel]
mov ebx,[fDesiredFuel]

cmp byte ptr [bLockFuel],1
je doEncryption
cmp byte ptr [bMinimumFuel],1
je preEncryption
jmp endAfter

isInfluenceAfter:
mov [fInfluence],eax
fild [fInfluence]
fstp [fInfluence]

pushad
mov ecx,[pInfluence]
mov eax,[fInfluence]
mov ebx,[fDesiredInfluence]

cmp byte ptr [bLockInfluence],1
je doEncryption
cmp byte ptr [bMinimumInfluence],1
je preEncryption
jmp endAfter

isBedsAfter:
mov [fBeds],eax
fild [fBeds]
fstp [fBeds]

pushad
mov ecx,[pBeds]
mov eax,[fBeds]
mov ebx,[fDesiredBeds]

cmp byte ptr [bLockBeds],1
je doEncryption
cmp byte ptr [bMinimumBeds],1
je preEncryption
jmp endAfter

preEncryption:
cmp eax,ebx
jge endAfter
doEncryption:
cmp byte ptr [bUseAltEncryption],1
je altEncryption
push ebx
call encryptionAOB
jmp endAfter
altEncryption:
///
mov eax,[decryption1AOB+80]
mov edx,[eax] //[StateOfDecay.exe+1A41F90]
mov eax,[decryption1AOB+86]
xor edx,[eax] //[StateOfDecay.exe+1A42CB0]
xor edx,ebx
mov eax,edx
mov esi,edx
and esi,0000FF00
shr eax,08
shl esi,08
and edx,FF0000FF
and eax,0000FF00
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,04
and esi,00F000F0 //StateOfDecay.exe+B000F0
shl esi,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
or edx,esi
and eax,F00FF00F
or edx,eax
mov esi,edx
mov eax,edx
and esi,0C0C0C0C
add esi,esi
shr eax,02
add esi,esi
and edx,C3C3C3C3
and eax,0C0C0C0C
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,1
and esi,22222222
and edx,22222222
add esi,esi
or edx,esi
and eax,99999999
or edx,eax
mov [ecx+08],edx
///
jmp endAfter

endAfter:
popad
jmp originalcode

originalcode:
mov byte ptr [bTypeFlag],FF
popfd
//push eax
//call predecryptionAOB //StateOfDecay.exe+FF3FE0

exit:
jmp returnhere

///

newmem2:
mov edx,[eax+0C]
lea ecx,[edx+ecx*4]

pushfd
cmp byte ptr [bTypeFlag],0C
je isMedicine2
cmp byte ptr [bTypeFlag],18
je isFood2
cmp byte ptr [bTypeFlag],24
je isAmmunition2
cmp byte ptr [bTypeFlag],30
je isMaterial2
cmp byte ptr [bTypeFlag],3C
je isFuel2
cmp byte ptr [bTypeFlag],48
je isInfluence2
cmp byte ptr [bTypeFlag],54
je isBeds2
jmp originalcode2

isMedicine2:
mov [pMedicine],ecx
jmp originalcode2

isFood2:
mov [pFood],ecx
jmp originalcode2

isAmmunition2:
mov [pAmmunition],ecx
jmp originalcode2

isMaterial2:
mov [pMaterial],ecx
jmp originalcode2

isFuel2:
mov [pFuel],ecx
jmp originalcode2

isInfluence2:
mov [pInfluence],ecx
jmp originalcode2

isBeds2:
mov [pBeds],ecx
jmp originalcode2

originalcode2:
popfd
//mov edx,[eax+0C]
//lea ecx,[edx+ecx*4]

exit2:
jmp returnhere2

///
pMedicine:
dd 0
fMedicine:
dd 0
fDesiredMedicine:
dd (float)25.0

pFood:
dd 0
fFood:
dd 0
fDesiredFood:
dd (float)25.0

pAmmunition:
dd 0
fAmmunition:
dd 0
fDesiredAmmunition:
dd (float)25.0

pMaterial:
dd 0
fMaterial:
dd 0
fDesiredMaterial:
dd (float)50.0

pFuel:
dd 0
fFuel:
dd 0
fDesiredFuel:
dd (float)25.0

pInfluence:
dd 0
fInfluence:
dd 0
fDesiredInfluence:
dd (float)100.0

pBeds:
dd 0
fBeds:
dd 0
fDesiredBeds:
dd (float)25.0

bTypeFlag:
db FF

bLockMedicine:
db 0
bMinimumMedicine:
db 0
bLockFood:
db 0
bMinimumFood:
db 0
bLockAmmunition:
db 0
bMinimumAmmunition:
db 0
bLockMaterial:
db 0
bMinimumMaterial:
db 0
bLockFuel:
db 0
bMinimumFuel:
db 0
bLockInfluence:
db 0
bMinimumInfluence:
db 0
bLockBeds:
db 0
bMinimumBeds:
db 0
///

checkproperdecryptAOB-9: //"StateOfDecay.exe"+10652DE:
jmp newmem
nop
returnhere:

getrealaddresspredecryptAOB: //"StateOfDecay.exe"+FF402A:
jmp newmem2
nop
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
checkproperdecryptAOB-9: //"StateOfDecay.exe"+10652DE:
db 50
call predecryptionAOB //StateOfDecay.exe+FF3FE0
//Alt: push eax
//Alt: db E8 FC EC F8 FF
getrealaddresspredecryptAOB: //"StateOfDecay.exe"+FF402A:
db 8B 50 0C 8D 0C 8A
//Alt: mov edx,[eax+0C]
//Alt: lea ecx,[edx+ecx*4]
unregistersymbol(checkproperdecryptAOB)
unregistersymbol(getrealaddresspredecryptAOB)

unregistersymbol(pMedicine)
unregistersymbol(fMedicine)
unregistersymbol(fDesiredMedicine)
unregistersymbol(pFood)
unregistersymbol(fFood)
unregistersymbol(fDesiredFood)
unregistersymbol(pAmmunition)
unregistersymbol(fAmmunition)
unregistersymbol(fDesiredAmmunition)
unregistersymbol(pMaterial)
unregistersymbol(fMaterial)
unregistersymbol(fDesiredMaterial)
unregistersymbol(pFuel)
unregistersymbol(fFuel)
unregistersymbol(fDesiredFuel)
unregistersymbol(pInfluence)
unregistersymbol(fInfluence)
unregistersymbol(fDesiredInfluence)
unregistersymbol(pBeds)
unregistersymbol(fBeds)
unregistersymbol(fDesiredBeds)

unregistersymbol(bTypeFlag)

unregistersymbol(bLockMedicine)
unregistersymbol(bMinimumMedicine)
unregistersymbol(bLockFood)
unregistersymbol(bMinimumFood)
unregistersymbol(bLockAmmunition)
unregistersymbol(bMinimumAmmunition)
unregistersymbol(bLockMaterial)
unregistersymbol(bMinimumMaterial)
unregistersymbol(bLockFuel)
unregistersymbol(bMinimumFuel)
unregistersymbol(bLockInfluence)
unregistersymbol(bMinimumInfluence)
unregistersymbol(bLockBeds)
unregistersymbol(bMinimumBeds)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>358</ID>
                  <Description>"Influence (for reference only)"</Description>
                  <Options moHideChildren="1"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>fInfluence</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>359</ID>
                      <Description>"actual address &amp; value"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInfluence</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>360</ID>
                  <Description>"Desired Influence"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredInfluence</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>105</Key>
                      </Keys>
                      <Value>100</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>105</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>361</ID>
                      <Description>"Minimum at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumInfluence:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumInfluence:
db 0
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Activate</Action>
                          <Keys>
                            <Key>121</Key>
                          </Keys>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>362</ID>
                      <Description>"Lock at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockInfluence:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockInfluence:
db 0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>363</ID>
                  <Description>"Daily Rations of Food (for reference only)"</Description>
                  <Options moHideChildren="1"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>fFood</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>364</ID>
                      <Description>"actual address &amp; value"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pFood</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>365</ID>
                  <Description>"Desired Daily Rations of Food"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredFood</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>97</Key>
                      </Keys>
                      <Value>25</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>97</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>366</ID>
                      <Description>"Minimum at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumFood:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumFood:
db 0
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Activate</Action>
                          <Keys>
                            <Key>121</Key>
                          </Keys>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>367</ID>
                      <Description>"Lock at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockFood:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockFood:
db 0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>368</ID>
                  <Description>"Cases of Medicine (for reference only)"</Description>
                  <Options moHideChildren="1"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>fMedicine</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>369</ID>
                      <Description>"actual address &amp; value"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pMedicine</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>370</ID>
                  <Description>"Desired Cases of Medicine"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredMedicine</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>98</Key>
                      </Keys>
                      <Value>25</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>98</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>371</ID>
                      <Description>"Minimum at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumMedicine:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumMedicine:
db 0
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Activate</Action>
                          <Keys>
                            <Key>121</Key>
                          </Keys>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>372</ID>
                      <Description>"Lock at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockMedicine:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockMedicine:
db 0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>373</ID>
                  <Description>"Cases of Ammunition (for reference only)"</Description>
                  <Options moHideChildren="1"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>fAmmunition</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>374</ID>
                      <Description>"actual address &amp; value"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pAmmunition</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>375</ID>
                  <Description>"Desired Cases of Ammunition"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredAmmunition</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>99</Key>
                      </Keys>
                      <Value>25</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>99</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>376</ID>
                      <Description>"Minimum at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumAmmunition:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumAmmunition:
db 0
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Activate</Action>
                          <Keys>
                            <Key>121</Key>
                          </Keys>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>377</ID>
                      <Description>"Lock at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockAmmunition:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockAmmunition:
db 0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>378</ID>
                  <Description>"Construction Material (for reference only)"</Description>
                  <Options moHideChildren="1"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>fMaterial</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>379</ID>
                      <Description>"actual address &amp; value"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pMaterial</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>380</ID>
                  <Description>"Desired Construction Material"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredMaterial</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>100</Key>
                      </Keys>
                      <Value>50</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>100</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>381</ID>
                      <Description>"Minimum at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumMaterial:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumMaterial:
db 0
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Activate</Action>
                          <Keys>
                            <Key>121</Key>
                          </Keys>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>382</ID>
                      <Description>"Lock at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockMaterial:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockMaterial:
db 0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>383</ID>
                  <Description>"Barrels of Fuel (for reference only)"</Description>
                  <Options moHideChildren="1"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>fFuel</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>384</ID>
                      <Description>"actual address &amp; value"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pFuel</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>385</ID>
                  <Description>"Desired Barrels of Fuel"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredFuel</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>101</Key>
                      </Keys>
                      <Value>25</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>101</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>386</ID>
                      <Description>"Minimum at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumFuel:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumFuel:
db 0
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Activate</Action>
                          <Keys>
                            <Key>121</Key>
                          </Keys>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>387</ID>
                      <Description>"Lock at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockFuel:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockFuel:
db 0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>281</ID>
              <Description>"Morale (for game Update1-6 &amp; 8)"</Description>
              <Options moHideChildren="1"/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(domoraledecryptionAOB,50 E8 ** ** ** ** D8 ** ** ** ** ** 68)
registersymbol(domoraledecryptionAOB)

label(pMorale)
registersymbol(pMorale)
label(fMorale)
registersymbol(fMorale)
label(fDesiredMorale)
registersymbol(fDesiredMorale)

label(bLockMorale)
registersymbol(bLockMorale)
label(bMinimumMorale)
registersymbol(bMinimumMorale)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(sCon1)
label(sCon2)
label(afterGetAddress)
label(preEncryption)
label(doEncryption)
label(altEncryption)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
mov ebx,0D000013
push ecx
mov edx,ebx
xorps xmm0,xmm0
mov ecx,edx
shr ecx,18
movss [esp],xmm0
cmp ecx,19
jae afterGetAddress
mov eax,edx
shr eax,10
shl ecx,04
and eax,000000FF
mov ebx,[predecryption2AOB+26]
add ecx,ebx
cmp eax,[ecx+08]

jae sCon1
shl eax,04
add eax,[ecx+0C]
jmp sCon2

sCon1:
mov eax,[ecx+0C]
sCon2:
movzx edx,dx

cmp edx,[eax+08]
jae afterGetAddress

lea ecx,[edx+edx*4]
mov edx,[eax+0C]
lea ecx,[edx+ecx*4]

mov [pMorale],ecx

afterGetAddress:
pop ecx
popad

///
push eax
call predecryption2AOB //StateOfDecay.exe+FF4CF0
///

fst dword ptr [fMorale]

pushad
mov ecx,[pMorale]
cmp ecx,0
je originalcode
mov eax,[fMorale]
mov ebx,[fDesiredMorale]

cmp byte ptr [bLockMorale],1
je doEncryption
cmp byte ptr [bMinimumMorale],1
je preEncryption
jmp originalcode

preEncryption:
cmp eax,ebx
jge originalcode
doEncryption:
cmp byte ptr [bUseAltEncryption],1
je altEncryption
push ebx
call encryptionAOB
jmp originalcode
altEncryption:
///
mov eax,[decryption1AOB+80]
mov edx,[eax] //[StateOfDecay.exe+1A41F90]
mov eax,[decryption1AOB+86]
xor edx,[eax] //[StateOfDecay.exe+1A42CB0]
xor edx,ebx
mov eax,edx
mov esi,edx
and esi,0000FF00
shr eax,08
shl esi,08
and edx,FF0000FF
and eax,0000FF00
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,04
and esi,00F000F0 //StateOfDecay.exe+B000F0
shl esi,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
or edx,esi
and eax,F00FF00F
or edx,eax
mov esi,edx
mov eax,edx
and esi,0C0C0C0C
add esi,esi
shr eax,02
add esi,esi
and edx,C3C3C3C3
and eax,0C0C0C0C
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,1
and esi,22222222
and edx,22222222
add esi,esi
or edx,esi
and eax,99999999
or edx,eax
mov [ecx+08],edx
///

originalcode:
popad
//push eax
//call predecryption2AOB //StateOfDecay.exe+FF4CF0

exit:
jmp returnhere

///
pMorale:
dd 0
fMorale:
dd 0
fDesiredMorale:
dd (float)90.0
bLockMorale:
db 0
bMinimumMorale:
db 0
///

domoraledecryptionAOB: //"StateOfDecay.exe"+1066729:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
domoraledecryptionAOB: //"StateOfDecay.exe"+1066729:
db 50
call predecryption2AOB //StateOfDecay.exe+FF4CF0
//Alt: push eax
//Alt: db E8 C1 E5 F8 FF
unregistersymbol(domoraledecryptionAOB)
unregistersymbol(pMorale)
unregistersymbol(fMorale)
unregistersymbol(fDesiredMorale)
unregistersymbol(bLockMorale)
unregistersymbol(bMinimumMorale)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>351</ID>
                  <Description>"Morale (for reference only)"</Description>
                  <Options moHideChildren="1"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>fMorale</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>352</ID>
                      <Description>"actual address &amp; value"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pMorale</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>353</ID>
                  <Description>"Desired Morale"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredMorale</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>104</Key>
                      </Keys>
                      <Value>90</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>104</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>354</ID>
                      <Description>"Minimum at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumMorale:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumMorale:
db 0
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Activate</Action>
                          <Keys>
                            <Key>121</Key>
                          </Keys>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>355</ID>
                      <Description>"Lock at Desired Value"</Description>
                      <Color>FF0000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockMorale:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockMorale:
db 0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>388</ID>
              <Description>"[Influence, Stockpiles &amp; Morale for game Update7]"</Description>
              <Options moHideChildren="1"/>
              <Color>800080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>251</ID>
                  <Description>"Use Alt Encryption (for Influence &amp; Stockpiles V2.3.1 &amp; Morale)"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bUseAltEncryption:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bUseAltEncryption:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>357</ID>
                  <Description>"Influence &amp; Stockpiles V2.3.1 (for game Update7)"</Description>
                  <Options moHideChildren="1"/>
                  <Color>FF0000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(doinfluencestockpilesdecryptionAOB,52 E8 ** ** ** ** 83 C4 04 89 45 F4 8B 45 F8)
registersymbol(doinfluencestockpilesdecryptionAOB)
aobscan(getrealaddresspredecryptAOB,8B 50 0C 8D 0C 8A E8 ** ** ** ** EB)
registersymbol(getrealaddresspredecryptAOB)

label(pMedicine)
registersymbol(pMedicine)
label(fMedicine)
registersymbol(fMedicine)
label(fDesiredMedicine)
registersymbol(fDesiredMedicine)

label(pFood)
registersymbol(pFood)
label(fFood)
registersymbol(fFood)
label(fDesiredFood)
registersymbol(fDesiredFood)

label(pAmmunition)
registersymbol(pAmmunition)
label(fAmmunition)
registersymbol(fAmmunition)
label(fDesiredAmmunition)
registersymbol(fDesiredAmmunition)

label(pMaterial)
registersymbol(pMaterial)
label(fMaterial)
registersymbol(fMaterial)
label(fDesiredMaterial)
registersymbol(fDesiredMaterial)

label(pFuel)
registersymbol(pFuel)
label(fFuel)
registersymbol(fFuel)
label(fDesiredFuel)
registersymbol(fDesiredFuel)

label(pInfluence)
registersymbol(pInfluence)
label(fInfluence)
registersymbol(fInfluence)
label(fDesiredInfluence)
registersymbol(fDesiredInfluence)

label(pBeds)
registersymbol(pBeds)
label(fBeds)
registersymbol(fBeds)
label(fDesiredBeds)
registersymbol(fDesiredBeds)

label(bTypeFlag)
registersymbol(bTypeFlag)

label(bLockMedicine)
registersymbol(bLockMedicine)
label(bMinimumMedicine)
registersymbol(bMinimumMedicine)
label(bLockFood)
registersymbol(bLockFood)
label(bMinimumFood)
registersymbol(bMinimumFood)
label(bLockAmmunition)
registersymbol(bLockAmmunition)
label(bMinimumAmmunition)
registersymbol(bMinimumAmmunition)
label(bLockMaterial)
registersymbol(bLockMaterial)
label(bMinimumMaterial)
registersymbol(bMinimumMaterial)
label(bLockFuel)
registersymbol(bLockFuel)
label(bMinimumFuel)
registersymbol(bMinimumFuel)
label(bLockInfluence)
registersymbol(bLockInfluence)
label(bMinimumInfluence)
registersymbol(bMinimumInfluence)
label(bLockBeds)
registersymbol(bLockBeds)
label(bMinimumBeds)
registersymbol(bMinimumBeds)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isInfluenceOrStockpiles)
label(resetFlag)
label(doDecryption)
label(afterDecryption)
label(isMedicineAfter)
label(isFoodAfter)
label(isAmmunitionAfter)
label(isMaterialAfter)
label(isFuelAfter)
label(isInfluenceAfter)
label(isBedsAfter)
label(preEncryption)
label(doEncryption)
label(altEncryption)
label(endAfter)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isMedicine2)
label(isFood2)
label(isAmmunition2)
label(isMaterial2)
label(isFuel2)
label(isInfluence2)
label(isBeds2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
//edx is obtained here: doinfluencestockpilesdecryptionAOB-6
cmp ecx,0C //edx==0x09000005, Medicine
je isInfluenceOrStockpiles
cmp ecx,18 //edx==0x09000002, Food
je isInfluenceOrStockpiles
cmp ecx,24 //edx==0x09000001, Ammunition
je isInfluenceOrStockpiles
cmp ecx,30 //edx==0x09000004, Material
je isInfluenceOrStockpiles
cmp ecx,3C //edx==0x09000003, Fuel
je isInfluenceOrStockpiles
cmp ecx,48 //edx==0x01000001, Influence
je isInfluenceOrStockpiles
cmp ecx,54 //edx==0x08000002, Beds?
je isInfluenceOrStockpiles
jmp resetFlag

isInfluenceOrStockpiles:
mov byte ptr [bTypeFlag],cl
jmp doDecryption

resetFlag:
mov byte ptr [bTypeFlag],FF
jmp doDecryption

doDecryption:
popfd
push edx
call predecryptionAOB

afterDecryption:
pushfd

cmp byte ptr [bTypeFlag],0C
je isMedicineAfter
cmp byte ptr [bTypeFlag],18
je isFoodAfter
cmp byte ptr [bTypeFlag],24
je isAmmunitionAfter
cmp byte ptr [bTypeFlag],30
je isMaterialAfter
cmp byte ptr [bTypeFlag],3C
je isFuelAfter
cmp byte ptr [bTypeFlag],48
je isInfluenceAfter
cmp byte ptr [bTypeFlag],54
je isBedsAfter
jmp originalcode

isMedicineAfter:
mov [fMedicine],eax
fild [fMedicine]
fstp [fMedicine]

pushad
mov ecx,[pMedicine]
mov eax,[fMedicine]
mov ebx,[fDesiredMedicine]

cmp byte ptr [bLockMedicine],1
je doEncryption
cmp byte ptr [bMinimumMedicine],1
je preEncryption
jmp endAfter

isFoodAfter:
mov [fFood],eax
fild [fFood]
fstp [fFood]

pushad
mov ecx,[pFood]
mov eax,[fFood]
mov ebx,[fDesiredFood]

cmp byte ptr [bLockFood],1
je doEncryption
cmp byte ptr [bMinimumFood],1
je preEncryption
jmp endAfter

isAmmunitionAfter:
mov [fAmmunition],eax
fild [fAmmunition]
fstp [fAmmunition]

pushad
mov ecx,[pAmmunition]
mov eax,[fAmmunition]
mov ebx,[fDesiredAmmunition]

cmp byte ptr [bLockAmmunition],1
je doEncryption
cmp byte ptr [bMinimumAmmunition],1
je preEncryption
jmp endAfter

isMaterialAfter:
mov [fMaterial],eax
fild [fMaterial]
fstp [fMaterial]

pushad
mov ecx,[pMaterial]
mov eax,[fMaterial]
mov ebx,[fDesiredMaterial]

cmp byte ptr [bLockMaterial],1
je doEncryption
cmp byte ptr [bMinimumMaterial],1
je preEncryption
jmp endAfter

isFuelAfter:
mov [fFuel],eax
fild [fFuel]
fstp [fFuel]

pushad
mov ecx,[pFuel]
mov eax,[fFuel]
mov ebx,[fDesiredFuel]

cmp byte ptr [bLockFuel],1
je doEncryption
cmp byte ptr [bMinimumFuel],1
je preEncryption
jmp endAfter

isInfluenceAfter:
mov [fInfluence],eax
fild [fInfluence]
fstp [fInfluence]

pushad
mov ecx,[pInfluence]
mov eax,[fInfluence]
mov ebx,[fDesiredInfluence]

cmp byte ptr [bLockInfluence],1
je doEncryption
cmp byte ptr [bMinimumInfluence],1
je preEncryption
jmp endAfter

isBedsAfter:
mov [fBeds],eax
fild [fBeds]
fstp [fBeds]

pushad
mov ecx,[pBeds]
mov eax,[fBeds]
mov ebx,[fDesiredBeds]

cmp byte ptr [bLockBeds],1
je doEncryption
cmp byte ptr [bMinimumBeds],1
je preEncryption
jmp endAfter

preEncryption:
cmp eax,ebx
jge endAfter
doEncryption:
cmp byte ptr [bUseAltEncryption],1
je altEncryption
push ebx
call encryptionAOB
jmp endAfter
altEncryption:
///
mov eax,[decryption1AOB+80]
mov edx,[eax] //[StateOfDecay.exe+1A41F90]
mov eax,[decryption1AOB+86]
xor edx,[eax] //[StateOfDecay.exe+1A42CB0]
xor edx,ebx
mov eax,edx
mov esi,edx
and esi,0000FF00
shr eax,08
shl esi,08
and edx,FF0000FF
and eax,0000FF00
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,04
and esi,00F000F0 //StateOfDecay.exe+B000F0
shl esi,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
or edx,esi
and eax,F00FF00F
or edx,eax
mov esi,edx
mov eax,edx
and esi,0C0C0C0C
add esi,esi
shr eax,02
add esi,esi
and edx,C3C3C3C3
and eax,0C0C0C0C
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,1
and esi,22222222
and edx,22222222
add esi,esi
or edx,esi
and eax,99999999
or edx,eax
mov [ecx+08],edx
///
jmp endAfter

endAfter:
popad
jmp originalcode

originalcode:
mov byte ptr [bTypeFlag],FF
popfd
//push edx
//call predecryptionAOB

exit:
jmp returnhere

///

newmem2:
mov edx,[eax+0C]
lea ecx,[edx+ecx*4]

pushfd
cmp byte ptr [bTypeFlag],0C
je isMedicine2
cmp byte ptr [bTypeFlag],18
je isFood2
cmp byte ptr [bTypeFlag],24
je isAmmunition2
cmp byte ptr [bTypeFlag],30
je isMaterial2
cmp byte ptr [bTypeFlag],3C
je isFuel2
cmp byte ptr [bTypeFlag],48
je isInfluence2
cmp byte ptr [bTypeFlag],54
je isBeds2
jmp originalcode2

isMedicine2:
mov [pMedicine],ecx
jmp originalcode2

isFood2:
mov [pFood],ecx
jmp originalcode2

isAmmunition2:
mov [pAmmunition],ecx
jmp originalcode2

isMaterial2:
mov [pMaterial],ecx
jmp originalcode2

isFuel2:
mov [pFuel],ecx
jmp originalcode2

isInfluence2:
mov [pInfluence],ecx
jmp originalcode2

isBeds2:
mov [pBeds],ecx
jmp originalcode2

originalcode2:
popfd
//mov edx,[eax+0C]
//lea ecx,[edx+ecx*4]

exit2:
jmp returnhere2

///
pMedicine:
dd 0
fMedicine:
dd 0
fDesiredMedicine:
dd (float)25.0

pFood:
dd 0
fFood:
dd 0
fDesiredFood:
dd (float)25.0

pAmmunition:
dd 0
fAmmunition:
dd 0
fDesiredAmmunition:
dd (float)25.0

pMaterial:
dd 0
fMaterial:
dd 0
fDesiredMaterial:
dd (float)50.0

pFuel:
dd 0
fFuel:
dd 0
fDesiredFuel:
dd (float)25.0

pInfluence:
dd 0
fInfluence:
dd 0
fDesiredInfluence:
dd (float)100.0

pBeds:
dd 0
fBeds:
dd 0
fDesiredBeds:
dd (float)25.0

bTypeFlag:
db FF

bLockMedicine:
db 0
bMinimumMedicine:
db 0
bLockFood:
db 0
bMinimumFood:
db 0
bLockAmmunition:
db 0
bMinimumAmmunition:
db 0
bLockMaterial:
db 0
bMinimumMaterial:
db 0
bLockFuel:
db 0
bMinimumFuel:
db 0
bLockInfluence:
db 0
bMinimumInfluence:
db 0
bLockBeds:
db 0
bMinimumBeds:
db 0
///

doinfluencestockpilesdecryptionAOB: //"StateOfDecay.exe"+1067E86:
jmp newmem
nop
returnhere:

getrealaddresspredecryptAOB: //"StateOfDecay.exe"+FF402A:
jmp newmem2
nop
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
doinfluencestockpilesdecryptionAOB: //"StateOfDecay.exe"+1067E86:
db 52
call predecryptionAOB
//Alt: push edx
//Alt: db E8 B4 D5 F8 FF
unregistersymbol(doinfluencestockpilesdecryptionAOB)
getrealaddresspredecryptAOB: //"StateOfDecay.exe"+FF402A:
db 8B 50 0C 8D 0C 8A
//Alt: mov edx,[eax+0C]
//Alt: lea ecx,[edx+ecx*4]
unregistersymbol(getrealaddresspredecryptAOB)

unregistersymbol(pMedicine)
unregistersymbol(fMedicine)
unregistersymbol(fDesiredMedicine)
unregistersymbol(pFood)
unregistersymbol(fFood)
unregistersymbol(fDesiredFood)
unregistersymbol(pAmmunition)
unregistersymbol(fAmmunition)
unregistersymbol(fDesiredAmmunition)
unregistersymbol(pMaterial)
unregistersymbol(fMaterial)
unregistersymbol(fDesiredMaterial)
unregistersymbol(pFuel)
unregistersymbol(fFuel)
unregistersymbol(fDesiredFuel)
unregistersymbol(pInfluence)
unregistersymbol(fInfluence)
unregistersymbol(fDesiredInfluence)
unregistersymbol(pBeds)
unregistersymbol(fBeds)
unregistersymbol(fDesiredBeds)

unregistersymbol(bTypeFlag)

unregistersymbol(bLockMedicine)
unregistersymbol(bMinimumMedicine)
unregistersymbol(bLockFood)
unregistersymbol(bMinimumFood)
unregistersymbol(bLockAmmunition)
unregistersymbol(bMinimumAmmunition)
unregistersymbol(bLockMaterial)
unregistersymbol(bMinimumMaterial)
unregistersymbol(bLockFuel)
unregistersymbol(bMinimumFuel)
unregistersymbol(bLockInfluence)
unregistersymbol(bMinimumInfluence)
unregistersymbol(bLockBeds)
unregistersymbol(bMinimumBeds)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>161</ID>
                      <Description>"Influence (for reference only)"</Description>
                      <Options moHideChildren="1"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>fInfluence</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>163</ID>
                          <Description>"actual address &amp; value"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pInfluence</Address>
                          <Offsets>
                            <Offset>8</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>162</ID>
                      <Description>"Desired Influence"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>fDesiredInfluence</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>105</Key>
                          </Keys>
                          <Value>100</Value>
                          <ID>0</ID>
                        </Hotkey>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>18</Key>
                            <Key>105</Key>
                          </Keys>
                          <Value>0</Value>
                          <ID>1</ID>
                        </Hotkey>
                      </Hotkeys>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>194</ID>
                          <Description>"Minimum at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumInfluence:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumInfluence:
db 0
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>193</ID>
                          <Description>"Lock at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockInfluence:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockInfluence:
db 0
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>164</ID>
                      <Description>"Daily Rations of Food (for reference only)"</Description>
                      <Options moHideChildren="1"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>fFood</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>166</ID>
                          <Description>"actual address &amp; value"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pFood</Address>
                          <Offsets>
                            <Offset>8</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>165</ID>
                      <Description>"Desired Daily Rations of Food"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>fDesiredFood</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>97</Key>
                          </Keys>
                          <Value>25</Value>
                          <ID>0</ID>
                        </Hotkey>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>18</Key>
                            <Key>97</Key>
                          </Keys>
                          <Value>0</Value>
                          <ID>1</ID>
                        </Hotkey>
                      </Hotkeys>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>195</ID>
                          <Description>"Minimum at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumFood:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumFood:
db 0
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>196</ID>
                          <Description>"Lock at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockFood:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockFood:
db 0
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>167</ID>
                      <Description>"Cases of Medicine (for reference only)"</Description>
                      <Options moHideChildren="1"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>fMedicine</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>169</ID>
                          <Description>"actual address &amp; value"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pMedicine</Address>
                          <Offsets>
                            <Offset>8</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>168</ID>
                      <Description>"Desired Cases of Medicine"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>fDesiredMedicine</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>98</Key>
                          </Keys>
                          <Value>25</Value>
                          <ID>0</ID>
                        </Hotkey>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>18</Key>
                            <Key>98</Key>
                          </Keys>
                          <Value>0</Value>
                          <ID>1</ID>
                        </Hotkey>
                      </Hotkeys>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>197</ID>
                          <Description>"Minimum at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumMedicine:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumMedicine:
db 0
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>198</ID>
                          <Description>"Lock at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockMedicine:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockMedicine:
db 0
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>170</ID>
                      <Description>"Cases of Ammunition (for reference only)"</Description>
                      <Options moHideChildren="1"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>fAmmunition</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>172</ID>
                          <Description>"actual address &amp; value"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pAmmunition</Address>
                          <Offsets>
                            <Offset>8</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>171</ID>
                      <Description>"Desired Cases of Ammunition"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>fDesiredAmmunition</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>99</Key>
                          </Keys>
                          <Value>25</Value>
                          <ID>0</ID>
                        </Hotkey>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>18</Key>
                            <Key>99</Key>
                          </Keys>
                          <Value>0</Value>
                          <ID>1</ID>
                        </Hotkey>
                      </Hotkeys>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>199</ID>
                          <Description>"Minimum at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumAmmunition:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumAmmunition:
db 0
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>200</ID>
                          <Description>"Lock at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockAmmunition:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockAmmunition:
db 0
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>173</ID>
                      <Description>"Construction Material (for reference only)"</Description>
                      <Options moHideChildren="1"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>fMaterial</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>175</ID>
                          <Description>"actual address &amp; value"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pMaterial</Address>
                          <Offsets>
                            <Offset>8</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>174</ID>
                      <Description>"Desired Construction Material"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>fDesiredMaterial</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>100</Key>
                          </Keys>
                          <Value>50</Value>
                          <ID>0</ID>
                        </Hotkey>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>18</Key>
                            <Key>100</Key>
                          </Keys>
                          <Value>0</Value>
                          <ID>1</ID>
                        </Hotkey>
                      </Hotkeys>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>201</ID>
                          <Description>"Minimum at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumMaterial:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumMaterial:
db 0
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>202</ID>
                          <Description>"Lock at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockMaterial:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockMaterial:
db 0
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>176</ID>
                      <Description>"Barrels of Fuel (for reference only)"</Description>
                      <Options moHideChildren="1"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>fFuel</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>178</ID>
                          <Description>"actual address &amp; value"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pFuel</Address>
                          <Offsets>
                            <Offset>8</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>177</ID>
                      <Description>"Desired Barrels of Fuel"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>fDesiredFuel</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>101</Key>
                          </Keys>
                          <Value>25</Value>
                          <ID>0</ID>
                        </Hotkey>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>18</Key>
                            <Key>101</Key>
                          </Keys>
                          <Value>0</Value>
                          <ID>1</ID>
                        </Hotkey>
                      </Hotkeys>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>203</ID>
                          <Description>"Minimum at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumFuel:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumFuel:
db 0
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>204</ID>
                          <Description>"Lock at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockFuel:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockFuel:
db 0
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>350</ID>
                  <Description>"Morale (for game Update7)"</Description>
                  <Options moHideChildren="1"/>
                  <Color>FF0000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(domoraledecryptionAOB,68 13 00 00 0D E8 ** ** ** ** 83 C4 04)
registersymbol(domoraledecryptionAOB)

label(pMorale)
registersymbol(pMorale)
label(fMorale)
registersymbol(fMorale)
label(fDesiredMorale)
registersymbol(fDesiredMorale)

label(bLockMorale)
registersymbol(bLockMorale)
label(bMinimumMorale)
registersymbol(bMinimumMorale)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(sCon1)
label(sCon2)
label(afterGetAddress)
label(preEncryption)
label(doEncryption)
label(altEncryption)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
mov ebx,0D000013
push ecx
mov edx,ebx
xorps xmm0,xmm0
mov ecx,edx
shr ecx,18
movss [esp],xmm0
cmp ecx,19
jae afterGetAddress
mov eax,edx
shr eax,10
shl ecx,04
and eax,000000FF
mov ebx,[predecryption2AOB+26]
add ecx,ebx
cmp eax,[ecx+08]

jae sCon1
shl eax,04
add eax,[ecx+0C]
jmp sCon2

sCon1:
mov eax,[ecx+0C]
sCon2:
movzx edx,dx

cmp edx,[eax+08]
jae afterGetAddress

lea ecx,[edx+edx*4]
mov edx,[eax+0C]
lea ecx,[edx+ecx*4]

mov [pMorale],ecx

afterGetAddress:
pop ecx
popad

///
push 0D000013
call predecryption2AOB //StateOfDecay.exe+FF4CF0
///

fst dword ptr [fMorale]

pushad
mov ecx,[pMorale]
cmp ecx,0
je originalcode
mov eax,[fMorale]
mov ebx,[fDesiredMorale]

cmp byte ptr [bLockMorale],1
je doEncryption
cmp byte ptr [bMinimumMorale],1
je preEncryption
jmp originalcode

preEncryption:
cmp eax,ebx
jge originalcode
doEncryption:
cmp byte ptr [bUseAltEncryption],1
je altEncryption
push ebx
call encryptionAOB
jmp originalcode
altEncryption:
///
mov eax,[decryption1AOB+80]
mov edx,[eax] //[StateOfDecay.exe+1A41F90]
mov eax,[decryption1AOB+86]
xor edx,[eax] //[StateOfDecay.exe+1A42CB0]
xor edx,ebx
mov eax,edx
mov esi,edx
and esi,0000FF00
shr eax,08
shl esi,08
and edx,FF0000FF
and eax,0000FF00
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,04
and esi,00F000F0 //StateOfDecay.exe+B000F0
shl esi,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
or edx,esi
and eax,F00FF00F
or edx,eax
mov esi,edx
mov eax,edx
and esi,0C0C0C0C
add esi,esi
shr eax,02
add esi,esi
and edx,C3C3C3C3
and eax,0C0C0C0C
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,1
and esi,22222222
and edx,22222222
add esi,esi
or edx,esi
and eax,99999999
or edx,eax
mov [ecx+08],edx
///

originalcode:
popad
//push 0D000013
//call predecryption2AOB

exit:
jmp returnhere

///
pMorale:
dd 0
fMorale:
dd 0
fDesiredMorale:
dd (float)90.0
bLockMorale:
db 0
bMinimumMorale:
db 0
///

domoraledecryptionAOB: //"StateOfDecay.exe"+1067E34:
jmp newmem
nop
nop
nop
nop
nop
returnhere:





[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
domoraledecryptionAOB: //"StateOfDecay.exe"+1067E34:
db 68 13 00 00 0D
call predecryption2AOB
//Alt: push 0D000013
//Alt: db E8 B2 D3 F8 FF
unregistersymbol(domoraledecryptionAOB)
unregistersymbol(pMorale)
unregistersymbol(fMorale)
unregistersymbol(fDesiredMorale)
unregistersymbol(bLockMorale)
unregistersymbol(bMinimumMorale)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>271</ID>
                      <Description>"Morale (for reference only)"</Description>
                      <Options moHideChildren="1"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>fMorale</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>272</ID>
                          <Description>"actual address &amp; value"</Description>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>pMorale</Address>
                          <Offsets>
                            <Offset>8</Offset>
                          </Offsets>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>273</ID>
                      <Description>"Desired Morale"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>fDesiredMorale</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>17</Key>
                            <Key>104</Key>
                          </Keys>
                          <Value>90</Value>
                          <ID>0</ID>
                        </Hotkey>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>18</Key>
                            <Key>104</Key>
                          </Keys>
                          <Value>0</Value>
                          <ID>1</ID>
                        </Hotkey>
                      </Hotkeys>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>274</ID>
                          <Description>"Minimum at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bMinimumMorale:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bMinimumMorale:
db 0
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>275</ID>
                          <Description>"Lock at Desired Value"</Description>
                          <Color>FF0000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bLockMorale:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bLockMorale:
db 0
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"[Pointers]"</Description>
          <Color>800080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>27</ID>
              <Description>"Player Health"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>A4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"Player Stamina"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>AC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>30</ID>
              <Description>"Ammo Clip"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoClip</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>29</ID>
              <Description>"Ammo Pouch"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>205</ID>
              <Description>"[Highlighted Character]"</Description>
              <Options moHideChildren="1"/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(hlcharinfogroup1readAOB,0F B7 4A FE 66 83 F9 FF)
registersymbol(hlcharinfogroup1readAOB)

label(pHightlightedCharacter)
registersymbol(pHightlightedCharacter)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp ebp,6
jne originalcode
lea ecx,[edx-4]
mov [pHightlightedCharacter],ecx

originalcode:
movzx ecx,word ptr [edx-02]
cmp cx,-01

exit:
jmp returnhere

///
pHightlightedCharacter:
dd 0
///

hlcharinfogroup1readAOB: //"StateOfDecay.exe"+111071B:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hlcharinfogroup1readAOB: //"StateOfDecay.exe"+111071B:
db 0F B7 4A FE 66 83 F9 FF
//Alt: movzx ecx,word ptr [edx-02]
//Alt: cmp cx,-01
unregistersymbol(hlcharinfogroup1readAOB)
unregistersymbol(pHightlightedCharacter)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>206</ID>
                  <Description>""</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHightlightedCharacter</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>209</ID>
                  <Description>"Health"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pHightlightedCharacter</Address>
                  <Offsets>
                    <Offset>A4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>207</ID>
                  <Description>"Stamina"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pHightlightedCharacter</Address>
                  <Offsets>
                    <Offset>AC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>208</ID>
                  <Description>"Friendly Flag (0F: using, 0B: friend, 09: resident?, 01: not resident?)"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pHightlightedCharacter</Address>
                  <Offsets>
                    <Offset>158</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>212</ID>
                  <Description>"Friendly Bar (100: full)"</Description>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pHightlightedCharacter</Address>
                  <Offsets>
                    <Offset>15E</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>300</ID>
                  <Description>"00: Normal?, 20: Missing?"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pHightlightedCharacter</Address>
                  <Offsets>
                    <Offset>159</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>295</ID>
                  <Description>"00: At Home, 01: Away from Home, 02: In Mission"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pHightlightedCharacter</Address>
                  <Offsets>
                    <Offset>15F</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>302</ID>
                  <Description>"[Traits / Traits' Skills / Attitude / Health Status / History / Unknown]"</Description>
                  <Options moHideChildren="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>303</ID>
                      <Description>"01"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>304</ID>
                      <Description>"02"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>2</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>311</ID>
                      <Description>"03"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>310</ID>
                      <Description>"04"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>6</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>309</ID>
                      <Description>"05"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>308</ID>
                      <Description>"06"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>307</ID>
                      <Description>"07"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>306</ID>
                      <Description>"08"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>305</ID>
                      <Description>"09"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>10</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>312</ID>
                      <Description>"10"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>12</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>313</ID>
                      <Description>"11"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>14</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>314</ID>
                      <Description>"12"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>16</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>315</ID>
                      <Description>"13"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>316</ID>
                      <Description>"14"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>1A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>317</ID>
                      <Description>"15"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>1C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>318</ID>
                      <Description>"16"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>1E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>319</ID>
                      <Description>"17"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>20</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>320</ID>
                      <Description>"18"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>22</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>321</ID>
                      <Description>"19"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>24</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>322</ID>
                      <Description>"20"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>26</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>323</ID>
                      <Description>"21"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>28</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>324</ID>
                      <Description>"22"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>2A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>325</ID>
                      <Description>"23"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>2C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>326</ID>
                      <Description>"24"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>2E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>327</ID>
                      <Description>"25"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>328</ID>
                      <Description>"26"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>32</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>329</ID>
                      <Description>"27"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>34</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>330</ID>
                      <Description>"28"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>36</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>331</ID>
                      <Description>"29"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>38</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>332</ID>
                      <Description>"30"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>3A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>333</ID>
                      <Description>"31"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>3C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>334</ID>
                      <Description>"32"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>3E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>335</ID>
                      <Description>"33"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>40</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>336</ID>
                      <Description>"34"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>42</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>337</ID>
                      <Description>"35"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>44</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>338</ID>
                      <Description>"36"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>46</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>213</ID>
                  <Description>"[Skills ID]"</Description>
                  <Options moHideChildren="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>215</ID>
                      <Description>"01"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>F8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>217</ID>
                      <Description>"02"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>FC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>218</ID>
                      <Description>"03"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>100</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>219</ID>
                      <Description>"04"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>104</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>220</ID>
                      <Description>"05"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>108</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>221</ID>
                      <Description>"06"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>10C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>222</ID>
                      <Description>"07"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>110</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>223</ID>
                      <Description>"08"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>114</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>224</ID>
                      <Description>"09"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>118</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>225</ID>
                      <Description>"10"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>11C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>226</ID>
                      <Description>"11"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>120</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>227</ID>
                      <Description>"12"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>124</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>228</ID>
                      <Description>"13"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>128</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>229</ID>
                      <Description>"14"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>12C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>230</ID>
                      <Description>"15"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>130</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>231</ID>
                      <Description>"16"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>134</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>214</ID>
                  <Description>"[Skills' EXP]"</Description>
                  <Options moHideChildren="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>216</ID>
                      <Description>"01"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>138</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>232</ID>
                      <Description>"02"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>13A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>233</ID>
                      <Description>"03"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>13C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>234</ID>
                      <Description>"04"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>13E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>235</ID>
                      <Description>"05"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>140</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>236</ID>
                      <Description>"06"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>142</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>237</ID>
                      <Description>"07"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>144</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>238</ID>
                      <Description>"08"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>146</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>239</ID>
                      <Description>"09"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>148</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>240</ID>
                      <Description>"10"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>14A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>241</ID>
                      <Description>"11"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>14C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>242</ID>
                      <Description>"12"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>14E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>243</ID>
                      <Description>"13"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>150</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>244</ID>
                      <Description>"14"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>152</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>245</ID>
                      <Description>"15"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>154</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>246</ID>
                      <Description>"16"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pHightlightedCharacter</Address>
                      <Offsets>
                        <Offset>156</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>390</ID>
              <Description>"[Inventory]"</Description>
              <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(inventoryreadAOB,0F B6 14 29 0F 57 C0 F3 0F 2A C2 F3)
registersymbol(inventoryreadAOB)
aobscan(inventorytypereadAOB,8B 46 10 8B 3C 98 57 E8)
registersymbol(inventorytypereadAOB)

label(pInventory)
registersymbol(pInventory)
label(pInventoryType)
registersymbol(pInventoryType)
label(pBagSize)
registersymbol(pBagSize)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)

label(newmem17)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pInventory],ecx
mov [pBagSize],esi

originalcode:
movzx edx,byte ptr [ecx+ebp]
xorps xmm0,xmm0

exit:
jmp returnhere

///

newmem2:
mov eax,[esi+10]
mov [pInventoryType],eax

originalcode2:
//mov eax,[esi+10]
mov edi,[eax+ebx*4]

exit2:
jmp returnhere2

///

newmem11:
mov eax,[esi+14]
mov [pInventory],eax
mov [pBagSize],esi

originalcode11:
//mov eax,[esi+14]
lea edx,[edi+edi*2]

exit11:
jmp returnhere11

///

newmem17:
mov eax,[esi+10]
mov [pInventoryType],eax

originalcode17:
//mov eax,[esi+10]
mov ecx,[eax+edi*4]

exit17:
jmp returnhere17

///
pInventory:
dd 0
pInventoryType:
dd 0
pBagSize:
dd 0
///

inventoryreadAOB: //"StateOfDecay.exe"+11D91A9:
jmp newmem
nop
nop
returnhere:

inventorytypereadAOB: //"StateOfDecay.exe"+11D9180:
jmp newmem2
nop
returnhere2:

inventoryread3AOB: //"StateOfDecay.exe"+11D9321:
jmp newmem11
nop
returnhere11:

inventoryread3AOB-14: //"StateOfDecay.exe"+11D930D:
jmp newmem17
nop
returnhere17:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
inventoryreadAOB: //"StateOfDecay.exe"+11D91A9:
db 0F B6 14 29 0F 57 C0
//Alt: movzx edx,byte ptr [ecx+ebp]
//Alt: xorps xmm0,xmm0
inventorytypereadAOB: //"StateOfDecay.exe"+11D9180:
db 8B 46 10 8B 3C 98
//Alt: mov eax,[esi+10]
//Alt: mov edi,[eax+ebx*4]
inventoryread3AOB: //"StateOfDecay.exe"+11D9321:
db 8B 46 14 8D 14 7F
//Alt: mov eax,[esi+14]
//Alt: lea edx,[edi+edi*2]
inventoryread3AOB-14: //"StateOfDecay.exe"+11D930D:
db 8B 46 10 8B 0C B8
//Alt: mov eax,[esi+10]
//Alt: mov ecx,[eax+edi*4]
unregistersymbol(inventoryreadAOB)
unregistersymbol(inventorytypereadAOB)
unregistersymbol(pInventory)
unregistersymbol(pInventoryType)
unregistersymbol(pBagSize)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>391</ID>
                  <Description>"Infinite Silencer"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
alloc(newmem,128)
aobscan(_aobSilencer,8B 46 14 8A 4C 24 10 8D 14 7F 88 4C 50 05 5F 5E)
label(_addSilencer)
registersymbol(_addSilencer)
label(returnhere)
label(originalcode)

_aobSilencer+07:
_addSilencer:
jmp newmem
db 90 90
returnhere:

newmem:
lea edx,[edi+edi*2]
cmp byte ptr [eax+edx*2+05],cl
jle originalcode
mov cl,byte ptr [eax+edx*2+05]

originalcode:
mov [eax+edx*2+05],cl
jmp returnhere

[DISABLE]
_addSilencer:
lea edx,[edi+edi*2]         // 8D 14 7F
mov [eax+edx*2+05],cl       // 88 4C 50 05

unregistersymbol(_addSilencer)

dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>401</ID>
                  <Description>"Bag Size"</Description>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pBagSize</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>342</ID>
                  <Description>"Slot 1"</Description>
                  <Options moAllowManualCollapseAndExpand="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>343</ID>
                      <Description>"Type"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInventoryType</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>402</ID>
                      <Description>"Value"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>403</ID>
                      <Description>"Durability"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>2</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>404</ID>
                      <Description>"Ammo"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>347</ID>
                      <Description>"Silencer"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>5</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>405</ID>
                  <Description>"Slot 2"</Description>
                  <Options moAllowManualCollapseAndExpand="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>406</ID>
                      <Description>"Type"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInventoryType</Address>
                      <Offsets>
                        <Offset>4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>407</ID>
                      <Description>"Value"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>6</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>408</ID>
                      <Description>"Durability"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>409</ID>
                      <Description>"Ammo"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>410</ID>
                      <Description>"Silencer"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>B</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>411</ID>
                  <Description>"Slot 3"</Description>
                  <Options moAllowManualCollapseAndExpand="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>412</ID>
                      <Description>"Type"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInventoryType</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>413</ID>
                      <Description>"Value"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>414</ID>
                      <Description>"Durability"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>415</ID>
                      <Description>"Ammo"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>10</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>416</ID>
                      <Description>"Silencer"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>11</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>417</ID>
                  <Description>"Slot 4"</Description>
                  <Options moAllowManualCollapseAndExpand="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>418</ID>
                      <Description>"Type"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInventoryType</Address>
                      <Offsets>
                        <Offset>C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>419</ID>
                      <Description>"Value"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>12</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>420</ID>
                      <Description>"Durability"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>14</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>421</ID>
                      <Description>"Ammo"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>16</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>422</ID>
                      <Description>"Silencer"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>17</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>423</ID>
                  <Description>"Slot 5"</Description>
                  <Options moAllowManualCollapseAndExpand="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>424</ID>
                      <Description>"Type"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInventoryType</Address>
                      <Offsets>
                        <Offset>10</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>425</ID>
                      <Description>"Value"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>426</ID>
                      <Description>"Durability"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>1A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>427</ID>
                      <Description>"Ammo"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>1C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>428</ID>
                      <Description>"Silencer"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>1D</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>429</ID>
                  <Description>"Slot 6"</Description>
                  <Options moAllowManualCollapseAndExpand="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>430</ID>
                      <Description>"Type"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInventoryType</Address>
                      <Offsets>
                        <Offset>14</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>431</ID>
                      <Description>"Value"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>1E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>432</ID>
                      <Description>"Durability"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>20</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>433</ID>
                      <Description>"Ammo"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>22</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>434</ID>
                      <Description>"Silencer"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>23</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>435</ID>
                  <Description>"Slot 7"</Description>
                  <Options moAllowManualCollapseAndExpand="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>436</ID>
                      <Description>"Type"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInventoryType</Address>
                      <Offsets>
                        <Offset>18</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>437</ID>
                      <Description>"Value"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>24</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>438</ID>
                      <Description>"Durability"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>26</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>439</ID>
                      <Description>"Ammo"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>28</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>440</ID>
                      <Description>"Silencer"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>29</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>441</ID>
                  <Description>"Slot 8"</Description>
                  <Options moAllowManualCollapseAndExpand="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>442</ID>
                      <Description>"Type"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInventoryType</Address>
                      <Offsets>
                        <Offset>1C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>443</ID>
                      <Description>"Value"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>2A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>444</ID>
                      <Description>"Durability"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>2C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>445</ID>
                      <Description>"Ammo"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>2E</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>446</ID>
                      <Description>"Silencer"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>2F</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>447</ID>
                  <Description>"Slot 9"</Description>
                  <Options moAllowManualCollapseAndExpand="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>448</ID>
                      <Description>"Type"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInventoryType</Address>
                      <Offsets>
                        <Offset>20</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>392</ID>
                      <Description>"Value"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>393</ID>
                      <Description>"Durability"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>32</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>394</ID>
                      <Description>"Ammo"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>34</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>395</ID>
                      <Description>"Silencer"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>35</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>396</ID>
                  <Description>"Slot 10"</Description>
                  <Options moAllowManualCollapseAndExpand="1"/>
                  <Color>800080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>397</ID>
                      <Description>"Type"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pInventoryType</Address>
                      <Offsets>
                        <Offset>24</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>398</ID>
                      <Description>"Value"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>36</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>399</ID>
                      <Description>"Durability"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>38</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>400</ID>
                      <Description>"Ammo"</Description>
                      <Color>80000008</Color>
                      <VariableType>2 Bytes</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>3A</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>301</ID>
                      <Description>"Silencer"</Description>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>pInventory</Address>
                      <Offsets>
                        <Offset>3B</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"-------------------------------------------------"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Ammo Clip script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoclipreadAOB,8B 44 24 04 3B 46 58 5E 74 07 8B 40 10)
registersymbol(ammoclipreadAOB)

label(pAmmoClip)
registersymbol(pAmmoClip)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAmmoClip],eax

originalcode:
mov eax,[eax+10]
pop ecx
ret 0004

exit:
jmp returnhere

///
pAmmoClip:
dd 0
///

ammoclipreadAOB+a: //"StateOfDecay.exe"+1246640:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoclipreadAOB+a: //"StateOfDecay.exe"+1246640:
db 8B 40 10 59 C2 04 00
//Alt: mov eax,[eax+10]
//Alt: pop ecx
//Alt: ret 0004
unregistersymbol(ammoclipreadAOB)
unregistersymbol(pAmmoClip)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>3</ID>
              <Description>"Inf. Ammo Clip"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoclipwriteAOB,8B 44 24 0C 3B 43 58 74 09 8B 54 24 34 89 50 10)
registersymbol(ammoclipwriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[esp+34]

cmp [pAmmoClip],eax
jne originalcode
cmp edx,1
jge originalcode
mov edx,1

originalcode:
//mov edx,[esp+34]
mov [eax+10],edx

exit:
jmp returnhere

ammoclipwriteAOB+9: //"StateOfDecay.exe"+12485AF:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoclipwriteAOB+9: //"StateOfDecay.exe"+12485AF:
db 8B 54 24 34 89 50 10
//Alt: mov edx,[esp+34]
//Alt: mov [eax+10],edx
unregistersymbol(ammoclipwriteAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2</ID>
              <Description>"pAmmoClip"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoClip</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Ammo Pouch script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammopouchreadAOB,8B 44 24 04 3B 46 34 5E 74 07 8B 40 10 59 C2 04)
registersymbol(ammopouchreadAOB)

label(pAmmoPouch)
registersymbol(pAmmoPouch)
label(bInfAmmoPouch)
registersymbol(bInfAmmoPouch)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAmmoPouch],eax
cmp byte ptr [bInfAmmoPouch],1
jne originalcode
cmp [eax+10],#10
jge originalcode
mov [eax+10],#10

originalcode:
mov eax,[eax+10]
pop ecx
ret 0004

exit:
jmp returnhere

///
pAmmoPouch:
dd 0
bInfAmmoPouch:
db 0
///

ammopouchreadAOB+a: //"StateOfDecay.exe"+372EE0:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammopouchreadAOB+a: //"StateOfDecay.exe"+372EE0:
db 8B 40 10 59 C2 04 00
//Alt: mov eax,[eax+10]
//Alt: pop ecx
//Alt: ret 0004
unregistersymbol(ammopouchreadAOB)
unregistersymbol(pAmmoPouch)
unregistersymbol(bInfAmmoPouch)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>6</ID>
              <Description>"Inf. Ammo Pouch"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bInfAmmoPouch:
db 01

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bInfAmmoPouch:
db 00
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>7</ID>
              <Description>"pAmmoPouch"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>24BDF470</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>24DE8F68</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>28436220</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>16EA1404</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>154A1374</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>StateOfDecay.exe+1539F08</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>154A136C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Health &amp; Stamina script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(staminareadAOB,D9 86 AC 00 00 00 D9 1C 24)
registersymbol(staminareadAOB)

label(pPlayer)
registersymbol(pPlayer)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pPlayer],esi

originalcode:
fld dword ptr [esi+000000AC]

exit:
jmp returnhere

///
pPlayer:
dd 0
///

staminareadAOB: //"StateOfDecay.exe"+11232B9:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminareadAOB: //"StateOfDecay.exe"+11232B9:
db D9 86 AC 00 00 00
//Alt: fld dword ptr [esi+000000AC]
unregistersymbol(staminareadAOB)
unregistersymbol(pPlayer)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>19</ID>
              <Description>"Undead"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthwriteAOB,F3 0F 11 81 A4 00 00 00 F3 0F 10 44 24 08)
registersymbol(healthwriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [ecx+000000A4],xmm0
cmp [pPlayer],ecx
jne originalcode
cmp dword ptr [ecx+000000A4],(float)1.0
jge originalcode
mov dword ptr [ecx+000000A4],(float)1.0

originalcode:
//movss [ecx+000000A4],xmm0

exit:
jmp returnhere

healthwriteAOB: //"StateOfDecay.exe"+1121DF0:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthwriteAOB: //"StateOfDecay.exe"+1121DF0:
db F3 0F 11 81 A4 00 00 00
//Alt: movss [ecx+000000A4],xmm0
unregistersymbol(healthwriteAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"Inf. Stamina"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(staminawriteAOB,F3 0F 11 80 AC 00 00 00 F3 0F 10 44 24 08 F3 0F 11 80 B0 00 00 00 C3)
registersymbol(staminawriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pPlayer],eax
jne originalcode
push ebx
mov ebx,[esp+08]
cmp [eax+000000AC],ebx
pop ebx
jle originalcode
movss xmm0,[eax+000000AC]

originalcode:
movss [eax+000000AC],xmm0

exit:
jmp returnhere

staminawriteAOB: //"StateOfDecay.exe"+11137EF:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminawriteAOB: //"StateOfDecay.exe"+11137EF:
db F3 0F 11 80 AC 00 00 00
//Alt: movss [eax+000000AC],xmm0
unregistersymbol(staminawriteAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>17</ID>
              <Description>"Health"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>A4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"Stamina"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>AC</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>2ABDB614</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>StateOfDecay.exe+1539E68</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>2E8EBC14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>2EBD8D34</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>2EC107D4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0D5AE2E0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1AD87CB0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1AD87CEC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28370494</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp edi,48
jne originalcode
popfd
movzx eax,word ptr [esp+18]
jmp exit

originalcode:
popfd
movzx eax,word ptr [esp+18]

exit:
jmp returnhere

"StateOfDecay.exe"+10652BE:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"StateOfDecay.exe"+10652BE:
db 0F B7 44 24 18
//Alt: movzx eax,word ptr [esp+18]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp ebx,0
jne originalcode
cmp edi,30
jne originalcode
popfd
push eax
call StateOfDecay.exe+FF3FE0
jmp exit

originalcode:
popfd
push eax
call StateOfDecay.exe+FF3FE0

exit:
jmp returnhere

"StateOfDecay.exe"+10652DE:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"StateOfDecay.exe"+10652DE:
db 50 E8 FC EC F8 FF
//Alt: push eax
//Alt: call StateOfDecay.exe+FF3FE0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1655b254</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>03123b50</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp ecx,1655b24c
jne originalcode
popfd
mov edx,[StateOfDecay.exe+1A41F90]
jmp exit

originalcode:
popfd
mov edx,[StateOfDecay.exe+1A41F90]

exit:
jmp returnhere

"StateOfDecay.exe"+FF3B80:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"StateOfDecay.exe"+FF3B80:
db 8B 15 90 1F E4 01
//Alt: mov edx,[StateOfDecay.exe+1A41F90]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Hum"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pInfluence)
registersymbol(pInfluence)
label(fInfluence)
registersymbol(fInfluence)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isInfluence)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp ebx,0
jne originalcode
cmp edi,48
je isInfluence
jmp originalcode

isInfluence:
mov [pInfluence],ecx

pushad

mov ecx,[ecx+08]
mov eax,ecx

mov edx,ecx
and edx,22222222
shr eax,1
add edx,edx
and ecx,99999999
and eax,22222222
or eax,edx
or eax,ecx
mov edx,eax
and edx,0C0C0C0C
mov ecx,eax
shr ecx,02
and ecx,0C0C0C0C
add edx,edx
add edx,edx
or ecx,edx
and eax,C3C3C3C3
or ecx,eax
mov eax,ecx
mov edx,ecx
shr eax,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
and ecx,F00FF00F
shl edx,04
and eax,00F000F0 //StateOfDecay.exe+B000F0
or eax,edx
or eax,ecx
mov ecx,eax
shr ecx,08
mov edx,eax
and ecx,0000FF00
and edx,0000FF00
shl edx,08
or ecx,edx
and eax,FF0000FF
or ecx,eax
xor ecx,[StateOfDecay.exe+1A41F90]
xor ecx,[StateOfDecay.exe+1A42CB0]

mov [fInfluence],ecx

popad

jmp originalcode

originalcode:
popfd
mov ecx,[ecx+08]
mov eax,ecx

exit:
jmp returnhere

///
pInfluence:
dd 0
fInfluence:
dd 0
///

"StateOfDecay.exe"+FF3A31:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"StateOfDecay.exe"+FF3A31:
mov ecx,[ecx+08]
mov eax,ecx
//Alt: db 8B 49 08 8B C1
unregistersymbol(pInfluence)
unregistersymbol(fInfluence)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>53</ID>
              <Description>"Influence"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>fInfluence</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>54</ID>
                  <Description>"actual address &amp; value"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInfluence</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"Influence &amp; Stockpiles v1"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pMedicine)
registersymbol(pMedicine)
label(fMedicine)
registersymbol(fMedicine)
label(fDesiredMedicine)
registersymbol(fDesiredMedicine)

label(pFood)
registersymbol(pFood)
label(fFood)
registersymbol(fFood)
label(fDesiredFood)
registersymbol(fDesiredFood)

label(pAmmunition)
registersymbol(pAmmunition)
label(fAmmunition)
registersymbol(fAmmunition)
label(fDesiredAmmunition)
registersymbol(fDesiredAmmunition)

label(pMaterial)
registersymbol(pMaterial)
label(fMaterial)
registersymbol(fMaterial)
label(fDesiredMaterial)
registersymbol(fDesiredMaterial)

label(pFuel)
registersymbol(pFuel)
label(fFuel)
registersymbol(fFuel)
label(fDesiredFuel)
registersymbol(fDesiredFuel)

label(pInfluence)
registersymbol(pInfluence)
label(fInfluence)
registersymbol(fInfluence)
label(fDesiredInfluence)
registersymbol(fDesiredInfluence)

label(pBeds)
registersymbol(pBeds)
label(fBeds)
registersymbol(fBeds)
label(fDesiredBeds)
registersymbol(fDesiredBeds)

label(bTypeFlag)
registersymbol(bTypeFlag)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(doDecryption)
label(isMedicine)
label(isFood)
label(isAmmunition)
label(isMaterial)
label(isFuel)
label(isInfluence)
label(isBeds)
label(isUnknown)
label(resetFlag)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp ebx,0
jne resetFlag

cmp edi,0C
je doDecryption
cmp edi,18
je doDecryption
cmp edi,24
je doDecryption
cmp edi,30
je doDecryption
cmp edi,3C
je doDecryption
cmp edi,48
je doDecryption
cmp edi,54
je doDecryption
jmp resetFlag

doDecryption:

pushad

mov ecx,[ecx+08]
mov eax,ecx

mov edx,ecx
and edx,22222222
shr eax,1
add edx,edx
and ecx,99999999
and eax,22222222
or eax,edx
or eax,ecx
mov edx,eax
and edx,0C0C0C0C
mov ecx,eax
shr ecx,02
and ecx,0C0C0C0C
add edx,edx
add edx,edx
or ecx,edx
and eax,C3C3C3C3
or ecx,eax
mov eax,ecx
mov edx,ecx
shr eax,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
and ecx,F00FF00F
shl edx,04
and eax,00F000F0 //StateOfDecay.exe+B000F0
or eax,edx
or eax,ecx
mov ecx,eax
shr ecx,08
mov edx,eax
and ecx,0000FF00
and edx,0000FF00
shl edx,08
or ecx,edx
and eax,FF0000FF
or ecx,eax
xor ecx,[StateOfDecay.exe+1A41F90]
xor ecx,[StateOfDecay.exe+1A42CB0]

cmp edi,0C
je isMedicine
cmp edi,18
je isFood
cmp edi,24
je isAmmunition
cmp edi,30
je isMaterial
cmp edi,3C
je isFuel
cmp edi,48
je isInfluence
cmp edi,54
je isBeds
jmp isUnknown

isMedicine:
mov byte ptr [bTypeFlag],0C
mov [fMedicine],ecx
popad
mov [pMedicine],ecx
jmp originalcode

isFood:
mov byte ptr [bTypeFlag],18
mov [fFood],ecx
popad
mov [pFood],ecx
jmp originalcode

isAmmunition:
mov byte ptr [bTypeFlag],24
mov [fAmmunition],ecx
popad
mov [pAmmunition],ecx
jmp originalcode

isMaterial:
mov byte ptr [bTypeFlag],30
mov [fMaterial],ecx
popad
mov [pMaterial],ecx
jmp originalcode

isFuel:
mov byte ptr [bTypeFlag],3C
mov [fFuel],ecx
popad
mov [pFuel],ecx
jmp originalcode

isInfluence:
mov byte ptr [bTypeFlag],48
mov [fInfluence],ecx
popad
mov [pInfluence],ecx
jmp originalcode

isBeds:
mov byte ptr [bTypeFlag],54
mov [fBeds],ecx
popad
mov [pBeds],ecx
jmp originalcode

isUnknown:
popad
jmp resetFlag
jmp originalcode

resetFlag:
mov byte ptr [bTypeFlag],0
jmp originalcode

originalcode:
popfd
mov ecx,[ecx+08]
mov eax,ecx

exit:
jmp returnhere

///
pMedicine:
dd 0
fMedicine:
dd 0
fDesiredMedicine:
dd (float)25.0

pFood:
dd 0
fFood:
dd 0
fDesiredFood:
dd (float)25.0

pAmmunition:
dd 0
fAmmunition:
dd 0
fDesiredAmmunition:
dd (float)25.0

pMaterial:
dd 0
fMaterial:
dd 0
fDesiredMaterial:
dd (float)50.0

pFuel:
dd 0
fFuel:
dd 0
fDesiredFuel:
dd (float)25.0

pInfluence:
dd 0
fInfluence:
dd 0
fDesiredInfluence:
dd (float)200.0

pBeds:
dd 0
fBeds:
dd 0
fDesiredBeds:
dd (float)25.0

bTypeFlag:
db 0
///

"StateOfDecay.exe"+FF3A31:
jmp newmem
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"StateOfDecay.exe"+FF3A31:
mov ecx,[ecx+08]
mov eax,ecx
//Alt: db 8B 49 08 8B C1
unregistersymbol(pMedicine)
unregistersymbol(fMedicine)
unregistersymbol(fDesiredMedicine)
unregistersymbol(pFood)
unregistersymbol(fFood)
unregistersymbol(fDesiredFood)
unregistersymbol(pAmmunition)
unregistersymbol(fAmmunition)
unregistersymbol(fDesiredAmmunition)
unregistersymbol(pMaterial)
unregistersymbol(fMaterial)
unregistersymbol(fDesiredMaterial)
unregistersymbol(pFuel)
unregistersymbol(fFuel)
unregistersymbol(fDesiredFuel)
unregistersymbol(pInfluence)
unregistersymbol(fInfluence)
unregistersymbol(fDesiredInfluence)
unregistersymbol(pBeds)
unregistersymbol(fBeds)
unregistersymbol(fDesiredBeds)
unregistersymbol(bTypeFlag)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>17169CF8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>81</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>02FB3D78</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>83</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>1B168EE8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>84</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>1B168EF0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>85</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>351FD0E8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>86</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>351FD0F0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>16BB0648</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>95</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(inventorytypereadAOB,8B 46 10 8B 3C 98 57 E8)
registersymbol(inventorytypereadAOB)

label(pInventoryType)
registersymbol(pInventoryType)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+10]
mov [pInventoryType],eax

originalcode2:
//mov eax,[esi+10]
mov edi,[eax+ebx*4]

exit2:
jmp returnhere2

///
pInventoryType:
dd 0
///

inventorytypereadAOB: //"StateOfDecay.exe"+11D9180:
jmp newmem2
nop
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
inventorytypereadAOB: //"StateOfDecay.exe"+11D9180:
db 8B 46 10 8B 3C 98
//Alt: mov eax,[esi+10]
//Alt: mov edi,[eax+ebx*4]
unregistersymbol(inventorytypereadAOB)
unregistersymbol(pInventoryType)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>131</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(gundurabilityAOB,83 C4 04 83 F8 04 75 10 8B 46 14 66 8B 4C 24 10 8D 14 7F 66 89 4C 50 02)
registersymbol(gundurabilityAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp cx,#30
jge originalcode2
mov cx,#30
mov [esp+10],cx

originalcode2:
mov [eax+edx*2+02],cx

exit2:
jmp returnhere2

gundurabilityAOB+13: //"StateOfDecay.exe"+11D946C:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
gundurabilityAOB+13: //"StateOfDecay.exe"+11D946C:
db 66 89 4C 50 02
//Alt: mov [eax+edx*2+02],cx
unregistersymbol(gundurabilityAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>132</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>09B306C4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>09B306C8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>134</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>09B306CC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>135</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>1551FF88</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>136</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>15EA0DB8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>15EA0D60</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>139</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>15E689C8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>140</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>15E68A90</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>141</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>173A2F64</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>142</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>15EA0D60</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>143</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>15EA0DB8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>144</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>16D09CF8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>146</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>16D09CF8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>147</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>16D073CC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>149</ID>
          <Description>"Inventory v1"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(inventoryreadAOB,0F B6 14 29 0F 57 C0 F3 0F 2A C2 F3)
registersymbol(inventoryreadAOB)
aobscan(inventorytypereadAOB,8B 46 10 8B 3C 98 57 E8)
registersymbol(inventorytypereadAOB)

label(pInventory)
registersymbol(pInventory)
label(pInventoryType)
registersymbol(pInventoryType)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pInventory],ecx

originalcode:
movzx edx,byte ptr [ecx+ebp]
xorps xmm0,xmm0

exit:
jmp returnhere

///

newmem2:
mov eax,[esi+10]
mov [pInventoryType],eax

originalcode2:
//mov eax,[esi+10]
mov edi,[eax+ebx*4]

exit2:
jmp returnhere2

///
pInventory:
dd 0
pInventoryType:
dd 0
///

inventoryreadAOB: //"StateOfDecay.exe"+11D91A9:
jmp newmem
nop
nop
returnhere:

inventorytypereadAOB: //"StateOfDecay.exe"+11D9180:
jmp newmem2
nop
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
inventoryreadAOB: //"StateOfDecay.exe"+11D91A9:
db 0F B6 14 29 0F 57 C0
//Alt: movzx edx,byte ptr [ecx+ebp]
//Alt: xorps xmm0,xmm0
inventorytypereadAOB: //"StateOfDecay.exe"+11D9180:
db 8B 46 10 8B 3C 98
//Alt: mov eax,[esi+10]
//Alt: mov edi,[eax+ebx*4]
unregistersymbol(inventoryreadAOB)
unregistersymbol(inventorytypereadAOB)
unregistersymbol(pInventory)
unregistersymbol(pInventoryType)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>145</ID>
              <Description>"isup 1"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(inventoryread2AOB,0F B7 04 50 5F 5E C2 04 00 5F)
registersymbol(inventoryread2AOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
lea edi,[eax+edx*2]
mov [pInventory],edi

originalcode6:
movzx eax,word ptr [eax+edx*2]
pop edi

exit6:
jmp returnhere6

inventoryread2AOB: //"StateOfDecay.exe"+11D93A7:
jmp newmem6
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
inventoryread2AOB: //"StateOfDecay.exe"+11D93A7:
db 0F B7 04 50 5F
//Alt: movzx eax,word ptr [eax+edx*2]
//Alt: pop edi
unregistersymbol(inventoryread2AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>148</ID>
              <Description>"isup 2"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(inventoryread3AOB,8B 46 14 8D 14 7F 0F B6 44 50 04)
registersymbol(inventoryread3AOB)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+14]
mov [pInventory],eax

originalcode11:
//mov eax,[esi+14]
lea edx,[edi+edi*2]

exit11:
jmp returnhere11

inventoryread3AOB: //"StateOfDecay.exe"+11D9321:
jmp newmem11
nop
returnhere11:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
inventoryread3AOB: //"StateOfDecay.exe"+11D9321:
db 8B 46 14 8D 14 7F
//Alt: mov eax,[esi+14]
//Alt: lea edx,[edi+edi*2]
unregistersymbol(inventoryread3AOB)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>152</ID>
          <Description>"isup 3"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem17,2048)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+10]
mov [pInventoryType],eax

originalcode17:
//mov eax,[esi+10]
mov ecx,[eax+edi*4]

exit17:
jmp returnhere17

inventoryread3AOB-14: //"StateOfDecay.exe"+11D930D:
jmp newmem17
nop
returnhere17:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
inventoryread3AOB-14: //"StateOfDecay.exe"+11D930D:
db 8B 46 10 8B 0C B8
//Alt: mov eax,[esi+10]
//Alt: mov ecx,[eax+edi*4]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>150</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>16750648</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>151</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>16D073C8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>159</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
//aobscan(checkproperdecryptAOB,39 87 ** ** ** ** 74 0B)
//registersymbol(checkproperdecryptAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//cmp [edi+StateOfDecay.exe+1539E20],eax
push ebx
mov ebx,[checkproperdecryptAOB+a]
cmp [edi+ebx],eax
pop ebx

exit:
jmp returnhere

checkproperdecryptAOB: //"StateOfDecay.exe"+10652E7:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
checkproperdecryptAOB: //"StateOfDecay.exe"+10652E7:
db 39 87 20 9E 93 01
//Alt: cmp [edi+StateOfDecay.exe+1539E20],eax
//unregistersymbol(checkproperdecryptAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>180</ID>
          <Description>"Influence &amp; Stockpiles V2.1"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(checkproperdecryptAOB,39 87 ** ** ** ** 74 0B)
registersymbol(checkproperdecryptAOB)
aobscan(predecryptionAOB,8B 54 24 04 8B CA C1 E9 18 83 EC 08)
registersymbol(predecryptionAOB)
aobscan(encryptionAOB,8B ** ** ** ** ** 33 ** ** ** ** ** 56 33 54 24 08)
registersymbol(encryptionAOB)

label(pMedicine)
registersymbol(pMedicine)
label(fMedicine)
registersymbol(fMedicine)
label(fDesiredMedicine)
registersymbol(fDesiredMedicine)

label(pFood)
registersymbol(pFood)
label(fFood)
registersymbol(fFood)
label(fDesiredFood)
registersymbol(fDesiredFood)

label(pAmmunition)
registersymbol(pAmmunition)
label(fAmmunition)
registersymbol(fAmmunition)
label(fDesiredAmmunition)
registersymbol(fDesiredAmmunition)

label(pMaterial)
registersymbol(pMaterial)
label(fMaterial)
registersymbol(fMaterial)
label(fDesiredMaterial)
registersymbol(fDesiredMaterial)

label(pFuel)
registersymbol(pFuel)
label(fFuel)
registersymbol(fFuel)
label(fDesiredFuel)
registersymbol(fDesiredFuel)

label(pInfluence)
registersymbol(pInfluence)
label(fInfluence)
registersymbol(fInfluence)
label(fDesiredInfluence)
registersymbol(fDesiredInfluence)

label(pBeds)
registersymbol(pBeds)
label(fBeds)
registersymbol(fBeds)
label(fDesiredBeds)
registersymbol(fDesiredBeds)

label(bTypeFlag)
registersymbol(bTypeFlag)

label(bLockMedicine)
registersymbol(bLockMedicine)
label(bMinimumMedicine)
registersymbol(bMinimumMedicine)
label(bLockFood)
registersymbol(bLockFood)
label(bMinimumFood)
registersymbol(bMinimumFood)
label(bLockAmmunition)
registersymbol(bLockAmmunition)
label(bMinimumAmmunition)
registersymbol(bMinimumAmmunition)
label(bLockMaterial)
registersymbol(bLockMaterial)
label(bMinimumMaterial)
registersymbol(bMinimumMaterial)
label(bLockFuel)
registersymbol(bLockFuel)
label(bMinimumFuel)
registersymbol(bMinimumFuel)
label(bLockInfluence)
registersymbol(bLockInfluence)
label(bMinimumInfluence)
registersymbol(bMinimumInfluence)
label(bLockBeds)
registersymbol(bLockBeds)
label(bMinimumBeds)
registersymbol(bMinimumBeds)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isMedicine)
label(isFood)
label(isAmmunition)
label(isMaterial)
label(isFuel)
label(isInfluence)
label(isBeds)
label(resetFlag)
label(doDecryption)
label(afterDecryption)
label(isMedicineAfter)
label(isFoodAfter)
label(isAmmunitionAfter)
label(isMaterialAfter)
label(isFuelAfter)
label(isInfluenceAfter)
label(isBedsAfter)
label(preEncryption)
label(doEncryption)
label(endAfter)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd

cmp ebx,0
jne resetFlag

cmp edi,0C
je isMedicine
cmp edi,18
je isFood
cmp edi,24
je isAmmunition
cmp edi,30
je isMaterial
cmp edi,3C
je isFuel
cmp edi,48
je isInfluence
cmp edi,54
je isBeds
jmp resetFlag

isMedicine:
mov byte ptr [bTypeFlag],0C
jmp doDecryption

isFood:
mov byte ptr [bTypeFlag],18
jmp doDecryption

isAmmunition:
mov byte ptr [bTypeFlag],24
jmp doDecryption

isMaterial:
mov byte ptr [bTypeFlag],30
jmp doDecryption

isFuel:
mov byte ptr [bTypeFlag],3C
jmp doDecryption

isInfluence:
mov byte ptr [bTypeFlag],48
jmp doDecryption

isBeds:
mov byte ptr [bTypeFlag],54
jmp doDecryption

resetFlag:
mov byte ptr [bTypeFlag],0
jmp doDecryption

doDecryption:
popfd
push eax
call predecryptionAOB //StateOfDecay.exe+FF3FE0

afterDecryption:
pushfd

cmp byte ptr [bTypeFlag],0C
je isMedicineAfter
cmp byte ptr [bTypeFlag],18
je isFoodAfter
cmp byte ptr [bTypeFlag],24
je isAmmunitionAfter
cmp byte ptr [bTypeFlag],30
je isMaterialAfter
cmp byte ptr [bTypeFlag],3C
je isFuelAfter
cmp byte ptr [bTypeFlag],48
je isInfluenceAfter
cmp byte ptr [bTypeFlag],54
je isBedsAfter
jmp endAfter

isMedicineAfter:
mov [fMedicine],eax
fild [fMedicine]
fstp [fMedicine]

pushad
mov ecx,[pMedicine]
mov eax,[fMedicine]
mov ebx,[fDesiredMedicine]

cmp byte ptr [bLockMedicine],1
je doEncryption
cmp byte ptr [bMinimumMedicine],1
je preEncryption
jmp endAfter

isFoodAfter:
mov [fFood],eax
fild [fFood]
fstp [fFood]

pushad
mov ecx,[pFood]
mov eax,[fFood]
mov ebx,[fDesiredFood]

cmp byte ptr [bLockFood],1
je doEncryption
cmp byte ptr [bMinimumFood],1
je preEncryption
jmp endAfter

isAmmunitionAfter:
mov [fAmmunition],eax
fild [fAmmunition]
fstp [fAmmunition]

pushad
mov ecx,[pAmmunition]
mov eax,[fAmmunition]
mov ebx,[fDesiredAmmunition]

cmp byte ptr [bLockAmmunition],1
je doEncryption
cmp byte ptr [bMinimumAmmunition],1
je preEncryption
jmp endAfter

isMaterialAfter:
mov [fMaterial],eax
fild [fMaterial]
fstp [fMaterial]

pushad
mov ecx,[pMaterial]
mov eax,[fMaterial]
mov ebx,[fDesiredMaterial]

cmp byte ptr [bLockMaterial],1
je doEncryption
cmp byte ptr [bMinimumMaterial],1
je preEncryption
jmp endAfter

isFuelAfter:
mov [fFuel],eax
fild [fFuel]
fstp [fFuel]

pushad
mov ecx,[pFuel]
mov eax,[fFuel]
mov ebx,[fDesiredFuel]

cmp byte ptr [bLockFuel],1
je doEncryption
cmp byte ptr [bMinimumFuel],1
je preEncryption
jmp endAfter

isInfluenceAfter:
mov [fInfluence],eax
fild [fInfluence]
fstp [fInfluence]

pushad
mov ecx,[pInfluence]
mov eax,[fInfluence]
mov ebx,[fDesiredInfluence]

cmp byte ptr [bLockInfluence],1
je doEncryption
cmp byte ptr [bMinimumInfluence],1
je preEncryption
jmp endAfter

isBedsAfter:
mov [fBeds],eax
fild [fBeds]
fstp [fBeds]

pushad
mov ecx,[pBeds]
mov eax,[fBeds]
mov ebx,[fDesiredBeds]

cmp byte ptr [bLockBeds],1
je doEncryption
cmp byte ptr [bMinimumBeds],1
je preEncryption
jmp endAfter

preEncryption:
cmp eax,ebx
jge endAfter
doEncryption:
push ebx
call encryptionAOB
jmp endAfter

endAfter:
popad
jmp originalcode

originalcode:
mov byte ptr [bTypeFlag],00
popfd
//push eax
//call predecryptionAOB //StateOfDecay.exe+FF3FE0

exit:
jmp returnhere

///
pMedicine:
dd 0
fMedicine:
dd 0
fDesiredMedicine:
dd (float)25.0

pFood:
dd 0
fFood:
dd 0
fDesiredFood:
dd (float)25.0

pAmmunition:
dd 0
fAmmunition:
dd 0
fDesiredAmmunition:
dd (float)25.0

pMaterial:
dd 0
fMaterial:
dd 0
fDesiredMaterial:
dd (float)50.0

pFuel:
dd 0
fFuel:
dd 0
fDesiredFuel:
dd (float)25.0

pInfluence:
dd 0
fInfluence:
dd 0
fDesiredInfluence:
dd (float)100.0

pBeds:
dd 0
fBeds:
dd 0
fDesiredBeds:
dd (float)25.0

bTypeFlag:
db 0

bLockMedicine:
db 0
bMinimumMedicine:
db 0
bLockFood:
db 0
bMinimumFood:
db 0
bLockAmmunition:
db 0
bMinimumAmmunition:
db 0
bLockMaterial:
db 0
bMinimumMaterial:
db 0
bLockFuel:
db 0
bMinimumFuel:
db 0
bLockInfluence:
db 0
bMinimumInfluence:
db 0
bLockBeds:
db 0
bMinimumBeds:
db 0
///

checkproperdecryptAOB-9: //"StateOfDecay.exe"+10652DE:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
checkproperdecryptAOB-9: //"StateOfDecay.exe"+10652DE:
db 50 E8 FC EC F8 FF
//Alt: push eax
//Alt: call StateOfDecay.exe+FF3FE0
unregistersymbol(checkproperdecryptAOB)
unregistersymbol(predecryptionAOB)
unregistersymbol(encryptionAOB)

unregistersymbol(pMedicine)
unregistersymbol(fMedicine)
unregistersymbol(fDesiredMedicine)
unregistersymbol(pFood)
unregistersymbol(fFood)
unregistersymbol(fDesiredFood)
unregistersymbol(pAmmunition)
unregistersymbol(fAmmunition)
unregistersymbol(fDesiredAmmunition)
unregistersymbol(pMaterial)
unregistersymbol(fMaterial)
unregistersymbol(fDesiredMaterial)
unregistersymbol(pFuel)
unregistersymbol(fFuel)
unregistersymbol(fDesiredFuel)
unregistersymbol(pInfluence)
unregistersymbol(fInfluence)
unregistersymbol(fDesiredInfluence)
unregistersymbol(pBeds)
unregistersymbol(fBeds)
unregistersymbol(fDesiredBeds)
unregistersymbol(bTypeFlag)

unregistersymbol(bLockMedicine)
unregistersymbol(bMinimumMedicine)
unregistersymbol(bLockFood)
unregistersymbol(bMinimumFood)
unregistersymbol(bLockAmmunition)
unregistersymbol(bMinimumAmmunition)
unregistersymbol(bLockMaterial)
unregistersymbol(bMinimumMaterial)
unregistersymbol(bLockFuel)
unregistersymbol(bMinimumFuel)
unregistersymbol(bLockInfluence)
unregistersymbol(bMinimumInfluence)
unregistersymbol(bLockBeds)
unregistersymbol(bMinimumBeds)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>179</ID>
              <Description>"Influence &amp; Stockpiles V2.1 sup"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(getrealaddresspredecryptAOB,8B 50 0C 8D 0C 8A E8 ** ** ** ** EB)
registersymbol(getrealaddresspredecryptAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isMedicine2)
label(isFood2)
label(isAmmunition2)
label(isMaterial2)
label(isFuel2)
label(isInfluence2)
label(isBeds2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[eax+0C]
lea ecx,[edx+ecx*4]

pushfd
cmp byte ptr [bTypeFlag],0C
je isMedicine2
cmp byte ptr [bTypeFlag],18
je isFood2
cmp byte ptr [bTypeFlag],24
je isAmmunition2
cmp byte ptr [bTypeFlag],30
je isMaterial2
cmp byte ptr [bTypeFlag],3C
je isFuel2
cmp byte ptr [bTypeFlag],48
je isInfluence2
cmp byte ptr [bTypeFlag],54
je isBeds2
jmp originalcode2

isMedicine2:
mov [pMedicine],ecx
jmp originalcode2

isFood2:
mov [pFood],ecx
jmp originalcode2

isAmmunition2:
mov [pAmmunition],ecx
jmp originalcode2

isMaterial2:
mov [pMaterial],ecx
jmp originalcode2

isFuel2:
mov [pFuel],ecx
jmp originalcode2

isInfluence2:
mov [pInfluence],ecx
jmp originalcode2

isBeds2:
mov [pBeds],ecx
jmp originalcode2

originalcode2:
popfd
//mov edx,[eax+0C]
//lea ecx,[edx+ecx*4]

exit2:
jmp returnhere2

getrealaddresspredecryptAOB: //"StateOfDecay.exe"+FF402A:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
getrealaddresspredecryptAOB: //"StateOfDecay.exe"+FF402A:
db 8B 50 0C 8D 0C 8A
//Alt: mov edx,[eax+0C]
//Alt: lea ecx,[edx+ecx*4]
unregistersymbol(getrealaddresspredecryptAOB)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>247</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>14C5EAA8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>249</ID>
          <Description>"Influence &amp; Stockpiles V2.2"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(checkproperdecryptAOB,39 87 ** ** ** ** 74 0B)
registersymbol(checkproperdecryptAOB)
aobscan(predecryptionAOB,8B 54 24 04 8B CA C1 E9 18 83 EC 08)
registersymbol(predecryptionAOB)
aobscan(encryptionAOB,8B ** ** ** ** ** 33 ** ** ** ** ** 56 33 54 24 08)
registersymbol(encryptionAOB)
aobscan(getrealaddresspredecryptAOB,8B 50 0C 8D 0C 8A E8 ** ** ** ** EB)
registersymbol(getrealaddresspredecryptAOB)

label(pMedicine)
registersymbol(pMedicine)
label(fMedicine)
registersymbol(fMedicine)
label(fDesiredMedicine)
registersymbol(fDesiredMedicine)

label(pFood)
registersymbol(pFood)
label(fFood)
registersymbol(fFood)
label(fDesiredFood)
registersymbol(fDesiredFood)

label(pAmmunition)
registersymbol(pAmmunition)
label(fAmmunition)
registersymbol(fAmmunition)
label(fDesiredAmmunition)
registersymbol(fDesiredAmmunition)

label(pMaterial)
registersymbol(pMaterial)
label(fMaterial)
registersymbol(fMaterial)
label(fDesiredMaterial)
registersymbol(fDesiredMaterial)

label(pFuel)
registersymbol(pFuel)
label(fFuel)
registersymbol(fFuel)
label(fDesiredFuel)
registersymbol(fDesiredFuel)

label(pInfluence)
registersymbol(pInfluence)
label(fInfluence)
registersymbol(fInfluence)
label(fDesiredInfluence)
registersymbol(fDesiredInfluence)

label(pBeds)
registersymbol(pBeds)
label(fBeds)
registersymbol(fBeds)
label(fDesiredBeds)
registersymbol(fDesiredBeds)

label(bTypeFlag)
registersymbol(bTypeFlag)

label(bLockMedicine)
registersymbol(bLockMedicine)
label(bMinimumMedicine)
registersymbol(bMinimumMedicine)
label(bLockFood)
registersymbol(bLockFood)
label(bMinimumFood)
registersymbol(bMinimumFood)
label(bLockAmmunition)
registersymbol(bLockAmmunition)
label(bMinimumAmmunition)
registersymbol(bMinimumAmmunition)
label(bLockMaterial)
registersymbol(bLockMaterial)
label(bMinimumMaterial)
registersymbol(bMinimumMaterial)
label(bLockFuel)
registersymbol(bLockFuel)
label(bMinimumFuel)
registersymbol(bMinimumFuel)
label(bLockInfluence)
registersymbol(bLockInfluence)
label(bMinimumInfluence)
registersymbol(bMinimumInfluence)
label(bLockBeds)
registersymbol(bLockBeds)
label(bMinimumBeds)
registersymbol(bMinimumBeds)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isMedicine)
label(isFood)
label(isAmmunition)
label(isMaterial)
label(isFuel)
label(isInfluence)
label(isBeds)
label(resetFlag)
label(doDecryption)
label(afterDecryption)
label(isMedicineAfter)
label(isFoodAfter)
label(isAmmunitionAfter)
label(isMaterialAfter)
label(isFuelAfter)
label(isInfluenceAfter)
label(isBedsAfter)
label(preEncryption)
label(doEncryption)
label(endAfter)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isMedicine2)
label(isFood2)
label(isAmmunition2)
label(isMaterial2)
label(isFuel2)
label(isInfluence2)
label(isBeds2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd

cmp ebx,0
jne resetFlag

cmp edi,0C
je isMedicine
cmp edi,18
je isFood
cmp edi,24
je isAmmunition
cmp edi,30
je isMaterial
cmp edi,3C
je isFuel
cmp edi,48
je isInfluence
cmp edi,54
je isBeds
jmp resetFlag

isMedicine:
mov byte ptr [bTypeFlag],0C
jmp doDecryption

isFood:
mov byte ptr [bTypeFlag],18
jmp doDecryption

isAmmunition:
mov byte ptr [bTypeFlag],24
jmp doDecryption

isMaterial:
mov byte ptr [bTypeFlag],30
jmp doDecryption

isFuel:
mov byte ptr [bTypeFlag],3C
jmp doDecryption

isInfluence:
mov byte ptr [bTypeFlag],48
jmp doDecryption

isBeds:
mov byte ptr [bTypeFlag],54
jmp doDecryption

resetFlag:
mov byte ptr [bTypeFlag],0
jmp doDecryption

doDecryption:
popfd
push eax
call predecryptionAOB //StateOfDecay.exe+FF3FE0

afterDecryption:
pushfd

cmp byte ptr [bTypeFlag],0C
je isMedicineAfter
cmp byte ptr [bTypeFlag],18
je isFoodAfter
cmp byte ptr [bTypeFlag],24
je isAmmunitionAfter
cmp byte ptr [bTypeFlag],30
je isMaterialAfter
cmp byte ptr [bTypeFlag],3C
je isFuelAfter
cmp byte ptr [bTypeFlag],48
je isInfluenceAfter
cmp byte ptr [bTypeFlag],54
je isBedsAfter
jmp originalcode

isMedicineAfter:
mov [fMedicine],eax
fild [fMedicine]
fstp [fMedicine]

pushad
mov ecx,[pMedicine]
mov eax,[fMedicine]
mov ebx,[fDesiredMedicine]

cmp byte ptr [bLockMedicine],1
je doEncryption
cmp byte ptr [bMinimumMedicine],1
je preEncryption
jmp endAfter

isFoodAfter:
mov [fFood],eax
fild [fFood]
fstp [fFood]

pushad
mov ecx,[pFood]
mov eax,[fFood]
mov ebx,[fDesiredFood]

cmp byte ptr [bLockFood],1
je doEncryption
cmp byte ptr [bMinimumFood],1
je preEncryption
jmp endAfter

isAmmunitionAfter:
mov [fAmmunition],eax
fild [fAmmunition]
fstp [fAmmunition]

pushad
mov ecx,[pAmmunition]
mov eax,[fAmmunition]
mov ebx,[fDesiredAmmunition]

cmp byte ptr [bLockAmmunition],1
je doEncryption
cmp byte ptr [bMinimumAmmunition],1
je preEncryption
jmp endAfter

isMaterialAfter:
mov [fMaterial],eax
fild [fMaterial]
fstp [fMaterial]

pushad
mov ecx,[pMaterial]
mov eax,[fMaterial]
mov ebx,[fDesiredMaterial]

cmp byte ptr [bLockMaterial],1
je doEncryption
cmp byte ptr [bMinimumMaterial],1
je preEncryption
jmp endAfter

isFuelAfter:
mov [fFuel],eax
fild [fFuel]
fstp [fFuel]

pushad
mov ecx,[pFuel]
mov eax,[fFuel]
mov ebx,[fDesiredFuel]

cmp byte ptr [bLockFuel],1
je doEncryption
cmp byte ptr [bMinimumFuel],1
je preEncryption
jmp endAfter

isInfluenceAfter:
mov [fInfluence],eax
fild [fInfluence]
fstp [fInfluence]

pushad
mov ecx,[pInfluence]
mov eax,[fInfluence]
mov ebx,[fDesiredInfluence]

cmp byte ptr [bLockInfluence],1
je doEncryption
cmp byte ptr [bMinimumInfluence],1
je preEncryption
jmp endAfter

isBedsAfter:
mov [fBeds],eax
fild [fBeds]
fstp [fBeds]

pushad
mov ecx,[pBeds]
mov eax,[fBeds]
mov ebx,[fDesiredBeds]

cmp byte ptr [bLockBeds],1
je doEncryption
cmp byte ptr [bMinimumBeds],1
je preEncryption
jmp endAfter

preEncryption:
cmp eax,ebx
jge endAfter
doEncryption:
push ebx
call encryptionAOB
jmp endAfter

endAfter:
popad
jmp originalcode

originalcode:
mov byte ptr [bTypeFlag],00
popfd
//push eax
//call predecryptionAOB //StateOfDecay.exe+FF3FE0

exit:
jmp returnhere

///

newmem2:
mov edx,[eax+0C]
lea ecx,[edx+ecx*4]

pushfd
cmp byte ptr [bTypeFlag],0C
je isMedicine2
cmp byte ptr [bTypeFlag],18
je isFood2
cmp byte ptr [bTypeFlag],24
je isAmmunition2
cmp byte ptr [bTypeFlag],30
je isMaterial2
cmp byte ptr [bTypeFlag],3C
je isFuel2
cmp byte ptr [bTypeFlag],48
je isInfluence2
cmp byte ptr [bTypeFlag],54
je isBeds2
jmp originalcode2

isMedicine2:
mov [pMedicine],ecx
jmp originalcode2

isFood2:
mov [pFood],ecx
jmp originalcode2

isAmmunition2:
mov [pAmmunition],ecx
jmp originalcode2

isMaterial2:
mov [pMaterial],ecx
jmp originalcode2

isFuel2:
mov [pFuel],ecx
jmp originalcode2

isInfluence2:
mov [pInfluence],ecx
jmp originalcode2

isBeds2:
mov [pBeds],ecx
jmp originalcode2

originalcode2:
popfd
//mov edx,[eax+0C]
//lea ecx,[edx+ecx*4]

exit2:
jmp returnhere2

///
pMedicine:
dd 0
fMedicine:
dd 0
fDesiredMedicine:
dd (float)25.0

pFood:
dd 0
fFood:
dd 0
fDesiredFood:
dd (float)25.0

pAmmunition:
dd 0
fAmmunition:
dd 0
fDesiredAmmunition:
dd (float)25.0

pMaterial:
dd 0
fMaterial:
dd 0
fDesiredMaterial:
dd (float)50.0

pFuel:
dd 0
fFuel:
dd 0
fDesiredFuel:
dd (float)25.0

pInfluence:
dd 0
fInfluence:
dd 0
fDesiredInfluence:
dd (float)100.0

pBeds:
dd 0
fBeds:
dd 0
fDesiredBeds:
dd (float)25.0

bTypeFlag:
db 0

bLockMedicine:
db 0
bMinimumMedicine:
db 0
bLockFood:
db 0
bMinimumFood:
db 0
bLockAmmunition:
db 0
bMinimumAmmunition:
db 0
bLockMaterial:
db 0
bMinimumMaterial:
db 0
bLockFuel:
db 0
bMinimumFuel:
db 0
bLockInfluence:
db 0
bMinimumInfluence:
db 0
bLockBeds:
db 0
bMinimumBeds:
db 0
///

checkproperdecryptAOB-9: //"StateOfDecay.exe"+10652DE:
jmp newmem
nop
returnhere:

getrealaddresspredecryptAOB: //"StateOfDecay.exe"+FF402A:
jmp newmem2
nop
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
checkproperdecryptAOB-9: //"StateOfDecay.exe"+10652DE:
db 50 E8 FC EC F8 FF
//Alt: push eax
//Alt: call StateOfDecay.exe+FF3FE0
getrealaddresspredecryptAOB: //"StateOfDecay.exe"+FF402A:
db 8B 50 0C 8D 0C 8A
//Alt: mov edx,[eax+0C]
//Alt: lea ecx,[edx+ecx*4]
unregistersymbol(checkproperdecryptAOB)
unregistersymbol(predecryptionAOB)
unregistersymbol(encryptionAOB)
unregistersymbol(getrealaddresspredecryptAOB)

unregistersymbol(pMedicine)
unregistersymbol(fMedicine)
unregistersymbol(fDesiredMedicine)
unregistersymbol(pFood)
unregistersymbol(fFood)
unregistersymbol(fDesiredFood)
unregistersymbol(pAmmunition)
unregistersymbol(fAmmunition)
unregistersymbol(fDesiredAmmunition)
unregistersymbol(pMaterial)
unregistersymbol(fMaterial)
unregistersymbol(fDesiredMaterial)
unregistersymbol(pFuel)
unregistersymbol(fFuel)
unregistersymbol(fDesiredFuel)
unregistersymbol(pInfluence)
unregistersymbol(fInfluence)
unregistersymbol(fDesiredInfluence)
unregistersymbol(pBeds)
unregistersymbol(fBeds)
unregistersymbol(fDesiredBeds)
unregistersymbol(bTypeFlag)

unregistersymbol(bLockMedicine)
unregistersymbol(bMinimumMedicine)
unregistersymbol(bLockFood)
unregistersymbol(bMinimumFood)
unregistersymbol(bLockAmmunition)
unregistersymbol(bMinimumAmmunition)
unregistersymbol(bLockMaterial)
unregistersymbol(bMinimumMaterial)
unregistersymbol(bLockFuel)
unregistersymbol(bMinimumFuel)
unregistersymbol(bLockInfluence)
unregistersymbol(bMinimumInfluence)
unregistersymbol(bLockBeds)
unregistersymbol(bMinimumBeds)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>252</ID>
          <Description>"4 Bytes"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1544F9C0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>253</ID>
          <Description>"4 Bytes"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1544F9C4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>266</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1583115C+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>267</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>01940FA0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>268</ID>
          <Description>"!?"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0193FE94</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>269</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>String</VariableType>
          <Length>10</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>22DFAE18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>270</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>String</VariableType>
          <Length>10</Length>
          <Unicode>0</Unicode>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>178C0EE5</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>276</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0193FE38</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>277</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>14941394</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>278</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp ecx,1494138C
jne originalcode
mov ecx,[ecx+08]
mov eax,ecx
jmp exit

originalcode:
mov ecx,[ecx+08]
mov eax,ecx

exit:
jmp returnhere

"StateOfDecay.exe"+FF4991:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"StateOfDecay.exe"+FF4991:
db 8B 49 08 8B C1
//Alt: mov ecx,[ecx+08]
//Alt: mov eax,ecx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>279</ID>
          <Description>"m_pre"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(predecryption2AOB,51 8B 54 24 08 0F 57 C0 8B CA)
registersymbol(predecryption2AOB)


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(predecryption2AOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>280</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(getrealaddresspredecrypt2AOB,8B 50 0C 8D 0C 8A E8 ** ** ** ** D9 5C 24 08)
registersymbol(getrealaddresspredecrypt2AOB)

label(pSomething)
registersymbol(pSomething)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[eax+0C]
lea ecx,[edx+ecx*4]

mov [pSomething],ecx

originalcode2:
//mov edx,[eax+0C]
//lea ecx,[edx+ecx*4]

exit2:
jmp returnhere2

///
pSomething:
dd 0
///

"StateOfDecay.exe"+FF4D35:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"StateOfDecay.exe"+FF4D35:
db 8B 50 0C 8D 0C 8A
//Alt: mov edx,[eax+0C]
//Alt: lea ecx,[edx+ecx*4]
unregistersymbol(pSomething)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>282</ID>
          <Description>"Morale alt injection with crash"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(domoraledecryptionAOB,68 13 00 00 0D E8 ** ** ** ** D9 9C)
registersymbol(domoraledecryptionAOB)

label(pMorale)
registersymbol(pMorale)
label(fMorale)
registersymbol(fMorale)
label(fDesiredMorale)
registersymbol(fDesiredMorale)

label(bLockMorale)
registersymbol(bLockMorale)
label(bMinimumMorale)
registersymbol(bMinimumMorale)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(sCon1)
label(sCon2)
label(afterGetAddress)
label(preEncryption)
label(doEncryption)
label(altEncryption)

newmem: //this is allocated memory, you have read,write,execute access
//place your code herepush ecx
pushad
mov ebx,0D000013
push ecx
mov edx,ebx
xorps xmm0,xmm0
mov ecx,edx
shr ecx,18
movss [esp],xmm0
cmp ecx,19
jae afterGetAddress
mov eax,edx
shr eax,10
shl ecx,04
and eax,000000FF
mov ebx,[predecryption2AOB+26]
add ecx,ebx
cmp eax,[ecx+08]

jae sCon1
shl eax,04
add eax,[ecx+0C]
jmp sCon2

sCon1:
mov eax,[ecx+0C]
sCon2:
movzx edx,dx

cmp edx,[eax+08]
jae afterGetAddress

lea ecx,[edx+edx*4]
mov edx,[eax+0C]
lea ecx,[edx+ecx*4]

mov [pMorale],ecx

afterGetAddress:
pop ecx
popad
push 0D000013
call predecryption2AOB
fst dword ptr [fMorale]
fstp dword ptr [esp+000000B8]

pushad
mov ecx,[pMorale]
cmp ecx,0
je originalcode
mov eax,[fMorale]
mov ebx,[fDesiredMorale]

cmp byte ptr [bLockMorale],1
je doEncryption
cmp byte ptr [bMinimumMorale],1
je preEncryption
jmp originalcode

preEncryption:
cmp eax,ebx
jge originalcode
doEncryption:
cmp byte ptr [bUseAltEncryption],1
je altEncryption
push ebx
call encryptionAOB
jmp originalcode
altEncryption:
///
mov eax,[decryption1AOB+80]
mov edx,[eax] //[StateOfDecay.exe+1A41F90]
mov eax,[decryption1AOB+86]
xor edx,[eax] //[StateOfDecay.exe+1A42CB0]
xor edx,ebx
mov eax,edx
mov esi,edx
and esi,0000FF00
shr eax,08
shl esi,08
and edx,FF0000FF
and eax,0000FF00
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,04
and esi,00F000F0 //StateOfDecay.exe+B000F0
shl esi,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
or edx,esi
and eax,F00FF00F
or edx,eax
mov esi,edx
mov eax,edx
and esi,0C0C0C0C
add esi,esi
shr eax,02
add esi,esi
and edx,C3C3C3C3
and eax,0C0C0C0C
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,1
and esi,22222222
and edx,22222222
add esi,esi
or edx,esi
and eax,99999999
or edx,eax
mov [ecx+08],edx
///

originalcode:
popad
jmp domoraledecryptionAOB+10
//push 0D000013

exit:
jmp returnhere

///
pMorale:
dd 0
fMorale:
dd 0
fDesiredMorale:
dd (float)100.0
bLockMorale:
db 0
bMinimumMorale:
db 0
///

domoraledecryptionAOB: //"StateOfDecay.exe"+101D146:
jmp newmem
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
domoraledecryptionAOB: //"StateOfDecay.exe"+101D146:
push 0D000013
//Alt: db 68 13 00 00 0D
unregistersymbol(domoraledecryptionAOB)
unregistersymbol(pMorale)
unregistersymbol(fMorale)
unregistersymbol(fDesiredMorale)
unregistersymbol(bLockMorale)
unregistersymbol(bMinimumMorale)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>284</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>15B92844</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>285</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>15B92840</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>286</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>4</ByteLength>
          <Address>15BA5088</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>287</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>15BA7D20</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>288</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>1637E4E5</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>289</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(aimflagcheckzeroAOB,8B 4C 24 48 80 79 2D 00)
registersymbol(aimflagcheckzeroAOB)

label(bAimFlag)
registersymbol(bAimFlag)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[esp+48]
mov [bAimFlag],ecx

originalcode2:
//mov ecx,[esp+48]
cmp byte ptr [ecx+2D],00

exit2:
jmp returnhere2

///
bAimFlag:
dd 0
///

aimflagcheckzeroAOB: //"StateOfDecay.exe"+1231DC9:
jmp newmem2
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
aimflagcheckzeroAOB: //"StateOfDecay.exe"+1231DC9:
db 8B 4C 24 48 80 79 2D 00
//Alt: mov ecx,[esp+48]
//Alt: cmp byte ptr [ecx+2D],00
unregistersymbol(aimflagcheckzeroAOB)
unregistersymbol(bAimFlag)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>291</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>3488624A</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>348</ID>
          <Description>"All Bag Size 10"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov esi,ecx
cmp [esi+04],08
jne originalcode
mov [esi+04],0A

originalcode:
//mov esi,ecx
cmp edi,[esi+04]

exit:
jmp returnhere

inventoryread3AOB-1b: //"StateOfDecay.exe"+11DDF16:
jmp newmem
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
inventoryread3AOB-1b: //"StateOfDecay.exe"+11DDF16:
db 8B F1 3B 7E 04
//Alt: mov esi,ecx
//Alt: cmp edi,[esi+04]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>340</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>1510C3BC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>341</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ecx+00000158]
cmp eax,0F
je originalcode
mov eax,0B

originalcode:
//mov eax,[ecx+00000158]

exit:
jmp returnhere

"StateOfDecay.exe"+11161E0:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"StateOfDecay.exe"+11161E0:
db 8B 81 58 01 00 00
//Alt: mov eax,[ecx+00000158]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>344</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>175B745C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>345</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>2AF0B6B5</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>346</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>4AAA74C5</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>349</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(domoraledecryptionAOB,68 13 00 00 0D E8 ** ** ** ** 83 C4 04)
registersymbol(domoraledecryptionAOB)

label(pMorale)
registersymbol(pMorale)
label(fMorale)
registersymbol(fMorale)
label(fDesiredMorale)
registersymbol(fDesiredMorale)

label(bLockMorale)
registersymbol(bLockMorale)
label(bMinimumMorale)
registersymbol(bMinimumMorale)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(sCon1)
label(sCon2)
label(afterGetAddress)
label(preEncryption)
label(doEncryption)
label(altEncryption)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
mov ebx,0D000013
push ecx
mov edx,ebx
xorps xmm0,xmm0
mov ecx,edx
shr ecx,18
movss [esp],xmm0
cmp ecx,19
jae afterGetAddress
mov eax,edx
shr eax,10
shl ecx,04
and eax,000000FF
mov ebx,[predecryption2AOB+26]
add ecx,ebx
cmp eax,[ecx+08]

jae sCon1
shl eax,04
add eax,[ecx+0C]
jmp sCon2

sCon1:
mov eax,[ecx+0C]
sCon2:
movzx edx,dx

cmp edx,[eax+08]
jae afterGetAddress

lea ecx,[edx+edx*4]
mov edx,[eax+0C]
lea ecx,[edx+ecx*4]

mov [pMorale],ecx

afterGetAddress:
pop ecx
popad

///
push 0D000013
call predecryption2AOB //StateOfDecay.exe+FF4CF0
///

fst dword ptr [fMorale]

pushad
mov ecx,[pMorale]
cmp ecx,0
je originalcode
mov eax,[fMorale]
mov ebx,[fDesiredMorale]

cmp byte ptr [bLockMorale],1
je doEncryption
cmp byte ptr [bMinimumMorale],1
je preEncryption
jmp originalcode

preEncryption:
cmp eax,ebx
jge originalcode
doEncryption:
cmp byte ptr [bUseAltEncryption],1
je altEncryption
push ebx
call encryptionAOB
jmp originalcode
altEncryption:
///
mov eax,[decryption1AOB+80]
mov edx,[eax] //[StateOfDecay.exe+1A41F90]
mov eax,[decryption1AOB+86]
xor edx,[eax] //[StateOfDecay.exe+1A42CB0]
xor edx,ebx
mov eax,edx
mov esi,edx
and esi,0000FF00
shr eax,08
shl esi,08
and edx,FF0000FF
and eax,0000FF00
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,04
and esi,00F000F0 //StateOfDecay.exe+B000F0
shl esi,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
or edx,esi
and eax,F00FF00F
or edx,eax
mov esi,edx
mov eax,edx
and esi,0C0C0C0C
add esi,esi
shr eax,02
add esi,esi
and edx,C3C3C3C3
and eax,0C0C0C0C
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,1
and esi,22222222
and edx,22222222
add esi,esi
or edx,esi
and eax,99999999
or edx,eax
mov [ecx+08],edx
///

originalcode:
popad
//push 0D000013
//call predecryption2AOB

exit:
jmp returnhere

///
pMorale:
dd 0
fMorale:
dd 0
fDesiredMorale:
dd (float)90.0
bLockMorale:
db 0
bMinimumMorale:
db 0
///

domoraledecryptionAOB: //"StateOfDecay.exe"+1067E34:
jmp newmem
nop
nop
nop
nop
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
domoraledecryptionAOB: //"StateOfDecay.exe"+1067E34:
db 68 13 00 00 0D
call predecryption2AOB
//Alt: push 0D000013
//Alt: db E8 B2 D3 F8 FF
unregistersymbol(domoraledecryptionAOB)
unregistersymbol(pMorale)
unregistersymbol(fMorale)
unregistersymbol(fDesiredMorale)
unregistersymbol(bLockMorale)
unregistersymbol(bMinimumMorale)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>356</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(doinfluencestockpilesdecryptionAOB,52 E8 ** ** ** ** 83 C4 04 89 45 F4 8B 45 F8)
registersymbol(doinfluencestockpilesdecryptionAOB)
aobscan(getrealaddresspredecryptAOB,8B 50 0C 8D 0C 8A E8 ** ** ** ** EB)
registersymbol(getrealaddresspredecryptAOB)

label(pMedicine)
registersymbol(pMedicine)
label(fMedicine)
registersymbol(fMedicine)
label(fDesiredMedicine)
registersymbol(fDesiredMedicine)

label(pFood)
registersymbol(pFood)
label(fFood)
registersymbol(fFood)
label(fDesiredFood)
registersymbol(fDesiredFood)

label(pAmmunition)
registersymbol(pAmmunition)
label(fAmmunition)
registersymbol(fAmmunition)
label(fDesiredAmmunition)
registersymbol(fDesiredAmmunition)

label(pMaterial)
registersymbol(pMaterial)
label(fMaterial)
registersymbol(fMaterial)
label(fDesiredMaterial)
registersymbol(fDesiredMaterial)

label(pFuel)
registersymbol(pFuel)
label(fFuel)
registersymbol(fFuel)
label(fDesiredFuel)
registersymbol(fDesiredFuel)

label(pInfluence)
registersymbol(pInfluence)
label(fInfluence)
registersymbol(fInfluence)
label(fDesiredInfluence)
registersymbol(fDesiredInfluence)

label(pBeds)
registersymbol(pBeds)
label(fBeds)
registersymbol(fBeds)
label(fDesiredBeds)
registersymbol(fDesiredBeds)

label(bTypeFlag)
registersymbol(bTypeFlag)

label(bLockMedicine)
registersymbol(bLockMedicine)
label(bMinimumMedicine)
registersymbol(bMinimumMedicine)
label(bLockFood)
registersymbol(bLockFood)
label(bMinimumFood)
registersymbol(bMinimumFood)
label(bLockAmmunition)
registersymbol(bLockAmmunition)
label(bMinimumAmmunition)
registersymbol(bMinimumAmmunition)
label(bLockMaterial)
registersymbol(bLockMaterial)
label(bMinimumMaterial)
registersymbol(bMinimumMaterial)
label(bLockFuel)
registersymbol(bLockFuel)
label(bMinimumFuel)
registersymbol(bMinimumFuel)
label(bLockInfluence)
registersymbol(bLockInfluence)
label(bMinimumInfluence)
registersymbol(bMinimumInfluence)
label(bLockBeds)
registersymbol(bLockBeds)
label(bMinimumBeds)
registersymbol(bMinimumBeds)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isInfluenceOrStockpiles)
label(resetFlag)
label(doDecryption)
label(afterDecryption)
label(isMedicineAfter)
label(isFoodAfter)
label(isAmmunitionAfter)
label(isMaterialAfter)
label(isFuelAfter)
label(isInfluenceAfter)
label(isBedsAfter)
label(preEncryption)
label(doEncryption)
label(altEncryption)
label(endAfter)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isMedicine2)
label(isFood2)
label(isAmmunition2)
label(isMaterial2)
label(isFuel2)
label(isInfluence2)
label(isBeds2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd

cmp edx,0C
je isInfluenceOrStockpiles
cmp edx,18
je isInfluenceOrStockpiles
cmp edx,24
je isInfluenceOrStockpiles
cmp edx,30
je isInfluenceOrStockpiles
cmp edx,3C
je isInfluenceOrStockpiles
cmp edx,48
je isInfluenceOrStockpiles
cmp edx,54
je isInfluenceOrStockpiles
jmp resetFlag

isInfluenceOrStockpiles:
mov byte ptr [bTypeFlag],dl
jmp doDecryption

resetFlag:
mov byte ptr [bTypeFlag],FF
jmp doDecryption

doDecryption:
popfd
push edx
call predecryptionAOB

afterDecryption:
pushfd

cmp byte ptr [bTypeFlag],0C
je isMedicineAfter
cmp byte ptr [bTypeFlag],18
je isFoodAfter
cmp byte ptr [bTypeFlag],24
je isAmmunitionAfter
cmp byte ptr [bTypeFlag],30
je isMaterialAfter
cmp byte ptr [bTypeFlag],3C
je isFuelAfter
cmp byte ptr [bTypeFlag],48
je isInfluenceAfter
cmp byte ptr [bTypeFlag],54
je isBedsAfter
jmp originalcode

isMedicineAfter:
mov [fMedicine],eax
fild [fMedicine]
fstp [fMedicine]

pushad
mov ecx,[pMedicine]
mov eax,[fMedicine]
mov ebx,[fDesiredMedicine]

cmp byte ptr [bLockMedicine],1
je doEncryption
cmp byte ptr [bMinimumMedicine],1
je preEncryption
jmp endAfter

isFoodAfter:
mov [fFood],eax
fild [fFood]
fstp [fFood]

pushad
mov ecx,[pFood]
mov eax,[fFood]
mov ebx,[fDesiredFood]

cmp byte ptr [bLockFood],1
je doEncryption
cmp byte ptr [bMinimumFood],1
je preEncryption
jmp endAfter

isAmmunitionAfter:
mov [fAmmunition],eax
fild [fAmmunition]
fstp [fAmmunition]

pushad
mov ecx,[pAmmunition]
mov eax,[fAmmunition]
mov ebx,[fDesiredAmmunition]

cmp byte ptr [bLockAmmunition],1
je doEncryption
cmp byte ptr [bMinimumAmmunition],1
je preEncryption
jmp endAfter

isMaterialAfter:
mov [fMaterial],eax
fild [fMaterial]
fstp [fMaterial]

pushad
mov ecx,[pMaterial]
mov eax,[fMaterial]
mov ebx,[fDesiredMaterial]

cmp byte ptr [bLockMaterial],1
je doEncryption
cmp byte ptr [bMinimumMaterial],1
je preEncryption
jmp endAfter

isFuelAfter:
mov [fFuel],eax
fild [fFuel]
fstp [fFuel]

pushad
mov ecx,[pFuel]
mov eax,[fFuel]
mov ebx,[fDesiredFuel]

cmp byte ptr [bLockFuel],1
je doEncryption
cmp byte ptr [bMinimumFuel],1
je preEncryption
jmp endAfter

isInfluenceAfter:
mov [fInfluence],eax
fild [fInfluence]
fstp [fInfluence]

pushad
mov ecx,[pInfluence]
mov eax,[fInfluence]
mov ebx,[fDesiredInfluence]

cmp byte ptr [bLockInfluence],1
je doEncryption
cmp byte ptr [bMinimumInfluence],1
je preEncryption
jmp endAfter

isBedsAfter:
mov [fBeds],eax
fild [fBeds]
fstp [fBeds]

pushad
mov ecx,[pBeds]
mov eax,[fBeds]
mov ebx,[fDesiredBeds]

cmp byte ptr [bLockBeds],1
je doEncryption
cmp byte ptr [bMinimumBeds],1
je preEncryption
jmp endAfter

preEncryption:
cmp eax,ebx
jge endAfter
doEncryption:
cmp byte ptr [bUseAltEncryption],1
je altEncryption
push ebx
call encryptionAOB
jmp endAfter
altEncryption:
///
mov eax,[decryption1AOB+80]
mov edx,[eax] //[StateOfDecay.exe+1A41F90]
mov eax,[decryption1AOB+86]
xor edx,[eax] //[StateOfDecay.exe+1A42CB0]
xor edx,ebx
mov eax,edx
mov esi,edx
and esi,0000FF00
shr eax,08
shl esi,08
and edx,FF0000FF
and eax,0000FF00
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,04
and esi,00F000F0 //StateOfDecay.exe+B000F0
shl esi,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
or edx,esi
and eax,F00FF00F
or edx,eax
mov esi,edx
mov eax,edx
and esi,0C0C0C0C
add esi,esi
shr eax,02
add esi,esi
and edx,C3C3C3C3
and eax,0C0C0C0C
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,1
and esi,22222222
and edx,22222222
add esi,esi
or edx,esi
and eax,99999999
or edx,eax
mov [ecx+08],edx
///
jmp endAfter

endAfter:
popad
jmp originalcode

originalcode:
mov byte ptr [bTypeFlag],FF
popfd
//push edx
//call predecryptionAOB

exit:
jmp returnhere

///

newmem2:
mov edx,[eax+0C]
lea ecx,[edx+ecx*4]

pushfd
cmp byte ptr [bTypeFlag],0C
je isMedicine2
cmp byte ptr [bTypeFlag],18
je isFood2
cmp byte ptr [bTypeFlag],24
je isAmmunition2
cmp byte ptr [bTypeFlag],30
je isMaterial2
cmp byte ptr [bTypeFlag],3C
je isFuel2
cmp byte ptr [bTypeFlag],48
je isInfluence2
cmp byte ptr [bTypeFlag],54
je isBeds2
jmp originalcode2

isMedicine2:
mov [pMedicine],ecx
jmp originalcode2

isFood2:
mov [pFood],ecx
jmp originalcode2

isAmmunition2:
mov [pAmmunition],ecx
jmp originalcode2

isMaterial2:
mov [pMaterial],ecx
jmp originalcode2

isFuel2:
mov [pFuel],ecx
jmp originalcode2

isInfluence2:
mov [pInfluence],ecx
jmp originalcode2

isBeds2:
mov [pBeds],ecx
jmp originalcode2

originalcode2:
popfd
//mov edx,[eax+0C]
//lea ecx,[edx+ecx*4]

exit2:
jmp returnhere2

///
pMedicine:
dd 0
fMedicine:
dd 0
fDesiredMedicine:
dd (float)25.0

pFood:
dd 0
fFood:
dd 0
fDesiredFood:
dd (float)25.0

pAmmunition:
dd 0
fAmmunition:
dd 0
fDesiredAmmunition:
dd (float)25.0

pMaterial:
dd 0
fMaterial:
dd 0
fDesiredMaterial:
dd (float)50.0

pFuel:
dd 0
fFuel:
dd 0
fDesiredFuel:
dd (float)25.0

pInfluence:
dd 0
fInfluence:
dd 0
fDesiredInfluence:
dd (float)100.0

pBeds:
dd 0
fBeds:
dd 0
fDesiredBeds:
dd (float)25.0

bTypeFlag:
db FF

bLockMedicine:
db 0
bMinimumMedicine:
db 0
bLockFood:
db 0
bMinimumFood:
db 0
bLockAmmunition:
db 0
bMinimumAmmunition:
db 0
bLockMaterial:
db 0
bMinimumMaterial:
db 0
bLockFuel:
db 0
bMinimumFuel:
db 0
bLockInfluence:
db 0
bMinimumInfluence:
db 0
bLockBeds:
db 0
bMinimumBeds:
db 0
///

doinfluencestockpilesdecryptionAOB: //"StateOfDecay.exe"+1067E86:
jmp newmem
nop
returnhere:

getrealaddresspredecryptAOB: //"StateOfDecay.exe"+FF402A:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
doinfluencestockpilesdecryptionAOB: //"StateOfDecay.exe"+1067E86:
db 52
call predecryptionAOB
//Alt: push edx
//Alt: db E8 B4 D5 F8 FF
unregistersymbol(doinfluencestockpilesdecryptionAOB)
getrealaddresspredecryptAOB: //"StateOfDecay.exe"+FF402A:
db 8B 50 0C 8D 0C 8A
//Alt: mov edx,[eax+0C]
//Alt: lea ecx,[edx+ecx*4]
unregistersymbol(getrealaddresspredecryptAOB)

unregistersymbol(pMedicine)
unregistersymbol(fMedicine)
unregistersymbol(fDesiredMedicine)
unregistersymbol(pFood)
unregistersymbol(fFood)
unregistersymbol(fDesiredFood)
unregistersymbol(pAmmunition)
unregistersymbol(fAmmunition)
unregistersymbol(fDesiredAmmunition)
unregistersymbol(pMaterial)
unregistersymbol(fMaterial)
unregistersymbol(fDesiredMaterial)
unregistersymbol(pFuel)
unregistersymbol(fFuel)
unregistersymbol(fDesiredFuel)
unregistersymbol(pInfluence)
unregistersymbol(fInfluence)
unregistersymbol(fDesiredInfluence)
unregistersymbol(pBeds)
unregistersymbol(fBeds)
unregistersymbol(fDesiredBeds)

unregistersymbol(bTypeFlag)

unregistersymbol(bLockMedicine)
unregistersymbol(bMinimumMedicine)
unregistersymbol(bLockFood)
unregistersymbol(bMinimumFood)
unregistersymbol(bLockAmmunition)
unregistersymbol(bMinimumAmmunition)
unregistersymbol(bLockMaterial)
unregistersymbol(bMinimumMaterial)
unregistersymbol(bLockFuel)
unregistersymbol(bMinimumFuel)
unregistersymbol(bLockInfluence)
unregistersymbol(bMinimumInfluence)
unregistersymbol(bLockBeds)
unregistersymbol(bMinimumBeds)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Influence &amp; Stockpiles V1"</Description>
          <Options moHideChildren="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
//aobscan(decryption1AOB,8B 49 08 8B C1 8B D1)
//registersymbol(decryption1AOB)

label(pMedicine)
registersymbol(pMedicine)
label(fMedicine)
registersymbol(fMedicine)
label(fDesiredMedicine)
registersymbol(fDesiredMedicine)

label(pFood)
registersymbol(pFood)
label(fFood)
registersymbol(fFood)
label(fDesiredFood)
registersymbol(fDesiredFood)

label(pAmmunition)
registersymbol(pAmmunition)
label(fAmmunition)
registersymbol(fAmmunition)
label(fDesiredAmmunition)
registersymbol(fDesiredAmmunition)

label(pMaterial)
registersymbol(pMaterial)
label(fMaterial)
registersymbol(fMaterial)
label(fDesiredMaterial)
registersymbol(fDesiredMaterial)

label(pFuel)
registersymbol(pFuel)
label(fFuel)
registersymbol(fFuel)
label(fDesiredFuel)
registersymbol(fDesiredFuel)

label(pInfluence)
registersymbol(pInfluence)
label(fInfluence)
registersymbol(fInfluence)
label(fDesiredInfluence)
registersymbol(fDesiredInfluence)

label(pBeds)
registersymbol(pBeds)
label(fBeds)
registersymbol(fBeds)
label(fDesiredBeds)
registersymbol(fDesiredBeds)

label(bTypeFlag)
registersymbol(bTypeFlag)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(doDecryption)
label(isMedicine)
label(isFood)
label(isAmmunition)
label(isMaterial)
label(isFuel)
label(isInfluence)
label(isBeds)
label(isUnknown)
label(resetFlag)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp ebx,0
jne resetFlag

cmp edi,0C
je doDecryption
cmp edi,18
je doDecryption
cmp edi,24
je doDecryption
cmp edi,30
je doDecryption
cmp edi,3C
je doDecryption
cmp edi,48
je doDecryption
cmp edi,54
je doDecryption
jmp resetFlag

doDecryption:

pushad

mov ecx,[ecx+08]
mov eax,ecx

mov edx,ecx
and edx,22222222
shr eax,1
add edx,edx
and ecx,99999999
and eax,22222222
or eax,edx
or eax,ecx
mov edx,eax
and edx,0C0C0C0C
mov ecx,eax
shr ecx,02
and ecx,0C0C0C0C
add edx,edx
add edx,edx
or ecx,edx
and eax,C3C3C3C3
or ecx,eax
mov eax,ecx
mov edx,ecx
shr eax,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
and ecx,F00FF00F
shl edx,04
and eax,00F000F0 //StateOfDecay.exe+B000F0
or eax,edx
or eax,ecx
mov ecx,eax
shr ecx,08
mov edx,eax
and ecx,0000FF00
and edx,0000FF00
shl edx,08
or ecx,edx
and eax,FF0000FF
or ecx,eax

mov eax,[decryption1AOB+80]
xor ecx,[eax] //[StateOfDecay.exe+1A41F90]
mov eax,[decryption1AOB+86]
xor ecx,[eax] //[StateOfDecay.exe+1A42CB0]

cmp edi,0C
je isMedicine
cmp edi,18
je isFood
cmp edi,24
je isAmmunition
cmp edi,30
je isMaterial
cmp edi,3C
je isFuel
cmp edi,48
je isInfluence
cmp edi,54
je isBeds
jmp isUnknown

isMedicine:
mov byte ptr [bTypeFlag],0C
mov [fMedicine],ecx
popad
mov [pMedicine],ecx
jmp originalcode

isFood:
mov byte ptr [bTypeFlag],18
mov [fFood],ecx
popad
mov [pFood],ecx
jmp originalcode

isAmmunition:
mov byte ptr [bTypeFlag],24
mov [fAmmunition],ecx
popad
mov [pAmmunition],ecx
jmp originalcode

isMaterial:
mov byte ptr [bTypeFlag],30
mov [fMaterial],ecx
popad
mov [pMaterial],ecx
jmp originalcode

isFuel:
mov byte ptr [bTypeFlag],3C
mov [fFuel],ecx
popad
mov [pFuel],ecx
jmp originalcode

isInfluence:
mov byte ptr [bTypeFlag],48
mov [fInfluence],ecx
popad
mov [pInfluence],ecx
jmp originalcode

isBeds:
mov byte ptr [bTypeFlag],54
mov [fBeds],ecx
popad
mov [pBeds],ecx
jmp originalcode

isUnknown:
popad
jmp resetFlag
jmp originalcode

resetFlag:
mov byte ptr [bTypeFlag],0
jmp originalcode

originalcode:
popfd
mov ecx,[ecx+08]
mov eax,ecx

exit:
jmp returnhere

///
pMedicine:
dd 0
fMedicine:
dd 0
fDesiredMedicine:
dd (float)25.0

pFood:
dd 0
fFood:
dd 0
fDesiredFood:
dd (float)25.0

pAmmunition:
dd 0
fAmmunition:
dd 0
fDesiredAmmunition:
dd (float)25.0

pMaterial:
dd 0
fMaterial:
dd 0
fDesiredMaterial:
dd (float)50.0

pFuel:
dd 0
fFuel:
dd 0
fDesiredFuel:
dd (float)25.0

pInfluence:
dd 0
fInfluence:
dd 0
fDesiredInfluence:
dd (float)100.0

pBeds:
dd 0
fBeds:
dd 0
fDesiredBeds:
dd (float)25.0

bTypeFlag:
db 0
///

decryption1AOB: //"StateOfDecay.exe"+FF3A31:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
decryption1AOB: //"StateOfDecay.exe"+FF3A31:
mov ecx,[ecx+08]
mov eax,ecx
//Alt: db 8B 49 08 8B C1
//unregistersymbol(decryption1AOB)
unregistersymbol(pMedicine)
unregistersymbol(fMedicine)
unregistersymbol(fDesiredMedicine)
unregistersymbol(pFood)
unregistersymbol(fFood)
unregistersymbol(fDesiredFood)
unregistersymbol(pAmmunition)
unregistersymbol(fAmmunition)
unregistersymbol(fDesiredAmmunition)
unregistersymbol(pMaterial)
unregistersymbol(fMaterial)
unregistersymbol(fDesiredMaterial)
unregistersymbol(pFuel)
unregistersymbol(fFuel)
unregistersymbol(fDesiredFuel)
unregistersymbol(pInfluence)
unregistersymbol(fInfluence)
unregistersymbol(fDesiredInfluence)
unregistersymbol(pBeds)
unregistersymbol(fBeds)
unregistersymbol(fDesiredBeds)
unregistersymbol(bTypeFlag)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>55</ID>
              <Description>"Minimum Desired Value"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(decryption2aAOB,51 ** ** ** ** ** 8B D1 81 E2 22 22 22 22 D1 E8)
registersymbol(decryption2aAOB)

label(fDesiredValue)
registersymbol(fDesiredValue)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isMedicine)
label(isFood)
label(isAmmunition)
label(isMaterial)
label(isFuel)
label(isInfluence)
label(isBeds)
label(doEncryption)
label(resetEBX)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
/*cmp ebx,0
jne originalcode
cmp edi,0C
je isMedicine
cmp edi,18
je isFood
cmp edi,24
je isAmmunition
cmp edi,30
je isMaterial
cmp edi,3C
je isFuel
cmp edi,48
je isInfluence
cmp edi,54
je isBeds*/
cmp byte ptr [bTypeFlag],0C
je isMedicine
cmp byte ptr [bTypeFlag],18
je isFood
cmp byte ptr [bTypeFlag],24
je isAmmunition
cmp byte ptr [bTypeFlag],30
je isMaterial
cmp byte ptr [bTypeFlag],3C
je isFuel
cmp byte ptr [bTypeFlag],48
je isInfluence
cmp byte ptr [bTypeFlag],54
je isBeds
jmp originalcode

isMedicine:
mov ebx,[fDesiredMedicine]
cmp [fMedicine],ebx
jge resetEBX

mov [fDesiredValue],ebx
mov ebx,[pMedicine]
jmp doEncryption

isFood:
mov ebx,[fDesiredFood]
cmp [fFood],ebx
jge resetEBX

mov [fDesiredValue],ebx
mov ebx,[pFood]
jmp doEncryption

isAmmunition:
mov ebx,[fDesiredAmmunition]
cmp [fAmmunition],ebx
jge resetEBX

mov [fDesiredValue],ebx
mov ebx,[pAmmunition]
jmp doEncryption

isMaterial:
mov ebx,[fDesiredMaterial]
cmp [fMaterial],ebx
jge resetEBX

mov [fDesiredValue],ebx
mov ebx,[pMaterial]
jmp doEncryption

isFuel:
mov ebx,[fDesiredFuel]
cmp [fFuel],ebx
jge resetEBX

mov [fDesiredValue],ebx
mov ebx,[pFuel]
jmp doEncryption

isInfluence:
mov ebx,[fDesiredInfluence]
cmp [fInfluence],ebx
jge resetEBX

mov [fDesiredValue],ebx
mov ebx,[pInfluence]
jmp doEncryption

isBeds:
mov ebx,[fDesiredBeds]
cmp [fBeds],ebx
jge resetEBX

mov [fDesiredValue],ebx
mov ebx,[pBeds]
jmp doEncryption

doEncryption:
pushad

mov eax,[decryption1AOB+80]
mov edx,[eax] //[StateOfDecay.exe+1A41F90]
mov eax,[decryption1AOB+86]
xor edx,[eax] //[StateOfDecay.exe+1A42CB0]
push esi
xor edx,[fDesiredValue]
mov eax,edx
mov esi,edx
and esi,0000FF00
shr eax,08
shl esi,08
and edx,FF0000FF
and eax,0000FF00
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,04
and esi,00F000F0 //StateOfDecay.exe+B000F0
shl esi,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
or edx,esi
and eax,F00FF00F
or edx,eax
mov esi,edx
mov eax,edx
and esi,0C0C0C0C
add esi,esi
shr eax,02
add esi,esi
and edx,C3C3C3C3
and eax,0C0C0C0C
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,1
and esi,22222222
and edx,22222222
add esi,esi
or edx,esi
and eax,99999999
or edx,eax
mov [ebx+08],edx
pop esi

popad

resetEBX:
mov ebx,0

jmp originalcode

originalcode:
popfd
mov byte ptr [bTypeFlag],00
mov edx,ecx
and edx,22222222

exit:
jmp returnhere

///
fDesiredValue:
dd 0
///

decryption2aAOB+6: //"StateOfDecay.exe"+FF3A36:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
decryption2aAOB+6: //"StateOfDecay.exe"+FF3A36:
db 8B D1 81 E2 22 22 22 22
//Alt: mov edx,ecx
//Alt: and edx,22222222
unregistersymbol(decryption2aAOB)
unregistersymbol(fDesiredValue)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>75</ID>
              <Description>"Lock at Desired Value"</Description>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(decryption2bAOB,51 ** ** ** ** ** 8B D1 81 E2 22 22 22 22 D1 E8)
registersymbol(decryption2bAOB)

label(fDesiredValue)
registersymbol(fDesiredValue)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(isMedicine)
label(isFood)
label(isAmmunition)
label(isMaterial)
label(isFuel)
label(isInfluence)
label(isBeds)
label(doEncryption)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
/*cmp ebx,0
jne originalcode
cmp edi,0C
je isMedicine
cmp edi,18
je isFood
cmp edi,24
je isAmmunition
cmp edi,30
je isMaterial
cmp edi,3C
je isFuel
cmp edi,48
je isInfluence
cmp edi,54
je isBeds*/
cmp byte ptr [bTypeFlag],0C
je isMedicine
cmp byte ptr [bTypeFlag],18
je isFood
cmp byte ptr [bTypeFlag],24
je isAmmunition
cmp byte ptr [bTypeFlag],30
je isMaterial
cmp byte ptr [bTypeFlag],3C
je isFuel
cmp byte ptr [bTypeFlag],48
je isInfluence
cmp byte ptr [bTypeFlag],54
je isBeds
jmp originalcode

isMedicine:
mov ebx,[fDesiredMedicine]
mov [fDesiredValue],ebx
mov ebx,[pMedicine]
jmp doEncryption

isFood:
mov ebx,[fDesiredFood]
mov [fDesiredValue],ebx
mov ebx,[pFood]
jmp doEncryption

isAmmunition:
mov ebx,[fDesiredAmmunition]
mov [fDesiredValue],ebx
mov ebx,[pAmmunition]
jmp doEncryption

isMaterial:
mov ebx,[fDesiredMaterial]
mov [fDesiredValue],ebx
mov ebx,[pMaterial]
jmp doEncryption

isFuel:
mov ebx,[fDesiredFuel]
mov [fDesiredValue],ebx
mov ebx,[pFuel]
jmp doEncryption

isInfluence:
mov ebx,[fDesiredInfluence]
mov [fDesiredValue],ebx
mov ebx,[pInfluence]
jmp doEncryption

isBeds:
mov ebx,[fDesiredBeds]
mov [fDesiredValue],ebx
mov ebx,[pBeds]
jmp doEncryption

doEncryption:
pushad

mov eax,[decryption1AOB+80]
mov edx,[eax] //[StateOfDecay.exe+1A41F90]
mov eax,[decryption1AOB+86]
xor edx,[eax] //[StateOfDecay.exe+1A42CB0]
push esi
xor edx,[fDesiredValue]
mov eax,edx
mov esi,edx
and esi,0000FF00
shr eax,08
shl esi,08
and edx,FF0000FF
and eax,0000FF00
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,04
and esi,00F000F0 //StateOfDecay.exe+B000F0
shl esi,04
and edx,00F000F0 //StateOfDecay.exe+B000F0
or edx,esi
and eax,F00FF00F
or edx,eax
mov esi,edx
mov eax,edx
and esi,0C0C0C0C
add esi,esi
shr eax,02
add esi,esi
and edx,C3C3C3C3
and eax,0C0C0C0C
or eax,esi
or eax,edx
mov edx,eax
mov esi,eax
shr edx,1
and esi,22222222
and edx,22222222
add esi,esi
or edx,esi
and eax,99999999
or edx,eax
mov [ebx+08],edx
pop esi

popad
mov ebx,0

jmp originalcode

originalcode:
popfd
mov byte ptr [bTypeFlag],00
mov edx,ecx
and edx,22222222

exit:
jmp returnhere

///
fDesiredValue:
dd 0
///

decryption2bAOB+6: //"StateOfDecay.exe"+FF3A36:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
decryption2bAOB+6: //"StateOfDecay.exe"+FF3A36:
db 8B D1 81 E2 22 22 22 22
//Alt: mov edx,ecx
//Alt: and edx,22222222
unregistersymbol(decryption2bAOB)
unregistersymbol(fDesiredValue)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>58</ID>
              <Description>"Influence"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>fInfluence</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>69</ID>
                  <Description>"Desired Value"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredInfluence</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>107</Key>
                      </Keys>
                      <Value>100</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>109</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>59</ID>
                  <Description>"actual address &amp; value"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pInfluence</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"Daily Rations of Food"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>fFood</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>70</ID>
                  <Description>"Desired Value"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredFood</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>67</ID>
                  <Description>"actual address &amp; value"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pFood</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"Cases of Medicine"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>fMedicine</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>68</ID>
                  <Description>"Desired Value"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredMedicine</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>51</ID>
                  <Description>"actual address &amp; value"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMedicine</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>64</ID>
              <Description>"Cases of Ammunition"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>fAmmunition</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>71</ID>
                  <Description>"Desired Value"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredAmmunition</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>65</ID>
                  <Description>"actual address &amp; value"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pAmmunition</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>62</ID>
              <Description>"Construction Material"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>fMaterial</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>72</ID>
                  <Description>"Desired Value"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredMaterial</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>63</ID>
                  <Description>"actual address &amp; value"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMaterial</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"Barrels of Fuel"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>fFuel</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>73</ID>
                  <Description>"Desired Value"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fDesiredFuel</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>61</ID>
                  <Description>"actual address &amp; value"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pFuel</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>ammo clip read Code :mov eax,[eax+10]</Description>
      <Address>01646640</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>1246640</ModuleNameOffset>
      <Before>
        <Byte>46</Byte>
        <Byte>58</Byte>
        <Byte>5E</Byte>
        <Byte>74</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>59</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>33</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo clip +- Code :mov [eax+10],edx</Description>
      <Address>016485B3</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>12485B3</ModuleNameOffset>
      <Before>
        <Byte>09</Byte>
        <Byte>8B</Byte>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>34</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>50</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>29</Byte>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo pouch read Code :mov eax,[eax+10]</Description>
      <Address>00772EE0</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>372EE0</ModuleNameOffset>
      <Before>
        <Byte>46</Byte>
        <Byte>34</Byte>
        <Byte>5E</Byte>
        <Byte>74</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>59</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>33</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>ammo pouch +- Code :mov [eax],esi</Description>
      <Address>00776B16</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>376B16</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>4A</Byte>
        <Byte>E2</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>0F</Byte>
        <Byte>8D</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>stamina +- Code :movss [eax+000000AC],xmm0</Description>
      <Address>015137EF</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>11137EF</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>80</Byte>
        <Byte>AC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>stamina read 01 Code :fld dword ptr [esi+000000AC]</Description>
      <Address>015232B9</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>11232B9</ModuleNameOffset>
      <Before>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
        <Byte>8B</Byte>
        <Byte>CF</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>86</Byte>
        <Byte>AC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>1C</Byte>
        <Byte>24</Byte>
        <Byte>E8</Byte>
        <Byte>59</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>stamina read 02 Code :fld dword ptr [ebp+000000AC]</Description>
      <Address>01525C49</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>1125C49</ModuleNameOffset>
      <Before>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
        <Byte>8B</Byte>
        <Byte>CB</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>85</Byte>
        <Byte>AC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>1C</Byte>
        <Byte>24</Byte>
        <Byte>E8</Byte>
        <Byte>C9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health +- Code :movss [ecx+000000A4],xmm0</Description>
      <Address>01521DF0</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>1121DF0</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>81</Byte>
        <Byte>A4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>before decryption Code :mov ecx,[ecx+08]</Description>
      <Address>013F3A31</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>FF3A31</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>51</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>49</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>C1</Byte>
        <Byte>8B</Byte>
        <Byte>D1</Byte>
        <Byte>81</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>after encryption Code :movss [ecx+08],xmm0</Description>
      <Address>013F3C16</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>FF3C16</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>41</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>check if proper decrypted Code :cmp [edi+StateOfDecay.exe+1539E20],eax</Description>
      <Address>014652E7</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>10652E7</ModuleNameOffset>
      <Before>
        <Byte>F8</Byte>
        <Byte>FF</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>39</Byte>
        <Byte>87</Byte>
        <Byte>20</Byte>
        <Byte>9E</Byte>
        <Byte>93</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>74</Byte>
        <Byte>0B</Byte>
        <Byte>89</Byte>
        <Byte>87</Byte>
        <Byte>20</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>melee weapon durability read Code :movzx eax,word ptr [eax+edx*2+02]</Description>
      <Address>015D97F7</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>11D97F7</ModuleNameOffset>
      <Before>
        <Byte>46</Byte>
        <Byte>14</Byte>
        <Byte>8D</Byte>
        <Byte>14</Byte>
        <Byte>7F</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>B7</Byte>
        <Byte>44</Byte>
        <Byte>50</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>melee weapon durabiliy +- Code :mov [eax+edx*2+02],cx</Description>
      <Address>015D987C</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>11D987C</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>10</Byte>
        <Byte>8D</Byte>
        <Byte>14</Byte>
        <Byte>7F</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>89</Byte>
        <Byte>4C</Byte>
        <Byte>50</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>gun durability check Code :movzx eax,word ptr [eax+edx*2+02]</Description>
      <Address>015D9367</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>11D9367</ModuleNameOffset>
      <Before>
        <Byte>46</Byte>
        <Byte>14</Byte>
        <Byte>8D</Byte>
        <Byte>14</Byte>
        <Byte>7F</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>B7</Byte>
        <Byte>44</Byte>
        <Byte>50</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>gun durabiliy +- Code :mov [eax+edx*2+02],cx</Description>
      <Address>015D946C</Address>
      <ModuleName>StateOfDecay.exe</ModuleName>
      <ModuleNameOffset>11D946C</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>10</Byte>
        <Byte>8D</Byte>
        <Byte>14</Byte>
        <Byte>7F</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>89</Byte>
        <Byte>4C</Byte>
        <Byte>50</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>healthcmpzeroAOB</Name>
      <Address>00D2900C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ongameloadAOB</Name>
      <Address>008BDBE6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somereadAOB</Name>
      <Address>00492B16</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>camerareadAOB</Name>
      <Address>00EDBDCA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somesubAOB</Name>
      <Address>00431BE3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sometimerAOB</Name>
      <Address>00492DDC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pDisruptorAmmo</Name>
      <Address>0E080104</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUpgradePts</Name>
      <Address>0E080108</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCamera</Name>
      <Address>0E08010C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bComboNoInterruption</Name>
      <Address>0E080110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bAlwaysSpecialCombo</Name>
      <Address>0E080111</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMissionTimer</Name>
      <Address>194D001D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGadgetCooldownTimer</Name>
      <Address>1E610029</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>comboresetAOB</Name>
      <Address>00430140</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bComboTakedownResetSkip</Name>
      <Address>1E62005B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>combotakedowncounteraddAOB</Name>
      <Address>00431B43</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>meleeweapondurabiliywriteAOB</Name>
      <Address>015D9869</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemvaluereadafteruseAOB</Name>
      <Address>015DDDCF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSth</Name>
      <Address>052F04E8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fSth</Name>
      <Address>052F04EC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredSth</Name>
      <Address>052F04F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockSth</Name>
      <Address>052F0549</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumSth</Name>
      <Address>052F054A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>backpacksizereadAOB</Name>
      <Address>015DDE20</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>staminareadAOB</Name>
      <Address>01531119</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoclipreadAOB</Name>
      <Address>01659A26</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammopouchreadAOB</Name>
      <Address>007735A6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>decryption1AOB</Name>
      <Address>013F4481</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>predecryptionAOB</Name>
      <Address>013F4A30</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>encryptionAOB</Name>
      <Address>013F45D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>predecryption2AOB</Name>
      <Address>013F47E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventoryread3AOB</Name>
      <Address>015E7901</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>07F90053</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoClip</Name>
      <Address>07F90057</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoPouch</Name>
      <Address>07F9005B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfAmmoPouch</Name>
      <Address>07F9005F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bUseAltEncryption</Name>
      <Address>07F90060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hlcharinfogroup1readAOB</Name>
      <Address>0151DD3B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHightlightedCharacter</Name>
      <Address>08F8001F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthwriteAOB</Name>
      <Address>0152FBE0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>humanhealthreadAOB</Name>
      <Address>01530EF8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFriendlyAll</Name>
      <Address>0B4F0056</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFriendAll</Name>
      <Address>0B4F0057</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>friendflagreadAOB</Name>
      <Address>0151E110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFriendAllV2</Name>
      <Address>0B500119</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bSetHome</Name>
      <Address>0B50011A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bSetPositiveAttitude</Name>
      <Address>0B50011B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>staminawriteAOB</Name>
      <Address>01520F5F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoclipwriteAOB</Name>
      <Address>0165B8C6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>meleeweapondurabilitywriteAOB</Name>
      <Address>015E7E49</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gundurabilityAOB</Name>
      <Address>015E7A39</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemvaluereadbeforeuseAOB</Name>
      <Address>015E861F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>radioactionscooldownwriteAOB</Name>
      <Address>0160E35F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRadioActions</Name>
      <Address>0B6D0036</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInstantCooldownRActions</Name>
      <Address>0B6D0035</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aimflagcheckzeroAOB</Name>
      <Address>016403A9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bSpecialTechniqueSlot</Name>
      <Address>0B6E0094</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bAimFlag</Name>
      <Address>0B6E0095</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventoryreadAOB</Name>
      <Address>015E7789</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventorytypereadAOB</Name>
      <Address>015E7760</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInventory</Name>
      <Address>0B6F0051</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInventoryType</Name>
      <Address>0B6F0055</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBagSize</Name>
      <Address>0B6F0059</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>checkproperdecryptAOB</Name>
      <Address>01466197</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>getrealaddresspredecryptAOB</Name>
      <Address>013F4A7A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMedicine</Name>
      <Address>04F0046B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMedicine</Name>
      <Address>04F0046F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredMedicine</Name>
      <Address>04F00473</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFood</Name>
      <Address>04F00477</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fFood</Name>
      <Address>04F0047B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredFood</Name>
      <Address>04F0047F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmunition</Name>
      <Address>04F00483</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fAmmunition</Name>
      <Address>04F00487</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredAmmunition</Name>
      <Address>04F0048B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMaterial</Name>
      <Address>04F0048F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMaterial</Name>
      <Address>04F00493</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredMaterial</Name>
      <Address>04F00497</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFuel</Name>
      <Address>04F0049B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fFuel</Name>
      <Address>04F0049F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredFuel</Name>
      <Address>04F004A3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInfluence</Name>
      <Address>04F004A7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fInfluence</Name>
      <Address>04F004AB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredInfluence</Name>
      <Address>04F004AF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBeds</Name>
      <Address>04F004B3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fBeds</Name>
      <Address>04F004B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredBeds</Name>
      <Address>04F004BB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bTypeFlag</Name>
      <Address>04F004BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockMedicine</Name>
      <Address>04F004C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumMedicine</Name>
      <Address>04F004C1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockFood</Name>
      <Address>04F004C2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumFood</Name>
      <Address>04F004C3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockAmmunition</Name>
      <Address>04F004C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumAmmunition</Name>
      <Address>04F004C5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockMaterial</Name>
      <Address>04F004C6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumMaterial</Name>
      <Address>04F004C7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockFuel</Name>
      <Address>04F004C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumFuel</Name>
      <Address>04F004C9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockInfluence</Name>
      <Address>04F004CA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumInfluence</Name>
      <Address>04F004CB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockBeds</Name>
      <Address>04F004CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumBeds</Name>
      <Address>04F004CD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>domoraledecryptionAOB</Name>
      <Address>01466149</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMorale</Name>
      <Address>07FE0162</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMorale</Name>
      <Address>07FE0166</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredMorale</Name>
      <Address>07FE016A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockMorale</Name>
      <Address>07FE016E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumMorale</Name>
      <Address>07FE016F</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?t=568361#5497487
</Comments>
</CheatTable>
