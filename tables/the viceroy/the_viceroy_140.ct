<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Unlimited Points"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(points,python32.dll,0F BF 40 * 2B C8)
points+4:
  db 90 90
registersymbol(points)

[DISABLE]
points+4:
  db 2B C8
unregistersymbol(points)

{
// ORIGINAL CODE - INJECTION POINT: "python32.dll"+9B99B

"python32.dll"+9B985: 75 10              -  jne python32.dll+9B997
"python32.dll"+9B987: 33 C0              -  xor eax,eax
"python32.dll"+9B989: 2B C8              -  sub ecx,eax
"python32.dll"+9B98B: 51                 -  push ecx
"python32.dll"+9B98C: E8 EF D2 FF FF     -  call python32.dll+98C80
"python32.dll"+9B991: 83 C4 04           -  add esp,04
"python32.dll"+9B994: 5E                 -  pop esi
"python32.dll"+9B995: 5F                 -  pop edi
"python32.dll"+9B996: C3                 -  ret 
"python32.dll"+9B997: 0F BF 40 0C        -  movsx eax,word ptr [eax+0C]
// ---------- INJECTING HERE ----------
"python32.dll"+9B99B: 2B C8              -  sub ecx,eax
"python32.dll"+9B99D: 51                 -  push ecx
"python32.dll"+9B99E: E8 DD D2 FF FF     -  call python32.dll+98C80
// ---------- DONE INJECTING  ----------
"python32.dll"+9B9A3: 83 C4 04           -  add esp,04
"python32.dll"+9B9A6: 5E                 -  pop esi
"python32.dll"+9B9A7: 5F                 -  pop edi
"python32.dll"+9B9A8: C3                 -  ret 
"python32.dll"+9B9A9: 85 C9              -  test ecx,ecx
"python32.dll"+9B9AB: 7D 2E              -  jnl python32.dll+9B9DB
"python32.dll"+9B9AD: 83 78 08 00        -  cmp dword ptr [eax+08],00
"python32.dll"+9B9B1: 7D 0B              -  jnl python32.dll+9B9BE
"python32.dll"+9B9B3: 57                 -  push edi
"python32.dll"+9B9B4: E8 87 FC FF FF     -  call python32.dll+9B640
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Find Maximum Points (don't use)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(max,python32.dll,8B 47 04 B9 00 00 00 01 85)
alloc(newmem,$1000)
alloc(max_ptr,4)

label(code)
label(return)

newmem:

code:
  mov [max_ptr],edi
  mov eax,[edi+04]
  mov ecx,01000000
  jmp return

max:
  jmp code
  nop
  nop
  nop
return:
registersymbol(max)
registersymbol(max_ptr)

[DISABLE]
max:
  db 8B 47 04 B9 00 00 00 01
unregistersymbol(max)
unregistersymbol(max_ptr)
dealloc(newmem)
dealloc(max_ptr)

{
// ORIGINAL CODE - INJECTION POINT: "python32.dll"+9B915

"python32.dll"+9B908: C3                 -  ret 
"python32.dll"+9B909: CC                 -  int 3 
"python32.dll"+9B90A: CC                 -  int 3 
"python32.dll"+9B90B: CC                 -  int 3 
"python32.dll"+9B90C: CC                 -  int 3 
"python32.dll"+9B90D: CC                 -  int 3 
"python32.dll"+9B90E: CC                 -  int 3 
"python32.dll"+9B90F: CC                 -  int 3 
"python32.dll"+9B910: 57                 -  push edi
"python32.dll"+9B911: 8B 7C 24 08        -  mov edi,[esp+08]
// ---------- INJECTING HERE ----------
"python32.dll"+9B915: 8B 47 04           -  mov eax,[edi+04]
"python32.dll"+9B918: B9 00 00 00 01     -  mov ecx,01000000
// ---------- DONE INJECTING  ----------
"python32.dll"+9B91D: 85 48 54           -  test [eax+54],ecx
"python32.dll"+9B920: 0F 84 D4 00 00 00  -  je python32.dll+9B9FA
"python32.dll"+9B926: 8B 44 24 0C        -  mov eax,[esp+0C]
"python32.dll"+9B92A: 8B 50 04           -  mov edx,[eax+04]
"python32.dll"+9B92D: 85 4A 54           -  test [edx+54],ecx
"python32.dll"+9B930: 0F 84 C4 00 00 00  -  je python32.dll+9B9FA
"python32.dll"+9B936: 8B 4F 08           -  mov ecx,[edi+08]
"python32.dll"+9B939: 8B D1              -  mov edx,ecx
"python32.dll"+9B93B: 85 C9              -  test ecx,ecx
"python32.dll"+9B93D: 7D 02              -  jnl python32.dll+9B941
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Maximum Points"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>max_ptr</Address>
          <Offsets>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Find Variables (don't use)"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(variables,python32.dll,8D 54 90 08 8B 02)
alloc(newmem,$1000)
alloc(var_ptr,4)

label(code)
label(return)

newmem:
  lea edx,[eax+edx*4+08]
  mov [var_ptr],edx
  cmp edx,30AD0F2C
  jne code
  nop
code:
  mov eax,[edx]
  jmp return

variables:
  jmp newmem
  nop
return:
registersymbol(variables)
registersymbol(var_ptr)

[DISABLE]
variables:
  db 8D 54 90 08 8B 02
unregistersymbol(variables)
unregistersymbol(var_ptr)
dealloc(newmem)
dealloc(var_ptr)

{
// ORIGINAL CODE - INJECTION POINT: "python32.dll"+8AFCA

"python32.dll"+8AFB4: C3                    -  ret 
"python32.dll"+8AFB5: 8B 4F 10              -  mov ecx,[edi+10]
"python32.dll"+8AFB8: 53                    -  push ebx
"python32.dll"+8AFB9: 8B 5E 10              -  mov ebx,[esi+10]
"python32.dll"+8AFBC: 85 C9                 -  test ecx,ecx
"python32.dll"+8AFBE: 7C 2F                 -  jnge python32.dll+8AFEF
"python32.dll"+8AFC0: 3B CB                 -  cmp ecx,ebx
"python32.dll"+8AFC2: 7F 2B                 -  jg python32.dll+8AFEF
"python32.dll"+8AFC4: 8B 46 14              -  mov eax,[esi+14]
"python32.dll"+8AFC7: 8D 14 49              -  lea edx,[ecx+ecx*2]
// ---------- INJECTING HERE ----------
"python32.dll"+8AFCA: 8D 54 90 08           -  lea edx,[eax+edx*4+08]
"python32.dll"+8AFCE: 8B 02                 -  mov eax,[edx]
// ---------- DONE INJECTING  ----------
"python32.dll"+8AFD0: 85 C0                 -  test eax,eax
"python32.dll"+8AFD2: 75 0E                 -  jne python32.dll+8AFE2
"python32.dll"+8AFD4: 41                    -  inc ecx
"python32.dll"+8AFD5: 83 C2 0C              -  add edx,0C
"python32.dll"+8AFD8: 3B CB                 -  cmp ecx,ebx
"python32.dll"+8AFDA: 7F 13                 -  jg python32.dll+8AFEF
"python32.dll"+8AFDC: 8B 02                 -  mov eax,[edx]
"python32.dll"+8AFDE: 85 C0                 -  test eax,eax
"python32.dll"+8AFE0: 74 F2                 -  je python32.dll+8AFD4
"python32.dll"+8AFE2: FF 4F 18              -  dec [edi+18]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address>1E089071</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>max</Name>
      <Address>1E09B915</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
