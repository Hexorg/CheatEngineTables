<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>82</ID>
      <Description>"Health"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 
  Date   : 2015-11-21
  Author : Schnitzelmaker

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HEALTH,SC2_x64.exe,89 B5 98 01 00 00 89 8C) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+593C3D)

label(code)
label(return)

newmem:
  mov esi,0
code:
  mov [rbp+00000198],esi
  jmp return

HEALTH:
  jmp newmem
  nop
return:
registersymbol(HEALTH)

[DISABLE]

HEALTH:
  db 89 B5 98 01 00 00

unregistersymbol(HEALTH)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+593C3D

"SC2_x64.exe"+593C15: 48 8D 8C 24 D0 00 00 00  -  lea rcx,[rsp+000000D0]
"SC2_x64.exe"+593C1D: EB 16                    -  jmp SC2_x64.exe+593C35
"SC2_x64.exe"+593C1F: 48 8D 8C 24 D8 00 00 00  -  lea rcx,[rsp+000000D8]
"SC2_x64.exe"+593C27: 48 8D 94 24 E0 00 00 00  -  lea rdx,[rsp+000000E0]
"SC2_x64.exe"+593C2F: 3B C7                    -  cmp eax,edi
"SC2_x64.exe"+593C31: 48 0F 4E CA              -  cmovle rcx,rdx
"SC2_x64.exe"+593C35: 8B F7                    -  mov esi,edi
"SC2_x64.exe"+593C37: 2B 31                    -  sub esi,[rcx]
"SC2_x64.exe"+593C39: 8B CF                    -  mov ecx,edi
"SC2_x64.exe"+593C3B: 2B C8                    -  sub ecx,eax
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+593C3D: 89 B5 98 01 00 00        -  mov [rbp+00000198],esi
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+593C43: 89 8C 24 88 00 00 00     -  mov [rsp+00000088],ecx
"SC2_x64.exe"+593C4A: 3B F3                    -  cmp esi,ebx
"SC2_x64.exe"+593C4C: 74 24                    -  je SC2_x64.exe+593C72
"SC2_x64.exe"+593C4E: 8B D3                    -  mov edx,ebx
"SC2_x64.exe"+593C50: C6 44 24 30 01           -  mov byte ptr [rsp+30],01
"SC2_x64.exe"+593C55: 44 8B CF                 -  mov r9d,edi
"SC2_x64.exe"+593C58: 44 8B C3                 -  mov r8d,ebx
"SC2_x64.exe"+593C5B: 48 8B CD                 -  mov rcx,rbp
"SC2_x64.exe"+593C5E: 2B D6                    -  sub edx,esi
"SC2_x64.exe"+593C60: C7 44 24 28 01 00 00 00  -  mov [rsp+28],00000001
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>79</ID>
      <Description>"Shield"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 
  Date   : 2015-11-21
  Author : Schnitzelmaker

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SHIELD,SC2_x64.exe,89 86 9C 01 00 00 3B) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+592CC7)

label(code)
label(return)

newmem:
  mov eax, 0
code:
  mov [rsi+0000019C],eax
  jmp return

SHIELD:
  jmp newmem
  nop
return:
registersymbol(SHIELD)

[DISABLE]

SHIELD:
  db 89 86 9C 01 00 00

unregistersymbol(SHIELD)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+592CC7

"SC2_x64.exe"+592CA3: 85 FF                    -  test edi,edi
"SC2_x64.exe"+592CA5: 79 07                    -  jns SC2_x64.exe+592CAE
"SC2_x64.exe"+592CA7: 48 8D 4C 24 70           -  lea rcx,[rsp+70]
"SC2_x64.exe"+592CAC: EB 14                    -  jmp SC2_x64.exe+592CC2
"SC2_x64.exe"+592CAE: 48 8D 4C 24 78           -  lea rcx,[rsp+78]
"SC2_x64.exe"+592CB3: 48 8D 84 24 80 00 00 00  -  lea rax,[rsp+00000080]
"SC2_x64.exe"+592CBB: 41 3B F9                 -  cmp edi,r9d
"SC2_x64.exe"+592CBE: 48 0F 4E C8              -  cmovle rcx,rax
"SC2_x64.exe"+592CC2: 41 8B C1                 -  mov eax,r9d
"SC2_x64.exe"+592CC5: 2B 01                    -  sub eax,[rcx]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+592CC7: 89 86 9C 01 00 00        -  mov [rsi+0000019C],eax
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+592CCD: 3B C3                    -  cmp eax,ebx
"SC2_x64.exe"+592CCF: 74 24                    -  je SC2_x64.exe+592CF5
"SC2_x64.exe"+592CD1: 8B D3                    -  mov edx,ebx
"SC2_x64.exe"+592CD3: C6 44 24 30 01           -  mov byte ptr [rsp+30],01
"SC2_x64.exe"+592CD8: 44 8B C3                 -  mov r8d,ebx
"SC2_x64.exe"+592CDB: 48 8B CE                 -  mov rcx,rsi
"SC2_x64.exe"+592CDE: 2B D0                    -  sub edx,eax
"SC2_x64.exe"+592CE0: C7 44 24 28 09 00 00 00  -  mov [rsp+28],00000009
"SC2_x64.exe"+592CE8: C7 44 24 20 08 00 00 00  -  mov [rsp+20],00000008
"SC2_x64.exe"+592CF0: E8 FB E8 FF FF           -  call SC2_x64.exe+5915F0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Mineral"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>"SC2_x64.exe"+0206F9F8</Address>
      <Offsets>
        <Offset>958</Offset>
        <Offset>0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Gas"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>"SC2_x64.exe"+0206F9F8</Address>
      <Offsets>
        <Offset>960</Offset>
        <Offset>0</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov [rbp+000001A0],ebx</Description>
      <Address>7FF70D3F209E</Address>
      <ModuleName>SC2_x64.exe</ModuleName>
      <ModuleNameOffset>59209E</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>4E</Byte>
        <Byte>CA</Byte>
        <Byte>8B</Byte>
        <Byte>19</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>9D</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>DF</Byte>
        <Byte>74</Byte>
        <Byte>74</Byte>
        <Byte>2B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :add [rbx+r9*8+00000620],rcx</Description>
      <Address>7FF70D30FAF6</Address>
      <ModuleName>SC2_x64.exe</ModuleName>
      <ModuleNameOffset>4AFAF6</ModuleNameOffset>
      <Before>
        <Byte>4F</Byte>
        <Byte>C2</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>C8</Byte>
      </Before>
      <Actual>
        <Byte>4A</Byte>
        <Byte>01</Byte>
        <Byte>8C</Byte>
        <Byte>CB</Byte>
        <Byte>20</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>4A</Byte>
        <Byte>39</Byte>
        <Byte>AC</Byte>
        <Byte>CB</Byte>
        <Byte>20</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :add [rax+r10*8],rdx</Description>
      <Address>7FF70D1CBF59</Address>
      <ModuleName>SC2_x64.exe</ModuleName>
      <ModuleNameOffset>36BF59</ModuleNameOffset>
      <Before>
        <Byte>81</Byte>
        <Byte>E8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>4A</Byte>
        <Byte>01</Byte>
        <Byte>14</Byte>
        <Byte>D0</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>8B</Byte>
        <Byte>0D</Byte>
        <Byte>1C</Byte>
        <Byte>EB</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [rsi+0000019C],eax</Description>
      <Address>7FF70D3F490C</Address>
      <ModuleName>SC2_x64.exe</ModuleName>
      <ModuleNameOffset>59490C</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>8B</Byte>
        <Byte>C1</Byte>
        <Byte>2B</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>9C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>41</Byte>
        <Byte>3B</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>22</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [rsi+0000019C],eax</Description>
      <Address>7FF70D3F2CC7</Address>
      <ModuleName>SC2_x64.exe</ModuleName>
      <ModuleNameOffset>592CC7</ModuleNameOffset>
      <Before>
        <Byte>41</Byte>
        <Byte>8B</Byte>
        <Byte>C1</Byte>
        <Byte>2B</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>86</Byte>
        <Byte>9C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>3B</Byte>
        <Byte>C3</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [rbp+00000198],esi</Description>
      <Address>7FF70D3F3C3D</Address>
      <ModuleName>SC2_x64.exe</ModuleName>
      <ModuleNameOffset>593C3D</ModuleNameOffset>
      <Before>
        <Byte>31</Byte>
        <Byte>8B</Byte>
        <Byte>CF</Byte>
        <Byte>2B</Byte>
        <Byte>C8</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>B5</Byte>
        <Byte>98</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>8C</Byte>
        <Byte>24</Byte>
        <Byte>88</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>HEALTH</Name>
      <Address> 7FF7F28C3C3D</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
