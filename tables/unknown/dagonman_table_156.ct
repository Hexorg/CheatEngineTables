<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>54</ID>
      <Description>"✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000080</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>52</ID>
      <Description>"   Unlimited Jumps"</Description>
      <LastState/>
      <Color>353535</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(UnlimitedJumps,0F 84 8A 01 00 00 48 8B 46)
registersymbol(UnlimitedJumps)

UnlimitedJumps:
  db 90 90 90 90 90 90

[DISABLE]

UnlimitedJumps:
  db 0F 84 8A 01 00 00

unregistersymbol(UnlimitedJumps)

{
// ORIGINAL CODE - INJECTION POINT: 0645D193

""+645D16B: 0F 85 12 00 00 00              -  jne rbPhysics:RBMover+403
""+645D171: 0F B6 86 99 00 00 00           -  movzx eax,byte ptr [rsi+00000099]
""+645D178: 85 C0                          -  test eax,eax
""+645D17A: 75 07                          -  jne rbPhysics:RBMover+403
""+645D17C: C6 86 99 00 00 00 01           -  mov byte ptr [rsi+00000099],01
""+645D183: 48 8B 46 60                    -  mov rax,[rsi+60]
""+645D187: 48 8B C8                       -  mov rcx,rax
""+645D18A: 83 39 00                       -  cmp dword ptr [rcx],00
""+645D18D: 0F B6 40 40                    -  movzx eax,byte ptr [rax+40]
""+645D191: 85 C0                          -  test eax,eax
// ---------- INJECTING HERE ----------
""+645D193: 0F 84 8A 01 00 00              -  je rbPhysics:RBMover+5a3
// ---------- DONE INJECTING  ----------
""+645D199: 48 8B 46 58                    -  mov rax,[rsi+58]
""+645D19D: 48 8B C8                       -  mov rcx,rax
""+645D1A0: 48 83 EC 20                    -  sub rsp,20
""+645D1A4: 83 38 00                       -  cmp dword ptr [rax],00
""+645D1A7: 49 BB B0 68 43 06 00 00 00 00  -  mov r11,PlayerInputs:GetButtonADown
""+645D1B1: 41 FF D3                       -  call r11
""+645D1B4: 48 83 C4 20                    -  add rsp,20
""+645D1B8: 85 C0                          -  test eax,eax
""+645D1BA: 0F 84 63 01 00 00              -  je rbPhysics:RBMover+5a3
""+645D1C0: 0F B6 86 99 00 00 00           -  movzx eax,byte ptr [rsi+00000099]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>51</ID>
      <Description>"   Hold Space For Re-jump"</Description>
      <LastState/>
      <Color>353535</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(HoldJump,C6 86 99 00 00 00 00 48)
registersymbol(HoldJump)

HoldJump+6:
  db 01

[DISABLE]

HoldJump+6:
  db 00

unregistersymbol(HoldJump)

{
// ORIGINAL CODE - INJECTION POINT: 0645D1DE

""+645D1B1: 41 FF D3                       -  call r11
""+645D1B4: 48 83 C4 20                    -  add rsp,20
""+645D1B8: 85 C0                          -  test eax,eax
""+645D1BA: 0F 84 63 01 00 00              -  je rbPhysics:RBMover+5a3
""+645D1C0: 0F B6 86 99 00 00 00           -  movzx eax,byte ptr [rsi+00000099]
""+645D1C7: 85 C0                          -  test eax,eax
""+645D1C9: 0F 84 54 01 00 00              -  je rbPhysics:RBMover+5a3
""+645D1CF: 0F B6 86 B8 00 00 00           -  movzx eax,byte ptr [rsi+000000B8]
""+645D1D6: 85 C0                          -  test eax,eax
""+645D1D8: 0F 84 45 01 00 00              -  je rbPhysics:RBMover+5a3
// ---------- INJECTING HERE ----------
""+645D1DE: C6 86 99 00 00 00 00           -  mov byte ptr [rsi+00000099],00
// ---------- DONE INJECTING  ----------
""+645D1E5: 48 8B 46 50                    -  mov rax,[rsi+50]
""+645D1E9: 48 89 85 C8 FE FF FF           -  mov [rbp-00000138],rax
""+645D1F0: F3 0F 10 85 E8 FE FF FF        -  movss xmm0,[rbp-00000118]
""+645D1F8: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+645D1FC: F2 0F 11 85 C0 FE FF FF        -  movsd [rbp-00000140],xmm0
""+645D204: 48 8B CE                       -  mov rcx,rsi
""+645D207: 48 83 EC 20                    -  sub rsp,20
""+645D20B: 49 BB D0 E5 45 06 00 00 00 00  -  mov r11,rbPhysics:CalculateJumpVerticalSpeed
""+645D215: 41 FF D3                       -  call r11
""+645D218: 48 83 C4 20                    -  add rsp,20
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>53</ID>
      <Description>"✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000080</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"   Activate To Change Manually Movement Values"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>353535</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(MovementHost,FE FF FF F3 0F 10 86 8C 00 00 00)
alloc(newmem,$100,MovementHost)
globalalloc(MovementValues,8)
label(return)

newmem:
  mov [MovementValues],rsi
  movss xmm0,[rsi+0000008C]
  jmp return

MovementHost+03:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(MovementHost)

[DISABLE]

MovementHost+03:
  db F3 0F 10 86 8C 00 00 00

unregistersymbol(MovementHost)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0645D33A

""+645D307: 48 83 C4 20                    -  add rsp,20
""+645D30B: 48 8B CE                       -  mov rcx,rsi
""+645D30E: 48 83 EC 20                    -  sub rsp,20
""+645D312: 49 BB 60 EF 45 06 00 00 00 00  -  mov r11,rbPhysics:Jump
""+645D31C: 41 FF D3                       -  call r11
""+645D31F: 48 83 C4 20                    -  add rsp,20
""+645D323: 48 8B 46 50                    -  mov rax,[rsi+50]
""+645D327: 48 89 85 C8 FE FF FF           -  mov [rbp-00000138],rax
""+645D32E: 66 0F 57 C0                    -  xorpd xmm0,xmm0
""+645D332: F2 0F 11 85 C0 FE FF FF        -  movsd [rbp-00000140],xmm0
// ---------- INJECTING HERE ----------
""+645D33A: F3 0F 10 86 8C 00 00 00        -  movss xmm0,[rsi+0000008C]
// ---------- DONE INJECTING  ----------
""+645D342: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+645D346: 66 0F 57 05 02 01 00 00        -  xorpd xmm0,[rbPhysics:RBMover+6d0]
""+645D34E: F2 0F 11 85 B8 FE FF FF        -  movsd [rbp-00000148],xmm0
""+645D356: 48 8B 46 50                    -  mov rax,[rsi+50]
""+645D35A: 48 8B C8                       -  mov rcx,rax
""+645D35D: 48 83 EC 20                    -  sub rsp,20
""+645D361: 83 38 00                       -  cmp dword ptr [rax],00
""+645D364: 49 BB 60 D7 45 06 00 00 00 00  -  mov r11,UnityEngine:Rigidbody2D:get_mass
""+645D36E: 41 FF D3                       -  call r11
""+645D371: 48 83 C4 20                    -  add rsp,20
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Move Speed"</Description>
          <Color>353535</Color>
          <VariableType>Float</VariableType>
          <Address>MovementValues</Address>
          <Offsets>
            <Offset>88</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Gravity"</Description>
          <Color>353535</Color>
          <VariableType>Float</VariableType>
          <Address>MovementValues</Address>
          <Offsets>
            <Offset>8c</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Jump Height"</Description>
          <Color>353535</Color>
          <VariableType>Float</VariableType>
          <Address>MovementValues</Address>
          <Offsets>
            <Offset>94</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>55</ID>
      <Description>"✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000080</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
