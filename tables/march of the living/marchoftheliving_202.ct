<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>23</ID>
      <Description>"NoReload/InfBullets"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscan(Bullets,89 48 3C 83 EC 0C 57) // should be unique
alloc(newmem,$1000)


label(code)
label(return)

newmem:

code:
  mov ecx, [eax+40]
  mov [eax+3c],ecx
  sub esp,0C
  jmp return

Bullets:
  jmp code
  nop
return:
registersymbol(Bullets)

[DISABLE]

Bullets:
  db 89 48 3C 83 EC 0C

unregistersymbol(Bullets)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0655713C

06557120: 83 C4 10           -  add esp,10
06557123: 8B 47 64           -  mov eax,[edi+64]
06557126: 8B 40 08           -  mov eax,[eax+08]
06557129: 83 EC 08           -  sub esp,08
0655712C: 50                 -  push eax
0655712D: 57                 -  push edi
0655712E: E8 C5 D7 01 00     -  call 065748F8
06557133: 83 C4 10           -  add esp,10
06557136: 8B 4F 64           -  mov ecx,[edi+64]
06557139: 8B 49 3C           -  mov ecx,[ecx+3C]
// ---------- INJECTING HERE ----------
0655713C: 89 48 3C           -  mov [eax+3C],ecx
0655713F: 83 EC 0C           -  sub esp,0C
// ---------- DONE INJECTING  ----------
06557142: 57                 -  push edi
06557143: E8 20 E3 FE FF     -  call 06545468
06557148: 83 C4 10           -  add esp,10
0655714B: 85 C0              -  test eax,eax
0655714D: 0F 84 6C 01 00 00  -  je 065572BF
06557153: 85 F6              -  test esi,esi
06557155: 0F 84 64 01 00 00  -  je 065572BF
0655715B: 8B 47 64           -  mov eax,[edi+64]
0655715E: 8B 40 24           -  mov eax,[eax+24]
06557161: 89 85 F4 FE FF FF  -  mov [ebp-0000010C],eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Hunger"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscan(Hunger,C1 D9 9F 88 00 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fsub st(0), st(0)
  fstp dword ptr [edi+00000088]
  jmp return

Hunger+01:
  jmp code
  nop
return:
registersymbol(Hunger)

[DISABLE]

Hunger+01:
  db D9 9F 88 00 00 00

unregistersymbol(Hunger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0655250C

065524EC: D9 45 0C           -  fld dword ptr [ebp+0C]
065524EF: D9 45 F8           -  fld dword ptr [ebp-08]
065524F2: D9 05 68 5F 1B 0E  -  fld dword ptr [0E1B5F68]
065524F8: DE F9              -  fdivp st(1),st(0)
065524FA: DE C9              -  fmulp st(1),st(0)
065524FC: DE C1              -  faddp 
065524FE: D9 5D 0C           -  fstp dword ptr [ebp+0C]
06552501: D9 87 88 00 00 00  -  fld dword ptr [edi+00000088]
06552507: D9 45 0C           -  fld dword ptr [ebp+0C]
0655250A: DE C1              -  faddp 
// ---------- INJECTING HERE ----------
0655250C: D9 9F 88 00 00 00  -  fstp dword ptr [edi+00000088]
// ---------- DONE INJECTING  ----------
06552512: D9 87 88 00 00 00  -  fld dword ptr [edi+00000088]
06552518: D9 05 70 5F 1B 0E  -  fld dword ptr [0E1B5F70]
0655251E: DF F1              -  fcomip st(0),st(1)
06552520: DD D8              -  fstp st(0)
06552522: 7A 1E              -  jp 06552542
06552524: 77 1C              -  ja 06552542
06552526: 8B 47 38           -  mov eax,[edi+38]
06552529: 8B 80 80 00 00 00  -  mov eax,[eax+00000080]
0655252F: 83 EC 08           -  sub esp,08
06552532: 68 60 D5 23 12     -  push 1223D560
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"AA_Speed"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscan(AAHACK,D9 87 C4 00 00 00 D9 05) // should be unique
alloc(newmem,$1000)
alloc(FireCode, 4)

label(code)
label(return)

FireCode:
dd (float)100

newmem:

code:
  fld dword ptr [FireCode]
  jmp return

AAHACK:
  jmp code
  nop
return:
registersymbol(AAHACK)

[DISABLE]

AAHACK:
  db D9 87 C4 00 00 00

unregistersymbol(AAHACK)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 06526066

06526049: 57                    -  push edi
0652604A: 51                    -  push ecx
0652604B: 50                    -  push eax
0652604C: 39 00                 -  cmp [eax],eax
0652604E: E8 6D 66 02 00        -  call 0654C6C0
06526053: 83 C4 20              -  add esp,20
06526056: DD 85 A8 FE FF FF     -  fld qword ptr [ebp-00000158]
0652605C: D9 C9                 -  fxch st(1)
0652605E: DE C1                 -  faddp 
06526060: D9 9F C4 00 00 00     -  fstp dword ptr [edi+000000C4]
// ---------- INJECTING HERE ----------
06526066: D9 87 C4 00 00 00     -  fld dword ptr [edi+000000C4]
// ---------- DONE INJECTING  ----------
0652606C: D9 05 58 10 0D 0E     -  fld dword ptr [0E0D1058]
06526072: DF F1                 -  fcomip st(0),st(1)
06526074: DD D8                 -  fstp st(0)
06526076: 0F 8A A8 02 00 00     -  jp 06526324
0652607C: 0F 87 A2 02 00 00     -  ja 06526324
06526082: D9 EE                 -  fldz 
06526084: D9 9F C4 00 00 00     -  fstp dword ptr [edi+000000C4]
0652608A: C6 87 C8 00 00 00 01  -  mov byte ptr [edi+000000C8],01
06526091: E9 8E 02 00 00        -  jmp 06526324
06526096: 8B 47 58              -  mov eax,[edi+58]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Fatigue"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscan(fatigue,C1 D9 9F 8C 00 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fsub st(0),st(0)
  fstp dword ptr [edi+0000008C]
  jmp return

fatigue+01:
  jmp code
  nop
return:
registersymbol(fatigue)

[DISABLE]

fatigue+01:
  db D9 9F 8C 00 00 00

unregistersymbol(fatigue)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 06551F4E

06551F29: 73 18              -  jae 06551F43
06551F2B: 83 EC 0C           -  sub esp,0C
06551F2E: 68 08 E2 67 27     -  push 2767E208
06551F33: E8 9C 21 FF FF     -  call 065440D4
06551F38: 83 C4 10           -  add esp,10
06551F3B: D9 9F 8C 00 00 00  -  fstp dword ptr [edi+0000008C]
06551F41: EB 11              -  jmp 06551F54
06551F43: D9 87 8C 00 00 00  -  fld dword ptr [edi+0000008C]
06551F49: D9 45 0C           -  fld dword ptr [ebp+0C]
06551F4C: DE C1              -  faddp 
// ---------- INJECTING HERE ----------
06551F4E: D9 9F 8C 00 00 00  -  fstp dword ptr [edi+0000008C]
// ---------- DONE INJECTING  ----------
06551F54: D9 87 8C 00 00 00  -  fld dword ptr [edi+0000008C]
06551F5A: DD 5D F0           -  fstp qword ptr [ebp-10]
06551F5D: 8B 05 A4 3D 03 06  -  mov eax,[06033DA4]
06551F63: 83 EC 08           -  sub esp,08
06551F66: 6A 00              -  push 00
06551F68: 50                 -  push eax
06551F69: 39 00              -  cmp [eax],eax
06551F6B: E8 E8 24 F6 FF     -  call 064B4458
06551F70: 83 C4 10           -  add esp,10
06551F73: DD 45 F0           -  fld qword ptr [ebp-10]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Health"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscan(Health,89 47 68 EB 1C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax, (int)10
  mov [edi+68],eax
  jmp 06581825
  jmp return

Health:
  jmp code
return:
registersymbol(Health)

[DISABLE]

Health:
  db 89 47 68 EB 1C

unregistersymbol(Health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 06581804

065817EA: 83 EC 08        -  sub esp,08
065817ED: 6A 00           -  push 00
065817EF: 50              -  push eax
065817F0: E8 F3 31 F4 FF  -  call 064C49E8
065817F5: 83 C4 10        -  add esp,10
065817F8: 85 C0           -  test eax,eax
065817FA: 74 0D           -  je 06581809
065817FC: 8B 47 68        -  mov eax,[edi+68]
065817FF: 8B 4D 0C        -  mov ecx,[ebp+0C]
06581802: 2B C1           -  sub eax,ecx
// ---------- INJECTING HERE ----------
06581804: 89 47 68        -  mov [edi+68],eax
06581807: EB 1C           -  jmp 06581825
// ---------- DONE INJECTING  ----------
06581809: 8B 47 68        -  mov eax,[edi+68]
0658180C: 8B 4D 0C        -  mov ecx,[ebp+0C]
0658180F: 2B C1           -  sub eax,ecx
06581811: 89 47 68        -  mov [edi+68],eax
06581814: 8B 47 40        -  mov eax,[edi+40]
06581817: 83 EC 0C        -  sub esp,0C
0658181A: 50              -  push eax
0658181B: 39 00           -  cmp [eax],eax
0658181D: E8 AE 02 00 00  -  call 06581AD0
06581822: 83 C4 10        -  add esp,10
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Growls"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>
[ENABLE]

aobscan(Growls,FF FF DD 45 A0 DD 45 98 D9 C9 D9 CA DE C9 DE C1 D9 9F 6C 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fsub st(0), st(0)
  fstp dword ptr [edi+0000016C]
  jmp return

Growls+10:
  jmp code
  nop
return:
registersymbol(Growls)

[DISABLE]

Growls+10:
  db D9 9F 6C 01 00 00

unregistersymbol(Growls)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 06562C45

06562C27: D9 87 68 01 00 00     -  fld dword ptr [edi+00000168]
06562C2D: DE C9                 -  fmulp st(1),st(0)
06562C2F: DD 5D 98              -  fstp qword ptr [ebp-68]
06562C32: E8 21 46 FF FF        -  call 06557258
06562C37: DD 45 A0              -  fld qword ptr [ebp-60]
06562C3A: DD 45 98              -  fld qword ptr [ebp-68]
06562C3D: D9 C9                 -  fxch st(1)
06562C3F: D9 CA                 -  fxch st(2)
06562C41: DE C9                 -  fmulp st(1),st(0)
06562C43: DE C1                 -  faddp 
// ---------- INJECTING HERE ----------
06562C45: D9 9F 6C 01 00 00     -  fstp dword ptr [edi+0000016C]
// ---------- DONE INJECTING  ----------
06562C4B: D9 87 6C 01 00 00     -  fld dword ptr [edi+0000016C]
06562C51: D9 05 C8 FF 14 0E     -  fld dword ptr [0E14FFC8]
06562C57: DF F1                 -  fcomip st(0),st(1)
06562C59: DD D8                 -  fstp st(0)
06562C5B: 7A 0E                 -  jp 06562C6B
06562C5D: 77 0C                 -  ja 06562C6B
06562C5F: D9 05 D0 FF 14 0E     -  fld dword ptr [0E14FFD0]
06562C65: D9 9F 6C 01 00 00     -  fstp dword ptr [edi+0000016C]
06562C6B: 8B 87 E8 00 00 00     -  mov eax,[edi+000000E8]
06562C71: 83 EC 0C              -  sub esp,0C
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>FATIGUE :fstp dword ptr [edi+0000008C]</Description>
      <Address>06551F4E</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>D9</Byte>
        <Byte>45</Byte>
        <Byte>0C</Byte>
        <Byte>DE</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>8C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>HUNGER:fstp dword ptr [edi+00000088]</Description>
      <Address>0655250C</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>D9</Byte>
        <Byte>45</Byte>
        <Byte>0C</Byte>
        <Byte>DE</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>88</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>88</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Zombi Bite :mov [edi+68],eax</Description>
      <Address>06582504</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>0C</Byte>
        <Byte>2B</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>68</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>1C</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>68</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Bullets:mov [eax],ecx</Description>
      <Address>06575B8D</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>B8</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>30</Byte>
        <Byte>40</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Bullets 2:mov [eax+3C],ecx</Description>
      <Address>0655713C</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>4F</Byte>
        <Byte>64</Byte>
        <Byte>8B</Byte>
        <Byte>49</Byte>
        <Byte>3C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>3C</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>0C</Byte>
        <Byte>57</Byte>
        <Byte>E8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Growls :fstp dword ptr [edi+0000016C]</Description>
      <Address>06562C10</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>CA</Byte>
        <Byte>DE</Byte>
        <Byte>C9</Byte>
        <Byte>DE</Byte>
        <Byte>E9</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>9F</Byte>
        <Byte>6C</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>33</Byte>
        <Byte>D9</Byte>
        <Byte>87</Byte>
        <Byte>6C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Attack Rate :fld dword ptr [eax+000000C4]</Description>
      <Address>06579EDA</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>74</Byte>
        <Byte>0E</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>3C</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>80</Byte>
        <Byte>C4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E9</Byte>
        <Byte>3C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Food</Name>
      <Address>06547905</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Health</Name>
      <Address>06580DB4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Growls</Name>
      <Address>06562C35</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AAcheck</Name>
      <Address>06596072</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Bullets</Name>
      <Address>065A5669</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Hunger</Name>
      <Address>065A180B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>AAHACK</Name>
      <Address>065A428E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fatigue</Name>
      <Address>065A124D</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Structures StructVersion="2">
    <Structure Name="unnamed structure" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="28" Vartype="Pointer" Bytesize="4" Description=" " DisplayMethod="Unsigned Integer" BackgroundColor="80000005">
          <Structure Name="Autocreated from 1414F2F8" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="8" Vartype="4 Bytes" Bytesize="4" Description="Idenifier" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
              <Element Offset="12" Vartype="Unicode String" Bytesize="45" Description="Identifier" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="100" Vartype="4 Bytes" Bytesize="4" Description="Max Hp" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="104" Vartype="4 Bytes" Bytesize="4" Description="Current HP" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="108" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="112" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="116" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="120" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="124" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
        <Element Offset="128" Vartype="4 Bytes" Bytesize="4" Description="Highlighted" DisplayMethod="Unsigned Integer" BackgroundColor="80000005"/>
      </Elements>
    </Structure>
  </Structures>
</CheatTable>
