<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Unlimited Resources"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Resourcess,RoR_NG.exe,FF 8B 44 24 08 3B C6 5E 74 0E 8B 48 14 8B 54 24 08) // should be unique
alloc(newmem,$1000)
label(return)

newmem:

  mov ecx,[eax+14]
  mov [eax+14],(int)666 //Change 666 if need to increase/decrease resources.
  mov edx,[esp+08]
  jmp return

Resourcess+0A:
  jmp newmem
  nop
  nop
return:
registersymbol(Resourcess)

[DISABLE]

Resourcess+0A:
  db 8B 48 14 8B 54 24 08

unregistersymbol(Resourcess)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RoR_NG.exe"+B4C5B
FF 8B 44 24 08 3B C6 5E 74 0E 8B 48 14 8B 54 24 08
"RoR_NG.exe"+B4C40: 8B 44 24 04     -  mov eax,[esp+04]
"RoR_NG.exe"+B4C44: 56              -  push esi
"RoR_NG.exe"+B4C45: 50              -  push eax
"RoR_NG.exe"+B4C46: 8D 71 04        -  lea esi,[ecx+04]
"RoR_NG.exe"+B4C49: 8D 44 24 0C     -  lea eax,[esp+0C]
"RoR_NG.exe"+B4C4D: E8 0E 3E FD FF  -  call RoR_NG.exe+88A60
"RoR_NG.exe"+B4C52: 8B 44 24 08     -  mov eax,[esp+08]
"RoR_NG.exe"+B4C56: 3B C6           -  cmp eax,esi
"RoR_NG.exe"+B4C58: 5E              -  pop esi
"RoR_NG.exe"+B4C59: 74 0E           -  je RoR_NG.exe+B4C69
// ---------- INJECTING HERE ----------
"RoR_NG.exe"+B4C5B: 8B 48 14        -  mov ecx,[eax+14]
"RoR_NG.exe"+B4C5E: 8B 54 24 08     -  mov edx,[esp+08]
// ---------- DONE INJECTING  ----------
"RoR_NG.exe"+B4C62: 89 0A           -  mov [edx],ecx
"RoR_NG.exe"+B4C64: B0 01           -  mov al,01
"RoR_NG.exe"+B4C66: C2 08 00        -  ret 0008
"RoR_NG.exe"+B4C69: 32 C0           -  xor al,al
"RoR_NG.exe"+B4C6B: C2 08 00        -  ret 0008
"RoR_NG.exe"+B4C6E: CC              -  int 3
"RoR_NG.exe"+B4C6F: CC              -  int 3
"RoR_NG.exe"+B4C70: 8B 44 24 04     -  mov eax,[esp+04]
"RoR_NG.exe"+B4C74: 56              -  push esi
"RoR_NG.exe"+B4C75: 50              -  push eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Unlimited Time"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Time,RoR_NG.exe,29 0F 8D 73 10)
alloc(newmem,$1000)
label(return)

newmem:
  sub [edi],ecx
  mov [edi],98967F
  lea esi,[ebx+10]
  jmp return

Time:
  jmp newmem
return:
registersymbol(Time)

[DISABLE]

Time:
  db 29 0F 8D 73 10

unregistersymbol(Time)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RoR_NG.exe"+A818B

"RoR_NG.exe"+A816F: FF D0              -  call eax
"RoR_NG.exe"+A8171: 83 F8 01           -  cmp eax,01
"RoR_NG.exe"+A8174: 75 12              -  jne RoR_NG.exe+A8188
"RoR_NG.exe"+A8176: 8B 4B 0C           -  mov ecx,[ebx+0C]
"RoR_NG.exe"+A8179: 8B 11              -  mov edx,[ecx]
"RoR_NG.exe"+A817B: 8B 02              -  mov eax,[edx]
"RoR_NG.exe"+A817D: FF D0              -  call eax
"RoR_NG.exe"+A817F: 83 F8 01           -  cmp eax,01
"RoR_NG.exe"+A8182: 0F 84 8A 03 00 00  -  je RoR_NG.exe+A8512
"RoR_NG.exe"+A8188: 8B 4D 08           -  mov ecx,[ebp+08]
// ---------- INJECTING HERE ----------
"RoR_NG.exe"+A818B: 29 0F              -  sub [edi],ecx
"RoR_NG.exe"+A818D: 8D 73 10           -  lea esi,[ebx+10]
// ---------- DONE INJECTING  ----------
"RoR_NG.exe"+A8190: 56                 -  push esi
"RoR_NG.exe"+A8191: E8 9A EF F6 FF     -  call RoR_NG.exe+17130
"RoR_NG.exe"+A8196: 8B 0F              -  mov ecx,[edi]
"RoR_NG.exe"+A8198: 8B 10              -  mov edx,[eax]
"RoR_NG.exe"+A819A: 8B 52 58           -  mov edx,[edx+58]
"RoR_NG.exe"+A819D: 51                 -  push ecx
"RoR_NG.exe"+A819E: 8B C8              -  mov ecx,eax
"RoR_NG.exe"+A81A0: FF D2              -  call edx
"RoR_NG.exe"+A81A2: DB 43 30           -  fild dword ptr [ebx+30]
"RoR_NG.exe"+A81A5: 8B 0F              -  mov ecx,[edi]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"One Click To Remove Barricade + Instant Upgrades"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(InstantAndBaricades,RoR_NG.exe,79 09 89 41 ??)
alloc(newmem,$1000)
label(return)

newmem:
  //jns 00562D4E
  mov [ecx+08],eax
  jmp return

InstantAndBaricades:
  jmp newmem
return:
registersymbol(InstantAndBaricades)

[DISABLE]

InstantAndBaricades:
  db 79 09 89 41 08

unregistersymbol(InstantAndBaricades)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RoR_NG.exe"+162D43

"RoR_NG.exe"+162D2D: CC                 -  int 3
"RoR_NG.exe"+162D2E: CC                 -  int 3
"RoR_NG.exe"+162D2F: CC                 -  int 3
"RoR_NG.exe"+162D30: 33 C0              -  xor eax,eax
"RoR_NG.exe"+162D32: 38 41 13           -  cmp [ecx+13],al
"RoR_NG.exe"+162D35: 75 17              -  jne RoR_NG.exe+162D4E
"RoR_NG.exe"+162D37: 38 41 12           -  cmp [ecx+12],al
"RoR_NG.exe"+162D3A: 75 0F              -  jne RoR_NG.exe+162D4B
"RoR_NG.exe"+162D3C: 8B 54 24 04        -  mov edx,[esp+04]
"RoR_NG.exe"+162D40: 29 51 08           -  sub [ecx+08],edx
// ---------- INJECTING HERE ----------
"RoR_NG.exe"+162D43: 79 09              -  jns RoR_NG.exe+162D4E
"RoR_NG.exe"+162D45: 89 41 08           -  mov [ecx+08],eax
// ---------- DONE INJECTING  ----------
"RoR_NG.exe"+162D48: C2 04 00           -  ret 0004
"RoR_NG.exe"+162D4B: 88 41 12           -  mov [ecx+12],al
"RoR_NG.exe"+162D4E: C2 04 00           -  ret 0004
"RoR_NG.exe"+162D51: CC                 -  int 3
"RoR_NG.exe"+162D52: CC                 -  int 3
"RoR_NG.exe"+162D53: CC                 -  int 3
"RoR_NG.exe"+162D54: CC                 -  int 3
"RoR_NG.exe"+162D55: CC                 -  int 3
"RoR_NG.exe"+162D56: CC                 -  int 3
"RoR_NG.exe"+162D57: CC                 -  int 3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Unlimited Any Bonus Boost"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(UnlimitedPowerUps,RoR_NG.exe,29 46 04 79 06)
alloc(newmem,$1000)
label(return)

newmem:
  push ebx
  mov ebx,[esi]
  mov [esi+04],ebx
  pop ebx
  jns 004A7613
  jmp return

UnlimitedPowerUps:
  jmp newmem
return:
registersymbol(UnlimitedPowerUps)

[DISABLE]
UnlimitedPowerUps:
  db 29 46 04 79 06

unregistersymbol(UnlimitedPowerUps)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RoR_NG.exe"+A7608

"RoR_NG.exe"+A75EE: D9 EE           -  fldz
"RoR_NG.exe"+A75F0: 89 1E           -  mov [esi],ebx
"RoR_NG.exe"+A75F2: D9 5E 0C        -  fstp dword ptr [esi+0C]
"RoR_NG.exe"+A75F5: 89 5E 04        -  mov [esi+04],ebx
"RoR_NG.exe"+A75F8: D9 EE           -  fldz
"RoR_NG.exe"+A75FA: 88 5E 2C        -  mov [esi+2C],bl
"RoR_NG.exe"+A75FD: D9 5E 0C        -  fstp dword ptr [esi+0C]
"RoR_NG.exe"+A7600: 5B              -  pop ebx
"RoR_NG.exe"+A7601: C2 04 00        -  ret 0004
"RoR_NG.exe"+A7604: 8B 44 24 08     -  mov eax,[esp+08]
// ---------- INJECTING HERE ----------
"RoR_NG.exe"+A7608: 29 46 04        -  sub [esi+04],eax
"RoR_NG.exe"+A760B: 79 06           -  jns RoR_NG.exe+A7613
// ---------- DONE INJECTING  ----------
"RoR_NG.exe"+A760D: 89 5E 04        -  mov [esi+04],ebx
"RoR_NG.exe"+A7610: 88 5E 2C        -  mov [esi+2C],bl
"RoR_NG.exe"+A7613: 8B 06           -  mov eax,[esi]
"RoR_NG.exe"+A7615: 89 44 24 08     -  mov [esp+08],eax
"RoR_NG.exe"+A7619: 3B C3           -  cmp eax,ebx
"RoR_NG.exe"+A761B: 75 09           -  jne RoR_NG.exe+A7626
"RoR_NG.exe"+A761D: D9 EE           -  fldz
"RoR_NG.exe"+A761F: 5B              -  pop ebx
"RoR_NG.exe"+A7620: D9 5E 0C        -  fstp dword ptr [esi+0C]
"RoR_NG.exe"+A7623: C2 04 00        -  ret 0004
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"One Click To Make Monster Go Away"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(OneHitMonsterKill,RoR_NG.exe,FF 86 CC 06 00 00)
alloc(newmem,$1000)
label(return)

newmem:
  push ebx
  mov ebx,[esi+6C8]
  inc [esi+000006CC]
  mov [esi+000006CC],ebx
  pop ebx
  jmp return

OneHitMonsterKill:
  jmp newmem
  nop
return:
registersymbol(OneHitMonsterKill)

[DISABLE]

OneHitMonsterKill:
  db FF 86 CC 06 00 00

unregistersymbol(OneHitMonsterKill)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RoR_NG.exe"+6C662

"RoR_NG.exe"+6C633: 80 BE C4 06 00 00 00     -  cmp byte ptr [esi+000006C4],00
"RoR_NG.exe"+6C63A: 0F 84 CC 00 00 00        -  je RoR_NG.exe+6C70C
"RoR_NG.exe"+6C640: 80 BE C5 06 00 00 00     -  cmp byte ptr [esi+000006C5],00
"RoR_NG.exe"+6C647: 0F 85 BF 00 00 00        -  jne RoR_NG.exe+6C70C
"RoR_NG.exe"+6C64D: 83 BE CC 06 00 00 00     -  cmp dword ptr [esi+000006CC],00
"RoR_NG.exe"+6C654: 75 0C                    -  jne RoR_NG.exe+6C662
"RoR_NG.exe"+6C656: 8B 06                    -  mov eax,[esi]
"RoR_NG.exe"+6C658: 8B 90 F4 00 00 00        -  mov edx,[eax+000000F4]
"RoR_NG.exe"+6C65E: 8B CE                    -  mov ecx,esi
"RoR_NG.exe"+6C660: FF D2                    -  call edx
// ---------- INJECTING HERE ----------
"RoR_NG.exe"+6C662: FF 86 CC 06 00 00        -  inc [esi+000006CC]
// ---------- DONE INJECTING  ----------
"RoR_NG.exe"+6C668: 8B 86 CC 06 00 00        -  mov eax,[esi+000006CC]
"RoR_NG.exe"+6C66E: 89 44 24 0C              -  mov [esp+0C],eax
"RoR_NG.exe"+6C672: DB 44 24 0C              -  fild dword ptr [esp+0C]
"RoR_NG.exe"+6C676: 8B 16                    -  mov edx,[esi]
"RoR_NG.exe"+6C678: 8B 82 FC 00 00 00        -  mov eax,[edx+000000FC]
"RoR_NG.exe"+6C67E: 51                       -  push ecx
"RoR_NG.exe"+6C67F: DA B6 C8 06 00 00        -  fidiv [esi+000006C8]
"RoR_NG.exe"+6C685: 8B CE                    -  mov ecx,esi
"RoR_NG.exe"+6C687: D9 5C 24 10              -  fstp dword ptr [esp+10]
"RoR_NG.exe"+6C68B: D9 44 24 10              -  fld dword ptr [esp+10]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Bomb On Barricade Instantly Blows up"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(InstantBombBlowUp,RoR_NG.exe,89 07 7E 28 81 C6 C8 06 00 00) // should be unique
alloc(newmem,$30)
label(return)

newmem:
  mov [edi],eax
  mov [edi],4
  jle 0046E27B
  add esi,000006C8
  jmp return

InstantBombBlowUp:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(InstantBombBlowUp)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
InstantBombBlowUp:
  db 89 07 7E 28 81 C6 C8 06 00 00

unregistersymbol(InstantBombBlowUp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RoR_NG.exe"+6E24F

"RoR_NG.exe"+6E230: 8B 4C 24 14              -  mov ecx,[esp+14]
"RoR_NG.exe"+6E234: 85 C9                    -  test ecx,ecx
"RoR_NG.exe"+6E236: 74 43                    -  je RoR_NG.exe+6E27B
"RoR_NG.exe"+6E238: 8B 11                    -  mov edx,[ecx]
"RoR_NG.exe"+6E23A: 8B 02                    -  mov eax,[edx]
"RoR_NG.exe"+6E23C: 6A 01                    -  push 01
"RoR_NG.exe"+6E23E: EB 39                    -  jmp RoR_NG.exe+6E279
"RoR_NG.exe"+6E240: 2B C3                    -  sub eax,ebx
"RoR_NG.exe"+6E242: 83 BE C0 06 00 00 00     -  cmp dword ptr [esi+000006C0],00
"RoR_NG.exe"+6E249: 8D 9E C0 06 00 00        -  lea ebx,[esi+000006C0]
// ---------- INJECTING HERE ----------
"RoR_NG.exe"+6E24F: 89 07                    -  mov [edi],eax
"RoR_NG.exe"+6E251: 7E 28                    -  jle RoR_NG.exe+6E27B
"RoR_NG.exe"+6E253: 81 C6 C8 06 00 00        -  add esi,000006C8
// ---------- DONE INJECTING  ----------
"RoR_NG.exe"+6E259: 56                       -  push esi
"RoR_NG.exe"+6E25A: E8 D1 8E FA FF           -  call RoR_NG.exe+17130
"RoR_NG.exe"+6E25F: DB 07                    -  fild dword ptr [edi]
"RoR_NG.exe"+6E261: 8B 10                    -  mov edx,[eax]
"RoR_NG.exe"+6E263: 51                       -  push ecx
"RoR_NG.exe"+6E264: DA 33                    -  fidiv [ebx]
"RoR_NG.exe"+6E266: 8B C8                    -  mov ecx,eax
"RoR_NG.exe"+6E268: 8B 82 FC 00 00 00        -  mov eax,[edx+000000FC]
"RoR_NG.exe"+6E26E: D9 5C 24 14              -  fstp dword ptr [esp+14]
"RoR_NG.exe"+6E272: D9 44 24 14              -  fld dword ptr [esp+14]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Resourcess</Name>
      <Address>004B4C51</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Time</Name>
      <Address>004A818B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InstantAndBaricades</Name>
      <Address>00562D43</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>UnlimitedPowerUps</Name>
      <Address>004A7608</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>OneHitMonsterKill</Name>
      <Address>0046C662</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>InstantBombBlowUp</Name>
      <Address>0046E24F</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
