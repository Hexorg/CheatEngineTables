<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Camera zoom value"</Description>
      <Color>80000008</Color>
      <VariableType>Float</VariableType>
      <Address>game.exe+D74010</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Tilting"</Description>
      <Color>80000008</Color>
      <VariableType>Float</VariableType>
      <Address>game.exe+D74018</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Up/down"</Description>
      <Color>80000008</Color>
      <VariableType>Float</VariableType>
      <Address>game.exe+D74008</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Enable big zoom in"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//jna game.exe+194777
jmp game.exe+194777
xorps xmm2,xmm2

exit:
jmp returnhere

"game.exe"+194753:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+194753:
jna game.exe+194777
xorps xmm2,xmm2
//Alt: db 76 22 0F 57 D2
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Infinite zoom part 1"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//jna game.exe+1946DF
jmp game.exe+1946DF
movaps xmm0,xmm2

exit:
jmp returnhere

"game.exe"+1946DA:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+1946DA:
jna game.exe+1946DF
movaps xmm0,xmm2
//Alt: db 76 03 0F 28 C2
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Infinite zoom part 2"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//jna game.exe+1946FC
jmp game.exe+1946FC
movaps xmm0,xmm2

exit:
jmp returnhere

"game.exe"+1946F7:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+1946F7:
jna game.exe+1946FC
movaps xmm0,xmm2
//Alt: db 76 03 0F 28 C2
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Infinite zoom part 3"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//jna game.exe+194742
jmp game.exe+194742
movaps xmm0,xmm4

exit:
jmp returnhere

"game.exe"+19473D:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+19473D:
jna game.exe+194742
movaps xmm0,xmm4
//Alt: db 76 03 0F 28 C4
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>100</ID>
      <Description>"Remove camera rotation limit up"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//fadd dword ptr [esi+0000E338]

exit:
jmp returnhere

"game.exe"+192CFB:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+192CFB:
fadd dword ptr [esi+0000E338]
//Alt: db D8 86 38 E3 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>104</ID>
      <Description>"Remove camera rotation limit down"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
jmp game.exe+192C66

exit:
jmp returnhere

"game.exe"+1928EC:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+1928EC:
jbe game.exe+192C66
//Alt: db 0F 86 74 03 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>111</ID>
      <Description>"Remove 90 deg angle limit upwards"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
jmp game.exe+195125
cvtps2pd xmm2,xmm2

exit:
jmp returnhere

"game.exe"+19510D:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+19510D:
jna game.exe+195125
cvtps2pd xmm2,xmm2
//Alt: db 76 16 0F 5A D2
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>113</ID>
      <Description>"Remove 90 deg angle limit downwards"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
jmp game.exe+195173
cvtps2pd xmm1,xmm1

exit:
jmp returnhere

"game.exe"+195158:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+195158:
jna game.exe+195173
cvtps2pd xmm1,xmm1
//Alt: db 76 19 0F 5A C9
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>152</ID>
      <Description>"Freeze camera center cords"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem51,2048)
label(returnhere51)
label(originalcode51)
label(exit51)

newmem51: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode51:
//movq [eax+08],xmm0

exit51:
jmp returnhere51

"game.exe"+294CB8:
jmp newmem51
returnhere51:

alloc(newmem41,2048)
label(returnhere41)
label(originalcode41)
label(exit41)

newmem41: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode41:
//movss [eax+08],xmm0

exit41:
jmp returnhere41

"game.exe"+294A4F:
jmp newmem41
returnhere41:

alloc(newmem32,2048)
label(returnhere32)
label(originalcode32)
label(exit32)

newmem32: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode32:
//movss [eax],xmm0
movss xmm0,[ebp-10]

exit32:
jmp returnhere32

"game.exe"+294A3A:
jmp newmem32
nop
nop
nop
nop
returnhere32:

alloc(newmem24,2048)
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode24:
//movq [eax+08],xmm0

exit24:
jmp returnhere24

"game.exe"+295046:
jmp newmem24
returnhere24:

alloc(newmem17,2048)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode17:
//movss [eax+08],xmm0

exit17:
jmp returnhere17

"game.exe"+294D8D:
jmp newmem17
returnhere17:

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode11:
//movq [eax],xmm0
movss [ebp-0C],xmm4

exit11:
jmp returnhere11

"game.exe"+294CA7:
jmp newmem11
nop
nop
nop
nop
returnhere11:

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode6:
//movss [eax+04],xmm0

exit6:
jmp returnhere6

"game.exe"+294A89:
jmp newmem6
returnhere6:

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
//movss [eax+04],xmm0

exit2:
jmp returnhere2

"game.exe"+294A43:
jmp newmem2
returnhere2:

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//movss [ebx+000001BC],xmm0

exit:
jmp returnhere

"game.exe"+275909:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem51)
"game.exe"+294CB8:
movq [eax+08],xmm0
//Alt: db 66 0F D6 40 08
dealloc(newmem41)
"game.exe"+294A4F:
movss [eax+08],xmm0
//Alt: db F3 0F 11 40 08
dealloc(newmem32)
"game.exe"+294A3A:
movss [eax],xmm0
movss xmm0,[ebp-10]
//Alt: db F3 0F 11 00 F3 0F 10 45 F0
dealloc(newmem24)
"game.exe"+295046:
movq [eax+08],xmm0
//Alt: db 66 0F D6 40 08
dealloc(newmem17)
"game.exe"+294D8D:
movss [eax+08],xmm0
//Alt: db F3 0F 11 40 08
dealloc(newmem11)
"game.exe"+294CA7:
movq [eax],xmm0
movss [ebp-0C],xmm4
//Alt: db 66 0F D6 00 F3 0F 11 65 F4
dealloc(newmem6)
"game.exe"+294A89:
movss [eax+04],xmm0
//Alt: db F3 0F 11 40 04
dealloc(newmem2)
"game.exe"+294A43:
movss [eax+04],xmm0
//Alt: db F3 0F 11 40 04
dealloc(newmem)
"game.exe"+275909:
movss [ebx+000001BC],xmm0
//Alt: db F3 0F 11 83 BC 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>98</ID>
      <Description>"Camera default zoom to center"</Description>
      <Color>80000008</Color>
      <VariableType>Float</VariableType>
      <Address>game.exe+D65CD8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>145</ID>
      <Description>"Camera X cord"</Description>
      <Color>80000008</Color>
      <VariableType>Float</VariableType>
      <Address>game.exe+D65CE0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>146</ID>
      <Description>"Camera Z cord"</Description>
      <Color>80000008</Color>
      <VariableType>Float</VariableType>
      <Address>game.exe+D65CE4</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>147</ID>
      <Description>"Camera Y cord"</Description>
      <Color>80000008</Color>
      <VariableType>Float</VariableType>
      <Address>game.exe+D65CE8</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>107</ID>
      <Description>"Remove 90 deg angle limit (old)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//movss [edi+0000E338],xmm1

exit:
jmp returnhere

"game.exe"+19516B:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+19516B:
movss [edi+0000E338],xmm1
//Alt: db F3 0F 11 8F 38 E3 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>99</ID>
      <Description>"Remove camera rotation limit down (old)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//fadd dword ptr [esi+0000E338]

exit:
jmp returnhere

"game.exe"+1928DF:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+1928DF:
fadd dword ptr [esi+0000E338]
//Alt: db D8 86 38 E3 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>102</ID>
      <Description>"Remove camera rotation limit down (old 2)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//jna game.exe+1928A8
movaps xmm0,xmm1

exit:
jmp returnhere

"game.exe"+1928A3:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+1928A3:
jna game.exe+1928A8
movaps xmm0,xmm1
//Alt: db 76 03 0F 28 C1
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>103</ID>
      <Description>"Change lower limit of camera angle (not too useful)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
//jna game.exe+1928C1
mov [newmem+100],(float)1
movss xmm0,[newmem+100]

exit:
jmp returnhere

"game.exe"+1928B7:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+1928B7:
jna game.exe+1928C1
movss xmm0,[game.exe+A628B0]
//Alt: db 76 08 F3 0F 10 05 B0 28 2F 01
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>105</ID>
      <Description>"Remove camera rotation limit up v2"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
jmp game.exe+193092

exit:
jmp returnhere

"game.exe"+192D08:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+192D08:
jbe game.exe+193092
//Alt: db 0F 86 84 03 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>106</ID>
      <Description>"Remove camera rotation limit up v3"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
jmp game.exe+193092

exit:
jmp returnhere

"game.exe"+192D15:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"game.exe"+192D15:
jbe game.exe+193092
//Alt: db 0F 86 77 03 00 00
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
