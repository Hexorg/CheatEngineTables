<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <Forms>
    <form_ResidentEvil7_itemswap Class="TCEForm" Encoding="Ascii85">#gxxZ,b_r+9fvk*$^1sSCMHdtb^Q8mdI2FWBm*fziHcO)WfF2*x3%ipk;dex0dKPF9$_.Q#a;^KFgs2i,R[zGNV[CTet+B8pMU.U0ifMF]QWvq.{b4MuY2lod4V)1#Y]Sw5xRFtBpzkgC_x=kJ=U.a*lZo82hzQB,%]_$?1XLTbmhSP;39*JCE:^Pe5zs@u=kADSdJ*B$!t^Je2.[t7SD*_?;WtFcLc@PQf4fGubMhT38sGW-pyNpLD2zxt^Z?XsSiKe@3QbntU+^KLH(bz3kj7l.+/+=fIw#?nGE=(K$8(lbLY)=**^aSE8V*rPQ.lMoO-tOM)Lo6(f3:_=fUK2P$ohyB[F+it;%YK.3bm9W4czFyPv}[=,Ug+fM,sf@$Hp*OBD?ufRBbIA9xXR)ZwQ8QHQYpP7Y;$?{Kd9L7*^E2o,=MoNF%#z%23RJTCXpy[_BHlD-I;Iaa@H!$XbNCN/:g-q:a69$g[qQ9@MeKc.@f[9^*R@P?*IT,n(+Nk)2O^}t4V0H]TM.aBCw#)m8LQ#rq8Sj-*[,1h]FVv:vn+ryU0X1DgVyv@=+;:ewtmCR.n%@[pY)vsF+qJj6)1PaXs=g@X=7Ty$3u?CUeSm64@IvhT/4l7nd=Y%HfZkIY-wby=D</form_ResidentEvil7_itemswap>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>84</ID>
      <Description>"Player (Health, Ammo, Items)"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>06D211</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>211</ID>
          <Description>"Unlimited Items"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re7.exe
  Version: 
  Date   : 2017-01-24
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(medkit,re7.exe,44 8B B7 88 00 00 00) // should be unique
alloc(newmem,$1000,"re7.exe"+8865B7E)

label(code)
label(return)

newmem:
mov [rdi+00000088], #9
code:
  mov r14d,[rdi+00000088]
  jmp return

medkit:
  jmp newmem
  nop
  nop
return:
registersymbol(medkit)

[DISABLE]

medkit:
  db 44 8B B7 88 00 00 00

unregistersymbol(medkit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re7.exe"+8865B7E

"re7.exe"+8865B56: 48 89 D9              -  mov rcx,rbx
"re7.exe"+8865B59: 83 F8 01              -  cmp eax,01
"re7.exe"+8865B5C: 7F 16                 -  jg re7.exe+8865B74
"re7.exe"+8865B5E: 48 8B 96 A0 00 00 00  -  mov rdx,[rsi+000000A0]
"re7.exe"+8865B65: 48 85 D2              -  test rdx,rdx
"re7.exe"+8865B68: 74 37                 -  je re7.exe+8865BA1
"re7.exe"+8865B6A: E8 71 9A 1B FF        -  call re7.exe+7A1F5E0
"re7.exe"+8865B6F: E9 8C 00 00 00        -  jmp re7.exe+8865C00
"re7.exe"+8865B74: 48 8B AE A0 00 00 00  -  mov rbp,[rsi+000000A0]
"re7.exe"+8865B7B: 48 89 FA              -  mov rdx,rdi
// ---------- INJECTING HERE ----------
"re7.exe"+8865B7E: 44 8B B7 88 00 00 00  -  mov r14d,[rdi+00000088]
// ---------- DONE INJECTING  ----------
"re7.exe"+8865B85: E8 96 48 05 FF        -  call re7.exe+78BA420
"re7.exe"+8865B8A: 48 8B 4B 50           -  mov rcx,[rbx+50]
"re7.exe"+8865B8E: 48 83 79 18 00        -  cmp qword ptr [rcx+18],00
"re7.exe"+8865B93: 0F 85 89 01 00 00     -  jne re7.exe+8865D22
"re7.exe"+8865B99: 48 89 D9              -  mov rcx,rbx
"re7.exe"+8865B9C: 48 85 ED              -  test rbp,rbp
"re7.exe"+8865B9F: 75 51                 -  jne re7.exe+8865BF2
"re7.exe"+8865BA1: 45 31 C0              -  xor r8d,r8d
"re7.exe"+8865BA4: 41 8D 50 26           -  lea edx,[r8+26]
"re7.exe"+8865BA8: E8 23 AC AC 00        -  call re7.exe+93307D0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>216</ID>
          <Description>"Unlimited Remote Bombs"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,"re7.exe"+8C473A6)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

push rbx
mov rbx,[rdi+80]
cmp rbx,0
je notvalid

cmp [rbx+20],#10
jne notvalid

cmp [rbx+24],0069004c  //Li
jne notvalid

cmp [rbx+28],00750071 //qu
jne notvalid

xor eax,eax //valid, don't decrease value

notvalid:
pop rbx

sub esi,eax

originalcode:
mov [rdi+00000088],esi

exit:
jmp returnhere

"re7.exe"+8C473A6:
jmp newmem
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"re7.exe"+8C473A6:
sub esi,eax
mov [rdi+00000088],esi
//Alt: db 29 C6 89 B7 88 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>215</ID>
          <Description>"Easy Kills"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re7.exe
  Version: 
  Date   : 2017-01-24
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(easykills,re7.exe,F6 F3 0F 10 40 24) // should be unique
alloc(newmem,$1000,"re7.exe"+8908999)

label(code)
label(return)

newmem:
cmp [playerstruct], rax
je code
cmp [rax+24], (float)1
jle code
mov [rax+24], (float)1
code:
  movss xmm0,[rax+24]
  jmp return

easykills+01:
  jmp newmem
return:
registersymbol(easykills)

[DISABLE]

easykills+01:
  db F3 0F 10 40 24

unregistersymbol(easykills)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re7.exe"+8908999

"re7.exe"+8908979: 48 85 C0                          -  test rax,rax
"re7.exe"+890897C: 75 13                             -  jne re7.exe+8908991
"re7.exe"+890897E: 45 31 C0                          -  xor r8d,r8d
"re7.exe"+8908981: 8D 50 26                          -  lea edx,[rax+26]
"re7.exe"+8908984: 48 89 D9                          -  mov rcx,rbx
"re7.exe"+8908987: E8 44 7E A2 00                    -  call re7.exe+93307D0
"re7.exe"+890898C: 0F 57 F6                          -  xorps xmm6,xmm6
"re7.exe"+890898F: EB 45                             -  jmp re7.exe+89089D6
"re7.exe"+8908991: F3 0F 10 48 20                    -  movss xmm1,[rax+20]
"re7.exe"+8908996: 0F 57 F6                          -  xorps xmm6,xmm6
// ---------- INJECTING HERE ----------
"re7.exe"+8908999: F3 0F 10 40 24                    -  movss xmm0,[rax+24]
// ---------- DONE INJECTING  ----------
"re7.exe"+890899E: 0F 5A C9                          -  cvtps2pd xmm1,xmm1
"re7.exe"+89089A1: 0F 5A C0                          -  cvtps2pd xmm0,xmm0
"re7.exe"+89089A4: 66 0F 2E CF                       -  ucomisd xmm1,xmm7
"re7.exe"+89089A8: 7A 16                             -  jp re7.exe+89089C0
"re7.exe"+89089AA: 75 14                             -  jne re7.exe+89089C0
"re7.exe"+89089AC: 45 31 C0                          -  xor r8d,r8d
"re7.exe"+89089AF: 48 89 D9                          -  mov rcx,rbx
"re7.exe"+89089B2: 41 8D 50 27                       -  lea edx,[r8+27]
"re7.exe"+89089B6: E8 15 7E A2 00                    -  call re7.exe+93307D0
"re7.exe"+89089BB: 0F 28 C6                          -  movaps xmm0,xmm6
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>220</ID>
          <Description>"Ammo"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>3</ID>
              <Description>"Freeze Ammo Clip (clip=4)"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>// Game   : re7.exe
// Author : mgr.inz.Player
[ENABLE]
aobscanmodule(aob_clipAmmo,re7.exe,8B 48 24 89 8C 24 88 00 00 00)
registersymbol(aob_clipAmmo)
alloc(newmem_clipAmmo,1024,re7.exe)
label(return_clipAmmo)

newmem_clipAmmo:
  mov [rax+24],4
  mov ecx,[rax+24]
  mov [rsp+00000088],ecx
  jmp return_clipAmmo

aob_clipAmmo:
  jmp newmem_clipAmmo
  nop
  nop
  nop
  nop
  nop
return_clipAmmo:

[DISABLE]
aob_clipAmmo:
  db 8B 48 24 89 8C 24 88 00 00 00

unregistersymbol(aob_clipAmmo)
dealloc(newmem_clipAmmo)

{
// ORIGINAL CODE - INJECTION POINT: "re7.exe"+7DB5B3C

"re7.exe"+7DB5B18: 48 85 FF                 -  test rdi,rdi
"re7.exe"+7DB5B1B: 75 13                    -  jne re7.exe+7DB5B30
"re7.exe"+7DB5B1D: 45 31 C0                 -  xor r8d,r8d
"re7.exe"+7DB5B20: 8D 57 26                 -  lea edx,[rdi+26]
"re7.exe"+7DB5B23: 48 89 D9                 -  mov rcx,rbx
"re7.exe"+7DB5B26: E8 45 A4 57 01           -  call re7.exe+932FF70
"re7.exe"+7DB5B2B: E9 B3 04 00 00           -  jmp re7.exe+7DB5FE3
"re7.exe"+7DB5B30: 48 8B 87 78 01 00 00     -  mov rax,[rdi+00000178]
"re7.exe"+7DB5B37: 48 85 C0                 -  test rax,rax
"re7.exe"+7DB5B3A: 74 0C                    -  je re7.exe+7DB5B48
// ---------- INJECTING HERE ----------
"re7.exe"+7DB5B3C: 8B 48 24                 -  mov ecx,[rax+24]
"re7.exe"+7DB5B3F: 89 8C 24 88 00 00 00     -  mov [rsp+00000088],ecx
// ---------- DONE INJECTING  ----------
"re7.exe"+7DB5B46: EB 08                    -  jmp re7.exe+7DB5B50
"re7.exe"+7DB5B48: 44 89 B4 24 88 00 00 00  -  mov [rsp+00000088],r14d
"re7.exe"+7DB5B50: 48 8B 87 68 01 00 00     -  mov rax,[rdi+00000168]
"re7.exe"+7DB5B57: 48 85 C0                 -  test rax,rax
"re7.exe"+7DB5B5A: 75 0A                    -  jne re7.exe+7DB5B66
"re7.exe"+7DB5B5C: 44 89 B4 24 80 00 00 00  -  mov [rsp+00000080],r14d
"re7.exe"+7DB5B64: EB 0A                    -  jmp re7.exe+7DB5B70
"re7.exe"+7DB5B66: 8B 40 40                 -  mov eax,[rax+40]
"re7.exe"+7DB5B69: 89 84 24 80 00 00 00     -  mov [rsp+00000080],eax
"re7.exe"+7DB5B70: 4C 89 64 24 48           -  mov [rsp+48],r12
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>212</ID>
              <Description>"Unlimited Ammo"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re7.exe
  Version: 
  Date   : 2017-01-24
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ammo,re7.exe,41 03 B6 88 00 00 00) // should be unique
alloc(newmem,$1000,"re7.exe"+8C44DE9)

label(code)
label(return)

newmem:
  mov [r14+00000088], 3e7
code:
  add esi,[r14+00000088]
  jmp return

ammo:
  jmp newmem
  nop
  nop
return:
registersymbol(ammo)

[DISABLE]

ammo:
  db 41 03 B6 88 00 00 00

unregistersymbol(ammo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re7.exe"+8C44DE9

"re7.exe"+8C44DC2: 0F 85 D8 00 00 00        -  jne re7.exe+8C44EA0
"re7.exe"+8C44DC8: 4D 89 F8                 -  mov r8,r15
"re7.exe"+8C44DCB: 48 89 D9                 -  mov rcx,rbx
"re7.exe"+8C44DCE: E8 AD 02 70 00           -  call re7.exe+9345080
"re7.exe"+8C44DD3: 0F B6 C8                 -  movzx ecx,al
"re7.exe"+8C44DD6: 48 8B 43 50              -  mov rax,[rbx+50]
"re7.exe"+8C44DDA: 48 83 78 18 00           -  cmp qword ptr [rax+18],00
"re7.exe"+8C44DDF: 0F 85 BB 00 00 00        -  jne re7.exe+8C44EA0
"re7.exe"+8C44DE5: 85 C9                    -  test ecx,ecx
"re7.exe"+8C44DE7: 75 07                    -  jne re7.exe+8C44DF0
// ---------- INJECTING HERE ----------
"re7.exe"+8C44DE9: 41 03 B6 88 00 00 00     -  add esi,[r14+00000088]
// ---------- DONE INJECTING  ----------
"re7.exe"+8C44DF0: 48 8D 55 C8              -  lea rdx,[rbp-38]
"re7.exe"+8C44DF4: 48 89 D9                 -  mov rcx,rbx
"re7.exe"+8C44DF7: E8 B4 1E 7A FF           -  call re7.exe+83E6CB0
"re7.exe"+8C44DFC: 0F B6 C8                 -  movzx ecx,al
"re7.exe"+8C44DFF: 48 8B 43 50              -  mov rax,[rbx+50]
"re7.exe"+8C44E03: 48 8B 50 18              -  mov rdx,[rax+18]
"re7.exe"+8C44E07: 48 85 D2                 -  test rdx,rdx
"re7.exe"+8C44E0A: 0F 84 49 FD FF FF        -  je re7.exe+8C44B59
"re7.exe"+8C44E10: 45 31 F6                 -  xor r14d,r14d
"re7.exe"+8C44E13: 48 8B 43 50              -  mov rax,[rbx+50]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>213</ID>
              <Description>"No Reload"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re7.exe
  Version: 
  Date   : 2017-01-24
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(noreload,re7.exe,8B 41 24 39 C2 0F 9E D0 4D) // should be unique
alloc(newmem,$1000,"re7.exe"+829FC2A)

label(code)
label(return)

newmem:
mov [rcx+24], 63
code:
  mov eax,[rcx+24]
  cmp edx,eax
  jmp return

noreload:
  jmp newmem
return:
registersymbol(noreload)

[DISABLE]

noreload:
  db 8B 41 24 39 C2

unregistersymbol(noreload)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re7.exe"+829FC2A

"re7.exe"+829FC0D: B0 01                 -  mov al,01
"re7.exe"+829FC0F: EB 21                 -  jmp re7.exe+829FC32
"re7.exe"+829FC11: 31 C0                 -  xor eax,eax
"re7.exe"+829FC13: 89 C2                 -  mov edx,eax
"re7.exe"+829FC15: 4D 85 C9              -  test r9,r9
"re7.exe"+829FC18: 74 04                 -  je re7.exe+829FC1E
"re7.exe"+829FC1A: 41 8B 51 40           -  mov edx,[r9+40]
"re7.exe"+829FC1E: 48 8B 8F 78 01 00 00  -  mov rcx,[rdi+00000178]
"re7.exe"+829FC25: 48 85 C9              -  test rcx,rcx
"re7.exe"+829FC28: 74 03                 -  je re7.exe+829FC2D
// ---------- INJECTING HERE ----------
"re7.exe"+829FC2A: 8B 41 24              -  mov eax,[rcx+24]
"re7.exe"+829FC2D: 39 C2                 -  cmp edx,eax
// ---------- DONE INJECTING  ----------
"re7.exe"+829FC2F: 0F 9E D0              -  setle al
"re7.exe"+829FC32: 4D 85 C0              -  test r8,r8
"re7.exe"+829FC35: 75 6E                 -  jne re7.exe+829FCA5
"re7.exe"+829FC37: 84 C0                 -  test al,al
"re7.exe"+829FC39: 75 6A                 -  jne re7.exe+829FCA5
"re7.exe"+829FC3B: 48 89 FA              -  mov rdx,rdi
"re7.exe"+829FC3E: 48 89 D9              -  mov rcx,rbx
"re7.exe"+829FC41: E8 1A 64 FE FF        -  call re7.exe+8286060
"re7.exe"+829FC46: 0F B6 C8              -  movzx ecx,al
"re7.exe"+829FC49: 48 8B 43 50           -  mov rax,[rbx+50]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>218</ID>
          <Description>"Health"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>219</ID>
              <Description>"Unlimited Health"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re7.exe
  Version: 
  Date   : 2017-01-24
  Author : STN

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(health,re7.exe,F3 0F 10 40 24 48 8B 43 50 48 39 70 18 0F 85 ?? ?? ?? ?? 0F 5A C8) // should be unique
alloc(newmem,$1000,"re7.exe"+805299C)

label(code)
label(return)
label(playerstruct)
registersymbol(playerstruct)

newmem:
mov [playerstruct], rax
mov [rax+24], (float)9999
code:
  movss xmm0,[rax+24]
  jmp return

playerstruct:
dq 0

health:
  jmp newmem
return:
registersymbol(health)

[DISABLE]

health:
  db F3 0F 10 40 24

unregistersymbol(health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re7.exe"+805299C

"re7.exe"+805297C: 0F 29 7C 24 30              -  movaps [rsp+30],xmm7
"re7.exe"+8052981: 0F 57 FF                    -  xorps xmm7,xmm7
"re7.exe"+8052984: 48 85 C0                    -  test rax,rax
"re7.exe"+8052987: 75 13                       -  jne re7.exe+805299C
"re7.exe"+8052989: 45 31 C0                    -  xor r8d,r8d
"re7.exe"+805298C: 8D 50 26                    -  lea edx,[rax+26]
"re7.exe"+805298F: 48 89 D9                    -  mov rcx,rbx
"re7.exe"+8052992: E8 39 DE 2D 01              -  call re7.exe+93307D0
"re7.exe"+8052997: 0F 28 C7                    -  movaps xmm0,xmm7
"re7.exe"+805299A: EB 05                       -  jmp re7.exe+80529A1
// ---------- INJECTING HERE ----------
"re7.exe"+805299C: F3 0F 10 40 24              -  movss xmm0,[rax+24]
// ---------- DONE INJECTING  ----------
"re7.exe"+80529A1: 48 8B 43 50                 -  mov rax,[rbx+50]
"re7.exe"+80529A5: 48 39 70 18                 -  cmp [rax+18],rsi
"re7.exe"+80529A9: 0F 85 DA 05 00 00           -  jne re7.exe+8052F89
"re7.exe"+80529AF: 0F 5A C8                    -  cvtps2pd xmm1,xmm0
"re7.exe"+80529B2: F3 0F 10 87 9C 01 00 00     -  movss xmm0,[rdi+0000019C]
"re7.exe"+80529BA: 0F 5A C0                    -  cvtps2pd xmm0,xmm0
"re7.exe"+80529BD: 66 0F 2F C1                 -  comisd xmm0,xmm1
"re7.exe"+80529C1: 0F 97 D2                    -  seta dl
"re7.exe"+80529C4: 88 97 F1 00 00 00           -  mov [rdi+000000F1],dl
"re7.exe"+80529CA: 48 8B 43 50                 -  mov rax,[rbx+50]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>0</ID>
              <Description>"Freeze Health"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>// Game   : re7.exe
// Author : mgr.inz.Player
[ENABLE]
aobscanmodule(aob_Health,re7.exe,F6 F3 0F 10 40 24)
registersymbol(aob_Health)
alloc(newmem_Health,1024,re7.exe)
label(return_Health)

newmem_Health:
  movss xmm0,[rax+20]
  movss [rax+24],xmm0
  jmp return_Health

aob_Health+01:
  jmp newmem_Health
return_Health:

[DISABLE]
aob_Health+01:
  db F3 0F 10 40 24

unregistersymbol(aob_Health)
dealloc(newmem_Health)

{
// ORIGINAL CODE - INJECTION POINT: "re7.exe"+86B9EEE

"re7.exe"+86B9ED0: 75 14                             -  jne re7.exe+86B9EE6
"re7.exe"+86B9ED2: 45 31 C0                          -  xor r8d,r8d
"re7.exe"+86B9ED5: 8D 50 26                          -  lea edx,[rax+26]
"re7.exe"+86B9ED8: 48 89 D9                          -  mov rcx,rbx
"re7.exe"+86B9EDB: E8 90 60 C7 00                    -  call re7.exe+932FF70
"re7.exe"+86B9EE0: 0F 57 F6                          -  xorps xmm6,xmm6
"re7.exe"+86B9EE3: EB 47                             -  jmp re7.exe+86B9F2C
"re7.exe"+86B9EE5: C0 F3 0F                          -  rol bl,0F
"re7.exe"+86B9EE8: 10 48 20                          -  adc [rax+20],cl
"re7.exe"+86B9EEB: 0F 57 F6                          -  xorps xmm6,xmm6
// ---------- INJECTING HERE ----------
"re7.exe"+86B9EEE: F3 0F 10 40 24                    -  movss xmm0,[rax+24]
// ---------- DONE INJECTING  ----------
"re7.exe"+86B9EF3: 0F 5A C9                          -  cvtps2pd xmm1,xmm1
"re7.exe"+86B9EF6: 0F 5A C0                          -  cvtps2pd xmm0,xmm0
"re7.exe"+86B9EF9: 66 0F 2E CF                       -  ucomisd xmm1,xmm7
"re7.exe"+86B9EFD: 7A 17                             -  jp re7.exe+86B9F16
"re7.exe"+86B9EFF: 75 15                             -  jne re7.exe+86B9F16
"re7.exe"+86B9F01: 45 31 C0                          -  xor r8d,r8d
"re7.exe"+86B9F04: 48 89 D9                          -  mov rcx,rbx
"re7.exe"+86B9F07: 41 8D 50 27                       -  lea edx,[r8+27]
"re7.exe"+86B9F0B: E8 60 60 C7 00                    -  call re7.exe+932FF70
"re7.exe"+86B9F10: 0F 28 C6                          -  movaps xmm0,xmm6
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1</ID>
              <Description>"Current Health"</Description>
              <LastState Value="1000" RealAddress="0A803C64"/>
              <VariableType>Float</VariableType>
              <Address>"re7.exe"+0707FCD0</Address>
              <Offsets>
                <Offset>24</Offset>
                <Offset>70</Offset>
                <Offset>28</Offset>
                <Offset>28</Offset>
                <Offset>58</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2</ID>
              <Description>"Max Health"</Description>
              <LastState Value="1000" RealAddress="0A803C60"/>
              <VariableType>Float</VariableType>
              <Address>"re7.exe"+0707FCD0</Address>
              <Offsets>
                <Offset>20</Offset>
                <Offset>70</Offset>
                <Offset>28</Offset>
                <Offset>28</Offset>
                <Offset>58</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>197</ID>
          <Description>"Psychostimulants (toggle)"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(eyedropFlagChkAOB,re7.exe,80 BA 3D 02 00 00 00 48 89 D3 48 89 CF)
registersymbol(eyedropFlagChkAOB)

label(bEyedropEnabled)
registersymbol(bEyedropEnabled)

alloc(newmem,2048,eyedropFlagChkAOB) //"re7.exe"+7D19CCA)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bEyedropEnabled],1
jne @f
mov byte ptr [bEyedropEnabled+1],1
mov byte ptr [rdx+23d],1
mov dword ptr [rdx+240],0
jmp originalcode

@@:
cmp byte ptr [bEyedropEnabled+1],0
je @f
mov byte ptr [bEyedropEnabled+1],0
mov byte ptr [rdx+23d],0

originalcode:
cmp byte ptr [rdx+0000023D],00

exit:
jmp returnhere

///
bEyedropEnabled:
///

eyedropFlagChkAOB: //"re7.exe"+7D19CCA:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
eyedropFlagChkAOB: //"re7.exe"+7D19CCA:
db 80 BA 3D 02 00 00 00
//Alt: cmp byte ptr [rdx+0000023D],00

unregistersymbol(bEyedropEnabled)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>199</ID>
              <Description>"CapsLock_T:enable | Shift_T:disable"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>198</ID>
                  <Description>"bEyedropEnabled"</Description>
                  <LastState Value="1" RealAddress="14E7D0063"/>
                  <Color>008000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bEyedropEnabled</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>20</Key>
                        <Key>84</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>0</ID>
                      <ActivateSound TTS="EN">psychostimulants enabled</ActivateSound>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>16</Key>
                        <Key>84</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                      <ActivateSound TTS="EN">psychostimulants disabled</ActivateSound>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>200</ID>
                  <Description>"bEyedropEnabled+1"</Description>
                  <LastState Value="1" RealAddress="14E7D0064"/>
                  <Color>008000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bEyedropEnabled+1</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>202</ID>
          <Description>"Unlock FOV - Activate in game."</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : WatchDogs2.exe
  Version: Steam
  Date   : 2017-01-31
  Author : Jason@JDimensional

  This script unlocks FOV for editing.
}

[ENABLE]
aobscanmodule(FOV,re7.exe,F3 0F 11 B3 F8 05 00 00) // should be unique

FOV:
 db 90 90 90 90 90 90 90 90
registersymbol(FOV)

[DISABLE]

FOV:
  db F3 0F 11 B3 F8 05 00 00

unregistersymbol(FOV)
dealloc(FOV)

{
// ORIGINAL CODE - INJECTION POINT: "re7.exe"+7B76D2F

"re7.exe"+7B76D07: F2 0F 5C D0                       -  subsd xmm2,xmm0
"re7.exe"+7B76D0B: F3 0F 10 80 8C 03 00 00           -  movss xmm0,[rax+0000038C]
"re7.exe"+7B76D13: 0F 5A C0                          -  cvtps2pd xmm0,xmm0
"re7.exe"+7B76D16: 0F 5A C9                          -  cvtps2pd xmm1,xmm1
"re7.exe"+7B76D19: F2 0F 59 D1                       -  mulsd xmm2,xmm1
"re7.exe"+7B76D1D: 0F 5A CF                          -  cvtps2pd xmm1,xmm7
"re7.exe"+7B76D20: F2 0F 59 C2                       -  mulsd xmm0,xmm2
"re7.exe"+7B76D24: F2 0F 58 C6                       -  addsd xmm0,xmm6
"re7.exe"+7B76D28: 66 0F 5A F0                       -  cvtpd2ps xmm6,xmm0
"re7.exe"+7B76D2C: 0F 5A C6                          -  cvtps2pd xmm0,xmm6
// ---------- INJECTING HERE ----------
"re7.exe"+7B76D2F: F3 0F 11 B3 F8 05 00 00           -  movss [rbx+000005F8],xmm6
// ---------- DONE INJECTING  ----------
"re7.exe"+7B76D37: F2 0F 59 C8                       -  mulsd xmm1,xmm0
"re7.exe"+7B76D3B: 66 44 0F 5A C9                    -  cvtpd2ps xmm9,xmm1
"re7.exe"+7B76D40: 48 8B 93 08 01 00 00              -  mov rdx,[rbx+00000108]
"re7.exe"+7B76D47: 48 85 D2                          -  test rdx,rdx
"re7.exe"+7B76D4A: 75 14                             -  jne re7.exe+7B76D60
"re7.exe"+7B76D4C: 45 31 C0                          -  xor r8d,r8d
"re7.exe"+7B76D4F: 48 89 F9                          -  mov rcx,rdi
"re7.exe"+7B76D52: 41 8D 50 26                       -  lea edx,[r8+26]
"re7.exe"+7B76D56: E8 15 92 7B 01                    -  call re7.exe+932FF70
"re7.exe"+7B76D5B: E9 EF 04 00 00                    -  jmp re7.exe+7B7724F
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>205</ID>
              <Description>"FOV - Set to value you want."</Description>
              <LastState Value="89.99996185" RealAddress="0A212E88"/>
              <VariableType>Float</VariableType>
              <Address>"re7.exe"+07046520</Address>
              <Offsets>
                <Offset>5F8</Offset>
                <Offset>A8</Offset>
                <Offset>30</Offset>
                <Offset>D8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>207</ID>
              <Description>"Extra Pointers (BackUp)- Incase Above shows ???"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>203</ID>
                  <Description>"FOV - Set to value you want."</Description>
                  <LastState Value="89.99996185" RealAddress="0A212E88"/>
                  <VariableType>Float</VariableType>
                  <Address>"re7.exe"+07046520</Address>
                  <Offsets>
                    <Offset>5F8</Offset>
                    <Offset>A8</Offset>
                    <Offset>98</Offset>
                    <Offset>98</Offset>
                    <Offset>D8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>206</ID>
                  <Description>"FOV - Set to value you want."</Description>
                  <LastState Value="89.99996185" RealAddress="0A212E88"/>
                  <VariableType>Float</VariableType>
                  <Address>"re7.exe"+07075380</Address>
                  <Offsets>
                    <Offset>5F8</Offset>
                    <Offset>A8</Offset>
                    <Offset>D0</Offset>
                    <Offset>28</Offset>
                    <Offset>398</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>54</ID>
      <Description>"Statistics (Herbs, Inventory Box, Time, Mr. Everywhere)"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>4080FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>58</ID>
          <Description>"Herbs (Total Used)"</Description>
          <LastState Value="0" RealAddress="0844DE10"/>
          <VariableType>4 Bytes</VariableType>
          <Address>"re7.exe"+07047DA0</Address>
          <Offsets>
            <Offset>180</Offset>
            <Offset>80</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"Inventory Box (Total Used)"</Description>
          <LastState Value="0" RealAddress="0844DE80"/>
          <VariableType>4 Bytes</VariableType>
          <Address>"re7.exe"+07047DA0</Address>
          <Offsets>
            <Offset>1F0</Offset>
            <Offset>80</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Mr.Everywhere  (Total Found)"</Description>
          <LastState Value="20" RealAddress="0A15DE78"/>
          <VariableType>4 Bytes</VariableType>
          <Address>"re7.exe"+07049000</Address>
          <Offsets>
            <Offset>248</Offset>
            <Offset>2C8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Time Played"</Description>
          <LastState Value="2491.339111" RealAddress="08AB53B0"/>
          <VariableType>Float</VariableType>
          <Address>"re7.exe"+07047F00</Address>
          <Offsets>
            <Offset>120</Offset>
            <Offset>A8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>76</ID>
      <Description>"Inventory (Bag, Box, Swapper)"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Item Swapper"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$Lua}
if syntaxcheck then return end

ResidentEvil7_basePtr = 're7.exe+0707FCD0'

ResidentEvil7_BagItemCount    =     '[['..ResidentEvil7_basePtr..']+60]+28'
ResidentEvil7_BagItemName     = '[[[[[['..ResidentEvil7_basePtr..']+60]+20]+__]+28]+80]+24'
ResidentEvil7_BagItemQuantity =  '[[[[['..ResidentEvil7_basePtr..']+60]+20]+__]+28]+88'

ResidentEvil7_BagItemClass =       '[[[[['..ResidentEvil7_basePtr..']+60]+20]+__]+28]+80'
ResidentEvil7_BagItemClass_ptr1 = '[[[[[['..ResidentEvil7_basePtr..']+60]+20]+__]+28]+80]+0'
ResidentEvil7_BagItemClass_ptr2 = '[[[[[['..ResidentEvil7_basePtr..']+60]+20]+__]+28]+80]+18'

ResidentEvil7_Items =
{'== Ammo ==',
'MagnumBullet:44 Mag Ammo',
'BurnerBullet:Burner Fuel',
'HandgunBulletL:Enhanced Handgun Ammo',
'FlameBulletS:Flame Rounds',
'HandgunBullet:Handgun Ammo',
'UnlimitedAmmo:Infinite Ammo',
'MachineGunBullet:Machine Gun Ammo',
'AcidBulletS:Neuro Rounds',
'ShotgunBullet:Shotgun Ammo',
'',
'== Body Parts ==',
'HandCutOff:Ethans Hand',
'EthanLeg:Ethans Leg',
'',
'== Coins ==',
'Coin:Antique Coin',
'PowerUpCoin01A:Assault Coin',
'GoodLuckCoinA:Defense Coin',
'PowerUpCoin01B:Iron Defense Coin',
'',
'== Crafting ==',
'ChemicalS:Chem Fluid',
'Gunpowder:Gun Powder',
'RepairKit:Gun Repair Kit',
'ChemicalL:Seperating Agent',
'Alcohol:Solid Fuel',
'ChemicalM:Strong Chem Fluid',
'Flower:Supplements',
'',
'== Documents/Books ==',
'MailMia:Email from Mia',
'MiaDriversLicense:Mia Driving License',
'ProposalBookFf:Project Proposal',
'',
'== Keys ==',
'CabinKey:Captains Cabin Locker Key',
'EthanCarKey:Car Key',
'SpareKey:Corrosive',
'TalismanKey:Crow Key',
'WorkroomKey:Dissection Room Key',
'3CrestKeyA:Dogs Head (Blue)',
'3CrestKeyC:Dogs Head (Red)',
'3CrestKeyB:Dogs Head (White)',
'FloorDoorKey:Hatch Key',
'LucasCardKey:Keycard (Blue)',
'LucasCardKey2:Keycard (Red)',
'CylinderKey:Lock Pick',
'EntranceHallKey:Ox Statuette',
'MorgueKey:Scorpion Key',
'MasterKey:Snake Key',

'',
'== Maps (Treasure Maps) ==',
'TreasureMap03:Treasure Photo (Master Bedroom)',
'TreasureMap01:Treasure Photo (Morgue)',
'TreasureMap02:Treasure Photo (Old House)',
'',
'== Medicine ==',
'RemedyM:First Aid Med',
'RemedyL:First Aid Med Strong',
'Herb:Herb',
'EyeDrops:Psychostimulants',
'',
'== Mission Items ==',
'Battery:Battery',
'ChainCutter:Bolt Cutters',
'BrokenHandgun_M19:Broken Handgun',
'BrokenShotgun_DB:Broken Shotgun',
'BurnerPartsA:Burner Grip',
'BurnerPartsB:Burner Nozzle',
'PendulumClock:Clock Pendulum',
'Crank:Crank',
'SerumMaterialA:D-Series Arm',
'SerumMaterialB:D-Series Head',
'SerumTypeE:E-Necrotoxin',
'EvelynRadar1:Eveline Strange Bottle',
'EvelynRadar2:Eveline Tissue Samples (1)',
'EvelynRadar3:Eveline Tissue Samples (2)',
'EvelynRadar4:Eveline Tissue Samples (3)',
'Fuse:Fuse',
'FuseCh4:General Purpose Fuse',
'Lantern:Lantern',
'EvOpener:Lug Wrench',
'ToyShotgun:Model Shotgun',
'EvCable:Power Cable',
'SerumComplete:SerumComplete',
'SilhouettePazzlePieceOldHouse:Stone Statuette',
'Timebomb:Time bomb',
'DummyAxe:Toy Axe',
'SilhouettePazzlePiece:Wooden Statuette',
'',
'== Mission Items (HappyBirthday) ==',
'Balloonbomb:Balloon',
'Candle:Candle',
'Glasses:Dirty Telescope',
'ScrewFinger:Dummy Finger',
'Quill:Quill Pen',
'Valve:Valve Handle',
'SpringCoil:Winding Key',
'',
'== Other ==',
'SupplyBoxA:Box from Mia (Closed)',
'SupplyBoxOpenedA:Box from Mia (Opened)',
'SaveTape:Cassette Tape (Save)',
'',
'== Player Upgrades ==',
'Depressant:Stabilizer (Faster Reload)',
'Stimulant:Steroids (Increase Max Health)',
'BookDefence01:The Secrets Of Defence',
'AlphaGrass:X-ray Glasses',
'',
'== Videotapes ==',
'FoundFootage000:Derelict House Footage (1)',
'FoundFootage020:Derelict House Footage (2)',
'FoundFootage010:FoundFootage010',
'FoundFootage040:Happy Birthday',
'FoundFootage030:Mia',
'FoundFootage050:Old Videotape',

'',
'== Weapons - Firearms ==',
'Magnum:44 Mag',
'Handgun_Albert:Albert-01',
'Handgun_Albert_Reward:Albert-01 R',
'Burner:Flamethrower',
'Handgun_G17:G17 Handgun',
'GrenadeLauncher:Grenade Launcher',
'Handgun_M19:M19 Handgun',
'Shotgun_DB:M21 Shotgun',
'Shotgun_M37:M37 Shotgun',
'Handgun_MPM:MPM Handgun',
'MachineGun:P19 Machine Gun',
'',
'== Weapons - Melee ==',
'HandAxe:Axe',
'ChainSaw:Chain Saw',
'CircularSaw:Circular Saw',
'Bar:Crowbar',
'Knife:Knife',
'MiaKnife:Survival Knife',
'',
'== Weapons - Thrown ==',
'LiquidBomb:Remote Bomb'
}

ResidentEvil7_Items_NameDescBinds = {}

form_ResidentEvil7_itemswap.lbAvailableItems.clear()
for i,v in ipairs(ResidentEvil7_Items) do
  local listboxNewItem = v:gsub('(.-):','')
  local itemInternalName = v:match('(.-):')
  form_ResidentEvil7_itemswap.lbAvailableItems.Items.add(listboxNewItem)
  if itemInternalName~=nil then
    ResidentEvil7_Items_NameDescBinds[itemInternalName] = listboxNewItem
    ResidentEvil7_Items_NameDescBinds[listboxNewItem] = itemInternalName
  end
end

function ResidentEvil7_refreshBagItems()
  --refreshing bag items
  local index = form_ResidentEvil7_itemswap.lbBagItems.ItemIndex
  form_ResidentEvil7_itemswap.lbBagItems.clear()

  local itemCount = readInteger(ResidentEvil7_BagItemCount) or 0
  for slot=1,itemCount do
    local offset = string.format('%X',(slot-1)*8+0x30)
    local name = readString(ResidentEvil7_BagItemName:gsub('__',offset), 128, true)
    local nameEx = ResidentEvil7_Items_NameDescBinds[name] or name
    form_ResidentEvil7_itemswap.lbBagItems.Items.add(nameEx)
  end
  if index&lt;itemCount then
    form_ResidentEvil7_itemswap.lbBagItems.ItemIndex = index
  end

  ResidentEvil7_ListBoxSelChange()
end

function ResidentEvil7_ListBoxSelChange()
  local bagItems = form_ResidentEvil7_itemswap.lbBagItems
  local availItems = form_ResidentEvil7_itemswap.lbAvailableItems

  if bagItems.ItemIndex==-1 or availItems.ItemIndex==-1 then
    form_ResidentEvil7_itemswap.btnSwap.Enabled=false
    return
  end

  local selItemText = availItems.Items[availItems.ItemIndex]

  if selItemText=='' or selItemText:match('==') then
    form_ResidentEvil7_itemswap.btnSwap.Enabled=false
    return
  end

  form_ResidentEvil7_itemswap.btnSwap.Enabled=true
end

function ResidentEvil7_swapSelectedItem()
  local bagItems = form_ResidentEvil7_itemswap.lbBagItems
  local availItems = form_ResidentEvil7_itemswap.lbAvailableItems
  if bagItems.ItemIndex==-1 or availItems.ItemIndex==-1 then return end

  local offset = string.format('%X',(bagItems.ItemIndex)*8+0x30)
  local ptr1 = readQword((ResidentEvil7_BagItemClass_ptr1:gsub('__',offset)))
  local ptr2 = readQword((ResidentEvil7_BagItemClass_ptr2:gsub('__',offset)))
  local name = ResidentEvil7_Items_NameDescBinds[availItems.Items[availItems.ItemIndex]]
  local input="8:"..ptr1.." 4:* 4:* 4:0 4:0 8:"..ptr2.." 4:"..(#name).." su:'"..name.."'"

  local ms = createMemScan()
  ms.OnlyOneResult = true
  ms.firstScan(soExactValue, vtGrouped, rtTruncated, input, '',
               '0', '7fffffffffffffff' ,'-X+W-C' ,fsmAligned ,"4",
               false, false, false, false)
  ms.waitTillDone()
  local address = ms.Result
  ms.destroy()

  if address then
    writeQword(ResidentEvil7_BagItemClass:gsub('__',offset),address)
    ResidentEvil7_refreshBagItems()
    form_ResidentEvil7_itemswap.btnSwap.Caption = 'Succeeded'
    createTimer(nil,true).OnTimer = function(t) t.destroy()
     form_ResidentEvil7_itemswap.btnSwap.Caption = 'Swap' end
  else
    form_ResidentEvil7_itemswap.btnSwap.Caption = 'Failed'
    createTimer(nil,true).OnTimer = function(t) t.destroy()
     form_ResidentEvil7_itemswap.btnSwap.Caption = 'Swap' end
  end
end

function ResidentEvil7_itemSwapShow()
  ResidentEvil7_refreshBagItems()
  form_ResidentEvil7_itemswap.show()
end

function ResidentEvil7_itemSwapHide()
  form_ResidentEvil7_itemswap.hide()
end

function ResidentEvil7_itemSwapOnClose()
  local itemswapperMR = getTableEntry('Item Swapper')
  itemswapperMR.Active = false
  return caNone
end

form_ResidentEvil7_itemswap.OnClose = ResidentEvil7_itemSwapOnClose
form_ResidentEvil7_itemswap.lbBagItems.OnSelectionChange = ResidentEvil7_ListBoxSelChange
form_ResidentEvil7_itemswap.lbAvailableItems.OnSelectionChange = ResidentEvil7_ListBoxSelChange
form_ResidentEvil7_itemswap.btnSwap.OnClick = ResidentEvil7_swapSelectedItem
form_ResidentEvil7_itemswap.btnRefresh.OnClick = ResidentEvil7_refreshBagItems

ResidentEvil7_itemSwapShow()
{$Asm}

[DISABLE]
{$Lua}
if syntaxcheck then return end
ResidentEvil7_itemSwapHide()
{$Asm}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Bag Items"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

{$Lua}
 local basePtr = 're7.exe+0707FCD0'
 local itemCountAddress     =      '[['..basePtr..']+60]+28'
 local itemNameAddress      =  '[[[[[['..basePtr..']+60]+20]+__]+28]+80]+24'
 local itemNameOffsets = {0x24,0x80,0x28,0,0x20,0x60} -- last is first, first is last
 local itemQuantityAddress  =   '[[[[['..basePtr..']+60]+20]+__]+28]+88'
 local itemQuantityOffsets = {0x88,0x28,0,0x20,0x60} -- last is first, first is last

 if syntaxcheck then return end

 local al=getAddressList()
 local mainMR = al.getMemoryRecordByDescription('Bag Items')
 while mainMR.Count&gt;0 do mainMR[0].destroy() end

 local itemCount = readInteger(itemCountAddress) or 0

 local info = al.createMemoryRecord()
 info.Description = 'reenable to refresh'
 info.appendToEntry(mainMR)
 info.Type = vtString
 info.String.Size = 0

 for slot=1,itemCount do
   local offset = string.format('%X',(slot-1)*8+0x30)
   local name = readString(itemNameAddress:gsub('__',offset), 128, true)
   local newMR = al.createMemoryRecord()
   newMR.Type = vtDword
   newMR.Description = 'Slot '..(slot)..', '..name..' quantity'
   itemQuantityOffsets[3] = (slot-1)*8+0x30
   newMR.setAddress (basePtr, itemQuantityOffsets)
   newMR.appendToEntry(mainMR)

   local newMR2 = al.createMemoryRecord()
   newMR2.Type = vtString
   newMR2.String.Size = 128
   newMR2.String.Unicode = true
   newMR2.Description = 'Slot '..(slot)..', '..name
   itemNameOffsets[4] = (slot-1)*8+0x30
   newMR2.setAddress (basePtr, itemNameOffsets)
   newMR2.appendToEntry(newMR)
 end
{$Asm}

[DISABLE]
{$Lua}
 if syntaxcheck then return end
 local mainMR = getAddressList().getMemoryRecordByDescription('Bag Items')
 while mainMR.Count&gt;0 do mainMR[0].destroy() end
{$Asm}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Box Items"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

{$Lua}
 local basePtr = 're7.exe+0707FCD0'
 local itemBoxCountAddress     =     '[[['..basePtr..']+58]+68]+68'
 local itemBoxNameAddress      =  '[[[[[['..basePtr..']+58]+68]+60]+__]+20]+24'
 local itemBoxNameOffsets = {0x24,0x20,0,0x60,0x68,0x58} -- last is first, first is last
 local itemBoxQuantityAddress  =   '[[[[['..basePtr..']+58]+68]+60]+__]+28'
 local itemBoxQuantityOffsets = {0x28,0,0x60,0x68,0x58} -- last is first, first is last

 if syntaxcheck then return end

 local al=getAddressList()
 local mainMR = al.getMemoryRecordByDescription('Box Items')
 while mainMR.Count&gt;0 do mainMR[0].destroy() end

 local itemCount = readInteger(itemBoxCountAddress) or 0

 local info = al.createMemoryRecord()
 info.Description = 'reenable to refresh'
 info.appendToEntry(mainMR)
 info.Type = vtString
 info.String.Size = 0

 for slot=1,itemCount do
   local offset = string.format('%X',(slot-1)*8+0x30)
   local name = readString(itemBoxNameAddress:gsub('__',offset), 128, true)
   local newMR = al.createMemoryRecord()
   newMR.Type = vtDword
   newMR.Description = 'Slot '..(slot)..', '..name..' quantity'
   itemBoxQuantityOffsets[2] = (slot-1)*8+0x30
   newMR.setAddress (basePtr, itemBoxQuantityOffsets)
   newMR.appendToEntry(mainMR)

   local newMR2 = al.createMemoryRecord()
   newMR2.Type = vtString
   newMR2.String.Size = 128
   newMR2.String.Unicode = true
   newMR2.Description = 'Slot '..(slot)..', '..name
   itemBoxNameOffsets[3] = (slot-1)*8+0x30
   newMR2.setAddress (basePtr, itemBoxNameOffsets)
   newMR2.appendToEntry(newMR)
 end
{$Asm}

[DISABLE]
{$Lua}
 if syntaxcheck then return end
 local mainMR = getAddressList().getMemoryRecordByDescription('Box Items')
 while mainMR.Count&gt;0 do mainMR[0].destroy() end
{$Asm}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>217</ID>
      <Description>"Extra/s:"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"For AutoSplitter"</Description>
          <Options moHideChildren="1" moManualExpandCollapse="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>8</ID>
              <Description>"autoSplitHelper"</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$Lua}
 if syntaxcheck then return end

 -- fill in names of key items
 local keyItems = {['MorgueKey']=false,    -- Scorpion Key
                   ['WorkroomKey']=false,  -- Dissection Room Key
                   ['FloorDoorKey']=false,  -- Floor Hatch Key
                   ['EthanCarKey']=false,  -- Car Key
                   ['EntranceHallKey']=false,  -- Ox Statuette
                   ['3CrestKeyA']=false,  -- Blue Dogs Head
                   ['3CrestKeyB']=false,  -- White Dogs Head
                   ['3CrestKeyC']=false,  -- Red Dogs Head
                   ['CylinderKey']=false,  -- Lock Pick
                   ['TalismanKey']=false,  -- Crow Key
                   ['MasterKey']=false,  -- Snake Key
                   ['LucasCardKey']=false,  -- Keycard Blue
                   ['LucasCardKey2']=false,  -- Keycard Red
                   ['SpareKey']=false,  -- Corrosive
                   ['CabinKey']=false,  -- Captains Locker Key
 }


 --use new ptr base after game update
 local basePtr = 're7.exe+0707FCD0'

 local itemCountAddress     =      '[['..basePtr..']+60]+28'
 local itemNameAddress      =  '[[[[[['..basePtr..']+60]+20]+__]+28]+80]+24'

 local itemBoxCountAddress     =     '[[['..basePtr..']+58]+68]+68'
 local itemBoxNameAddress      =  '[[[[[['..basePtr..']+58]+68]+60]+__]+20]+24'

 fullAccess(getAddress('re7.exe+550'),4)  -- make this address writable
 writeInteger('re7.exe+550',0)            -- set count of owned keyItems to zero

 if autoSplitTimer==mil then autoSplitTimer = createTimer(nil,false) end
 autoSplitTimer.Interval = 1000
 autoSplitTimer.Enabled = true

 autoSplitTimer.OnTimer = function (t)

   local foundKeyItemsCount=0

   -- bag
   local count = readInteger(itemCountAddress) or 0
   for slot=1,count do
     local offset = string.format('%X',(slot-1)*8+0x30)
     local address = itemNameAddress:gsub('__',offset)
     local itemName = readString(address,128,true)
     if keyItems[itemName]==false then
       -- key items found
       keyItems[itemName]=true
       foundKeyItemsCount = foundKeyItemsCount + 1
     end
   end

   -- box
   count = readInteger(itemBoxCountAddress) or 0
   for slot=1,count do
     local offset = string.format('%X',(slot-1)*8+0x30)
     local address = itemBoxNameAddress:gsub('__',offset)
     local itemName = readString(address,128,true)
     if keyItems[itemName]==false then
       -- key items found
       keyItems[itemName]=true
       foundKeyItemsCount = foundKeyItemsCount + 1
     end
   end

   writeInteger('re7.exe+550', foundKeyItemsCount)
 end

{$Asm}

[DISABLE]
{$Lua}
 if syntaxcheck then return end
 autoSplitTimer.Enabled = false
 writeInteger('re7.exe+550',0)            -- set count of owned keyItems to zero
{$Asm}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>9</ID>
                  <Description>"owned key items"</Description>
                  <LastState Value="0" RealAddress="140000550"/>
                  <VariableType>4 Bytes</VariableType>
                  <Address>re7.exe+550</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>10</ID>
              <Description>"Area name"</Description>
              <Options moHideChildren="1" moManualExpandCollapse="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>11</ID>
                  <Description>"current area name"</Description>
                  <LastState RealAddress="0B263A60"/>
                  <VariableType>String</VariableType>
                  <Length>128</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>"re7.exe"+07046390</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>700</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12</ID>
                  <Description>"current area name"</Description>
                  <LastState RealAddress="0B263A60"/>
                  <VariableType>String</VariableType>
                  <Length>128</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>"re7.exe"+070B93D8</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>700</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>13</ID>
                  <Description>"current area name"</Description>
                  <LastState RealAddress="0B263A60"/>
                  <VariableType>String</VariableType>
                  <Length>128</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>"re7.exe"+070B9540</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>700</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>14</ID>
                  <Description>"current area name"</Description>
                  <LastState RealAddress="0B263A60"/>
                  <VariableType>String</VariableType>
                  <Length>128</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>"re7.exe"+07046390</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>80</Offset>
                    <Offset>E0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>15</ID>
                  <Description>"current area name"</Description>
                  <LastState RealAddress="0B263A60"/>
                  <VariableType>String</VariableType>
                  <Length>128</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>"re7.exe"+070B93D8</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>80</Offset>
                    <Offset>E0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>16</ID>
                  <Description>"current area name"</Description>
                  <LastState RealAddress="0B263A60"/>
                  <VariableType>String</VariableType>
                  <Length>128</Length>
                  <Unicode>1</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>"re7.exe"+070B9540</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>80</Offset>
                    <Offset>E0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>playerstruct</Name>
      <Address>14E7D0024</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>easykills</Name>
      <Address>1486B9EED</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>eyedropFlagChkAOB</Name>
      <Address> 147D197CA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bEyedropEnabled</Name>
      <Address>14E7D0063</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_Health</Name>
      <Address> 1486B9EED</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_clipAmmo</Name>
      <Address> 147DB5B3C</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
