<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoclipreadAOB,8B 86 7C 01 00 00 0F 96 45 CF)
registersymbol(ammoclipreadAOB)
aobscan(herohealthreadAOB,F3 0F 10 86 10 1E 00 00 0F 57 C9 F3 0F 2A C8 0F 5A C0 0F 5A C9 F2 0F 5E C1 EB 03 0F 57 C0 66 0F 5A C0 F3 0F 11 45 D8)
registersymbol(herohealthreadAOB)
aobscan(cardrivingreadAOB,8B 07 8D 55 C0 52 8B 50 6C)
registersymbol(cardrivingreadAOB)
aobscan(ammopouchreadAOB,5E C3 CC CC CC CC CC CC CC CC CC CC 8B 41 04 C3)
registersymbol(ammopouchreadAOB)

label(pAmmoClip)
registersymbol(pAmmoClip)
label(pHero)
registersymbol(pHero)
label(pHeroDrivingCar)
registersymbol(pHeroDrivingCar)
label(pAmmoPouch)
registersymbol(pAmmoPouch)
label(vCenterCamera)
registersymbol(vCenterCamera)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[esi+0000017C]
mov [pAmmoClip],eax

originalcode:
mov eax,[esi+0000017C]

exit:
jmp returnhere

///

newmem2:
mov [pHero],esi

originalcode2:
movss xmm0,[esi+00001E10]

exit2:
jmp returnhere2

///

newmem6:
lea eax,[edi+1560]
mov [pHeroDrivingCar],eax

originalcode6:
mov eax,[edi]
lea edx,[ebp-40]

exit6:
jmp returnhere6

///

newmem11:
pushfd
cmp esi,[pHero]
jne originalcode11
cmp edx,0
jne originalcode11
mov [pAmmoPouch],ecx

originalcode11:
popfd
mov eax,[ecx+04]
ret
int 3

exit11:
jmp returnhere11

///
pAmmoClip:
dd 0
pHero:
dd 0
pHeroDrivingCar:
dd 0
pAmmoPouch:
dd 0
vCenterCamera:
db 0
///

ammoclipreadAOB: //"SaintsRowIV.exe"+45976D:
jmp newmem
nop
returnhere:

herohealthreadAOB: //"SaintsRowIV.exe"+22045E:
jmp newmem2
nop
nop
nop
returnhere2:

cardrivingreadAOB: //"SaintsRowIV.exe"+88719E:
jmp newmem6
returnhere6:

ammopouchreadAOB+c: //"SaintsRowIV.exe"+BB7790:
jmp newmem11
returnhere11:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoclipreadAOB: //"SaintsRowIV.exe"+45976D:
db 8B 86 7C 01 00 00
//Alt: mov eax,[esi+0000017C]
herohealthreadAOB: //"SaintsRowIV.exe"+22045E:
db F3 0F 10 86 10 1E 00 00
//Alt: movss xmm0,[esi+00001E10]
cardrivingreadAOB: //"SaintsRowIV.exe"+88719E:
db 8B 07 8D 55 C0
//Alt: mov eax,[edi]
//Alt: lea edx,[ebp-40]
ammopouchreadAOB+c: //"SaintsRowIV.exe"+BB7790:
db 8B 41 04 C3 CC
//Alt: mov eax,[ecx+04]
//Alt: ret
//Alt: int 3
unregistersymbol(ammoclipreadAOB)
unregistersymbol(herohealthreadAOB)
unregistersymbol(cardrivingreadAOB)
unregistersymbol(ammopouchreadAOB)
unregistersymbol(pAmmoClip)
unregistersymbol(pHero)
unregistersymbol(pHeroDrivingCar)
unregistersymbol(pAmmoPouch)
unregistersymbol(vCenterCamera)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>151</ID>
          <Description>"[scripts]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Inf. Health"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthsubAOB,F3 0F 11 86 10 1E 00 00 F3 0F 10 86 58 15 00 00)
registersymbol(healthsubAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHero],esi
jne originalcode

push eax
mov eax,[ebp-00000444]
cmp [esi+00001E10],eax
pop eax
jle originalcode
movss xmm0,[esi+00001E10]

originalcode:
movss [esi+00001E10],xmm0

exit:
jmp returnhere

healthsubAOB: //"SaintsRowIV.exe"+5B1E37:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthsubAOB: //"SaintsRowIV.exe"+5B1E37:
db F3 0F 11 86 10 1E 00 00
//Alt: movss [esi+00001E10],xmm0
unregistersymbol(healthsubAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>147</ID>
              <Description>"Inf. Car Health (Driving / Last Driven)"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(carhealthsubAOB,29 48 0C 8B 48 0C 8B 50 08)
registersymbol(carhealthsubAOB)

label(fCarHPPercent)
registersymbol(fCarHPPercent)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
/*cmp [pHeroDrivingCar],0
je originalcode2*/
sub [eax+0C],ecx
mov ecx,[eax+0C]
cmp [pHeroDrivingCar],eax
jne originalcode
/*mov ecx,[eax+04]
mov [eax+0C],ecx*/
fild dword ptr [eax+04]
fmul dword ptr [fCarHPPercent]
fistp dword ptr [eax+0C]
cmp [eax+0C],ecx
jle originalcode
mov ecx,[eax+0C]

originalcode:
popfd
mov [eax+0C],ecx
//sub [eax+0C],ecx
//mov ecx,[eax+0C]

exit:
jmp returnhere

///
fCarHPPercent:
dd (float)0.80
///

carhealthsubAOB: //"SaintsRowIV.exe"+743D89:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
carhealthsubAOB: //"SaintsRowIV.exe"+743D89:
db 29 48 0C 8B 48 0C
//Alt: sub [eax+0C],ecx
//Alt: mov ecx,[eax+0C]
unregistersymbol(carhealthsubAOB)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>148</ID>
                  <Description>"min % of Car HP"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>fCarHPPercent</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>107</Key>
                      </Keys>
                      <Value>0.80</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>109</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1</ID>
              <Description>"Inf. Ammo"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoclipsubAOB,0F B7 82 AA 00 00 00 29 07)
registersymbol(ammoclipsubAOB)
aobscan(ammopouchsubAOB,8B C2 2B D0 89 56 04 8B 56 08)
registersymbol(ammopouchsubAOB)

label(iMinAmmoPouch)
registersymbol(iMinAmmoPouch)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movzx eax,word ptr [edx+000000AA]
sub [edi],eax
cmp [pAmmoClip],edi
jne originalcode
cmp [edi],1
jge originalcode
mov [edi],1

originalcode:
//movzx eax,word ptr [edx+000000AA]
//sub [edi],eax

exit:
jmp returnhere

///

newmem2:
//cmp [pAmmoPouch],esi
//jne originalcode2
mov [pAmmoPouch],esi
cmp edx,[iMinAmmoPouch]
jge originalcode2
mov edx,[esi+04]

originalcode2:
mov [esi+04],edx
mov edx,[esi+08]

exit2:
jmp returnhere2

///
iMinAmmoPouch:
dd #10
///

ammoclipsubAOB: //"SaintsRowIV.exe"+64BF17:
jmp newmem
nop
nop
nop
nop
returnhere:

ammopouchsubAOB+4: //"SaintsRowIV.exe"+81E604:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoclipsubAOB: //"SaintsRowIV.exe"+64BF17:
db 0F B7 82 AA 00 00 00 29 07
//Alt: movzx eax,word ptr [edx+000000AA]
//Alt: sub [edi],eax
ammopouchsubAOB+4: //"SaintsRowIV.exe"+81E604:
db 89 56 04 8B 56 08
//Alt: mov [esi+04],edx
//Alt: mov edx,[esi+08]
unregistersymbol(ammoclipsubAOB)
unregistersymbol(ammopouchsubAOB)
unregistersymbol(iMinAmmoPouch)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>172</ID>
                  <Description>"Reload Anytime"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoclipreloadcheckAOB,57 53 E8 ** ** ** ** 83 C4 08 39 83 7C 01 00 00)
registersymbol(ammoclipreloadcheckAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+0000017C],eax
jl originalcode
dec [ebx+0000017C]
cmp [pAmmoPouch],0
je originalcode
push eax
mov eax,[pAmmoPouch]
inc [eax+4]
pop eax

originalcode:
cmp [ebx+0000017C],eax

exit:
jmp returnhere

ammoclipreloadcheckAOB+a: //"SaintsRowIV.exe"+6408F3:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoclipreloadcheckAOB+a: //"SaintsRowIV.exe"+6408F3:
db 39 83 7C 01 00 00
//Alt: cmp [ebx+0000017C],eax
unregistersymbol(ammoclipreloadcheckAOB)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>158</ID>
              <Description>"Camera Toggle"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(x_shiftreadAOB,D9 46 34 D9 58 34 D9 46 38 D9 58 38 D9 46 3C D9 58 3C 0F)
registersymbol(x_shiftreadAOB)

label(camKeyPressed)
label(b2CamerasOnly)
registersymbol(b2CamerasOnly)
label(bCamKey)
registersymbol(bCamKey)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(setCenter)
label(setCenterStand)
label(setCenterCrouch)
label(setLeft)
label(setLeftStand)
label(setLeftCrouch)
label(setRight)
label(setRightStand)
label(setRightCrouch)
label(resetCamKey)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[bCamKey]
pushad
push eax
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne resetCamKey
cmp byte ptr [camKeyPressed],00
jne originalcode
mov byte ptr [camKeyPressed],01
cmp dword ptr [esi+34],(float)0.6
jge setCenter
cmp dword ptr [esi+34],0
jge setLeft
cmp dword ptr [esi+34],(float)-0.6
jle setRight
jmp originalcode

setCenter:
mov byte ptr [vCenterCamera],0
mov dword ptr [esi+34],0
cmp dword ptr [esi+04],(float)1.8
je setCenterStand
cmp dword ptr [esi+04],(float)1.6
je setCenterStand
cmp dword ptr [esi+04],(float)1.65
je setCenterStand
cmp dword ptr [esi+04],(float)1.650000095
je setCenterStand
cmp dword ptr [esi+04],(float)1.3
je setCenterCrouch
/*cmp byte ptr [eax+1ef7],0
je setCenterStand
cmp byte ptr [eax+1ef7],4*/
je setCenterCrouch
jmp originalcode

setCenterStand:
mov dword ptr [esi+04],(float)1.95
jmp originalcode

setCenterCrouch:
mov dword ptr [esi+04],(float)1.4
jmp originalcode

setLeft:
cmp byte ptr [b2CamerasOnly],01
je setRight
mov byte ptr [vCenterCamera],02
mov dword ptr [esi+34],(float)-0.6
cmp dword ptr [esi+04],(float)1.95
/*cmp byte ptr [eax+1ef7],0*/
je setLeftStand
cmp dword ptr [esi+04],(float)1.4
/*cmp byte ptr [eax+1ef7],4*/
je setLeftCrouch
jmp originalcode

setLeftStand:
mov dword ptr [esi+04],(float)1.65
jmp originalcode

setLeftCrouch:
mov dword ptr [esi+04],(float)1.3
jmp originalcode

setRight:
mov byte ptr [vCenterCamera],01
mov dword ptr [esi+34],(float)0.6
cmp dword ptr [esi+04],(float)1.95
/*cmp byte ptr [eax+1ef7],0*/
je setRightStand
cmp dword ptr [esi+04],(float)1.4
/*cmp byte ptr [eax+1ef7],4*/
je setRightCrouch
jmp originalcode

setRightStand:
mov dword ptr [esi+04],(float)1.65
jmp originalcode

setRightCrouch:
mov dword ptr [esi+04],(float)1.3
jmp originalcode

resetCamKey:
mov byte ptr [camKeyPressed],00
jmp originalcode

originalcode:
pop eax
fld dword ptr [esi+34]
fstp dword ptr [eax+34]

exit:
jmp returnhere

///
camKeyPressed:
db 01
b2CamerasOnly:
db 00
bCamKey:
db 04 //6F: num/, 04: middle mouse button
///

x_shiftreadAOB: //"SaintsRowIV.exe"+174965:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
x_shiftreadAOB: //"SaintsRowIV.exe"+174965:
db D9 46 34 D9 58 34
//Alt: fld dword ptr [esi+34]
//Alt: fstp dword ptr [eax+34]
unregistersymbol(x_shiftreadAOB)
unregistersymbol(b2CamerasOnly)
unregistersymbol(bCamKey)

/*                     crough       cAim         stand        sAim
04 lookat_offset: Y  - 1.299999952	1.299999952  1.650000095  1.600000024
28 z_dist            - 4.250294209	2.000624895  4.250294209  2.000624895
34 x_shift           - 0.6000000238	0.6000000238 0.6000000238 0.6000000238
*/
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>183</ID>
                  <Description>"Stay in Toggled Camera"</Description>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(x_shiftcontrolAOB,F3 0F 11 4E 34 F3 0F 10 48 38)
registersymbol(x_shiftcontrolAOB)
aobscan(flookatoffsetycontrolAOB,0F 28 0F 0F 5C 08)
registersymbol(flookatoffsetycontrolAOB)

label(fXShift)
registersymbol(fXShift)
label(fLookatOffsetY)
registersymbol(fLookatOffsetY)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(setCenterXShift)
label(setRightXShift)
label(setLeftXShift)
label(readyCameraXShift)
label(setCameraXShift)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isCenterCamera)
label(isCenterStnading)
label(isCenterCrouching)
label(setCameraLookatOffsetY)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
cmp byte ptr [vCenterCamera],00
je setCenterXShift
cmp byte ptr [vCenterCamera],01
//je setRightXShift
je originalcode
cmp byte ptr [vCenterCamera],02
je setLeftXShift
jmp originalcode

setCenterXShift:
mov dword ptr [fXShift],(float)0.0
jmp readyCameraXShift

setRightXShift:
mov dword ptr [fXShift],(float)0.6
jmp readyCameraXShift

setLeftXShift:
mov dword ptr [fXShift],(float)-0.6
jmp readyCameraXShift

readyCameraXShift:
cmp byte ptr [eax+1ef7],0
je setCameraXShift
cmp byte ptr [eax+1ef7],4
je setCameraXShift
jmp originalcode

setCameraXShift:
movss xmm1,[fXShift]
jmp exit

originalcode:
movss [esi+34],xmm1

exit:
pop eax
jmp returnhere

///

newmem2:
movaps xmm1,[edi]

pushfd
pushad
cmp byte ptr [vCenterCamera],00
je isCenterCamera
/*cmp byte ptr [vCenterCamera],01
//je setNotCenterLookatOffsetY
je originalcode2
cmp byte ptr [vCenterCamera],02
je setNotCenterLookatOffsetY*/
jmp originalcode2

isCenterCamera:
mov eax,[pHero]
cmp dword ptr [edi+04],(float)1.8
je isCenterStnading
cmp dword ptr [edi+04],(float)1.6
je isCenterStnading
cmp dword ptr [edi+04],(float)1.65
je isCenterStnading
cmp dword ptr [edi+04],(float)1.650000095
je isCenterStnading
cmp dword ptr [edi+04],(float)1.3
je isCenterCrouching
/*cmp byte ptr [eax+1ef7],0
je isCenterStnading
cmp byte ptr [eax+1ef7],4
je isCenterCrouching*/
jmp originalcode2

isCenterStnading:
mov dword ptr [fLookatOffsetY],(float)1.95
jmp setCameraLookatOffsetY

isCenterCrouching:
mov dword ptr [fLookatOffsetY],(float)1.4
jmp setCameraLookatOffsetY

setCameraLookatOffsetY:
//movaps xmm1,[fLookatOffsetY]

movaps [ebp-20],xmm1
mov eax,[fLookatOffsetY]
mov dword ptr [ebp-1C],eax
movaps xmm1,[ebp-20]
jmp originalcode2

originalcode2:
popad
popfd
//movaps xmm1,[edi]
subps xmm1,[eax]

exit2:
jmp returnhere2

///
fXShift:
dd 0
fLookatOffsetY:
dd 0
///

x_shiftcontrolAOB: //"SaintsRowIV.exe"+176FB2:
jmp newmem
returnhere:

flookatoffsetycontrolAOB: //"SaintsRowIV.exe"+176F00:
jmp newmem2
nop
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
x_shiftcontrolAOB: //"SaintsRowIV.exe"+176FB2:
db F3 0F 11 4E 34
//Alt: movss [esi+34],xmm1
flookatoffsetycontrolAOB: //"SaintsRowIV.exe"+176F00:
db 0F 28 0F 0F 5C 08
//Alt: movaps xmm1,[edi]
//Alt: subps xmm1,[eax]
unregistersymbol(x_shiftcontrolAOB)
unregistersymbol(flookatoffsetycontrolAOB)
unregistersymbol(fXShift)
unregistersymbol(fLookatOffsetY)

/*
34 33 D3 3F 00 00 00 00 00 00 00 00 7E 8C A7 BF FD BC 75 3F 00 00 00 00 00 00 00 00 00 00 48 42 7B BE 40 3C 69 02 88 40 00 00 00 3F 00 00 00 00 9A 99 19 3F

34 33 D3 3F 00 00 00 00 00 00 00 00 ** ** ** ** ** ** ** ** 00 00 00 00 00 00 00 00 ** ** ** ** ** ** ** ** 69 02 88 40 ** ** ** 3F 00 00 00 00 9A 99 19 3F
*/
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>184</ID>
                  <Description>"Camera Toggle Key (default: 04==MouseMiddleButton)"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bCamKey</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>56</ID>
                  <Description>"b2CamerasOnly"</Description>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>b2CamerasOnly</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>162</ID>
              <Description>"Zoom Center Camera (press num*)"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(centercamreainjpointAOB,8A 56 30 88 50 30)
registersymbol(centercamreainjpointAOB)

label(camKeyBPressed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(resetCamKeyB)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 6A      //num*
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne resetCamKeyB
cmp byte ptr [camKeyBPressed],00
jne originalcode
mov byte ptr [camKeyBPressed],01
mov dword ptr [esi+04],(float)1.5
mov dword ptr [esi+34],0
fld dword ptr [esi+28]
mov dword ptr [esi+28],(float)1.0
fsub dword ptr [esi+28]
fstp dword ptr [esi+28]
cmp dword ptr [esi+28],(float)1.5
jge originalcode
mov dword ptr [esi+28],(float)4.5
jmp originalcode

resetCamKeyB:
mov byte ptr [camKeyBPressed],00
jmp originalcode

originalcode:
mov dl,[esi+30]
mov [eax+30],dl

exit:
jmp returnhere

///
camKeyBPressed:
db 0
///

centercamreainjpointAOB: //"SaintsRowIV.exe"+17495F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
centercamreainjpointAOB: //"SaintsRowIV.exe"+17495F:
db 8A 56 30 88 50 30
//Alt: mov dl,[esi+30]
//Alt: mov [eax+30],dl
unregistersymbol(centercamreainjpointAOB)
unregistersymbol(camKeyBPressed)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>150</ID>
          <Description>"[pointers]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>173</ID>
              <Description>"Health"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>1E10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"Car Health (Driving / Last Drived)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHeroDrivingCar</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>149</ID>
                  <Description>"max"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHeroDrivingCar</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>11</ID>
              <Description>"Ammo Clip of the gun using"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoClip</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>12</ID>
                  <Description>"Ammo Pouch of the gun using"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pAmmoPouch</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>188</ID>
              <Description>"Super Sprint flag (Ctrl/Alt 9 - Disable/Enable)"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>2371</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>189</ID>
              <Description>"Super Jump flag (Ctrl/Alt 8 - Disable/Enable)"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>2372</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>18</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>174</ID>
              <Description>"[misc.]"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>10</ID>
                  <Description>"0=standing,4=crouching"</Description>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pHero</Address>
                  <Offsets>
                    <Offset>1EF7</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>157</ID>
                  <Description>"Camera"</Description>
                  <Color>80000008</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>154</ID>
                      <Description>"lookat_offset: Y"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>SaintsRowIV.exe+51AB594</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>155</ID>
                      <Description>"z_dist"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>SaintsRowIV.exe+51AB5B8</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>156</ID>
                      <Description>"x_shift"</Description>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>SaintsRowIV.exe+51AB5C4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"-----------------------------------------"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>1490B96C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>0CEC52AC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>SaintsRowIV.exe+546BD28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>SaintsRowIV.exe+68FC7BC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>1491CCF0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>149AA3A0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>19B7DA0C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>1459696C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>14596960</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>14595400</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(cardrivingreadAOB,8B 07 8D 55 C0 52 8B 50 6C)
registersymbol(cardrivingreadAOB)

label(pHeroCar)
registersymbol(pHeroCar)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[edi+1560]
mov [pHeroCar],eax

originalcode6:
mov eax,[edi]
lea edx,[ebp-40]

exit6:
jmp returnhere6

///
pHeroCar:
dd 0
///

cardrivingreadAOB: //"SaintsRowIV.exe"+88719E:
jmp newmem6
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
cardrivingreadAOB: //"SaintsRowIV.exe"+88719E:
db 8B 07 8D 55 C0
//Alt: mov eax,[edi]
//Alt: lea edx,[ebp-40]
unregistersymbol(cardrivingreadAOB)
unregistersymbol(pHeroCar)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>152</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammopouchreadAOB,5E C3 CC CC CC CC CC CC CC CC CC CC 8B 41 04 C3)
registersymbol(ammopouchreadAOB)

label(pAmmoPouch)
registersymbol(pAmmoPouch)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp esi,[pHero]
jne originalcode11
cmp edx,0
jne originalcode11
mov [pAmmoPouch],ecx

originalcode11:
popfd
mov eax,[ecx+04]
ret
int 3

exit11:
jmp returnhere11

///
pAmmoPouch:
dd 0
///

ammopouchreadAOB+c: //"SaintsRowIV.exe"+BB7790:
jmp newmem11
returnhere11:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
ammopouchreadAOB+c: //"SaintsRowIV.exe"+BB7790:
db 8B 41 04 C3 CC
//Alt: mov eax,[ecx+04]
//Alt: ret
//Alt: int 3
unregistersymbol(ammopouchreadAOB)
unregistersymbol(pAmmoPouch)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>153</ID>
              <Description>"No description"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>163</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0CEA8AD8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>164</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>SaintsRowIV.exe+6BEFB98</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>165</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp esi,06FEFB90
jne originalcode
fstp qword ptr [esi+08]
jmp exit

originalcode:
fstp qword ptr [esi+08]
//mov eax,esi

exit:
mov eax,esi
jmp returnhere

"SaintsRowIV.exe"+B2CF60:
jmp newmem
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"SaintsRowIV.exe"+B2CF60:
db DD 5E 08 8B C6
//Alt: fstp qword ptr [esi+08]
//Alt: mov eax,esi
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>166</ID>
          <Description>"power timer visual"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(fakeTimer)
registersymbol(fakeTimer)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp edx,06FEFB90
jne originalcode
fld qword ptr [fakeTimer]
fst qword ptr [ecx+08]
fstp qword ptr [ecx+08]
fld qword ptr [ecx+08]
fld qword ptr [edx+08]
jmp exit

originalcode:
fld qword ptr [ecx+08]
fld qword ptr [edx+08]

exit:
jmp returnhere

///
fakeTimer:
dq (double)1.0
///

"SaintsRowIV.exe"+B2CCCF:
jmp newmem
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"SaintsRowIV.exe"+B2CCCF:
db DD 41 08 DD 42 08
//Alt: fld qword ptr [ecx+08]
//Alt: fld qword ptr [edx+08]
unregistersymbol(fakeTimer)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>1AFF6E50</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>168</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>1B00D9B0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>169</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Double</VariableType>
          <Address>319CCFBC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>170</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>SaintsRowIV.exe+6BEFD00</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>171</ID>
          <Description>"power ready visual"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp esi,06FEFCF8
jne originalcode
mov cl,0

originalcode:
mov [esi+08],cl
mov eax,esi

exit:
jmp returnhere

"SaintsRowIV.exe"+B2CF6E:
jmp newmem
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"SaintsRowIV.exe"+B2CF6E:
db 88 4E 08 8B C6
//Alt: mov [esi+08],cl
//Alt: mov eax,esi
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>176</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>055AB594</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>177</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>055AB474</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>178</ID>
          <Description>"01"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>056AF384</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>179</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>055AB594</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>180</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>055AB504</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>181</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
subps xmm1,[eax+SaintsRowIV.g_LEngineDefaultPoolId+90638]

exit2:
jmp returnhere2

"SaintsRowIV.exe"+17F268:
jmp newmem2
nop
nop
returnhere2:

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode6:
movaps xmm1,[edi]
subps xmm1,[eax]

exit6:
jmp returnhere6

"SaintsRowIV.exe"+176F00:
jmp newmem6
nop
returnhere6:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"SaintsRowIV.exe"+17F268:
db 0F 5C 88 80 F3 6A 05
//Alt: subps xmm1,[eax+SaintsRowIV.g_LEngineDefaultPoolId+90638]
dealloc(newmem6)
"SaintsRowIV.exe"+176F00:
db 0F 28 0F 0F 5C 08
//Alt: movaps xmm1,[edi]
//Alt: subps xmm1,[eax]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>159</ID>
          <Description>"stay cam work 1/2"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(x_shiftcontrolAOB,F3 0F 11 4E 34 F3 0F 10 48 38)
registersymbol(x_shiftcontrolAOB)

label(fXShift)
registersymbol(fXShift)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(setCenterXShift)
label(setRightXShift)
label(setLeftXShift)
label(setCameraXShift)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [vCenterCamera],00
je setCenterXShift
cmp byte ptr [vCenterCamera],01
//je setRightXShift
je originalcode
cmp byte ptr [vCenterCamera],02
je setLeftXShift
jmp originalcode

setCenterXShift:
mov dword ptr [fXShift],(float)0.0
jmp setCameraXShift

setRightXShift:
mov dword ptr [fXShift],(float)0.6
jmp setCameraXShift

setLeftXShift:
mov dword ptr [fXShift],(float)-0.6
jmp setCameraXShift

setCameraXShift:
movss xmm1,[fXShift]
jmp exit

originalcode:
movss [esi+34],xmm1

exit:
jmp returnhere

///
fXShift:
dd 0
///

x_shiftcontrolAOB: //"SaintsRowIV.exe"+176FB2:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
x_shiftcontrolAOB: //"SaintsRowIV.exe"+176FB2:
db F3 0F 11 4E 34
//Alt: movss [esi+34],xmm1
unregistersymbol(x_shiftcontrolAOB)
unregistersymbol(fXShift)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>182</ID>
          <Description>"stay cam work 2/2"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(flookatoffsetycontrolAOB,0F 28 0F 0F 5C 08)
registersymbol(flookatoffsetycontrolAOB)

label(fLookatOffsetY)
registersymbol(fLookatOffsetY)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isCenterCamera)
label(isCenterStnading)
label(isCenterCrouching)
label(setCameraLookatOffsetY)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
movaps xmm1,[edi]

pushfd
pushad
cmp byte ptr [vCenterCamera],00
je isCenterCamera
/*cmp byte ptr [vCenterCamera],01
//je setNotCenterLookatOffsetY
je originalcode2
cmp byte ptr [vCenterCamera],02
je setNotCenterLookatOffsetY*/
jmp originalcode2

isCenterCamera:
mov eax,[pHero]
cmp byte ptr [eax+1ef7],0
je isCenterStnading
cmp byte ptr [eax+1ef7],4
je isCenterCrouching
jmp originalcode2

isCenterStnading:
mov dword ptr [fLookatOffsetY],(float)1.95
jmp setCameraLookatOffsetY

isCenterCrouching:
mov dword ptr [fLookatOffsetY],(float)1.4
jmp setCameraLookatOffsetY

setCameraLookatOffsetY:
//movaps xmm1,[fLookatOffsetY]

movaps [ebp-20],xmm1
mov eax,[fLookatOffsetY]
mov dword ptr [ebp-1C],eax
movaps xmm1,[ebp-20]
jmp originalcode2

originalcode2:
popad
popfd
//movaps xmm1,[edi]
subps xmm1,[eax]

exit2:
jmp returnhere2

///
fLookatOffsetY:
dd 0
///

flookatoffsetycontrolAOB: //"SaintsRowIV.exe"+176F00:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
flookatoffsetycontrolAOB: //"SaintsRowIV.exe"+176F00:
db 0F 28 0F 0F 5C 08
//Alt: movaps xmm1,[edi]
//Alt: subps xmm1,[eax]
unregistersymbol(flookatoffsetycontrolAOB)
unregistersymbol(fLookatOffsetY)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>175</ID>
          <Description>"stay cam test 1"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isCenterCamera)
label(isCenterStnading)
label(isCenterCrouching)
label(setCameraLookatOffsetY)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
movaps xmm0,[eax]
pushfd
pushad
cmp byte ptr [vCenterCamera],00
je isCenterCamera
/*cmp byte ptr [vCenterCamera],01
//je setNotCenterLookatOffsetY
je originalcode2
cmp byte ptr [vCenterCamera],02
je setNotCenterLookatOffsetY*/
jmp originalcode2

isCenterCamera:
mov ebx,[pHero]
cmp byte ptr [ebx+1ef7],0
je isCenterStnading
cmp byte ptr [ebx+1ef7],4
je isCenterCrouching
jmp originalcode2

isCenterStnading:
mov dword ptr [fLookatOffsetY+4],(float)1.95
je setCameraLookatOffsetY

isCenterCrouching:
mov dword ptr [fLookatOffsetY+4],(float)1.4
je setCameraLookatOffsetY

setCameraLookatOffsetY:
//movss xmm1,[fLookatOffsetY]
movaps xmm0,[fLookatOffsetY]
//mov [ebp-1C],0

//movaps [esp+20],xmm0
//mov eax,[fLookatOffsetY]
//mov dword ptr [esp+24],eax
//movaps xmm0,[esp+20]
jmp originalcode2

originalcode2:
popfd
popad
//movaps xmm0,[eax]
movaps xmm1,[ebp-20]
//addps xmm0,xmm1

exit2:
jmp returnhere2

"SaintsRowIV.exe"+176F6E:
jmp newmem2
nop
nop
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"SaintsRowIV.exe"+176F6E:
db 0F 28 00 0F 28 4D E0 0F 58 C1
//Alt: movaps xmm0,[eax]
//Alt: movaps xmm1,[ebp-20]
//Alt: addps xmm0,xmm1
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>161</ID>
          <Description>"stay cam test 2"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)
label(isCenterCamera)
label(isCenterStnading)
label(isCenterCrouching)
/*label(isCenterCrouchWrong)*/

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
pushad
cmp byte ptr [vCenterCamera],00
je isCenterCamera
/*cmp byte ptr [vCenterCamera],01
//je setNotCenterLookatOffsetY
je originalcode2
cmp byte ptr [vCenterCamera],02
je setNotCenterLookatOffsetY*/
jmp originalcode2

isCenterCamera:
mov eax,[pHero]
cmp byte ptr [eax+1ef7],0
je isCenterStnading
cmp byte ptr [eax+1ef7],4
je isCenterCrouching
jmp originalcode2

isCenterStnading:
mov dword ptr [esi+04],(float)1.95
je exit2

isCenterCrouching:
mov dword ptr [esi+04],(float)1.4
je exit2

/*cmp dword ptr [esi+04],(float)1.95
je exit2
cmp dword ptr [esi+04],(float)1.950000048
je exit2
cmp dword ptr [esi+04],(float)1.399999976
je exit2
cmp dword ptr [esi+04],(float)1.4
je exit2
cmp dword ptr [esi+04],(float)1.299999952
je isCenterCrouchWrong
cmp dword ptr [esi+04],(float)1.3
je isCenterCrouchWrong
jmp originalcode2

isCenterCrouchWrong:
mov dword ptr [esi+04],(float)1.4
jmp originalcode2*/

originalcode2:
movaps [esi],xmm0
//movss xmm0,[edi+34]

exit2:
popad
popfd
movss xmm0,[edi+34]
jmp returnhere2

"SaintsRowIV.exe"+176F78:
jmp newmem2
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"SaintsRowIV.exe"+176F78:
db 0F 29 06 F3 0F 10 47 34
//Alt: movaps [esi],xmm0
//Alt: movss xmm0,[edi+34]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>185</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>SaintsRowIV.exe+5E71D96</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>186</ID>
          <Description>"super sprint (0 enable, 1 disable)"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>15E50261</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>187</ID>
          <Description>"super jump (0 enable, 1 disable)"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>15E50262</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>ammoclipreadAOB</Name>
      <Address> 0085976D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>herohealthreadAOB</Name>
      <Address> 0062045E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cardrivingreadAOB</Name>
      <Address> 00C8719E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammopouchreadAOB</Name>
      <Address> 00FB7784</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoClip</Name>
      <Address>10A00067</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>10A0006B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHeroDrivingCar</Name>
      <Address>10A0006F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoPouch</Name>
      <Address>10A00073</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vCenterCamera</Name>
      <Address>10A00077</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthsubAOB</Name>
      <Address> 009B1E37</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>carhealthsubAOB</Name>
      <Address> 00B43D89</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fCarHPPercent</Name>
      <Address>0EEC0034</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoclipsubAOB</Name>
      <Address> 00A4BF17</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammopouchsubAOB</Name>
      <Address> 00C1E600</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iMinAmmoPouch</Name>
      <Address>10A20049</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoclipreloadcheckAOB</Name>
      <Address> 00A408E9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>x_shiftreadAOB</Name>
      <Address> 00574965</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>b2CamerasOnly</Name>
      <Address>10E6017B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCamKey</Name>
      <Address>10E6017C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>x_shiftcontrolAOB</Name>
      <Address> 00576FB2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>flookatoffsetycontrolAOB</Name>
      <Address> 00576F00</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fXShift</Name>
      <Address>10E70130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fLookatOffsetY</Name>
      <Address>10E70134</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>centercamreainjpointAOB</Name>
      <Address> 0057495F</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Super Sprint flag (+236C+5) (0 enable, 1 disable)
Super Jump flag (+236C+6) (0 enable, 1 disable)
=====================================
http://forum.cheatengine.org/viewtopic.php?p=5492782#5492782
</Comments>
</CheatTable>
