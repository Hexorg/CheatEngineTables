<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Activate First!"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>define(weightDef,PlayerInventory:get_isEncumbered+8)
define(isEncumberedDef,PlayerInventory:get_isEncumbered+42)
define(isSeverelyEncumberedDef,PlayerInventory:get_isSeverelyEncumbered+46)
define(lightWeaponsXPDef,AvatarProfile:get_lightWeaponsXP+6)

[ENABLE]
{$lua}
LaunchMonoDataCollector()
{$asm}
label(isEncumbered)
label(isSeverelyEncumbered)
label(weight)
label(lightWeaponsXP)
registersymbol(lightWeaponsXP)
registersymbol(weight)
registersymbol(isEncumbered)
registersymbol(isSeverelyEncumbered)


weightDef:
weight:
  db 8B 7D 08 D9 47 78

isSeverelyEncumberedDef:
isSeverelyEncumbered:
  db EB 02 33 F6 8B C6

isEncumberedDef:
isEncumbered:
  db EB 02 33 F6 8B C6

lightWeaponsXPDef:
lightWeaponsXP:
  db 8B 45 08 8B 40 44

[DISABLE]
isEncumbered:
  db EB 02 33 F6 8B C6

isSeverelyEncumbered:
  db EB 02 33 F6 8B C6

weight:
  db 8B 7D 08 D9 47 78

lightWeaponsXP:
  db 8B 45 08 8B 40 44
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Encumberement on/off"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
isEncumbered:
  //db 90 90 33 FF 48 8B C7 48
  db 90 90 33 F6 8B C6 8D 65
isSeverelyEncumbered:
  //db 90 90 33 FF 48 8B C7 48
  db 90 90 33 F6 8B C6 8D 65
[DISABLE]
isEncumbered:
  db EB 02 33 F6 8B C6 8D 65
isSeverelyEncumbered:
  db EB 02 33 F6 8B C6 8D 65
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"Weight"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//aobscan(weight6,8B 7D 08 D9 47 78 D9 47 74 DE F9 D9 5D F4 D9 45 F4 D9 E8) // should be unique
alloc(newmem,$1000)
alloc(weight6,8)
label(code)
label(return)
registersymbol(weight6)

newmem:

code:
  mov edi,[ebp+08]
  mov [weight6],edi
  fld dword ptr [edi+78]
  jmp return

weight:
  jmp newmem
  nop
return:


[DISABLE]
weight:
  db 8B 7D 08 D9 47 78

unregistersymbol(weight6)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 02450D88

""+2450D6D: E9 B6 F2 FD 03     -  jmp 06430028
""+2450D72: 00 00              -  add [eax],al
""+2450D74: 68 20 0E C0 43     -  push 43C00E20
""+2450D79: E9 AA F2 FD 03     -  jmp 06430028
""+2450D7E: 00 00              -  add [eax],al
""+2450D80: 55                 -  push ebp
""+2450D81: 8B EC              -  mov ebp,esp
""+2450D83: 57                 -  push edi
""+2450D84: 56                 -  push esi
""+2450D85: 83 EC 10           -  sub esp,10
// ---------- INJECTING HERE ----------
""+2450D88: 8B 7D 08           -  mov edi,[ebp+08]
""+2450D8B: D9 47 78           -  fld dword ptr [edi+78]
// ---------- DONE INJECTING  ----------
""+2450D8E: D9 47 74           -  fld dword ptr [edi+74]
""+2450D91: DE F9              -  fdivp st(1),st(0)
""+2450D93: D9 5D F4           -  fstp dword ptr [ebp-0C]
""+2450D96: D9 45 F4           -  fld dword ptr [ebp-0C]
""+2450D99: D9 E8              -  fld1 
""+2450D9B: DF F1              -  fcomip st(0),st(1)
""+2450D9D: DD D8              -  fstp st(0)
""+2450D9F: 7A 23              -  jp PlayerInventory:get_isEncumbered+44
""+2450DA1: 73 21              -  jae PlayerInventory:get_isEncumbered+44
""+2450DA3: D9 47 78           -  fld dword ptr [edi+78]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>48</ID>
              <Description>"current weight"</Description>
              <LastState Value="85.79000092" RealAddress="2BFA1E20"/>
              <VariableType>Float</VariableType>
              <Address>weight6</Address>
              <Offsets>
                <Offset>78</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>49</ID>
              <Description>"max weight"</Description>
              <LastState Value="80" RealAddress="2BFA1E1C"/>
              <VariableType>Float</VariableType>
              <Address>weight6</Address>
              <Offsets>
                <Offset>74</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>73</ID>
      <Description>"Work in progress"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>70</ID>
          <Description>"Weapon Pointers"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

//aobscan(lightWeaponsXP,8B 45 08 8B 40 44 C9 C3 00 00 55 8B EC 83) // should be unique
//alloc(newmem,$1000)
alloc(newmem,$1000)
alloc(weaponpointer,8)
label(code)
label(return)
registersymbol(weaponpointer)

newmem:

code:
  mov eax,[ebp+08]
  mov eax,[eax+44]
  mov [weaponpointer],eax
  jmp return

lightWeaponsXP:
  jmp newmem
  nop
return:


[DISABLE]

lightWeaponsXP:
  db 8B 45 08 8B 40 44

unregistersymbol(weaponpointer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1FD3EEEE

""+1FD3EED8: 39 00           -  cmp [eax],eax
""+1FD3EEDA: E8 F9 FB D4 E6  -  call UnityEngine:AudioSource:Play
""+1FD3EEDF: 83 C4 10        -  add esp,10
""+1FD3EEE2: C9              -  leave 
""+1FD3EEE3: C3              -  ret 
""+1FD3EEE4: 00 00           -  add [eax],al
""+1FD3EEE6: 00 00           -  add [eax],al
""+1FD3EEE8: 55              -  push ebp
""+1FD3EEE9: 8B EC           -  mov ebp,esp
""+1FD3EEEB: 83 EC 08        -  sub esp,08
// ---------- INJECTING HERE ----------
""+1FD3EEEE: 8B 45 08        -  mov eax,[ebp+08]
""+1FD3EEF1: 8B 40 44        -  mov eax,[eax+44]
// ---------- DONE INJECTING  ----------
""+1FD3EEF4: C9              -  leave 
""+1FD3EEF5: C3              -  ret 
""+1FD3EEF6: 00 00           -  add [eax],al
""+1FD3EEF8: 55              -  push ebp
""+1FD3EEF9: 8B EC           -  mov ebp,esp
""+1FD3EEFB: 83 EC 08        -  sub esp,08
""+1FD3EEFE: 8B 45 08        -  mov eax,[ebp+08]
""+1FD3EF01: 0F B6 48 28     -  movzx ecx,byte ptr [eax+28]
""+1FD3EF05: 85 C9           -  test ecx,ecx
""+1FD3EF07: 0F 94 C1        -  sete cl
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>56</ID>
              <Description>"unusedStatPoints"</Description>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>57</ID>
              <Description>"healthStatPoints"</Description>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>41</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>58</ID>
              <Description>"staminaStatPoints"</Description>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>42</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>59</ID>
              <Description>"strengthStatPoints"</Description>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>43</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>60</ID>
              <Description>"speedStatPoints"</Description>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>61</ID>
              <Description>"unusedBlueprintPoints"</Description>
              <VariableType>Byte</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>45</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>63</ID>
              <Description>"daysSurvived"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>62</ID>
              <Description>"credits"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>64</ID>
              <Description>"XP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>65</ID>
              <Description>"lightWeaponsXP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>2c</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"heavyWeaponsXP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>67</ID>
              <Description>"specialWeaponsXP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>34</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>68</ID>
              <Description>"meleeXP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>69</ID>
              <Description>"toolsXP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>3c</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>72</ID>
              <Description>"No description"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>weaponpointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"OLD PlayerStats (open Inventory after activation &amp; for an Update) "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,$1000)
alloc(weaponpointer,4)
label(code)
label(return)
registersymbol(weaponpointer)

newmem:

code:
  mov ecx,[rax+2C]
  mov [weaponpointer],rax
  sub rsp,20
  jmp return

lightWeaponsLevel:
 jmp code
 nop
 nop

return:

[DISABLE]

lightWeaponsLevel:
 db 8B 48 2C 48 82 EC 20

unregistersymbol(weaponpointer)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>lightWeaponsLevel</Name>
      <Address>15D1A9B1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lightWeaponsXP</Name>
      <Address>4F0E57DE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weight</Name>
      <Address>4F0BE3F8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>isEncumbered</Name>
      <Address>4F0BE432</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>isSeverelyEncumbered</Name>
      <Address>4F08B0BE</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
