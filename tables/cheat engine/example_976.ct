<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <Forms>
    <CheatPanel Class="TCEForm" Encoding="Ascii85">D]#L{2nldAU:MM2b.}cx/#NtQO*LpW%uCH-?kvc9VRmF;@GMB1(nRL3z]z]mU%)W^8lIU[lELi2$nKn2P=DLS$A,Yd%_9/VBfp%T17sM8#S0:l@Fk7fvz-!*+g1,z9COMOD}lNz00</CheatPanel>
  </Forms>
  <CheatEntries/>
  <UserdefinedSymbols/>
  <LuaScript>function FormShow(sender)

t = createTimer(nil, true)
timer_onTimer(t, MaxHP)
timer_setInterval(t, 500)--checks every 1000 milliseconds
timer_setEnabled(t, false)
--timer_setEnabled(t, true)--test take this line out after testing
print("God Mode is not enabled")

tl = createTimer(nil, true)
timer_onTimer(tl, ConstLimit)
timer_setInterval(tl, 500)
timer_setEnabled(tl, false)

tEX = createTimer(nil, true)
timer_onTimer(tEX, ConstEX)
timer_setInterval(tEX, 500)
timer_setEnabled(tEX, false)

tAP = createTimer(nil, true)
timer_onTimer(tAP, ConstAP)
timer_setInterval(tAP, 500)
timer_setEnabled(tAP, false)

tSPHS = createTimer(nil, true)
timer_onTimer(tSPHS, ConstSPHS)
timer_setInterval(tSPHS, 500)
timer_setEnabled(tSPHS, false)

function addLevelItem1(level, exp)
local lvitems1=listview_getItems(CheatPanel_CEListView1)
local item1=listitems_add(lvitems1)
local subitems1=listitem_getSubItems(item1)
listitem_setCaption(item1,level)
strings_add(subitems1, exp)
end

addLevelItem1(01,5)--Hero Exp
addLevelItem1(02,32)
addLevelItem1(03,93)
addLevelItem1(04,201)
addLevelItem1(05,371)
addLevelItem1(06,644)
addLevelItem1(07,948)
addLevelItem1(08,1383)
addLevelItem1(09,1933)
addLevelItem1(10,2613)
addLevelItem1(11,3587)
addLevelItem1(12,4609)
addLevelItem1(13,5808)
addLevelItem1(14,7199)
addLevelItem1(15,8796)
addLevelItem1(16,10613)
addLevelItem1(17,12664)
addLevelItem1(18,14964)
addLevelItem1(19,17527)
addLevelItem1(20,20367)
addLevelItem1(21,24160)
addLevelItem1(22,27693)
addLevelItem1(23,31554)
addLevelItem1(24,35758)
addLevelItem1(25,40320)
addLevelItem1(26,45254)
addLevelItem1(27,50575)
addLevelItem1(28,56298)
addLevelItem1(29,62437)
addLevelItem1(30,69007)
addLevelItem1(31,77065)
addLevelItem1(32,84642)
addLevelItem1(33,92700)
addLevelItem1(34,101254)
addLevelItem1(35,110319)
addLevelItem1(36,119909)
addLevelItem1(37,130039)
addLevelItem1(38,140724)
addLevelItem1(39,151979)
addLevelItem1(40,163819)
addLevelItem1(41,176258)
addLevelItem1(42,189311)
addLevelItem1(43,202993)
addLevelItem1(44,217319)
addLevelItem1(45,232304)
addLevelItem1(46,247962)
addLevelItem1(47,264308)
addLevelItem1(48,281357)
addLevelItem1(49,299124)
addLevelItem1(50,317624)
addLevelItem1(51,336871)
addLevelItem1(52,356880)
addLevelItem1(53,377666)
addLevelItem1(54,399244)
addLevelItem1(55,421629)
addLevelItem1(56,444835)
addLevelItem1(57,468877)
addLevelItem1(58,493770)
addLevelItem1(59,519529)
addLevelItem1(60,546169)
addLevelItem1(61,581466)
addLevelItem1(62,610296)
addLevelItem1(63,640063)
addLevelItem1(64,670783)
addLevelItem1(65,702470)
addLevelItem1(66,735140)
addLevelItem1(67,768807)
addLevelItem1(68,803487)
addLevelItem1(69,839194)
addLevelItem1(70,875944)
addLevelItem1(71,913751)
addLevelItem1(72,952631)
addLevelItem1(73,992598)
addLevelItem1(74,1033668)
addLevelItem1(75,1075855)
addLevelItem1(76,1119175)
addLevelItem1(77,1163642)
addLevelItem1(78,1209272)
addLevelItem1(79,1256079)
addLevelItem1(80,1304079)
addLevelItem1(81,1389358)
addLevelItem1(82,1441132)
addLevelItem1(83,1494177)
addLevelItem1(84,1548508)
addLevelItem1(85,1604140)
addLevelItem1(86,1661089)
addLevelItem1(87,1719370)
addLevelItem1(88,1778998)
addLevelItem1(89,1839989)
addLevelItem1(90,1902359)
addLevelItem1(91,1966122)
addLevelItem1(92,2031294)
addLevelItem1(93,2097891)
addLevelItem1(94,2165928)
addLevelItem1(95,2235420)
addLevelItem1(96,2306383)
addLevelItem1(97,2378832)
addLevelItem1(98,2452782)


function addLevelItem9(level, exp)
local lvitems9=listview_getItems(CheatPanel_CEListView9)
local item9=listitems_add(lvitems9)
local subitems9=listitem_getSubItems(item9)
listitem_setCaption(item9,level)
strings_add(subitems9, exp)
end

addLevelItem9(01,5)--Cid Exp
addLevelItem9(02,32)
addLevelItem9(03,94)
addLevelItem9(04,204)
addLevelItem9(05,376)
addLevelItem9(06,624)
addLevelItem9(07,962)
addLevelItem9(08,1403)
addLevelItem9(09,1961)
addLevelItem9(10,2651)
addLevelItem9(11,3638)
addLevelItem9(12,4674)
addLevelItem9(13,5890)
addLevelItem9(14,7301)
addLevelItem9(15,8921)
addLevelItem9(16,10764)
addLevelItem9(17,12844)
addLevelItem9(18,15176)
addLevelItem9(19,17775)
addLevelItem9(20,20655)
addLevelItem9(21,24826)
addLevelItem9(22,28456)
addLevelItem9(23,32423)
addLevelItem9(24,36743)
addLevelItem9(25,41430)
addLevelItem9(26,46500)
addLevelItem9(27,51967)
addLevelItem9(28,57847)
addLevelItem9(29,64154)
addLevelItem9(30,70904)
addLevelItem9(31,78111)
addLevelItem9(32,85791)
addLevelItem9(33,93958)
addLevelItem9(34,102628)
addLevelItem9(35,111815)
addLevelItem9(36,121535)
addLevelItem9(37,131802)
addLevelItem9(38,142632)
addLevelItem9(39,154039)
addLevelItem9(40,166039)
addLevelItem9(41,181022)
addLevelItem9(42,194428)
addLevelItem9(43,208480)
addLevelItem9(44,223193)
addLevelItem9(45,238583)
addLevelItem9(46,254664)
addLevelItem9(47,271452)
addLevelItem9(48,288962)
addLevelItem9(49,307209)
addLevelItem9(50,326209)
addLevelItem9(51,345976)
addLevelItem9(52,366526)
addLevelItem9(53,387874)
addLevelItem9(54,410035)
addLevelItem9(55,433025)
addLevelItem9(56,456858)
addLevelItem9(57,481550)
addLevelItem9(58,507116)
addLevelItem9(59,533571)
addLevelItem9(60,560931)
addLevelItem9(61,596960)
addLevelItem9(62,626558)
addLevelItem9(63,657119)
addLevelItem9(64,688658)
addLevelItem9(65,721190)
addLevelItem9(66,754731)
addLevelItem9(67,789296)
addLevelItem9(68,824900)
addLevelItem9(69,861559)
addLevelItem9(70,899289)
addLevelItem9(71,938104)
addLevelItem9(72,978020)
addLevelItem9(73,1019053)
addLevelItem9(74,1061218)
addLevelItem9(75,1104530)
addLevelItem9(76,1149032)
addLevelItem9(77,1194658)
addLevelItem9(78,1241504)
addLevelItem9(79,1289559)
addLevelItem9(80,1338839)
addLevelItem9(81,1389358)
addLevelItem9(82,1441132)
addLevelItem9(83,1494177)
addLevelItem9(84,1548508)
addLevelItem9(85,1604140)
addLevelItem9(86,1661089)
addLevelItem9(87,1719370)
addLevelItem9(88,1778998)
addLevelItem9(89,1839989)
addLevelItem9(90,1902359)
addLevelItem9(91,1966122)
addLevelItem9(92,2031294)
addLevelItem9(93,2097891)
addLevelItem9(94,2165928)
addLevelItem9(95,2235420)
addLevelItem9(96,2306383)
addLevelItem9(97,2378832)
addLevelItem9(98,2452782)

end--form_show

function CEButton1Click(sender)--Recalculate function
local memrec1
local memrec2
local memrec3
local memrec4
ms = createMemScan()
errorOnLookupFailure(false);
memscan_firstScan(ms, soExactValue, vtByteArray, rtRounded, "22 41 52 52 45 54 FF FF", "", "00000000", "7fffffff", "*X*C*W", fsmNotAligned, "", true, false, false, false);
memscan_waitTillDone(ms);
fl = createFoundList(ms);
foundlist_initialize(fl);
foundlist_getCount(fl);
for x = 0, foundlist_getCount(fl)-1  do--Items are in the hex format (0125D60F) without 0x
memrec1 = foundlist_getAddress(fl, x);
memrec2 = "0x" .. memrec1;
if string.sub(memrec2, -3) == "7EC" then
byteoffset = memrec2;--byteoffset is in the number format (105039852)
end;
end;
addresslist = getAddressList();
memrec3 = addresslist_getMemoryRecordByDescription(addresslist, "Barret Name  (+hF) (22 41 52 52 45 54 FF FF)");
barretaddress = memoryrecord_getAddress(memrec3);--Item in num format
barretaddress = string.format('%x', barretaddress);--Items in number format converted to hex format without 0x
barretaddress = "0x" .. barretaddress
for x = 0, addresslist_getCount(addresslist)-1 do
memrec4 = addresslist_getMemoryRecord(addresslist, x);--Items are in hex format without 0x
if byteoffset ~= barretaddress then
memoryrecord_setAddress(memrec4, string.format('%x', memoryrecord_getAddress(memrec4) + byteoffset - barretaddress));
end;
end;
if byteoffset ~= null then
print("The table is recalculated")
else
print("byteoffset is null")
end
byteoffset = nil
end;

function CEButton3Click(sender)--Max Wpn 1 Materia
addresslist = getAddressList()
heroweaponslot1address = addresslist_getMemoryRecordByDescription(addresslist, "Hero Wpn Slot 1 Mat Exp")
heroweaponslot1Eaddress = addresslist_getMemoryRecordByDescription(addresslist, "Hero Wpn Slot 1 Mat Exp 16^6")
memoryrecord_setValue(heroweaponslot1address, 65535)
memoryrecord_setValue(heroweaponslot1Eaddress, 255)
end

function CERadioGroup1Click(sender)
--print("Index ", radiogroup_getItemIndex(CheatPanel_CERadioGroup1))
indexname = radiogroup_getItemIndex(CheatPanel_CERadioGroup1)
h = radiogroup_getItems(CheatPanel_CERadioGroup1)
heroname = strings_getString(h, indexname)
--print("The selected hero is ",heroname)
addresslist = getAddressList()
  if heroname == "Hero" then
    form_show(CheatPanel_CEListView1)
    heronamelevel = addresslist_getMemoryRecordByDescription(addresslist, "Hero Exp (+h3B)")
    --heronamelevelE = addresslist_getMemoryRecordByDescription(addresslist, "Terra Exp 16^6")
  elseif heroname == "Barrett" then
    form_show(CheatPanel_CEListView2)
    heronamelevel = addresslist_getMemoryRecordByDescription(addresslist, "Barret Exp (+h3B)")
    --heronamelevelE = addresslist_getMemoryRecordByDescription(addresslist, "Locke Exp 16^6")
  elseif heroname == "Tifa" then
    form_show(CheatPanel_CEListView3)
    heronamelevel = addresslist_getMemoryRecordByDescription(addresslist, "Tifa Exp (+h3B)")
    --heronamelevelE = addresslist_getMemoryRecordByDescription(addresslist, "Cyan Exp 16^6")
  elseif heroname == "Aeris" then
    form_show(CheatPanel_CEListView4)
    heronamelevel = addresslist_getMemoryRecordByDescription(addresslist, "Aeris Exp (+h3B)")
    --heronamelevelE = addresslist_getMemoryRecordByDescription(addresslist, "Shadow Exp 16^6")
  elseif heroname == "Nanaki" then
    form_show(CheatPanel_CEListView5)
    heronamelevel = addresslist_getMemoryRecordByDescription(addresslist, "Nanaki Exp (+h3B)")
    --heronamelevelE = addresslist_getMemoryRecordByDescription(addresslist, "Edgar Exp 16^6")
  elseif heroname == "Yuffie" then
    form_show(CheatPanel_CEListView6)
    heronamelevel = addresslist_getMemoryRecordByDescription(addresslist, "Yuffie Exp (+h3B)")
    --heronamelevelE = addresslist_getMemoryRecordByDescription(addresslist, "Sabin Exp 16^6")
  elseif heroname == "Cait Sith" then
    form_show(CheatPanel_CEListView7)
    heronamelevel = addresslist_getMemoryRecordByDescription(addresslist, "Cait Sith Exp (+h3B)")
    --heronamelevelE = addresslist_getMemoryRecordByDescription(addresslist, "Celes Exp 16^6")
  elseif heroname == "Vincent" then
    form_show(CheatPanel_CEListView8)
    heronamelevel = addresslist_getMemoryRecordByDescription(addresslist, "Vincent Exp (+h3B)")
    --heronamelevelE = addresslist_getMemoryRecordByDescription(addresslist, "Strago Exp 16^6")
  elseif heroname == "Cid" then
    form_show(CheatPanel_CEListView9)
    heronamelevel = addresslist_getMemoryRecordByDescription(addresslist, "Cid Exp (+h3B)")
    --heronamelevelE = addresslist_getMemoryRecordByDescription(addresslist, "Relm Exp 16^6")
  else
  end

--print("selected hero level address", heronamelevel)
end
--NOTE THE LISTVIEWS ARE HIDDEN UNTIL A RADIO GROUPS IS CHOSEN

function CEListView1Click(sender)
print('Selected index = '..listview_getItemIndex(CheatPanel_CEListView1))
indexname = listview_getItemIndex(CheatPanel_CEListView1)
e = listview_getItems(CheatPanel_CEListView1)
item = listitems_getItem(e, indexname)
print("The item is ",item)
levelvalue = tonumber(listitem_getCaption(item))--this is the level selected
print("The level value is ", levelvalue)
subitems = listitem_getSubItems(item)
print("The subitems is ", subitems)
expvalue = tonumber(strings_getString(subitems, 0))
print("The exp is ", expvalue)

nextindexname = indexname + 1
--print("next index", nextindex)
nextitem = listitems_getItem(e, nextindexname)
--print("next item", nextitem)
nextlevelvalue = tonumber(listitem_getCaption(nextitem))
--print("next level value", nextlevelvalue)
nextsubitems = listitem_getSubItems(nextitem)
--print("next subitems", nextsubitems)
nextexpvalue = tonumber(strings_getString(nextsubitems, 0))
--print("the next exp is", nextexpvalue)
--lv=CheatPanel.CEListView1
--secondcolumn=lv.Items[lv.ItemIndex].subItems[0]
--secondcolumn=CheatPanel.CEListView1.Items[CheatPanel.CEListView1.ItemIndex].SubItems[0]
  if heronamelevel ~= null then
  memoryrecord_setValue(heronamelevel, expvalue - math.floor(expvalue/4228250625) * 4228250625)--this only would work to 255^4
  --memoryrecord_setValue(heronamelevelE, math.floor(expvalue/65536))--this only would work to 16^4
  end
radiogroup_setItemIndex(CheatPanel_CERadioGroup1,0)
heronamelevel = nil
form_hide(CheatPanel_CEListView1)
end

function CEListView2Click(sender)
print('Selected index = '..listview_getItemIndex(CheatPanel_CEListView2))
indexname = listview_getItemIndex(CheatPanel_CEListView2)
e = listview_getItems(CheatPanel_CEListView2)
item = listitems_getItem(e, indexname)
print("The item is ",item)
levelvalue = tonumber(listitem_getCaption(item))--this is the level selected
print("The level value is ", levelvalue)
subitems = listitem_getSubItems(item)
print("The subitems is ", subitems)
expvalue = tonumber(strings_getString(subitems, 0))
print("The exp is ", expvalue)

nextindexname = indexname + 1
--print("next index", nextindex)
nextitem = listitems_getItem(e, nextindexname)
--print("next item", nextitem)
nextlevelvalue = tonumber(listitem_getCaption(nextitem))
--print("next level value", nextlevelvalue)
nextsubitems = listitem_getSubItems(nextitem)
--print("next subitems", nextsubitems)
nextexpvalue = tonumber(strings_getString(nextsubitems, 0))
--print("the next exp is", nextexpvalue)
--lv=CheatPanel.CEListView1
--secondcolumn=lv.Items[lv.ItemIndex].subItems[0]
--secondcolumn=CheatPanel.CEListView1.Items[CheatPanel.CEListView1.ItemIndex].SubItems[0]
  if heronamelevel ~= nil then
  memoryrecord_setValue(heronamelevel, expvalue - math.floor(expvalue/4228250625) * 4228250625)--this only would work to 255^4
  --memoryrecord_setValue(heronamelevelE, math.floor(expvalue/65536))--this only would work to 16^4
  end
radiogroup_setItemIndex(CheatPanel_CERadioGroup1,0)
heronamelevel = nil
form_hide(CheatPanel_CEListView2)
end

function CEListView3Click(sender)
print('Selected index = '..listview_getItemIndex(CheatPanel_CEListView3))
indexname = listview_getItemIndex(CheatPanel_CEListView3)
e = listview_getItems(CheatPanel_CEListView3)
item = listitems_getItem(e, indexname)
print("The item is ",item)
levelvalue = tonumber(listitem_getCaption(item))--this is the level selected
print("The level value is ", levelvalue)
subitems = listitem_getSubItems(item)
print("The subitems is ", subitems)
expvalue = tonumber(strings_getString(subitems, 0))
print("The exp is ", expvalue)

nextindexname = indexname + 1
--print("next index", nextindex)
nextitem = listitems_getItem(e, nextindexname)
--print("next item", nextitem)
nextlevelvalue = tonumber(listitem_getCaption(nextitem))
--print("next level value", nextlevelvalue)
nextsubitems = listitem_getSubItems(nextitem)
--print("next subitems", nextsubitems)
nextexpvalue = tonumber(strings_getString(nextsubitems, 0))
--print("the next exp is", nextexpvalue)
--lv=CheatPanel.CEListView1
--secondcolumn=lv.Items[lv.ItemIndex].subItems[0]
--secondcolumn=CheatPanel.CEListView1.Items[CheatPanel.CEListView1.ItemIndex].SubItems[0]
  if heronamelevel ~= null then
  memoryrecord_setValue(heronamelevel, expvalue - math.floor(expvalue/4228250625) * 4228250625)--this only would work to 255^4
  --memoryrecord_setValue(heronamelevelE, math.floor(expvalue/65536))--this only would work to 16^4
  end
radiogroup_setItemIndex(CheatPanel_CERadioGroup1,0)
heronamelevel = nil
form_hide(CheatPanel_CEListView3)
end

function CEListView4Click(sender)
print('Selected index = '..listview_getItemIndex(CheatPanel_CEListView4))
indexname = listview_getItemIndex(CheatPanel_CEListView4)
e = listview_getItems(CheatPanel_CEListView4)
item = listitems_getItem(e, indexname)
print("The item is ",item)
levelvalue = tonumber(listitem_getCaption(item))--this is the level selected
print("The level value is ", levelvalue)
subitems = listitem_getSubItems(item)
print("The subitems is ", subitems)
expvalue = tonumber(strings_getString(subitems, 0))
print("The exp is ", expvalue)

nextindexname = indexname + 1
--print("next index", nextindex)
nextitem = listitems_getItem(e, nextindexname)
--print("next item", nextitem)
nextlevelvalue = tonumber(listitem_getCaption(nextitem))
--print("next level value", nextlevelvalue)
nextsubitems = listitem_getSubItems(nextitem)
--print("next subitems", nextsubitems)
nextexpvalue = tonumber(strings_getString(nextsubitems, 0))
--print("the next exp is", nextexpvalue)
--lv=CheatPanel.CEListView1
--secondcolumn=lv.Items[lv.ItemIndex].subItems[0]
--secondcolumn=CheatPanel.CEListView1.Items[CheatPanel.CEListView1.ItemIndex].SubItems[0]
  if heronamelevel ~= nil then
  memoryrecord_setValue(heronamelevel, expvalue - math.floor(expvalue/4228250625) * 4228250625)--this only would work to 255^4
  --memoryrecord_setValue(heronamelevelE, math.floor(expvalue/65536))--this only would work to 16^4
  end
radiogroup_setItemIndex(CheatPanel_CERadioGroup1,0)
heronamelevel = nil
form_hide(CheatPanel_CEListView4)
end

function CEListView5Click(sender)
print('Selected index = '..listview_getItemIndex(CheatPanel_CEListView5))
indexname = listview_getItemIndex(CheatPanel_CEListView5)
e = listview_getItems(CheatPanel_CEListView5)
item = listitems_getItem(e, indexname)
print("The item is ",item)
levelvalue = tonumber(listitem_getCaption(item))--this is the level selected
print("The level value is ", levelvalue)
subitems = listitem_getSubItems(item)
print("The subitems is ", subitems)
expvalue = tonumber(strings_getString(subitems, 0))
print("The exp is ", expvalue)

nextindexname = indexname + 1
--print("next index", nextindex)
nextitem = listitems_getItem(e, nextindexname)
--print("next item", nextitem)
nextlevelvalue = tonumber(listitem_getCaption(nextitem))
--print("next level value", nextlevelvalue)
nextsubitems = listitem_getSubItems(nextitem)
--print("next subitems", nextsubitems)
nextexpvalue = tonumber(strings_getString(nextsubitems, 0))
--print("the next exp is", nextexpvalue)
--lv=CheatPanel.CEListView1
--secondcolumn=lv.Items[lv.ItemIndex].subItems[0]
--secondcolumn=CheatPanel.CEListView1.Items[CheatPanel.CEListView1.ItemIndex].SubItems[0]
  if heronamelevel ~= null then
  memoryrecord_setValue(heronamelevel, expvalue - math.floor(expvalue/4228250625) * 4228250625)--this only would work to 255^4
  --memoryrecord_setValue(heronamelevelE, math.floor(expvalue/65536))--this only would work to 16^4
  end
radiogroup_setItemIndex(CheatPanel_CERadioGroup1,0)
heronamelevel = nil
form_hide(CheatPanel_CEListView5)
end

function CEListView6Click(sender)
print('Selected index = '..listview_getItemIndex(CheatPanel_CEListView6))
indexname = listview_getItemIndex(CheatPanel_CEListView6)
e = listview_getItems(CheatPanel_CEListView6)
item = listitems_getItem(e, indexname)
print("The item is ",item)
levelvalue = tonumber(listitem_getCaption(item))--this is the level selected
print("The level value is ", levelvalue)
subitems = listitem_getSubItems(item)
print("The subitems is ", subitems)
expvalue = tonumber(strings_getString(subitems, 0))
print("The exp is ", expvalue)

nextindexname = indexname + 1
--print("next index", nextindex)
nextitem = listitems_getItem(e, nextindexname)
--print("next item", nextitem)
nextlevelvalue = tonumber(listitem_getCaption(nextitem))
--print("next level value", nextlevelvalue)
nextsubitems = listitem_getSubItems(nextitem)
--print("next subitems", nextsubitems)
nextexpvalue = tonumber(strings_getString(nextsubitems, 0))
--print("the next exp is", nextexpvalue)
--lv=CheatPanel.CEListView1
--secondcolumn=lv.Items[lv.ItemIndex].subItems[0]
--secondcolumn=CheatPanel.CEListView1.Items[CheatPanel.CEListView1.ItemIndex].SubItems[0]
  if heronamelevel ~= nil then
  memoryrecord_setValue(heronamelevel, expvalue - math.floor(expvalue/4228250625) * 4228250625)--this only would work to 255^4
  --memoryrecord_setValue(heronamelevelE, math.floor(expvalue/65536))--this only would work to 16^4
  end
radiogroup_setItemIndex(CheatPanel_CERadioGroup1,0)
heronamelevel = nil
form_hide(CheatPanel_CEListView6)
end

function CEListView7Click(sender)
print('Selected index = '..listview_getItemIndex(CheatPanel_CEListView7))
indexname = listview_getItemIndex(CheatPanel_CEListView7)
e = listview_getItems(CheatPanel_CEListView7)
item = listitems_getItem(e, indexname)
print("The item is ",item)
levelvalue = tonumber(listitem_getCaption(item))--this is the level selected
print("The level value is ", levelvalue)
subitems = listitem_getSubItems(item)
print("The subitems is ", subitems)
expvalue = tonumber(strings_getString(subitems, 0))
print("The exp is ", expvalue)

nextindexname = indexname + 1
--print("next index", nextindex)
nextitem = listitems_getItem(e, nextindexname)
--print("next item", nextitem)
nextlevelvalue = tonumber(listitem_getCaption(nextitem))
--print("next level value", nextlevelvalue)
nextsubitems = listitem_getSubItems(nextitem)
--print("next subitems", nextsubitems)
nextexpvalue = tonumber(strings_getString(nextsubitems, 0))
--print("the next exp is", nextexpvalue)
--lv=CheatPanel.CEListView1
--secondcolumn=lv.Items[lv.ItemIndex].subItems[0]
--secondcolumn=CheatPanel.CEListView1.Items[CheatPanel.CEListView1.ItemIndex].SubItems[0]
  if heronamelevel ~= nil then
  memoryrecord_setValue(heronamelevel, expvalue - math.floor(expvalue/4228250625) * 4228250625)--this only would work to 255^4
  --memoryrecord_setValue(heronamelevelE, math.floor(expvalue/65536))--this only would work to 16^4
  end
radiogroup_setItemIndex(CheatPanel_CERadioGroup1,0)
heronamelevel = nil
form_hide(CheatPanel_CEListView7)
end

function CEListView8Click(sender)
print('Selected index = '..listview_getItemIndex(CheatPanel_CEListView8))
indexname = listview_getItemIndex(CheatPanel_CEListView8)
e = listview_getItems(CheatPanel_CEListView8)
item = listitems_getItem(e, indexname)
print("The item is ",item)
levelvalue = tonumber(listitem_getCaption(item))--this is the level selected
print("The level value is ", levelvalue)
subitems = listitem_getSubItems(item)
print("The subitems is ", subitems)
expvalue = tonumber(strings_getString(subitems, 0))
print("The exp is ", expvalue)

nextindexname = indexname + 1
--print("next index", nextindex)
nextitem = listitems_getItem(e, nextindexname)
--print("next item", nextitem)
nextlevelvalue = tonumber(listitem_getCaption(nextitem))
--print("next level value", nextlevelvalue)
nextsubitems = listitem_getSubItems(nextitem)
--print("next subitems", nextsubitems)
nextexpvalue = tonumber(strings_getString(nextsubitems, 0))
--print("the next exp is", nextexpvalue)
--lv=CheatPanel.CEListView1
--secondcolumn=lv.Items[lv.ItemIndex].subItems[0]
--secondcolumn=CheatPanel.CEListView1.Items[CheatPanel.CEListView1.ItemIndex].SubItems[0]
  if heronamelevel ~= nil then
  memoryrecord_setValue(heronamelevel, expvalue - math.floor(expvalue/4228250625) * 4228250625)--this only would work to 255^4
  --memoryrecord_setValue(heronamelevelE, math.floor(expvalue/65536))--this only would work to 16^4
  end
radiogroup_setItemIndex(CheatPanel_CERadioGroup1,0)
heronamelevel = nil
form_hide(CheatPanel_CEListView8)
end

function CEListView9Click(sender)
print('Selected index = '..listview_getItemIndex(CheatPanel_CEListView9))
indexname = listview_getItemIndex(CheatPanel_CEListView9)
e = listview_getItems(CheatPanel_CEListView9)
item = listitems_getItem(e, indexname)
print("The item is ",item)
levelvalue = tonumber(listitem_getCaption(item))--this is the level selected
print("The level value is ", levelvalue)
subitems = listitem_getSubItems(item)
print("The subitems is ", subitems)
expvalue = tonumber(strings_getString(subitems, 0))
print("The exp is ", expvalue)

nextindexname = indexname + 1
--print("next index", nextindex)
nextitem = listitems_getItem(e, nextindexname)
--print("next item", nextitem)
nextlevelvalue = tonumber(listitem_getCaption(nextitem))
--print("next level value", nextlevelvalue)
nextsubitems = listitem_getSubItems(nextitem)
--print("next subitems", nextsubitems)
nextexpvalue = tonumber(strings_getString(nextsubitems, 0))
--print("the next exp is", nextexpvalue)
--lv=CheatPanel.CEListView1
--secondcolumn=lv.Items[lv.ItemIndex].subItems[0]
--secondcolumn=CheatPanel.CEListView1.Items[CheatPanel.CEListView1.ItemIndex].SubItems[0]
  if heronamelevel ~= nil then
  memoryrecord_setValue(heronamelevel, expvalue - math.floor(expvalue/4228250625) * 4228250625)--this only would work to 255^4
  --memoryrecord_setValue(heronamelevelE, math.floor(expvalue/65536))--this only would work to 16^4
  end
radiogroup_setItemIndex(CheatPanel_CERadioGroup1,0)
heronamelevel = nil
form_hide(CheatPanel_CEListView9)
end

function CECheckbox1Click(sender)
boxstate = checkbox_getState(CheatPanel_CECheckbox1)
  if boxstate == cbChecked then
    timer_setEnabled(t, true)
    print("God Mode is enabled")
  else
    timer_setEnabled(t, false)
    print("God Mode is not enabled")
  end
end

function CECheckbox2Click(sender)
boxstatelimit = checkbox_getState(CheatPanel_CECheckbox2)
  if boxstatelimit == cbChecked then
    timer_setEnabled(tl, true)
    print("The limit timer is enabled")
  else
    timer_setEnabled(tl, false)
    print("The limit timer is not enabled")
  end
end

function CECheckbox3Click(sender)
boxstateAP = checkbox_getState(CheatPanel_CECheckbox3)
  if boxstateAP == cbChecked then
    timer_setEnabled(tAP, true)
    print("The AP timer is enabled")
    form_show(CheatPanel_CEPanel1)
    form_show(CheatPanel_CEEdit1)
  else
    timer_setEnabled(tAP, false)
    print("The AP timer is not enabled")
    form_hide(CheatPanel_CEPanel1)
    form_hide(CheatPanel_CEEdit1)
    edit_clear(CheatPanel_CEEdit1)
  end
end

function CECheckbox4Click(sender)
boxstateEX = checkbox_getState(CheatPanel_CECheckbox4)
  if boxstateEX == cbChecked then
    timer_setEnabled(tEX, true)
    print("The EXP timer is enabled")
    form_show(CheatPanel_CEPanel2)
    form_show(CheatPanel_CEEdit2)
  else
    timer_setEnabled(tEX, false)
    print("The EXP timer is not enabled")
    form_hide(CheatPanel_CEPanel2)
    form_hide(CheatPanel_CEEdit2)
    edit_clear(CheatPanel_CEEdit2)
  end
end

function CECheckbox5Click(sender)
boxstateSPHS = checkbox_getState(CheatPanel_CECheckbox5)
  if boxstateSPHS == cbChecked then
    timer_setEnabled(tSPHS, true)
    print("Const Save And PHS enabled")
  else
    timer_setEnabled(tSPHS, false)
    print("Const Save And PHS not enabled")
  end
end

function MaxHP(sender)
local addresslist = getAddressList()
maxhp1address = addresslist_getMemoryRecordByDescription(addresslist, "Hero Max Hit Pts (+h37)")
maxhp1 = memoryrecord_getValue(maxhp1address)
curhp1address = addresslist_getMemoryRecordByDescription(addresslist, "Hero Cur Hit Pts (+h2B)")
curhp1 = memoryrecord_getValue(curhp1address)
maxmp1address = addresslist_getMemoryRecordByDescription(addresslist, "Hero Max Magic Pts (+h39)")
maxmp1 = memoryrecord_getValue(maxmp1address)
curmp1address = addresslist_getMemoryRecordByDescription(addresslist, "Hero Cur Magic Pts (+h2F)")
curmp1 = memoryrecord_getValue(curmp1address)
curstatus1address = addresslist_getMemoryRecordByDescription(addresslist, "Hero Status (10=Sad, 20=Fury) (+h1E)")
curstatus1 = memoryrecord_getValue(curstatus1address)
--print("Finished Hero Stats")
  maxhp2address = addresslist_getMemoryRecordByDescription(addresslist, "Barret Max Hit Pts (+h37)")
  maxhp2 = memoryrecord_getValue(maxhp2address)
  curhp2address = addresslist_getMemoryRecordByDescription(addresslist, "Barret Cur Hit Pts (+h2B)")
  curhp2 = memoryrecord_getValue(curhp2address)
  maxmp2address = addresslist_getMemoryRecordByDescription(addresslist, "Barret Max Magic Pts (+h39)")
  maxmp2 = memoryrecord_getValue(maxmp2address)
  curmp2address = addresslist_getMemoryRecordByDescription(addresslist, "Barret Cur Magic Pts (+h2F)")
  curmp2 = memoryrecord_getValue(curmp2address)
  curstatus2address = addresslist_getMemoryRecordByDescription(addresslist, "Barret Status (10=Sad, 20=Fury) (+h1E)")
  curstatus2 = memoryrecord_getValue(curstatus2address)
--print("Finished Barret Stats")
maxhp3address = addresslist_getMemoryRecordByDescription(addresslist, "Tifa Max Hit Pts (+h37)")
maxhp3 = memoryrecord_getValue(maxhp3address)
curhp3address = addresslist_getMemoryRecordByDescription(addresslist, "Tifa Cur Hit Pts (+h2B)")
curhp3 = memoryrecord_getValue(curhp3address)
maxmp3address = addresslist_getMemoryRecordByDescription(addresslist, "Tifa Max Magic Pts (+h39)")
maxmp3 = memoryrecord_getValue(maxmp3address)
curmp3address = addresslist_getMemoryRecordByDescription(addresslist, "Tifa Cur Magic Pts (+h2F)")
curmp3 = memoryrecord_getValue(curmp3address)
curstatus3address = addresslist_getMemoryRecordByDescription(addresslist, "Tifa Status (10=Sad, 20=Fury) (+h1E)")
curstatus3 = memoryrecord_getValue(curstatus3address)
--print("Finished Tifa Stats")
  maxhp4address = addresslist_getMemoryRecordByDescription(addresslist, "Aeris Max Hit Pts (+h37)")
  maxhp4 = memoryrecord_getValue(maxhp4address)
  curhp4address = addresslist_getMemoryRecordByDescription(addresslist, "Aeris Cur Hit Pts (+h2B)")
  curhp4 = memoryrecord_getValue(curhp4address)
  maxmp4address = addresslist_getMemoryRecordByDescription(addresslist, "Aeris Max Magic Pts (+h39)")
  maxmp4 = memoryrecord_getValue(maxmp4address)
  curmp4address = addresslist_getMemoryRecordByDescription(addresslist, "Aeris Cur Magic Pts (+h2F)")
  curmp4 = memoryrecord_getValue(curmp4address)
  curstatus4address = addresslist_getMemoryRecordByDescription(addresslist, "Aeris Status (10=Sad, 20=Fury) (+h1E)")
  curstatus4 = memoryrecord_getValue(curstatus4address)
--print("Finished Aeris Stats")
maxhp5address = addresslist_getMemoryRecordByDescription(addresslist, "Nanaki Max Hit Pts (+h37)")
maxhp5 = memoryrecord_getValue(maxhp5address)
curhp5address = addresslist_getMemoryRecordByDescription(addresslist, "Nanaki Cur Hit Pts (+h2B)")
curhp5 = memoryrecord_getValue(curhp5address)
maxmp5address = addresslist_getMemoryRecordByDescription(addresslist, "Nanaki Max Magic Pts (+h39)")
maxmp5 = memoryrecord_getValue(maxmp5address)
curmp5address = addresslist_getMemoryRecordByDescription(addresslist, "Nanaki Cur Magic Pts (+h2F)")
curmp5 = memoryrecord_getValue(curmp5address)
curstatus5address = addresslist_getMemoryRecordByDescription(addresslist, "Nanaki Status (10=Sad, 20=Fury) (+h1E)")
curstatus5 = memoryrecord_getValue(curstatus5address)
--print("Finished Nanaki Stats")
  maxhp6address = addresslist_getMemoryRecordByDescription(addresslist, "Yuffie Max Hit Pts (+h37)")
  maxhp6 = memoryrecord_getValue(maxhp6address)
  curhp6address = addresslist_getMemoryRecordByDescription(addresslist, "Yuffie Cur Hit Pts (+h2B)")
  curhp6 = memoryrecord_getValue(curhp6address)
  maxmp6address = addresslist_getMemoryRecordByDescription(addresslist, "Yuffie Max Magic Pts (+h39)")
  maxmp6 = memoryrecord_getValue(maxmp6address)
  curmp6address = addresslist_getMemoryRecordByDescription(addresslist, "Yuffie Cur Magic Pts (+h2F)")
  curmp6 = memoryrecord_getValue(curmp6address)
  curstatus6address = addresslist_getMemoryRecordByDescription(addresslist, "Yuffie Status (10=Sad, 20=Fury) (+h1E)")
  curstatus6 = memoryrecord_getValue(curstatus6address)
--print("Finished Yuffie Stats")
maxhp7address = addresslist_getMemoryRecordByDescription(addresslist, "Cait Sith Max Hit Pts (+h37)")
maxhp7 = memoryrecord_getValue(maxhp7address)
curhp7address = addresslist_getMemoryRecordByDescription(addresslist, "Cait Sith Cur Hit Pts (+h2B)")
curhp7 = memoryrecord_getValue(curhp7address)
maxmp7address = addresslist_getMemoryRecordByDescription(addresslist, "Cait Sith Max Magic Pts (+h39)")
maxmp7 = memoryrecord_getValue(maxmp7address)
curmp7address = addresslist_getMemoryRecordByDescription(addresslist, "Cait Sith Cur Magic Pts (+h2F)")
curmp7 = memoryrecord_getValue(curmp7address)
curstatus7address = addresslist_getMemoryRecordByDescription(addresslist, "Cait Sith Status (10=Sad, 20=Fury) (+h1E)")
curstatus7 = memoryrecord_getValue(curstatus7address)
--print("Finished Cait Sith Stats")
  maxhp8address = addresslist_getMemoryRecordByDescription(addresslist, "Vincent Max Hit Pts (+h37)")
  maxhp8 = memoryrecord_getValue(maxhp8address)
  curhp8address = addresslist_getMemoryRecordByDescription(addresslist, "Vincent Cur Hit Pts (+h2B)")
  curhp8 = memoryrecord_getValue(curhp8address)
  maxmp8address = addresslist_getMemoryRecordByDescription(addresslist, "Vincent Max Magic Pts (+h39)")
  maxmp8 = memoryrecord_getValue(maxmp8address)
  curmp8address = addresslist_getMemoryRecordByDescription(addresslist, "Vincent Cur Magic Pts (+h2F)")
  curmp8 = memoryrecord_getValue(curmp8address)
  curstatus8address = addresslist_getMemoryRecordByDescription(addresslist, "Vincent Status (10=Sad, 20=Fury) (+h1E)")
  curstatus8 = memoryrecord_getValue(curstatus8address)
--print("Finished Vincent Stats")
maxhp9address = addresslist_getMemoryRecordByDescription(addresslist, "Cid Max Hit Pts (+h37)")
maxhp9 = memoryrecord_getValue(maxhp9address)
curhp9address = addresslist_getMemoryRecordByDescription(addresslist, "Cid Cur Hit Pts (+h2B)")
curhp9 = memoryrecord_getValue(curhp9address)
maxmp9address = addresslist_getMemoryRecordByDescription(addresslist, "Cid Max Magic Pts (+h39)")
maxmp9 = memoryrecord_getValue(maxmp9address)
curmp9address = addresslist_getMemoryRecordByDescription(addresslist, "Cid Cur Magic Pts (+h2F)")
curmp9 = memoryrecord_getValue(curmp9address)
curstatus9address = addresslist_getMemoryRecordByDescription(addresslist, "Cid Status (10=Sad, 20=Fury) (+h1E)")
curstatus9 = memoryrecord_getValue(curstatus9address)
--print("Finished Cid Stats")
  battlescreen1curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Top Char Battle Cur Hit Pts")
  battlescreen1curhp = memoryrecord_getValue(battlescreen1curhpaddress)
  battlescreen2curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Mid Char Battle Cur Hit Pts")
  battlescreen2curhp = memoryrecord_getValue(battlescreen2curhpaddress)
  battlescreen3curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Btm Char Battle Cur Hit Pts")
  battlescreen3curhp = memoryrecord_getValue(battlescreen3curhpaddress)
--print("Finished Cur HP")
  --battlescreen4curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "4th Battle Screen Cur HP")
  --battlescreen4curhp = memoryrecord_getValue(battlescreen4curhpaddress)
  battlescreen1maxhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Top Char Battle Max Hit Pts")
  battlescreen1maxhp = memoryrecord_getValue(battlescreen1maxhpaddress)
  battlescreen2maxhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Mid Char Battle Max Hit Pts")
  battlescreen2maxhp = memoryrecord_getValue(battlescreen2maxhpaddress)
  battlescreen3maxhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Btm Char Battle Max Hit Pts")
  battlescreen3maxhp = memoryrecord_getValue(battlescreen3maxhpaddress)
--print("Finished Max HP")
  --battlescreen4maxhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "4th Battle Screen Max HP")
  --battlescreen4maxhp = memoryrecord_getValue(battlescreen4maxhpaddress)
  battlescreen1curmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Top Char Battle Cur Mag Pts")
  battlescreen1curmp = memoryrecord_getValue(battlescreen1curmpaddress)
  battlescreen2curmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Mid Char Battle Cur Mag Pts")
  battlescreen2curmp = memoryrecord_getValue(battlescreen2curmpaddress)
  battlescreen3curmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Btm Char Battle Cur Mag Pts")
  battlescreen3curmp = memoryrecord_getValue(battlescreen3curmpaddress)
--print("Finished Cur MP")
  --battlescreen4curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "4th Battle Screen Cur HP")
  --battlescreen4curhp = memoryrecord_getValue(battlescreen4curhpaddress)
  battlescreen1maxmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Top Char Battle Max Mag Pts")
  battlescreen1maxmp = memoryrecord_getValue(battlescreen1maxmpaddress)
  battlescreen2maxmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Mid Char Battle Max Mag Pts")
  battlescreen2maxmp = memoryrecord_getValue(battlescreen2maxmpaddress)
  battlescreen3maxmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Btm Char Battle Max Mag Pts")
  battlescreen3maxmp = memoryrecord_getValue(battlescreen3maxmpaddress)
--print("Hero Battle screen finished")
  enemy1curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 1 Cur Hit Pts")
  enemy2curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 2 Cur Hit Pts")
  enemy3curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 3 Cur Hit Pts")
  enemy4curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 4 Cur Hit Pts")
  enemy5curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 5 Cur Hit Pts")
  enemy6curhpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 6 Cur Hit Pts")
  enemy1curmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 1 Cur Magic Pts")
  enemy2curmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 2 Cur Magic Pts")
  enemy3curmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 3 Cur Magic Pts")
  enemy4curmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 4 Cur Magic Pts")
  enemy5curmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 5 Cur Magic Pts")
  enemy6curmpaddress = addresslist_getMemoryRecordByDescription(addresslist, "Enemy 6 Cur Magic Pts")
--print("Finished enemy battle screen")
  battlescreen1address = addresslist_getMemoryRecordByDescription(addresslist, "Pos Battle Byte = 1546")
  --battlescreen2address = addresslist_getMemoryRecordByDescription(addresslist, "Pos battle screen 2")
  --battlescreen3address = addresslist_getMemoryRecordByDescription(addresslist, "Pos battle screen 3")
  --battlescreen4address = addresslist_getMemoryRecordByDescription(addresslist, "Pos battle screen 4")
  --battlescreen5address = addresslist_getMemoryRecordByDescription(addresslist, "Pos battle screen 5")
  battlescreen1 = memoryrecord_getValue(battlescreen1address)
--print("Obtained the battle byte")
  --battlescreen2 = memoryrecord_getValue(battlescreen2address)
  --battlescreen3 = memoryrecord_getValue(battlescreen3address)
  --battlescreen4 = memoryrecord_getValue(battlescreen4address)
  --battlescreen5 = memoryrecord_getValue(battlescreen5address)
  --print("the 1st battle screen is ", battlescreen1 ,"the second battle screen is ", battlescreen2)
  --if tonumber(battlescreen1) == 0 and tonumber(battlescreen2) == 0 and tonumber(battlescreen3) == 255 then

    if tonumber(battlescreen1) == 1546 then -- and tonumber(battlescreen1curhp) ~= 65535 then
    --if tonumber(battlescreen5) == 128 then
  --print("enter enemy reset if statement")
  --sleep(1000)
    --resetflag = 0
  --end
  --if  tonumber(battlescreen1) == 0 and resetflag == 0 then
    --resetflag = 1
  --end
  --print("the battle screen flag is ", battlescreen1, "the reset flag is ", resetflag)
  ----if tonumber(battlescreen1) == 0 and resetflag &lt; 4 then
    --if tonumber(battlescreen1) == 0 then--and tonumber(battlescreen2) == 0 then
--reset enemy hp to 1
--print("Prepare to set enemy HP and MP")
    if tonumber(memoryrecord_getValue(enemy1curhpaddress)) ~= 0 then
    --print("the cur hp for #1 is",memoryrecord_getValue(enemy1curhpaddress))
      memoryrecord_setValue(enemy1curhpaddress, 1)
    end
    if tonumber(memoryrecord_getValue(enemy2curhpaddress)) ~= 0 then
      memoryrecord_setValue(enemy2curhpaddress, 1)
    end
    if tonumber(memoryrecord_getValue(enemy3curhpaddress)) ~= 0 then
      memoryrecord_setValue(enemy3curhpaddress, 1)
    end
    if tonumber(memoryrecord_getValue(enemy4curhpaddress)) ~= 0 then
      memoryrecord_setValue(enemy4curhpaddress, 1)
    end
    if tonumber(memoryrecord_getValue(enemy5curhpaddress)) ~= 0 then
      memoryrecord_setValue(enemy5curhpaddress, 1)
    end
    if tonumber(memoryrecord_getValue(enemy6curhpaddress)) ~= 0 then
      memoryrecord_setValue(enemy6curhpaddress, 1)
    end
    --if tonumber(memoryrecord_getValue(enemy7curhpaddress)) ~= 0 then
      --memoryrecord_setValue(enemy7curhpaddress, 1)
    --end
    --if tonumber(memoryrecord_getValue(enemy8curhpaddress)) ~= 0 then
      --memoryrecord_setValue(enemy8curhpaddress, 1)
    --end
--reset enemy mp to 0
    if tonumber(memoryrecord_getValue(enemy1curmpaddress)) ~= 0 then
    --print("the cur mp for #1 is",memoryrecord_getValue(enemy1curmpaddress))
      memoryrecord_setValue(enemy1curmpaddress, 0)
    end
    if tonumber(memoryrecord_getValue(enemy2curmpaddress)) ~= 0 then
      memoryrecord_setValue(enemy2curmpaddress, 0)
    end
    if tonumber(memoryrecord_getValue(enemy3curmpaddress)) ~= 0 then
      memoryrecord_setValue(enemy3curmpaddress, 0)
    end
    if tonumber(memoryrecord_getValue(enemy4curmpaddress)) ~= 0 then
      memoryrecord_setValue(enemy4curmpaddress, 0)
    end
    if tonumber(memoryrecord_getValue(enemy5curmpaddress)) ~= 0 then
      memoryrecord_setValue(enemy5curmpaddress, 0)
    end
    if tonumber(memoryrecord_getValue(enemy6curmpaddress)) ~= 0 then
      memoryrecord_setValue(enemy6curmpaddress, 0)
    end
    --if tonumber(memoryrecord_getValue(enemy7curmpaddress)) ~= 0 then
      --memoryrecord_setValue(enemy7curmpaddress, 0)
    --end
    --if tonumber(memoryrecord_getValue(enemy8curmpaddress)) ~= 0 then
      --memoryrecord_setValue(enemy8curmpaddress, 0)
    --end
   ----resetflag = resetflag + 1
    --print(resetflag)
    end--if tonumber(battlescreen1) == 1546 then
--print("Prepare to set hero HP and MP")
    memoryrecord_setValue(curstatus1address, 0)
  if curhp1 ~= maxhp1 then
    memoryrecord_setValue(curhp1address, maxhp1)
  end
  if curmp1 ~= maxmp1 then
    memoryrecord_setValue(curmp1address, maxmp1)
  end
  if battlescreen1curhp ~= battlescreen1maxhp then
    memoryrecord_setValue(battlescreen1curhpaddress, battlescreen1maxhp)
  end
--print("Finished top battle screen and first hero constant HP and MP")
  memoryrecord_setValue(curstatus2address, 0)
  if curhp2 ~= maxhp2 then
    memoryrecord_setValue(curhp2address, maxhp2)
  end
  if curmp2 ~= maxmp2 then
    memoryrecord_setValue(curmp2address, maxmp2)
  end
  if battlescreen2curhp ~= battlescreen2maxhp then
    memoryrecord_setValue(battlescreen2curhpaddress, battlescreen2maxhp)
  end
--print("Finished mid battle screen and second hero constant HP and MP")
  memoryrecord_setValue(curstatus3address, 0)
  if curhp3 ~= maxhp3 then
    memoryrecord_setValue(curhp3address, maxhp3)
  end
  if curmp3 ~= maxmp3 then
    memoryrecord_setValue(curmp3address, maxmp3)
  end
  if battlescreen3curhp ~= battlescreen3maxhp then
    memoryrecord_setValue(battlescreen3curhpaddress, battlescreen3maxhp)
  end
--print("Finished btm battle screen and third hero constant HP and MP")
  memoryrecord_setValue(curstatus4address, 0)
  if curhp4 ~= maxhp4 then
    memoryrecord_setValue(curhp4address, maxhp4)
  end
  if curmp4 ~= maxmp4 then
    memoryrecord_setValue(curmp4address, maxmp4)
  end

  memoryrecord_setValue(curstatus5address, 0)
  if curhp5 ~= maxhp5 then
    memoryrecord_setValue(curhp5address, maxhp5)
  end
  if curmp5 ~= maxmp5 then
    memoryrecord_setValue(curmp5address, maxmp5)
  end

  memoryrecord_setValue(curstatus6address, 0)
  if curhp6 ~= maxhp6 then
    memoryrecord_setValue(curhp6address, maxhp6)
  end
  if curmp6 ~= maxmp6 then
    memoryrecord_setValue(curmp6address, maxmp6)
  end

  memoryrecord_setValue(curstatus7address, 0)
  if curhp7 ~= maxhp7 then
    memoryrecord_setValue(curhp7address, maxhp7)
  end
  if curmp7 ~= maxmp7 then
    memoryrecord_setValue(curmp7address, maxmp7)
  end

  memoryrecord_setValue(curstatus8address, 0)
  if curhp8 ~= maxhp8 then
    memoryrecord_setValue(curhp8address, maxhp8)
  end
  if curmp8 ~= maxmp8 then
    memoryrecord_setValue(curmp8address, maxmp8)
  end

  memoryrecord_setValue(curstatus9address, 0)
  if curhp9 ~= maxhp9 then
    memoryrecord_setValue(curhp9address, maxhp9)
  end
  if curmp9 ~= maxmp9 then
    memoryrecord_setValue(curmp9address, maxmp9)
  end

end--function MaxHP(sender)

function ConstLimit(sender)
local addresslist = getAddressList()
limit1address = addresslist_getMemoryRecordByDescription(addresslist, "Top Char Battle Limit Bar")
limit1 = memoryrecord_getValue(limit1address)
limit2address = addresslist_getMemoryRecordByDescription(addresslist, "Mid Char Battle Limit Bar")
limit2 = memoryrecord_getValue(limit2address)
limit3address = addresslist_getMemoryRecordByDescription(addresslist, "Btm Char Battle Limit Bar")
limit3 = memoryrecord_getValue(limit3address)
limittopaddress = addresslist_getMemoryRecordByDescription(addresslist, "Top Char in Party")
limittop = memoryrecord_getValue(limittopaddress)
limitmidaddress = addresslist_getMemoryRecordByDescription(addresslist, "Mid Char in Party")
limitmid = memoryrecord_getValue(limitmidaddress)
limitbtmaddress = addresslist_getMemoryRecordByDescription(addresslist, "Btm Char in Party")
limitbtm = memoryrecord_getValue(limitbtmaddress)
limitheroaddress = addresslist_getMemoryRecordByDescription(addresslist, "Hero Limit Bar (+hE)")
--limithero = memoryrecord_getValue(limitheroaddress)
limitbaraddress = addresslist_getMemoryRecordByDescription(addresslist, "Barret Limit Bar (+hE)")
--limitbar = memoryrecord_getValue(limitbaraddress)
limittifaddress = addresslist_getMemoryRecordByDescription(addresslist, "Tifa Limit Bar (+hE)")
--limittif = memoryrecord_getValue(limittifaddress)
limitaeraddress = addresslist_getMemoryRecordByDescription(addresslist, "Aeris Limit Bar (+hE)")
--limitaer = memoryrecord_getValue(limitaeraddress)
limitnanaddress = addresslist_getMemoryRecordByDescription(addresslist, "Nanaki Limit Bar (+hE)")
--limitnan = memoryrecord_getValue(limitnanaddress)
limityufaddress = addresslist_getMemoryRecordByDescription(addresslist, "Yuffie Limit Bar (+hE)")
--limityuf = memoryrecord_getValue(limityufaddress)
limitcataddress = addresslist_getMemoryRecordByDescription(addresslist, "Cait Sith Limit Bar (+hE)")
--limitcat = memoryrecord_getValue(limitcataddress)
limitvinaddress = addresslist_getMemoryRecordByDescription(addresslist, "Vincent Limit Bar (+hE)")
--limitvin = memoryrecord_getValue(limitvinaddress)
limitcidaddress = addresslist_getMemoryRecordByDescription(addresslist, "Cid Limit Bar (+hE)")
--limitcid = memoryrecord_getValue(limitcidaddress)
battlescreen1address = addresslist_getMemoryRecordByDescription(addresslist, "Pos Battle Byte = 1546")
battlescreen1 = memoryrecord_getValue(battlescreen1address)
if tonumber(battlescreen1) == 1546 then
  if limit1 ~= 255 then
    memoryrecord_setValue(limit1address, 255)
  end
  if limit2 ~= 255 then
    memoryrecord_setValue(limit2address, 255)
  end
  if limit3 ~= 255 then
    memoryrecord_setValue(limit3address, 255)
  end
end
if tonumber(battlescreen1) ~= 1546 then
  if tonumber(limittop) == 0 then
    memoryrecord_setValue(limitheroaddress, 255)
  elseif tonumber(limittop) == 1 then
    memoryrecord_setValue(limitbaraddress, 255)
  elseif tonumber(limittop) == 2 then
    memoryrecord_setValue(limittifaddress, 255)
  elseif tonumber(limittop) == 3 then
    memoryrecord_setValue(limitaeraddress, 255)
  elseif tonumber(limittop) == 4 then
    memoryrecord_setValue(limitnanaddress, 255)
  elseif tonumber(limittop) == 5 then
    memoryrecord_setValue(limityufaddress, 255)
  elseif tonumber(limittop) == 6 then
    memoryrecord_setValue(limitcataddress, 255)
  elseif tonumber(limittop) == 7 then
    memoryrecord_setValue(limitvinaddress, 255)
  elseif tonumber(limittop) == 8 then
    memoryrecord_setValue(limitcidaddress, 255)
  end
  if tonumber(limitmid) == 0 then
    memoryrecord_setValue(limitheroaddress, 255)
  elseif tonumber(limitmid) == 1 then
    memoryrecord_setValue(limitbaraddress, 255)
  elseif tonumber(limitmid) == 2 then
    memoryrecord_setValue(limittifaddress, 255)
  elseif tonumber(limitmid) == 3 then
    memoryrecord_setValue(limitaeraddress, 255)
  elseif tonumber(limitmid) == 4 then
    memoryrecord_setValue(limitnanaddress, 255)
  elseif tonumber(limitmid) == 5 then
    memoryrecord_setValue(limityufaddress, 255)
  elseif tonumber(limitmid) == 6 then
    memoryrecord_setValue(limitcataddress, 255)
  elseif tonumber(limitmid) == 7 then
    memoryrecord_setValue(limitvinaddress, 255)
  elseif tonumber(limitmid) == 8 then
    memoryrecord_setValue(limitcidaddress, 255)
  end
  if tonumber(limitbtm) == 0 then
    memoryrecord_setValue(limitheroaddress, 255)
  elseif tonumber(limitbtm) == 1 then
    memoryrecord_setValue(limitbaraddress, 255)
  elseif tonumber(limitbtm) == 2 then
    memoryrecord_setValue(limittifaddress, 255)
  elseif tonumber(limitbtm) == 3 then
    memoryrecord_setValue(limitaeraddress, 255)
  elseif tonumber(limitbtm) == 4 then
    memoryrecord_setValue(limitnanaddress, 255)
  elseif tonumber(limitbtm) == 5 then
    memoryrecord_setValue(limityufaddress, 255)
  elseif tonumber(limitbtm) == 6 then
    memoryrecord_setValue(limitcataddress, 255)
  elseif tonumber(limitbtm) == 7 then
    memoryrecord_setValue(limitvinaddress, 255)
  elseif tonumber(limitbtm) == 8 then
    memoryrecord_setValue(limitcidaddress, 255)
  end
end
end

function ConstEX(sender)
--local addresslist = getAddressList()
EXvalue = tonumber(CheatPanel_CEEdit2.Text);
--EXvalue = tonumber(control_getCaption(CheatPanel_CEEdit2))
if (EXvalue) then
  local entry = getAddressList().getMemoryRecordByDescription("Exp Rec From Battle");
  EX = entry.value;
  entry.value = EXvalue;
end
--EXaddress = addresslist_getMemoryRecordByDescription(addresslist, "Exp Rec From Battle")
--EX = memoryrecord_getValue(EXaddress)
--memoryrecord_setValue(EXaddress, EXvalue)
end

function ConstAP(sender)
--local addresslist = getAddressList();
APvalue = tonumber(CheatPanel_CEEdit1.Text);
--APvalue = tonumber(control_getCaption(CheatPanel_CEEdit1))
if (APvalue) then
  local entry = getAddressList().getMemoryRecordByDescription("AP Rec From Battle");
  AP = entry.value;
  entry.value = APvalue
end
--APaddress = addresslist_getMemoryRecordByDescription(addresslist, "AP Rec From Battle")
--AP = memoryrecord_getValue(APaddress)
--memoryrecord_setValue(APaddress, APvalue)
end

function ConstSPHS(sender)
--local addresslist = getAddressList()
SaveGameaddress = addresslist_getMemoryRecordByDescription(addresslist, "Save Anywhere (0 All, 1 Save, 2 PHS)")
SaveGame = memoryrecord_getValue(SaveGameaddress)
PHSaddress = addresslist_getMemoryRecordByDescription(addresslist, "Save And PHS Visible (255)")
PHS = memoryrecord_getValue(PHSaddress)
  if boxstateSPHS == cbChecked then
    SaveGamePrevious = SaveGame
    PHSPrevious = PHS
    memoryrecord_setValue(SaveGameaddress, 0)
    memoryrecord_setValue(PHSaddress, 255)
  else--if boxstateSPHS == cbUnchecked then
    memoryrecord_setValue(SaveGameaddress, SaveGamePrevious)
    memoryrecord_setValue(PHSaddress, PHSPrevious)
  end
end

--local addresslist = getAddressList()
--SaveGameaddress = addresslist_getMemoryRecordByDescription(addresslist, "Save Anywhere (0 All, 1 Save, 2 PHS)")




form_show(CheatPanel)
</LuaScript>
</CheatTable>
