<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="11">
  <CheatEntries>
    <CheatEntry>
      <ID>49</ID>
      <Description>"[X] &lt;== Darkest Hour v1.02 Script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
=========================================== 002-12
 Game Title    : Darkest Hour
 Game Version  : 1.02
 Process Name  : Darkest Hour.exe
 Script Version: 1.0
 CE Version    : 6.1
 Release date  : 08-Jan-2012
 Author        : Recifense
 Features:
 - Minimum Resources (Oil, Energy, Rare Material, Money, Metal, Supplies, Menpower)
 - Quick Production (1 day)
 - God Mode (Strength/Organization)
 - Quick Ownership (of invaded cities/provinces/whatever) upon selecting
 - Research in 5 days
 - Super Units (Land/Sea/Air):
   - Minimum Supply Need
   - Minimum Fuel Need
   - Minimum Speed    = 90 km/h
   - Minimum Morale   = 90
   - Soft Attack      = 20
   - Hard Attack      = 20
   - Air Attack       = 10
   - Sub Attack       = 10
   - Convoy Attack    = 10
   - Strategic Attack = 20
   - Navel Attack     = 20
=========================================== 004-12
}

[ENABLE]
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert("Darkest Hour.exe"+21bd1a,d9 86 46 2f 00 00)
assert("Darkest Hour.exe"+0dfa6d,db 46 24 8b 46 2c)
assert("Darkest Hour.exe"+0e8310,d9 9e da 00 00 00)
assert("Darkest Hour.exe"+0e8301,d9 9e e2 00 00 00)
assert("Darkest Hour.exe"+0e8ebe,d8 8e de 00 00 00)
assert("Darkest Hour.exe"+1c3462,8b 83 d8 03 00 00)
assert("Darkest Hour.exe"+31d771,d8 44 be 24 d9 5c be 24)

//=========================================
alloc(MyCode,1024)
//=========================================
// Declaration section
label(_MonRes)
label(_MonR0)
label(_MonR1)
label(_MonR2)
label(_MonR3)
label(_MonR4)
label(_MonR5)
label(_BackMR)
label(_ExitMR)
label(_MonProd)
label(_BackMP)
label(_ExitMP)
label(_MonStrengthC)
label(_BackMSc)
label(_ExitMSc)
label(_MonOrganC)
label(_BackMOc)
label(_ExitMOc)
label(_MonUnits)
label(_BackMU)
label(_ExitMU)
label(_MonUG)
label(_MonU0)
label(_MonU0A)
label(_MonU0B)
label(_MonU00)
label(_MonU01)
label(_MonU1)
label(_MonU10)
label(_MonU11)
label(_MonU2)
label(_MonU20)
label(_MonU21)
label(_MonU22)
label(_MonU23)
label(_MonCity)
label(_BackMC)
label(_ExitMC)
label(_MonResearch)
label(_BackMRe)
label(_ExitMRe)
label(pPlayer)
label(pCity)
label(iEnableMR)
label(iEnableMP)
label(iEnableGM)
label(iEnableMU)
label(iEnableMC)
label(iEnableMRe)
label(fResPoints)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pPlayer)
registersymbol(pCity)
registersymbol(iEnableMR)
registersymbol(iEnableMP)
registersymbol(iEnableGM)
registersymbol(iEnableMU)
registersymbol(iEnableMC)
registersymbol(iEnableMRe)

//=========================================
MyCode:
//=========================================
_MonRes:
 push eax

 mov [pPlayer],edi

 cmp dword ptr [iEnableMR],0
 je _ExitMR                        // Jump if feature is disabled
//Oil
 mov eax,(float)50000.0
 cmp eax,[esi+00002F46]
 jle _MonR0

 mov [esi+00002F46],eax
//Metal
_MonR0:
 cmp eax,[esi+00002F4A]
 jle _MonR1

 mov [esi+00002F4A],eax
//Energy
_MonR1:
 cmp eax,[esi+00002F4E]
 jle _MonR2

 mov [esi+00002F4E],eax
//Rare Material
_MonR2:
 cmp eax,[esi+00002F52]
 jle _MonR3

 mov [esi+00002F52],eax
//Supplies
_MonR3:
 cmp eax,[esi+00002F56]
 jle _MonR4

 mov [esi+00002F56],eax
//Money
_MonR4:
 cmp eax,[esi+00002F5a]
 jle _MonR5

 mov [esi+00002F5a],eax
//Menpower
_MonR5:
 mov eax,(float)5000.0
 cmp eax,[esi+00002F5e]
 jle _ExitMR

 mov [esi+00002F5e],eax

_ExitMR:
 pop eax

 fld dword ptr [esi+00002F46]      // Original code
 jmp _BackMR                       // Back to main code

//=========================================
_MonProd:
 cmp dword ptr [iEnableMP],0
 je _ExitMP                     // Jump if feature is disabled

 mov eax,[esi+2c]               // Get ptr to owner
 cmp eax,[pPlayer]
 jne _ExitMP

 mov dword ptr [esi+46],(float)1.0 // 100% complete

_ExitMP:
 fild dword ptr [esi+24]        // Original code
 mov eax,[esi+2C]               // Original code
 jmp _BackMP                    // Back to main code

//=========================================
// Decreased in Combat
_MonStrengthC:
 push ebx

 fstp dword ptr [esi+000000DA]  // Original code

 cmp dword ptr [iEnableGM],0
 je _ExitMSc                    // Jump if feature is disabled

 mov ebx,[esi+4a]               // Get ptr to owner
 cmp ebx,[pPlayer]
 jne _ExitMSc

 mov ebx,(float)100.0
 mov [esi+000000DA],ebx         // Strength = 100%

_ExitMSc:
 pop ebx
 jmp _BackMSc                   // Back to main code

//=========================================
// Decreased in Combat
_MonOrganC:
 push ecx

 fstp dword ptr [esi+000000E2]  // Original code

 cmp dword ptr [iEnableGM],0
 je _ExitMOc                    // Jump if feature is disabled

 mov ecx,[esi+4a]               // Get ptr to owner
 cmp ecx,[pPlayer]
 jne _ExitMOc

 mov ecx,[esi+000000ea]         // Get current Organization

 cmp ecx,[esi+000000E2]         // Organization &gt;= maximum?
 jle _ExitMOc                   // Jump if true

 mov [esi+000000E2],ecx         // Organization = maximum

_ExitMOc:
 pop ecx
 jmp _BackMOc                   // Back to main code

//=========================================
// Unit upgrades
_MonUnits:
 push eax
 push ecx

 mov ecx,esi

 mov eax,[ecx+4a]               // Get ptr to owner
 cmp eax,[pPlayer]
 jne _ExitMU

 cmp dword ptr [iEnableGM],0
 je _MonUG                      // Jump if feature is disabled

 mov eax,[ecx+000000de]         // get max Strength
 mov [ecx+000000da],eax         // Make Current = Max

 mov eax,[ecx+000000e6]         // get max organization
 mov [ecx+000000e2],eax         // Make Current = Max

_MonUG:
 cmp dword ptr [iEnableMU],0
 je _ExitMU                     // Jump if feature is disabled

 mov eax,(float)90.0
 mov [ecx+000000ea],eax         // Morale    = 90%

 cmp eax,[ecx+000000fe]
 jle _MonU0

 mov [ecx+000000fe],eax         // Max Speed = 90

_MonU0:
 mov eax,(float)0.01
 cmp eax,[ecx+000000f6]
 jge _MonU0A

 mov [ecx+000000f6],eax         // Supply Comsumption = 0.01

_MonU0A:
 cmp eax,[ecx+000000fa]
 jge _MonU0B

 mov [ecx+000000fa],eax         // Fuel Comsumption = 0.01

_MonU0B:
 mov eax,[ecx]
//--------------
 cmp eax,"Darkest Hour.exe"+3939e8 // Land Unit?
 jne _MonU1                     // Jump if false

 mov eax,(float)20.0
// Soft Attack
 cmp dword ptr [ecx+0000015e],0
 je _MonU00

 cmp eax,[ecx+0000015e]
 jle _MonU00

 mov [ecx+0000015e],eax

_MonU00:
// Hard Attack
 cmp dword ptr [ecx+00000162],0
 je _MonU01

 cmp eax,[ecx+00000162]
 jle _MonU01

 mov [ecx+00000162],eax

_MonU01:
// Air Attack
 cmp dword ptr [ecx+00000106],0
 jz _ExitMU

 mov eax,(float)10.0

 cmp eax,[ecx+00000106]
 jle _ExitMU

 mov [ecx+00000106],eax
 jmp _ExitMU
//--------------
_MonU1:
 cmp eax,"Darkest Hour.exe"+393930  // Sea Unit?
 jne _MonU2                     // Jump if false

 mov eax,(float)10.0
// Sub Attack
 cmp dword ptr [ecx+00000156],0
 je _MonU10

 cmp eax,[ecx+00000156]
 jle _MonU10

 mov [ecx+00000156],eax

_MonU10:
// Convoy Attack
 cmp dword ptr [ecx+0000016e],0
 je _MonU11

 cmp eax,[ecx+0000016e]
 jle _MonU11

 mov [ecx+0000016e],eax

_MonU11:
// Air Attack
 cmp dword ptr [ecx+00000106],0
 je _ExitMU

 cmp eax,[ecx+00000106]
 jle _ExitMU

 mov [ecx+00000106],eax
 jmp _ExitMU
//--------------
_MonU2:
 cmp eax,"Darkest Hour.exe"+39398c // Really Air Unit?
 jne _ExitMU                    // Jump if false

 mov eax,(float)20.0
// Strategic Attack
 cmp dword ptr [ecx+0000015e],0
 je _MonU20

 cmp eax,[ecx+0000015e]
 jle _MonU20

 mov [ecx+0000015e],eax

_MonU20:
// Soft Attack
 cmp dword ptr [ecx+00000162],0
 je _MonU21

 cmp eax,[ecx+00000162]
 jle _MonU21

 mov [ecx+00000162],eax

_MonU21:
// Hard Attack
 cmp dword ptr [ecx+00000166],0
 je _MonU22

 cmp eax,[ecx+00000166]
 jle _MonU22

 mov [ecx+00000166],eax

_MonU22:
// Naval Attack
 cmp dword ptr [ecx+0000016a],0
 je _MonU23

 cmp eax,[ecx+0000016a]
 jle _MonU23

 mov [ecx+0000016a],eax

_MonU23:
// Air Attack
 cmp dword ptr [ecx+00000106],0
 je _ExitMU

 cmp eax,[ecx+00000106]
 jle _ExitMU

 mov [ecx+00000106],eax
 jmp _ExitMU

_ExitMU:
 pop ecx
 pop eax

 fmul dword ptr [esi+000000DE]  // Original code
 jmp _BackMU                    // Back to main code

//=========================================
// Quick ownership
_MonCity:
 mov [pCity],ebx                // Save pointer for debugging

 cmp dword ptr [iEnableMC],0
 je _ExitMC                     // Jump if feature is disabled

 mov eax,[ebx+000003D8]         // Get Invader/Owner ID
 cmp eax,[pPlayer]              // Is it the Player ?
 jne _ExitMC                    // Jump if false

 mov [ebx+000003D4],eax         // Change City's ownership

_ExitMC:
 mov eax,[ebx+000003D8]         // Original code
 jmp _BackMC                    // Back to main code

//=========================================
// Quick Research
_MonResearch:
 push eax

 fadd dword ptr [esi+edi*4+24]  // Original code

 cmp dword ptr [iEnableMRe],0
 je _ExitMRe                    // Jump if feature is disabled

 mov eax,[esi+20]               // Get Owner ID
 cmp eax,[pPlayer]              // Is it the Player ?
 jne _ExitMRe                   // Jump if false

 fadd dword ptr [fResPoints]    // Add bonus :)

_ExitMRe:
 pop eax

 fstp dword ptr [esi+edi*4+24]  // Original code
 jmp _BackMRe                   // Back to main code

//=========================================
 db '==========================&gt;'
 db 'CE6.1 Script by Recifense 010812'
//=========================================
// Variables
iEnableMR:
 dd 1
iEnableMP:
 dd 1
iEnableGM:
 dd 1
iEnableMU:
 dd 1
iEnableMC:
 dd 1
iEnableMRe:
 dd 1
pPlayer:
 dd MyCode
pCity:
 dd 0
fResPoints:
 dd (float)500.0

//=========================================
// Hacking Points
//"Darkest Hour.exe"+211daa:
"Darkest Hour.exe"+21bd1a:
 jmp _MonRes
 nop
_BackMR:

//"Darkest Hour.exe"+0dc23d:
"Darkest Hour.exe"+0dfa6d:
 jmp _MonProd
 nop
_BackMP:

//"Darkest Hour.exe"+0e43e5:
"Darkest Hour.exe"+0e8310:
 jmp _MonStrengthC
 nop
_BackMSc:

//"Darkest Hour.exe"+0e43dc:
"Darkest Hour.exe"+0e8301:
 jmp _MonOrganC
 nop
_BackMOc:

//"Darkest Hour.exe"+0e508d:
"Darkest Hour.exe"+0e8ebe:
 jmp _MonUnits
 nop
_BackMU:

//"Darkest Hour.exe"+1ba102:
"Darkest Hour.exe"+1c3462:
 jmp _MonCity
 nop
_BackMC:

//"Darkest Hour.exe"+310ac1:
"Darkest Hour.exe"+31d771:
 jmp _MonResearch
 nop
 nop
 nop
_BackMRe:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
//"Darkest Hour.exe"+211daa:
"Darkest Hour.exe"+21bd1a:
// fld dword ptr [esi+00002F46]
 db d9 86 46 2f 00 00

//"Darkest Hour.exe"+0dc23d:
"Darkest Hour.exe"+0dfa6d:
// fild dword ptr [esi+24]
// mov eax,[esi+2C]
 db db 46 24 8b 46 2c

//"Darkest Hour.exe"+0e43e5:
"Darkest Hour.exe"+0e8310:
// fstp dword ptr [esi+000000DA]
 db d9 9e da 00 00 00

//"Darkest Hour.exe"+0e43dc:
"Darkest Hour.exe"+0e8301:
// fstp dword ptr [esi+000000E2]
 db d9 9e e2 00 00 00

//"Darkest Hour.exe"+0e508d:
"Darkest Hour.exe"+0e8ebe:
// fmul dword ptr [esi+000000DE]
 db d8 8e de 00 00 00

//"Darkest Hour.exe"+1ba102:
"Darkest Hour.exe"+1c3462:
// mov eax,[ebx+000003D8]
 db 8b 83 d8 03 00 00

//"Darkest Hour.exe"+310ac1:
"Darkest Hour.exe"+31d771:
// fadd dword ptr [esi+edi*4+24]
// fstp dword ptr [esi+edi*4+24]
 db d8 44 be 24 d9 5c be 24

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pPlayer)
unregistersymbol(pCity)
unregistersymbol(iEnableMR)
unregistersymbol(iEnableMP)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMU)
unregistersymbol(iEnableMC)
unregistersymbol(iEnableMRe)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
v1.00

PRODUCTION:
0000 = 00785280
0004 = paTypeObjectUnderProduction (ex.: 4th Infantry Division)
0008 = 0078526c
0012 = 00785264
002c = pOwner
004c = f%Completed

LAND UNIT:
0000 = 00783990
0004 = paName  (ie, 1st Infantry Division)
0008 = 0078397c
0024 = 00785404
004c = pPlayer (ie, ENG)
0078 = ppArmyName
007c = fStrength (100% = 100.0)
0080 = fStrength
0084 = fcOrganization
0088 = fMorale
008c = fSupply Consumption
0090 = fFuel   Consumption
0094 = fMaximum Speed
0098 = f0
009c = fmOrganization
00a0 = fAir Defence
00a4 = fAir Attack
00a8 = fXP
0102 = pNameInfo
0118 = fMenpower
0124 = fMenpower
012a = fDefensiveness
012e = fToughness
0132 = fSoftness
0136 = fSuppression
013a = fSoft Attack
013e = fHard Attack
0142 = fXP ?
0146 = fmSpeed

AIR UNIT:
0000 = 00785464
0004 = paName  (ie, 1st Infantry Division)
0008 = 00785450
0028 = 00785404
004c = pPlayer (ie, ENG)
0078 = ppArmyName
007c = fStrength (100% = 100.0)
0080 = fStrength
0084 = fcOrganization
0088 = fMorale
008c = fSupply Consumption
0090 = fFuel   Consumption
0094 = fMaximum Speed
0098 = f0
009c = fmOrganization
00a0 = fAir Defence
00a4 = fAir Attack
00a8 = fXP
0102 = pNameInfo
012e = fSea Detection
0132 = fAir Detection
0136 = fSurface Detection
013a = fStrategic Attack
013e = fSoft Attack
0142 = fHard Attack
0146 = fNaval Attack
014e = fRange
0152 = fRange

SEA UNIT:
0000 = 007838e8
0004 = paName  (ie, 1st Infantry Division)
0008 = 007838d4
0028 = 00785404
004c = pPlayer (ie, ENG)
0078 = ppArmyName
007c = fStrength (100% = 100.0)
0080 = fStrength
0084 = fcOrganization
0088 = fMorale
008c = fSupply Consumption
0090 = fFuel   Consumption
0094 = fMaximum Speed
0098 = f0
009c = fmOrganization
00a0 = fAir Defence
00a4 = fAir Attack
00a8 = fXP
0102 = pNameInfo
012a = fSea Detection
012e = fAir Detection
0132 = fSub Detection
0136 = fMax Fire Distance (0.4 = 40)
013a = fVisability
013e = fSea Defense
0142 = fSea Attack
0146 = fSub Attack
014A = fConvoy Attack
014e = fShore Bombardment
0156 = fRange

CITY:
0000 = 00784ee0
0004 = paName
0008 = 00784edc
000c = 00784ec4
03d4 = pOwner
03d8 = pOwner/pInvader

RESEARCH:
0000 = 00796b78
0008 = 00796b88
0020 = pOwner
0024 = fProgress
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Enable/Disable Minimum Resources =&gt; (1/0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Enable/Disable Production in 1 Day =&gt; (1/0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMP</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Enable/Disable God Mode =&gt; (1/0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Enable/Disable Quick Ownership =&gt; (1/0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Enable/Disable Research in 5 Days =&gt; (1/0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMRe</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Enable/Disable Upgrade Units =&gt; (1/0)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMU</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pUnit</Name>
      <Address>03CB00E4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRes</Name>
      <Address>03CB00E8</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>=========================================== 002-12
 Game Title    : Darkest Hour
 Game Version  : 1.02
 Process Name  : Darkest Hour.exe
 Script Version: 1.0
 CE Version    : 6.1
 Release date  : 08-Jan-2012
 Author        : Recifense
 Features:
 - Minimum Resources (Oil, Energy, Rare Material, Money, Metal, Supplies, Menpower)
 - Quick Production (1 day)
 - God Mode (Strength/Organization)
 - Quick Ownership (of invaded cities/provinces/whatever) upon selecting
 - Research in 5 days
 - Super Units (Land/Sea/Air):
   - Minimum Supply Need
   - Minimum Fuel Need
   - Minimum Speed    = 90 km/h
   - Minimum Morale   = 90
   - Soft Attack      = 20
   - Hard Attack      = 20
   - Air Attack       = 10
   - Sub Attack       = 10
   - Convoy Attack    = 10
   - Strategic Attack = 20
   - Navel Attack     = 20
=========================================== 004-12
</Comments>
</CheatTable>
