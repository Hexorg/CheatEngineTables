<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"enable .3"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(disruptorQuantityReadOnUseRet2AOB,MirrorsEdgeCatalyst.exe,84 C0 75 27 40 84 F6)
registersymbol(disruptorQuantityReadOnUseRet2AOB)

///

aobscanmodule(someXmmReadAOB,MirrorsEdgeCatalyst.exe,48 8B 08 E8 ** ** ** ** F3 0F 10 00 48 83 C4 28 C3)
registersymbol(someXmmReadAOB)

label(bInstantFFShieldBar)
registersymbol(bInstantFFShieldBar)
label(pFocusShieldBar)
registersymbol(pFocusShieldBar)

alloc(newmem,2048,someXmmReadAOB+8) //"MirrorsEdgeCatalyst.exe"+3122EF5)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rbx
mov rbx,[pFocusShieldBar]
cmp rax,rbx
jne @f
mov ebx,[bInstantFFShieldBar]
test bx,bx
jz originalcode
mov ebx,(float)100
movd xmm0,ebx
movss [rax],xmm0
jmp originalcode

@@:

originalcode:
pop rbx
movss xmm0,[rax]
add rsp,28

exit:
jmp returnhere

///
bInstantFFShieldBar:
dd 0
pFocusShieldBar:
///

someXmmReadAOB+8: //"MirrorsEdgeCatalyst.exe"+3122EF5:
jmp newmem
nop
nop
nop
returnhere:

///*******************************************///

aobscanmodule(focusShieldBarReadOnFreeRunAOB,MirrorsEdgeCatalyst.exe,48 8B 02 0F 2E 00 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 5B C3)
registersymbol(focusShieldBarReadOnFreeRunAOB)

alloc(newmem1,2048,focusShieldBarReadOnFreeRunAOB) //"MirrorsEdgeCatalyst.exe"+3925F21)
label(returnhere1)
label(originalcode1)
label(exit1)

newmem1: //this is allocated memory, you have read,write,execute access
//place your code here
mov rax,[rdx]
mov [pFocusShieldBar],rax
mov dword ptr [rax],(float)100

originalcode1:
mov rax,[rdx]
ucomiss xmm0,[rax]

exit1:
jmp returnhere1

///

focusShieldBarReadOnFreeRunAOB: //"MirrorsEdgeCatalyst.exe"+3925F21:
jmp newmem1
nop
returnhere1:

///*******************************************///

aobscanmodule(someXmmWriteInMSVCR120,MSVCR120.dll,8B 02 41 89 02 49 8B C3 C3)
registersymbol(someXmmWriteInMSVCR120)

alloc(newmem2,2048,someXmmWriteInMSVCR120) //"MSVCR120.dll"+3C514)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov rax,[pFocusShieldBar]
cmp r10,rax
jne @f
mov eax,[bInstantFFShieldBar]
test ax,ax
jz originalcode2
mov dword ptr [rdx],(float)100
jmp originalcode2

@@:

originalcode2:
mov eax,[rdx]
mov [r10],eax

exit2:
jmp returnhere2

///

someXmmWriteInMSVCR120: //"MSVCR120.dll"+3C514:
jmp newmem2
returnhere2:

///*******************************************///

aobscanmodule(timeOfDayReadAOB,MirrorsEdgeCatalyst.exe,F3 0F 10 4E 80 48 89 F9)
registersymbol(timeOfDayReadAOB)

label(pTimeOfDay)
registersymbol(pTimeOfDay)
label(bAdvanceTimeOfDay)
registersymbol(bAdvanceTimeOfDay)
label(bRewindTimeOfDay)
registersymbol(bRewindTimeOfDay)
label(fTimeOfDayMod)
registersymbol(fTimeOfDayMod)

alloc(newmem6,2048,timeOfDayReadAOB) //"MirrorsEdgeCatalyst.exe"+3BC4EF6)
label(returnhere6)
label(originalcode6)
label(exit6)
label(inctodm6)
label(dectodm6)
label(settodm6)
label(settod6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
lea rcx,[rsi-80]
mov [pTimeOfDay],rcx

//
sub esp,16
movdqu dqword [esp],xmm2
push rax
//

movss xmm1,[fTimeOfDayMod+c]
mov ecx,[bAdvanceTimeOfDay]
test cl,cl
jnz @f
mulss xmm1,[fTimeOfDayMod+10]
mov ecx,[bRewindTimeOfDay]
test cl,cl
jnz @f
xorps xmm1,xmm1

@@:
movss [fTimeOfDayMod+4],xmm1

@@:
movss xmm1,[fTimeOfDayMod]
comiss xmm1,[fTimeOfDayMod+4]
jb inctodm6
ja dectodm6
jmp settodm6

inctodm6:
addss xmm1,[fTimeOfDayMod+8]
comiss xmm1,[fTimeOfDayMod+4]
jbe settodm6
movss xmm1,[fTimeOfDayMod+4]
jmp settodm6

dectodm6:
subss xmm1,[fTimeOfDayMod+8]
comiss xmm1,[fTimeOfDayMod+4]
jae settodm6
movss xmm1,[fTimeOfDayMod+4]
jmp settodm6

settodm6:
movss [fTimeOfDayMod],xmm1

@@:
mov eax,(float)86400
movss xmm1,[rsi-80]
addss xmm1,[fTimeOfDayMod]
xorps xmm2,xmm2
comiss xmm1,xmm2
jae @f
movd xmm2,eax
addss xmm1,xmm2
jmp settod6

@@:
movd xmm2,eax
comiss xmm1,xmm2
jbe settod6
subss xmm1,xmm2
//xorps xmm1,xmm1

settod6:
movss [rsi-80],xmm1

//
pop rax
movdqu xmm2,dqword [esp]
add esp,16
//

originalcode6:
movss xmm1,[rsi-80]

exit6:
jmp returnhere6

///
pTimeOfDay:
dq 0
bAdvanceTimeOfDay:
dd 0
bRewindTimeOfDay:
dd 0
fTimeOfDayMod:
dd 0
dd 0
dd (float)10
dd (float)200
dd (float)-1
///

timeOfDayReadAOB: //"MirrorsEdgeCatalyst.exe"+3BC4EF6:
jmp newmem6
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
someXmmReadAOB+8: //"MirrorsEdgeCatalyst.exe"+3122EF5:
db F3 0F 10 00 48 83 C4 28
//Alt: movss xmm0,[rax]
//Alt: add rsp,28

unregistersymbol(bInstantFFShieldBar)
unregistersymbol(pFocusShieldBar)

///*******************************************///

dealloc(newmem1)
focusShieldBarReadOnFreeRunAOB: //"MirrorsEdgeCatalyst.exe"+3925F21:
db 48 8B 02 0F 2E 00
//Alt: mov rax,[rdx]
//Alt: ucomiss xmm0,[rax]

///*******************************************///

dealloc(newmem2)
someXmmWriteInMSVCR120: //"MSVCR120.dll"+3C514:
db 8B 02 41 89 02
//Alt: mov eax,[rdx]
//Alt: mov [r10],eax

///*******************************************///

dealloc(newmem6)
timeOfDayReadAOB: //"MirrorsEdgeCatalyst.exe"+3BC4EF6:
db F3 0F 10 4E 80
//Alt: movss xmm1,[rsi-80]

unregistersymbol(pTimeOfDay)
unregistersymbol(bAdvanceTimeOfDay)
unregistersymbol(bRewindTimeOfDay)
unregistersymbol(fTimeOfDayMod)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"full Focus Shield .2 (press T to activate)"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bInstantFFShieldBar:
db 1




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bInstantFFShieldBar:
db 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>82</Key>
              </Keys>
              <ID>0</ID>
              <ActivateSound>Activate</ActivateSound>
              <DeactivateSound>Deactivate</DeactivateSound>
            </Hotkey>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>84</Key>
              </Keys>
              <ID>1</ID>
              <ActivateSound>Activate</ActivateSound>
              <DeactivateSound>Deactivate</DeactivateSound>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>83</ID>
              <Description>"jump once after activate "enable" script"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>985</ID>
              <Description>"press R to deactivate"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>986</ID>
                  <Description>"Focus Shield bar"</Description>
                  <LastState Value="100" RealAddress="140B9AA0"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>pFocusShieldBar</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>84</Key>
                      </Keys>
                      <Value>100</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>967</ID>
          <Description>"inf. Disruptor usage"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(someInt32Read2AOB,MirrorsEdgeCatalyst.exe,48 8D 4B 40 8B 30)
registersymbol(someInt32Read2AOB)

alloc(newmem,2048,someInt32Read2AOB) //"MirrorsEdgeCatalyst.exe"+3163FBE)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov esi,[rax]
mov rcx,disruptorQuantityReadOnUseRet2AOB
cmp [rsp+4e8],rcx
jne originalcode
xor esi,esi

originalcode:
lea rcx,[rbx+40]
//mov esi,[rax]

exit:
jmp returnhere

///

someInt32Read2AOB: //"MirrorsEdgeCatalyst.exe"+3163FBE:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
someInt32Read2AOB: //"MirrorsEdgeCatalyst.exe"+3163FBE:
db 48 8D 4B 40 8B 30
//Alt: lea rcx,[rbx+40]
//Alt: mov esi,[rax]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>938</ID>
          <Description>"Time of Day mod"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(bEndThread_MirrorsEdgeCatalyst_keylistener1_mem)
registersymbol(bEndThread_MirrorsEdgeCatalyst_keylistener1_mem)
label(bAdvanceTimeOfDayTmp)
label(bRewindTimeOfDayTmp)

alloc(MirrorsEdgeCatalyst_keylistener1_mem,2048,"MirrorsEdgeCatalyst.exe")
registersymbol(MirrorsEdgeCatalyst_keylistener1_mem)
createthread(MirrorsEdgeCatalyst_keylistener1_mem)
label(keylistenerstart)
label(keylistenerend)
label(keylistenerexit)

MirrorsEdgeCatalyst_keylistener1_mem:
sub rsp,28

keylistenerstart:
mov dword ptr [bAdvanceTimeOfDayTmp],0
mov dword ptr [bRewindTimeOfDayTmp],0

mov rcx,11 //CTRL key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne keylistenerend

mov rcx,22 //PAGE DOWN key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne @f
mov dword ptr [bAdvanceTimeOfDayTmp],1
jmp keylistenerend

@@:
mov rcx,21 //PAGE UP key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne @f
mov dword ptr [bRewindTimeOfDayTmp],1
jmp keylistenerend

keylistenerend:
mov eax,[bAdvanceTimeOfDayTmp]
mov [bAdvanceTimeOfDay],eax
mov eax,[bRewindTimeOfDayTmp]
mov [bRewindTimeOfDay],eax
mov rcx,#100
call Sleep
cmp dword ptr [bEndThread_MirrorsEdgeCatalyst_keylistener1_mem],1
jne keylistenerstart

keylistenerexit:
add rsp,28
mov dword ptr [bEndThread_MirrorsEdgeCatalyst_keylistener1_mem],2
ret

///
bEndThread_MirrorsEdgeCatalyst_keylistener1_mem:
dd 0
bAdvanceTimeOfDayTmp:
dd 0
bRewindTimeOfDayTmp:
dd 0
///


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//obtained from SubBeam's ACS script - start//
{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "bEndThread_MirrorsEdgeCatalyst_keylistener1_mem" ) == 0 then --could be 2 already
  writeInteger( "bEndThread_MirrorsEdgeCatalyst_keylistener1_mem", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "bEndThread_MirrorsEdgeCatalyst_keylistener1_mem" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}
//obtained from SubBeam's ACS script - end//

//bEndThread_MirrorsEdgeCatalyst_keylistener1_mem:
//dd 1

unregistersymbol(bEndThread_MirrorsEdgeCatalyst_keylistener1_mem)

dealloc(MirrorsEdgeCatalyst_keylistener1_mem)
unregistersymbol(MirrorsEdgeCatalyst_keylistener1_mem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>939</ID>
              <Description>"Ctrl_PageUp to rewind"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>932</ID>
                  <Description>"bAdvanceTimeOfDay"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:no
1:yes
</DropDownList>
                  <LastState Value="0" RealAddress="13FFD0140"/>
                  <Color>008000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bAdvanceTimeOfDay</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>933</ID>
                  <Description>"bRewindTimeOfDay"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:no
1:yes
</DropDownList>
                  <LastState Value="0" RealAddress="13FFD0144"/>
                  <Color>008000</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bRewindTimeOfDay</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>940</ID>
              <Description>"Ctrl_PageDown to advance"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>934</ID>
                  <Description>"fTimeOfDayMod"</Description>
                  <LastState Value="0" RealAddress="13FFD0148"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fTimeOfDayMod</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>935</ID>
                  <Description>"fTimeOfDayMod+4"</Description>
                  <LastState Value="0" RealAddress="13FFD014C"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fTimeOfDayMod+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>936</ID>
                  <Description>"fTimeOfDayMod+8"</Description>
                  <LastState Value="10" RealAddress="13FFD0150"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fTimeOfDayMod+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>937</ID>
                  <Description>"fTimeOfDayMod+c"</Description>
                  <LastState Value="200" RealAddress="13FFD0154"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fTimeOfDayMod+c</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>931</ID>
              <Description>"current Time of Day"</Description>
              <LastState Value="28711.7832" RealAddress="118F5FDE0"/>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pTimeOfDay</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>82</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>77</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(someXmmWriteInMSVCR120,MSVCR120.dll,8B 02 41 89 02 49 8B C3 C3)
registersymbol(someXmmWriteInMSVCR120)

alloc(newmem2,2048,someXmmWriteInMSVCR120) //"MSVCR120.dll"+3C514)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov rax,[pFocusShieldBar]
cmp r10,rax
jne @f
mov eax,[bInstantFFShieldBar]
test ax,ax
jz originalcode2
cmp dword ptr [rdx],0
je originalcode2
mov dword ptr [rdx],(float)100
jmp originalcode2

@@:

originalcode2:
mov eax,[rdx]
mov [r10],eax

exit2:
jmp returnhere2

///

someXmmWriteInMSVCR120: //"MSVCR120.dll"+3C514:
jmp newmem2
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
someXmmWriteInMSVCR120: //"MSVCR120.dll"+3C514:
db 8B 02 41 89 02
//Alt: mov eax,[rdx]
//Alt: mov [r10],eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>139</ID>
          <Description>"*"</Description>
          <LastState Value="1063220245" RealAddress="1409BFA0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>1409BFA0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>868</ID>
          <Description>"No Description"</Description>
          <LastState Value="344782432" RealAddress="14658AA8"/>
          <VariableType>4 Bytes</VariableType>
          <Address>14658AA8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>869</ID>
          <Description>"No description"</Description>
          <LastState Value="0000000141B96AD0" RealAddress="155AD340"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>155AD340</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>870</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(somePointerBase1ReadAOB,MirrorsEdgeCatalyst.exe,74 08 48 8B 00 C3)
registersymbol(somePointerBase1ReadAOB)

alloc(newmem6,2048,somePointerBase1ReadAOB) //"MirrorsEdgeCatalyst.exe"+2A424BC)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
je somePointerBase1ReadAOB+1b
push rbx
mov rbx,[rcx+8]
test rbx,rbx
jz originalcode6
cmp dword ptr [rbx+10],48
jne originalcode6
mov rbx,[rcx]

originalcode6:
pop rbx
//je somePointerBase1ReadAOB+1b //MirrorsEdgeCatalyst.agsGetEyefinityConfigInfo+26CA6
mov rax,[rax]

exit6:
jmp returnhere6

///

somePointerBase1ReadAOB: //"MirrorsEdgeCatalyst.exe"+2A424BC:
jmp newmem6
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
somePointerBase1ReadAOB: //"MirrorsEdgeCatalyst.exe"+2A424BC:
db 74 08 48 8B 00
//Alt: je somePointerBase1ReadAOB+1b //MirrorsEdgeCatalyst.agsGetEyefinityConfigInfo+26CA6
//Alt: mov rax,[rax]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>871</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="156F9E38"/>
          <VariableType>4 Bytes</VariableType>
          <Address>156F9E38</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>872</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(someInt32Read1AOB,MirrorsEdgeCatalyst.exe,48 63 00 C7 44 9C 70 00 00 00 00)
registersymbol(someInt32Read1AOB)

alloc(newmem,2048,someInt32Read1AOB) //"MirrorsEdgeCatalyst.exe"+3BD703F)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov r8,[rsp+30]
test r8,r8
jz originalcode
mov r8,[r8+8]
test r8,r8
jz originalcode
cmp dword ptr [r8+10],30 //#48
jne originalcode
movsxd r8,dword ptr [rax]

originalcode:
movsxd rax,dword ptr [rax]
mov [rsp+rbx*4+70],00000000

exit:
jmp returnhere

///

someInt32Read1AOB: //"MirrorsEdgeCatalyst.exe"+3BD703F:
jmp newmem
nop
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
someInt32Read1AOB: //"MirrorsEdgeCatalyst.exe"+3BD703F:
db 48 63 00 C7 44 9C 70 00 00 00 00
//Alt: movsxd rax,dword ptr [rax]
//Alt: mov [rsp+rbx*4+70],00000000
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>873</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="142577B0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>142577B0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>874</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="2DB851734"/>
          <VariableType>Float</VariableType>
          <Address>2DB851734</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>875</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="2DB851854"/>
          <VariableType>Float</VariableType>
          <Address>2DB851854</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>876</ID>
          <Description>"No description"</Description>
          <LastState Value="6.950440383E-43" RealAddress="003AF4E8"/>
          <VariableType>Float</VariableType>
          <Address>003AF4E8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>877</ID>
          <Description>"No description"</Description>
          <LastState Value="6.950440383E-43" RealAddress="003AF508"/>
          <VariableType>Float</VariableType>
          <Address>003AF508</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>928</ID>
          <Description>"*"</Description>
          <LastState Value="0" RealAddress="11565FDB0"/>
          <VariableType>Float</VariableType>
          <Address>11565FDB0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>929</ID>
          <Description>"No description"</Description>
          <LastState Value="45.57763672" RealAddress="118358E20"/>
          <VariableType>Float</VariableType>
          <Address>118358E20</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>930</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(timeOfDayReadAOB,MirrorsEdgeCatalyst.exe,F3 0F 10 4E 80 48 89 F9)
registersymbol(timeOfDayReadAOB)

label(pTimeOfDay)
registersymbol(pTimeOfDay)

alloc(newmem6,2048,timeOfDayReadAOB) //"MirrorsEdgeCatalyst.exe"+3BC4EF6)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
lea rcx,[rsi-80]
mov [pTimeOfDay],rcx

originalcode6:
movss xmm1,[rsi-80]

exit6:
jmp returnhere6

///
pTimeOfDay:
///

timeOfDayReadAOB: //"MirrorsEdgeCatalyst.exe"+3BC4EF6:
jmp newmem6
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
timeOfDayReadAOB: //"MirrorsEdgeCatalyst.exe"+3BC4EF6:
db F3 0F 10 4E 80
//Alt: movss xmm1,[rsi-80]

unregistersymbol(pTimeOfDay)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>958</ID>
          <Description>"No description"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>13616150</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>959</ID>
          <Description>"No description"</Description>
          <LastState Value="49552" RealAddress="144D3E70"/>
          <VariableType>2 Bytes</VariableType>
          <Address>144D3E70</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>960</ID>
          <Description>"No description"</Description>
          <LastState Value="64600" RealAddress="14807098"/>
          <VariableType>2 Bytes</VariableType>
          <Address>14807098</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>961</ID>
          <Description>"No description"</Description>
          <LastState Value="1058" RealAddress="1642E7F8"/>
          <VariableType>2 Bytes</VariableType>
          <Address>1642E7F8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>962</ID>
          <Description>"No description"</Description>
          <LastState Value="1" RealAddress="15F3C4C0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>15F3C4C0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>963</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="162223F8"/>
          <VariableType>4 Bytes</VariableType>
          <Address>162223F8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>964</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="16222510"/>
          <VariableType>4 Bytes</VariableType>
          <Address>16222510</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>965</ID>
          <Description>"*"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>16818FB8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>966</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="EEE42854"/>
          <VariableType>4 Bytes</VariableType>
          <Address>EEE42854</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>968</ID>
          <Description>"enable .1"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(disruptorQuantityReadOnUseRet2AOB,MirrorsEdgeCatalyst.exe,84 C0 75 27 40 84 F6)
registersymbol(disruptorQuantityReadOnUseRet2AOB)

///

aobscanmodule(someXmmReadAOB,MirrorsEdgeCatalyst.exe,48 8B 08 E8 ** ** ** ** F3 0F 10 00 48 83 C4 28 C3)
registersymbol(someXmmReadAOB)

label(bInstantFFShieldBar)
registersymbol(bInstantFFShieldBar)
label(bSetFocusShieldBarZero)
registersymbol(bSetFocusShieldBarZero)
label(pFocusShieldBar)
registersymbol(pFocusShieldBar)

alloc(newmem,2048,someXmmReadAOB+8) //"MirrorsEdgeCatalyst.exe"+3122EF5)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rbx
mov rbx,[pFocusShieldBar]
cmp rax,rbx
jne @f
mov ebx,[bInstantFFShieldBar]
test bx,bx
jz originalcode
mov ebx,[bSetFocusShieldBarZero]
test bx,bx
jz originalcode
mov byte ptr [bSetFocusShieldBarZero],0
xorps xmm0,xmm0
movss [rax],xmm0
jmp originalcode

@@:

originalcode:
pop rbx
movss xmm0,[rax]
add rsp,28

exit:
jmp returnhere

///
bInstantFFShieldBar:
dd 0
bSetFocusShieldBarZero:
dd 0
pFocusShieldBar:
///

someXmmReadAOB+8: //"MirrorsEdgeCatalyst.exe"+3122EF5:
jmp newmem
nop
nop
nop
returnhere:

///*******************************************///

aobscanmodule(someXmmWriteInMSVCR120,MSVCR120.dll,8B 02 41 89 02 49 8B C3 C3)
registersymbol(someXmmWriteInMSVCR120)

alloc(newmem2,2048,someXmmWriteInMSVCR120) //"MSVCR120.dll"+3C514)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov rax,[pFocusShieldBar]
cmp r10,rax
jne @f
mov eax,[bInstantFFShieldBar]
test ax,ax
jz originalcode2
cmp dword ptr [rdx],0
je originalcode2
mov dword ptr [rdx],(float)100
jmp originalcode2

@@:

originalcode2:
mov eax,[rdx]
mov [r10],eax

exit2:
jmp returnhere2

///

someXmmWriteInMSVCR120: //"MSVCR120.dll"+3C514:
jmp newmem2
returnhere2:

///*******************************************///

aobscanmodule(timeOfDayReadAOB,MirrorsEdgeCatalyst.exe,F3 0F 10 4E 80 48 89 F9)
registersymbol(timeOfDayReadAOB)

label(pTimeOfDay)
registersymbol(pTimeOfDay)
label(bAdvanceTimeOfDay)
registersymbol(bAdvanceTimeOfDay)
label(bRewindTimeOfDay)
registersymbol(bRewindTimeOfDay)
label(fTimeOfDayMod)
registersymbol(fTimeOfDayMod)

alloc(newmem6,2048,timeOfDayReadAOB) //"MirrorsEdgeCatalyst.exe"+3BC4EF6)
label(returnhere6)
label(originalcode6)
label(exit6)
label(inctodm6)
label(dectodm6)
label(settodm6)
label(settod6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
lea rcx,[rsi-80]
mov [pTimeOfDay],rcx

//
sub esp,16
movdqu dqword [esp],xmm2
push rax
//

movss xmm1,[fTimeOfDayMod+c]
mov ecx,[bAdvanceTimeOfDay]
test cl,cl
jnz @f
mulss xmm1,[fTimeOfDayMod+10]
mov ecx,[bRewindTimeOfDay]
test cl,cl
jnz @f
xorps xmm1,xmm1

@@:
movss [fTimeOfDayMod+4],xmm1

@@:
movss xmm1,[fTimeOfDayMod]
comiss xmm1,[fTimeOfDayMod+4]
jb inctodm6
ja dectodm6
jmp settodm6

inctodm6:
addss xmm1,[fTimeOfDayMod+8]
comiss xmm1,[fTimeOfDayMod+4]
jbe settodm6
movss xmm1,[fTimeOfDayMod+4]
jmp settodm6

dectodm6:
subss xmm1,[fTimeOfDayMod+8]
comiss xmm1,[fTimeOfDayMod+4]
jae settodm6
movss xmm1,[fTimeOfDayMod+4]
jmp settodm6

settodm6:
movss [fTimeOfDayMod],xmm1

@@:
mov eax,(float)86400
movss xmm1,[rsi-80]
addss xmm1,[fTimeOfDayMod]
xorps xmm2,xmm2
comiss xmm1,xmm2
jae @f
movd xmm2,eax
addss xmm1,xmm2
jmp settod6

@@:
movd xmm2,eax
comiss xmm1,xmm2
jbe settod6
subss xmm1,xmm2
//xorps xmm1,xmm1

settod6:
movss [rsi-80],xmm1

//
pop rax
movdqu xmm2,dqword [esp]
add esp,16
//

originalcode6:
movss xmm1,[rsi-80]

exit6:
jmp returnhere6

///
pTimeOfDay:
dq 0
bAdvanceTimeOfDay:
dd 0
bRewindTimeOfDay:
dd 0
fTimeOfDayMod:
dd 0
dd 0
dd (float)10
dd (float)200
dd (float)-1
///

timeOfDayReadAOB: //"MirrorsEdgeCatalyst.exe"+3BC4EF6:
jmp newmem6
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
someXmmReadAOB+8: //"MirrorsEdgeCatalyst.exe"+3122EF5:
db F3 0F 10 00 48 83 C4 28
//Alt: movss xmm0,[rax]
//Alt: add rsp,28

unregistersymbol(bInstantFFShieldBar)
unregistersymbol(bSetFocusShieldBarZero)
unregistersymbol(pFocusShieldBar)

///*******************************************///

dealloc(newmem2)
someXmmWriteInMSVCR120: //"MSVCR120.dll"+3C514:
db 8B 02 41 89 02
//Alt: mov eax,[rdx]
//Alt: mov [r10],eax

///*******************************************///

dealloc(newmem6)
timeOfDayReadAOB: //"MirrorsEdgeCatalyst.exe"+3BC4EF6:
db F3 0F 10 4E 80
//Alt: movss xmm1,[rsi-80]

unregistersymbol(pTimeOfDay)
unregistersymbol(bAdvanceTimeOfDay)
unregistersymbol(bRewindTimeOfDay)
unregistersymbol(fTimeOfDayMod)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>969</ID>
              <Description>"instant charge Focus Shield .1"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(focusShieldBarReadOnFreeRunAOB,MirrorsEdgeCatalyst.exe,48 8B 02 0F 2E 00 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 5B C3)
registersymbol(focusShieldBarReadOnFreeRunAOB)

alloc(newmem,2048,focusShieldBarReadOnFreeRunAOB) //"MirrorsEdgeCatalyst.exe"+3925F21)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rax,[rdx]
mov [pFocusShieldBar],rax
cmp dword ptr [rax],0
je originalcode
mov dword ptr [rax],(float)100

originalcode:
mov rax,[rdx]
ucomiss xmm0,[rax]

exit:
jmp returnhere

///

focusShieldBarReadOnFreeRunAOB: //"MirrorsEdgeCatalyst.exe"+3925F21:
jmp newmem
nop
returnhere:

///**************************************************///

bInstantFFShieldBar:
db 1




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
focusShieldBarReadOnFreeRunAOB: //"MirrorsEdgeCatalyst.exe"+3925F21:
db 48 8B 02 0F 2E 00
//Alt: mov rax,[rdx]
//Alt: ucomiss xmm0,[rax]

///**************************************************///

bInstantFFShieldBar:
db 0
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>970</ID>
                  <Description>"freerun or press T to instant charge"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>971</ID>
                      <Description>"Focus Shield bar"</Description>
                      <LastState Value="100" RealAddress="140B9AA0"/>
                      <Color>0000FF</Color>
                      <VariableType>Float</VariableType>
                      <Address>pFocusShieldBar</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>84</Key>
                          </Keys>
                          <Value>100</Value>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>972</ID>
                  <Description>"press R to reset"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>973</ID>
                      <Description>"bSetFocusShieldBarZero"</Description>
                      <Color>008000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bSetFocusShieldBarZero</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>82</Key>
                          </Keys>
                          <Value>1</Value>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>974</ID>
              <Description>"inf. Disruptor usage"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(someInt32Read2AOB,MirrorsEdgeCatalyst.exe,48 8D 4B 40 8B 30)
registersymbol(someInt32Read2AOB)

alloc(newmem,2048,someInt32Read2AOB) //"MirrorsEdgeCatalyst.exe"+3163FBE)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov esi,[rax]
mov rcx,disruptorQuantityReadOnUseRet2AOB
cmp [rsp+4e8],rcx
jne originalcode
xor esi,esi

originalcode:
lea rcx,[rbx+40]
//mov esi,[rax]

exit:
jmp returnhere

///

someInt32Read2AOB: //"MirrorsEdgeCatalyst.exe"+3163FBE:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
someInt32Read2AOB: //"MirrorsEdgeCatalyst.exe"+3163FBE:
db 48 8D 4B 40 8B 30
//Alt: lea rcx,[rbx+40]
//Alt: mov esi,[rax]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>975</ID>
              <Description>"Time of Day mod"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(bEndThread_MirrorsEdgeCatalyst_keylistener1_mem)
registersymbol(bEndThread_MirrorsEdgeCatalyst_keylistener1_mem)
label(bAdvanceTimeOfDayTmp)
label(bRewindTimeOfDayTmp)

alloc(MirrorsEdgeCatalyst_keylistener1_mem,2048,"MirrorsEdgeCatalyst.exe")
registersymbol(MirrorsEdgeCatalyst_keylistener1_mem)
createthread(MirrorsEdgeCatalyst_keylistener1_mem)
label(keylistenerstart)
label(keylistenerend)
label(keylistenerexit)

MirrorsEdgeCatalyst_keylistener1_mem:
sub rsp,28

keylistenerstart:
mov dword ptr [bAdvanceTimeOfDayTmp],0
mov dword ptr [bRewindTimeOfDayTmp],0

mov rcx,11 //CTRL key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne keylistenerend

mov rcx,22 //PAGE DOWN key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne @f
mov dword ptr [bAdvanceTimeOfDayTmp],1
jmp keylistenerend

@@:
mov rcx,21 //PAGE UP key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne @f
mov dword ptr [bRewindTimeOfDayTmp],1
jmp keylistenerend

keylistenerend:
mov eax,[bAdvanceTimeOfDayTmp]
mov [bAdvanceTimeOfDay],eax
mov eax,[bRewindTimeOfDayTmp]
mov [bRewindTimeOfDay],eax
mov rcx,#100
call Sleep
cmp dword ptr [bEndThread_MirrorsEdgeCatalyst_keylistener1_mem],1
jne keylistenerstart

keylistenerexit:
add rsp,28
mov dword ptr [bEndThread_MirrorsEdgeCatalyst_keylistener1_mem],2
ret

///
bEndThread_MirrorsEdgeCatalyst_keylistener1_mem:
dd 0
bAdvanceTimeOfDayTmp:
dd 0
bRewindTimeOfDayTmp:
dd 0
///


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//obtained from SubBeam's ACS script - start//
{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "bEndThread_MirrorsEdgeCatalyst_keylistener1_mem" ) == 0 then --could be 2 already
  writeInteger( "bEndThread_MirrorsEdgeCatalyst_keylistener1_mem", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "bEndThread_MirrorsEdgeCatalyst_keylistener1_mem" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}
//obtained from SubBeam's ACS script - end//

//bEndThread_MirrorsEdgeCatalyst_keylistener1_mem:
//dd 1

unregistersymbol(bEndThread_MirrorsEdgeCatalyst_keylistener1_mem)

dealloc(MirrorsEdgeCatalyst_keylistener1_mem)
unregistersymbol(MirrorsEdgeCatalyst_keylistener1_mem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>976</ID>
                  <Description>"Ctrl_PageUp to rewind"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>977</ID>
                      <Description>"bAdvanceTimeOfDay"</Description>
                      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:no
1:yes
</DropDownList>
                      <LastState Value="0" RealAddress="13FFD0140"/>
                      <Color>008000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bAdvanceTimeOfDay</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>978</ID>
                      <Description>"bRewindTimeOfDay"</Description>
                      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:no
1:yes
</DropDownList>
                      <LastState Value="0" RealAddress="13FFD0144"/>
                      <Color>008000</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bRewindTimeOfDay</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>979</ID>
                  <Description>"Ctrl_PageDown to advance"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>980</ID>
                      <Description>"fTimeOfDayMod"</Description>
                      <LastState Value="0" RealAddress="13FFD0148"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>fTimeOfDayMod</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>981</ID>
                      <Description>"fTimeOfDayMod+4"</Description>
                      <LastState Value="0" RealAddress="13FFD014C"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>fTimeOfDayMod+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>982</ID>
                      <Description>"fTimeOfDayMod+8"</Description>
                      <LastState Value="10" RealAddress="13FFD0150"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>fTimeOfDayMod+8</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>983</ID>
                      <Description>"fTimeOfDayMod+c"</Description>
                      <LastState Value="200" RealAddress="13FFD0154"/>
                      <Color>008000</Color>
                      <VariableType>Float</VariableType>
                      <Address>fTimeOfDayMod+c</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>984</ID>
                  <Description>"current Time of Day"</Description>
                  <LastState Value="28711.7832" RealAddress="118F5FDE0"/>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>pTimeOfDay</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>someXmmWriteAOB</Name>
      <Address>143122EED</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somePointerBase1ReadAOB</Name>
      <Address>142A424BC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someInt32Read1AOB</Name>
      <Address>143BD703F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>disruptorQuantityReadOnUseRet2AOB</Name>
      <Address> 14314A619</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someXmmReadAOB</Name>
      <Address> 143122EED</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInstantFFShieldBar</Name>
      <Address>13FFF0052</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFocusShieldBar</Name>
      <Address>13FFF0056</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>focusShieldBarReadOnFreeRunAOB</Name>
      <Address> 143925F21</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someXmmWriteInMSVCR120</Name>
      <Address> 7FEF4FFC514</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>timeOfDayReadAOB</Name>
      <Address> 143BC4EF6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pTimeOfDay</Name>
      <Address>13FFD0138</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bAdvanceTimeOfDay</Name>
      <Address>13FFD0140</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bRewindTimeOfDay</Name>
      <Address>13FFD0144</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fTimeOfDayMod</Name>
      <Address>13FFD0148</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someInt32Read2AOB</Name>
      <Address> 143163FBE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bEndThread_MirrorsEdgeCatalyst_keylistener1_mem</Name>
      <Address>13FFB0123</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5693845#5693845
</Comments>
</CheatTable>
