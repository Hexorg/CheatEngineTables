<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Enemy Vac"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(PlyPosAOB,F3 0F 10 4E 10 57 E8 * * * * F3 0F 10 4e 18)
aobscan(AllPosAOB,F3 0F 10 46 10 B8 01 00 00 00)
alloc(newmem,2048)
label(PlyPosCode)
label(AllPosCode)
label(PlyReturn)
label(AllReturn)
label(PullData)
registersymbol(PlyPosAOB)
registersymbol(AllPosAOB)
registersymbol(PullData)


newmem:
PlyPosCode: //-------------------------------------------- Player Data
label(PlyExit)
movss xmm1,[esi+10]
mov [PullData],esi
cmp [PullData+4],0
jne PlyExit
push eax
mov eax,[esi+10]
mov [PullData+4],eax
mov eax,[esi+14]
mov [PullData+8],eax
mov eax,[esi+18]
mov [PullData+C],eax
pop eax

PlyExit:
jmp PlyReturn


AllPosCode: //-------------------------------------------- Enemy Data
label(AllExit)
movss xmm0,[esi+10]
cmp [PullData],0
je AllExit
cmp esi,[PullData]
je AllExit
push eax
mov eax,[PullData+4]
mov [esi+10],eax
mov eax,[PullData+8]
mov [esi+14],eax
mov eax,[PullData+C]
mov [esi+18],eax
pop eax


AllExit:
jmp AllReturn

PullData:

PlyPosAOB:
jmp PlyPosCode
PlyReturn:


AllPosAOB:
jmp AllPosCode
AllReturn:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
PlyPosAOB:
db F3 0F 10 4E 10
AllPosAOB:
db F3 0F 10 46 10
unregistersymbol(PlyPosAOB)
unregistersymbol(AllPosAOB)
unregistersymbol(PullData)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>101</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Enemy X"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>PullData+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Enemy Y"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>PullData+C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Enemy Z"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>PullData+8</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Beli Growth to 100"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
aobscan(GrowthAOB, 8B 4B 40 8D 41 01)
registersymbol(GrowthAOB)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ecx,[ebx+40]
mov esi,#99
lea eax,[ecx+01]

exit:
jmp returnhere

GrowthAOB:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
GrowthAOB:
db 8B 4B 40 8D 41 01
unregistersymbol(GrowthAOB)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
