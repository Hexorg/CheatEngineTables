<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>44</ID>
      <Description>"No Limit"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2016-03-30
  Author : gameplayer
}

[ENABLE]
aobscanmodule(_ula0,gamex86.dll,8B 8C BE ? ? 00 00 3B C8 7D 30 41 3B C8 89 8C BE ? ? 00 00 7C 24 8B 8E ? ? 00 00 8B 11)
aobscanmodule(_ula1,gamex86.dll,FF 8E ? ? 00 00 0F 89 ? ? 00 00 6A 00 68 ? ? ? ? B9 ? ? ? ? C7 86 ? ? 00 00 00 00 00 00)
aobscanmodule(_ula2,gamex86.dll,8B 44 B1 14 83 C4 04 3B C7 0F 8D ? 00 00 00 8B 94 24 BC 00 00 00)
aobscanmodule(_ula3,gamex86.dll,3B FD 89 54 B1 14 7E 0E 8B 44 24 10 39 7C B0 14 7E 04 89 7C B0 14)
aobscanmodule(_ula4,gamex86.dll,8B 15 ? ? ? ? 8B 42 24 39 86 E8 17 00 00 0F 8D ? ? ? ? 89 44 24 0C 8B 44 24 10)
aobscanmodule(_ula5,gamex86.dll,8B 50 0C 3B 50 10 7C 21 8D 4C 24 60 C6 84 24)
assert(_ula5+4C,8B 48 10 39 48 0C 7E 07 89 48 0C 8B 44 24 10 89 A8 B4 00 00 00 8B 4C 24 10)
aobscanmodule(_ula6,gamex86.dll,8B 86 ? ? 00 00 8B CF 3B C8 89 BE BC 00 00 00 7E 12 89 86 BC 00 00 00)
assert(_ula6+83,85 C0 74 05 83 38 00 75 57 8B 0D ? ? ? ? 8B 86 BC 00 00 00 3B 41 24 7E 46)
aobscanmodule(_ula7,gamex86.dll,8B 86 BC 00 00 00 3B 86 ? ? 00 00 7C 07 5F 32 C0 5E C2 08 00)
assert(_ula7+32,8B 86 ? ? 00 00 8B CF 3B C8 89 BE BC 00 00 00 7E 06 89 86 BC 00 00 00)
aobscanmodule(_ula8,gamex86.dll,83 BE BC 00 00 00 64 0F 8D A8 00 00 00 8D 4F 64)
assert(_ula8+9E,B8 64 00 00 00 8B CA 3B C8 89 96 BC 00 00 00 7E 06 89 86 BC 00 00 00)
aobscanmodule(_ula9,gamex86.dll,2B D0 89 54 24 04 D9 91 ? ? 00 00 DB 44 24 04 D9 5C 24 04)
aobscanmodule(_usta,gamex86.dll,84 C0 75 26 8B 8E A8 12 00 00 C1 E9 03 F6 C1 01 75 18 D9 05 ? ? ? ? D8 0D ? ? ? ? D8 AE 60 14 00 00 D9 9E 60 14 00 00)
alloc(_memcopy1,$800)

_memcopy1:
readmem(_ula0,34)
readmem(_ula1,12)
readmem(_ula4,30)
readmem(_ula6,16)

registersymbol(_memcopy1)
registersymbol(_ula0)
registersymbol(_ula1)
registersymbol(_ula2)
registersymbol(_ula3)
registersymbol(_ula4)
registersymbol(_ula5)
registersymbol(_ula6)
registersymbol(_ula7)
registersymbol(_ula8)
registersymbol(_ula9)
registersymbol(_usta)

_ula0:
db 8D 8C BE
readmem(_ula0+03,4)
inc [ecx]
cmp [ecx],eax
jge _ula0+17
pop edi
pop esi
ret
db 90 90 90 90 90

_ula1:
db 90 90 90 90 90 90 90 E9
_ula2+07:
jmp +06
_ula3:
mov [ecx+esi*4+14],edx
jmp +10
db 90 90 90 90 90 90
_ula4+06:
mov eax,[edx+24]
shr eax,1
db 01 86 E8 17 00 00 5F B0 01 5E C2 08 00 90 90 90 90 90
_ula5:
jmp _ula5+29
db 90 90 90 90

_ula5+4C:
jmp _ula5+5B
db 90 90 90 90
_ula6:
mov [esi+000000BC],edi
jmp _ula6+24
db 90 90
_ula6+83:
jmp _ula6+E3
db 90 90
_ula7:
jmp +13
db 90 90 90 90

_ula7+38:
mov [esi+000000BC],edi
jmp +0A
db 90 90
_ula8:
jmp +0B
db 90 90 90 90 90

_ula8+9E:
mov [esi+000000BC],edx
jmp +0F
db 90
_ula9:
db 90 90
mov [esp+04],eax

_usta:
jmp +28

[DISABLE]
_usta:
db 84 C0 75 26 8B 8E A8 12 00 00 C1 E9 03 F6 C1 01 75 18

//Armor
_ula5+4C:
db 8B 48 10 39 48 0C 7E 07

_ula5:
db 8B 50 0C 3B 50 10 7C 21

//Health
_ula9:
db 2B D0 89 54 24 04

_ula6:
readmem(_memcopy1+4C,16)

_ula7+38:
db 8B CF 3B C8 89 BE BC 00 00 00 7E 06

_ula7:
db 8B 86 BC 00 00 00 3B 86

_ula6+83:
db 85 C0 74 05 83 38 00 75 57

_ula8+9E:
db B8 64 00 00 00 8B CA 3B C8 89 96 BC 00 00 00 7E 06 89 86 BC 00 00 00

_ula8:
db 83 BE BC 00 00 00 64 0F 8D A8 00 00 00 8D 4F 64

//Ammo
_ula4:
readmem(_memcopy1+2E,30)
_ula3:
db 3B FD 89 54 B1 14 7E 0E 8B 44 24 10 39 7C B0 14 7E 04 89 7C B0 14
_ula2+07:
db 3B C7
_ula1:
readmem(_memcopy1+22,12)
_ula0:
readmem(_memcopy1,34)

unregistersymbol(_ula0)
unregistersymbol(_ula1)
unregistersymbol(_ula2)
unregistersymbol(_ula3)
unregistersymbol(_ula4)
unregistersymbol(_ula5)
unregistersymbol(_ula6)
unregistersymbol(_ula7)
unregistersymbol(_ula8)
unregistersymbol(_ula9)
unregistersymbol(_usta)

dealloc(_memcopy1)
unregistersymbol(_memcopy1)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Disable Reloading"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2016-03-30
  Author : gameplayer
}

[ENABLE]
aobscanmodule(_uwra0,gamex86.dll,F7 D2 23 FA 89 7D 04 E8 ? ? ? ? 8B F8 85 FF)
aobscanmodule(_uwra1,gamex86.dll,85 C0 74 10 C7 44 B5 54 FF FF FF FF C7 44 85 14 00 00 00 00 5F 5E 5D 5B C2 0C 00)
aobscanmodule(_uwra2,gamex86.dll,29 86 ? ? 00 00 79 0A C7 86 ? ? 00 00 00 00 00 00 5F 5E C2 04 00)
aobscanmodule(_uwra3,gamex86.dll,8A 86 04 0B 00 00 84 C0 74 09 D9 84 24 A0 01 00 00 EB 06 D9 05 ? ? ? ? DB 86 FC 0A 00 00 D8 E1 E8 ? ? ? ? DD D8)
aobscanmodule(_uwra4,gamex86.dll,8B 44 B1 14 85 C0 7C 11 2B C7 89 44 B1 14 A1 ? ? ? ? 89 81 A4 00 00 00 5F B0 01 5E C2 08 00)

alloc(newmem,$800)
label(_memcopy0)

newmem:
dd 0
dd 0
db 90 90 90 90
_memcopy0:
readmem(_uwra2,6)
readmem(_uwra3,40)

_uwra0+04:
db 90 90 90

registersymbol(_memcopy0)
registersymbol(_uwra0)
registersymbol(_uwra1)
registersymbol(_uwra2)
registersymbol(_uwra3)
registersymbol(_uwra4)

_uwra1:
xor eax,eax
pop edi
pop esi
pop ebp
pop ebx
ret 000C

_uwra2:
xor eax,eax
jmp +0E
xor eax,eax
_uwra3:
mov ecx,[esi+000006CC]
add ecx,000012A0
mov eax,[esi+00000AF0]
mov ecx,[ecx+eax*4+14]
lea eax,[esi+00000AFC]
cmp ecx,[eax]
jge _uwra3+2E
dec [eax]
jmp _uwra3+2E
db 90 90 90 90
_uwra4+08:
dec eax
nop

[DISABLE]
_uwra0:
db F7 D2 23 FA 89 7D 04
_uwra1:
db 85 C0 74 10 C7 44 B5 54 FF FF FF FF C7 44 85 14 00 00 00 00 5F 5E 5D 5B C2 0C 00
_uwra2:
readmem(_memcopy0,6)
_uwra3:
readmem(_memcopy0+06,40)
_uwra4:
db 8B 44 B1 14 85 C0 7C 11 2B C7 89 44 B1 14

unregistersymbol(_uwra0)
unregistersymbol(_uwra1)
unregistersymbol(_uwra2)
unregistersymbol(_uwra3)
unregistersymbol(_uwra4)
unregistersymbol(_memcopy0)
dealloc(newmem)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>52</ID>
      <Description>"Damage Immunity"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2016-03-30
  Author : gameplayer
  This cript can be used for both Doom 3 game and the official RoE expansion
}

[ENABLE]
aobscanmodule(_Immortal0,gamex86.dll,F6 86 C0 00 00 00 04 0F 84 ? ? 00 00 8A 86 ? ? 00 00 84 C0 0F 85 ? ? 00 00 8A 86 ? ? 00 00)

_Immortal0+07:
db 90 E9

aobscanmodule(_Immortal1,gamex86.dll,8B 81 B8 00 00 00 83 EC 0C 83 F8 04 74 49)
_Immortal1:
ret 000C

registersymbol(_Immortal0)
registersymbol(_Immortal1)

[DISABLE]
_Immortal0+07:
db 0F 84

_Immortal1:
db 8B 81 B8 00 00 00 83 EC 0C 83 F8 04 74 49

unregistersymbol(_Immortal0)
unregistersymbol(_Immortal1)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>76</ID>
      <Description>"One Hit Kill"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2015-07-16
  Author : gameplayer
}

[ENABLE]
aobscanmodule(_MSA1,gamex86.dll,F6 86 C0 00 00 00 04 0F 84 05 02 00 00 A1 F8)
aobscanmodule(_MSA2,gamex86.dll,F6 87 C0 00 00 00 04 C7 44 24 18 00 00 00 00 0F 84 ? ? 00 00 D9 86 8C 02 00 00)
aobscanmodule(_MSA3,gamex86.dll,84 C0 74 21 8B 03 8B CB FF 10 8B 40 2C 3B 05)
_MSA1:
db B0 04 88 86 C0 00 00 00 EB 03 90 90 90
_MSA2:
db 31 C0 89 44 24 18 EB 0D 90 90 90 90 90 90 90
_MSA3:
jmp +23
db 90 90

aobscanmodule(_MHA,gamex86.dll,8B 44 24 14 85 C0 0F 8E D4 00 00 00 8B 8E BC 00 00 00 2B C8 85 C9 89 8E BC 00 00 00 0F 8F A4 00 00 00 81 F9 19 FC FF FF 7D 0A C7 86 BC 00 00 00 19 FC FF FF 8B 16)

_MHA:
mov eax,[esi+000008D4]
test eax,eax
je _MHA+000000E0
mov ax,0504
mov [esi+000000C0],al
mov ecx,FFFFFC19
mov [esi+000000BC],ecx
jmp _MHA+34
db 90 90 90

registersymbol(_MHA)
registersymbol(_MSA1)
registersymbol(_MSA2)
registersymbol(_MSA3)

[DISABLE]
_MHA:
db 8B 44 24 14 85 C0 0F 8E D4 00 00 00 8B 8E BC 00 00 00 2b C8 85 C9 89 8E BC 00 00 00 0F 8F A4 00 00 00 81 F9 19 FC FF FF 7D 0A C7 86 BC 00 00 00 19 FC FF FF 8B 16
_MSA1:
db F6 86 C0 00 00 00 04 0F 84 05 02 00 00
_MSA2:
db F6 87 C0 00 00 00 04 C7 44 24 18 00 00 00 00 0F 84
_MSA3:
db 84 C0 74 21 8B 03 8B CB

unregistersymbol(_MHA)
unregistersymbol(_MSA1)
unregistersymbol(_MSA2)
unregistersymbol(_MSA3)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>92</ID>
      <Description>"Infinite Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2016-04-03
  Author : gameplayer
}

[ENABLE]
aobscanmodule(_IAA0,gamex86.dll,56 8B 74 24 08 85 F6 57 8B 7C 24 10 74 1A 85 FF 74 16 8B 44 B1 14 85 C0 7C 0E 99 F7 FF 85 C0 75 07 5F 32 C0 5E C2 08 00)
aobscanmodule(_IAA1,gamex86.dll,55 E8 ? ? ? ? 8B E8 85 ED 89 6C 24 14 0F 8C ? ? 00 00 8B 87 ? ? 00 00 8B C8 81 E1 FF 0F 00 00 8B 14 8D ? ? ? ? C1 F8 0C)
aobscanmodule(_IAA2,gamex86.dll,8B BE FC 0A 00 00 8B CE E8 ? ? ? ? 8B E8 85 ED 89 6C 24 10 7D 1A 8B 8E 70 01 00 00)
aobscanmodule(_IAA3,gamex86.dll,50 81 C1 A0 12 00 00 E8 ? ? ? ? 8B 86 F8 0A 00 00 85 C0 74 38 8B 86 F4 0A 00 00 85 C0 74 2E)
aobscanmodule(_IAA4,gamex86.dll,85 C0 74 2D 8B 86 F4 0A 00 00 85 C0 74 23 8A 8E 04 0B 00 00 84 C9 74 04 8B C7)
aobscanmodule(_IAA5,gamex86.dll,8B CB BA 01 00 00 00 D3 E2 85 96 A4 12 00 00 0F 84 B2 01 00 00 8D AE A0 12 00 00 50 8B CD)
aobscanmodule(_IAA6,gamex86.dll,51 8B 81 F4 0A 00 00 8B 91 F0 0A 00 00 8B 89 CC 06 00 00 50 52 81 C1 A0 12 00 00 E8 ? ? ? ? 89 44 24 00 DB 44 24 00)
aobscanmodule(_IAA7,gamex86.dll,8B 8E F4 0A 00 00 8B 96 F0 0A 00 00 51 8B 8E CC 06 00 00 52 81 C1 A0 12 00 00 E8 ? ? ? ? 39 86 FC 0A 00 00 7E 06)
aobscanmodule(_IAA8,gamex86.dll,8B 8E F4 0A 00 00 8B 96 F0 0A 00 00 51 8B 8E CC 06 00 00 52 81 C1 A0 12 00 00 E8 ? ? ? ? 85 C0 0F 84 66 0B 00 00)
aobscanmodule(_IAA9,gamex86.dll,8B 91 F4 0A 00 00 8B 89 F0 0A 00 00 52 51 8D 88 A0 12 00 00 E8 ? ? ? ? C3 33 C0 C3)
alloc(_memcopy2,$800)

_memcopy2:
readmem(_IAA1,16)
readmem(_IAA2,32)
readmem(_IAA5+1B,16)

_IAA0:
db B0 01 C2 08 00

_IAA1:
push ebp
or ebp,-01
mov [esp+14],ebp
jmp _IAA1+180
db 90

_IAA2:
mov edi,[esi+00000AFC]
or eax,-01
mov ebp,eax
mov [esp+10],ebp
mov ecx,[esi+00000170]
mov edx,[ecx]
jmp _IAA2+1F
db 90 90 90 90

_IAA3+12:
xor eax,eax
jmp +38

_IAA4+0A:
xor eax,eax
jmp +23

_IAA5:
mov ecx,ebx
xor edx,edx
inc edx
shl edx,cl
jmp _IAA5+15

_IAA5+1B:
mov eax,edx
jmp +04
db 90 90 90 90

_IAA6:
push ecx
mov edx,[ecx+00000AF0]
mov ecx,[ecx+000006CC]
xor eax,eax
inc eax
jmp _IAA6+20
db 90 90 90

_IAA7:
mov ecx,[esi+000006CC]
add ecx,000012A0
mov eax,[esi+00000AF8]
test eax,eax
jg _IAA7+27
jmp _IAA7+2D

_IAA8:
mov ecx,[esi+000006CC]
add ecx,000012A0
mov eax,[esi+00000AF8]
test eax,eax
jne +09
inc eax
inc eax
jmp +05

_IAA9:
mov eax,[ecx+00000AF8]
test eax,eax
jne +01
inc eax
ret

registersymbol(_IAA0)
registersymbol(_IAA1)
registersymbol(_IAA2)
registersymbol(_IAA3)
registersymbol(_IAA4)
registersymbol(_IAA5)
registersymbol(_IAA6)
registersymbol(_IAA7)
registersymbol(_IAA8)
registersymbol(_IAA9)
registersymbol(_memcopy2)

[DISABLE]
_IAA0:
db 56 8B 74 24 08
_IAA1:
readmem(_memcopy2,16)

_IAA2:
readmem(_memcopy2+10,32)

_IAA3+12:
db 85 C0 74 38

_IAA4+0A:
db 85 C0 74 23

_IAA5:
db 8B CB BA 01 00 00 00 D3 E2 85 96 A4 12 00 00 0F 84 B2 01 00 00 8D AE A0 12 00 00 50 8B CD

_IAA5+1B:
readmem(_memcopy2+30,16)

_IAA6:
db 51 8B 81 F4 0A 00 00 8B 91 F0 0A 00 00 8B 89 CC 06 00 00 50 52 81 C1 A0 12 00 00

_IAA7:
db 8B 8E F4 0A 00 00 8B 96 F0 0A 00 00 51 8B 8E CC 06 00 00 52 81 C1 A0 12 00 00 E8

_IAA8:
db 8B 8E F4 0A 00 00 8B 96 F0 0A 00 00 51 8B 8E CC 06 00 00 52 81 C1 A0 12 00 00

_IAA9:
db 8B 91 F4 0A 00 00 8B 89 F0 0A 00 00 52 51 8D 88 A0 12 00 00

unregistersymbol(_IAA0)
unregistersymbol(_IAA1)
unregistersymbol(_IAA2)
unregistersymbol(_IAA3)
unregistersymbol(_IAA4)
unregistersymbol(_IAA5)
unregistersymbol(_IAA6)
unregistersymbol(_IAA7)
unregistersymbol(_IAA8)
unregistersymbol(_IAA9)

dealloc(_memcopy2)
unregistersymbol(_memcopy2)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>105</ID>
      <Description>"Stealthy Move"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2015-07-16
  Author : gameplayer
}

[ENABLE]
aobscanmodule(_SMA,gamex86.dll,8A 86 14 12 00 00 84 C0 75 43 8B 86 D4 08 00 00 3B 87 D4 08 00 00)

_SMA:
  jmp +4B
  db 90 90 90 90

registersymbol(_SMA)

[DISABLE]

_SMA:
  db 8A 86 14 12 00 00 84 C0 75 43 8B 86 D4 08 00 00 3B 87 D4 08 00 00

unregistersymbol(_SMA)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>116</ID>
      <Description>"Speedy Move"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2015-07-23
  Author : gameplayer
}

[ENABLE]
aobscanmodule(_SPA,gamex86.dll,F6 86 A8 12 00 00 01 C7 44 24 0C 00 00 80 3F 74 08 C7 44 24 0C 9A 99 D9 3F)
assert(_SPA+29,8B 8E A8 12 00 00 C1 E9 02 F6 C1 01 74 21)

_SPA:
db C7 44 24 0C 9A 99 D9 3F EB 0F 90 90 90 90 90

_SPA+29:
jmp +2d
db 90 90 90 90

registersymbol(_SPA)

[DISABLE]
_SPA:
db F6 86 A8 12 00 00 01 C7 44 24 0C 00 00 80 3F 74 08 C7 44 24 0C 9A 99 D9 3F

_SPA+29:
db 8B 8E A8 12 00 00 C1 E9 02 F6 C1 01 74 21

unregistersymbol(_SPA)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>115</ID>
      <Description>"Increase Damage"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2015-07-23
  Author : gameplayer
}

[ENABLE]
aobscanmodule(_DBVE1,gamex86.dll,6A 00 E8 ? ? ? ? 84 C0 57 74 0E 8B 4C 24 10)
aobscanmodule(_STA,gamex86.dll,F6 81 A8 12 00 00 01 C7 44 24 00 00 00 80 3F 74 2C 8B 44 24 08 83 F8 03 77 23)
assert(_STA+4F,8B 81 A8 12 00 00 C1 E8 02 A8 01 74 25)
aobscanmodule(_DBVE2,gamex86.dll,8B 8D 00 02 00 00 6A 00 E8 ? ? ? ? 84 C0 0F 84 86 00 00 00)
aobscanmodule(_DBVE3,gamex86.dll,84 C0 56 57 8B F1 75 37 55 33 FF 8D AE 34 13 00 00)
aobscanmodule(_BFGPA,gamex86.dll,D9 84 24 A0 01 00 00 E8 ? ? ? ? 40 89 44 24 0C DB 44 24 0C D9 9C 24 A0 01 00 00)
aobscanmodule(_DBWS,gamex86.dll,84 C0 0F 85 6D 01 00 00 C7 86 A4 17 00 00 00 00 00 00 E9 5E 01 00 00 8D 7E 64)
aobscanmodule(_UEA1,gamex86.dll,F6 86 A8 12 00 00 01 C7 44 24 04 00 00 80 3F 74 08 C7 44 24 04 9A 99 D9 3F A0 ? ? ? ? 84 C0 74 41)
alloc(mCopy,64)

mCopy:
readmem(_DBVE1,16)
readmem(_DBVE2,16)
readmem(_BFGPA,16)

_DBVE1:
push edi
jmp +17
db 90 90 90 90

_DBVE2:
mov ecx,[ebp+00000200]
jmp +90

_DBVE3:
db 84 C0 56 57 8B F1 EB 37

_STA:
mov [esp+00],40200000
mov eax,[esp+08]
jmp +08

_STA+4F:
jmp +0B
db 90 90 90 90

_BFGPA:
mov eax,00000004
mov [esp+0C],eax
fild dword ptr [esp+0C]
fst dword ptr [esp+000001A0]
jmp +3A
db 90 90 90 90 90 90

_UEA1:
mov [esp+04],40800000
jmp +59
db 90 90 90 90 90

_DBWS:
or al,01
db E9 6E 01 00 00 90

registersymbol(_DBVE1)
registersymbol(_DBVE2)
registersymbol(_DBVE3)
registersymbol(_BFGPA)
registersymbol(_UEA1)
registersymbol(_DBWS)
registersymbol(mCopy)
registersymbol(_STA)

[DISABLE]
_DBVE1:
readmem(mCopy,16)

_DBVE2:
readmem(mCopy+10,16)

_DBVE3:
db 84 C0 56 57 8B F1 75 37

_BFGPA:
readmem(mCopy+20,16)
db 0C DB 44 24 0C D9 9C 24 A0 01 00 00

_DBWS:
db 84 C0 0F 85 6D 01 00 00 C7 86 A4 17 00 00 00 00 00 00 E9 5E 01 00 00 8D 7E 64

_UEA1:
db F6 86 A8 12 00 00 01 C7 44 24 04 00 00 80 3F 74 08 C7 44

_STA:
db F6 81 A8 12 00 00 01 C7 44 24 00 00 00 80 3F 74 2C 8B 44 24 08 83 F8 03 77 23

_STA+4F:
db 8B 81 A8 12 00 00 C1 E8 02 A8 01 74 25

unregistersymbol(_DBVE1)
unregistersymbol(_DBVE2)
unregistersymbol(_DBVE3)
unregistersymbol(_BFGPA)
unregistersymbol(_UEA1)
unregistersymbol(_DBWS)
unregistersymbol(mCopy)
unregistersymbol(_STA)
dealloc(mCopy)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>99</ID>
      <Description>"Firing Rate Adjustments"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2015-07-15
  Author : gameplayer
}

[ENABLE]

aobscanmodule(_FRA,gamex86.dll,8D 88 90 00 00 00 85 C9 0F 84 D1 01 00 00 8B 47 08 8B 79 04 8B 40 04 8B 0C 38 03 C7 89 0A) // should be unique
alloc(_FRP,$800)

label(code)
label(_fail)
label(next)

_FRP:
dd 0
dd (float)1.5
dd (float)16
dd (float)0.0625
dd 0
dd 0
dd (float)0.0625
dd (float)1.0
dd 0
dd 0
dd 0
code:
mov ecx,[gamex86.dll+1EEAD4]
cmp ecx,[eax+000006CC]
jne _fail
mov [_FRP],eax
mov ecx,[ecx+000017A0]
test ecx,ecx
je _fail
cmp ecx,09
jg _fail
mov eax,[edi+08]
mov edi,[_FRP]
mov edi,[edi+00000094]
mov eax,[eax+04]
cmp eax,40
jne +09
add eax,edi
xor ecx,ecx
jmp _FRA+1C
cmp eax,20
je +12
cmp eax,24
jne next
cmp ecx,02
jne next
add eax,edi
movss xmm0,[eax]
subss xmm0,[_FRP+ecx*4]
movss [edx],xmm0
jmp _FRA+1E
_fail:
lea ecx,[eax+00000090]
mov eax,[edi+08]
mov edi,[ecx+04]
mov eax,[eax+04]
next:
add eax,edi
mov ecx,[eax]
jmp _FRA+1C

_FRA:
  jmp code
  nop

registersymbol(_FRA)
registersymbol(_FRP)

[DISABLE]

_FRA:
  db 8D 88 90 00 00 00 85 C9 0F 84 D1 01 00 00 8B 47 08 8B 79 04 8B 40 04 8B 0C 38 03 C7 89 0A

unregistersymbol(_FRA)
unregistersymbol(_FRP)
dealloc(_FRP)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>100</ID>
          <Description>"Ammo Type"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_FRP</Address>
          <Offsets>
            <Offset>AF0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>117</ID>
          <Description>"Ammo Required"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_FRP</Address>
          <Offsets>
            <Offset>AF4</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"Clip Size"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_FRP</Address>
          <Offsets>
            <Offset>AF8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>102</ID>
          <Description>"Ammo Loaded"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_FRP</Address>
          <Offsets>
            <Offset>AFC</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>124</ID>
      <Description>"Force Showing up Monsters"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2016-04-21
  Author : gameplayer
}

[ENABLE]
aobscanmodule(_umsa,gamex86.dll,F6 86 C0 00 00 00 08 74 23 8A 86 C1 11 00 00 84 C0 74 19)
alloc(code,$800)

label(next)

code:
mov ecx,[esi+00000090]
mov eax,[ecx+04]
cmp eax,06
jng next
mov eax,[esi+08]
cmp eax,000001CF
je next
mov ecx,[esi+00001448]
test ecx,ecx
je next
mov eax,[esi+000008D4]
test eax,eax
je next
mov eax,[ecx]
test eax,eax
jne next
mov ecx,[gamex86.dll+43F414]
shr ecx,0A
test ecx,ecx
je next
mov al,04
mov [esi+000000C0],al
jmp _umsa+2C
next:
mov al,[esi+000000C0]
test al,08
je _umsa+2C
jmp _umsa+09

_umsa:
jmp code
db 90 90

registersymbol(_umsa)

[DISABLE]
_umsa:
db F6 86 C0 00 00 00 08 74 23 8A 86 C1 11 00 00 84 C0 74 19

unregistersymbol(_umsa)
dealloc(code)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>149</ID>
      <Description>"Master Key Card"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2016-04-22
  Author : gameplayer
}

[ENABLE]

aobscanmodule(_uada,gamex86.dll,8A 86 C1 07 00 00 84 C0 0F 85 9C 00 00 00 8B CE E8 ? ? ? ? 85 C0 0F 85 8D 00 00 00)

_uada+0E:
jmp +0D

registersymbol(_uada)

[DISABLE]
_uada+0E:
db 8B CE

unregistersymbol(_uada)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>108</ID>
      <Description>"Noclip"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : DOOM 3
  Version: 1.3.1.1304
  Date   : 2015-07-18
  Author : gameplayer
}

[ENABLE]

aobscanmodule(_noclip,gamex86.dll,8A 87 14 12 00 00 84 C0 BD 02 00 00 00 74 0F 8B 06)
aobscanmodule(_noclip6,gamex86.dll,8A 86 14 12 00 00 84 C0 75 51 F6 44 24 20 01 74 19)
aobscanmodule(_IPA,gamex86.dll,8A 85 14 12 00 00 84 C0 75 24 8A 85 93 14 00 00 84 C0 75 1A)

_noclip:
jmp +0D
db 90 90 90 90

_noclip6:
jmp +59
db 90 90 90 90

_IPA:
jmp +08
db 90 90 90 90

registersymbol(_noclip)
registersymbol(_noclip6)
registersymbol(_IPA)

[DISABLE]

_noclip:
db 8A 87 14 12 00 00 84 C0 BD 02 00 00 00 74 0F 8B 06
_noclip6:
db 8A 86 14 12 00 00 84 C0 75 51 F6 44 24 20 01 74 19
_IPA:
db 8A 85 14 12 00 00 84 C0 75 24 8A 85 93 14 00 00

unregistersymbol(_noclip)
unregistersymbol(_noclip6)
unregistersymbol(_IPA)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>18</Key>
            <Key>87</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>53</ID>
      <Description>"Low Health (Nightmare)"</Description>
      <LastState Value="25" RealAddress="085EFF44"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1E55A0</Address>
      <Offsets>
        <Offset>24</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"Health"</Description>
      <LastState Value="135" RealAddress="108C5610"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>BC</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>90</ID>
      <Description>"Status"</Description>
      <LastState Value="00000804" RealAddress="108C5614"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>C0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>49</ID>
      <Description>"Noclip"</Description>
      <LastState Value="0" RealAddress="108C6768"/>
      <VariableType>Byte</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>1214</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Godmode"</Description>
      <LastState Value="0" RealAddress="108C6769"/>
      <VariableType>Byte</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>1215</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"Max Health"</Description>
      <LastState Value="100" RealAddress="108C67F4"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12A0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Weapon Hub"</Description>
      <LastState Value="1B7F" RealAddress="108C67F8"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>2 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12A4</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>109</ID>
      <Description>"Berserk"</Description>
      <LastState Value="0" RealAddress="108C67FC"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12A8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>39</ID>
      <Description>"Armor"</Description>
      <LastState Value="2550" RealAddress="108C6800"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12AC</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>43</ID>
      <Description>"Max Armor"</Description>
      <LastState Value="125" RealAddress="108C6804"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12B0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Shells"</Description>
      <LastState Value="191" RealAddress="108C680C"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12B8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Bullets"</Description>
      <LastState Value="684" RealAddress="108C6810"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12BC</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Rockets"</Description>
      <LastState Value="0" RealAddress="108C6814"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12C0</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Increase Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>113</Key>
          </Keys>
          <Value>96</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Cells"</Description>
      <LastState Value="175" RealAddress="108C6818"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12C4</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Increase Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>113</Key>
          </Keys>
          <Value>500</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Grenades"</Description>
      <LastState Value="42" RealAddress="108C681C"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12C8</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Increase Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>113</Key>
          </Keys>
          <Value>50</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Souls"</Description>
      <LastState Value="340" RealAddress="108C6820"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12CC</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"BFG Cells"</Description>
      <LastState Value="8" RealAddress="108C6824"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12D0</Offset>
      </Offsets>
      <Hotkeys>
        <Hotkey>
          <Action>Increase Value</Action>
          <Keys>
            <Key>18</Key>
            <Key>113</Key>
          </Keys>
          <Value>32</Value>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Clips"</Description>
      <LastState Value="3220" RealAddress="108C6828"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12D4</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Ammo Belts"</Description>
      <LastState Value="510" RealAddress="108C682C"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>12D8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>110</ID>
      <Description>"Berserk"</Description>
      <LastState Value="0" RealAddress="108C6888"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>1334</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>86</ID>
      <Description>"Coded Offset"</Description>
      <LastState Value="00A029EC" RealAddress="108C6964"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>1410</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>103</ID>
      <Description>"Disarm"</Description>
      <LastState Value="0" RealAddress="108C69C8"/>
      <VariableType>Byte</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>1474</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>62</ID>
      <Description>"Current Weapon"</Description>
      <LastState Value="2" RealAddress="108C6CF4"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>17A0</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>63</ID>
      <Description>"Next Weapon"</Description>
      <LastState Value="2" RealAddress="108C6CF8"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>17A4</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>66</ID>
      <Description>"Previous Weapon"</Description>
      <LastState Value="4294967295" RealAddress="108C6CFC"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>17A8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>79</ID>
      <Description>"Oxygen"</Description>
      <LastState Value="1800" RealAddress="108C6D3C"/>
      <VariableType>4 Bytes</VariableType>
      <Address>gamex86.dll+1EEAD4</Address>
      <Offsets>
        <Offset>17E8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>113</ID>
      <Description>"Player's Pointer"</Description>
      <LastState Value="108C5554" RealAddress="104BEAD4"/>
      <ShowAsHex>1</ShowAsHex>
      <VariableType>4 Bytes</VariableType>
      <Address>008E08B0</Address>
      <Offsets>
        <Offset>F34</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_HTEA</Name>
      <Address>006B304E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ASE1</Name>
      <Address>0070506E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ASE2</Name>
      <Address>0070431E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ASE3</Name>
      <Address>006E9A33</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_BEA1</Name>
      <Address>006F6C6C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_BEA2</Name>
      <Address>006EC6C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_Cooldown</Name>
      <Address>0067DC7F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_CWP</Name>
      <Address>04B40000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_WTA</Name>
      <Address>006F8ECB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_UWRs</Name>
      <Address>006F327B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_UARs</Name>
      <Address>006F32C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_UWR0</Name>
      <Address>00715D03</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_FAA</Name>
      <Address>11EDF92A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRes</Name>
      <Address>01CA0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_noclip1</Name>
      <Address>1193465A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_noclip2</Name>
      <Address>11932C2E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_noclip3</Name>
      <Address>119339FA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_noclip4</Name>
      <Address>11932F50</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_noclip5</Name>
      <Address>11936DCD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ula0</Name>
      <Address> 103470ED</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ula1</Name>
      <Address> 103434D7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ula2</Name>
      <Address> 1034F0DA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ula3</Name>
      <Address> 1034F10B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ula4</Name>
      <Address> 10350C21</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ula5</Name>
      <Address> 1034F183</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ula6</Name>
      <Address> 10340914</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ula7</Name>
      <Address> 10350AFF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ula8</Name>
      <Address> 1034C991</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_ula9</Name>
      <Address> 10340609</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_usta</Name>
      <Address> 10343A6C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_memcopy0</Name>
      <Address>0301000C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_uwra0</Name>
      <Address> 1033EA48</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_uwra1</Name>
      <Address> 1033EA94</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_uwra2</Name>
      <Address> 1036FA26</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_uwra3</Name>
      <Address> 10376A05</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_uwra4</Name>
      <Address> 1033D3A8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_Immortal0</Name>
      <Address> 10344E66</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_Immortal1</Name>
      <Address> 103F1700</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
