<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>13</ID>
      <Description>"[X] &lt;== Impossible Creatures v1.1 Steam Script 1.0"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Impossible Creatures
 Game Version  : 1.1 (steam)
 Game Sponsor  : Myself
 Process Name  : IC.exe
 Relevant Info : 2003/32bits/RTS
 Script Version: 1.0
 CE Version    : 6.4
 Release date  : 19-Nov-2015
 Author        : Recifense
 History:
 19-Nov-15: First Release
 Features:
 - Minimum Resources
 - God Mode
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"IC.exe")
define(MOHP,ICMod.dll+0006cc21)
define(MOSU,ICMod.dll+0003dd62)
define(GDMD,ICMod.dll+000a225b)

//=========================================
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.4)
define(ctMMRS,(float)1640.0)  // Minimum Resources

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MOHP,d8 47 48 d9 5f 48 8b 73 08 ?? ?? ff 75 0c d9 45 08 8b 4e 10 8b 01)
assert(MOSU,8b 40 10 85 c0 ?? ?? 8b c8 ff 15 ?? ?? ?? ?? ?? ?? 33 c0 c2 04 00)
assert(GDMD,d9 44 24 04 d8 59 08 df e0 f6 c4 41 75 07 8b 41 08 89 44 24 04 d9)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_MonHP00)
label(_BackMHP)
label(_ExitMHP)
label(_MonSelUnit)
label(_BackMSU)
label(_ExitMSU)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)

label(iEnableMMR)
label(iEnableGMD)

label(pPlayer)
label(pUnit)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMMR)
registersymbol(iEnableGMD)
registersymbol(pPlayer)
registersymbol(pUnit)

//=========================================
MyCode:
//=========================================
// When updating electricity
_MonHumanPlayer:
 push eax

 fadd dword ptr [edi+48]           // Original code
 fstp dword ptr [edi+48]           // Original code (upd electricity)

 cmp byte ptr [edi+28],00
 jne _ExitMHP

 mov [pPlayer],edi

 cmp dword ptr [iEnableMMR],0
 je _ExitMHP                       // Jump if feature is disabled

 mov eax,ctMMRS
 cmp eax,[edi+44]
 js _MonHP00

 mov [edi+44],eax                  // Coal

_MonHP00:
 cmp eax,[edi+48]
 js _ExitMHP

 mov [edi+48],eax                  // Electricity

_ExitMHP:
 pop eax
 jmp _BackMHP                      // Back to main code

//=========================================
// When a unit/building is selected (or clicked on)(Just for debugging)
_MonSelUnit:
 mov [pUnit],eax

_ExitMSU:
 mov eax,[eax+10]                  // Original code (get pPlayer)
 test eax,eax                      // Original code
 jmp _BackMSU                      // Back to main code

//=========================================
// When HP is to be decreased
_GodMode:
 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 mov eax,[ebp-18]
 cmp eax,[pPlayer]
 jne _ExitGMD

 mov eax,[ecx+04]
 mov [ecx+08],eax                  // Current HP = Max

 xor eax,eax
 mov [esp+04],eax                  // damage = 0

_ExitGMD:
 fld dword ptr [esp+04]            // Original code (get damage)
 fcomp dword ptr [ecx+08]          // Original code (cmp to cHP)
 jmp _BackGMD                      // Back to main code

//=========================================
 db '====================================&gt;'
 db 'CE6.4 Script by Recifense 111915'
//=========================================
// Variables
iEnableMMR:
 dd 0
iEnableGMD:
 dd 0
pPlayer:
 dd MyCode
pUnit:
 dd 0

//=========================================
// Hacking Points
MOHP:
 jmp _MonHumanPlayer
 nop
_BackMHP:

MOSU:
 jmp _MonSelUnit
_BackMSU:

GDMD:
 jmp _GodMode
 nop
 nop
_BackGMD:

//=========================================
// Unloading Scripts
{$lua}
getAddressList().getMemoryRecordByID(96).Active=false
getAddressList().getMemoryRecordByID(96).Color=0x0c08000
getAddressList().getMemoryRecordByID(229).Active=false
getAddressList().getMemoryRecordByID(229).Color=0x0c08000
{$asm}

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MOHP:
// fadd dword ptr [edi+48]
// fstp dword ptr [edi+48]
 db d8 47 48 d9 5f 48

MOSU:
// mov eax,[eax+10]
// test eax,eax
 db 8b 40 10 85 c0

GDMD:
// fld dword ptr [esp+04]
// fcomp dword ptr [ecx+08]
 db d9 44 24 04 d8 59 08

//=========================================
// Unloading Scripts
{$lua}
getAddressList().getMemoryRecordByID(96).Active=false
getAddressList().getMemoryRecordByID(96).Color=0x0c08000
getAddressList().getMemoryRecordByID(229).Active=false
getAddressList().getMemoryRecordByID(229).Color=0x0c08000
{$asm}

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMMR)
unregistersymbol(iEnableGMD)
unregistersymbol(pPlayer)
unregistersymbol(pUnit)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>96</ID>
          <Description>"[X] &lt;== Minimum Resources ------------------ (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMMR",1)
getAddressList().getMemoryRecordByID(96).Color = 0x00008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMMR",0)
getAddressList().getMemoryRecordByID(96).Color = 0x00c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>229</ID>
          <Description>"[X] &lt;== God Mode --------------------------------- (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState Activated="0"/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableGMD",1)
getAddressList().getMemoryRecordByID(229).Color = 0x00008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableGMD",0)
getAddressList().getMemoryRecordByID(229).Color = 0x00c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"[X] &lt;== Table/Script Information"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
getMainForm().CommentButton.doClick()
{$ASM}

[disable]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Impossible Creatures
 Game Version  : 1.1 (steam)
 Game Sponsor  : Myself
 Process Name  : IC.exe
 Relevant Info : 2003/32bits/RTS
 Script Version: 1.0
 CE Version    : 6.4
 Release date  : 19-Nov-2015
 Author        : Recifense
 History:
 19-Nov-15: First Release
 Features:
 - Minimum Resources  [1]
 - God Mode           [2]
 - Some Pointers
===========================================
[1] For human player only (16400);
[2] For human player's units/buildings only;
===========================================
[USAGE]
1) Run CE64;
2) Run Game;
3) Load the game process "IC.exe" in CE;
4) Load this table and activate the main script (in blue);
5) Now activate the scripts (in light-blue) of the cheats you want to use;
6) Game On;
===========================================
[HOTKEYS]
CTRL+Home      = Enable  ALL cheats;
CTRL+End       = Disable ALL cheats;
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat. So you can always come back in case you don't like the result.
===========================================
[INFO]
Tested on Win 10 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
