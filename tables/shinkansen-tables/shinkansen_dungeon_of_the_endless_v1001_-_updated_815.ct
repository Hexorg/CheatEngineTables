<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>67696</ID>
      <Description>"Player Stocks Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(playerstocks_basepointer)
registersymbol(playerstocksupdate_enable)
registersymbol(playerstocksset_enable)

alloc(playerstocks_basepointer,4)
alloc(playerstocksupdate_enable,4)
alloc(playerstocksset_enable,4)


[DISABLE]

unregistersymbol(playerstocks_basepointer)
unregistersymbol(playerstocksupdate_enable)
unregistersymbol(playerstocksset_enable)

dealloc(playerstocks_basepointer)
dealloc(playerstocksupdate_enable)
dealloc(playerstocksset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>67697</ID>
          <Description>"Player Stocks Base Address Scan (To Activate: Display Major Module List, To Update: Display Major Module List)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(playerstocks_savedAOB)
label(playerstocks_returnhere)
label(playerstocks_originalcode)
label(playerstocks_exit)

label(playerstocksupdate_exit)
label(playerstocksset_exit)

registersymbol(playerstocks_savedAOB)

aobscan(playerstocks_searchedAOB,D9 83 D0 01 00 00 D9 5D F8 D9 45 F8 D9 45 0c)

alloc(playerstocks_newmem,2048) //2kb should be enough


playerstocks_newmem:
cmp dword ptr [playerstocksupdate_enable], #0
je playerstocksupdate_exit
mov [playerstocks_basepointer], ebx
playerstocksupdate_exit:

cmp dword ptr [playerstocksset_enable], #0
je playerstocksset_exit
mov [ebx+1cc], (float)9999999
mov [ebx+1d0], (float)9999999
mov [ebx+1d4], (float)400
mov [ebx+1d8], (float)9999999
playerstocksset_exit:


playerstocks_originalcode:
db D9 83 D0 01 00 00
//fld dword ptr [ebx+000001D0]


playerstocks_exit:
jmp playerstocks_returnhere


playerstocks_searchedAOB:
playerstocks_savedAOB:
jmp playerstocks_newmem
nop
playerstocks_returnhere:


[DISABLE]
playerstocks_savedAOB:
db D9 83 D0 01 00 00
//fld dword ptr [ebx+000001D0]

unregistersymbol(playerstocks_savedAOB)

dealloc(playerstocks_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>67699</ID>
          <Description>"Party Stocks Set to Massive? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>playerstocksset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>67780</ID>
          <Description>"Player Stocks Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>playerstocksupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>67700</ID>
          <Description>"Stocks"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>67701</ID>
              <Description>"Base Address"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>playerstocks_basepointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>71898</ID>
              <Description>"Food"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>playerstocks_basepointer</Address>
              <Offsets>
                <Offset>1CC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>71829</ID>
              <Description>"Industry"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>playerstocks_basepointer</Address>
              <Offsets>
                <Offset>1D0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>71828</ID>
              <Description>"Dust"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>playerstocks_basepointer</Address>
              <Offsets>
                <Offset>1D4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>71827</ID>
              <Description>"Science"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>playerstocks_basepointer</Address>
              <Offsets>
                <Offset>1D8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>71894</ID>
              <Description>"Doors"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>playerstocks_basepointer</Address>
              <Offsets>
                <Offset>1F0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>71853</ID>
      <Description>"Heroes Health Points Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(heroeshealthpoints_basepointer)
registersymbol(heroeshealthpointsupdate_enable)
registersymbol(heroeshealthpointsset_enable)

alloc(heroeshealthpoints_basepointer,4)
alloc(heroeshealthpointsupdate_enable,4)
alloc(heroeshealthpointsset_enable,4)


[DISABLE]

unregistersymbol(heroeshealthpoints_basepointer)
unregistersymbol(heroeshealthpointsupdate_enable)
unregistersymbol(heroeshealthpointsset_enable)

dealloc(heroeshealthpoints_basepointer)
dealloc(heroeshealthpointsupdate_enable)
dealloc(heroeshealthpointsset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>71854</ID>
          <Description>"Heroes Health Points Base Address Scan (To Activate: Battle, To Update: Battle)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(heroeshealthpoints_savedAOB)
label(heroeshealthpoints_returnhere)
label(heroeshealthpoints_originalcode)
label(heroeshealthpoints_exit)

label(heroeshealthpointsupdate_exit)
label(heroeshealthpointsset_exit)

registersymbol(heroeshealthpoints_savedAOB)

aobscan(heroeshealthpoints_searchedAOB,83 C4 10 EB 06 8B 45 08 D9 40 64 C9 C3)

alloc(heroeshealthpoints_newmem,2048) //2kb should be enough
alloc(heroeshealthpoints_temp,4)

heroeshealthpoints_newmem:
mov [heroeshealthpoints_temp], ebx

mov ebx, [ebp+08]

// Is enemy?
cmp dword ptr [ebx+38], #0
je heroeshealthpointsset_exit

cmp dword ptr [heroeshealthpointsupdate_enable], #0
je heroeshealthpointsupdate_exit
mov [heroeshealthpoints_basepointer], ebx
heroeshealthpointsupdate_exit:

cmp dword ptr [heroeshealthpointsset_enable], #0
je heroeshealthpointsset_exit
mov [ebx+64], (float)999
heroeshealthpointsset_exit:

mov ebx, [heroeshealthpoints_temp]


heroeshealthpoints_originalcode:
db 8B 45 08 D9 40 64
//mov eax,[ebp+08]
//fld dword ptr [eax+64]


heroeshealthpoints_exit:
jmp heroeshealthpoints_returnhere


heroeshealthpoints_searchedAOB + 5:
heroeshealthpoints_savedAOB:
jmp heroeshealthpoints_newmem
nop
heroeshealthpoints_returnhere:


[DISABLE]
heroeshealthpoints_savedAOB:
db 8B 45 08 D9 40 64
//mov eax,[ebp+08]
//fld dword ptr [eax+64]

unregistersymbol(heroeshealthpoints_savedAOB)

dealloc(heroeshealthpoints_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>71855</ID>
          <Description>"Hero Health Set to 999? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>heroeshealthpointsset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>71856</ID>
          <Description>"Heroes Health Points Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>heroeshealthpointsupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>71857</ID>
          <Description>"Stats"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>71858</ID>
              <Description>"Base Address"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>heroeshealthpoints_basepointer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>71892</ID>
              <Description>"Enemy Identifier (0 = Enemy)"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>heroeshealthpoints_basepointer</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>71891</ID>
              <Description>"Health Points"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>heroeshealthpoints_basepointer</Address>
              <Offsets>
                <Offset>64</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>71893</ID>
              <Description>"Pointer to Party Stocks"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>heroeshealthpoints_basepointer</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>71900</ID>
      <Description>"Research Doors Base Address Scan Initialization (Activate This First)"</Description>
      <Options moHideChildren="1"/>
      <Color>800000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

registersymbol(researchdoors_basepointer)
registersymbol(researchdoorsupdate_enable)
registersymbol(researchdoorsset_enable)

alloc(researchdoors_basepointer,4)
alloc(researchdoorsupdate_enable,4)
alloc(researchdoorsset_enable,4)


[DISABLE]

unregistersymbol(researchdoors_basepointer)
unregistersymbol(researchdoorsupdate_enable)
unregistersymbol(researchdoorsset_enable)

dealloc(researchdoors_basepointer)
dealloc(researchdoorsupdate_enable)
dealloc(researchdoorsset_enable)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>71901</ID>
          <Description>"Research Doors Base Address Scan (To Activate: Research, To Update: Research)"</Description>
          <Color>804000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(researchdoors_savedAOB)
label(researchdoors_returnhere)
label(researchdoors_originalcode)
label(researchdoors_exit)

label(researchdoorsupdate_exit)
label(researchdoorsset_exit)

registersymbol(researchdoors_savedAOB)

aobscan(researchdoors_searchedAOB,8B B8 F0 01 00 00 8B 45 EC)

alloc(researchdoors_newmem,2048) //2kb should be enough
alloc(researchdoors_temp,4)

researchdoors_newmem:
mov [researchdoors_temp], ebx

mov ebx, [ebp-14]
mov edi, [eax+1f0]

cmp dword ptr [researchdoorsupdate_enable], #0
je researchdoorsupdate_exit
mov [researchdoors_basepointer], ebx
researchdoorsupdate_exit:

cmp dword ptr [researchdoorsset_enable], #0
je researchdoorsset_exit
dec edi
dec edi
dec edi
researchdoorsset_exit:

mov ebx, [researchdoors_temp]


researchdoors_originalcode:
//db 8B B8 F0 01 00 00
//mov edi,[eax+000001F0]


researchdoors_exit:
jmp researchdoors_returnhere


researchdoors_searchedAOB:
researchdoors_savedAOB:
jmp researchdoors_newmem
nop
researchdoors_returnhere:


[DISABLE]
researchdoors_savedAOB:
db 8B B8 F0 01 00 00
//mov edi,[eax+000001F0]

unregistersymbol(researchdoors_savedAOB)

dealloc(researchdoors_newmem)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>71902</ID>
          <Description>"Research Doors Set to 3 Doors Less? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>researchdoorsset_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>71903</ID>
          <Description>"Research Doors Update Base Address? (0 = No, 1 = Yes)"</Description>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>researchdoorsupdate_enable</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>71906</ID>
          <Description>"Doors to Complete Research"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>researchdoors_basepointer</Address>
          <Offsets>
            <Offset>100</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>saved</Name>
      <Address>361F4108</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>playerstocks_savedAOB</Name>
      <Address>4BE811A2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>heroeshealthpoints_savedAOB</Name>
      <Address>362884E7</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
