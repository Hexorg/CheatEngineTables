<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>113</ID>
      <Description>"Cheat lists"</Description>
      <Options moHideChildren="1" moBindActivation="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>121</ID>
          <Description>"Inf. Health"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+493BED)
define(bytes,D9 86 EC 08 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vHealth,4)

vHealth:
  dd (float)100

newmem:
  fld dword ptr [vHealth]
  fmul dword ptr [vHealth]
  fstp dword ptr [esi+000008EC]

code:
  fld dword ptr [esi+000008EC]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [esi+000008EC]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+493BED

"gamedll_x86_rwdi.dll"+493BCE: F6 C4 01              -  test ah,01
"gamedll_x86_rwdi.dll"+493BD1: 75 17                 -  jne gamedll_x86_rwdi.dll+493BEA
"gamedll_x86_rwdi.dll"+493BD3: 8B 06                 -  mov eax,[esi]
"gamedll_x86_rwdi.dll"+493BD5: 8B 90 54 03 00 00     -  mov edx,[eax+00000354]
"gamedll_x86_rwdi.dll"+493BDB: 8B CE                 -  mov ecx,esi
"gamedll_x86_rwdi.dll"+493BDD: FF D2                 -  call edx
"gamedll_x86_rwdi.dll"+493BDF: C6 86 3B 16 00 00 00  -  mov byte ptr [esi+0000163B],00
"gamedll_x86_rwdi.dll"+493BE6: EB 02                 -  jmp gamedll_x86_rwdi.dll+493BEA
"gamedll_x86_rwdi.dll"+493BE8: DD D8                 -  fstp st(0)
"gamedll_x86_rwdi.dll"+493BEA: 8B 46 1C              -  mov eax,[esi+1C]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+493BED: D9 86 EC 08 00 00     -  fld dword ptr [esi+000008EC]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+493BF3: 8B 90 C0 02 00 00     -  mov edx,[eax+000002C0]
"gamedll_x86_rwdi.dll"+493BF9: D9 9E F0 08 00 00     -  fstp dword ptr [esi+000008F0]
"gamedll_x86_rwdi.dll"+493BFF: 8D 4E 1C              -  lea ecx,[esi+1C]
"gamedll_x86_rwdi.dll"+493C02: FF D2                 -  call edx
"gamedll_x86_rwdi.dll"+493C04: D8 0D 94 BE A2 68     -  fmul dword ptr [gamedll_x86_rwdi.dll+B9BE94]
"gamedll_x86_rwdi.dll"+493C0A: D8 AE 58 16 00 00     -  fsubr dword ptr [esi+00001658]
"gamedll_x86_rwdi.dll"+493C10: D9 EE                 -  fldz 
"gamedll_x86_rwdi.dll"+493C12: D8 D1                 -  fcom st(0),st(1)
"gamedll_x86_rwdi.dll"+493C14: DF E0                 -  fnstsw ax
"gamedll_x86_rwdi.dll"+493C16: F6 C4 41              -  test ah,41
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>122</ID>
          <Description>"Inf. Stamina"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4DA2F8)
define(bytes,D9 86 7C 09 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vStamina,4)

vStamina:
  dd (float)2

newmem:
  fld dword ptr [vStamina]
  fstp dword ptr [esi+0000097C]

code:
  fld dword ptr [esi+0000097C]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [esi+0000097C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4DA2F8

"gamedll_x86_rwdi.dll"+4DA2DC: 8B 46 64              -  mov eax,[esi+64]
"gamedll_x86_rwdi.dll"+4DA2DF: D9 EE                 -  fldz 
"gamedll_x86_rwdi.dll"+4DA2E1: 8B 08                 -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+4DA2E3: 8B 91 D0 03 00 00     -  mov edx,[ecx+000003D0]
"gamedll_x86_rwdi.dll"+4DA2E9: D8 52 04              -  fcom dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+4DA2EC: DF E0                 -  fnstsw ax
"gamedll_x86_rwdi.dll"+4DA2EE: F6 C4 05              -  test ah,05
"gamedll_x86_rwdi.dll"+4DA2F1: 7A 3C                 -  jp gamedll_x86_rwdi.dll+4DA32F
"gamedll_x86_rwdi.dll"+4DA2F3: 8B 73 28              -  mov esi,[ebx+28]
"gamedll_x86_rwdi.dll"+4DA2F6: DD D8                 -  fstp st(0)
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4DA2F8: D9 86 7C 09 00 00     -  fld dword ptr [esi+0000097C]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4DA2FE: 8D 4E 1C              -  lea ecx,[esi+1C]
"gamedll_x86_rwdi.dll"+4DA301: D9 5D 08              -  fstp dword ptr [ebp+08]
"gamedll_x86_rwdi.dll"+4DA304: FF D7                 -  call edi
"gamedll_x86_rwdi.dll"+4DA306: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+4DA308: 74 08                 -  je gamedll_x86_rwdi.dll+4DA312
"gamedll_x86_rwdi.dll"+4DA30A: 8B 35 54 CF AF 68     -  mov esi,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+4DA310: EB 06                 -  jmp gamedll_x86_rwdi.dll+4DA318
"gamedll_x86_rwdi.dll"+4DA312: 8B B6 24 06 00 00     -  mov esi,[esi+00000624]
"gamedll_x86_rwdi.dll"+4DA318: 8B 46 64              -  mov eax,[esi+64]
"gamedll_x86_rwdi.dll"+4DA31B: D9 45 08              -  fld dword ptr [ebp+08]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>123</ID>
          <Description>"Inf. Flashlight"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4D8064)
define(bytes,D9 41 34 D8 71 30)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  fld dword ptr [ecx+30]
  fstp dword ptr [ecx+34]

code:
  fld dword ptr [ecx+34]
  fdiv dword ptr [ecx+30]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [ecx+34]
  // fdiv dword ptr [ecx+30]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4D8064

"gamedll_x86_rwdi.dll"+4D803A: FF D2                 -  call edx
"gamedll_x86_rwdi.dll"+4D803C: 83 EC 0C              -  sub esp,0C
"gamedll_x86_rwdi.dll"+4D803F: D9 5C 24 08           -  fstp dword ptr [esp+08]
"gamedll_x86_rwdi.dll"+4D8043: 8D 87 7C 20 00 00     -  lea eax,[edi+0000207C]
"gamedll_x86_rwdi.dll"+4D8049: D9 05 F0 12 7E 68     -  fld dword ptr [gamedll_x86_rwdi.dll+9512F0]
"gamedll_x86_rwdi.dll"+4D804F: D9 54 24 04           -  fst dword ptr [esp+04]
"gamedll_x86_rwdi.dll"+4D8053: D9 1C 24              -  fstp dword ptr [esp]
"gamedll_x86_rwdi.dll"+4D8056: E8 15 9F FE FF        -  call gamedll_x86_rwdi.dll+4C1F70
"gamedll_x86_rwdi.dll"+4D805B: 8B 47 28              -  mov eax,[edi+28]
"gamedll_x86_rwdi.dll"+4D805E: 8B 88 48 05 00 00     -  mov ecx,[eax+00000548]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4D8064: D9 41 34              -  fld dword ptr [ecx+34]
"gamedll_x86_rwdi.dll"+4D8067: D8 71 30              -  fdiv dword ptr [ecx+30]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4D806A: D8 1D 44 62 7E 68     -  fcomp dword ptr [gamedll_x86_rwdi.dll+956244]
"gamedll_x86_rwdi.dll"+4D8070: DF E0                 -  fnstsw ax
"gamedll_x86_rwdi.dll"+4D8072: F6 C4 05              -  test ah,05
"gamedll_x86_rwdi.dll"+4D8075: 0F 8A 98 02 00 00     -  jp gamedll_x86_rwdi.dll+4D8313
"gamedll_x86_rwdi.dll"+4D807B: 80 BF 51 20 00 00 00  -  cmp byte ptr [edi+00002051],00
"gamedll_x86_rwdi.dll"+4D8082: 0F 84 8B 02 00 00     -  je gamedll_x86_rwdi.dll+4D8313
"gamedll_x86_rwdi.dll"+4D8088: D9 41 34              -  fld dword ptr [ecx+34]
"gamedll_x86_rwdi.dll"+4D808B: D8 71 30              -  fdiv dword ptr [ecx+30]
"gamedll_x86_rwdi.dll"+4D808E: D8 0D 70 C6 A2 68     -  fmul dword ptr [gamedll_x86_rwdi.dll+B9C670]
"gamedll_x86_rwdi.dll"+4D8094: D9 54 24 0C           -  fst dword ptr [esp+0C]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>124</ID>
          <Description>"Inf. Ammo"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+5650BC)
define(bytes,8B 40 20 89 86 08 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [eax+20],(int)99

code:
  mov eax,[eax+20]
  mov [esi+00000108],eax
  jmp return

address:
  jmp newmem
  nop
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+20]
  // mov [esi+00000108],eax

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+5650BC

"gamedll_x86_rwdi.dll"+5650A1: 52                 -  push edx
"gamedll_x86_rwdi.dll"+5650A2: FF D0              -  call eax
"gamedll_x86_rwdi.dll"+5650A4: 85 C0              -  test eax,eax
"gamedll_x86_rwdi.dll"+5650A6: 74 1E              -  je gamedll_x86_rwdi.dll+5650C6
"gamedll_x86_rwdi.dll"+5650A8: 8B 4E 28           -  mov ecx,[esi+28]
"gamedll_x86_rwdi.dll"+5650AB: 8B 11              -  mov edx,[ecx]
"gamedll_x86_rwdi.dll"+5650AD: 8B 86 74 01 00 00  -  mov eax,[esi+00000174]
"gamedll_x86_rwdi.dll"+5650B3: 8B 92 50 02 00 00  -  mov edx,[edx+00000250]
"gamedll_x86_rwdi.dll"+5650B9: 50                 -  push eax
"gamedll_x86_rwdi.dll"+5650BA: FF D2              -  call edx
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+5650BC: 8B 40 20           -  mov eax,[eax+20]
"gamedll_x86_rwdi.dll"+5650BF: 89 86 08 01 00 00  -  mov [esi+00000108],eax
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+5650C5: C3                 -  ret 
"gamedll_x86_rwdi.dll"+5650C6: 83 C8 FF           -  or eax,-01
"gamedll_x86_rwdi.dll"+5650C9: 89 86 08 01 00 00  -  mov [esi+00000108],eax
"gamedll_x86_rwdi.dll"+5650CF: C3                 -  ret 
"gamedll_x86_rwdi.dll"+5650D0: 55                 -  push ebp
"gamedll_x86_rwdi.dll"+5650D1: 8B EC              -  mov ebp,esp
"gamedll_x86_rwdi.dll"+5650D3: 83 E4 F8           -  and esp,-08
"gamedll_x86_rwdi.dll"+5650D6: 83 EC 24           -  sub esp,24
"gamedll_x86_rwdi.dll"+5650D9: 53                 -  push ebx
"gamedll_x86_rwdi.dll"+5650DA: 8B 1D 74 64 7D 68  -  mov ebx,[gamedll_x86_rwdi.dll+946474]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>125</ID>
          <Description>"Inf. Durability"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+57B4B1)
define(bytes,D9 47 24 8B 82 F0 02 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vDurability,4)

vDurability:
  dd (float)100

newmem:
  fld dword ptr [vDurability]
  fmul dword ptr [vDurability]
  fstp dword ptr [edi+24]

code:
  fld dword ptr [edi+24]
  mov eax,[edx+000002F0]
  jmp return

address:
  jmp newmem
  nop
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edi+24]
  // mov eax,[edx+000002F0]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+57B4B1

"gamedll_x86_rwdi.dll"+57B49B: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+57B49D: 75 0F                 -  jne gamedll_x86_rwdi.dll+57B4AE
"gamedll_x86_rwdi.dll"+57B49F: 8B 13                 -  mov edx,[ebx]
"gamedll_x86_rwdi.dll"+57B4A1: 8B 42 24              -  mov eax,[edx+24]
"gamedll_x86_rwdi.dll"+57B4A4: 6A 03                 -  push 03
"gamedll_x86_rwdi.dll"+57B4A6: 8B CB                 -  mov ecx,ebx
"gamedll_x86_rwdi.dll"+57B4A8: FF D0                 -  call eax
"gamedll_x86_rwdi.dll"+57B4AA: EB 02                 -  jmp gamedll_x86_rwdi.dll+57B4AE
"gamedll_x86_rwdi.dll"+57B4AC: DD D8                 -  fstp st(0)
"gamedll_x86_rwdi.dll"+57B4AE: 8B 57 2C              -  mov edx,[edi+2C]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+57B4B1: D9 47 24              -  fld dword ptr [edi+24]
"gamedll_x86_rwdi.dll"+57B4B4: 8B 82 F0 02 00 00     -  mov eax,[edx+000002F0]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+57B4BA: D9 5D F8              -  fstp dword ptr [ebp-08]
"gamedll_x86_rwdi.dll"+57B4BD: 8D 4F 2C              -  lea ecx,[edi+2C]
"gamedll_x86_rwdi.dll"+57B4C0: FF D0                 -  call eax
"gamedll_x86_rwdi.dll"+57B4C2: D8 7D F8              -  fdivr dword ptr [ebp-08]
"gamedll_x86_rwdi.dll"+57B4C5: DC 1D B0 BE A2 68     -  fcomp qword ptr [gamedll_x86_rwdi.dll+B9BEB0]
"gamedll_x86_rwdi.dll"+57B4CB: DF E0                 -  fnstsw ax
"gamedll_x86_rwdi.dll"+57B4CD: F6 C4 41              -  test ah,41
"gamedll_x86_rwdi.dll"+57B4D0: 7A 1D                 -  jp gamedll_x86_rwdi.dll+57B4EF
"gamedll_x86_rwdi.dll"+57B4D2: 8B 57 2C              -  mov edx,[edi+2C]
"gamedll_x86_rwdi.dll"+57B4D5: 8B 82 A4 02 00 00     -  mov eax,[edx+000002A4]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>126</ID>
          <Description>"Inf. Inventory"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4B338E)
define(bytes,D9 42 04 E8 0A C8 41 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vInventory,4)

vInventory:
  dd (float)9999

newmem:
  fld dword ptr [vInventory]
  fstp dword ptr [edx+04]

code:
  fld dword ptr [edx+04]
  call gamedll_x86_rwdi.dll+8CFBA0
  jmp return

address:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edx+04]
  // call gamedll_x86_rwdi.dll+8CFBA0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4B338E

"gamedll_x86_rwdi.dll"+4B3369: 75 60                 -  jne gamedll_x86_rwdi.dll+4B33CB
"gamedll_x86_rwdi.dll"+4B336B: 8D 4F 1C              -  lea ecx,[edi+1C]
"gamedll_x86_rwdi.dll"+4B336E: FF 15 74 64 7D 68     -  call dword ptr [gamedll_x86_rwdi.dll+946474]
"gamedll_x86_rwdi.dll"+4B3374: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+4B3376: A1 54 CF AF 68        -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+4B337B: 75 06                 -  jne gamedll_x86_rwdi.dll+4B3383
"gamedll_x86_rwdi.dll"+4B337D: 8B 87 24 06 00 00     -  mov eax,[edi+00000624]
"gamedll_x86_rwdi.dll"+4B3383: 8B 40 64              -  mov eax,[eax+64]
"gamedll_x86_rwdi.dll"+4B3386: 8B 08                 -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+4B3388: 8B 91 48 03 00 00     -  mov edx,[ecx+00000348]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4B338E: D9 42 04              -  fld dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+4B3391: E8 0A C8 41 00        -  call gamedll_x86_rwdi.dll+8CFBA0
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4B3396: 8B F0                 -  mov esi,eax
"gamedll_x86_rwdi.dll"+4B3398: 85 F6                 -  test esi,esi
"gamedll_x86_rwdi.dll"+4B339A: 79 02                 -  jns gamedll_x86_rwdi.dll+4B339E
"gamedll_x86_rwdi.dll"+4B339C: 33 F6                 -  xor esi,esi
"gamedll_x86_rwdi.dll"+4B339E: 8D 4F 1C              -  lea ecx,[edi+1C]
"gamedll_x86_rwdi.dll"+4B33A1: FF 15 74 64 7D 68     -  call dword ptr [gamedll_x86_rwdi.dll+946474]
"gamedll_x86_rwdi.dll"+4B33A7: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+4B33A9: 75 05                 -  jne gamedll_x86_rwdi.dll+4B33B0
"gamedll_x86_rwdi.dll"+4B33AB: BE 03 00 00 00        -  mov esi,00000003
"gamedll_x86_rwdi.dll"+4B33B0: 6A 00                 -  push 00
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>127</ID>
          <Description>"Inf. Items"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+49DDFF)
define(bytes,83 7F 20 01 7E 17)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vItems,4)

vItems:
  dd (int)51

newmem:
  fild dword ptr [vItems]
  fistp dword ptr [edi+20]

code:
  cmp dword ptr [edi+20],01
  jle gamedll_x86_rwdi.dll+49DE1C
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [edi+20],01
  // jle gamedll_x86_rwdi.dll+49DE1C

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+49DDFF

"gamedll_x86_rwdi.dll"+49DDE6: 53                             -  push ebx
"gamedll_x86_rwdi.dll"+49DDE7: 8B 5D 08                       -  mov ebx,[ebp+08]
"gamedll_x86_rwdi.dll"+49DDEA: 56                             -  push esi
"gamedll_x86_rwdi.dll"+49DDEB: 57                             -  push edi
"gamedll_x86_rwdi.dll"+49DDEC: 8B 7D 0C                       -  mov edi,[ebp+0C]
"gamedll_x86_rwdi.dll"+49DDEF: 33 F6                          -  xor esi,esi
"gamedll_x86_rwdi.dll"+49DDF1: 89 75 FC                       -  mov [ebp-04],esi
"gamedll_x86_rwdi.dll"+49DDF4: 89 7D 08                       -  mov [ebp+08],edi
"gamedll_x86_rwdi.dll"+49DDF7: 85 FF                          -  test edi,edi
"gamedll_x86_rwdi.dll"+49DDF9: 0F 84 F7 01 00 00              -  je gamedll_x86_rwdi.dll+49DFF6
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+49DDFF: 83 7F 20 01                    -  cmp dword ptr [edi+20],01
"gamedll_x86_rwdi.dll"+49DE03: 7E 17                          -  jle gamedll_x86_rwdi.dll+49DE1C
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+49DE05: 8B 47 2C                       -  mov eax,[edi+2C]
"gamedll_x86_rwdi.dll"+49DE08: 8B 90 9C 01 00 00              -  mov edx,[eax+0000019C]
"gamedll_x86_rwdi.dll"+49DE0E: 8D 4F 2C                       -  lea ecx,[edi+2C]
"gamedll_x86_rwdi.dll"+49DE11: FF D2                          -  call edx
"gamedll_x86_rwdi.dll"+49DE13: 83 F8 01                       -  cmp eax,01
"gamedll_x86_rwdi.dll"+49DE16: 0F 8F EF 01 00 00              -  jg gamedll_x86_rwdi.dll+49E00B
"gamedll_x86_rwdi.dll"+49DE1C: C7 45 F8 00 00 00 00           -  mov [ebp-08],00000000
"gamedll_x86_rwdi.dll"+49DE23: 85 F6                          -  test esi,esi
"gamedll_x86_rwdi.dll"+49DE25: 0F 85 81 00 00 00              -  jne gamedll_x86_rwdi.dll+49DEAC
"gamedll_x86_rwdi.dll"+49DE2B: 8B 83 F4 0A 00 00              -  mov eax,[ebx+00000AF4]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>128</ID>
          <Description>"Inf. Money"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+2C3870)
define(bytes,8B 82 AC 07 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov eax,(int)9999999
  mov [edx+000007AC],eax

code:
  mov eax,[edx+000007AC]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov eax,[edx+000007AC]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+2C3870

"gamedll_x86_rwdi.dll"+2C385C: 6A 01              -  push 01
"gamedll_x86_rwdi.dll"+2C385E: 8B C7              -  mov eax,edi
"gamedll_x86_rwdi.dll"+2C3860: 50                 -  push eax
"gamedll_x86_rwdi.dll"+2C3861: 8D 45 DC           -  lea eax,[ebp-24]
"gamedll_x86_rwdi.dll"+2C3864: 50                 -  push eax
"gamedll_x86_rwdi.dll"+2C3865: FF D2              -  call edx
"gamedll_x86_rwdi.dll"+2C3867: 8B 45 AC           -  mov eax,[ebp-54]
"gamedll_x86_rwdi.dll"+2C386A: 50                 -  push eax
"gamedll_x86_rwdi.dll"+2C386B: FF D3              -  call ebx
"gamedll_x86_rwdi.dll"+2C386D: 8B 55 0C           -  mov edx,[ebp+0C]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+2C3870: 8B 82 AC 07 00 00  -  mov eax,[edx+000007AC]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+2C3876: 8D 4D E8           -  lea ecx,[ebp-18]
"gamedll_x86_rwdi.dll"+2C3879: 51                 -  push ecx
"gamedll_x86_rwdi.dll"+2C387A: E8 B1 72 FB FF     -  call gamedll_x86_rwdi.dll+27AB30
"gamedll_x86_rwdi.dll"+2C387F: 83 C4 08           -  add esp,08
"gamedll_x86_rwdi.dll"+2C3882: 68 B0 A2 82 68     -  push gamedll_x86_rwdi.dll+99A2B0
"gamedll_x86_rwdi.dll"+2C3887: 8D 45 F4           -  lea eax,[ebp-0C]
"gamedll_x86_rwdi.dll"+2C388A: 50                 -  push eax
"gamedll_x86_rwdi.dll"+2C388B: 8D 4D E8           -  lea ecx,[ebp-18]
"gamedll_x86_rwdi.dll"+2C388E: 51                 -  push ecx
"gamedll_x86_rwdi.dll"+2C388F: 68 5C 1E 88 68     -  push gamedll_x86_rwdi.dll+9F1E5C
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>129</ID>
          <Description>"Add EXP"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4EA3D6)
define(bytes,01 77 3C 8B 47 28)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  add esi,(int)1000
  imul esi,esi,(int)1000

code:
  add [edi+3C],esi
  mov eax,[edi+28]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // add [edi+3C],esi
  // mov eax,[edi+28]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4EA3D6

"gamedll_x86_rwdi.dll"+4EA3CA: CC                 -  int 3 
"gamedll_x86_rwdi.dll"+4EA3CB: CC                 -  int 3 
"gamedll_x86_rwdi.dll"+4EA3CC: CC                 -  int 3 
"gamedll_x86_rwdi.dll"+4EA3CD: CC                 -  int 3 
"gamedll_x86_rwdi.dll"+4EA3CE: CC                 -  int 3 
"gamedll_x86_rwdi.dll"+4EA3CF: CC                 -  int 3 
"gamedll_x86_rwdi.dll"+4EA3D0: 55                 -  push ebp
"gamedll_x86_rwdi.dll"+4EA3D1: 8B EC              -  mov ebp,esp
"gamedll_x86_rwdi.dll"+4EA3D3: 57                 -  push edi
"gamedll_x86_rwdi.dll"+4EA3D4: 8B F8              -  mov edi,eax
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4EA3D6: 01 77 3C           -  add [edi+3C],esi
"gamedll_x86_rwdi.dll"+4EA3D9: 8B 47 28           -  mov eax,[edi+28]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4EA3DC: 8B 57 3C           -  mov edx,[edi+3C]
"gamedll_x86_rwdi.dll"+4EA3DF: 85 C0              -  test eax,eax
"gamedll_x86_rwdi.dll"+4EA3E1: 74 14              -  je gamedll_x86_rwdi.dll+4EA3F7
"gamedll_x86_rwdi.dll"+4EA3E3: 0F B7 4F 4A        -  movzx ecx,word ptr [edi+4A]
"gamedll_x86_rwdi.dll"+4EA3E7: 8B 00              -  mov eax,[eax]
"gamedll_x86_rwdi.dll"+4EA3E9: 8D 0C 89           -  lea ecx,[ecx+ecx*4]
"gamedll_x86_rwdi.dll"+4EA3EC: 8B 44 88 FC        -  mov eax,[eax+ecx*4-04]
"gamedll_x86_rwdi.dll"+4EA3F0: 3B D0              -  cmp edx,eax
"gamedll_x86_rwdi.dll"+4EA3F2: 76 03              -  jna gamedll_x86_rwdi.dll+4EA3F7
"gamedll_x86_rwdi.dll"+4EA3F4: 89 47 3C           -  mov [edi+3C],eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>130</ID>
          <Description>"Super speed"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4933CD)
define(bytes,D8 48 04 D8 0D D0 60 7E 68)

[ENABLE]

//assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vSuperSpeed,4)

vSuperSpeed:
  dd (float)4.35

newmem:
  fld dword ptr [vSuperSpeed]
  fstp dword ptr [eax+04]

code:
  fmul dword ptr [eax+04]
  fmul dword ptr [gamedll_x86_rwdi.dll+9560D0]
  jmp return

address:
  jmp newmem
  nop
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // fmul dword ptr [eax+04]
  // fmul dword ptr [gamedll_x86_rwdi.dll+9560D0]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4933CD

"gamedll_x86_rwdi.dll"+4933A8: FF D6              -  call esi
"gamedll_x86_rwdi.dll"+4933AA: 84 C0              -  test al,al
"gamedll_x86_rwdi.dll"+4933AC: A1 54 CF AF 68     -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+4933B1: 75 06              -  jne gamedll_x86_rwdi.dll+4933B9
"gamedll_x86_rwdi.dll"+4933B3: 8B 83 24 06 00 00  -  mov eax,[ebx+00000624]
"gamedll_x86_rwdi.dll"+4933B9: 8B 40 64           -  mov eax,[eax+64]
"gamedll_x86_rwdi.dll"+4933BC: 8B 00              -  mov eax,[eax]
"gamedll_x86_rwdi.dll"+4933BE: 8B 88 9C 04 00 00  -  mov ecx,[eax+0000049C]
"gamedll_x86_rwdi.dll"+4933C4: 8B 80 10 05 00 00  -  mov eax,[eax+00000510]
"gamedll_x86_rwdi.dll"+4933CA: D9 41 04           -  fld dword ptr [ecx+04]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4933CD: D8 48 04           -  fmul dword ptr [eax+04]
"gamedll_x86_rwdi.dll"+4933D0: D8 0D D0 60 7E 68  -  fmul dword ptr [gamedll_x86_rwdi.dll+9560D0]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4933D6: D8 4C 24 3C        -  fmul dword ptr [esp+3C]
"gamedll_x86_rwdi.dll"+4933DA: D9 54 24 38        -  fst dword ptr [esp+38]
"gamedll_x86_rwdi.dll"+4933DE: 8B 83 E0 04 00 00  -  mov eax,[ebx+000004E0]
"gamedll_x86_rwdi.dll"+4933E4: 85 C0              -  test eax,eax
"gamedll_x86_rwdi.dll"+4933E6: 74 2E              -  je gamedll_x86_rwdi.dll+493416
"gamedll_x86_rwdi.dll"+4933E8: 83 78 28 00        -  cmp dword ptr [eax+28],00
"gamedll_x86_rwdi.dll"+4933EC: 74 28              -  je gamedll_x86_rwdi.dll+493416
"gamedll_x86_rwdi.dll"+4933EE: 80 78 20 00        -  cmp byte ptr [eax+20],00
"gamedll_x86_rwdi.dll"+4933F2: 74 22              -  je gamedll_x86_rwdi.dll+493416
"gamedll_x86_rwdi.dll"+4933F4: 8B 40 28           -  mov eax,[eax+28]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>131</ID>
          <Description>"Instant fill Fury ( Press key Q )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+18C9EB)
define(bytes,D9 87 94 13 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vFury,4)

vFury:
  dd (float)1

newmem:
  pushad
  push 'Q'
  call GetAsyncKeyState
  shr ax,(int)15
  cmp ax,1
  popad
  jne code
  fld dword ptr [vFury]
  fstp dword ptr [edi+00001394]

code:
  fld dword ptr [edi+00001394]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edi+00001394]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+18C9EB

"gamedll_x86_rwdi.dll"+18C9C6: EB 06              -  jmp gamedll_x86_rwdi.dll+18C9CE
"gamedll_x86_rwdi.dll"+18C9C8: 8B 90 5C 03 00 00  -  mov edx,[eax+0000035C]
"gamedll_x86_rwdi.dll"+18C9CE: FF D2              -  call edx
"gamedll_x86_rwdi.dll"+18C9D0: 8D 4F 1C           -  lea ecx,[edi+1C]
"gamedll_x86_rwdi.dll"+18C9D3: FF 15 74 64 7D 68  -  call dword ptr [gamedll_x86_rwdi.dll+946474]
"gamedll_x86_rwdi.dll"+18C9D9: 84 C0              -  test al,al
"gamedll_x86_rwdi.dll"+18C9DB: A1 54 CF AF 68     -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+18C9E0: 75 06              -  jne gamedll_x86_rwdi.dll+18C9E8
"gamedll_x86_rwdi.dll"+18C9E2: 8B 87 24 06 00 00  -  mov eax,[edi+00000624]
"gamedll_x86_rwdi.dll"+18C9E8: 8B 40 64           -  mov eax,[eax+64]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+18C9EB: D9 87 94 13 00 00  -  fld dword ptr [edi+00001394]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+18C9F1: 8B 08              -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+18C9F3: 8B 91 C4 06 00 00  -  mov edx,[ecx+000006C4]
"gamedll_x86_rwdi.dll"+18C9F9: D8 72 04           -  fdiv dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+18C9FC: D9 83 AC 00 00 00  -  fld dword ptr [ebx+000000AC]
"gamedll_x86_rwdi.dll"+18CA02: DA E9              -  fucompp 
"gamedll_x86_rwdi.dll"+18CA04: DF E0              -  fnstsw ax
"gamedll_x86_rwdi.dll"+18CA06: F6 C4 44           -  test ah,44
"gamedll_x86_rwdi.dll"+18CA09: 7A 33              -  jp gamedll_x86_rwdi.dll+18CA3E
"gamedll_x86_rwdi.dll"+18CA0B: A1 58 D1 AF 68     -  mov eax,[gamedll_x86_rwdi.dll+C6D158]
"gamedll_x86_rwdi.dll"+18CA10: 85 C0              -  test eax,eax
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>114</ID>
      <Description>"Test ( Abilities skills )"</Description>
      <Options moHideChildren="1" moBindActivation="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>132</ID>
          <Description>"Boomerang 100%"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+5481E7)
define(bytes,D9 42 04 8B 0D F8 D4 AC 68)

[ENABLE]

//assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vBoomerang,4)

vBoomerang:
  dd (float)1

newmem:
  fld dword ptr [vBoomerang]
  fstp dword ptr [edx+04]

code:
  fld dword ptr [edx+04]
  mov ecx,[gamedll_x86_rwdi.dll+C3D4F8]
  jmp return

address:
  jmp newmem
  nop
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edx+04]
  // mov ecx,[gamedll_x86_rwdi.dll+C3D4F8]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+5481E7

"gamedll_x86_rwdi.dll"+5481BF: FF 15 74 64 7D 68     -  call dword ptr [gamedll_x86_rwdi.dll+946474]
"gamedll_x86_rwdi.dll"+5481C5: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+5481C7: 74 08                 -  je gamedll_x86_rwdi.dll+5481D1
"gamedll_x86_rwdi.dll"+5481C9: 8B 3D 54 CF AF 68     -  mov edi,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+5481CF: EB 06                 -  jmp gamedll_x86_rwdi.dll+5481D7
"gamedll_x86_rwdi.dll"+5481D1: 8B BF 24 06 00 00     -  mov edi,[edi+00000624]
"gamedll_x86_rwdi.dll"+5481D7: 8B 47 64              -  mov eax,[edi+64]
"gamedll_x86_rwdi.dll"+5481DA: 8B 08                 -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+5481DC: 8B 91 14 01 00 00     -  mov edx,[ecx+00000114]
"gamedll_x86_rwdi.dll"+5481E2: A1 FC D4 AC 68        -  mov eax,[gamedll_x86_rwdi.dll+C3D4FC]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+5481E7: D9 42 04              -  fld dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+5481EA: 8B 0D F8 D4 AC 68     -  mov ecx,[gamedll_x86_rwdi.dll+C3D4F8]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+5481F0: 6A 05                 -  push 05
"gamedll_x86_rwdi.dll"+5481F2: 68 6D E6 EC DE        -  push DEECE66D
"gamedll_x86_rwdi.dll"+5481F7: 50                    -  push eax
"gamedll_x86_rwdi.dll"+5481F8: 51                    -  push ecx
"gamedll_x86_rwdi.dll"+5481F9: E8 82 7A 38 00        -  call gamedll_x86_rwdi.dll+8CFC80
"gamedll_x86_rwdi.dll"+5481FE: 83 C0 0B              -  add eax,0B
"gamedll_x86_rwdi.dll"+548201: 83 D2 00              -  adc edx,00
"gamedll_x86_rwdi.dll"+548204: 81 E2 FF FF 00 00     -  and edx,0000FFFF
"gamedll_x86_rwdi.dll"+54820A: A3 F8 D4 AC 68        -  mov [gamedll_x86_rwdi.dll+C3D4F8],eax
"gamedll_x86_rwdi.dll"+54820F: 0F AC D0 18           -  shrd eax,edx,18
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"Fencer ( One-handed damage 100% )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4A692C)
define(bytes,D9 42 04 D8 45 FC)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vFencer,4)

vFencer:
  dd (float)1

newmem:
  fld dword ptr [vFencer]
  fstp dword ptr [edx+04]

code:
  fld dword ptr [edx+04]
  fadd dword ptr [ebp-04]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edx+04]
  // fadd dword ptr [ebp-04]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4A692C

"gamedll_x86_rwdi.dll"+4A6914: 83 F8 0A              -  cmp eax,0A
"gamedll_x86_rwdi.dll"+4A6917: 74 0E                 -  je gamedll_x86_rwdi.dll+4A6927
"gamedll_x86_rwdi.dll"+4A6919: 8B 17                 -  mov edx,[edi]
"gamedll_x86_rwdi.dll"+4A691B: 8B 42 48              -  mov eax,[edx+48]
"gamedll_x86_rwdi.dll"+4A691E: 8B CF                 -  mov ecx,edi
"gamedll_x86_rwdi.dll"+4A6920: FF D0                 -  call eax
"gamedll_x86_rwdi.dll"+4A6922: 83 F8 09              -  cmp eax,09
"gamedll_x86_rwdi.dll"+4A6925: 75 0E                 -  jne gamedll_x86_rwdi.dll+4A6935
"gamedll_x86_rwdi.dll"+4A6927: 8B 0B                 -  mov ecx,[ebx]
"gamedll_x86_rwdi.dll"+4A6929: 8B 51 18              -  mov edx,[ecx+18]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4A692C: D9 42 04              -  fld dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+4A692F: D8 45 FC              -  fadd dword ptr [ebp-04]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4A6932: D9 5D FC              -  fstp dword ptr [ebp-04]
"gamedll_x86_rwdi.dll"+4A6935: 8B 07                 -  mov eax,[edi]
"gamedll_x86_rwdi.dll"+4A6937: 8B 50 48              -  mov edx,[eax+48]
"gamedll_x86_rwdi.dll"+4A693A: 8B CF                 -  mov ecx,edi
"gamedll_x86_rwdi.dll"+4A693C: FF D2                 -  call edx
"gamedll_x86_rwdi.dll"+4A693E: 83 F8 07              -  cmp eax,07
"gamedll_x86_rwdi.dll"+4A6941: 74 0E                 -  je gamedll_x86_rwdi.dll+4A6951
"gamedll_x86_rwdi.dll"+4A6943: 8B 07                 -  mov eax,[edi]
"gamedll_x86_rwdi.dll"+4A6945: 8B 50 48              -  mov edx,[eax+48]
"gamedll_x86_rwdi.dll"+4A6948: 8B CF                 -  mov ecx,edi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>134</ID>
          <Description>"Way of the Warrior ( Critical hit with One-handed weapon chance 100% )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4A763F)
define(bytes,D9 42 04 D9 5D FC)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vWayWarrior,4)

vWayWarrior:
  dd (float)1

newmem:
  fld dword ptr [vWayWarrior]
  fstp dword ptr [edx+04]

code:
  fld dword ptr [edx+04]
  fstp dword ptr [ebp-04]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edx+04]
  // fstp dword ptr [ebp-04]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4A763F

"gamedll_x86_rwdi.dll"+4A761A: 75 29                 -  jne gamedll_x86_rwdi.dll+4A7645
"gamedll_x86_rwdi.dll"+4A761C: 8D 4E 1C              -  lea ecx,[esi+1C]
"gamedll_x86_rwdi.dll"+4A761F: FF 15 74 64 7D 68     -  call dword ptr [gamedll_x86_rwdi.dll+946474]
"gamedll_x86_rwdi.dll"+4A7625: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+4A7627: A1 54 CF AF 68        -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+4A762C: 75 06                 -  jne gamedll_x86_rwdi.dll+4A7634
"gamedll_x86_rwdi.dll"+4A762E: 8B 86 24 06 00 00     -  mov eax,[esi+00000624]
"gamedll_x86_rwdi.dll"+4A7634: 8B 40 64              -  mov eax,[eax+64]
"gamedll_x86_rwdi.dll"+4A7637: 8B 08                 -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+4A7639: 8B 91 84 00 00 00     -  mov edx,[ecx+00000084]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4A763F: D9 42 04              -  fld dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+4A7642: D9 5D FC              -  fstp dword ptr [ebp-04]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4A7645: 8B 07                 -  mov eax,[edi]
"gamedll_x86_rwdi.dll"+4A7647: 8B 90 A0 02 00 00     -  mov edx,[eax+000002A0]
"gamedll_x86_rwdi.dll"+4A764D: 8B CF                 -  mov ecx,edi
"gamedll_x86_rwdi.dll"+4A764F: FF D2                 -  call edx
"gamedll_x86_rwdi.dll"+4A7651: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+4A7653: 74 55                 -  je gamedll_x86_rwdi.dll+4A76AA
"gamedll_x86_rwdi.dll"+4A7655: 8B 07                 -  mov eax,[edi]
"gamedll_x86_rwdi.dll"+4A7657: 8B 90 A0 01 00 00     -  mov edx,[eax+000001A0]
"gamedll_x86_rwdi.dll"+4A765D: 8B CF                 -  mov ecx,edi
"gamedll_x86_rwdi.dll"+4A765F: FF D2                 -  call edx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>135</ID>
          <Description>"Way of the Fist ( Critical hit with Hand-to-hand chance 100% )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4A76A1)
define(bytes,D9 42 04 D8 45 FC)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vWayFist,4)

vWayFist:
  dd (float)1

newmem:
  fld dword ptr [vWayFist]
  fstp dword ptr [edx+04]

code:
  fld dword ptr [edx+04]
  fadd dword ptr [ebp-04]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edx+04]
  // fadd dword ptr [ebp-04]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4A76A1

"gamedll_x86_rwdi.dll"+4A767F: 75 29                 -  jne gamedll_x86_rwdi.dll+4A76AA
"gamedll_x86_rwdi.dll"+4A7681: 8D 4E 1C              -  lea ecx,[esi+1C]
"gamedll_x86_rwdi.dll"+4A7684: FF 15 74 64 7D 68     -  call dword ptr [gamedll_x86_rwdi.dll+946474]
"gamedll_x86_rwdi.dll"+4A768A: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+4A768C: A1 54 CF AF 68        -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+4A7691: 75 06                 -  jne gamedll_x86_rwdi.dll+4A7699
"gamedll_x86_rwdi.dll"+4A7693: 8B 86 24 06 00 00     -  mov eax,[esi+00000624]
"gamedll_x86_rwdi.dll"+4A7699: 8B 40 64              -  mov eax,[eax+64]
"gamedll_x86_rwdi.dll"+4A769C: 8B 08                 -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+4A769E: 8B 51 10              -  mov edx,[ecx+10]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4A76A1: D9 42 04              -  fld dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+4A76A4: D8 45 FC              -  fadd dword ptr [ebp-04]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4A76A7: D9 5D FC              -  fstp dword ptr [ebp-04]
"gamedll_x86_rwdi.dll"+4A76AA: 8D 43 FF              -  lea eax,[ebx-01]
"gamedll_x86_rwdi.dll"+4A76AD: 83 F8 11              -  cmp eax,11
"gamedll_x86_rwdi.dll"+4A76B0: 0F 87 CE 01 00 00     -  ja gamedll_x86_rwdi.dll+4A7884
"gamedll_x86_rwdi.dll"+4A76B6: 0F B6 80 00 7A 33 68  -  movzx eax,byte ptr [eax+gamedll_x86_rwdi.dll+4A7A00]
"gamedll_x86_rwdi.dll"+4A76BD: FF 24 85 EC 79 33 68  -  jmp dword ptr [eax*4+gamedll_x86_rwdi.dll+4A79EC]
"gamedll_x86_rwdi.dll"+4A76C4: E8 E7 B3 FF FF        -  call gamedll_x86_rwdi.dll+4A2AB0
"gamedll_x86_rwdi.dll"+4A76C9: B9 20 00 00 00        -  mov ecx,00000020
"gamedll_x86_rwdi.dll"+4A76CE: E9 A6 01 00 00        -  jmp gamedll_x86_rwdi.dll+4A7879
"gamedll_x86_rwdi.dll"+4A76D3: E8 D8 B3 FF FF        -  call gamedll_x86_rwdi.dll+4A2AB0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>136</ID>
          <Description>"Big stick ( Two-handed damage 100% )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4A68FF)
define(bytes,D9 41 04 D8 05 4C 12 7E 68)

[ENABLE]

//assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vBigStick,4)

vBigStick:
  dd (float)1

newmem:
  fld dword ptr [vBigStick]
  fstp dword ptr [ecx+04]

code:
  fld dword ptr [ecx+04]
  fadd dword ptr [gamedll_x86_rwdi.dll+95124C]
  jmp return

address:
  jmp newmem
  nop
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [ecx+04]
  // fadd dword ptr [gamedll_x86_rwdi.dll+95124C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4A68FF

"gamedll_x86_rwdi.dll"+4A68E7: 83 F8 0B              -  cmp eax,0B
"gamedll_x86_rwdi.dll"+4A68EA: 74 0E                 -  je gamedll_x86_rwdi.dll+4A68FA
"gamedll_x86_rwdi.dll"+4A68EC: 8B 07                 -  mov eax,[edi]
"gamedll_x86_rwdi.dll"+4A68EE: 8B 50 48              -  mov edx,[eax+48]
"gamedll_x86_rwdi.dll"+4A68F1: 8B CF                 -  mov ecx,edi
"gamedll_x86_rwdi.dll"+4A68F3: FF D2                 -  call edx
"gamedll_x86_rwdi.dll"+4A68F5: 83 F8 0C              -  cmp eax,0C
"gamedll_x86_rwdi.dll"+4A68F8: 75 11                 -  jne gamedll_x86_rwdi.dll+4A690B
"gamedll_x86_rwdi.dll"+4A68FA: 8B 03                 -  mov eax,[ebx]
"gamedll_x86_rwdi.dll"+4A68FC: 8B 48 14              -  mov ecx,[eax+14]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4A68FF: D9 41 04              -  fld dword ptr [ecx+04]
"gamedll_x86_rwdi.dll"+4A6902: D8 05 4C 12 7E 68     -  fadd dword ptr [gamedll_x86_rwdi.dll+95124C]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4A6908: D9 5D FC              -  fstp dword ptr [ebp-04]
"gamedll_x86_rwdi.dll"+4A690B: 8B 17                 -  mov edx,[edi]
"gamedll_x86_rwdi.dll"+4A690D: 8B 42 48              -  mov eax,[edx+48]
"gamedll_x86_rwdi.dll"+4A6910: 8B CF                 -  mov ecx,edi
"gamedll_x86_rwdi.dll"+4A6912: FF D0                 -  call eax
"gamedll_x86_rwdi.dll"+4A6914: 83 F8 0A              -  cmp eax,0A
"gamedll_x86_rwdi.dll"+4A6917: 74 0E                 -  je gamedll_x86_rwdi.dll+4A6927
"gamedll_x86_rwdi.dll"+4A6919: 8B 17                 -  mov edx,[edi]
"gamedll_x86_rwdi.dll"+4A691B: 8B 42 48              -  mov eax,[edx+48]
"gamedll_x86_rwdi.dll"+4A691E: 8B CF                 -  mov ecx,edi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>137</ID>
          <Description>"Frenzy ( Damage for 5 seconds 100% )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4A6BD9)
define(bytes,D9 42 04 D8 45 FC)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vFrenzy,4)

vFrenzy:
  dd (float)1

newmem:
  fld dword ptr [vFrenzy]
  fstp dword ptr [edx+04]

code:
  fld dword ptr [edx+04]
  fadd dword ptr [ebp-04]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edx+04]
  // fadd dword ptr [ebp-04]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4A6BD9

"gamedll_x86_rwdi.dll"+4A6BB4: 7A 2B              -  jp gamedll_x86_rwdi.dll+4A6BE1
"gamedll_x86_rwdi.dll"+4A6BB6: 8D 4E 1C           -  lea ecx,[esi+1C]
"gamedll_x86_rwdi.dll"+4A6BB9: FF 15 74 64 7D 68  -  call dword ptr [gamedll_x86_rwdi.dll+946474]
"gamedll_x86_rwdi.dll"+4A6BBF: 84 C0              -  test al,al
"gamedll_x86_rwdi.dll"+4A6BC1: A1 54 CF AF 68     -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+4A6BC6: 75 06              -  jne gamedll_x86_rwdi.dll+4A6BCE
"gamedll_x86_rwdi.dll"+4A6BC8: 8B 86 24 06 00 00  -  mov eax,[esi+00000624]
"gamedll_x86_rwdi.dll"+4A6BCE: 8B 40 64           -  mov eax,[eax+64]
"gamedll_x86_rwdi.dll"+4A6BD1: 8B 08              -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+4A6BD3: 8B 91 1C 04 00 00  -  mov edx,[ecx+0000041C]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4A6BD9: D9 42 04           -  fld dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+4A6BDC: D8 45 FC           -  fadd dword ptr [ebp-04]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4A6BDF: EB 03              -  jmp gamedll_x86_rwdi.dll+4A6BE4
"gamedll_x86_rwdi.dll"+4A6BE1: D9 45 FC           -  fld dword ptr [ebp-04]
"gamedll_x86_rwdi.dll"+4A6BE4: D9 05 4C 12 7E 68  -  fld dword ptr [gamedll_x86_rwdi.dll+95124C]
"gamedll_x86_rwdi.dll"+4A6BEA: 5F                 -  pop edi
"gamedll_x86_rwdi.dll"+4A6BEB: D8 E9              -  fsubr st(0),st(1)
"gamedll_x86_rwdi.dll"+4A6BED: D8 8E 58 15 00 00  -  fmul dword ptr [esi+00001558]
"gamedll_x86_rwdi.dll"+4A6BF3: DE C1              -  faddp 
"gamedll_x86_rwdi.dll"+4A6BF5: D8 86 54 15 00 00  -  fadd dword ptr [esi+00001554]
"gamedll_x86_rwdi.dll"+4A6BFB: 5E                 -  pop esi
"gamedll_x86_rwdi.dll"+4A6BFC: D8 4D 08           -  fmul dword ptr [ebp+08]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"Mighty throw ( Throwing damage 100% )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+49738E)
define(bytes,D9 42 04 D8 05 4C 12 7E 68)

[ENABLE]

//assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vMightyThrow,4)

vMightyThrow:
  dd (float)1

newmem:
  fld dword ptr [vMightyThrow]
  fstp dword ptr [edx+04]

code:
  fld dword ptr [edx+04]
  fadd dword ptr [gamedll_x86_rwdi.dll+95124C]
  jmp return

address:
  jmp newmem
  nop
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edx+04]
  // fadd dword ptr [gamedll_x86_rwdi.dll+95124C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+49738E

"gamedll_x86_rwdi.dll"+497367: D9 5E 10              -  fstp dword ptr [esi+10]
"gamedll_x86_rwdi.dll"+49736A: FF 15 74 64 7D 68     -  call dword ptr [gamedll_x86_rwdi.dll+946474]
"gamedll_x86_rwdi.dll"+497370: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+497372: A1 54 CF AF 68        -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+497377: 75 06                 -  jne gamedll_x86_rwdi.dll+49737F
"gamedll_x86_rwdi.dll"+497379: 8B 83 24 06 00 00     -  mov eax,[ebx+00000624]
"gamedll_x86_rwdi.dll"+49737F: F6 05 AC 9D B5 68 01  -  test byte ptr [gamedll_x86_rwdi.dll+CC9DAC],01
"gamedll_x86_rwdi.dll"+497386: 8B 40 64              -  mov eax,[eax+64]
"gamedll_x86_rwdi.dll"+497389: 8B 08                 -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+49738B: 8B 51 1C              -  mov edx,[ecx+1C]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+49738E: D9 42 04              -  fld dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+497391: D8 05 4C 12 7E 68     -  fadd dword ptr [gamedll_x86_rwdi.dll+95124C]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+497397: D8 4E 0C              -  fmul dword ptr [esi+0C]
"gamedll_x86_rwdi.dll"+49739A: D9 5E 0C              -  fstp dword ptr [esi+0C]
"gamedll_x86_rwdi.dll"+49739D: 75 19                 -  jne gamedll_x86_rwdi.dll+4973B8
"gamedll_x86_rwdi.dll"+49739F: 83 0D AC 9D B5 68 01  -  or dword ptr [gamedll_x86_rwdi.dll+CC9DAC],01
"gamedll_x86_rwdi.dll"+4973A6: E8 D5 B7 0E 00        -  call gamedll_x86_rwdi.dll+582B80
"gamedll_x86_rwdi.dll"+4973AB: 68 B0 A2 7C 68        -  push gamedll_x86_rwdi.dll+93A2B0
"gamedll_x86_rwdi.dll"+4973B0: E8 64 7C 43 00        -  call gamedll_x86_rwdi.dll+8CF019
"gamedll_x86_rwdi.dll"+4973B5: 83 C4 04              -  add esp,04
"gamedll_x86_rwdi.dll"+4973B8: BA 01 00 00 00        -  mov edx,00000001
"gamedll_x86_rwdi.dll"+4973BD: B8 D8 56 B5 68        -  mov eax,gamedll_x86_rwdi.dll+CC56D8
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>139</ID>
          <Description>"Shinobi ( Instant kill chance 100% )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+49741D)
define(bytes,D9 42 04 51 D9 5D 08)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vShinobi,4)

vShinobi:
  dd (float)1

newmem:
  fld dword ptr [vShinobi]
  fstp dword ptr [edx+04]

code:
  fld dword ptr [edx+04]
  push ecx
  fstp dword ptr [ebp+08]
  jmp return

address:
  jmp newmem
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edx+04]
  // push ecx
  // fstp dword ptr [ebp+08]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+49741D

"gamedll_x86_rwdi.dll"+4973F7: 0F 85 C9 00 00 00     -  jne gamedll_x86_rwdi.dll+4974C6
"gamedll_x86_rwdi.dll"+4973FD: 8D 4B 1C              -  lea ecx,[ebx+1C]
"gamedll_x86_rwdi.dll"+497400: FF 15 74 64 7D 68     -  call dword ptr [gamedll_x86_rwdi.dll+946474]
"gamedll_x86_rwdi.dll"+497406: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+497408: A1 54 CF AF 68        -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+49740D: 75 06                 -  jne gamedll_x86_rwdi.dll+497415
"gamedll_x86_rwdi.dll"+49740F: 8B 83 24 06 00 00     -  mov eax,[ebx+00000624]
"gamedll_x86_rwdi.dll"+497415: 8B 40 64              -  mov eax,[eax+64]
"gamedll_x86_rwdi.dll"+497418: 8B 08                 -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+49741A: 8B 51 24              -  mov edx,[ecx+24]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+49741D: D9 42 04              -  fld dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+497420: 51                    -  push ecx
"gamedll_x86_rwdi.dll"+497421: D9 5D 08              -  fstp dword ptr [ebp+08]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+497424: D9 E8                 -  fld1 
"gamedll_x86_rwdi.dll"+497426: D9 1C 24              -  fstp dword ptr [esp]
"gamedll_x86_rwdi.dll"+497429: E8 A2 8E 2B 00        -  call gamedll_x86_rwdi.dll+7502D0
"gamedll_x86_rwdi.dll"+49742E: D8 5D 08              -  fcomp dword ptr [ebp+08]
"gamedll_x86_rwdi.dll"+497431: 83 C4 04              -  add esp,04
"gamedll_x86_rwdi.dll"+497434: DF E0                 -  fnstsw ax
"gamedll_x86_rwdi.dll"+497436: F6 C4 05              -  test ah,05
"gamedll_x86_rwdi.dll"+497439: 0F 8A 87 00 00 00     -  jp gamedll_x86_rwdi.dll+4974C6
"gamedll_x86_rwdi.dll"+49743F: 53                    -  push ebx
"gamedll_x86_rwdi.dll"+497440: 8B F7                 -  mov esi,edi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>140</ID>
          <Description>"Life drain ( Heal after each hit chance 100% )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+497CCA)
define(bytes,D9 42 04 D9 55 10)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vLifeDrain,4)

vLifeDrain:
  dd (float)1

newmem:
  fld dword ptr [vLifeDrain]
  fstp dword ptr [edx+04]

code:
  fld dword ptr [edx+04]
  fst dword ptr [ebp+10]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [edx+04]
  // fst dword ptr [ebp+10]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+497CCA

"gamedll_x86_rwdi.dll"+497CA9: FF D2                 -  call edx
"gamedll_x86_rwdi.dll"+497CAB: 8D 4B 1C              -  lea ecx,[ebx+1C]
"gamedll_x86_rwdi.dll"+497CAE: FF D7                 -  call edi
"gamedll_x86_rwdi.dll"+497CB0: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+497CB2: A1 54 CF AF 68        -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+497CB7: 75 06                 -  jne gamedll_x86_rwdi.dll+497CBF
"gamedll_x86_rwdi.dll"+497CB9: 8B 83 24 06 00 00     -  mov eax,[ebx+00000624]
"gamedll_x86_rwdi.dll"+497CBF: 8B 40 64              -  mov eax,[eax+64]
"gamedll_x86_rwdi.dll"+497CC2: 8B 08                 -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+497CC4: 8B 91 A0 06 00 00     -  mov edx,[ecx+000006A0]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+497CCA: D9 42 04              -  fld dword ptr [edx+04]
"gamedll_x86_rwdi.dll"+497CCD: D9 55 10              -  fst dword ptr [ebp+10]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+497CD0: D9 EE                 -  fldz 
"gamedll_x86_rwdi.dll"+497CD2: D8 D1                 -  fcom st(0),st(1)
"gamedll_x86_rwdi.dll"+497CD4: DF E0                 -  fnstsw ax
"gamedll_x86_rwdi.dll"+497CD6: DD D9                 -  fstp st(1)
"gamedll_x86_rwdi.dll"+497CD8: F6 C4 05              -  test ah,05
"gamedll_x86_rwdi.dll"+497CDB: 7A 7D                 -  jp gamedll_x86_rwdi.dll+497D5A
"gamedll_x86_rwdi.dll"+497CDD: D9 E8                 -  fld1 
"gamedll_x86_rwdi.dll"+497CDF: 83 EC 08              -  sub esp,08
"gamedll_x86_rwdi.dll"+497CE2: D9 5C 24 04           -  fstp dword ptr [esp+04]
"gamedll_x86_rwdi.dll"+497CE6: D9 1C 24              -  fstp dword ptr [esp]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>141</ID>
          <Description>"Body blows ( Critical attack to perform powerful fist and kick 100% )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+51BB57)
define(bytes,D9 40 04 8B 11)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vBodyBlows,4)

vBodyBlows:
  dd (float)1

newmem:
  fld dword ptr [vBodyBlows]
  fstp dword ptr [eax+04]

code:
  fld dword ptr [eax+04]
  mov edx,[ecx]
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [eax+04]
  // mov edx,[ecx]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+51BB57

"gamedll_x86_rwdi.dll"+51BB34: 84 C0                    -  test al,al
"gamedll_x86_rwdi.dll"+51BB36: 74 07                    -  je gamedll_x86_rwdi.dll+51BB3F
"gamedll_x86_rwdi.dll"+51BB38: A1 54 CF AF 68           -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+51BB3D: EB 0A                    -  jmp gamedll_x86_rwdi.dll+51BB49
"gamedll_x86_rwdi.dll"+51BB3F: 8B 44 24 10              -  mov eax,[esp+10]
"gamedll_x86_rwdi.dll"+51BB43: 8B 80 24 06 00 00        -  mov eax,[eax+00000624]
"gamedll_x86_rwdi.dll"+51BB49: 8B 40 64                 -  mov eax,[eax+64]
"gamedll_x86_rwdi.dll"+51BB4C: 8B 08                    -  mov ecx,[eax]
"gamedll_x86_rwdi.dll"+51BB4E: 8B 81 9C 00 00 00        -  mov eax,[ecx+0000009C]
"gamedll_x86_rwdi.dll"+51BB54: 8B 4B 4C                 -  mov ecx,[ebx+4C]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+51BB57: D9 40 04                 -  fld dword ptr [eax+04]
"gamedll_x86_rwdi.dll"+51BB5A: 8B 11                    -  mov edx,[ecx]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+51BB5C: D9 5C 24 10              -  fstp dword ptr [esp+10]
"gamedll_x86_rwdi.dll"+51BB60: 8B 82 FC 02 00 00        -  mov eax,[edx+000002FC]
"gamedll_x86_rwdi.dll"+51BB66: FF D0                    -  call eax
"gamedll_x86_rwdi.dll"+51BB68: D8 44 24 10              -  fadd dword ptr [esp+10]
"gamedll_x86_rwdi.dll"+51BB6C: 51                       -  push ecx
"gamedll_x86_rwdi.dll"+51BB6D: D9 5C 24 14              -  fstp dword ptr [esp+14]
"gamedll_x86_rwdi.dll"+51BB71: D9 E8                    -  fld1 
"gamedll_x86_rwdi.dll"+51BB73: D9 1C 24                 -  fstp dword ptr [esp]
"gamedll_x86_rwdi.dll"+51BB76: E8 55 47 23 00           -  call gamedll_x86_rwdi.dll+7502D0
"gamedll_x86_rwdi.dll"+51BB7B: D8 5C 24 14              -  fcomp dword ptr [esp+14]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>142</ID>
          <Description>"Cold rage ( Critical hit for a few seconds chance 100% )"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : DeadIslandGame_x86_rwdi.exe
  Version: 
  Date   : 2014-06-22
  Author : Kaito

  This script does blah blah blah
}

define(address,"gamedll_x86_rwdi.dll"+4A794F)
define(bytes,D9 40 04 D8 45 FC)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

globalalloc(vColdRage,4)

vColdRage:
  dd (float)1

newmem:
  fld dword ptr [vColdRage]
  fstp dword ptr [eax+04]

code:
  fld dword ptr [eax+04]
  fadd dword ptr [ebp-04]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // fld dword ptr [eax+04]
  // fadd dword ptr [ebp-04]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "gamedll_x86_rwdi.dll"+4A794F

"gamedll_x86_rwdi.dll"+4A792A: 7A 2C                 -  jp gamedll_x86_rwdi.dll+4A7958
"gamedll_x86_rwdi.dll"+4A792C: 8D 4E 1C              -  lea ecx,[esi+1C]
"gamedll_x86_rwdi.dll"+4A792F: FF 15 74 64 7D 68     -  call dword ptr [gamedll_x86_rwdi.dll+946474]
"gamedll_x86_rwdi.dll"+4A7935: 84 C0                 -  test al,al
"gamedll_x86_rwdi.dll"+4A7937: A1 54 CF AF 68        -  mov eax,[gamedll_x86_rwdi.dll+C6CF54]
"gamedll_x86_rwdi.dll"+4A793C: 75 06                 -  jne gamedll_x86_rwdi.dll+4A7944
"gamedll_x86_rwdi.dll"+4A793E: 8B 86 24 06 00 00     -  mov eax,[esi+00000624]
"gamedll_x86_rwdi.dll"+4A7944: 8B 48 64              -  mov ecx,[eax+64]
"gamedll_x86_rwdi.dll"+4A7947: 8B 11                 -  mov edx,[ecx]
"gamedll_x86_rwdi.dll"+4A7949: 8B 82 50 05 00 00     -  mov eax,[edx+00000550]
// ---------- INJECTING HERE ----------
"gamedll_x86_rwdi.dll"+4A794F: D9 40 04              -  fld dword ptr [eax+04]
"gamedll_x86_rwdi.dll"+4A7952: D8 45 FC              -  fadd dword ptr [ebp-04]
// ---------- DONE INJECTING  ----------
"gamedll_x86_rwdi.dll"+4A7955: D9 5D FC              -  fstp dword ptr [ebp-04]
"gamedll_x86_rwdi.dll"+4A7958: 8D 4E 1C              -  lea ecx,[esi+1C]
"gamedll_x86_rwdi.dll"+4A795B: FF 15 54 64 7D 68     -  call dword ptr [gamedll_x86_rwdi.dll+946454]
"gamedll_x86_rwdi.dll"+4A7961: D8 A6 48 15 00 00     -  fsub dword ptr [esi+00001548]
"gamedll_x86_rwdi.dll"+4A7967: D8 1D 70 60 7E 68     -  fcomp dword ptr [gamedll_x86_rwdi.dll+956070]
"gamedll_x86_rwdi.dll"+4A796D: DF E0                 -  fnstsw ax
"gamedll_x86_rwdi.dll"+4A796F: F6 C4 05              -  test ah,05
"gamedll_x86_rwdi.dll"+4A7972: 7A 2C                 -  jp gamedll_x86_rwdi.dll+4A79A0
"gamedll_x86_rwdi.dll"+4A7974: 8D 4E 1C              -  lea ecx,[esi+1C]
"gamedll_x86_rwdi.dll"+4A7977: FF 15 74 64 7D 68     -  call dword ptr [gamedll_x86_rwdi.dll+946474]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>vStamina</Name>
      <Address>17E60010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vDurability</Name>
      <Address>17E60020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vHealth</Name>
      <Address>17E60000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vInventory</Name>
      <Address>17E60030</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vFury</Name>
      <Address>17E60060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vSuperSpeed</Name>
      <Address>17E60050</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vItems</Name>
      <Address>17E60040</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vBoomerang</Name>
      <Address>17E60070</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DamageForFiveSeconds</Name>
      <Address>0C3A0140</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vDamageForFiveSeconds</Name>
      <Address>0C3A0150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ChanceOfaCriticalHitWhenKicking</Name>
      <Address>02350150</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vChanceOfaCriticalHitWhenKicking</Name>
      <Address>02350160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ThrowingDamage</Name>
      <Address>0C3A0180</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vThrowingDamage</Name>
      <Address>0C3A0190</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CriticalHitChance</Name>
      <Address>02350190</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vCriticalHitChance</Name>
      <Address>023501A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CriticalHitChanceWhenKicking</Name>
      <Address>0C3A0160</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vCriticalHitChanceWhenKicking</Name>
      <Address>0C3A0170</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>GreatConditionWeaponLootChance</Name>
      <Address>023501D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vGreatConditionWeaponLootChance</Name>
      <Address>023501E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>DrunkDamage</Name>
      <Address>02350200</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vDrunkDamage</Name>
      <Address>02350210</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>OneHandedDamage</Name>
      <Address>0C3A01A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vOneHandedDamage</Name>
      <Address>0C3A01B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vFrenzy</Name>
      <Address>17E600C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vFencer</Name>
      <Address>17E60080</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vMightyThrow</Name>
      <Address>17E600D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>WayOfTheWarrior</Name>
      <Address>024501B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vWayOfTheWarrior</Name>
      <Address>024501C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vShinobi</Name>
      <Address>17E600E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vAmmo</Name>
      <Address>024500B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Jackpot</Name>
      <Address>024501F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vJackpot</Name>
      <Address>02450200</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vWayWarrior</Name>
      <Address>17E60090</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SuperSpeed</Name>
      <Address>69E233CD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Boomerang</Name>
      <Address>69ED81E7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MightyThrow</Name>
      <Address>69E2738E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vBigStick</Name>
      <Address>17E600B0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BigStick</Name>
      <Address>69E368FF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vLifeDrain</Name>
      <Address>17E600F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vBodyBlows</Name>
      <Address>17E60100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vColdRage</Name>
      <Address>17E60110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>vWayFist</Name>
      <Address>17E600A0</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
