<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>1673</ID>
      <Description>"Activate All Basic Scripts"</Description>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
ToggleScripts = {
'Always Have Conversation Item',
'Bypass Atlas Locks',
'Ignore Crafting Requirements',
'No Overheat',
'No Ship Overheat',
'Universial Translator (Decode Words)',
'Unlimited Boltcaster Ammo',
'Unlimited Grenades',
'Unlimited Hazard Protection',
'Unlimited Health',
'Unlimited Hyperdrive',
'Unlimited Inventory Items (Crafting/Refuelling)',
'Unlimited Inventory Items (Feeding/Selling)',
'Unlimited Jetpack',
'Unlimited Life Support',
'Unlimited Mining Beam/Photon Cannon',
'Unlimited Phase Beam',
'Unlimited Pulse Engine',
'Unlimited Ship Scanner',
'Unlimited Ship Thrust',
'Unlimited Sprint'
}

AddressList = getAddressList()
for i=1, #ToggleScripts, 1 do
  Address = AddressList.getMemoryRecordByDescription(ToggleScripts[i])
  memoryrecord_freeze(Address)
  if Address.Parent ~= nil then memoryrecord_freeze(Address.Parent) end
end
{$asm}

[DISABLE]
{$lua}
AddressList = getAddressList()
for i=1, #ToggleScripts, 1 do
  Address = AddressList.getMemoryRecordByDescription(ToggleScripts[i])
  memoryrecord_unfreeze(Address)
  if Address.Parent ~= nil then memoryrecord_unfreeze(Address.Parent) end
end
{$asm}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1674</ID>
      <Description>"[Player]"</Description>
      <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>800000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Unlimited Health"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(health,NMS.exe,F3 0F 2C D8 45 85 E4 75)
health:
  db 31 DB 90 90
registersymbol(health)

[DISABLE]
health:
  db F3 0F 2C D8
unregistersymbol(health)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A07F29

"NMS.exe"+A07EF4: 4C 8B 74 24 48           -  mov r14,[rsp+48]
"NMS.exe"+A07EF9: F3 44 0F 11 5C 24 44     -  movss [rsp+44],xmm11
"NMS.exe"+A07F00: 41 0F 28 C0              -  movaps xmm0,xmm8
"NMS.exe"+A07F04: F3 0F 5E C6              -  divss xmm0,xmm6
"NMS.exe"+A07F08: 0F 57 05 91 C6 95 00     -  xorps xmm0,[NMS.exe+13645A0]
"NMS.exe"+A07F0F: F3 0F 11 44 24 48        -  movss [rsp+48],xmm0
"NMS.exe"+A07F15: 8B 44 24 48              -  mov eax,[rsp+48]
"NMS.exe"+A07F19: 23 05 9D 72 CB 00        -  and eax,[NMS.exe+16BF1BC]
"NMS.exe"+A07F1F: 09 44 24 44              -  or [rsp+44],eax
"NMS.exe"+A07F23: F3 0F 58 44 24 44        -  addss xmm0,[rsp+44]
// ---------- INJECTING HERE ----------
"NMS.exe"+A07F29: F3 0F 2C D8              -  cvttss2si ebx,xmm0
"NMS.exe"+A07F2D: 45 85 E4                 -  test r12d,r12d
// ---------- DONE INJECTING  ----------
"NMS.exe"+A07F30: 75 45                    -  jne NMS.exe+A07F77
"NMS.exe"+A07F32: 41 01 9F E8 00 00 00     -  add [r15+000000E8],ebx
"NMS.exe"+A07F39: 41 8B 87 E8 00 00 00     -  mov eax,[r15+000000E8]
"NMS.exe"+A07F40: 85 C0                    -  test eax,eax
"NMS.exe"+A07F42: 7F 16                    -  jg NMS.exe+A07F5A
"NMS.exe"+A07F44: 49 FF 87 80 00 00 00     -  inc [r15+00000080]
"NMS.exe"+A07F4B: 41 8B C5                 -  mov eax,r13d
"NMS.exe"+A07F4E: 41 89 87 E8 00 00 00     -  mov [r15+000000E8],eax
"NMS.exe"+A07F55: E9 AD 00 00 00           -  jmp NMS.exe+A08007
"NMS.exe"+A07F5A: B9 64 00 00 00           -  mov ecx,00000064
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"Unlimited Sprint"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(sprint,NMS.exe,F3 0F 5C C8 F3 0F 11 8F ?? ?? ?? ?? 44 0F 2F E1 0F)
sprint:
  db 90 90 90 90
registersymbol(sprint)

[DISABLE]
sprint:
  db F3 0F 5C C8
unregistersymbol(sprint)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A0AF1A

"NMS.exe"+A0AEDE: F3 0F 10 7C 24 54                 -  movss xmm7,[rsp+54]
"NMS.exe"+A0AEE4: F3 0F 59 F8                       -  mulss xmm7,xmm0
"NMS.exe"+A0AEE8: F3 0F 11 7C 24 54                 -  movss [rsp+54],xmm7
"NMS.exe"+A0AEEE: F3 0F 10 35 CA C7 C1 00           -  movss xmm6,[NMS.exe+16276C0]
"NMS.exe"+A0AEF6: F3 0F 59 F7                       -  mulss xmm6,xmm7
"NMS.exe"+A0AEFA: F3 41 0F 59 F7                    -  mulss xmm6,xmm15
"NMS.exe"+A0AEFF: F3 0F 10 05 DD C1 C1 00           -  movss xmm0,[NMS.exe+16270E4]
"NMS.exe"+A0AF07: F3 41 0F 59 C6                    -  mulss xmm0,xmm14
"NMS.exe"+A0AF0C: F3 0F 5E 44 24 58                 -  divss xmm0,[rsp+58]
"NMS.exe"+A0AF12: F3 0F 10 8F 44 23 00 00           -  movss xmm1,[rdi+00002344]
// ---------- INJECTING HERE ----------
"NMS.exe"+A0AF1A: F3 0F 5C C8                       -  subss xmm1,xmm0
"NMS.exe"+A0AF1E: F3 0F 11 8F 44 23 00 00           -  movss [rdi+00002344],xmm1
// ---------- DONE INJECTING  ----------
"NMS.exe"+A0AF26: 44 0F 2F E1                       -  comiss xmm12,xmm1
"NMS.exe"+A0AF2A: 0F 82 B3 00 00 00                 -  jb NMS.exe+A0AFE3
"NMS.exe"+A0AF30: 48 C7 87 40 23 00 00 01 00 00 00  -  mov [rdi+00002340],00000001
"NMS.exe"+A0AF3B: 44 89 74 24 38                    -  mov [rsp+38],r14d
"NMS.exe"+A0AF40: 4C 89 74 24 30                    -  mov [rsp+30],r14
"NMS.exe"+A0AF45: 44 89 74 24 28                    -  mov [rsp+28],r14d
"NMS.exe"+A0AF4A: 4C 89 74 24 20                    -  mov [rsp+20],r14
"NMS.exe"+A0AF4F: 45 33 C9                          -  xor r9d,r9d
"NMS.exe"+A0AF52: 45 33 C0                          -  xor r8d,r8d
"NMS.exe"+A0AF55: 48 8B 97 F8 00 00 00              -  mov rdx,[rdi+000000F8]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Unlimited Jetpack"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(jetpack,NMS.exe,F3 41 0F 5C C6 F3 0F 11 87 14)
jetpack:
  db 90 90 90 90 90
registersymbol(jetpack)

[DISABLE]
jetpack:
  db F3 41 0F 5C C6
unregistersymbol(jetpack)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A0A7B0

"NMS.exe"+A0A774: F3 0F 10 15 30 83 95 00  -  movss xmm2,[NMS.exe+1362AAC]
"NMS.exe"+A0A77C: 48 8D 15 0D 46 B6 00     -  lea rdx,[NMS.exe+156ED90]
"NMS.exe"+A0A783: E8 E8 7B 0F 00           -  call NMS.exe+B02370
"NMS.exe"+A0A788: 41 0F 28 C6              -  movaps xmm0,xmm14
"NMS.exe"+A0A78C: F3 0F 58 87 10 14 00 00  -  addss xmm0,[rdi+00001410]
"NMS.exe"+A0A794: F3 0F 11 87 10 14 00 00  -  movss [rdi+00001410],xmm0
"NMS.exe"+A0A79C: 80 BF 18 14 00 00 00     -  cmp byte ptr [rdi+00001418],00
"NMS.exe"+A0A7A3: 75 4F                    -  jne NMS.exe+A0A7F4
"NMS.exe"+A0A7A5: F3 0F 10 8F 14 14 00 00  -  movss xmm1,[rdi+00001414]
"NMS.exe"+A0A7AD: 0F 28 C1                 -  movaps xmm0,xmm1
// ---------- INJECTING HERE ----------
"NMS.exe"+A0A7B0: F3 41 0F 5C C6           -  subss xmm0,xmm14
// ---------- DONE INJECTING  ----------
"NMS.exe"+A0A7B5: F3 0F 11 87 14 14 00 00  -  movss [rdi+00001414],xmm0
"NMS.exe"+A0A7BD: 44 0F 2F E0              -  comiss xmm12,xmm0
"NMS.exe"+A0A7C1: 72 31                    -  jb NMS.exe+A0A7F4
"NMS.exe"+A0A7C3: 41 0F 2F CC              -  comiss xmm1,xmm12
"NMS.exe"+A0A7C7: 76 2B                    -  jna NMS.exe+A0A7F4
"NMS.exe"+A0A7C9: 44 89 74 24 38           -  mov [rsp+38],r14d
"NMS.exe"+A0A7CE: 4C 89 74 24 30           -  mov [rsp+30],r14
"NMS.exe"+A0A7D3: 44 89 74 24 28           -  mov [rsp+28],r14d
"NMS.exe"+A0A7D8: 4C 89 74 24 20           -  mov [rsp+20],r14
"NMS.exe"+A0A7DD: 45 33 C9                 -  xor r9d,r9d
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"Unlimited Hazard Protection"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(environment,NMS.exe,F3 0F 58 C2 F3 0F 11 03)
environment:
  db F3 0F 10 C2
registersymbol(environment)

[DISABLE]
environment:
  db F3 0F 58 C2
unregistersymbol(environment)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A2DAAB

"NMS.exe"+A2DA6F: F3 0F 10 13                    -  movss xmm2,[rbx]
"NMS.exe"+A2DA73: 0F 2F F2                       -  comiss xmm6,xmm2
"NMS.exe"+A2DA76: 0F 86 AE 00 00 00              -  jbe NMS.exe+A2DB2A
"NMS.exe"+A2DA7C: F3 42 0F 10 4C 3E 08           -  movss xmm1,[rsi+r15+08]
"NMS.exe"+A2DA83: F3 42 0F 5C 4C 3E 04           -  subss xmm1,[rsi+r15+04]
"NMS.exe"+A2DA8A: F3 41 0F 59 8C 1D 48 01 00 00  -  mulss xmm1,[r13+rbx+00000148]
"NMS.exe"+A2DA94: F3 42 0F 58 4C 3E 04           -  addss xmm1,[rsi+r15+04]
"NMS.exe"+A2DA9B: F3 0F 59 0D 75 95 BF 00        -  mulss xmm1,[NMS.exe+1627018]
"NMS.exe"+A2DAA3: 41 0F 28 C0                    -  movaps xmm0,xmm8
"NMS.exe"+A2DAA7: F3 0F 5E C1                    -  divss xmm0,xmm1
// ---------- INJECTING HERE ----------
"NMS.exe"+A2DAAB: F3 0F 58 C2                    -  addss xmm0,xmm2
"NMS.exe"+A2DAAF: F3 0F 11 03                    -  movss [rbx],xmm0
// ---------- DONE INJECTING  ----------
"NMS.exe"+A2DAB3: 0F 2F C6                       -  comiss xmm0,xmm6
"NMS.exe"+A2DAB6: 76 03                          -  jna NMS.exe+A2DABB
"NMS.exe"+A2DAB8: 0F 28 C6                       -  movaps xmm0,xmm6
"NMS.exe"+A2DABB: F3 0F 11 03                    -  movss [rbx],xmm0
"NMS.exe"+A2DABF: F3 0F 10 05 7D 6A BF 00        -  movss xmm0,[NMS.exe+1624544]
"NMS.exe"+A2DAC7: F3 0F 11 43 48                 -  movss [rbx+48],xmm0
"NMS.exe"+A2DACC: EB 5C                          -  jmp NMS.exe+A2DB2A
"NMS.exe"+A2DACE: F3 0F 10 13                    -  movss xmm2,[rbx]
"NMS.exe"+A2DAD2: 0F 2F D7                       -  comiss xmm2,xmm7
"NMS.exe"+A2DAD5: 76 53                          -  jna NMS.exe+A2DB2A
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>108</ID>
          <Description>"Unlimited Life Support"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(lifesupport,NMS.exe,2B CE 85 C9 7F)
lifesupport:
  db 90 90
registersymbol(lifesupport)

[DISABLE]
lifesupport:
  db 2B CE
unregistersymbol(lifesupport)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A056FE

"NMS.exe"+A056E2: 41 F6 C1 01                    -  test r9l,01
"NMS.exe"+A056E6: 75 0B                          -  jne NMS.exe+A056F3
"NMS.exe"+A056E8: 48 83 C0 30                    -  add rax,30
"NMS.exe"+A056EC: 48 3B C1                       -  cmp rax,rcx
"NMS.exe"+A056EF: 75 DF                          -  jne NMS.exe+A056D0
"NMS.exe"+A056F1: EB 1D                          -  jmp NMS.exe+A05710
"NMS.exe"+A056F3: 48 85 C0                       -  test rax,rax
"NMS.exe"+A056F6: 74 18                          -  je NMS.exe+A05710
"NMS.exe"+A056F8: 8B 50 1C                       -  mov edx,[rax+1C]
"NMS.exe"+A056FB: 8B 48 18                       -  mov ecx,[rax+18]
// ---------- INJECTING HERE ----------
"NMS.exe"+A056FE: 2B CE                          -  sub ecx,esi
"NMS.exe"+A05700: 85 C9                          -  test ecx,ecx
"NMS.exe"+A05702: 7F 04                          -  jg NMS.exe+A05708
// ---------- DONE INJECTING  ----------
"NMS.exe"+A05704: 8B CF                          -  mov ecx,edi
"NMS.exe"+A05706: EB 05                          -  jmp NMS.exe+A0570D
"NMS.exe"+A05708: 3B CA                          -  cmp ecx,edx
"NMS.exe"+A0570A: 0F 4D CA                       -  cmovge ecx,edx
"NMS.exe"+A0570D: 89 48 18                       -  mov [rax+18],ecx
"NMS.exe"+A05710: 48 8B 0D C1 80 C2 00           -  mov rcx,[NMS.exe+162D7D8]
"NMS.exe"+A05717: 48 81 C1 E0 03 00 00           -  add rcx,000003E0
"NMS.exe"+A0571E: E8 0D A2 A5 FF                 -  call NMS.exe+45F930
"NMS.exe"+A05723: 44 0F 2F C8                    -  comiss xmm9,xmm0
"NMS.exe"+A05727: 72 64                          -  jb NMS.exe+A0578D
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"No Overheat"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(overheat,NMS.exe,41 0F 28 C7 F3 41 0F 58 86 ?? ?? ?? ?? F3 41 0F 11 86 ?? ?? ?? ?? 41)
overheat:
  db 0F 57 C0 90
registersymbol(overheat)

[DISABLE]
overheat:
  db 41 0F 28 C7
unregistersymbol(overheat)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A27626

"NMS.exe"+A275DA: E8 31 BB 01 00                    -  call NMS.exe+A43110
"NMS.exe"+A275DF: F3 0F 10 0D 05 00 C0 00           -  movss xmm1,[NMS.exe+16275EC]
"NMS.exe"+A275E7: F3 0F 10 05 55 CF BF 00           -  movss xmm0,[NMS.exe+1624544]
"NMS.exe"+A275EF: F3 41 0F 11 86 F8 0E 00 00        -  movss [r14+00000EF8],xmm0
"NMS.exe"+A275F8: F3 41 0F 11 8E F4 0E 00 00        -  movss [r14+00000EF4],xmm1
"NMS.exe"+A27601: 41 89 B6 FC 0E 00 00              -  mov [r14+00000EFC],esi
"NMS.exe"+A27608: 41 C7 86 D4 0E 00 00 04 00 00 00  -  mov [r14+00000ED4],00000004
"NMS.exe"+A27613: E9 0A 02 00 00                    -  jmp NMS.exe+A27822
"NMS.exe"+A27618: 41 80 BE 08 09 00 00 00           -  cmp byte ptr [r14+00000908],00
"NMS.exe"+A27620: 0F 84 84 01 00 00                 -  je NMS.exe+A277AA
// ---------- INJECTING HERE ----------
"NMS.exe"+A27626: 41 0F 28 C7                       -  movaps xmm0,xmm15
"NMS.exe"+A2762A: F3 41 0F 58 86 C0 0E 00 00        -  addss xmm0,[r14+00000EC0]
// ---------- DONE INJECTING  ----------
"NMS.exe"+A27633: F3 41 0F 11 86 C0 0E 00 00        -  movss [r14+00000EC0],xmm0
"NMS.exe"+A2763C: 41 0F 28 CF                       -  movaps xmm1,xmm15
"NMS.exe"+A27640: F3 41 0F 58 8E C4 0E 00 00        -  addss xmm1,[r14+00000EC4]
"NMS.exe"+A27649: F3 41 0F 11 8E C4 0E 00 00        -  movss [r14+00000EC4],xmm1
"NMS.exe"+A27652: 41 BD 01 00 00 00                 -  mov r13d,00000001
"NMS.exe"+A27658: 0F 2F 0D 45 FF BF 00              -  comiss xmm1,[NMS.exe+16275A4]
"NMS.exe"+A2765F: 76 46                             -  jna NMS.exe+A276A7
"NMS.exe"+A27661: 45 33 C0                          -  xor r8d,r8d
"NMS.exe"+A27664: 41 8B D5                          -  mov edx,r13d
"NMS.exe"+A27667: 49 8B CE                          -  mov rcx,r14
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Unlimited Mining Beam/Photon Cannon"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(laser,NMS.exe,F3 0F 2C C0 29 43 18)
laser+4:
  db 90 90 90
registersymbol(laser)

[DISABLE]
laser+4:
  db 29 43 18
unregistersymbol(laser)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A2A185

"NMS.exe"+A2A162: 41 8D 45 01              -  lea eax,[r13+01]
"NMS.exe"+A2A166: EB 4D                    -  jmp NMS.exe+A2A1B5
"NMS.exe"+A2A168: 45 84 F6                 -  test r14l,r14l
"NMS.exe"+A2A16B: 75 27                    -  jne NMS.exe+A2A194
"NMS.exe"+A2A16D: 66 41 0F 6E C5           -  movd xmm0,r13d
"NMS.exe"+A2A172: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"NMS.exe"+A2A175: 66 0F 6E C9              -  movd xmm1,ecx
"NMS.exe"+A2A179: 0F 5B C9                 -  cvtdq2ps xmm1,xmm1
"NMS.exe"+A2A17C: F3 0F 5E C1              -  divss xmm0,xmm1
"NMS.exe"+A2A180: E8 8B 0C 41 00           -  call NMS.exe+E3AE10
// ---------- INJECTING HERE ----------
"NMS.exe"+A2A185: F3 0F 2C C0              -  cvttss2si eax,xmm0
"NMS.exe"+A2A189: 29 43 18                 -  sub [rbx+18],eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+A2A18C: 44 01 AC BE 38 0F 00 00  -  add [rsi+rdi*4+00000F38],r13d
"NMS.exe"+A2A194: B8 04 00 00 00           -  mov eax,00000004
"NMS.exe"+A2A199: EB 1A                    -  jmp NMS.exe+A2A1B5
"NMS.exe"+A2A19B: 33 C0                    -  xor eax,eax
"NMS.exe"+A2A19D: EB 16                    -  jmp NMS.exe+A2A1B5
"NMS.exe"+A2A19F: BF 03 00 00 00           -  mov edi,00000003
"NMS.exe"+A2A1A4: 45 84 F6                 -  test r14l,r14l
"NMS.exe"+A2A1A7: 75 0A                    -  jne NMS.exe+A2A1B3
"NMS.exe"+A2A1A9: 49 63 CC                 -  movsxd  rcx,r12d
"NMS.exe"+A2A1AC: 89 AC 8E 38 0F 00 00     -  mov [rsi+rcx*4+00000F38],ebp
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>135</ID>
          <Description>"Unlimited Boltcaster Ammo"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(reload,NMS.exe,45 29 B4 24 38 0F 00 00)
reload:
  db 90 90 90 90 90 90 90 90
registersymbol(reload)

[DISABLE]
reload:
  db 45 29 B4 24 38 0F 00 00
unregistersymbol(reload)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A2C175

"NMS.exe"+A2C13F: 41 8B 84 24 38 0F 00 00     -  mov eax,[r12+00000F38]
"NMS.exe"+A2C147: 41 3B C6                    -  cmp eax,r14d
"NMS.exe"+A2C14A: 44 0F 4C F0                 -  cmovl r14d,eax
"NMS.exe"+A2C14E: F3 0F 11 74 24 5C           -  movss [rsp+5C],xmm6
"NMS.exe"+A2C154: E8 F7 87 A3 FF              -  call NMS.exe+464950
"NMS.exe"+A2C159: F3 0F 2C 85 F4 00 00 00     -  cvttss2si eax,[rbp+000000F4]
"NMS.exe"+A2C161: F3 44 0F 10 7C 24 7C        -  movss xmm15,[rsp+7C]
"NMS.exe"+A2C168: F3 44 0F 10 5C 24 78        -  movss xmm11,[rsp+78]
"NMS.exe"+A2C16F: 85 C0                       -  test eax,eax
"NMS.exe"+A2C171: 41 0F 9F C5                 -  setg r13l
// ---------- INJECTING HERE ----------
"NMS.exe"+A2C175: 45 29 B4 24 38 0F 00 00     -  sub [r12+00000F38],r14d
// ---------- DONE INJECTING  ----------
"NMS.exe"+A2C17D: F3 44 0F 10 54 24 74        -  movss xmm10,[rsp+74]
"NMS.exe"+A2C184: F3 44 0F 10 64 24 70        -  movss xmm12,[rsp+70]
"NMS.exe"+A2C18B: E9 25 FD FF FF              -  jmp NMS.exe+A2BEB5
"NMS.exe"+A2C190: 45 85 F6                    -  test r14d,r14d
"NMS.exe"+A2C193: 0F 8E C7 03 00 00           -  jng NMS.exe+A2C560
"NMS.exe"+A2C199: 49 63 C7                    -  movsxd  rax,r15d
"NMS.exe"+A2C19C: 49 8D 9C 24 C0 04 00 00     -  lea rbx,[r12+000004C0]
"NMS.exe"+A2C1A4: 48 8D 0D 35 32 CB 00        -  lea rcx,[NMS.exe+16DF3E0]
"NMS.exe"+A2C1AB: 48 89 44 24 60              -  mov [rsp+60],rax
"NMS.exe"+A2C1B0: 45 8B FE                    -  mov r15d,r14d
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>212</ID>
          <Description>"Unlimited Grenades"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(grenades,NMS.exe,41 FF 8C 24 40 0F 00 00)
grenades:
  db 90 90 90 90 90 90 90 90
registersymbol(grenades)

[DISABLE]
grenades:
  db 41 FF 8C 24 40 0F 00 00
unregistersymbol(grenades)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A2BDF9

"NMS.exe"+A2BDC3: 42 39 84 B1 00 05 00 00  -  cmp [rcx+r14*4+00000500],eax
"NMS.exe"+A2BDCB: 75 14                    -  jne NMS.exe+A2BDE1
"NMS.exe"+A2BDCD: 4B 8D 04 B6              -  lea rax,[r14+r14*4]
"NMS.exe"+A2BDD1: 48 C1 E0 04              -  shl rax,04
"NMS.exe"+A2BDD5: 48 03 C1                 -  add rax,rcx
"NMS.exe"+A2BDD8: 74 07                    -  je NMS.exe+A2BDE1
"NMS.exe"+A2BDDA: C7 40 08 00 00 80 3F     -  mov [rax+08],3F800000
"NMS.exe"+A2BDE1: F3 0F 2C 85 08 01 00 00  -  cvttss2si eax,[rbp+00000108]
"NMS.exe"+A2BDE9: F3 0F 2C 8D 20 01 00 00  -  cvttss2si ecx,[rbp+00000120]
"NMS.exe"+A2BDF1: F3 0F 10 85 10 01 00 00  -  movss xmm0,[rbp+00000110]
// ---------- INJECTING HERE ----------
"NMS.exe"+A2BDF9: 41 FF 8C 24 40 0F 00 00  -  dec [r12+00000F40]
// ---------- DONE INJECTING  ----------
"NMS.exe"+A2BE01: 4C 8D 4C 24 70           -  lea r9,[rsp+70]
"NMS.exe"+A2BE06: 41 B8 15 00 00 00        -  mov r8d,00000015
"NMS.exe"+A2BE0C: 49 8B D5                 -  mov rdx,r13
"NMS.exe"+A2BE0F: 89 44 24 58              -  mov [rsp+58],eax
"NMS.exe"+A2BE13: 89 4C 24 54              -  mov [rsp+54],ecx
"NMS.exe"+A2BE17: F3 0F 2C 9D 14 01 00 00  -  cvttss2si ebx,[rbp+00000114]
"NMS.exe"+A2BE1F: F3 0F 11 45 80           -  movss [rbp-80],xmm0
"NMS.exe"+A2BE24: 89 5C 24 50              -  mov [rsp+50],ebx
"NMS.exe"+A2BE28: E8 23 8B A3 FF           -  call NMS.exe+464950
"NMS.exe"+A2BE2D: F3 0F 2C 85 18 01 00 00  -  cvttss2si eax,[rbp+00000118]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1675</ID>
      <Description>"[Ship]"</Description>
      <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>800000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1450</ID>
          <Description>"Unlimited Ship Thrust"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(fuel,NMS.exe,2B C8 C6 44 24 28 01)
fuel:
  db 90 90
registersymbol(fuel)

[DISABLE]
fuel:
  db 2B C8
unregistersymbol(fuel)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+ACE1ED

"NMS.exe"+ACE1C5: 48 8B 7C 24 30              -  mov rdi,[rsp+30]
"NMS.exe"+ACE1CA: 48 8B 74 24 50              -  mov rsi,[rsp+50]
"NMS.exe"+ACE1CF: 48 85 DB                    -  test rbx,rbx
"NMS.exe"+ACE1D2: 74 3D                       -  je NMS.exe+ACE211
"NMS.exe"+ACE1D4: 8B 53 18                    -  mov edx,[rbx+18]
"NMS.exe"+ACE1D7: 3B D0                       -  cmp edx,eax
"NMS.exe"+ACE1D9: 7C 36                       -  jl NMS.exe+ACE211
"NMS.exe"+ACE1DB: F3 0F 10 1D 61 47 89 00     -  movss xmm3,[NMS.exe+1362944]
"NMS.exe"+ACE1E3: F3 0F 10 15 95 49 89 00     -  movss xmm2,[NMS.exe+1362B80]
"NMS.exe"+ACE1EB: 8B CA                       -  mov ecx,edx
// ---------- INJECTING HERE ----------
"NMS.exe"+ACE1ED: 2B C8                       -  sub ecx,eax
"NMS.exe"+ACE1EF: C6 44 24 28 01              -  mov byte ptr [rsp+28],01
// ---------- DONE INJECTING  ----------
"NMS.exe"+ACE1F4: 89 54 24 20                 -  mov [rsp+20],edx
"NMS.exe"+ACE1F8: 89 4B 18                    -  mov [rbx+18],ecx
"NMS.exe"+ACE1FB: 48 8B 0D D6 F5 B5 00        -  mov rcx,[NMS.exe+162D7D8]
"NMS.exe"+ACE202: 48 8B D3                    -  mov rdx,rbx
"NMS.exe"+ACE205: 48 81 C1 B0 9A 2F 00        -  add rcx,002F9AB0
"NMS.exe"+ACE20C: E8 AF 88 9C FF              -  call NMS.exe+496AC0
"NMS.exe"+ACE211: 48 8B 5C 24 48              -  mov rbx,[rsp+48]
"NMS.exe"+ACE216: 48 83 C4 38                 -  add rsp,38
"NMS.exe"+ACE21A: C3                          -  ret 
"NMS.exe"+ACE21B: CC                          -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1649</ID>
          <Description>"Unlimited Pulse Engine"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(pulse,NMS.exe,FF 4F 18 33 C0)
pulse:
  db 90 90 90
registersymbol(pulse)
[DISABLE]
pulse:
  db FF 4F 18 33 C0
unregistersymbol(pulse)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1533</ID>
          <Description>"Unlimited Hyperdrive"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(warpdrive,NMS.exe,FF C9 33 F6 48 8D 54 24 60)
warpdrive:
  db 90 90
registersymbol(warpdrive)

[DISABLE]
warpdrive:
  db FF C9
unregistersymbol(warpdrive)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+9D747A

"NMS.exe"+9D7456: 75 0E                 -  jne NMS.exe+9D7466
"NMS.exe"+9D7458: 48 83 C0 30           -  add rax,30
"NMS.exe"+9D745C: 48 3B C1              -  cmp rax,rcx
"NMS.exe"+9D745F: 75 DF                 -  jne NMS.exe+9D7440
"NMS.exe"+9D7461: E9 EE 00 00 00        -  jmp NMS.exe+9D7554
"NMS.exe"+9D7466: 48 85 C0              -  test rax,rax
"NMS.exe"+9D7469: 0F 84 E5 00 00 00     -  je NMS.exe+9D7554
"NMS.exe"+9D746F: 8B 48 18              -  mov ecx,[rax+18]
"NMS.exe"+9D7472: 85 C9                 -  test ecx,ecx
"NMS.exe"+9D7474: 0F 8E DA 00 00 00     -  jng NMS.exe+9D7554
// ---------- INJECTING HERE ----------
"NMS.exe"+9D747A: FF C9                 -  dec ecx
"NMS.exe"+9D747C: 33 F6                 -  xor esi,esi
"NMS.exe"+9D747E: 48 8D 54 24 60        -  lea rdx,[rsp+60]
// ---------- DONE INJECTING  ----------
"NMS.exe"+9D7483: 89 48 18              -  mov [rax+18],ecx
"NMS.exe"+9D7486: 41 8B C6              -  mov eax,r14d
"NMS.exe"+9D7489: 89 74 24 74           -  mov [rsp+74],esi
"NMS.exe"+9D748D: C1 E0 14              -  shl eax,14
"NMS.exe"+9D7490: 48 89 74 24 78        -  mov [rsp+78],rsi
"NMS.exe"+9D7495: C1 F8 14              -  sar eax,14
"NMS.exe"+9D7498: 89 44 24 44           -  mov [rsp+44],eax
"NMS.exe"+9D749C: 41 8B C6              -  mov eax,r14d
"NMS.exe"+9D749F: 41 C1 E6 08           -  shl r14d,08
"NMS.exe"+9D74A3: C1 F8 18              -  sar eax,18
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1542</ID>
          <Description>"Unlimited Warp Distance"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(warp_distance,NMS.exe,0F 28 7C 24 20 4C 8B BC)
alloc(newmem,$1000,warp_distance)//"NMS.exe"+46520F

label(code)
label(return)

newmem:
  mov dword ptr [rsp+20],0
  //mov dword ptr [rsp+24],0
code:
  movaps xmm7,[rsp+20]
  jmp return

warp_distance:
  jmp newmem
return:
registersymbol(warp_distance)

[DISABLE]
warp_distance:
  db 0F 28 7C 24 20
unregistersymbol(warp_distance)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+46520F

"NMS.exe"+4651EE: 0F 2F C6                 -  comiss xmm0,xmm6
"NMS.exe"+4651F1: 76 06                    -  jna NMS.exe+4651F9
"NMS.exe"+4651F3: 0F 28 F0                 -  movaps xmm6,xmm0
"NMS.exe"+4651F6: 48 8B EB                 -  mov rbp,rbx
"NMS.exe"+4651F9: 48 83 C0 0C              -  add rax,0C
"NMS.exe"+4651FD: 48 3B C1                 -  cmp rax,rcx
"NMS.exe"+465200: 75 E2                    -  jne NMS.exe+4651E4
"NMS.exe"+465202: 48 83 C3 30              -  add rbx,30
"NMS.exe"+465206: 48 3B DF                 -  cmp rbx,rdi
"NMS.exe"+465209: 0F 85 31 FF FF FF        -  jne NMS.exe+465140
// ---------- INJECTING HERE ----------
"NMS.exe"+46520F: 0F 28 7C 24 20           -  movaps xmm7,[rsp+20]
// ---------- DONE INJECTING  ----------
"NMS.exe"+465214: 4C 8B BC 24 88 00 00 00  -  mov r15,[rsp+00000088]
"NMS.exe"+46521C: 4C 8B AC 24 80 00 00 00  -  mov r13,[rsp+00000080]
"NMS.exe"+465224: 48 8B 74 24 78           -  mov rsi,[rsp+78]
"NMS.exe"+465229: 48 85 ED                 -  test rbp,rbp
"NMS.exe"+46522C: 74 0A                    -  je NMS.exe+465238
"NMS.exe"+46522E: 48 8B 45 24              -  mov rax,[rbp+24]
"NMS.exe"+465232: 49 89 04 24              -  mov [r12],rax
"NMS.exe"+465236: EB 08                    -  jmp NMS.exe+465240
"NMS.exe"+465238: 49 C7 04 24 FF FF FF FF  -  mov [r12],FFFFFFFF
"NMS.exe"+465240: 49 8B C4                 -  mov rax,r12
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1469</ID>
          <Description>"Unlimited Ship Scanner"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.0
  Date   : 08-14-16
  Author : Slynderdale
}

[ENABLE]
aobscanmodule(shipscanner,NMS.exe,89 71 10 89 71 38)
shipscanner:
db 90 90 90
registersymbol(shipscanner)

[DISABLE]
shipscanner:
db 89 71 10
unregistersymbol(shipscanner)

{
// ORIGINAL CODE - INJECTION POINT: NMS.exe+97D816

NMS.exe+97D7EB: 73 07 - jae 7FF71CE2D7F4
NMS.exe+97D7ED: 32 C0  - xor al,al
NMS.exe+97D7EF: E9 F50D0000 - jmp 7FF71CE2E5E9
NMS.exe+97D7F4: 80 B9 A0000000 00 - cmp byte ptr [rcx+000000A0],00
NMS.exe+97D7FB: 75 F0 - jne 7FF71CE2D7ED
NMS.exe+97D7FD: F3 0F10 05 0F3DC800  - movss xmm0,[7FF71DAB1514]
NMS.exe+97D805: F3 0F11 41 18  - movss [rcx+18],xmm0
NMS.exe+97D80A: C6 81 A0000000 01 - mov byte ptr [rcx+000000A0],01
NMS.exe+97D811: 33 F6  - xor esi,esi
NMS.exe+97D813: 89 71 30  - mov [rcx+30],esi
// ---------- INJECTING HERE ----------
NMS.exe+97D816: 89 71 10  - mov [rcx+10],esi
// ---------- DONE INJECTING  ----------
NMS.exe+97D819: 89 71 38  - mov [rcx+38],esi
NMS.exe+97D81C: F3 0F10 4A 08  - movss xmm1,[rdx+08]
NMS.exe+97D821: F3 0F10 42 04  - movss xmm0,[rdx+04]
NMS.exe+97D826: 8B 02  - mov eax,[rdx]
NMS.exe+97D828: 89 41 40  - mov [rcx+40],eax
NMS.exe+97D82B: F3 0F11 41 44  - movss [rcx+44],xmm0
NMS.exe+97D830: F3 0F11 49 48  - movss [rcx+48],xmm1
NMS.exe+97D835: C7 41 4C 0000803F - mov [rcx+4C],3F800000
NMS.exe+97D83C: F3 0F10 4A 18  - movss xmm1,[rdx+18]
NMS.exe+97D841: F3 0F10 42 14  - movss xmm0,[rdx+14]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>263</ID>
          <Description>"Unlimited Phase Beam"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.0
  Date   : 08-13-16
  Author : Slynderdale
}

[ENABLE]
aobscanmodule(shipammo,NMS.exe,89 48 18 8B C7 48 83 C4 30)
shipammo:
db 90 90 90
registersymbol(shipammo)

[DISABLE]
shipammo:
db 89 48 18
unregistersymbol(shipammo)

{
// ORIGINAL CODE - INJECTION POINT: NMS.exe+AFDC61

NMS.exe+AFDC47: 48 83 C4 30 - add rsp,30
NMS.exe+AFDC4B: 5F - pop rdi
NMS.exe+AFDC4C: C3 - ret 
NMS.exe+AFDC4D: 48 85 C0  - test rax,rax
NMS.exe+AFDC50: 74 EE - je 7FF786CBDC40
NMS.exe+AFDC52: 8B 48 18  - mov ecx,[rax+18]
NMS.exe+AFDC55: 48 8B 5C 24 48  - mov rbx,[rsp+48]
NMS.exe+AFDC5A: 3B CF  - cmp ecx,edi
NMS.exe+AFDC5C: 0F4C F9  - cmovl edi,ecx
NMS.exe+AFDC5F: 2B CF  - sub ecx,edi
// ---------- INJECTING HERE ----------
NMS.exe+AFDC61: 89 48 18  - mov [rax+18],ecx
// ---------- DONE INJECTING  ----------
NMS.exe+AFDC64: 8B C7  - mov eax,edi
NMS.exe+AFDC66: 48 83 C4 30 - add rsp,30
NMS.exe+AFDC6A: 5F - pop rdi
NMS.exe+AFDC6B: C3 - ret 
NMS.exe+AFDC6C: CC - int 3 
NMS.exe+AFDC6D: CC - int 3 
NMS.exe+AFDC6E: CC - int 3 
NMS.exe+AFDC6F: CC - int 3 
NMS.exe+AFDC70: 48 89 4C 24 08  - mov [rsp+08],rcx
NMS.exe+AFDC75: 53 - push rbx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>260</ID>
          <Description>"No Ship Overheat"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.0
  Date   : 08-13-16
  Author : Slynderdale
}

[ENABLE]
aobscanmodule(shipheat,NMS.exe,F3 41 0F 11 86 1C 0A 00 00)
shipheat:
db 90 90 90 90 90 90 90 90 90
registersymbol(shipheat)

[DISABLE]
shipheat:
db F3 41 0F 11 86 1C 0A 00 00
unregistersymbol(shipheat)

{
// ORIGINAL CODE - INJECTION POINT: NMS.exe+AFCE5E

NMS.exe+AFCE32: 85 C0  - test eax,eax
NMS.exe+AFCE34: 75 0E - jne 7FF786CBCE44
NMS.exe+AFCE36: 41 0F28 C7  - movaps xmm0,xmm15
NMS.exe+AFCE3A: F3 0F5E 85 50010000  - divss xmm0,[rbp+00000150]
NMS.exe+AFCE42: EB 11 - jmp 7FF786CBCE55
NMS.exe+AFCE44: 83 F8 01 - cmp eax,01
NMS.exe+AFCE47: 75 20 - jne 7FF786CBCE69
NMS.exe+AFCE49: 41 0F28 C7  - movaps xmm0,xmm15
NMS.exe+AFCE4D: F3 0F5E 85 40010000  - divss xmm0,[rbp+00000140]
NMS.exe+AFCE55: F3 41 0F58 86 1C0A0000  - addss xmm0,[r14+00000A1C]
// ---------- INJECTING HERE ----------
NMS.exe+AFCE5E: F3 41 0F11 86 1C0A0000  - movss [r14+00000A1C],xmm0
// ---------- DONE INJECTING  ----------
NMS.exe+AFCE67: EB 07 - jmp 7FF786CBCE70
NMS.exe+AFCE69: 45 89 AE 1C0A0000  - mov [r14+00000A1C],r13d
NMS.exe+AFCE70: F3 41 0F10 86 1C0A0000  - movss xmm0,[r14+00000A1C]
NMS.exe+AFCE79: 41 0F2F C0  - comiss xmm0,xmm8
NMS.exe+AFCE7D: 72 55 - jb 7FF786CBCED4
NMS.exe+AFCE7F: 45 38 AE 240A0000  - cmp [r14+00000A24],r13l
NMS.exe+AFCE86: 75 30 - jne 7FF786CBCEB8
NMS.exe+AFCE88: 44 89 6C 24 38  - mov [rsp+38],r13d
NMS.exe+AFCE8D: 4C 89 6C 24 30  - mov [rsp+30],r13
NMS.exe+AFCE92: 44 89 6C 24 28  - mov [rsp+28],r13d
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1678</ID>
      <Description>"[Inventory]"</Description>
      <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>800000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>124</ID>
          <Description>"Unlimited Inventory Items (Crafting/Refuelling)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(inventory,NMS.exe,29 47 18 4C 8B 35)
inventory:
  db 90 90 90
registersymbol(inventory)

[DISABLE]
inventory:
  db 29 47 18
unregistersymbol(inventory)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+4615A4

"NMS.exe"+461580: 66 41 0F 6E F6           -  movd xmm6,r14d
"NMS.exe"+461585: 0F 5B C9                 -  cvtdq2ps xmm1,xmm1
"NMS.exe"+461588: 43 8D 04 37              -  lea eax,[r15+r14]
"NMS.exe"+46158C: 89 46 18                 -  mov [rsi+18],eax
"NMS.exe"+46158F: 0F 5B F6                 -  cvtdq2ps xmm6,xmm6
"NMS.exe"+461592: 0F 28 C6                 -  movaps xmm0,xmm6
"NMS.exe"+461595: F3 0F 5E C1              -  divss xmm0,xmm1
"NMS.exe"+461599: E8 52 A0 D5 00           -  call NMS.exe+11BB5F0
"NMS.exe"+46159E: 8B DD                    -  mov ebx,ebp
"NMS.exe"+4615A0: F3 0F 2C C0              -  cvttss2si eax,xmm0
// ---------- INJECTING HERE ----------
"NMS.exe"+4615A4: 29 47 18                 -  sub [rdi+18],eax
"NMS.exe"+4615A7: 4C 8B 35 2A C2 1C 01     -  mov r14,[NMS.exe+162D7D8]
// ---------- DONE INJECTING  ----------
"NMS.exe"+4615AE: 4D 8D BE 10 76 2F 00     -  lea r15,[r14+002F7610]
"NMS.exe"+4615B5: 85 DB                    -  test ebx,ebx
"NMS.exe"+4615B7: 75 06                    -  jne NMS.exe+4615BF
"NMS.exe"+4615B9: 44 8D 43 08              -  lea r8d,[rbx+08]
"NMS.exe"+4615BD: EB 18                    -  jmp NMS.exe+4615D7
"NMS.exe"+4615BF: 83 FB 02                 -  cmp ebx,02
"NMS.exe"+4615C2: 75 06                    -  jne NMS.exe+4615CA
"NMS.exe"+4615C4: 44 8D 43 13              -  lea r8d,[rbx+13]
"NMS.exe"+4615C8: EB 0D                    -  jmp NMS.exe+4615D7
"NMS.exe"+4615CA: 41 B8 46 00 00 00        -  mov r8d,00000046
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>214</ID>
          <Description>"Unlimited Inventory Items (Feeding/Selling)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(sell,NMS.exe,44 2B C1 45 89 41 18)
sell:
  db 90 90 90
registersymbol(sell)

[DISABLE]
sell:
  db 44 2B C1
unregistersymbol(sell)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+45F760

"NMS.exe"+45F739: 49 0F 47 DD                       -  cmova rbx,r13
"NMS.exe"+45F73D: 48 8B C7                          -  mov rax,rdi
"NMS.exe"+45F740: 48 85 DB                          -  test rbx,rbx
"NMS.exe"+45F743: 74 30                             -  je NMS.exe+45F775
"NMS.exe"+45F745: 66 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"NMS.exe"+45F750: 4C 8B 08                          -  mov r9,[rax]
"NMS.exe"+45F753: 45 8B 41 18                       -  mov r8d,[r9+18]
"NMS.exe"+45F757: 8B CD                             -  mov ecx,ebp
"NMS.exe"+45F759: 44 3B C5                          -  cmp r8d,ebp
"NMS.exe"+45F75C: 41 0F 4C C8                       -  cmovl ecx,r8d
// ---------- INJECTING HERE ----------
"NMS.exe"+45F760: 44 2B C1                          -  sub r8d,ecx
"NMS.exe"+45F763: 45 89 41 18                       -  mov [r9+18],r8d
// ---------- DONE INJECTING  ----------
"NMS.exe"+45F767: 2B E9                             -  sub ebp,ecx
"NMS.exe"+45F769: 48 8D 40 08                       -  lea rax,[rax+08]
"NMS.exe"+45F76D: 49 FF C2                          -  inc r10
"NMS.exe"+45F770: 4C 3B D3                          -  cmp r10,rbx
"NMS.exe"+45F773: 75 DB                             -  jne NMS.exe+45F750
"NMS.exe"+45F775: 48 85 FF                          -  test rdi,rdi
"NMS.exe"+45F778: 74 1A                             -  je NMS.exe+45F794
"NMS.exe"+45F77A: 41 83 C8 FF                       -  or r8d,-01
"NMS.exe"+45F77E: 48 8B D7                          -  mov rdx,rdi
"NMS.exe"+45F781: E8 5A B4 77 00                    -  call NMS.exe+BDABE0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"Ignore Crafting Requirements"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(crafting1,NMS.exe,66 41 0F 6E 46 14)
crafting1:
  db 0F 57 C0 90 90 90
registersymbol(crafting1)

aobscanmodule(crafting2,NMS.exe,66 41 0F 6E 44 24 14)
crafting2:
  db 0F 57 C0 90 90 90 90
registersymbol(crafting2)

aobscanmodule(crafting3,NMS.exe,66 41 0F 6E 44 07 14)
crafting3:
  db 0F 57 C0 90 90 90 90
registersymbol(crafting3)

aobscanmodule(crafting4,NMS.exe,7C 1E 49 83 C6 18)
crafting4:
  db 90 90
registersymbol(crafting4)

aobscanmodule(crafting5,NMS.exe,7C 12 45 33 FF)
crafting5:
  db 90 90
registersymbol(crafting5)

[DISABLE]
crafting1:
  db 66 41 0F 6E 46 14
unregistersymbol(crafting1)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+460C68

"NMS.exe"+460C4A: 41 FF C0                 -  inc r8d
"NMS.exe"+460C4D: EB 04                    -  jmp NMS.exe+460C53
"NMS.exe"+460C4F: 44 03 40 18              -  add r8d,[rax+18]
"NMS.exe"+460C53: 48 83 C0 30              -  add rax,30
"NMS.exe"+460C57: 48 3B C1                 -  cmp rax,rcx
"NMS.exe"+460C5A: 75 D4                    -  jne NMS.exe+460C30
"NMS.exe"+460C5C: 45 03 F8                 -  add r15d,r8d
"NMS.exe"+460C5F: 48 83 C2 04              -  add rdx,04
"NMS.exe"+460C63: 49 3B D4                 -  cmp rdx,r12
"NMS.exe"+460C66: 75 88                    -  jne NMS.exe+460BF0
// ---------- INJECTING HERE ----------
"NMS.exe"+460C68: 66 41 0F 6E 46 14        -  movd xmm0,[r14+14]
// ---------- DONE INJECTING  ----------
"NMS.exe"+460C6E: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"NMS.exe"+460C71: F3 0F 59 05 CB 63 1C 01  -  mulss xmm0,[NMS.exe+1627044]
"NMS.exe"+460C79: E8 72 A9 D5 00           -  call NMS.exe+11BB5F0
"NMS.exe"+460C7E: F3 0F 2C C0              -  cvttss2si eax,xmm0
"NMS.exe"+460C82: 44 3B F8                 -  cmp r15d,eax
"NMS.exe"+460C85: 7C 15                    -  jl NMS.exe+460C9C
"NMS.exe"+460C87: 45 33 FF                 -  xor r15d,r15d
"NMS.exe"+460C8A: 49 83 C6 18              -  add r14,18
"NMS.exe"+460C8E: 4C 3B F3                 -  cmp r14,rbx
"NMS.exe"+460C91: 0F 85 C9 FE FF FF        -  jne NMS.exe+460B60
}

crafting2:
  db 66 41 0F 6E 44 24 14
unregistersymbol(crafting2)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+4611DA

"NMS.exe"+4611AE: 48 C7 45 23 FF FF FF FF     -  mov [rbp+23],FFFFFFFF
"NMS.exe"+4611B6: 41 0F 10 04 24              -  movups xmm0,[r12]
"NMS.exe"+4611BB: 0F 11 45 07                 -  movups [rbp+07],xmm0
"NMS.exe"+4611BF: 41 8B 44 24 10              -  mov eax,[r12+10]
"NMS.exe"+4611C4: 89 45 FF                    -  mov [rbp-01],eax
"NMS.exe"+4611C7: 4C 8D 45 FF                 -  lea r8,[rbp-01]
"NMS.exe"+4611CB: 48 8D 54 24 40              -  lea rdx,[rsp+40]
"NMS.exe"+4611D0: 49 8B CE                    -  mov rcx,r14
"NMS.exe"+4611D3: E8 48 EE FF FF              -  call NMS.exe+460020
"NMS.exe"+4611D8: 8B D8                       -  mov ebx,eax
// ---------- INJECTING HERE ----------
"NMS.exe"+4611DA: 66 41 0F 6E 44 24 14        -  movd xmm0,[r12+14]
// ---------- DONE INJECTING  ----------
"NMS.exe"+4611E1: 0F 5B C0                    -  cvtdq2ps xmm0,xmm0
"NMS.exe"+4611E4: F3 0F 59 05 58 5E 1C 01     -  mulss xmm0,[NMS.exe+1627044]
"NMS.exe"+4611EC: E8 FF A3 D5 00              -  call NMS.exe+11BB5F0
"NMS.exe"+4611F1: F3 0F 2C F8                 -  cvttss2si edi,xmm0
"NMS.exe"+4611F5: 3B DF                       -  cmp ebx,edi
"NMS.exe"+4611F7: 0F 8C F6 00 00 00           -  jl NMS.exe+4612F3
"NMS.exe"+4611FD: 48 C7 45 F3 FF FF FF FF     -  mov [rbp-0D],FFFFFFFF
"NMS.exe"+461205: 33 C0                       -  xor eax,eax
"NMS.exe"+461207: 89 45 CF                    -  mov [rbp-31],eax
"NMS.exe"+46120A: 48 89 45 D7                 -  mov [rbp-29],rax
}

crafting3:
  db 66 41 0F 6E 44 07 14
unregistersymbol(crafting3)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+515124

"NMS.exe"+515103: 48 83 C0 30                    -  add rax,30
"NMS.exe"+515107: 48 3B C1                       -  cmp rax,rcx
"NMS.exe"+51510A: 75 D4                          -  jne NMS.exe+5150E0
"NMS.exe"+51510C: 41 03 F0                       -  add esi,r8d
"NMS.exe"+51510F: 48 83 C2 04                    -  add rdx,04
"NMS.exe"+515113: 49 3B D7                       -  cmp rdx,r15
"NMS.exe"+515116: 75 8C                          -  jne NMS.exe+5150A4
"NMS.exe"+515118: 89 75 CF                       -  mov [rbp-31],esi
"NMS.exe"+51511B: 48 8B 45 A7                    -  mov rax,[rbp-59]
"NMS.exe"+51511F: 4C 8B 7C 24 28                 -  mov r15,[rsp+28]
// ---------- INJECTING HERE ----------
"NMS.exe"+515124: 66 41 0F 6E 44 07 14           -  movd xmm0,[r15+rax+14]
// ---------- DONE INJECTING  ----------
"NMS.exe"+51512B: 0F 5B C0                       -  cvtdq2ps xmm0,xmm0
"NMS.exe"+51512E: F3 0F 59 C6                    -  mulss xmm0,xmm6
"NMS.exe"+515132: E8 B9 64 CA 00                 -  call NMS.exe+11BB5F0
"NMS.exe"+515137: F3 0F 2C C0                    -  cvttss2si eax,xmm0
"NMS.exe"+51513B: 89 45 D3                       -  mov [rbp-2D],eax
"NMS.exe"+51513E: 41 B0 01                       -  mov r8l,01
"NMS.exe"+515141: 48 8D 55 B7                    -  lea rdx,[rbp-49]
"NMS.exe"+515145: 49 8B CE                       -  mov rcx,r14
"NMS.exe"+515148: E8 E3 D3 F6 FF                 -  call NMS.exe+482530
"NMS.exe"+51514D: 49 8B 46 50                    -  mov rax,[r14+50]
}

crafting4:
  db 7C 1E
unregistersymbol(crafting4)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+46054C

"NMS.exe"+46052D: EB 04                    -  jmp NMS.exe+460533
"NMS.exe"+46052F: 44 03 40 18              -  add r8d,[rax+18]
"NMS.exe"+460533: 48 83 C0 30              -  add rax,30
"NMS.exe"+460537: 48 3B C1                 -  cmp rax,rcx
"NMS.exe"+46053A: 75 D4                    -  jne NMS.exe+460510
"NMS.exe"+46053C: 45 03 F8                 -  add r15d,r8d
"NMS.exe"+46053F: 48 83 C2 04              -  add rdx,04
"NMS.exe"+460543: 49 3B D4                 -  cmp rdx,r12
"NMS.exe"+460546: 75 8D                    -  jne NMS.exe+4604D5
"NMS.exe"+460548: 45 3B 7E 14              -  cmp r15d,[r14+14]
// ---------- INJECTING HERE ----------
"NMS.exe"+46054C: 7C 1E                    -  jl NMS.exe+46056C
"NMS.exe"+46054E: 49 83 C6 18              -  add r14,18
// ---------- DONE INJECTING  ----------
"NMS.exe"+460552: 4C 3B F3                 -  cmp r14,rbx
"NMS.exe"+460555: 0F 85 E5 FE FF FF        -  jne NMS.exe+460440
"NMS.exe"+46055B: 48 8B 4D A0              -  mov rcx,[rbp-60]
"NMS.exe"+46055F: E8 9C 5C FE FF           -  call NMS.exe+446200
"NMS.exe"+460564: 85 C0                    -  test eax,eax
"NMS.exe"+460566: 7E 04                    -  jle NMS.exe+46056C
"NMS.exe"+460568: B3 01                    -  mov bl,01
"NMS.exe"+46056A: EB 02                    -  jmp NMS.exe+46056E
"NMS.exe"+46056C: 32 DB                    -  xor bl,bl
"NMS.exe"+46056E: 4D 85 ED                 -  test r13,r13
}

crafting5:
  db 7C 12
unregistersymbol(crafting5)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+4620CC

"NMS.exe"+4620AD: EB 04                    -  jmp NMS.exe+4620B3
"NMS.exe"+4620AF: 44 03 40 18              -  add r8d,[rax+18]
"NMS.exe"+4620B3: 48 83 C0 30              -  add rax,30
"NMS.exe"+4620B7: 48 3B C1                 -  cmp rax,rcx
"NMS.exe"+4620BA: 75 D4                    -  jne NMS.exe+462090
"NMS.exe"+4620BC: 45 03 F8                 -  add r15d,r8d
"NMS.exe"+4620BF: 48 83 C2 04              -  add rdx,04
"NMS.exe"+4620C3: 49 3B D4                 -  cmp rdx,r12
"NMS.exe"+4620C6: 75 88                    -  jne NMS.exe+462050
"NMS.exe"+4620C8: 45 3B 7E 14              -  cmp r15d,[r14+14]
// ---------- INJECTING HERE ----------
"NMS.exe"+4620CC: 7C 12                    -  jl NMS.exe+4620E0
"NMS.exe"+4620CE: 45 33 FF                 -  xor r15d,r15d
// ---------- DONE INJECTING  ----------
"NMS.exe"+4620D1: 49 83 C6 18              -  add r14,18
"NMS.exe"+4620D5: 4C 3B F3                 -  cmp r14,rbx
"NMS.exe"+4620D8: 0F 85 E4 FE FF FF        -  jne NMS.exe+461FC2
"NMS.exe"+4620DE: EB 07                    -  jmp NMS.exe+4620E7
"NMS.exe"+4620E0: 32 DB                    -  xor bl,bl
"NMS.exe"+4620E2: 45 33 FF                 -  xor r15d,r15d
"NMS.exe"+4620E5: EB 13                    -  jmp NMS.exe+4620FA
"NMS.exe"+4620E7: 48 8B 4D A0              -  mov rcx,[rbp-60]
"NMS.exe"+4620EB: E8 10 41 FE FF           -  call NMS.exe+446200
"NMS.exe"+4620F0: 85 C0                    -  test eax,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1770</ID>
          <Description>"Unlock All Technology Recipes"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(technology,NMS.exe,49 8B 9D A8 09 00 00 48)
alloc(newmem,$1000,technology)
alloc(cGcTechnologyTable,1024,technology)
label(cGcTechnologyTable_end)
registersymbol(cGcTechnologyTable)
registersymbol(cGcTechnologyTable_end)

label(code)
label(return)

newmem:

code:
  mov rbx,cGcTechnologyTable
  mov rdi,cGcTechnologyTable_end
  jmp return

technology:
  jmp code
  nop
  nop
return:
registersymbol(technology)

cGcTechnologyTable+000:
db 'PROTECT'
cGcTechnologyTable+010:
db 'ENERGY'
cGcTechnologyTable+020:
db 'JET1'
cGcTechnologyTable+030:
db 'JETBOOST1'
cGcTechnologyTable+040:
db 'JETBOOST2'
cGcTechnologyTable+050:
db 'JETBOOST3'
cGcTechnologyTable+060:
db 'UNW1'
cGcTechnologyTable+070:
db 'UNW2'
cGcTechnologyTable+080:
db 'UNW3'
cGcTechnologyTable+090:
db 'RAD1'
cGcTechnologyTable+0A0:
db 'RAD2'
cGcTechnologyTable+0B0:
db 'RAD3'
cGcTechnologyTable+0C0:
db 'TOX1'
cGcTechnologyTable+0D0:
db 'TOX2'
cGcTechnologyTable+0E0:
db 'TOX3'
cGcTechnologyTable+0F0:
db 'COLD1'
cGcTechnologyTable+100:
db 'COLD2'
cGcTechnologyTable+110:
db 'COLD3'
cGcTechnologyTable+120:
db 'HOT1'
cGcTechnologyTable+130:
db 'HOT2'
cGcTechnologyTable+140:
db 'HOT3'
cGcTechnologyTable+150:
db 'SHIELDBOOST1'
cGcTechnologyTable+160:
db 'SHIELDBOOST2'
cGcTechnologyTable+170:
db 'SHIELDBOOST3'
cGcTechnologyTable+180:
db 'STAM1'
cGcTechnologyTable+190:
db 'STAM2'
cGcTechnologyTable+1A0:
db 'STAM3'
cGcTechnologyTable+1B0:
db 'ENERGYBOOST1'
cGcTechnologyTable+1C0:
db 'ENERGYBOOST2'
cGcTechnologyTable+1D0:
db 'ARMOUR1'
cGcTechnologyTable+1E0:
db 'ARMOUR2'
cGcTechnologyTable+1F0:
db 'ARMOUR3'
cGcTechnologyTable+200:
db 'SHIPLAS1'
cGcTechnologyTable+210:
db 'SHIPLASCOOL1'
cGcTechnologyTable+220:
db 'SHIPLASCOOL2'
cGcTechnologyTable+230:
db 'SHIPLASCOOL3'
cGcTechnologyTable+240:
db 'SHIPLDMG1'
cGcTechnologyTable+250:
db 'SHIPLDMG2'
cGcTechnologyTable+260:
db 'SHIPLDMG3'
cGcTechnologyTable+270:
db 'SHIPGUN1'
cGcTechnologyTable+280:
db 'SHIPGUNCOOL1'
cGcTechnologyTable+290:
db 'SHIPGUNCOOL2'
cGcTechnologyTable+2A0:
db 'SHIPGUNCOOL3'
cGcTechnologyTable+2B0:
db 'SHIPGUNRATE1'
cGcTechnologyTable+2C0:
db 'SHIPGUNRATE2'
cGcTechnologyTable+2D0:
db 'SHIPGUNRATE3'
cGcTechnologyTable+2E0:
db 'SHIPGDMG1'
cGcTechnologyTable+2F0:
db 'SHIPGDMG2'
cGcTechnologyTable+300:
db 'SHIPGDMG3'
cGcTechnologyTable+310:
db 'SHIPSHIELD'
cGcTechnologyTable+320:
db 'SHIPSHLDBOOST1'
cGcTechnologyTable+330:
db 'SHIPSHLDBOOST2'
cGcTechnologyTable+340:
db 'SHIPSHLDBOOST3'
cGcTechnologyTable+350:
db 'SHIPJUMP1'
cGcTechnologyTable+360:
db 'SHIPJUMP2'
cGcTechnologyTable+370:
db 'SHIPJUMP3'
cGcTechnologyTable+380:
db 'HYPERDRIVE'
cGcTechnologyTable+390:
db 'HDRIVEBOOST1'
cGcTechnologyTable+3A0:
db 'HDRIVEBOOST2'
cGcTechnologyTable+3B0:
db 'HDRIVEBOOST3'
cGcTechnologyTable+3C0:
db 'LAUNCHER'
cGcTechnologyTable+3D0:
db 'PHOTONIX_CORE'
cGcTechnologyTable+3E0:
db 'LASER'
cGcTechnologyTable+3F0:
db 'RAILGUN1'
cGcTechnologyTable+400:
db 'LASMINERAD1'
cGcTechnologyTable+410:
db 'LASMINERAD2'
cGcTechnologyTable+420:
db 'LASMINERAD3'
cGcTechnologyTable+430:
db 'LASMINESPEED1'
cGcTechnologyTable+440:
db 'LASMINESPEED2'
cGcTechnologyTable+450:
db 'LASMINESPEED3'
cGcTechnologyTable+460:
db 'LASCOOL1'
cGcTechnologyTable+470:
db 'LASCOOL2'
cGcTechnologyTable+480:
db 'LASCOOL3'
cGcTechnologyTable+490:
db 'LASDMG1'
cGcTechnologyTable+4A0:
db 'LASDMG2'
cGcTechnologyTable+4B0:
db 'LASDMG3'
cGcTechnologyTable+4C0:
db 'LASDMG4'
cGcTechnologyTable+4D0:
db 'BOLT'
cGcTechnologyTable+4E0:
db 'BOLTSHOTGUN'
cGcTechnologyTable+4F0:
db 'BOLTSMG'
cGcTechnologyTable+500:
db 'BOLTHOMING'
cGcTechnologyTable+510:
db 'BOLTDMG1'
cGcTechnologyTable+520:
db 'BOLTDMG2'
cGcTechnologyTable+530:
db 'BOLTDMG3'
cGcTechnologyTable+540:
db 'BOLTDMG4'
cGcTechnologyTable+550:
db 'BOLTRATE1'
cGcTechnologyTable+560:
db 'BOLTRATE2'
cGcTechnologyTable+570:
db 'BOLTRATE3'
cGcTechnologyTable+580:
db 'BOLTCLIP1'
cGcTechnologyTable+590:
db 'BOLTCLIP2'
cGcTechnologyTable+5A0:
db 'BOLTCLIP3'
cGcTechnologyTable+5B0:
db 'BOLTREL1'
cGcTechnologyTable+5C0:
db 'BOLTREL2'
cGcTechnologyTable+5D0:
db 'BOLTREL3'
cGcTechnologyTable+5E0:
db 'BOLTSTAB1'
cGcTechnologyTable+5F0:
db 'BOLTSTAB2'
cGcTechnologyTable+600:
db 'BOLTSTAB3'
cGcTechnologyTable+610:
db 'BOLTBOUNCE1'
cGcTechnologyTable+620:
db 'BOLTBOUNCE2'
cGcTechnologyTable+630:
db 'BOLTBOUNCE3'
cGcTechnologyTable+640:
db 'GRENADE'
cGcTechnologyTable+650:
db 'GRENHOMING1'
cGcTechnologyTable+660:
db 'GRENBOUNCE1'
cGcTechnologyTable+670:
db 'GRENBOUNCE2'
cGcTechnologyTable+680:
db 'GRENSPEED1'
cGcTechnologyTable+690:
db 'GRENSPEED2'
cGcTechnologyTable+6A0:
db 'GRENRAD1'
cGcTechnologyTable+6B0:
db 'GRENRAD2'
cGcTechnologyTable+6C0:
db 'GRENDMG1'
cGcTechnologyTable+6D0:
db 'GRENDMG2'
cGcTechnologyTable+6E0:
db 'GRENDMG3'
cGcTechnologyTable+6F0:
db 'SCANBINOC1'
cGcTechnologyTable+700:
db 'SCAN1'
cGcTechnologyTable+710:
db 'SCAN2'
cGcTechnologyTable+720:
db 'SCAN3'
cGcTechnologyTable+730:
db 'BOLT_SM'
cGcTechnologyTable+740:
cGcTechnologyTable_end:

[DISABLE]
technology:
  db 49 8B 9D A8 09 00 00
unregistersymbol(technology)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+4FCFC5

"NMS.exe"+4FCF8E: 4C 8D 44 24 60              -  lea r8,[rsp+60]
"NMS.exe"+4FCF93: 49 8B CC                    -  mov rcx,r12
"NMS.exe"+4FCF96: 83 FF 01                    -  cmp edi,01
"NMS.exe"+4FCF99: 0F 85 43 02 00 00           -  jne NMS.exe+4FD1E2
"NMS.exe"+4FCF9F: 0F 28 05 4A B6 05 01        -  movaps xmm0,[NMS.exe+15585F0]
"NMS.exe"+4FCFA6: 0F 29 44 24 60              -  movaps [rsp+60],xmm0
"NMS.exe"+4FCFAB: 48 8D 15 56 17 E3 00        -  lea rdx,[NMS.exe+132E708]
"NMS.exe"+4FCFB2: E8 E9 04 F6 FF              -  call NMS.exe+45D4A0
"NMS.exe"+4FCFB7: 4C 8B 2D 1A 98 11 01        -  mov r13,[NMS.exe+16167D8]
"NMS.exe"+4FCFBE: 49 8B BD B0 09 00 00        -  mov rdi,[r13+000009B0]
// ---------- INJECTING HERE ----------
"NMS.exe"+4FCFC5: 49 8B 9D A8 09 00 00        -  mov rbx,[r13+000009A8]
// ---------- DONE INJECTING  ----------
"NMS.exe"+4FCFCC: 48 3B DF                    -  cmp rbx,rdi
"NMS.exe"+4FCFCF: 0F 84 1B 03 00 00           -  je NMS.exe+4FD2F0
"NMS.exe"+4FCFD5: 33 F6                       -  xor esi,esi
"NMS.exe"+4FCFD7: 44 8D 66 01                 -  lea r12d,[rsi+01]
"NMS.exe"+4FCFDB: 0F 1F 44 00 00              -  nop [rax+rax+00]
"NMS.exe"+4FCFE0: 4C 8B C3                    -  mov r8,rbx
"NMS.exe"+4FCFE3: 48 8D 55 A0                 -  lea rdx,[rbp-60]
"NMS.exe"+4FCFE7: 49 8D 8D D0 00 00 00        -  lea rcx,[r13+000000D0]
"NMS.exe"+4FCFEE: E8 0D C6 02 00              -  call NMS.exe+529600
"NMS.exe"+4FCFF3: 48 8B 45 A0                 -  mov rax,[rbp-60]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1771</ID>
          <Description>"Unlock All Product Recipes"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(products,NMS.exe,49 8B 9D C0 09 00 00)
alloc(newmem,$1000,products)
alloc(cGcProductTable,1024,products)
label(cGcProductTable_end)
registersymbol(cGcProductTable)
registersymbol(cGcProductTable_end)

label(code)
label(return)

newmem:

code:
  mov rbx,cGcProductTable
  mov rdi,cGcProductTable_end
  jmp return

products:
  jmp code
  nop
  nop
return:
registersymbol(products)

cGcProductTable+000:
db 'ACCESS1'
cGcProductTable+010:
db 'ACCESS2'
cGcProductTable+020:
db 'ACCESS3'
cGcProductTable+030:
db 'ALBUMENPEARL'
cGcProductTable+040:
db 'ALLOY1'
cGcProductTable+050:
db 'ALLOY2'
cGcProductTable+060:
db 'ALLOY3'
cGcProductTable+070:
db 'ALLOY4'
cGcProductTable+080:
db 'ALLOY5'
cGcProductTable+090:
db 'ALLOY6'
cGcProductTable+0A0:
db 'ALLOY7'
cGcProductTable+0B0:
db 'AQUASPHERE'
cGcProductTable+0C0:
db 'CAVECUBE'
cGcProductTable+0D0:
db 'COMMODITY1'
cGcProductTable+0E0:
db 'COMMODITY2'
cGcProductTable+0F0:
db 'COMMODITY3'
cGcProductTable+100:
db 'COMMODITY4'
cGcProductTable+110:
db 'COMMODITY5'
cGcProductTable+120:
db 'COMMODITY6'
cGcProductTable+130:
db 'COMMODITY7'
cGcProductTable+140:
db 'CURIO1'
cGcProductTable+150:
db 'CURIO2'
cGcProductTable+160:
db 'CURIO3'
cGcProductTable+170:
db 'CURIO4'
cGcProductTable+180:
db 'CURIO5'
cGcProductTable+190:
db 'CURIO6'
cGcProductTable+1A0:
db 'CURIO7'
cGcProductTable+1B0:
db 'CURIO8'
cGcProductTable+1C0:
db 'CURIO9'
cGcProductTable+1D0:
db 'DRUGS1'
cGcProductTable+1E0:
db 'GRAVBALL'
cGcProductTable+1F0:
db 'GRENFUEL1'
cGcProductTable+200:
db 'HACK1'
cGcProductTable+210:
db 'HYPERFUEL1'
cGcProductTable+220:
db 'PRODFUEL1'
cGcProductTable+230:
db 'PRODFUEL2'
cGcProductTable+240:
db 'PRODFUEL3'
cGcProductTable+250:
db 'SACVENOM'
cGcProductTable+260:
db 'SENTINEL1'
cGcProductTable+270:
db 'SENTINEL2'
cGcProductTable+280:
db 'SHIELDFUEL1'
cGcProductTable+290:
db 'SHIELDFUEL2'
cGcProductTable+2A0:
db 'SHIELDFUEL3'
cGcProductTable+2B0:
db 'COM1'
cGcProductTable+2C0:
db 'COMRARE1'
cGcProductTable+2D0:
db 'COMUNCOMMON1'
cGcProductTable+2E0:
db 'FUEL1'
cGcProductTable+2F0:
db 'FUELRARE1'
cGcProductTable+300:
db 'FUELUNCOMMON1'
cGcProductTable+310:
db 'TECH1'
cGcProductTable+320:
db 'TECHRARE1'
cGcProductTable+330:
db 'TECHUNCOMMON1'
cGcProductTable+340:
db 'TRADEABLE1'
cGcProductTable+350:
db 'TRADEABLE2'
cGcProductTable+360:
db 'TRADEABLE3'
cGcProductTable+370:
db 'TRADEABLE4'
cGcProductTable+380:
db 'TRADEABLE5'
cGcProductTable+390:
db 'TRADEABLE6'
cGcProductTable+3A0:
db 'TRADEABLE7'
cGcProductTable+3B0:
db 'TRADEABLE8'
cGcProductTable+3C0:
db 'TRADEABLE9'
cGcProductTable+3D0:
db 'TRADEABLE10'
cGcProductTable+3E0:
cGcProductTable_end:

[DISABLE]
products:
  db 49 8B 9D C0 09 00 00
unregistersymbol(products)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+4FD208

"NMS.exe"+4FD1D0: 48 83 C3 10              -  add rbx,10
"NMS.exe"+4FD1D4: 48 3B DF                 -  cmp rbx,rdi
"NMS.exe"+4FD1D7: 0F 85 03 FE FF FF        -  jne NMS.exe+4FCFE0
"NMS.exe"+4FD1DD: E9 01 01 00 00           -  jmp NMS.exe+4FD2E3
"NMS.exe"+4FD1E2: 0F 28 05 F7 B4 05 01     -  movaps xmm0,[NMS.exe+15586E0]
"NMS.exe"+4FD1E9: 0F 29 44 24 60           -  movaps [rsp+60],xmm0
"NMS.exe"+4FD1EE: 48 8D 15 53 15 E3 00     -  lea rdx,[NMS.exe+132E748]
"NMS.exe"+4FD1F5: E8 A6 02 F6 FF           -  call NMS.exe+45D4A0
"NMS.exe"+4FD1FA: 4C 8B 2D D7 95 11 01     -  mov r13,[NMS.exe+16167D8]
"NMS.exe"+4FD201: 49 8B BD C8 09 00 00     -  mov rdi,[r13+000009C8]
// ---------- INJECTING HERE ----------
"NMS.exe"+4FD208: 49 8B 9D C0 09 00 00     -  mov rbx,[r13+000009C0]
// ---------- DONE INJECTING  ----------
"NMS.exe"+4FD20F: 48 3B DF                 -  cmp rbx,rdi
"NMS.exe"+4FD212: 0F 84 D8 00 00 00        -  je NMS.exe+4FD2F0
"NMS.exe"+4FD218: BE 02 00 00 00           -  mov esi,00000002
"NMS.exe"+4FD21D: 45 33 E4                 -  xor r12d,r12d
"NMS.exe"+4FD220: 4C 8B C3                 -  mov r8,rbx
"NMS.exe"+4FD223: 48 8D 55 A0              -  lea rdx,[rbp-60]
"NMS.exe"+4FD227: 49 8D 8D 10 01 00 00     -  lea rcx,[r13+00000110]
"NMS.exe"+4FD22E: E8 CD C3 02 00           -  call NMS.exe+529600
"NMS.exe"+4FD233: 48 8B 45 A0              -  mov rax,[rbp-60]
"NMS.exe"+4FD237: 49 3B 85 10 01 00 00     -  cmp rax,[r13+00000110]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1470</ID>
          <Description>"Always Have Conversation Item"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(conversation,NMS.exe,0F 8C E4 00 00 00 40)
conversation:
  db 90 90 90 90 90 90
registersymbol(conversation)

[DISABLE]
conversation:
  db 0F 8C E4 00 00 00
unregistersymbol(conversation)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+55BFB5

"NMS.exe"+55BF98: 75 0F                 -  jne NMS.exe+55BFA9
"NMS.exe"+55BF9A: 48 3B 50 08           -  cmp rdx,[rax+08]
"NMS.exe"+55BF9E: 75 09                 -  jne NMS.exe+55BFA9
"NMS.exe"+55BFA0: 4C 3B 40 10           -  cmp r8,[rax+10]
"NMS.exe"+55BFA4: 75 03                 -  jne NMS.exe+55BFA9
"NMS.exe"+55BFA6: 03 78 18              -  add edi,[rax+18]
"NMS.exe"+55BFA9: 48 83 C0 30           -  add rax,30
"NMS.exe"+55BFAD: 48 3B C1              -  cmp rax,rcx
"NMS.exe"+55BFB0: 75 E3                 -  jne NMS.exe+55BF95
"NMS.exe"+55BFB2: 41 3B FA              -  cmp edi,r10d
// ---------- INJECTING HERE ----------
"NMS.exe"+55BFB5: 0F 8C E4 00 00 00     -  jl NMS.exe+55C09F
// ---------- DONE INJECTING  ----------
"NMS.exe"+55BFBB: 40 B6 01              -  mov sil,01
"NMS.exe"+55BFBE: 45 84 FF              -  test r15l,r15l
"NMS.exe"+55BFC1: 0F 84 D8 00 00 00     -  je NMS.exe+55C09F
"NMS.exe"+55BFC7: 49 8D 89 E0 03 00 00  -  lea rcx,[r9+000003E0]
"NMS.exe"+55BFCE: 89 5D 87              -  mov [rbp-79],ebx
"NMS.exe"+55BFD1: 89 5D 8B              -  mov [rbp-75],ebx
"NMS.exe"+55BFD4: 4C 8B 4D 87           -  mov r9,[rbp-79]
"NMS.exe"+55BFD8: 4C 8D 45 A7           -  lea r8,[rbp-59]
"NMS.exe"+55BFDC: 48 8D 91 30 04 00 00  -  lea rdx,[rcx+00000430]
"NMS.exe"+55BFE3: E8 68 35 F0 FF        -  call NMS.exe+45F550
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1467</ID>
          <Description>"Unlimited Money"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(MONEY1,NMS.exe,89 83 F4 00 00 00 48 8B 05)
alloc(newmem,$1000,"NMS.exe"+46388C)

label(code)
label(return)

newmem:

code:
  mov eax,#99999999
  mov [rbx+000000F4],eax
  jmp return

MONEY1:
  jmp code
  nop
return:
registersymbol(MONEY1)

[DISABLE]

MONEY1:
  db 89 83 F4 00 00 00

unregistersymbol(MONEY1)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+46388C

"NMS.exe"+463860: 40 53                 -  push rbx
"NMS.exe"+463862: 48 83 EC 40           -  sub rsp,40
"NMS.exe"+463866: 48 8B 05 63 AB 0C 01  -  mov rax,[NMS.exe+152E3D0]
"NMS.exe"+46386D: 48 33 C4              -  xor rax,rsp
"NMS.exe"+463870: 48 89 44 24 30        -  mov [rsp+30],rax
"NMS.exe"+463875: 29 91 F4 00 00 00     -  sub [rcx+000000F4],edx
"NMS.exe"+46387B: 8B 81 F4 00 00 00     -  mov eax,[rcx+000000F4]
"NMS.exe"+463881: 48 8B D9              -  mov rbx,rcx
"NMS.exe"+463884: B9 00 00 00 00        -  mov ecx,00000000
"NMS.exe"+463889: 0F 48 C1              -  cmovs eax,ecx
// ---------- INJECTING HERE ----------
"NMS.exe"+46388C: 89 83 F4 00 00 00     -  mov [rbx+000000F4],eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+463892: 48 8B 05 5F 9D ED 00  -  mov rax,[NMS.exe+133D5F8]
"NMS.exe"+463899: 48 89 44 24 20        -  mov [rsp+20],rax
"NMS.exe"+46389E: 48 8B 05 5B 9D ED 00  -  mov rax,[NMS.exe+133D600]
"NMS.exe"+4638A5: 48 89 44 24 28        -  mov [rsp+28],rax
"NMS.exe"+4638AA: 48 89 4C 24 26        -  mov [rsp+26],rcx
"NMS.exe"+4638AF: 66 89 4C 24 2E        -  mov [rsp+2E],cx
"NMS.exe"+4638B4: 48 8D 4C 24 20        -  lea rcx,[rsp+20]
"NMS.exe"+4638B9: E8 56 75 9D 00        -  call NMS.exe+E3AE14
"NMS.exe"+4638BE: 48 8B 0D 43 7E 1C 01  -  mov rcx,[NMS.exe+162B708]
"NMS.exe"+4638C5: 44 8B 83 F4 00 00 00  -  mov r8d,[rbx+000000F4]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1676</ID>
      <Description>"[Misc]"</Description>
      <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>800000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>211</ID>
          <Description>"Bypass Atlas Locks"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(unlock,NMS.exe,7E 04 B3 01 EB 02 32 DB 4D 85 FF)
unlock:
  db 90 90
registersymbol(unlock)

aobscanmodule(unlock2,NMS.exe,8B C5 48 8B 9C 24 90 00 00 00)
unlock2:
  db 31 C0
registersymbol(unlock2)

[DISABLE]
unlock:
  db 7E 04
unregistersymbol(unlock)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A30A9D

"NMS.exe"+A30A7F: 75 04                    -  jne NMS.exe+A30A85
"NMS.exe"+A30A81: 44 03 40 18              -  add r8d,[rax+18]
"NMS.exe"+A30A85: 48 83 C0 30              -  add rax,30
"NMS.exe"+A30A89: 48 3B C1                 -  cmp rax,rcx
"NMS.exe"+A30A8C: 75 E2                    -  jne NMS.exe+A30A70
"NMS.exe"+A30A8E: 45 03 D8                 -  add r11d,r8d
"NMS.exe"+A30A91: 48 83 C2 04              -  add rdx,04
"NMS.exe"+A30A95: 49 3B D2                 -  cmp rdx,r10
"NMS.exe"+A30A98: 75 99                    -  jne NMS.exe+A30A33
"NMS.exe"+A30A9A: 45 85 DB                 -  test r11d,r11d
// ---------- INJECTING HERE ----------
"NMS.exe"+A30A9D: 7E 04                    -  jle NMS.exe+A30AA3
"NMS.exe"+A30A9F: B3 01                    -  mov bl,01
"NMS.exe"+A30AA1: EB 02                    -  jmp NMS.exe+A30AA5
// ---------- DONE INJECTING  ----------
"NMS.exe"+A30AA3: 32 DB                    -  xor bl,bl
"NMS.exe"+A30AA5: 4D 85 FF                 -  test r15,r15
"NMS.exe"+A30AA8: 74 18                    -  je NMS.exe+A30AC2
"NMS.exe"+A30AAA: 41 83 C8 FF              -  or r8d,-01
"NMS.exe"+A30AAE: 49 8B D7                 -  mov rdx,r15
"NMS.exe"+A30AB1: E8 2A A1 1A 00           -  call NMS.exe+BDABE0
"NMS.exe"+A30AB6: 0F 57 C0                 -  xorps xmm0,xmm0
"NMS.exe"+A30AB9: F3 0F 7F 45 D7           -  movdqu [rbp-29],xmm0
"NMS.exe"+A30ABE: 4C 89 65 E7              -  mov [rbp-19],r12
"NMS.exe"+A30AC2: 0F B6 C3                 -  movzx eax,bl
}

unlock2:
  db 8B C5
unregistersymbol(unlock2)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+45F7A4

"NMS.exe"+45F778: 74 1A                             -  je NMS.exe+45F794
"NMS.exe"+45F77A: 41 83 C8 FF                       -  or r8d,-01
"NMS.exe"+45F77E: 48 8B D7                          -  mov rdx,rdi
"NMS.exe"+45F781: E8 5A B4 77 00                    -  call NMS.exe+BDABE0
"NMS.exe"+45F786: 0F 57 C0                          -  xorps xmm0,xmm0
"NMS.exe"+45F789: F3 0F 7F 44 24 30                 -  movdqu [rsp+30],xmm0
"NMS.exe"+45F78F: 4C 89 6C 24 40                    -  mov [rsp+40],r13
"NMS.exe"+45F794: 49 8B CF                          -  mov rcx,r15
"NMS.exe"+45F797: E8 E4 69 FE FF                    -  call NMS.exe+446180
"NMS.exe"+45F79C: 49 FF 84 24 80 00 00 00           -  inc [r12+00000080]
// ---------- INJECTING HERE ----------
"NMS.exe"+45F7A4: 8B C5                             -  mov eax,ebp
"NMS.exe"+45F7A6: 48 8B 9C 24 90 00 00 00           -  mov rbx,[rsp+00000090]
// ---------- DONE INJECTING  ----------
"NMS.exe"+45F7AE: 48 83 C4 50                       -  add rsp,50
"NMS.exe"+45F7B2: 41 5F                             -  pop r15
"NMS.exe"+45F7B4: 41 5E                             -  pop r14
"NMS.exe"+45F7B6: 41 5D                             -  pop r13
"NMS.exe"+45F7B8: 41 5C                             -  pop r12
"NMS.exe"+45F7BA: 5F                                -  pop rdi
"NMS.exe"+45F7BB: 5E                                -  pop rsi
"NMS.exe"+45F7BC: 5D                                -  pop rbp
"NMS.exe"+45F7BD: C3                                -  ret 
"NMS.exe"+45F7BE: CC                                -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1465</ID>
          <Description>"Universial Translator (Decode Words)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(words,NMS.exe,EB 02 32 C9 84 C9)
words:
  db 90 90 B1 01
registersymbol(words)

[DISABLE]
words:
  db EB 02 32 C9
unregistersymbol(words)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+892E6C

"NMS.exe"+892E4C: 0F 1F 40 00           -  nop [rax+00]
"NMS.exe"+892E50: 4C 39 00              -  cmp [rax],r8
"NMS.exe"+892E53: 75 06                 -  jne NMS.exe+892E5B
"NMS.exe"+892E55: 48 39 50 08           -  cmp [rax+08],rdx
"NMS.exe"+892E59: 74 0B                 -  je NMS.exe+892E66
"NMS.exe"+892E5B: 48 83 C0 18           -  add rax,18
"NMS.exe"+892E5F: 48 3B C1              -  cmp rax,rcx
"NMS.exe"+892E62: 74 0A                 -  je NMS.exe+892E6E
"NMS.exe"+892E64: EB EA                 -  jmp NMS.exe+892E50
"NMS.exe"+892E66: 41 0F B6 4C 04 10     -  movzx ecx,byte ptr [r12+rax+10]
// ---------- INJECTING HERE ----------
"NMS.exe"+892E6C: EB 02                 -  jmp NMS.exe+892E70
"NMS.exe"+892E6E: 32 C9                 -  xor cl,cl
"NMS.exe"+892E70: 84 C9                 -  test cl,cl
// ---------- DONE INJECTING  ----------
"NMS.exe"+892E72: 0F 84 A3 00 00 00     -  je NMS.exe+892F1B
"NMS.exe"+892E78: 48 8D 05 1D 4B AB 00  -  lea rax,[NMS.exe+134799C]
"NMS.exe"+892E7F: 48 89 45 A0           -  mov [rbp-60],rax
"NMS.exe"+892E83: 48 8D 05 0E 4B AB 00  -  lea rax,[NMS.exe+1347998]
"NMS.exe"+892E8A: 48 89 45 A8           -  mov [rbp-58],rax
"NMS.exe"+892E8E: 48 8D 05 2B 4B AB 00  -  lea rax,[NMS.exe+13479C0]
"NMS.exe"+892E95: 48 89 45 B0           -  mov [rbp-50],rax
"NMS.exe"+892E99: 48 8D 1D 5E C7 A9 00  -  lea rbx,[NMS.exe+132F5FE]
"NMS.exe"+892EA0: 48 89 5D B8           -  mov [rbp-48],rbx
"NMS.exe"+892EA4: 48 8D 05 0D 4B AB 00  -  lea rax,[NMS.exe+13479B8]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1596</ID>
          <Description>"Anti Profanity Filter"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(profanity1,ProfanityFilter_x64_v120.dll,F6 41 04 01 74 09)
profanity1:
db 90 90 90 90
registersymbol(profanity1)

aobscanmodule(profanity2,ProfanityFilter_x64_v120.dll,0F 8C * * * * 48 8B 54 24 78)
profanity2:
db 0F 8F
registersymbol(profanity2)

aobscanmodule(profanity3,ProfanityFilter_x64_v120.dll,74 0B 80 7C 24 3B 00)
profanity3:
db 75 0B
registersymbol(profanity3)

[DISABLE]
profanity1:
db F6 41 04 01

profanity2:
db 0F 8C

profanity3:
db 74 0B

unregistersymbol(profanity1)
unregistersymbol(profanity2)
unregistersymbol(profanity3)

{
// ORIGINAL CODE - INJECTION POINT: ProfanityFilter_x64_v120.dll+1220
ProfanityFilter_x64_v120.dll+1208: FF 15 BA3E0000  - call qword ptr [7FF8DB3550C8]
ProfanityFilter_x64_v120.dll+120E: EB E5 - jmp 7FF8DB3511F5
ProfanityFilter_x64_v120.dll+1210: B8 01000090 - mov eax,90000001
ProfanityFilter_x64_v120.dll+1215: 48 83 C4 40 - add rsp,40
ProfanityFilter_x64_v120.dll+1219: 41 5E - pop r14
ProfanityFilter_x64_v120.dll+121B: 5F - pop rdi
ProfanityFilter_x64_v120.dll+121C: 5E - pop rsi
ProfanityFilter_x64_v120.dll+121D: 5D - pop rbp
ProfanityFilter_x64_v120.dll+121E: 5B - pop rbx
ProfanityFilter_x64_v120.dll+121F: C3 - ret
// ---------- INJECTING HERE ----------
ProfanityFilter_x64_v120.dll+1220: F6 41 04 01 - test byte ptr [rcx+04],01
// ---------- DONE INJECTING  ----------
ProfanityFilter_x64_v120.dll+1224: 74 09 - je 7FF8DB35122F
ProfanityFilter_x64_v120.dll+1226: 83 79 38 00 - cmp dword ptr [rcx+38],00
ProfanityFilter_x64_v120.dll+122A: 76 03 - jna 7FF8DB35122F
ProfanityFilter_x64_v120.dll+122C: B0 01 - mov al,01
ProfanityFilter_x64_v120.dll+122E: C3 - ret
ProfanityFilter_x64_v120.dll+122F: 32 C0  - xor al,al
ProfanityFilter_x64_v120.dll+1231: C3 - ret
ProfanityFilter_x64_v120.dll+1232: CC - int 3
ProfanityFilter_x64_v120.dll+1233: CC - int 3
ProfanityFilter_x64_v120.dll+1234: CC - int 3

// ORIGINAL CODE - INJECTION POINT: ProfanityFilter_x64_v120.dll+29EF
ProfanityFilter_x64_v120.dll+29C5: 45 8D 65 01  - lea r12d,[r13+01]
ProfanityFilter_x64_v120.dll+29C9: 8B 44 24 64  - mov eax,[rsp+64]
ProfanityFilter_x64_v120.dll+29CD: 48 8B 54 24 68  - mov rdx,[rsp+68]
ProfanityFilter_x64_v120.dll+29D2: 48 8B BC 24 E0000000  - mov rdi,[rsp+000000E0]
ProfanityFilter_x64_v120.dll+29DA: 8B 74 24 60  - mov esi,[rsp+60]
ProfanityFilter_x64_v120.dll+29DE: FF C0  - inc eax
ProfanityFilter_x64_v120.dll+29E0: 48 FF C2  - inc rdx
ProfanityFilter_x64_v120.dll+29E3: 89 44 24 64  - mov [rsp+64],eax
ProfanityFilter_x64_v120.dll+29E7: 48 89 54 24 68  - mov [rsp+68],rdx
ProfanityFilter_x64_v120.dll+29EC: 3B 47 08  - cmp eax,[rdi+08]
// ---------- INJECTING HERE ----------
ProfanityFilter_x64_v120.dll+29EF: 0F8C 1BF3FFFF - jl 7FF8DB351D10
// ---------- DONE INJECTING  ----------
ProfanityFilter_x64_v120.dll+29F5: 48 8B 54 24 78  - mov rdx,[rsp+78]
ProfanityFilter_x64_v120.dll+29FA: FF 44 24 5C  - inc [rsp+5C]
ProfanityFilter_x64_v120.dll+29FE: 48 FF C2  - inc rdx
ProfanityFilter_x64_v120.dll+2A01: 48 89 54 24 78  - mov [rsp+78],rdx
ProfanityFilter_x64_v120.dll+2A06: 48 3B 94 24 88000000  - cmp rdx,[rsp+00000088]
ProfanityFilter_x64_v120.dll+2A0E: 0F8D 7BF2FFFF - jnl 7FF8DB351C8F
ProfanityFilter_x64_v120.dll+2A14: 4C 8B 84 24 80000000  - mov r8,[rsp+00000080]
ProfanityFilter_x64_v120.dll+2A1C: E9 B1F2FFFF - jmp 7FF8DB351CD2
ProfanityFilter_x64_v120.dll+2A21: CC - int 3
ProfanityFilter_x64_v120.dll+2A22: CC - int 3

// ORIGINAL CODE - INJECTION POINT: ProfanityFilter_x64_v120.dll+24CC
ProfanityFilter_x64_v120.dll+249F: E9 53FEFFFF - jmp 7FF8DB3522F7
ProfanityFilter_x64_v120.dll+24A4: 48 8B 5C 24 48  - mov rbx,[rsp+48]
ProfanityFilter_x64_v120.dll+24A9: 0FB6 BC 24 F0000000  - movzx edi,byte ptr [rsp+000000F0]
ProfanityFilter_x64_v120.dll+24B1: 0FB6 D0  - movzx edx,al
ProfanityFilter_x64_v120.dll+24B4: E9 4BFEFFFF - jmp 7FF8DB352304
ProfanityFilter_x64_v120.dll+24B9: 0FB6 7C 24 32  - movzx edi,byte ptr [rsp+32]
ProfanityFilter_x64_v120.dll+24BE: 44 0FB6 7C 24 33  - movzx r15d,byte ptr [rsp+33]
ProfanityFilter_x64_v120.dll+24C4: 40 84 FF  - test dil,dil
ProfanityFilter_x64_v120.dll+24C7: 74 10 - je 7FF8DB3524D9
ProfanityFilter_x64_v120.dll+24C9: 45 84 FF  - test r15l,r15l
// ---------- INJECTING HERE ----------
ProfanityFilter_x64_v120.dll+24CC: 74 0B - je 7FF8DB3524D9
// ---------- DONE INJECTING  ----------
ProfanityFilter_x64_v120.dll+24CE: 80 7C 24 3B 00 - cmp byte ptr [rsp+3B],00
ProfanityFilter_x64_v120.dll+24D3: 75 04 - jne 7FF8DB3524D9
ProfanityFilter_x64_v120.dll+24D5: B0 01 - mov al,01
ProfanityFilter_x64_v120.dll+24D7: EB 02 - jmp 7FF8DB3524DB
ProfanityFilter_x64_v120.dll+24D9: 32 C0  - xor al,al
ProfanityFilter_x64_v120.dll+24DB: 80 7C 24 35 00 - cmp byte ptr [rsp+35],00
ProfanityFilter_x64_v120.dll+24E0: 75 0E - jne 7FF8DB3524F0
ProfanityFilter_x64_v120.dll+24E2: 80 7C 24 3A 00 - cmp byte ptr [rsp+3A],00
ProfanityFilter_x64_v120.dll+24E7: 74 0F - je 7FF8DB3524F8
ProfanityFilter_x64_v120.dll+24E9: 80 7C 24 38 00 - cmp byte ptr [rsp+38],00
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>203</ID>
          <Description>"One-Hit Kills"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(onehit,NMS.exe,01 86 FC 00 00 00)
alloc(newmem,$1000,onehit)

label(code)
label(return)

newmem:
  mov eax,[rsi+000000F8]
code:
  add [rsi+000000FC],eax
  jmp return

onehit:
  jmp newmem
  nop
return:
registersymbol(onehit)

[DISABLE]
onehit:
  db 01 86 FC 00 00 00
unregistersymbol(onehit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+8C0ADF

"NMS.exe"+8C0AC2: 48 8B 56 28           -  mov rdx,[rsi+28]
"NMS.exe"+8C0AC6: 80 7A 24 00           -  cmp byte ptr [rdx+24],00
"NMS.exe"+8C0ACA: 74 06                 -  je NMS.exe+8C0AD2
"NMS.exe"+8C0ACC: 41 8B 46 78           -  mov eax,[r14+78]
"NMS.exe"+8C0AD0: EB 04                 -  jmp NMS.exe+8C0AD6
"NMS.exe"+8C0AD2: 41 8B 46 74           -  mov eax,[r14+74]
"NMS.exe"+8C0AD6: 3B 42 28              -  cmp eax,[rdx+28]
"NMS.exe"+8C0AD9: 7E 0C                 -  jle NMS.exe+8C0AE7
"NMS.exe"+8C0ADB: 85 C0                 -  test eax,eax
"NMS.exe"+8C0ADD: 7E 08                 -  jle NMS.exe+8C0AE7
// ---------- INJECTING HERE ----------
"NMS.exe"+8C0ADF: 01 86 FC 00 00 00     -  add [rsi+000000FC],eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+8C0AE5: B3 01                 -  mov bl,01
"NMS.exe"+8C0AE7: 85 C9                 -  test ecx,ecx
"NMS.exe"+8C0AE9: 7E 1A                 -  jle NMS.exe+8C0B05
"NMS.exe"+8C0AEB: 2B 8E FC 00 00 00     -  sub ecx,[rsi+000000FC]
"NMS.exe"+8C0AF1: 83 F9 01              -  cmp ecx,01
"NMS.exe"+8C0AF4: 7D 0F                 -  jnl NMS.exe+8C0B05
"NMS.exe"+8C0AF6: 48 8D 8E C0 01 00 00  -  lea rcx,[rsi+000001C0]
"NMS.exe"+8C0AFD: 49 8B D6              -  mov rdx,r14
"NMS.exe"+8C0B00: E8 AB 0F FE FF        -  call NMS.exe+8A1AB0
"NMS.exe"+8C0B05: 84 DB                 -  test bl,bl
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1679</ID>
      <Description>"[Pointers/Scripts]"</Description>
      <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>800000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1668</ID>
          <Description>"Speed Manipulator"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(speed,NMS.exe,F3 0F 58 60 50 F3 0F 58 48 54 F3 0F 58 50 58 )
alloc(newmem,$100,speed)
label(code)
label(return)
label(xAxis)
label(yAxis)
label(zAxis)
newmem:
xAxis:
dq (float)0
yAxis:
dq (float)0
zAxis:
dq (float)0
code:
addss xmm4,[xAxis]
addss xmm1,[yAxis]
addss xmm2,[zAxis]
  jmp return
speed:
  jmp code
  db 90 90 90 90 90 90 90 90 90 90
return:
registersymbol(speed)
registersymbol(xAxis)
registersymbol(yAxis)
registersymbol(zAxis)
[DISABLE]
speed:
  db F3 0F 58 60 50 F3 0F 58 48 54 F3 0F 58 50 58
unregistersymbol(speed)
unregistersymbol(xAxis)
unregistersymbol(yAxis)
unregistersymbol(zAxis)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1669</ID>
              <Description>"X Axis"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>xAxis</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>103</Key>
                  </Keys>
                  <Value>100</Value>
                  <Description>Increase 100</Description>
                  <ID>0</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>97</Key>
                  </Keys>
                  <Value>100</Value>
                  <Description>Decrease 100</Description>
                  <ID>1</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>1671</ID>
              <Description>"Y Axis"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>yAxis</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>104</Key>
                  </Keys>
                  <Value>100</Value>
                  <ID>0</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>98</Key>
                  </Keys>
                  <Value>100</Value>
                  <ID>1</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>1670</ID>
              <Description>"Z Axis"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>zAxis</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>105</Key>
                  </Keys>
                  <Value>100</Value>
                  <ID>0</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>99</Key>
                  </Keys>
                  <Value>100</Value>
                  <ID>1</ID>
                  <ActivateSound/>
                  <DeactivateSound/>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>246</ID>
          <Description>"Inventory Slot Pointers"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(inventory_slots,NMS.exe,8B 0C 8E 0F A3 D1)
alloc(newmem,$1000,inventory_slots)

label(code)
label(return)
label(inventory_slots_ptr)

newmem:
  push rcx
  mov rcx,inventory_slots_ptr
  mov [rcx],rsi
  pop rcx
code:
  mov ecx,[rsi+rcx*4]
  bt ecx,edx
  jmp return

inventory_slots_ptr:
  dq 0

inventory_slots:
  jmp newmem
  nop
return:
registersymbol(inventory_slots)
registersymbol(inventory_slots_ptr)

[DISABLE]
inventory_slots:
  db 8B 0C 8E 0F A3 D1
unregistersymbol(inventory_slots)
unregistersymbol(inventory_slots_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+44636B

"NMS.exe"+44634E: 44 3B D7                    -  cmp r10d,edi
"NMS.exe"+446351: 7D 28                       -  jnl NMS.exe+44637B
"NMS.exe"+446353: 41 8B CB                    -  mov ecx,r11d
"NMS.exe"+446356: 41 8B C3                    -  mov eax,r11d
"NMS.exe"+446359: 83 E1 E0                    -  and ecx,-20
"NMS.exe"+44635C: 2B C1                       -  sub eax,ecx
"NMS.exe"+44635E: 49 8B CB                    -  mov rcx,r11
"NMS.exe"+446361: 48 C1 F9 05                 -  sar rcx,05
"NMS.exe"+446365: 0F B6 D0                    -  movzx edx,al
"NMS.exe"+446368: 49 03 CA                    -  add rcx,r10
// ---------- INJECTING HERE ----------
"NMS.exe"+44636B: 8B 0C 8E                    -  mov ecx,[rsi+rcx*4]
"NMS.exe"+44636E: 0F A3 D1                    -  bt ecx,edx
// ---------- DONE INJECTING  ----------
"NMS.exe"+446371: 0F 92 C1                    -  setb cl
"NMS.exe"+446374: 84 C9                       -  test cl,cl
"NMS.exe"+446376: 74 03                       -  je NMS.exe+44637B
"NMS.exe"+446378: 41 FF C1                    -  inc r9d
"NMS.exe"+44637B: 41 FF C0                    -  inc r8d
"NMS.exe"+44637E: 44 3B C3                    -  cmp r8d,ebx
"NMS.exe"+446381: 7C AD                       -  jl NMS.exe+446330
"NMS.exe"+446383: 4C 8B 74 24 18              -  mov r14,[rsp+18]
"NMS.exe"+446388: 48 8B 6C 24 10              -  mov rbp,[rsp+10]
"NMS.exe"+44638D: 48 8B 5C 24 20              -  mov rbx,[rsp+20]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>247</ID>
              <Description>"Currently Opened Inventory"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>inventory_slots_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>248</ID>
                  <Description>"Row 1 (set to -1 for all slots)"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>249</ID>
                  <Description>"Row 2"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>250</ID>
                  <Description>"Row 3"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>251</ID>
                  <Description>"Row 4"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>252</ID>
                  <Description>"Row 5"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>253</ID>
                  <Description>"Row 6"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+14</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1453</ID>
          <Description>"Set the Next Item Looted"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(next_loot,NMS.exe,48 89 85 10 01 00 00 F3)
alloc(newmem,$1000,next_loot)

label(code)
label(return)
label(next_loot_ptr)

newmem:
  mov r9,next_loot_ptr
  cmp byte ptr [r9],0
  je code
  mov rax,[r9]
  mov [rbp+00000108],rax
  mov rax,[r9+8]
  mov [rbp+00000110],rax
  xor rax,rax
  mov [r9],rax
  mov [r9+8],rax
  jmp return
code:
  mov [rbp+00000110],rax
  jmp return

next_loot_ptr:
  dq 0
  dq 0
  dq 0

next_loot:
  jmp newmem
  nop
  nop
return:
registersymbol(next_loot)
registersymbol(next_loot_ptr)

[DISABLE]
next_loot:
  db 48 89 85 10 01 00 00
unregistersymbol(next_loot)
unregistersymbol(next_loot_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A4195A

"NMS.exe"+A4191A: F3 41 0F 59 C0                 -  mulss xmm0,xmm8
"NMS.exe"+A4191F: F3 0F 11 44 24 60              -  movss [rsp+60],xmm0
"NMS.exe"+A41925: F3 0F 11 8D C0 00 00 00        -  movss [rbp+000000C0],xmm1
"NMS.exe"+A4192D: F3 44 0F 11 95 C4 00 00 00     -  movss [rbp+000000C4],xmm10
"NMS.exe"+A41936: F3 0F 11 85 C8 00 00 00        -  movss [rbp+000000C8],xmm0
"NMS.exe"+A4193E: C7 85 CC 00 00 00 00 00 80 3F  -  mov [rbp+000000CC],3F800000
"NMS.exe"+A41948: 4C 8B 4D 08                    -  mov r9,[rbp+08]
"NMS.exe"+A4194C: 49 8B 01                       -  mov rax,[r9]
"NMS.exe"+A4194F: 48 89 85 08 01 00 00           -  mov [rbp+00000108],rax
"NMS.exe"+A41956: 49 8B 41 08                    -  mov rax,[r9+08]
// ---------- INJECTING HERE ----------
"NMS.exe"+A4195A: 48 89 85 10 01 00 00           -  mov [rbp+00000110],rax
// ---------- DONE INJECTING  ----------
"NMS.exe"+A41961: F3 0F 10 05 DB 2B BE 00        -  movss xmm0,[NMS.exe+1624544]
"NMS.exe"+A41969: F3 0F 11 85 FC 00 00 00        -  movss [rbp+000000FC],xmm0
"NMS.exe"+A41971: F3 41 0F 10 50 20              -  movss xmm2,[r8+20]
"NMS.exe"+A41977: 8B C2                          -  mov eax,edx
"NMS.exe"+A41979: 48 69 D0 99 F8 76 5A           -  imul rdx,rax,5A76F899
"NMS.exe"+A41980: 48 03 D1                       -  add rdx,rcx
"NMS.exe"+A41983: 48 89 55 B0                    -  mov [rbp-50],rdx
"NMS.exe"+A41987: 48 8B C2                       -  mov rax,rdx
"NMS.exe"+A4198A: 48 C1 E8 20                    -  shr rax,20
"NMS.exe"+A4198E: 48 89 45 A0                    -  mov [rbp-60],rax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1454</ID>
              <Description>"Next Item"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">COM1:COM1
COMRARE1:COMRARE1
COMUNCOMMON1:COMUNCOMMON1
FUEL1:FUEL1
FUELRARE1:FUELRARE1
FUELUNCOMMON1:FUELUNCOMMON1
TECH1:TECH1
TECHRARE1:TECHRARE1
TECHUNCOMMON1:TECHUNCOMMON1
TRADEABLE1:TRADEABLE1
TRADEABLE2:TRADEABLE2
TRADEABLE3:TRADEABLE3
TRADEABLE4:TRADEABLE4
TRADEABLE5:TRADEABLE5
TRADEABLE6:TRADEABLE6
TRADEABLE7:TRADEABLE7
TRADEABLE8:TRADEABLE8
TRADEABLE9:TRADEABLE9
TRADEABLE10:TRADEABLE10
ACCESS1:ACCESS1
ACCESS2:ACCESS2
ACCESS3:ACCESS3
ALBUMENPEARL:ALBUMENPEARL
ALLOY1:ALLOY1
ALLOY2:ALLOY2
ALLOY3:ALLOY3
ALLOY4:ALLOY4
ALLOY5:ALLOY5
ALLOY6:ALLOY6
ALLOY7:ALLOY7
AQUASPHERE:AQUASPHERE
CAVECUBE:CAVECUBE
COMMODITY1:COMMODITY1
COMMODITY2:COMMODITY2
COMMODITY3:COMMODITY3
COMMODITY4:COMMODITY4
COMMODITY5:COMMODITY5
COMMODITY6:COMMODITY6
COMMODITY7:COMMODITY7
CURIO1:CURIO1
CURIO2:CURIO2
CURIO3:CURIO3
CURIO4:CURIO4
CURIO5:CURIO5
CURIO6:CURIO6
CURIO7:CURIO7
CURIO8:CURIO8
CURIO9:CURIO9
DRUGS1:DRUGS1
GRAVBALL:GRAVBALL
GRENFUEL1:GRENFUEL1
HACK1:HACK1
HYPERFUEL1:HYPERFUEL1
PRODFUEL1:PRODFUEL1
PRODFUEL2:PRODFUEL2
PRODFUEL3:PRODFUEL3
SACVENOM:SACVENOM
SENTINEL1:SENTINEL1
SENTINEL2:SENTINEL2
SHIELDFUEL1:SHIELDFUEL1
SHIELDFUEL2:SHIELDFUEL2
SHIELDFUEL3:SHIELDFUEL3
</DropDownList>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>next_loot_ptr</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1528</ID>
          <Description>"Mouseover Item Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(mouseover_item,NMS.exe,49 8B 47 50 41 83 3E 01)
alloc(newmem,$1000,mouseover_item)

label(code)
label(return)
label(mouseover_item_ptr)

newmem:
  mov rax,mouseover_item_ptr
  mov [rax],r14
code:
  mov rax,[r15+50]
  cmp dword ptr [r14],01
  jmp return

mouseover_item_ptr:
  dq 0

mouseover_item:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(mouseover_item)
registersymbol(mouseover_item_ptr)

[DISABLE]
mouseover_item:
  db 49 8B 47 50 41 83 3E 01
unregistersymbol(mouseover_item)
unregistersymbol(mouseover_item_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+519942

"NMS.exe"+51991F: E8 FC CB F5 FF        -  call NMS.exe+476520
"NMS.exe"+519924: 4C 8B F8              -  mov r15,rax
"NMS.exe"+519927: 48 85 C0              -  test rax,rax
"NMS.exe"+51992A: 75 0D                 -  jne NMS.exe+519939
"NMS.exe"+51992C: 48 FF C3              -  inc rbx
"NMS.exe"+51992F: 48 3B DF              -  cmp rbx,rdi
"NMS.exe"+519932: 72 DC                 -  jb NMS.exe+519910
"NMS.exe"+519934: E9 72 05 00 00        -  jmp NMS.exe+519EAB
"NMS.exe"+519939: 4D 85 FF              -  test r15,r15
"NMS.exe"+51993C: 0F 84 69 05 00 00     -  je NMS.exe+519EAB
// ---------- INJECTING HERE ----------
"NMS.exe"+519942: 49 8B 47 50           -  mov rax,[r15+50]
"NMS.exe"+519946: 41 83 3E 01           -  cmp dword ptr [r14],01
// ---------- DONE INJECTING  ----------
"NMS.exe"+51994A: 0F 84 57 05 00 00     -  je NMS.exe+519EA7
"NMS.exe"+519950: 44 88 60 28           -  mov [rax+28],r12l
"NMS.exe"+519954: 45 33 C0              -  xor r8d,r8d
"NMS.exe"+519957: 49 8D 56 08           -  lea rdx,[r14+08]
"NMS.exe"+51995B: E8 20 99 37 00        -  call NMS.exe+893280
"NMS.exe"+519960: 0F 28 F0              -  movaps xmm6,xmm0
"NMS.exe"+519963: 41 B0 01              -  mov r8l,01
"NMS.exe"+519966: 49 8D 56 08           -  lea rdx,[r14+08]
"NMS.exe"+51996A: E8 11 99 37 00        -  call NMS.exe+893280
"NMS.exe"+51996F: 66 41 0F 6E 56 18     -  movd xmm2,[r14+18]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>113</ID>
              <Description>"Base Address"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>mouseover_item_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>118</ID>
                  <Description>"Item ID"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">--------Blueprints-------
PROTECT:PROTECT
ENERGY:ENERGY
JET1:JET1
JETBOOST1:JETBOOST1
JETBOOST2:JETBOOST2
JETBOOST3:JETBOOST3
UNW1:UNW1
UNW2:UNW2
UNW3:UNW3
RAD1:RAD1
RAD2:RAD2
RAD3:RAD3
TOX1:TOX1
TOX2:TOX2
TOX3:TOX3
COLD1:COLD1
COLD2:COLD2
COLD3:COLD3
HOT1:HOT1
HOT2:HOT2
HOT3:HOT3
SHIELDBOOST1:SHIELDBOOST1
SHIELDBOOST2:SHIELDBOOST2
SHIELDBOOST3:SHIELDBOOST3
STAM1:STAM1
STAM2:STAM2
STAM3:STAM3
ENERGYBOOST1:ENERGYBOOST1
ENERGYBOOST2:ENERGYBOOST2
ARMOUR1:ARMOUR1
ARMOUR2:ARMOUR2
ARMOUR3:ARMOUR3
SHIPLAS1:SHIPLAS1
SHIPLASCOOL1:SHIPLASCOOL1
SHIPLASCOOL2:SHIPLASCOOL2
SHIPLASCOOL3:SHIPLASCOOL3
SHIPLDMG1:SHIPLDMG1
SHIPLDMG2:SHIPLDMG2
SHIPLDMG3:SHIPLDMG3
SHIPGUN1:SHIPGUN1
SHIPGUNCOOL1:SHIPGUNCOOL1
SHIPGUNCOOL2:SHIPGUNCOOL2
SHIPGUNCOOL3:SHIPGUNCOOL3
SHIPGUNRATE1:SHIPGUNRATE1
SHIPGUNRATE2:SHIPGUNRATE2
SHIPGUNRATE3:SHIPGUNRATE3
SHIPGDMG1:SHIPGDMG1
SHIPGDMG2:SHIPGDMG2
SHIPGDMG3:SHIPGDMG3
SHIPSHIELD:SHIPSHIELD
SHIPSHLDBOOST1:SHIPSHLDBOOST1
SHIPSHLDBOOST2:SHIPSHLDBOOST2
SHIPSHLDBOOST3:SHIPSHLDBOOST3
SHIPJUMP1:SHIPJUMP1
SHIPJUMP2:SHIPJUMP2
SHIPJUMP3:SHIPJUMP3
HYPERDRIVE:HYPERDRIVE
HDRIVEBOOST1:HDRIVEBOOST1
HDRIVEBOOST2:HDRIVEBOOST2
HDRIVEBOOST3:HDRIVEBOOST3
LAUNCHER:LAUNCHER
PHOTONIX_CORE:PHOTONIX_CORE
LASER:LASER
RAILGUN1:RAILGUN1
LASMINERAD1:LASMINERAD1
LASMINERAD2:LASMINERAD2
LASMINERAD3:LASMINERAD3
LASMINESPEED1:LASMINESPEED1
LASMINESPEED2:LASMINESPEED2
LASMINESPEED3:LASMINESPEED3
LASCOOL1:LASCOOL1
LASCOOL2:LASCOOL2
LASCOOL3:LASCOOL3
LASDMG1:LASDMG1
LASDMG2:LASDMG2
LASDMG3:LASDMG3
LASDMG4:LASDMG4
BOLT:BOLT
BOLTSHOTGUN:BOLTSHOTGUN
BOLTSMG:BOLTSMG
BOLTHOMING:BOLTHOMING
BOLTDMG1:BOLTDMG1
BOLTDMG2:BOLTDMG2
BOLTDMG3:BOLTDMG3
BOLTDMG4:BOLTDMG4
BOLTRATE1:BOLTRATE1
BOLTRATE2:BOLTRATE2
BOLTRATE3:BOLTRATE3
BOLTCLIP1:BOLTCLIP1
BOLTCLIP2:BOLTCLIP2
BOLTCLIP3:BOLTCLIP3
BOLTREL1:BOLTREL1
BOLTREL2:BOLTREL2
BOLTREL3:BOLTREL3
BOLTSTAB1:BOLTSTAB1
BOLTSTAB2:BOLTSTAB2
BOLTSTAB3:BOLTSTAB3
BOLTBOUNCE1:BOLTBOUNCE1
BOLTBOUNCE2:BOLTBOUNCE2
BOLTBOUNCE3:BOLTBOUNCE3
GRENADE:GRENADE
GRENHOMING1:GRENHOMING1
GRENBOUNCE1:GRENBOUNCE1
GRENBOUNCE2:GRENBOUNCE2
GRENSPEED1:GRENSPEED1
GRENSPEED2:GRENSPEED2
GRENRAD1:GRENRAD1
GRENRAD2:GRENRAD2
GRENDMG1:GRENDMG1
GRENDMG2:GRENDMG2
GRENDMG3:GRENDMG3
SCANBINOC1:SCANBINOC1
SCAN1:SCAN1
SCAN2:SCAN2
SCAN3:SCAN3
BOLT_SM:BOLT_SM
--------Resources--------
COM1:COM1
COMRARE1:COMRARE1
COMUNCOMMON1:COMUNCOMMON1
FUEL1:FUEL1
FUELRARE1:FUELRARE1
FUELUNCOMMON1:FUELUNCOMMON1
TECH1:TECH1
TECHRARE1:TECHRARE1
TECHUNCOMMON1:TECHUNCOMMON1
TRADEABLE1:TRADEABLE1
TRADEABLE2:TRADEABLE2
TRADEABLE3:TRADEABLE3
TRADEABLE4:TRADEABLE4
TRADEABLE5:TRADEABLE5
TRADEABLE6:TRADEABLE6
TRADEABLE7:TRADEABLE7
TRADEABLE8:TRADEABLE8
TRADEABLE9:TRADEABLE9
TRADEABLE10:TRADEABLE10
ACCESS1:ACCESS1
ACCESS2:ACCESS2
ACCESS3:ACCESS3
ALBUMENPEARL:ALBUMENPEARL
ALLOY1:ALLOY1
ALLOY2:ALLOY2
ALLOY3:ALLOY3
ALLOY4:ALLOY4
ALLOY5:ALLOY5
ALLOY6:ALLOY6
ALLOY7:ALLOY7
AQUASPHERE:AQUASPHERE
CAVECUBE:CAVECUBE
COMMODITY1:COMMODITY1
COMMODITY2:COMMODITY2
COMMODITY3:COMMODITY3
COMMODITY4:COMMODITY4
COMMODITY5:COMMODITY5
COMMODITY6:COMMODITY6
COMMODITY7:COMMODITY7
CURIO1:CURIO1
CURIO2:CURIO2
CURIO3:CURIO3
CURIO4:CURIO4
CURIO5:CURIO5
CURIO6:CURIO6
CURIO7:CURIO7
CURIO8:CURIO8
CURIO9:CURIO9
DRUGS1:DRUGS1
GRAVBALL:GRAVBALL
GRENFUEL1:GRENFUEL1
HACK1:HACK1
HYPERFUEL1:HYPERFUEL1
PRODFUEL1:PRODFUEL1
PRODFUEL2:PRODFUEL2
PRODFUEL3:PRODFUEL3
SACVENOM:SACVENOM
SENTINEL1:SENTINEL1
SENTINEL2:SENTINEL2
SHIELDFUEL1:SHIELDFUEL1
SHIELDFUEL2:SHIELDFUEL2
SHIELDFUEL3:SHIELDFUEL3
</DropDownList>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1595</ID>
                  <Description>"Item AOB"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>21</ByteLength>
                  <Address>+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>209</ID>
                  <Description>"Current Quantity"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+18</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>115</ID>
                  <Description>"Max Quantity"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1529</ID>
                  <Description>"Damaged Status"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Working
1:Damaged
</DropDownList>
                  <VariableType>Float</VariableType>
                  <Address>+20</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>116</ID>
                  <Description>"Inventory Column"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+24</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>117</ID>
                  <Description>"Inventory Row"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+28</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>197</ID>
          <Description>"Mouseover Object Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(mouseover_mine,NMS.exe,8B 91 F8 00 00 00 85)
alloc(newmem,$1000,mouseover_mine)

label(code)
label(return)
label(mouseover_mine_ptr)

newmem:
  mov rdx,mouseover_mine_ptr
  mov [rdx],rcx
code:
  mov edx,[rcx+000000F8]
  jmp return

mouseover_mine_ptr:
  dq 0

mouseover_mine:
  jmp newmem
  nop
return:
registersymbol(mouseover_mine)
registersymbol(mouseover_mine_ptr)

[DISABLE]
mouseover_mine:
  db 8B 91 F8 00 00 00
unregistersymbol(mouseover_mine)
unregistersymbol(mouseover_mine_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+47BD40

"NMS.exe"+47BD20: 49 3B D3                 -  cmp rdx,r11
"NMS.exe"+47BD23: 7C E0                    -  jl NMS.exe+47BD05
"NMS.exe"+47BD25: 33 C0                    -  xor eax,eax
"NMS.exe"+47BD27: 48 8B 5C 24 08           -  mov rbx,[rsp+08]
"NMS.exe"+47BD2C: C3                       -  ret 
"NMS.exe"+47BD2D: 49 63 C1                 -  movsxd  rax,r9d
"NMS.exe"+47BD30: 48 69 C0 D0 00 00 00     -  imul rax,rax,000000D0
"NMS.exe"+47BD37: 48 03 03                 -  add rax,[rbx]
"NMS.exe"+47BD3A: 48 8B 5C 24 08           -  mov rbx,[rsp+08]
"NMS.exe"+47BD3F: C3                       -  ret 
// ---------- INJECTING HERE ----------
"NMS.exe"+47BD40: 8B 91 F8 00 00 00        -  mov edx,[rcx+000000F8]
// ---------- DONE INJECTING  ----------
"NMS.exe"+47BD46: 85 D2                    -  test edx,edx
"NMS.exe"+47BD48: 7E 55                    -  jle NMS.exe+47BD9F
"NMS.exe"+47BD4A: 8B C2                    -  mov eax,edx
"NMS.exe"+47BD4C: 66 0F 6E C2              -  movd xmm0,edx
"NMS.exe"+47BD50: 0F 57 D2                 -  xorps xmm2,xmm2
"NMS.exe"+47BD53: 2B 81 FC 00 00 00        -  sub eax,[rcx+000000FC]
"NMS.exe"+47BD59: B9 00 00 00 00           -  mov ecx,00000000
"NMS.exe"+47BD5E: 0F 48 C1                 -  cmovs eax,ecx
"NMS.exe"+47BD61: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"NMS.exe"+47BD64: 66 0F 6E C8              -  movd xmm1,eax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>198</ID>
              <Description>"Base Address"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>mouseover_mine_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>200</ID>
                  <Description>"Damage Taken"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+fc</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>199</ID>
                  <Description>"Damage Capacity"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+f8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1455</ID>
          <Description>"Player Position Data"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(PlayerPosAOB,NMS.exe,48 8B 81 B0 00 00 00 44 0F 29 5C)
alloc(newmem,$1000,PlayerPosAOB)

label(code)
label(return)
label(PlayerPosData)
registersymbol(PlayerPosData)

newmem:

code:
  mov rax,[rcx+000000B0]
  mov [PlayerPosData],rax
  jmp return
  PlayerPosData:

PlayerPosAOB:
  jmp code
  nop
  nop
return:
registersymbol(PlayerPosAOB)

[DISABLE]
PlayerPosAOB:
  db 48 8B 81 B0 00 00 00
unregistersymbol(PlayerPosAOB)
unregistersymbol(PlayerPosData)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1456</ID>
              <Description>"X"</Description>
              <VariableType>Float</VariableType>
              <Address>PlayerPosData</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1457</ID>
              <Description>"Y"</Description>
              <VariableType>Float</VariableType>
              <Address>PlayerPosData</Address>
              <Offsets>
                <Offset>34</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1458</ID>
              <Description>"Z"</Description>
              <VariableType>Float</VariableType>
              <Address>PlayerPosData</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>143</ID>
          <Description>"Laser Color"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(laser_color,NMS.exe,F3 0F 10 1E 45 33 C0 BA 07) // should be unique
alloc(newmem,$1000,"NMS.exe"+A425F6)

label(code)
label(return)
label(laser_color_ptr)

newmem:
  mov r8,laser_color_ptr
  mov [r8],rsi
code:
  movss xmm3,[rsi]
  xor r8d,r8d
  jmp return

laser_color_ptr:
  dq 0

laser_color:
  jmp newmem
  nop
  nop
return:
registersymbol(laser_color)
registersymbol(laser_color_ptr)

[DISABLE]
laser_color:
  db F3 0F 10 1E 45 33 C0
unregistersymbol(laser_color)
unregistersymbol(laser_color_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A425F6

"NMS.exe"+A425D0: 45 33 C0              -  xor r8d,r8d
"NMS.exe"+A425D3: BA 05 29 00 00        -  mov edx,00002905
"NMS.exe"+A425D8: 48 8B C8              -  mov rcx,rax
"NMS.exe"+A425DB: 41 FF 51 28           -  call qword ptr [r9+28]
"NMS.exe"+A425DF: 8B 57 08              -  mov edx,[rdi+08]
"NMS.exe"+A425E2: 48 8B 0D 07 26 BE 00  -  mov rcx,[NMS.exe+1624BF0]
"NMS.exe"+A425E9: E8 02 06 1E 00        -  call NMS.exe+C22BF0
"NMS.exe"+A425EE: 48 85 C0              -  test rax,rax
"NMS.exe"+A425F1: 74 16                 -  je NMS.exe+A42609
"NMS.exe"+A425F3: 4C 8B 08              -  mov r9,[rax]
// ---------- INJECTING HERE ----------
"NMS.exe"+A425F6: F3 0F 10 1E           -  movss xmm3,[rsi]
"NMS.exe"+A425FA: 45 33 C0              -  xor r8d,r8d
// ---------- DONE INJECTING  ----------
"NMS.exe"+A425FD: BA 07 29 00 00        -  mov edx,00002907
"NMS.exe"+A42602: 48 8B C8              -  mov rcx,rax
"NMS.exe"+A42605: 41 FF 51 28           -  call qword ptr [r9+28]
"NMS.exe"+A42609: 8B 57 08              -  mov edx,[rdi+08]
"NMS.exe"+A4260C: 48 8B 0D DD 25 BE 00  -  mov rcx,[NMS.exe+1624BF0]
"NMS.exe"+A42613: E8 D8 05 1E 00        -  call NMS.exe+C22BF0
"NMS.exe"+A42618: 48 85 C0              -  test rax,rax
"NMS.exe"+A4261B: 74 1A                 -  je NMS.exe+A42637
"NMS.exe"+A4261D: 4C 8B 08              -  mov r9,[rax]
"NMS.exe"+A42620: F3 0F 10 5E 04        -  movss xmm3,[rsi+04]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1672</ID>
              <Description>"Disco Lasers"</Description>
              <LastState/>
              <Color>8000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$lua}
AddressList = getAddressList()
cRed = AddressList.getMemoryRecordByDescription('Red (0.0 to 1.0)')
memoryrecord_freeze(cRed)

cGreen = AddressList.getMemoryRecordByDescription('Green (0.0 to 1.0)')
memoryrecord_freeze(cGreen)

cBlue = AddressList.getMemoryRecordByDescription('Blue (0.0 to 1.0)')
memoryrecord_freeze(cBlue)

ColorTimer = createTimer(getMainForm(), false)
ColorTimer:setInterval(200)
ColorTimer:setOnTimer(function(sender)
memoryrecord_setValue(cRed, 1/math.random(0,255))
memoryrecord_setValue(cGreen, 1/math.random(0,255))
memoryrecord_setValue(cBlue, 1/math.random(0,255))
end)
ColorTimer:setEnabled(true)
{$asm}
[DISABLE]
{$lua}
if ColorTimer ~= nil then ColorTimer.Enabled = false; object_destroy(ColorTimer); ColorTimer = nil end
memoryrecord_unfreeze(cRed)
memoryrecord_unfreeze(cGreen)
memoryrecord_unfreeze(cBlue)
{$asm}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>204</ID>
              <Description>"Base Address"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>laser_color_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>205</ID>
                  <Description>"Red (0.0 to 1.0)"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>206</ID>
                  <Description>"Green (0.0 to 1.0)"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>207</ID>
                  <Description>"Blue (0.0 to 1.0)"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>130</ID>
      <Description>"[DEBUG: Ignore This]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>808080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>129</ID>
          <Description>"Crafting Requirements"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(requirements,NMS.exe,66 41 0F 6E 44 07 14)
registersymbol(requirements)

[DISABLE]
unregistersymbol(requirements)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+515124

"NMS.exe"+515103: 48 83 C0 30                    -  add rax,30
"NMS.exe"+515107: 48 3B C1                       -  cmp rax,rcx
"NMS.exe"+51510A: 75 D4                          -  jne NMS.exe+5150E0
"NMS.exe"+51510C: 41 03 F0                       -  add esi,r8d
"NMS.exe"+51510F: 48 83 C2 04                    -  add rdx,04
"NMS.exe"+515113: 49 3B D7                       -  cmp rdx,r15
"NMS.exe"+515116: 75 8C                          -  jne NMS.exe+5150A4
"NMS.exe"+515118: 89 75 CF                       -  mov [rbp-31],esi
"NMS.exe"+51511B: 48 8B 45 A7                    -  mov rax,[rbp-59]
"NMS.exe"+51511F: 4C 8B 7C 24 28                 -  mov r15,[rsp+28]
// ---------- INJECTING HERE ----------
"NMS.exe"+515124: 66 41 0F 6E 44 07 14           -  movd xmm0,[r15+rax+14]
// ---------- DONE INJECTING  ----------
"NMS.exe"+51512B: 0F 5B C0                       -  cvtdq2ps xmm0,xmm0
"NMS.exe"+51512E: F3 0F 59 C6                    -  mulss xmm0,xmm6
"NMS.exe"+515132: E8 B9 64 CA 00                 -  call NMS.exe+11BB5F0
"NMS.exe"+515137: F3 0F 2C C0                    -  cvttss2si eax,xmm0
"NMS.exe"+51513B: 89 45 D3                       -  mov [rbp-2D],eax
"NMS.exe"+51513E: 41 B0 01                       -  mov r8l,01
"NMS.exe"+515141: 48 8D 55 B7                    -  lea rdx,[rbp-49]
"NMS.exe"+515145: 49 8B CE                       -  mov rcx,r14
"NMS.exe"+515148: E8 E3 D3 F6 FF                 -  call NMS.exe+482530
"NMS.exe"+51514D: 49 8B 46 50                    -  mov rax,[r14+50]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>128</ID>
          <Description>"Ignore Crafting Requirements"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(craft,NMS.exe,48 83 C0 30 48 3B C1 75 ?? 45 03 F8 48 83 C2 04 49 3B D4 75 ?? 66)
alloc(newmem,$1000,craft)

label(code)
label(return)

newmem:
  mov r8d,#999999
code:
  add rax,30
  cmp rax,rcx
  jmp return

craft:
  jmp newmem
  nop
  nop
return:
registersymbol(craft)

aobscanmodule(craft2,NMS.exe,66 41 0F 6E 44 24 14)
craft2:
  db 0F 57 C0 90 90 90 90
registersymbol(craft2)

[DISABLE]
craft:
  db 48 83 C0 30 48 3B C1
unregistersymbol(craft)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+460C53

"NMS.exe"+460C36: 75 1B                    -  jne NMS.exe+460C53
"NMS.exe"+460C38: 4C 3B 58 08              -  cmp r11,[rax+08]
"NMS.exe"+460C3C: 75 15                    -  jne NMS.exe+460C53
"NMS.exe"+460C3E: 4C 3B 50 10              -  cmp r10,[rax+10]
"NMS.exe"+460C42: 75 0F                    -  jne NMS.exe+460C53
"NMS.exe"+460C44: 41 83 F9 01              -  cmp r9d,01
"NMS.exe"+460C48: 75 05                    -  jne NMS.exe+460C4F
"NMS.exe"+460C4A: 41 FF C0                 -  inc r8d
"NMS.exe"+460C4D: EB 04                    -  jmp NMS.exe+460C53
"NMS.exe"+460C4F: 44 03 40 18              -  add r8d,[rax+18]
// ---------- INJECTING HERE ----------
"NMS.exe"+460C53: 48 83 C0 30              -  add rax,30
"NMS.exe"+460C57: 48 3B C1                 -  cmp rax,rcx
// ---------- DONE INJECTING  ----------
"NMS.exe"+460C5A: 75 D4                    -  jne NMS.exe+460C30
"NMS.exe"+460C5C: 45 03 F8                 -  add r15d,r8d
"NMS.exe"+460C5F: 48 83 C2 04              -  add rdx,04
"NMS.exe"+460C63: 49 3B D4                 -  cmp rdx,r12
"NMS.exe"+460C66: 75 88                    -  jne NMS.exe+460BF0
"NMS.exe"+460C68: 66 41 0F 6E 46 14        -  movd xmm0,[r14+14]
"NMS.exe"+460C6E: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"NMS.exe"+460C71: F3 0F 59 05 CB 63 1C 01  -  mulss xmm0,[NMS.exe+1627044]
"NMS.exe"+460C79: E8 72 A9 D5 00           -  call NMS.exe+11BB5F0
"NMS.exe"+460C7E: F3 0F 2C C0              -  cvttss2si eax,xmm0
}

craft2:
  db 66 41 0F 6E 44 24 14
unregistersymbol(craft2)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+4611DA

"NMS.exe"+4611AE: 48 C7 45 23 FF FF FF FF     -  mov [rbp+23],FFFFFFFF
"NMS.exe"+4611B6: 41 0F 10 04 24              -  movups xmm0,[r12]
"NMS.exe"+4611BB: 0F 11 45 07                 -  movups [rbp+07],xmm0
"NMS.exe"+4611BF: 41 8B 44 24 10              -  mov eax,[r12+10]
"NMS.exe"+4611C4: 89 45 FF                    -  mov [rbp-01],eax
"NMS.exe"+4611C7: 4C 8D 45 FF                 -  lea r8,[rbp-01]
"NMS.exe"+4611CB: 48 8D 54 24 40              -  lea rdx,[rsp+40]
"NMS.exe"+4611D0: 49 8B CE                    -  mov rcx,r14
"NMS.exe"+4611D3: E8 48 EE FF FF              -  call NMS.exe+460020
"NMS.exe"+4611D8: 8B D8                       -  mov ebx,eax
// ---------- INJECTING HERE ----------
"NMS.exe"+4611DA: 66 41 0F 6E 44 24 14        -  movd xmm0,[r12+14]
// ---------- DONE INJECTING  ----------
"NMS.exe"+4611E1: 0F 5B C0                    -  cvtdq2ps xmm0,xmm0
"NMS.exe"+4611E4: F3 0F 59 05 58 5E 1C 01     -  mulss xmm0,[NMS.exe+1627044]
"NMS.exe"+4611EC: E8 FF A3 D5 00              -  call NMS.exe+11BB5F0
"NMS.exe"+4611F1: F3 0F 2C F8                 -  cvttss2si edi,xmm0
"NMS.exe"+4611F5: 3B DF                       -  cmp ebx,edi
"NMS.exe"+4611F7: 0F 8C F6 00 00 00           -  jl NMS.exe+4612F3
"NMS.exe"+4611FD: 48 C7 45 F3 FF FF FF FF     -  mov [rbp-0D],FFFFFFFF
"NMS.exe"+461205: 33 C0                       -  xor eax,eax
"NMS.exe"+461207: 89 45 CF                    -  mov [rbp-31],eax
"NMS.exe"+46120A: 48 89 45 D7                 -  mov [rbp-29],rax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>202</ID>
          <Description>"Evil Eye"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(evileye,NMS.exe,2B 87 FC 00 00 00 83 F8 01 0F 8C)
alloc(newmem,$1000,evileye)

label(code)
label(return)

newmem:
  mov [rdi+000000FC],eax
code:
  sub eax,[rdi+000000FC]
  jmp return

evileye:
  jmp newmem
  nop
return:
registersymbol(evileye)

[DISABLE]
evileye:
  db 2B 87 FC 00 00 00
unregistersymbol(evileye)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A236AD

"NMS.exe"+A23687: 48 8B C8                 -  mov rcx,rax
"NMS.exe"+A2368A: E8 B1 88 A5 FF           -  call NMS.exe+47BF40
"NMS.exe"+A2368F: 48 8B CD                 -  mov rcx,rbp
"NMS.exe"+A23692: 48 8B F8                 -  mov rdi,rax
"NMS.exe"+A23695: E8 86 5C A5 FF           -  call NMS.exe+479320
"NMS.exe"+A2369A: 48 85 FF                 -  test rdi,rdi
"NMS.exe"+A2369D: 0F 84 A8 00 00 00        -  je NMS.exe+A2374B
"NMS.exe"+A236A3: 8B 87 F8 00 00 00        -  mov eax,[rdi+000000F8]
"NMS.exe"+A236A9: 85 C0                    -  test eax,eax
"NMS.exe"+A236AB: 7E 0F                    -  jle NMS.exe+A236BC
// ---------- INJECTING HERE ----------
"NMS.exe"+A236AD: 2B 87 FC 00 00 00        -  sub eax,[rdi+000000FC]
// ---------- DONE INJECTING  ----------
"NMS.exe"+A236B3: 83 F8 01                 -  cmp eax,01
"NMS.exe"+A236B6: 0F 8C 8F 00 00 00        -  jl NMS.exe+A2374B
"NMS.exe"+A236BC: 38 9F 70 02 00 00        -  cmp [rdi+00000270],bl
"NMS.exe"+A236C2: 0F 84 83 00 00 00        -  je NMS.exe+A2374B
"NMS.exe"+A236C8: F3 0F 10 05 DC F3 93 00  -  movss xmm0,[NMS.exe+1362AAC]
"NMS.exe"+A236D0: 0F 2F 86 F0 00 00 00     -  comiss xmm0,[rsi+000000F0]
"NMS.exe"+A236D7: 76 72                    -  jna NMS.exe+A2374B
"NMS.exe"+A236D9: 48 8B 47 08              -  mov rax,[rdi+08]
"NMS.exe"+A236DD: 48 85 C0                 -  test rax,rax
"NMS.exe"+A236E0: 74 04                    -  je NMS.exe+A236E6
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"Mouseover Item Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(mouseover_item,NMS.exe,45 8B 44 24 18 4C)
alloc(newmem,$1000,mouseover_item)

label(code)
label(return)
label(mouseover_item_ptr)

newmem:
  mov r8,mouseover_item_ptr
  mov [r8],r12
code:
  mov r8d,[r12+18]
  jmp return

mouseover_item_ptr:
  dq 0

mouseover_item:
  jmp newmem
return:
registersymbol(mouseover_item)
registersymbol(mouseover_item_ptr)

[DISABLE]
mouseover_item:
  db 45 8B 44 24 18
unregistersymbol(mouseover_item)
unregistersymbol(mouseover_item_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+482896

"NMS.exe"+482863: 48 8D 55 C7           -  lea rdx,[rbp-39]
"NMS.exe"+482867: 48 8D 8B 90 00 00 00  -  lea rcx,[rbx+00000090]
"NMS.exe"+48286E: E8 3D B2 0C 00        -  call NMS.exe+54DAB0
"NMS.exe"+482873: 48 8B 45 C7           -  mov rax,[rbp-39]
"NMS.exe"+482877: 48 3B 83 90 00 00 00  -  cmp rax,[rbx+00000090]
"NMS.exe"+48287E: 0F 84 DA 00 00 00     -  je NMS.exe+48295E
"NMS.exe"+482884: 48 8B 78 20           -  mov rdi,[rax+20]
"NMS.exe"+482888: 48 85 FF              -  test rdi,rdi
"NMS.exe"+48288B: 0F 84 CD 00 00 00     -  je NMS.exe+48295E
"NMS.exe"+482891: 45 8B 4C 24 1C        -  mov r9d,[r12+1C]
// ---------- INJECTING HERE ----------
"NMS.exe"+482896: 45 8B 44 24 18        -  mov r8d,[r12+18]
// ---------- DONE INJECTING  ----------
"NMS.exe"+48289B: 4C 89 7C 24 38        -  mov [rsp+38],r15
"NMS.exe"+4828A0: 48 8D 05 99 DA EB 00  -  lea rax,[NMS.exe+1340340]
"NMS.exe"+4828A7: 48 8D 9F A0 01 00 00  -  lea rbx,[rdi+000001A0]
"NMS.exe"+4828AE: 48 8D 57 20           -  lea rdx,[rdi+20]
"NMS.exe"+4828B2: 48 89 44 24 30        -  mov [rsp+30],rax
"NMS.exe"+4828B7: 48 8B CE              -  mov rcx,rsi
"NMS.exe"+4828BA: 44 88 6C 24 28        -  mov [rsp+28],r13l
"NMS.exe"+4828BF: 48 89 5C 24 20        -  mov [rsp+20],rbx
"NMS.exe"+4828C4: E8 47 04 00 00        -  call NMS.exe+482D10
"NMS.exe"+4828C9: 48 8D 57 70           -  lea rdx,[rdi+70]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>223</ID>
          <Description>"Slots"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(slots,NMS.exe,B8 01 00 00 00 * * * * 46 30)
//slots+1:
//  db 02
registersymbol(slots)

[DISABLE]
//slots+1:
//  db 01
unregistersymbol(slots)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+C79310

"NMS.exe"+C792E2: 41 57                          -  push r15
"NMS.exe"+C792E4: 48 81 EC A0 00 00 00           -  sub rsp,000000A0
"NMS.exe"+C792EB: 0F 29 70 D8                    -  movaps [rax-28],xmm6
"NMS.exe"+C792EF: 0F 29 78 C8                    -  movaps [rax-38],xmm7
"NMS.exe"+C792F3: 44 0F 29 40 B8                 -  movaps [rax-48],xmm8
"NMS.exe"+C792F8: 48 8B F2                       -  mov rsi,rdx
"NMS.exe"+C792FB: 4C 8B F1                       -  mov r14,rcx
"NMS.exe"+C792FE: 48 BD AB AA AA AA AA AA AA 2A  -  mov rbp,2AAAAAAAAAAAAAAB
"NMS.exe"+C79308: 44 0F 29 48 A8                 -  movaps [rax-58],xmm9
"NMS.exe"+C7930D: 0F 1F 00                       -  nop [rax]
// ---------- INJECTING HERE ----------
"NMS.exe"+C79310: B8 01 00 00 00                 -  mov eax,00000001
// ---------- DONE INJECTING  ----------
"NMS.exe"+C79315: F0 41 0F C1 46 30              -  xadd [r14+30],eax
"NMS.exe"+C7931B: 49 8B 4E 20                    -  mov rcx,[r14+20]
"NMS.exe"+C7931F: 4C 63 C0                       -  movsxd  r8,eax
"NMS.exe"+C79322: 48 8B C5                       -  mov rax,rbp
"NMS.exe"+C79325: 49 2B 4E 18                    -  sub rcx,[r14+18]
"NMS.exe"+C79329: 48 F7 E9                       -  imul rcx
"NMS.exe"+C7932C: 48 D1 FA                       -  sar rdx,1
"NMS.exe"+C7932F: 48 8B C2                       -  mov rax,rdx
"NMS.exe"+C79332: 48 C1 E8 3F                    -  shr rax,3F
"NMS.exe"+C79336: 48 03 D0                       -  add rdx,rax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>243</ID>
          <Description>"Backpack Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(backpack,NMS.exe,C9 8B 04 8F 0F A3 D0)
alloc(newmem,$1000,backpack)

label(code)
label(return)
label(backpack_ptr)

newmem:
  cmp rcx,2
  jne code
  mov rax,backpack_ptr
  mov [rax],rdi
code:
  mov eax,[rdi+rcx*4]
  bt eax,edx
  jmp return

backpack_ptr:
  dq 0

backpack+01:
  jmp newmem
  nop
return:
registersymbol(backpack)
registersymbol(backpack_ptr)

[DISABLE]
backpack+01:
  db 8B 04 8F 0F A3 D0
unregistersymbol(backpack)
unregistersymbol(backpack_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+44627C

"NMS.exe"+44625F: 44 3B CD                       -  cmp r9d,ebp
"NMS.exe"+446262: 7D 66                          -  jnl NMS.exe+4462CA
"NMS.exe"+446264: 41 8B CA                       -  mov ecx,r10d
"NMS.exe"+446267: 41 8B C2                       -  mov eax,r10d
"NMS.exe"+44626A: 83 E1 E0                       -  and ecx,-20
"NMS.exe"+44626D: 2B C1                          -  sub eax,ecx
"NMS.exe"+44626F: 49 8B CA                       -  mov rcx,r10
"NMS.exe"+446272: 48 C1 F9 05                    -  sar rcx,05
"NMS.exe"+446276: 0F B6 D0                       -  movzx edx,al
"NMS.exe"+446279: 49 03 C9                       -  add rcx,r9
// ---------- INJECTING HERE ----------
"NMS.exe"+44627C: 8B 04 8F                       -  mov eax,[rdi+rcx*4]
"NMS.exe"+44627F: 0F A3 D0                       -  bt eax,edx
// ---------- DONE INJECTING  ----------
"NMS.exe"+446282: 0F 92 C0                       -  setb al
"NMS.exe"+446285: 84 C0                          -  test al,al
"NMS.exe"+446287: 74 41                          -  je NMS.exe+4462CA
"NMS.exe"+446289: 48 8B 47 28                    -  mov rax,[rdi+28]
"NMS.exe"+44628D: 48 8B 4F 30                    -  mov rcx,[rdi+30]
"NMS.exe"+446291: 48 3B C1                       -  cmp rax,rcx
"NMS.exe"+446294: 74 32                          -  je NMS.exe+4462C8
"NMS.exe"+446296: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"NMS.exe"+4462A0: 44 3B 48 28                    -  cmp r9d,[rax+28]
"NMS.exe"+4462A4: 41 0F 94 C0                    -  sete r8l
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>241</ID>
              <Description>"Slots"</Description>
              <VariableType>Byte</VariableType>
              <Address>backpack_ptr</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>244</ID>
              <Description>"Slots"</Description>
              <VariableType>Byte</VariableType>
              <Address>backpack_ptr</Address>
              <Offsets>
                <Offset>9</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1452</ID>
          <Description>"Loot"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(loot,NMS.exe,49 8B 01 48 89 85 08 01 00 00)
alloc(newmem,$1000,loot)

label(code)
label(return)

newmem:
  mov rax,'TECHRARE'
code:
  mov rax,[r9]
  mov [rbp+00000108],rax
  jmp return

loot:
  jmp code
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(loot)

[DISABLE]

loot:
  db 49 8B 01 48 89 85 08 01 00 00

unregistersymbol(loot)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A4194C

"NMS.exe"+A4190B: F3 0F 11 4C 24 64              -  movss [rsp+64],xmm1
"NMS.exe"+A41911: 44 0F 28 D0                    -  movaps xmm10,xmm0
"NMS.exe"+A41915: F3 45 0F 59 D1                 -  mulss xmm10,xmm9
"NMS.exe"+A4191A: F3 41 0F 59 C0                 -  mulss xmm0,xmm8
"NMS.exe"+A4191F: F3 0F 11 44 24 60              -  movss [rsp+60],xmm0
"NMS.exe"+A41925: F3 0F 11 8D C0 00 00 00        -  movss [rbp+000000C0],xmm1
"NMS.exe"+A4192D: F3 44 0F 11 95 C4 00 00 00     -  movss [rbp+000000C4],xmm10
"NMS.exe"+A41936: F3 0F 11 85 C8 00 00 00        -  movss [rbp+000000C8],xmm0
"NMS.exe"+A4193E: C7 85 CC 00 00 00 00 00 80 3F  -  mov [rbp+000000CC],3F800000
"NMS.exe"+A41948: 4C 8B 4D 08                    -  mov r9,[rbp+08]
// ---------- INJECTING HERE ----------
"NMS.exe"+A4194C: 49 8B 01                       -  mov rax,[r9]
"NMS.exe"+A4194F: 48 89 85 08 01 00 00           -  mov [rbp+00000108],rax
// ---------- DONE INJECTING  ----------
"NMS.exe"+A41956: 49 8B 41 08                    -  mov rax,[r9+08]
"NMS.exe"+A4195A: 48 89 85 10 01 00 00           -  mov [rbp+00000110],rax
"NMS.exe"+A41961: F3 0F 10 05 DB 2B BE 00        -  movss xmm0,[NMS.exe+1624544]
"NMS.exe"+A41969: F3 0F 11 85 FC 00 00 00        -  movss [rbp+000000FC],xmm0
"NMS.exe"+A41971: F3 41 0F 10 50 20              -  movss xmm2,[r8+20]
"NMS.exe"+A41977: 8B C2                          -  mov eax,edx
"NMS.exe"+A41979: 48 69 D0 99 F8 76 5A           -  imul rdx,rax,5A76F899
"NMS.exe"+A41980: 48 03 D1                       -  add rdx,rcx
"NMS.exe"+A41983: 48 89 55 B0                    -  mov [rbp-50],rdx
"NMS.exe"+A41987: 48 8B C2                       -  mov rax,rdx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Player Position Data"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(PlayerPosAOB,NMS.exe,48 8B 81 B0 00 00 00 44 0F 29 5C) // should be unique
alloc(newmem,$1000,"NMS.exe"+A06B04)

label(code)
label(return)
label(PlayerPosData)
registersymbol(PlayerPosData)

newmem:

code:
  mov rax,[rcx+000000B0]
  mov [PlayerPosData],rax
  jmp return
  PlayerPosData:

PlayerPosAOB:
  jmp code
  nop
  nop
return:
registersymbol(PlayerPosAOB)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
PlayerPosAOB:
  db 48 8B 81 B0 00 00 00

unregistersymbol(PlayerPosAOB)
unregistersymbol(PlayerPosData)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>16</ID>
              <Description>"X"</Description>
              <VariableType>Float</VariableType>
              <Address>PlayerPosData</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"Y"</Description>
              <VariableType>Float</VariableType>
              <Address>PlayerPosData</Address>
              <Offsets>
                <Offset>34</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>17</ID>
              <Description>"Z"</Description>
              <VariableType>Float</VariableType>
              <Address>PlayerPosData</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>210</ID>
          <Description>"Mouseover Item Pointer"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(mouseover_item,NMS.exe,48 8B 44 24 48 44 8B 38)
alloc(newmem,$1000,mouseover_item)

label(code)
label(return)
label(mouseover_item_ptr)

newmem:

code:
  mov rax,[rsp+48]
  mov r15,mouseover_item_ptr
  mov [r15],rax
  jmp return

mouseover_item_ptr:
  dq 0

mouseover_item:
  jmp code
return:
registersymbol(mouseover_item)
registersymbol(mouseover_item_ptr)

[DISABLE]
mouseover_item:
  db 48 8B 44 24 48
unregistersymbol(mouseover_item)
unregistersymbol(mouseover_item_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+51934B

"NMS.exe"+51931D: 48 8B C8                       -  mov rcx,rax
"NMS.exe"+519320: E8 1B FE FF FF                 -  call NMS.exe+519140
"NMS.exe"+519325: 48 89 44 24 60                 -  mov [rsp+60],rax
"NMS.exe"+51932A: 48 BE 25 23 22 84 E4 9C F2 CB  -  mov rsi,CBF29CE484222325
"NMS.exe"+519334: 45 33 E4                       -  xor r12d,r12d
"NMS.exe"+519337: 48 85 C0                       -  test rax,rax
"NMS.exe"+51933A: 0F 84 9B 04 00 00              -  je NMS.exe+5197DB
"NMS.exe"+519340: 85 FF                          -  test edi,edi
"NMS.exe"+519342: 0F 84 93 04 00 00              -  je NMS.exe+5197DB
"NMS.exe"+519348: 45 8B F4                       -  mov r14d,r12d
// ---------- INJECTING HERE ----------
"NMS.exe"+51934B: 48 8B 44 24 48                 -  mov rax,[rsp+48]
// ---------- DONE INJECTING  ----------
"NMS.exe"+519350: 44 8B 38                       -  mov r15d,[rax]
"NMS.exe"+519353: 4C 8B 2D 7E 44 11 01           -  mov r13,[NMS.exe+162D7D8]
"NMS.exe"+51935A: 41 83 FF 01                    -  cmp r15d,01
"NMS.exe"+51935E: 75 38                          -  jne NMS.exe+519398
"NMS.exe"+519360: 4C 8D 40 08                    -  lea r8,[rax+08]
"NMS.exe"+519364: 48 8D 55 90                    -  lea rdx,[rbp-70]
"NMS.exe"+519368: 49 8D 8D D0 00 00 00           -  lea rcx,[r13+000000D0]
"NMS.exe"+51936F: E8 3C 47 03 00                 -  call NMS.exe+54DAB0
"NMS.exe"+519374: 48 8B 45 90                    -  mov rax,[rbp-70]
"NMS.exe"+519378: 49 3B 85 D0 00 00 00           -  cmp rax,[r13+000000D0]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1532</ID>
          <Description>"warp"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(warp,NMS.exe,F2 0F 11 87 90 02 00 00)
alloc(newmem,$1000,warp)

label(code)
label(return)

newmem:

code:
  movsd [rdi+00000290],xmm0
  mov [rdi+00000290],0
  jmp return

warp:
  jmp code
  nop
  nop
  nop
return:
registersymbol(warp)

[DISABLE]
warp:
  db F2 0F 11 87 90 02 00 00
unregistersymbol(warp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+9E4CF0

"NMS.exe"+9E4CB4: 0F 10 4A F0              -  movups xmm1,[rdx-10]
"NMS.exe"+9E4CB8: 0F 11 49 F0              -  movups [rcx-10],xmm1
"NMS.exe"+9E4CBC: E8 1F 01 00 00           -  call NMS.exe+9E4DE0
"NMS.exe"+9E4CC1: 48 8D 96 10 02 00 00     -  lea rdx,[rsi+00000210]
"NMS.exe"+9E4CC8: 48 8D 8F 10 02 00 00     -  lea rcx,[rdi+00000210]
"NMS.exe"+9E4CCF: 41 B8 7F 00 00 00        -  mov r8d,0000007F
"NMS.exe"+9E4CD5: E8 B6 61 45 00           -  call NMS.exe+E3AE90
"NMS.exe"+9E4CDA: C6 87 8E 02 00 00 00     -  mov byte ptr [rdi+0000028E],00
"NMS.exe"+9E4CE1: 48 8D 8E A0 02 00 00     -  lea rcx,[rsi+000002A0]
"NMS.exe"+9E4CE8: F2 0F 10 86 90 02 00 00  -  movsd xmm0,[rsi+00000290]
// ---------- INJECTING HERE ----------
"NMS.exe"+9E4CF0: F2 0F 11 87 90 02 00 00  -  movsd [rdi+00000290],xmm0
// ---------- DONE INJECTING  ----------
"NMS.exe"+9E4CF8: 8B 86 98 02 00 00        -  mov eax,[rsi+00000298]
"NMS.exe"+9E4CFE: BA 03 00 00 00           -  mov edx,00000003
"NMS.exe"+9E4D03: 89 87 98 02 00 00        -  mov [rdi+00000298],eax
"NMS.exe"+9E4D09: 8B 86 9C 02 00 00        -  mov eax,[rsi+0000029C]
"NMS.exe"+9E4D0F: 89 87 9C 02 00 00        -  mov [rdi+0000029C],eax
"NMS.exe"+9E4D15: 48 8D 87 A0 02 00 00     -  lea rax,[rdi+000002A0]
"NMS.exe"+9E4D1C: 0F 1F 40 00              -  nop [rax+00]
"NMS.exe"+9E4D20: 0F 10 01                 -  movups xmm0,[rcx]
"NMS.exe"+9E4D23: 48 8D 80 80 00 00 00     -  lea rax,[rax+00000080]
"NMS.exe"+9E4D2A: 48 8D 89 80 00 00 00     -  lea rcx,[rcx+00000080]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1541</ID>
          <Description>"Name Lookup"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(lookup,NMS.exe,4D 8B 08 48 8B F9)
alloc(newmem,$1000,lookup)

label(code)
label(return)
label(myvar)

newmem:
  mov r9,myvar
  cmp [r9],r8
  jne code
  nop
code:
  mov r9,[r8]
  mov rdi,rcx
  jmp return

myvar:
  dq 19DCA7C57B8

lookup:
  jmp newmem
  nop
return:
registersymbol(lookup)

[DISABLE]
lookup:
  db 4D 8B 08 48 8B F9
unregistersymbol(lookup)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+54DABE

"NMS.exe"+54DAA5: E8 F6 84 8C 00                 -  call NMS.exe+E15FA0
"NMS.exe"+54DAAA: CC                             -  int 3 
"NMS.exe"+54DAAB: CC                             -  int 3 
"NMS.exe"+54DAAC: CC                             -  int 3 
"NMS.exe"+54DAAD: CC                             -  int 3 
"NMS.exe"+54DAAE: CC                             -  int 3 
"NMS.exe"+54DAAF: CC                             -  int 3 
"NMS.exe"+54DAB0: 48 89 5C 24 10                 -  mov [rsp+10],rbx
"NMS.exe"+54DAB5: 48 89 7C 24 18                 -  mov [rsp+18],rdi
"NMS.exe"+54DABA: 4D 8B 50 08                    -  mov r10,[r8+08]
// ---------- INJECTING HERE ----------
"NMS.exe"+54DABE: 4D 8B 08                       -  mov r9,[r8]
"NMS.exe"+54DAC1: 48 8B F9                       -  mov rdi,rcx
// ---------- DONE INJECTING  ----------
"NMS.exe"+54DAC4: 49 BB 69 2D 38 EB 08 EA DF 9D  -  mov r11,9DDFEA08EB382D69
"NMS.exe"+54DACE: 49 8B C2                       -  mov rax,r10
"NMS.exe"+54DAD1: 48 8B DA                       -  mov rbx,rdx
"NMS.exe"+54DAD4: 48 8B 51 28                    -  mov rdx,[rcx+28]
"NMS.exe"+54DAD8: 49 33 C1                       -  xor rax,r9
"NMS.exe"+54DADB: 49 0F AF C3                    -  imul rax,r11
"NMS.exe"+54DADF: 4C 8B C0                       -  mov r8,rax
"NMS.exe"+54DAE2: 49 C1 E8 2F                    -  shr r8,2F
"NMS.exe"+54DAE6: 4C 33 C0                       -  xor r8,rax
"NMS.exe"+54DAE9: 4D 33 C1                       -  xor r8,r9
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1539</ID>
          <Description>"Warp Distance Display"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(warp_anywhere,NMS.exe,89 44 24 30 0F BF 47 0C)
alloc(newmem,$1000,warp_anywhere)

label(code)
label(return)
label(myvar)

newmem:
  movss xmm2,[myvar]
code:
  mov [rsp+30],eax
  movsx eax,word ptr [rdi+0C]
  jmp return

myvar:
  dd (float)1.0

warp_anywhere:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(warp_anywhere)

[DISABLE]
warp_anywhere:
  db 89 44 24 30 0F BF 47 0C
unregistersymbol(warp_anywhere)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+9D3B2B

"NMS.exe"+9D3AEA: C7 83 AC 0F 00 00 00 00 80 3F  -  mov [rbx+00000FAC],3F800000
"NMS.exe"+9D3AF4: 8B 47 30                       -  mov eax,[rdi+30]
"NMS.exe"+9D3AF7: F3 0F 10 4F 38                 -  movss xmm1,[rdi+38]
"NMS.exe"+9D3AFC: F3 0F 10 47 34                 -  movss xmm0,[rdi+34]
"NMS.exe"+9D3B01: 89 83 B0 0F 00 00              -  mov [rbx+00000FB0],eax
"NMS.exe"+9D3B07: C7 83 BC 0F 00 00 00 00 80 3F  -  mov [rbx+00000FBC],3F800000
"NMS.exe"+9D3B11: F3 0F 11 83 B4 0F 00 00        -  movss [rbx+00000FB4],xmm0
"NMS.exe"+9D3B19: F3 0F 11 8B B8 0F 00 00        -  movss [rbx+00000FB8],xmm1
"NMS.exe"+9D3B21: 0F BF 47 08                    -  movsx eax,word ptr [rdi+08]
"NMS.exe"+9D3B25: 41 B9 01 F8 FF FF              -  mov r9d,FFFFF801
// ---------- INJECTING HERE ----------
"NMS.exe"+9D3B2B: 89 44 24 30                    -  mov [rsp+30],eax
"NMS.exe"+9D3B2F: 0F BF 47 0C                    -  movsx eax,word ptr [rdi+0C]
// ---------- DONE INJECTING  ----------
"NMS.exe"+9D3B33: 0F B7 54 24 30                 -  movzx edx,word ptr [rsp+30]
"NMS.exe"+9D3B38: 89 44 24 34                    -  mov [rsp+34],eax
"NMS.exe"+9D3B3C: 0F BF 47 0A                    -  movsx eax,word ptr [rdi+0A]
"NMS.exe"+9D3B40: 48 8B 4C 24 30                 -  mov rcx,[rsp+30]
"NMS.exe"+9D3B45: 89 44 24 38                    -  mov [rsp+38],eax
"NMS.exe"+9D3B49: 0F B7 47 10                    -  movzx eax,word ptr [rdi+10]
"NMS.exe"+9D3B4D: 48 C1 E9 20                    -  shr rcx,20
"NMS.exe"+9D3B51: 89 44 24 3C                    -  mov [rsp+3C],eax
"NMS.exe"+9D3B55: B8 FF 07 00 00                 -  mov eax,000007FF
"NMS.exe"+9D3B5A: 66 41 3B D1                    -  cmp dx,r9w
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1538</ID>
          <Description>"Warp Distance Display"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(warp_distance,NMS.exe,0F 28 D0 EB 7A)
warp_distance:
  db 0F 57 D2
registersymbol(warp_distance)

[DISABLE]
warp_distance:
  db 0F 28 D0
unregistersymbol(warp_distance)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+9D3AA2

"NMS.exe"+9D3A79: 0F 28 D6                       -  movaps xmm2,xmm6
"NMS.exe"+9D3A7C: 66 3B C1                       -  cmp ax,cx
"NMS.exe"+9D3A7F: 77 26                          -  ja NMS.exe+9D3AA7
"NMS.exe"+9D3A81: 66 39 B3 92 0F 00 00           -  cmp [rbx+00000F92],si
"NMS.exe"+9D3A88: 77 1D                          -  ja NMS.exe+9D3AA7
"NMS.exe"+9D3A8A: 44 38 A3 8E 0F 00 00           -  cmp [rbx+00000F8E],r12l
"NMS.exe"+9D3A91: 74 14                          -  je NMS.exe+9D3AA7
"NMS.exe"+9D3A93: 48 8D 8B 80 0F 00 00           -  lea rcx,[rbx+00000F80]
"NMS.exe"+9D3A9A: 48 8B D7                       -  mov rdx,rdi
"NMS.exe"+9D3A9D: E8 9E 74 01 00                 -  call NMS.exe+9EAF40
// ---------- INJECTING HERE ----------
"NMS.exe"+9D3AA2: 0F 28 D0                       -  movaps xmm2,xmm0
"NMS.exe"+9D3AA5: EB 7A                          -  jmp NMS.exe+9D3B21
// ---------- DONE INJECTING  ----------
"NMS.exe"+9D3AA7: 48 8B 07                       -  mov rax,[rdi]
"NMS.exe"+9D3AAA: 48 89 83 80 0F 00 00           -  mov [rbx+00000F80],rax
"NMS.exe"+9D3AB1: F2 0F 10 47 08                 -  movsd xmm0,[rdi+08]
"NMS.exe"+9D3AB6: F2 0F 11 83 88 0F 00 00        -  movsd [rbx+00000F88],xmm0
"NMS.exe"+9D3ABE: 8B 47 10                       -  mov eax,[rdi+10]
"NMS.exe"+9D3AC1: 89 83 90 0F 00 00              -  mov [rbx+00000F90],eax
"NMS.exe"+9D3AC7: 8B 47 20                       -  mov eax,[rdi+20]
"NMS.exe"+9D3ACA: F3 0F 10 4F 28                 -  movss xmm1,[rdi+28]
"NMS.exe"+9D3ACF: F3 0F 10 47 24                 -  movss xmm0,[rdi+24]
"NMS.exe"+9D3AD4: 89 83 A0 0F 00 00              -  mov [rbx+00000FA0],eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1536</ID>
          <Description>"Calculate Warp Distance"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(calc_distance,NMS.exe,48 8D 8B 80 0F 00 00 48 8B D7 E8 9E) // should be unique
alloc(newmem,$1000,"NMS.exe"+9D3A93)

label(code)
label(return)

newmem:

code:
  lea rcx,[rbx+00000F80]
  jmp return

calc_distance:
  jmp code
  nop
  nop
return:
registersymbol(calc_distance)

[DISABLE]

calc_distance:
  db 48 8D 8B 80 0F 00 00

unregistersymbol(calc_distance)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+9D3A93

"NMS.exe"+9D3A6E: 0F 57 F6                       -  xorps xmm6,xmm6
"NMS.exe"+9D3A71: B9 FE 0F 00 00                 -  mov ecx,00000FFE
"NMS.exe"+9D3A76: 66 FF C8                       -  dec ax
"NMS.exe"+9D3A79: 0F 28 D6                       -  movaps xmm2,xmm6
"NMS.exe"+9D3A7C: 66 3B C1                       -  cmp ax,cx
"NMS.exe"+9D3A7F: 77 26                          -  ja NMS.exe+9D3AA7
"NMS.exe"+9D3A81: 66 39 B3 92 0F 00 00           -  cmp [rbx+00000F92],si
"NMS.exe"+9D3A88: 77 1D                          -  ja NMS.exe+9D3AA7
"NMS.exe"+9D3A8A: 44 38 A3 8E 0F 00 00           -  cmp [rbx+00000F8E],r12l
"NMS.exe"+9D3A91: 74 14                          -  je NMS.exe+9D3AA7
// ---------- INJECTING HERE ----------
"NMS.exe"+9D3A93: 48 8D 8B 80 0F 00 00           -  lea rcx,[rbx+00000F80]
// ---------- DONE INJECTING  ----------
"NMS.exe"+9D3A9A: 48 8B D7                       -  mov rdx,rdi
"NMS.exe"+9D3A9D: E8 9E 74 01 00                 -  call NMS.exe+9EAF40
"NMS.exe"+9D3AA2: 0F 28 D0                       -  movaps xmm2,xmm0
"NMS.exe"+9D3AA5: EB 7A                          -  jmp NMS.exe+9D3B21
"NMS.exe"+9D3AA7: 48 8B 07                       -  mov rax,[rdi]
"NMS.exe"+9D3AAA: 48 89 83 80 0F 00 00           -  mov [rbx+00000F80],rax
"NMS.exe"+9D3AB1: F2 0F 10 47 08                 -  movsd xmm0,[rdi+08]
"NMS.exe"+9D3AB6: F2 0F 11 83 88 0F 00 00        -  movsd [rbx+00000F88],xmm0
"NMS.exe"+9D3ABE: 8B 47 10                       -  mov eax,[rdi+10]
"NMS.exe"+9D3AC1: 89 83 90 0F 00 00              -  mov [rbx+00000F90],eax
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>craft</Name>
      <Address>7FF6D5750C53</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>craft2</Name>
      <Address>7FF6D57511DA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>build_all</Name>
      <Address>7FF6116A49B9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PlayerPosData</Name>
      <Address>7FF61118001C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PlayerPosAOB</Name>
      <Address>7FF611BB6B04</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>onehit</Name>
      <Address>7FF611A70ADF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>warp_distance</Name>
      <Address>7FF61161520F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SpeedAoB</Name>
      <Address>7FF745E9A5D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>maxspeed</Name>
      <Address>7FF745D50000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>object</Name>
      <Address>7FF7461B7580</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hilightObject</Name>
      <Address>7FF745D50021</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>conversation</Name>
      <Address> 7FF60DAF7B05</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>unlock</Name>
      <Address> 7FF60DFCCA8D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>unlock2</Name>
      <Address> 7FF60D9FB114</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting1</Name>
      <Address> 7FF60D9FC5D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting2</Name>
      <Address> 7FF60D9FCB4A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting3</Name>
      <Address> 7FF60DAB0924</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting4</Name>
      <Address> 7FF60D9FBEBC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting5</Name>
      <Address> 7FF60D9FDA3C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>overheat</Name>
      <Address> 7FF60DFC3616</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>shipheat</Name>
      <Address> 7FF60E09929E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>words</Name>
      <Address> 7FF60DE2EB4C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>reload</Name>
      <Address> 7FF60DFC8165</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>grenades</Name>
      <Address> 7FF60DFC7DE9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>environment</Name>
      <Address> 7FF60DFC9A9B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address> 7FF60DFA3F09</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>warpdrive</Name>
      <Address> 7FF60DF7345A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory</Name>
      <Address> 7FF60D9FCF14</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sell</Name>
      <Address> 7FF60D9FB0D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jetpack</Name>
      <Address> 7FF60DFA6790</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lifesupport</Name>
      <Address> 7FF60DFA16DE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>laser</Name>
      <Address> 7FF60DFC6175</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>shipammo</Name>
      <Address> 7FF60E09A0A1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pulse</Name>
      <Address> 7FF60E096382</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>shipscanner</Name>
      <Address> 7FF60DF3D576</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fuel</Name>
      <Address> 7FF60E06A62D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sprint</Name>
      <Address> 7FF60DFA6EFA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cGcTechnologyTable_end</Name>
      <Address>7FF60D5A1740</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cGcProductTable_end</Name>
      <Address>7FF60D5B13E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>products</Name>
      <Address> 7FF60DABD208</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <LuaScript>controlMainForm = getMainForm()
AddressList = getAddressList()

control_setCaption(controlMainForm,"No Man's Sky Cheat Compilation - Cheat Engine " .. getCEVersion())
if getCEVersion == nil or getCEVersion() &lt; 6.5 then
  messageDialog('It is recommended to use at least Cheat Engine 6.5! (Your Version: '..getCEVersion()..')', mtError, mbOK)
end

errorOnLookupFailure(false)
setGlobalDelayBetweenHotkeyActivation(200)
DefaultProccessName = "NMS.exe"
strings_add(getAutoAttachList(), DefaultProccessName)

--------------------------------------------------------------------------------

function unfreezeAllMemoryRecords()
  local count = addresslist_getCount(AddressList)
  for i=0,count-1 do
    local record = addresslist_getMemoryRecord(AddressList, i)
    memoryrecord_unfreeze(record)
  end
end

function getProcessNameFromProcessID(iProcessID)
  if iProcessID &lt; 1 then return 0 end
  local plist = createStringlist()
  getProcesslist(plist)
  for i=1, strings_getCount(plist)-1 do
    local process = strings_getString(plist, i)
    local offset = string.find(process,'-')
    local pid = tonumber('0x'..string.sub(process,1,offset-1))
    local pname = string.sub(process,offset+1)
    if pid == iProcessID then return pname end
  end
  return 0
end

function checkOpenedProcess(process)
  if process == nil or process == 0 or process == false then
    process = getOpenedProcessID()
    if process ~= 0 and getProcessIDFromProcessName(DefaultProccessName) == process then
      process = DefaultProccessName
    end
  end
  if type(process) == "number" then process = getProcessNameFromProcessID(process) end
  if process ~= nil and process ~= 0 then
    if readInteger(process) then return true end
  end
  return false
end

function checkProccessAttached()
  if DefaultProccessName == nil then return end
  if checkOpenedProcess() == false then openProcess(DefaultProccessName) end
end

--------------------------------------------------------------------------------

function cycleFullCompact(sender,force)
  local state = not(compactmenuitem.Caption == 'Compact View Mode')
  if force~=nil then state = not force end
  compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'
  getMainForm().Splitter1.Visible = state
  getMainForm().Panel4.Visible    = state
  getMainForm().Panel5.Visible    = state
end

function addCompactMenu()
  if compactmenualreadyexists then return end
  local parent = getMainForm().Menu.Items
  compactmenuitem = createMenuItem(parent); parent.add(compactmenuitem)
  compactmenuitem.Caption = 'Compact View Mode'
  compactmenuitem.OnClick = cycleFullCompact
  compactmenualreadyexists = 'yes'
end
addCompactMenu()
cycleFullCompact(nil, true)

--------------------------------------------------------------------------------

if not LastOpenedProcessID then LastOpenedProcessID = 0 end
function onOpenProcess(processid)
  if getOpenedProcessID() ~= LastOpenedProcessID then
    LastOpenedProcessID = getOpenedProcessID()
    beep()
  end
  unfreezeAllMemoryRecords()
end

if AttachTimer ~= nil then AttachTimer.Enabled = false; object_destroy(AttachTimer); AttachTimer = nil end
AttachTimer = createTimer(getMainForm(), false)
AttachTimer:setOnTimer(checkProccessAttached)
AttachTimer:setInterval(10000)
AttachTimer:setEnabled(true)
</LuaScript>
</CheatTable>
