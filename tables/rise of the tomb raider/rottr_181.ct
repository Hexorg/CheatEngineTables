<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="21">
  <CheatEntries>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Resources (Max)"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Hardwood"</Description>
          <LastState Value="30" RealAddress="D1B846AC"/>
          <VariableType>4 Bytes</VariableType>
          <Address>"ROTTR.exe"+0105AA00</Address>
          <Offsets>
            <Offset>C</Offset>
            <Offset>0</Offset>
            <Offset>108</Offset>
            <Offset>300</Offset>
            <Offset>68</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Auto Assemble script"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(RESCRAFT,ROTTR.exe,66 01 43 0C 48 83 C7 08) // should be unique
alloc(newmem,$1000,"ROTTR.exe"+37F7B4E)

label(code)
label(return)

newmem:

code:
  add [rbx+0C],ax
  add [rbx+0C],ax
  add rdi,08
  jmp return

RESCRAFT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(RESCRAFT)

[DISABLE]

INJECT:
  db 66 01 43 0C 48 83 C7 08

unregistersymbol(RESCRAFT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "ROTTR.exe"+37F7B4E

"ROTTR.exe"+37F7B24: 8B 17                    -  mov edx,[rdi]
"ROTTR.exe"+37F7B26: 48 8D 4C 24 68           -  lea rcx,[rsp+68]
"ROTTR.exe"+37F7B2B: E8 00 86 B8 FF           -  call ROTTR.exe+3380130
"ROTTR.exe"+37F7B30: 48 8D 54 24 68           -  lea rdx,[rsp+68]
"ROTTR.exe"+37F7B35: 49 8D 8E 18 03 00 00     -  lea rcx,[r14+00000318]
"ROTTR.exe"+37F7B3C: E8 9F 99 FA FF           -  call ROTTR.exe+37A14E0
"ROTTR.exe"+37F7B41: 0F B7 4F 04              -  movzx ecx,word ptr [rdi+04]
"ROTTR.exe"+37F7B45: 66 89 08                 -  mov [rax],cx
"ROTTR.exe"+37F7B48: EB 08                    -  jmp ROTTR.exe+37F7B52
"ROTTR.exe"+37F7B4A: 0F B7 47 04              -  movzx eax,word ptr [rdi+04]
// ---------- INJECTING HERE ----------
"ROTTR.exe"+37F7B4E: 66 01 43 0C              -  add [rbx+0C],ax
"ROTTR.exe"+37F7B52: 48 83 C7 08              -  add rdi,08
// ---------- DONE INJECTING  ----------
"ROTTR.exe"+37F7B56: 48 FF CD                 -  dec rbp
"ROTTR.exe"+37F7B59: 0F 85 AD FE FF FF        -  jne ROTTR.exe+37F7A0C
"ROTTR.exe"+37F7B5F: 4C 8B 7C 24 20           -  mov r15,[rsp+20]
"ROTTR.exe"+37F7B64: 4C 8B 64 24 28           -  mov r12,[rsp+28]
"ROTTR.exe"+37F7B69: 48 8B 74 24 30           -  mov rsi,[rsp+30]
"ROTTR.exe"+37F7B6E: 48 8B 6C 24 60           -  mov rbp,[rsp+60]
"ROTTR.exe"+37F7B73: 48 8B 5C 24 50           -  mov rbx,[rsp+50]
"ROTTR.exe"+37F7B78: 48 83 C4 38              -  add rsp,38
"ROTTR.exe"+37F7B7C: 41 5E                    -  pop r14
"ROTTR.exe"+37F7B7E: 5F                       -  pop rdi
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
