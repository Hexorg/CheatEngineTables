<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>12</ID>
      <Description>"[X] &lt;==  Act of War Direct Action v1.00 Script v2.0"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Act of War Direct Action
 Game Version  : 1.00
 Game Sponsor  : Schviedler
 Proces Name   : ACTOFWAR.exe
 Script Version: 2.0
 CE Version    : 6.3
 Release date  : 25-Dec-2013
 Author        : Recifense
 History:
 25-Dec-13: First Release
 Features:
 - God Mode
 - Fast Construction/Production
 - Minimum Resources
   - Petro
   - Power
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"ACTOFWAR.exe")
define(FHPR,ACTOFWAR.exe+007dcebe)
define(GDMD,ACTOFWAR.exe+0041c1e9)
define(MPRE,ACTOFWAR.exe+0061e103)

define(pCOM,ACTOFWAR.EXE+008BF35C)
define(pMPR,ACTOFWAR.EXE+000cca54)

//=========================================
// Constants used in the script (that can be changed)
define(ctMMON,#16300)  // Minimum Money

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(FHPR,8b d8 3b 53 20 ?? ?? 8b c3 e8 ?? ?? ?? ?? 83 bb a8 00 00 00 00)
assert(GDMD,8b 45 08 89 43 1c 8b c3 e8 ?? ?? ?? ?? 33 c0 5a 59 59 64 89 10)
assert(MPRE,db 46 0c de c9 83 c4 f4 db 3c 24 9b e8 ?? ?? ?? ?? 5f 5e 5b c3)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_FindHumanPlayer)
label(_BackFHP)
label(_ExitFHP)
label(_GodMode)
label(_GodMD00)
label(_BackGMD)
label(_ExitGMD)
label(_MonPlayerRes)
label(_MonPR00)
label(_BackMPR)
label(_ExitMPR)
label(iEnableGMD)
label(iEnableMFX)
label(iEnableMPR)
label(pCommon)
label(pUnit)
label(pRes)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableGMD)
registersymbol(iEnableMFX)
registersymbol(iEnableMPR)
registersymbol(pCommon)
registersymbol(pUnit)
registersymbol(pRes)

//=========================================
MyCode:
//=========================================
// When creating a group (CTRL+number)
_FindHumanPlayer:
 mov ebx,[eax+34]
 mov [pCommon],ebx
 mov [pUnit],eax

_ExitFHP:
 mov ebx,eax                       // Original code
 cmp edx,[ebx+20]                  // Original code
 jmp _BackFHP                      // Back to main code

//=========================================
// When HP changes
_GodMode:
 push ecx

 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 mov ecx,[ebx+0c]
 test ecx,ecx
 jz _ExitGMD

 mov ecx,[ecx+34]
 cmp ecx,[pCOM]
 jne _ExitGMD

 mov ecx,[ebx+18]
 cmp ecx,(float)1000000.0
 jge _ExitGMD

 cmp dword ptr [iEnableMFX],0
 jne _GodMD00                      // Jump if feature is enabled

 mov ecx,[ebp+08]
 test ecx,ecx
 jz _ExitGMD
 js _ExitGMD

 cmp ecx,(float)1.0
 jle _ExitGMD

 mov ecx,[ebx+1C]
 cmp ecx,[ebp+08]
 js _ExitGMD

 mov ecx,[ebx+1C]
 mov [ebp+08],ecx
 jmp _ExitGMD

_GodMD00:
 mov ecx,[ebx+18]
 mov [ebp+08],ecx

_ExitGMD:
 pop ecx

 mov eax,[ebp+08]                  // Original code (rds HP)
 mov [ebx+1C],eax                  // Original code (upd HP)
 jmp _BackGMD                      // Back to main code

//=========================================
// Main Screen
_MonPlayerRes:
 push eax
 push ebx

 cmp dword ptr [iEnableMPR],0
 je _ExitMPR                       // Jump if feature is disabled

 mov ebx,[esi+08]
 test ebx,ebx
 jz _ExitMPR

 mov ebx,[ebx+08]
 test ebx,ebx
 jz _ExitMPR

 mov eax,[ebx]
 cmp eax,'Petr'
 je _MonPR00

 cmp eax,'Powe'
 jne _ExitMPR

_MonPR00:
 mov eax,[esp+08]
 cmp eax,pMPR
 jne _ExitMPR

 mov [pRes],esi

 mov eax,[esi+0c]
 test eax,eax
 jz _ExitMPR

 mov eax,ctMMON
 cmp eax,[esi+0c]
 js _ExitMPR

 mov [esi+0c],eax

_ExitMPR:
 pop ebx
 pop eax

 fild dword ptr [esi+0C]           // Original code (rd RES)
 fmulp st(1),st(0)                 // Original code
 jmp _BackMPR                      // Back to main code

//=========================================
 db '==================================&gt;'
 db 'CE6.3 Script by Recifense 122513'
//=========================================
// Variables
iEnableGMD:
 dd 0
iEnableMFX:
 dd 0
iEnableMPR:
 dd 0
pCommon:
 dd MyCode
pUnit:
 dd 0
pRes:
 dd 0

//=========================================
// Hacking Points
FHPR:
 jmp _FindHumanPlayer
_BackFHP:

GDMD:
 jmp _GodMode
 nop
_BackGMD:

MPRE:
 jmp _MonPlayerRes
_BackMPR:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
FHPR:
// mov ebx,eax
// cmp edx,[ebx+20]
 db 8b d8 3b 53 20

GDMD:
// mov eax,[ebp+08]
// mov [ebx+1C],eax
 db 8b 45 08 89 43 1c

MPRE:
// fild dword ptr [esi+0C]
// fmulp st(1),st(0)
 db db 46 0c de c9

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMFX)
unregistersymbol(iEnableMPR)
unregistersymbol(pCommon)
unregistersymbol(pUnit)
unregistersymbol(pRes)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Enable/Disable God Mode =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>14</ID>
              <Description>"Enable/Disable Fast Construction/Production =&gt; (1/0)"</Description>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iEnableMFX</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>33</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>34</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Enable/Disable Minimum Resource =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMPR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Act of War Direct Action
 Game Version  : 1.00
 Game Sponsor  : Schviedler
 Proces Name   : ACTOFWAR.exe
 Script Version: 2.0
 CE Version    : 6.3
 Release date  : 25-Dec-2013
 Author        : Recifense
 History:
 25-Dec-13: First Release
 Features:
 - God Mode                     [1]
 - Fast Construction/Production [2]
 - Minimum Resources            [3]
   - Petro
   - Power
 - Some Pointers                [4]
===========================================
[1] For units and buildings. Fast Construction/Production is a side effect; :)
[2] It is a side effect of GM that can enabled/disabled;
[3] Resouces in production will not go under minimum value;
[4] For debugging;
===========================================
[USAGE]
1) Run CE;
2) Run Game and pause as a match starts;
3) Go to CE and choose the process ACTOFWAR.exe;
4) Load the table;
5) Activate the script;
6) Enable the cheats you want to use by changing their value to 1 (or use the hotkeys);
7) Go back to the game and have fun.
===========================================
[HOTKEYS]
CTRL+Home = Enable  all cheats;
CTRL+End  = Disable all cheats;
-----------
CTRL+PageUp   = Enable  GM Side Effect cheat;
CTRL+PageDown = Disable GM Side Effect cheat;
===========================================
Happy New Year!
===========================================
Cheers!
</Comments>
</CheatTable>
