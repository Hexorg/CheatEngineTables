<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Energy"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 
  Date   : 2015-11-12
  Author : Schnitzelmaker

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ENERGY,SC2_x64.exe,89 9D A0 01 00 00 3B) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+59309E)


label(code)
label(return)

newmem:
  cmp byte ptr[rbp+36],1
  jne code

  mov ebx, #819200 //200*4096
code:
  mov [rbp+000001A0],ebx
  jmp return

ENERGY:
  jmp newmem
  nop
return:
registersymbol(ENERGY)

[DISABLE]

Energy:
  db 89 9D A0 01 00 00

unregistersymbol(ENERGY)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+5917CE

"SC2_x64.exe"+5917AD: 89 44 24 60              -  mov [rsp+60],eax
"SC2_x64.exe"+5917B1: 85 C0                    -  test eax,eax
"SC2_x64.exe"+5917B3: 79 07                    -  jns SC2_x64.exe+5917BC
"SC2_x64.exe"+5917B5: 48 8D 4C 24 50           -  lea rcx,[rsp+50]
"SC2_x64.exe"+5917BA: EB 10                    -  jmp SC2_x64.exe+5917CC
"SC2_x64.exe"+5917BC: 48 8D 4C 24 58           -  lea rcx,[rsp+58]
"SC2_x64.exe"+5917C1: 48 8D 54 24 60           -  lea rdx,[rsp+60]
"SC2_x64.exe"+5917C6: 3B C6                    -  cmp eax,esi
"SC2_x64.exe"+5917C8: 48 0F 4E CA              -  cmovle rcx,rdx
"SC2_x64.exe"+5917CC: 8B 19                    -  mov ebx,[rcx]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+5917CE: 89 9D A0 01 00 00        -  mov [rbp+000001A0],ebx
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+5917D4: 3B DF                    -  cmp ebx,edi
"SC2_x64.exe"+5917D6: 74 74                    -  je SC2_x64.exe+59184C
"SC2_x64.exe"+5917D8: 2B DF                    -  sub ebx,edi
"SC2_x64.exe"+5917DA: 74 70                    -  je SC2_x64.exe+59184C
"SC2_x64.exe"+5917DC: 85 F6                    -  test esi,esi
"SC2_x64.exe"+5917DE: 74 6C                    -  je SC2_x64.exe+59184C
"SC2_x64.exe"+5917E0: E8 4B 4B FA FF           -  call SC2_x64.exe+536330
"SC2_x64.exe"+5917E5: BA 4B 00 00 00           -  mov edx,0000004B
"SC2_x64.exe"+5917EA: 48 8B C8                 -  mov rcx,rax
"SC2_x64.exe"+5917ED: E8 9E 4C FA FF           -  call SC2_x64.exe+536490
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>84</ID>
      <Description>"Health"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 
  Date   : 2015-11-21
  Author : Schnitzelmaker

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HEALTH,SC2_x64.exe,89 B5 98 01 00 00 89 8C) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+593C3D)

label(code)
label(return)

newmem:

  cmp byte ptr[rbp+36],1
  jne code

  mov esi,0

code:
  mov [rbp+00000198],esi
  jmp return


HEALTH:
  jmp newmem
  nop
return:
registersymbol(HEALTH)


[DISABLE]

HEALTH:
  db 89 B5 98 01 00 00




unregistersymbol(HEALTH)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+593C3D

"SC2_x64.exe"+593C15: 48 8D 8C 24 D0 00 00 00  -  lea rcx,[rsp+000000D0]
"SC2_x64.exe"+593C1D: EB 16                    -  jmp SC2_x64.exe+593C35
"SC2_x64.exe"+593C1F: 48 8D 8C 24 D8 00 00 00  -  lea rcx,[rsp+000000D8]
"SC2_x64.exe"+593C27: 48 8D 94 24 E0 00 00 00  -  lea rdx,[rsp+000000E0]
"SC2_x64.exe"+593C2F: 3B C7                    -  cmp eax,edi
"SC2_x64.exe"+593C31: 48 0F 4E CA              -  cmovle rcx,rdx
"SC2_x64.exe"+593C35: 8B F7                    -  mov esi,edi
"SC2_x64.exe"+593C37: 2B 31                    -  sub esi,[rcx]
"SC2_x64.exe"+593C39: 8B CF                    -  mov ecx,edi
"SC2_x64.exe"+593C3B: 2B C8                    -  sub ecx,eax
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+593C3D: 89 B5 98 01 00 00        -  mov [rbp+00000198],esi
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+593C43: 89 8C 24 88 00 00 00     -  mov [rsp+00000088],ecx
"SC2_x64.exe"+593C4A: 3B F3                    -  cmp esi,ebx
"SC2_x64.exe"+593C4C: 74 24                    -  je SC2_x64.exe+593C72
"SC2_x64.exe"+593C4E: 8B D3                    -  mov edx,ebx
"SC2_x64.exe"+593C50: C6 44 24 30 01           -  mov byte ptr [rsp+30],01
"SC2_x64.exe"+593C55: 44 8B CF                 -  mov r9d,edi
"SC2_x64.exe"+593C58: 44 8B C3                 -  mov r8d,ebx
"SC2_x64.exe"+593C5B: 48 8B CD                 -  mov rcx,rbp
"SC2_x64.exe"+593C5E: 2B D6                    -  sub edx,esi
"SC2_x64.exe"+593C60: C7 44 24 28 01 00 00 00  -  mov [rsp+28],00000001
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>85</ID>
      <Description>"Shield"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SC2_x64.exe
  Version: 
  Date   : 2015-11-21
  Author : Schnitzelmaker

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SHIELD,SC2_x64.exe,89 86 9C 01 00 00 3B) // should be unique
alloc(newmem,$1000,"SC2_x64.exe"+592CC7)

label(code)
label(return)

newmem:

  cmp byte ptr[rsi+36],1
  jne code

  mov eax, 0
code:
  mov [rsi+0000019C],eax
  jmp return

SHIELD:
  jmp newmem
  nop
return:
registersymbol(SHIELD)

[DISABLE]

SHIELD:
  db 89 86 9C 01 00 00

unregistersymbol(SHIELD)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+592CC7

"SC2_x64.exe"+592CA3: 85 FF                    -  test edi,edi
"SC2_x64.exe"+592CA5: 79 07                    -  jns SC2_x64.exe+592CAE
"SC2_x64.exe"+592CA7: 48 8D 4C 24 70           -  lea rcx,[rsp+70]
"SC2_x64.exe"+592CAC: EB 14                    -  jmp SC2_x64.exe+592CC2
"SC2_x64.exe"+592CAE: 48 8D 4C 24 78           -  lea rcx,[rsp+78]
"SC2_x64.exe"+592CB3: 48 8D 84 24 80 00 00 00  -  lea rax,[rsp+00000080]
"SC2_x64.exe"+592CBB: 41 3B F9                 -  cmp edi,r9d
"SC2_x64.exe"+592CBE: 48 0F 4E C8              -  cmovle rcx,rax
"SC2_x64.exe"+592CC2: 41 8B C1                 -  mov eax,r9d
"SC2_x64.exe"+592CC5: 2B 01                    -  sub eax,[rcx]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+592CC7: 89 86 9C 01 00 00        -  mov [rsi+0000019C],eax
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+592CCD: 3B C3                    -  cmp eax,ebx
"SC2_x64.exe"+592CCF: 74 24                    -  je SC2_x64.exe+592CF5
"SC2_x64.exe"+592CD1: 8B D3                    -  mov edx,ebx
"SC2_x64.exe"+592CD3: C6 44 24 30 01           -  mov byte ptr [rsp+30],01
"SC2_x64.exe"+592CD8: 44 8B C3                 -  mov r8d,ebx
"SC2_x64.exe"+592CDB: 48 8B CE                 -  mov rcx,rsi
"SC2_x64.exe"+592CDE: 2B D0                    -  sub edx,eax
"SC2_x64.exe"+592CE0: C7 44 24 28 09 00 00 00  -  mov [rsp+28],00000009
"SC2_x64.exe"+592CE8: C7 44 24 20 08 00 00 00  -  mov [rsp+20],00000008
"SC2_x64.exe"+592CF0: E8 FB E8 FF FF           -  call SC2_x64.exe+5915F0
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>119</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>118</ID>
      <Description>"Fast Research"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Research,SC2_x64.exe,29 8F C0 00 00 00 83 BF C0 00 00 00 00)
alloc(newmem,$1000,"SC2_x64.exe"+708735)

label(code)
label(return)

newmem:

code:
//  sub [rdi+000000C0],ecx
  mov [rdi+000000C0], 0
  jmp return

Research:
  jmp code
  nop
return:
registersymbol(Research)

[DISABLE]

Research:
  db 29 8F C0 00 00 00

unregistersymbol(Research)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+708735

"SC2_x64.exe"+70870B: F6 40 28 01                 -  test byte ptr [rax+28],01
"SC2_x64.exe"+70870F: 75 07                       -  jne SC2_x64.exe+708718
"SC2_x64.exe"+708711: 48 8D 88 00 02 00 00        -  lea rcx,[rax+00000200]
"SC2_x64.exe"+708718: 48 8D 54 24 60              -  lea rdx,[rsp+60]
"SC2_x64.exe"+70871D: E8 1E FD EF FF              -  call SC2_x64.exe+608440
"SC2_x64.exe"+708722: 48 63 08                    -  movsxd  rcx,dword ptr [rax]
"SC2_x64.exe"+708725: 48 63 C3                    -  movsxd  rax,ebx
"SC2_x64.exe"+708728: 48 8B 5C 24 68              -  mov rbx,[rsp+68]
"SC2_x64.exe"+70872D: 48 0F AF C8                 -  imul rcx,rax
"SC2_x64.exe"+708731: 48 C1 F9 0C                 -  sar rcx,0C
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+708735: 29 8F C0 00 00 00           -  sub [rdi+000000C0],ecx
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+70873B: 83 BF C0 00 00 00 00        -  cmp dword ptr [rdi+000000C0],00
"SC2_x64.exe"+708742: 7E 14                       -  jle SC2_x64.exe+708758
"SC2_x64.exe"+708744: 48 8B 07                    -  mov rax,[rdi]
"SC2_x64.exe"+708747: 48 8B CF                    -  mov rcx,rdi
"SC2_x64.exe"+70874A: FF 90 A8 01 00 00           -  call qword ptr [rax+000001A8]
"SC2_x64.exe"+708750: 32 C0                       -  xor al,al
"SC2_x64.exe"+708752: 48 83 C4 50                 -  add rsp,50
"SC2_x64.exe"+708756: 5F                          -  pop rdi
"SC2_x64.exe"+708757: C3                          -  ret 
"SC2_x64.exe"+708758: 48 8B 4F 38                 -  mov rcx,[rdi+38]
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>145</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>121</ID>
      <Description>"No Merc Delay"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Merc_Delay,SC2_x64.exe,8B 00 29 43 18 44 39 63 18 7F 6C)
alloc(newmem,$1000,"SC2_x64.exe"+62DA31)

label(code)
label(return)

newmem:

code:
//  mov eax,[rax]
  mov eax, [rbx+18]
  sub [rbx+18],eax
  jmp return

Merc_Delay:
  jmp code
return:
registersymbol(Merc_Delay)

[DISABLE]

Merc_Delay:
  db 8B 00 29 43 18

unregistersymbol(Merc_Delay)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+62DA31

"SC2_x64.exe"+62D9FD: 0F 84 D0 00 00 00        -  je SC2_x64.exe+62DAD3
"SC2_x64.exe"+62DA03: 48 8D 3D 66 FD 50 01     -  lea rdi,[SC2_x64.exe+1B3D770]
"SC2_x64.exe"+62DA0A: 66 0F 1F 44 00 00        -  nop [rax+rax+00]
"SC2_x64.exe"+62DA10: 44 39 63 1C              -  cmp [rbx+1C],r12d
"SC2_x64.exe"+62DA14: 0F 8E 8E 00 00 00        -  jng SC2_x64.exe+62DAA8
"SC2_x64.exe"+62DA1A: 44 39 63 18              -  cmp [rbx+18],r12d
"SC2_x64.exe"+62DA1E: 0F 8E 84 00 00 00        -  jng SC2_x64.exe+62DAA8
"SC2_x64.exe"+62DA24: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"SC2_x64.exe"+62DA29: 48 8B CD                 -  mov rcx,rbp
"SC2_x64.exe"+62DA2C: E8 0F AA FD FF           -  call SC2_x64.exe+608440
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+62DA31: 8B 00                    -  mov eax,[rax]
"SC2_x64.exe"+62DA33: 29 43 18                 -  sub [rbx+18],eax
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+62DA36: 44 39 63 18              -  cmp [rbx+18],r12d
"SC2_x64.exe"+62DA3A: 7F 6C                    -  jg SC2_x64.exe+62DAA8
"SC2_x64.exe"+62DA3C: 48 8D 4B 20              -  lea rcx,[rbx+20]
"SC2_x64.exe"+62DA40: 48 8D 54 24 20           -  lea rdx,[rsp+20]
"SC2_x64.exe"+62DA45: 4C 89 64 24 28           -  mov [rsp+28],r12
"SC2_x64.exe"+62DA4A: 4C 89 64 24 30           -  mov [rsp+30],r12
"SC2_x64.exe"+62DA4F: C7 44 24 38 03 00 0D 00  -  mov [rsp+38],000D0003
"SC2_x64.exe"+62DA57: 48 89 7C 24 20           -  mov [rsp+20],rdi
"SC2_x64.exe"+62DA5C: 48 89 5C 24 40           -  mov [rsp+40],rbx
"SC2_x64.exe"+62DA61: E8 6A 50 FE FF           -  call SC2_x64.exe+612AD0
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>145</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>126</ID>
      <Description>"Remove Skill Delay"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Skill_Delay,SC2_x64.exe,8B 00 29 43 18 44 39 63 18)
alloc(newmem,$1000,"SC2_x64.exe"+62DA31)

label(code)
label(return)

newmem:

code:
//  mov eax,[rax]
//  sub [rbx+18],eax
  mov [rbx+18],0
  jmp return

Skill_Delay:
  jmp code
return:
registersymbol(Skill_Delay)

[DISABLE]

Skill_Delay:
  db 8B 00 29 43 18

unregistersymbol(Skill_Delay)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+62DA31

"SC2_x64.exe"+62D9FD: 0F 84 D0 00 00 00        -  je SC2_x64.exe+62DAD3
"SC2_x64.exe"+62DA03: 48 8D 3D 66 FD 50 01     -  lea rdi,[SC2_x64.exe+1B3D770]
"SC2_x64.exe"+62DA0A: 66 0F 1F 44 00 00        -  nop [rax+rax+00]
"SC2_x64.exe"+62DA10: 44 39 63 1C              -  cmp [rbx+1C],r12d
"SC2_x64.exe"+62DA14: 0F 8E 8E 00 00 00        -  jng SC2_x64.exe+62DAA8
"SC2_x64.exe"+62DA1A: 44 39 63 18              -  cmp [rbx+18],r12d
"SC2_x64.exe"+62DA1E: 0F 8E 84 00 00 00        -  jng SC2_x64.exe+62DAA8
"SC2_x64.exe"+62DA24: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"SC2_x64.exe"+62DA29: 48 8B CD                 -  mov rcx,rbp
"SC2_x64.exe"+62DA2C: E8 0F AA FD FF           -  call SC2_x64.exe+608440
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+62DA31: 8B 00                    -  mov eax,[rax]
"SC2_x64.exe"+62DA33: 29 43 18                 -  sub [rbx+18],eax
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+62DA36: 44 39 63 18              -  cmp [rbx+18],r12d
"SC2_x64.exe"+62DA3A: 7F 6C                    -  jg SC2_x64.exe+62DAA8
"SC2_x64.exe"+62DA3C: 48 8D 4B 20              -  lea rcx,[rbx+20]
"SC2_x64.exe"+62DA40: 48 8D 54 24 20           -  lea rdx,[rsp+20]
"SC2_x64.exe"+62DA45: 4C 89 64 24 28           -  mov [rsp+28],r12
"SC2_x64.exe"+62DA4A: 4C 89 64 24 30           -  mov [rsp+30],r12
"SC2_x64.exe"+62DA4F: C7 44 24 38 03 00 0D 00  -  mov [rsp+38],000D0003
"SC2_x64.exe"+62DA57: 48 89 7C 24 20           -  mov [rsp+20],rdi
"SC2_x64.exe"+62DA5C: 48 89 5C 24 40           -  mov [rsp+40],rbx
"SC2_x64.exe"+62DA61: E8 6A 50 FE FF           -  call SC2_x64.exe+612AD0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>139</ID>
      <Description>"Freeze Resource"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,SC2_x64.exe,45 89 0B 45 89 53 04)
alloc(newmem,$1000,"SC2_x64.exe"+4EFE05)

label(code)
label(return)

newmem:

code:

//  mov [r11],r9d
//  mov [r11+04],r10d
  jmp return

INJECT:
  jmp code
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 45 89 0B 45 89 53 04

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+4EFE05

"SC2_x64.exe"+4EFDDE: F7 D1                 -  not ecx
"SC2_x64.exe"+4EFDE0: 8B C1                 -  mov eax,ecx
"SC2_x64.exe"+4EFDE2: 25 FF 0F 00 00        -  and eax,00000FFF
"SC2_x64.exe"+4EFDE7: 45 33 4C 85 00        -  xor r9d,[r13+rax*4+00]
"SC2_x64.exe"+4EFDEC: 41 8B C1              -  mov eax,r9d
"SC2_x64.exe"+4EFDEF: C1 E8 0C              -  shr eax,0C
"SC2_x64.exe"+4EFDF2: 41 8D 89 F5 48 5E 45  -  lea ecx,[r9+455E48F5]
"SC2_x64.exe"+4EFDF9: 33 C1                 -  xor eax,ecx
"SC2_x64.exe"+4EFDFB: 25 FF 0F 00 00        -  and eax,00000FFF
"SC2_x64.exe"+4EFE00: 45 2B 54 85 00        -  sub r10d,[r13+rax*4+00]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+4EFE05: 45 89 0B              -  mov [r11],r9d
"SC2_x64.exe"+4EFE08: 45 89 53 04           -  mov [r11+04],r10d
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+4EFE0C: 4C 8B 6C 24 20        -  mov r13,[rsp+20]
"SC2_x64.exe"+4EFE11: 48 3B DF              -  cmp rbx,rdi
"SC2_x64.exe"+4EFE14: 74 1C                 -  je SC2_x64.exe+4EFE32
"SC2_x64.exe"+4EFE16: 0F B6 4D 22           -  movzx ecx,byte ptr [rbp+22]
"SC2_x64.exe"+4EFE1A: 41 8B D4              -  mov edx,esp
"SC2_x64.exe"+4EFE1D: E8 BE 46 FA FF        -  call SC2_x64.exe+4944E0
"SC2_x64.exe"+4EFE22: 0F B6 4D 22           -  movzx ecx,byte ptr [rbp+22]
"SC2_x64.exe"+4EFE26: 2B DF                 -  sub ebx,edi
"SC2_x64.exe"+4EFE28: 44 8B C3              -  mov r8d,ebx
"SC2_x64.exe"+4EFE2B: 8B D6                 -  mov edx,esi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>147</ID>
      <Description>"Freeze Resource Pile"</Description>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Resource_Pile,SC2_x64.exe,89 B7 8C 00 00 00 41)
alloc(newmem,$1000,"SC2_x64.exe"+723248)

label(code)
label(return)

newmem:
// to let automated refineries get filled on mission start; otherwise it'll be zero
  cmp [rdi+0000008C], 0
  jne return

code:
  mov [rdi+0000008C],esi
  jmp return

Resource_Pile:
  jmp newmem
  nop
return:
registersymbol(Resource_Pile)

[DISABLE]

Resource_Pile:
  db 89 B7 8C 00 00 00

unregistersymbol(Resource_Pile)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SC2_x64.exe"+723248

"SC2_x64.exe"+723220: 48 8B C8                 -  mov rcx,rax
"SC2_x64.exe"+723223: 8B D6                    -  mov edx,esi
"SC2_x64.exe"+723225: E8 86 FF FF FF           -  call SC2_x64.exe+7231B0
"SC2_x64.exe"+72322A: 44 8B 8F 8C 00 00 00     -  mov r9d,[rdi+0000008C]
"SC2_x64.exe"+723231: 48 8D 87 90 00 00 00     -  lea rax,[rdi+00000090]
"SC2_x64.exe"+723238: 48 8D 4D 58              -  lea rcx,[rbp+58]
"SC2_x64.exe"+72323C: 3B 30                    -  cmp esi,[rax]
"SC2_x64.exe"+72323E: 44 89 4D 50              -  mov [rbp+50],r9d
"SC2_x64.exe"+723242: 48 0F 43 C8              -  cmovae rcx,rax
"SC2_x64.exe"+723246: 8B 31                    -  mov esi,[rcx]
// ---------- INJECTING HERE ----------
"SC2_x64.exe"+723248: 89 B7 8C 00 00 00        -  mov [rdi+0000008C],esi
// ---------- DONE INJECTING  ----------
"SC2_x64.exe"+72324E: 41 3B F1                 -  cmp esi,r9d
"SC2_x64.exe"+723251: 74 42                    -  je SC2_x64.exe+723295
"SC2_x64.exe"+723253: 48 8B 47 28              -  mov rax,[rdi+28]
"SC2_x64.exe"+723257: 44 8B C6                 -  mov r8d,esi
"SC2_x64.exe"+72325A: BA 16 00 00 00           -  mov edx,00000016
"SC2_x64.exe"+72325F: 8B 08                    -  mov ecx,[rax]
"SC2_x64.exe"+723261: 45 2B C1                 -  sub r8d,r9d
"SC2_x64.exe"+723264: 89 4D 58                 -  mov [rbp+58],ecx
"SC2_x64.exe"+723267: 48 8D 4D 58              -  lea rcx,[rbp+58]
"SC2_x64.exe"+72326B: E8 D0 78 F6 FF           -  call SC2_x64.exe+68AB40
}
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys/>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>144</ID>
      <Description>"Solarite (x16777216)"</Description>
      <LastState Value="??" Activated="0" RealAddress="7FF74D0FC220"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>SC2_x64.exe+3D1C220</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>129</ID>
      <Description>"Credits (WoL)"</Description>
      <LastState Value="??" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>"SC2_x64.exe"+028CA4D8</Address>
      <Offsets>
        <Offset>1C</Offset>
        <Offset>28</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>ENERGY</Name>
      <Address> 7FF7499A6E4E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HEALTH</Name>
      <Address> 7FF7499A89BD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>SHIELD</Name>
      <Address> 7FF7499A7AA7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Skill_Delay</Name>
      <Address> 7FF749A44C51</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address> 7FF7498CFE05</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Resource_Pile</Name>
      <Address> 7FF749B03248</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
