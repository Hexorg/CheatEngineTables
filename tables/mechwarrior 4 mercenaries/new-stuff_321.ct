<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Infinite Jump Jets"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"MW4Mercs.exe"+1AC097:
nop
nop
nop
nop

 
 
[DISABLE]
"MW4Mercs.exe"+1AC097:
fsub dword ptr [esp+0C]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>84</ID>
      <Description>"Weapon Range Hack"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(codeWeapRangeCall)
label(codeWeapRange1)
label(codeWeapRange2)
label(codeWeapRange3)
label(codeWeapRange4)
label(pWeapRange)
registersymbol(pWeapRange)
label(retWeapRangeCall1)
label(retWeapRangeCall2)
label(retWeapRange1)
label(retWeapRange2)
label(retWeapRange3)
label(retWeapRange4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

codeWeapRangeCall:
push ecx
mov ecx,[pWeapRange]
mov [esi+40],ecx
fld dword ptr [esi+40]
fcomp dword ptr [ebp+00000150]
pop ecx
retn

codeWeapRange1:
push ecx
mov ecx,[pWeapRange]
mov [edi+58],ecx
pop ecx
mov edx,[edi+58]
lea eax,[ebp-44]
jmp retWeapRange1

codeWeapRange2:
push ecx
mov ecx,[pWeapRange]
mov [esi+58],ecx
pop ecx
mov ecx,[esi+58]
mov edx,[esi+50]
jmp retWeapRange2

codeWeapRange3:
push ecx
mov ecx,[pWeapRange]
mov [edi+58],ecx
pop ecx
mov edx,[edi+58]
mov al,[esi+0000023C]
jmp retWeapRange3

codeWeapRange4:
push ecx
mov ecx,[pWeapRange]
mov [esi+58],ecx
pop ecx
mov edx,[esi+58]
mov [esp+48],edx
jmp retWeapRange4

pWeapRange:
dd (float)5000

"MW4Mercs.exe"+24E99D:
call codeWeapRangeCall
nop
nop
nop
nop
retWeapRangeCall1:

"MW4Mercs.exe"+24EA06:
call codeWeapRangeCall
nop
nop
nop
nop
retWeapRangeCall2:

"MW4Mercs.exe"+1F61B1:
jmp codeWeapRange1
nop
retWeapRange1:

"MW4Mercs.exe"+1F0680:
jmp codeWeapRange2
nop
retWeapRange2:

"MW4Mercs.exe"+1F6370:
jmp codeWeapRange3
nop
nop
nop
nop
retWeapRange3:

"MW4Mercs.exe"+196F1D:
jmp codeWeapRange4
nop
nop
retWeapRange4:

[DISABLE]
dealloc(newmem)
unregistersymbol(pWeapRange)

"MW4Mercs.exe"+24E99D:
fld dword ptr [esi+40]
fcomp dword ptr [ebp+00000150]

"MW4Mercs.exe"+24EA06:
fld dword ptr [esi+40]
fcomp dword ptr [ebp+00000150]

"MW4Mercs.exe"+1F0680:
mov ecx,[esi+58]
mov edx,[esi+50]

"MW4Mercs.exe"+1F61B1:
mov edx,[edi+58]
lea eax,[ebp-44]

"MW4Mercs.exe"+1F6370:
mov edx,[edi+58]
mov al,[esi+0000023C]

"MW4Mercs.exe"+196F1D:
mov edx,[esi+58]
mov [esp+48],edx
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>95</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pWeapRange</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
