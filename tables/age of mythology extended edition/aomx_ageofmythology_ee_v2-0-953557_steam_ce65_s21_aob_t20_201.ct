<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>41</ID>
      <Description>"[X] &lt;== Age of Mythology Extended Edition v2.0.953557 Steam Script v2.1 AOB"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Age of Mithology Extended Edition
 Game Version  : 2.0.953557
 Game Sponsor  : Myself
 Process Name  : aomx.exe
 Script Version: 2.1 AOB
 CE Version    : 6.5
 Release date  : 04-Feb-2016
 Author        : Recifense
 History:
 24-Dec-14: First Release for Steam (v1.10.3104)
 24-Apr-15: First Release for Steam (v1.11.3158)
 25-Apr-15: First Release for Steam (v1.11.3163)
 02-May-15: First Release for Steam (v1.11.3165)
 05-Jun-15: First Release for Steam (v1.12.647985)
 16-Jun-15: First Release for Steam (v1.12.651680)
 05-Sep-15: First Release for Steam (v1.12.761632)
 29-Jan-16: First Release for Steam (v2.0.951481) - No CRC Protection
 30-Jan-16: First Release for Steam (v2.0.953557) - +Pop (S2.0 AOB)
 04-Feb-16: Changed GM and Unlimited Pop (S2.1 AOB)
 Features:
 - Minimum Resources
 - God Mode
 - Unlimited Power Use
 - Instant Research/Age
 - Instant Construction
 - Instant Production
 - Unlimited Population
 - Some Pointers
===========================================
}

//=========================================
// Checking CE version
{$lua}
  if(getCEVersion() &lt; 6.5) then
    ShowMessage('Sorry. CE version should be 6.5 or above')
  end
{$asm}

//=========================================
// Checking Selected Process
{$lua}
  if(process == nil) then
    ShowMessage('No process was selected')
  elseif (process ~= "aomx.exe") then
    ShowMessage('Error. Expected Process = aomx.exe')
  end
{$asm}

//=========================================
// Definitions
define(LUDO,"aomx.exe")

//=========================================
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.5)
define(ctMRE0,(float)65000.0) // Minimum Resources
define(ctMRE1,(float)650.0)   // Minimum Resources

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

AOBScanModule(FHPR,aomx.exe,3b 81 e0 03 00 00 ?? ?? 6b d0 2c 8b 81 dc 03 00 00 8b 44 10 08)
AOBScanModule(MOPR,aomx.exe,33 04 8a 89 45 f8 d9 45 f8 8b e5 5d c2 04 00 cc cc cc cc cc cc)
AOBScanModule(GDMD,aomx.exe,f3 0f 10 45 08 56 8b f1 f3 0f 11 86 40 01 00 00 e8 ?? ?? ?? ??)
AOBScanModule(MOPU,aomx.exe,8b 44 10 04 5d c2 04 00 33 c0 5d c2 04 00 cc cc cc cc cc cc cc)
AOBScanModule(MRPS,aomx.exe,f3 0f 11 46 64 e8 ?? ?? ?? ?? d9 5d e8 f3 0f 10 45 e8 0f 2f 05)
AOBScanModule(MCPS,aomx.exe,f3 0f 10 4d 08 0f 57 c0 0f 2f c1 f3 0f 11 49 04 ?? ?? c7 41 04)
AOBScanModule(MPPS,aomx.exe,f3 0f 10 4e 68 f3 0f 5e c8 0f 57 c0 0f 2f c1 f3 0f 11 4d fc ??)
AOBScanModule(MOUP,aomx.exe,89 45 f8 8b 42 34 33 45 f8 8b e5 5d c3 cc cc cc cc cc cc cc cc)
AOBScanModule(MOMP,aomx.exe,89 45 f8 8b 42 38 33 45 f8 8b e5 5d c3 cc cc cc cc cc cc cc cc)

//=========================================
alloc(MyCode,4096,$process)
//=========================================
// Declaration section
label(_FindHumanPlayer)
label(_BackFHP)
label(_ExitFHP)
label(_MonPlayerResources)
label(_MonPR00)
label(_BackMPR)
label(_ExitMPR)
label(_GodMode)
label(_GodMD00)
label(_GodMD01)
label(_GodMD02)
label(_BackGMD)
label(_ExitGMD)
label(_MonPowerUse)
label(_BackMPU)
label(_ExitMPU)
label(_MonResearchProgress)
label(_BackMRP)
label(_ExitMRP)
label(_MonConstProgress)
label(_BackMCP)
label(_ExitMCP)
label(_MonProdProgress)
label(_BackMPP)
label(_ExitMPP)
label(_MonUsedPop)
label(_BackMUP)
label(_ExitMUP)
label(_MonMaxPop)
label(_BackMMP)
label(_ExitMMP)
label(iEnableMPR)
label(iEnableGMD)
label(iEnableMPU)
label(iEnableMRP)
label(iEnableMCP)
label(iEnableMPP)
label(iEnableMUP)
label(iMaxPop)
label(pPlayer)
label(pRes)
label(pLast)
label(iEAX_Reg)
label(iECX_Reg)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMPR)
registersymbol(iEnableGMD)
registersymbol(iEnableMPU)
registersymbol(iEnableMRP)
registersymbol(iEnableMCP)
registersymbol(iEnableMPP)
registersymbol(iEnableMUP)
registersymbol(pPlayer)
registersymbol(pRes)
registersymbol(pLast)

registersymbol(FHPR)
registersymbol(MOPR)
registersymbol(GDMD)
registersymbol(MOPU)
registersymbol(MRPS)
registersymbol(MCPS)
registersymbol(MPPS)
registersymbol(MOUP)

//=========================================
MyCode:
//=========================================
// Main game screen
_FindHumanPlayer:
 push eax
 push esi

 cmp dword ptr [ecx+04],1
 jne _ExitFHP

 mov [pPlayer],ecx
 mov eax,[ecx+00000248]
 mov [pRes],eax

_ExitFHP:
 pop esi
 pop eax

 cmp edx,[ecx+000003E0]            // Original code (rd #Powers)
 jmp _BackFHP                      // Back to main code

//=========================================
// Main Screen
_MonPlayerResources:
 push ebx
 push esi

 cmp dword ptr [iEnableMPR],0
 je _ExitMPR                       // Jump if feature is disabled

 cmp edx,[pRes]
 jne _ExitMPR

 cmp ecx,4
 jns _ExitMPR

 mov ebx,[edx+ecx*4]
 xor ebx,eax

 mov esi,ctMRE1
 cmp ecx,3
 je _MonPR00

 mov esi,ctMRE0

_MonPR00:
 cmp esi,ebx
 js _ExitMPR

 xor esi,eax
 mov [edx+ecx*4],esi

_ExitMPR:
 pop esi
 pop ebx

 xor eax,[edx+ecx*4]               // Original code (rd Res)
 mov [ebp-08],eax                  // Original code
 jmp _BackMPR                      // Back to main code

//=========================================
// During Combat
_GodMode:
 push eax

 mov [pLast],ecx

 mov eax,[ecx+18]
 cmp eax,[pPlayer]
 jne _ExitGMD

 cmp dword ptr [iEnableMCP],0
 je _GodMD00                       // Jump if feature is disabled

 cmp dword ptr [ecx+00000140],(float)0.1
 js _GodMD01

_GodMD00:
 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

_GodMD01:
// mov eax,[ebp+2c]
// cmp eax,3f000000
// js _GodMD02

// cmp eax,[ecx+00000140]
// js _GodMD02

// mov [ecx+00000140],eax

_GodMD02:
 mov eax,[ecx+00000140]
 cmp eax,[ebp+08]
 js _ExitGMD

 mov [ebp+08],eax

_ExitGMD:
 pop eax

 movss xmm0,[ebp+08]               // Original code (get new hp)
 jmp _BackGMD                      // Back to main code

//=========================================
// Main Screen
_MonPowerUse:
 push ebx

 cmp ecx,[pPlayer]
 jne _ExitMPU

 cmp dword ptr [iEnableMPU],0
 je _ExitMPU                       // Jump if feature is disabled

 mov ebx,#5
 cmp ebx,[eax+edx+04]
 js _ExitMPU

 mov [eax+edx+04],ebx

_ExitMPU:
 pop ebx

 mov eax,[eax+edx+04]              // Original code (rd #)
 pop ebp                           // Original code
 jmp _BackMPU                      // Back to main code

//=========================================
// When updating progress
_MonResearchProgress:
 push eax

 cmp dword ptr [iEnableMRP],0
 je _ExitMRP                       // Jump if feature is disabled

 test ebx,ebx
 jz _ExitMRP

 mov eax,[esi+0c]
 test eax,eax
 jz _ExitMRP

 mov eax,[eax+18]
 cmp eax,[pPlayer]
 jne _ExitMRP

 movss xmm0,[ebx+20]

_ExitMRP:
 pop eax

 movss [esi+64],xmm0               // Original code (upd rp)
 jmp _BackMRP                      // Back to main code

//=========================================
// When updating progress
_MonConstProgress:
 push eax

 cmp dword ptr [iEnableMCP],0
 je _ExitMCP                       // Jump if feature is disabled

 test esi,esi
 jz _ExitMCP

 cmp esi,edi
 jne _ExitMCP

 mov eax,[esi+18]
 cmp eax,[pPlayer]
 jne _ExitMCP

 movss xmm1,[ebp+0c]
 movss [ebp+08],xmm1

_ExitMCP:
 pop eax

 movss xmm1,[ebp+08]               // Original code (rd cp)
 jmp _BackMCP                      // Back to main code

//=========================================
// When updating progress %
_MonProdProgress:
 push eax

 cmp dword ptr [iEnableMPP],0
 je _ExitMPP                       // Jump if feature is disabled

 mov eax,[esi+0c]
 test eax,eax
 jz _ExitMPP

 mov eax,[eax+18]
 cmp eax,[pPlayer]
 jne _ExitMPP

 movss [esi+68],xmm0

_ExitMPP:
 pop eax

 movss xmm1,[esi+68]               // Original code (rd pp)
 jmp _BackMPP                      // Back to main code

//=========================================
// Keep Used Pop under 51 (all the time)
_MonUsedPop:
 mov [ebp-08],eax                  // Original code

 cmp dword ptr [iEnableMUP],0
 je _ExitMUP                       // Jump if feature is disabled

 cmp edx,[pPlayer]
 jne _ExitMUP

 cmp dword ptr [iMaxPop],#51
 js _ExitMUP

 xor eax,[edx+34]
 cmp eax,#51
 js _ExitMUP

 mov eax,#50
 xor eax,[ebp-08]

 mov [edx+34],eax

_ExitMUP:
 mov eax,[edx+34]                  // Original code (get Used Pop)
 jmp _BackMUP                      // Back to main code

//=========================================
// Find out Max Pop (all the time)
_MonMaxPop:
 mov [ebp-08],eax                  // Original code

 cmp edx,[pPlayer]
 jne _ExitMMP

 xor eax,[edx+38]
 mov [iMaxPop],eax

_ExitMMP:
 mov eax,[edx+38]                  // Original code (get Used Pop)
 jmp _BackMMP                      // Back to main code

//=========================================
 db '=======================================&gt;'
 db 'CE6.5 Script by Recifense 020416'
//=========================================
// Variables
iEnableMPR:
 dd 0
iEnableGMD:
 dd 0
iEnableMPU:
 dd 0
iEnableMRP:
 dd 0
iEnableMCP:
 dd 0
iEnableMPP:
 dd 0
iEnableMUP:
 dd 0
iMaxPop:
 dd 0
pPlayer:
 dd MyCode
pRes:
 dd MyCode
pLast:
 dd 0
iEAX_Reg:
 dd 0
iECX_Reg:
 dd 0

//=========================================
// Hacking Points
FHPR:
 jmp _FindHumanPlayer
 nop
_BackFHP:

MOPR:
 jmp _MonPlayerResources
 nop
_BackMPR:

GDMD:
 jmp _GodMode
_BackGMD:

MOPU:
 jmp _MonPowerUse
_BackMPU:

MRPS:
 jmp _MonResearchProgress
_BackMRP:

MCPS:
 jmp _MonConstProgress
_BackMCP:

MPPS:
 jmp _MonProdProgress
_BackMPP:

MOUP:
 jmp _MonUsedPop
 nop
_BackMUP:

MOMP:
 jmp _MonMaxPop
 nop
_BackMMP:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
FHPR:
// cmp eax,[ecx+000003E0]
 db 3b 81 e0 03 00 00

MOPR:
// xor eax,[edx+ecx*4]
// fmov [ebp-08],eax
 db 33 04 8a 89 45 f8

GDMD:
// movss xmm0,[ebp+08]
 db f3 0f 10 45 08

MOPU:
// mov eax,[eax+edx+04]
// pop ebp
 db 8b 44 10 04 5d

MRPS:
// movss [esi+64],xmm0
 db f3 0f 11 46 64

MCPS:
// movss xmm1,[ebp+08]
 db f3 0f 10 4d 08

MPPS:
// movss xmm1,[esi+68]
 db f3 0f 10 4e 68

MOUP:
// mov [ebp-08],eax
// mov eax,[edx+34]
 db 89 45 f8 8b 42 34

MOMP:
// mov [ebp-08],eax
// mov eax,[edx+38]
 db 89 45 f8 8b 42 38

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMPR)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMPU)
unregistersymbol(iEnableMRP)
unregistersymbol(iEnableMCP)
unregistersymbol(iEnableMPP)
unregistersymbol(iEnableMUP)
unregistersymbol(pPlayer)
unregistersymbol(pRes)
unregistersymbol(pLast)

unregistersymbol(FHPR)
unregistersymbol(MOPR)
unregistersymbol(GDMD)
unregistersymbol(MOPU)
unregistersymbol(MRPS)
unregistersymbol(MCPS)
unregistersymbol(MPPS)
unregistersymbol(MOUP)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
Some Power IDs:

2Ah (042) = LIGHTING STORM (RAYS) ok
2Bh (043) = LOCUST SWARM (ATTACK FARM) ok
2Ch (044) = TORNADO (ATTACK) ok
39h (057) = FROST (ATTACK ENEMY) ok
3Dh (061) = METEOR (ATTACK BUILDINGS) ok
54h (084) = DWARVEN MINE (PRODUCTION) ok
81h (129) = ANCESTOR (UNDEATH) ok
85h (133) = UNDER WORLD PASSAGE ok
86h (134) = RESTORATION (HEALTH) ok
92h (146) = GREAT HUNT (PRODUCTION) ok
93h (147) = CEASE FIRE ok
98h (152) = UNDERMINE (ATTACK BUILDING) ok
9Ch (156) = RAIN (FAST GATHERING) ok
ACh (172) = FIMBULWINTER (ATTACK TOWN) ok
AFh (175) = BRONZE (PROTECTION) ok
D3h (211) = PROSPERITY (FAST GOLD PRODUCTION) ok
D6h (214) = ECLIPSE (DAY INTO NIGHT) ok
DCh (220) = VISION (REVEAL MAP FOR A WHILE) ok
DDh (221) = BOLT	 (RAY) ok
DEh (222) = SPY ok
DFh (223) = FLAMING WEAPONS (ATTACK)
E2h (226) = PLAGUE OF SERPENTS (SNAKES) ok
E3h (227) = LURE (Animal Attrack) ok
E4h (228) = HEALING SPRING (HEALTH) ok
E5h (229) = CURSE (CHANGE INTO PIGS) ok
E6h (230) = SENTINEL (DEFEND) ok
E7h (231) = SHIFTING SAND (MOVE TROOP) ok
E8h (232) = CITADEL	(DEFEND) ok
E9h (233) = WALKING WOODS (ATTACK) ok
EAh (234) = RAGNAROK (CHANGING) ok
EBh (235) = NIDHOGG (DRAGON ATTACK) ok
ECh (236) = PLENTY (RESOURCES) ok
EDh (237) = SON OF OSIRIS (CHANGING) ok
EEh (239) = EARTH QUAKE (ATTACK) ok
F8h (248) = FOREST FIRE (ATTACK) ok
F9h (249) = PESTILENCE (NO PRODUCTION) ok
======================================
0196 (406) = DECONSTRUCTION	(ATTACK BUILDING) ok
0197 (407) = CARNIVORA (ATTACK) ok
0198 (408) = TRAITOR (Convert enemy to your side) ok
0199 (409) = CHAOS (ATTACK) ok
019e (414) = SHOCKWAVE (ATTACK UNITS) ok
01a2 (418) = GAIAÂ´S FOREST (CREAT FOREST) ok
01a3 (419) = TARTARIAN GATE (ATTACK ALL) ok
01af (431) = VORTEX (TRANSPORT TROOP) ok
01b2 (434) = DECONSTRUCTION WONDER (ATTACK) ok
01b4 (436) = HESPERIDES	(ATTACK) ok
01b6 (438) = SPIDERÂ´S LAIR (ATTACK) ok
01b7 (439) = VALOR (Covert unit to hero) ok
01bA (442) = IMPLODE (ATTACK) ok
01E5 (485) = SEED OF GAIA (QUEST) ok
======================================
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>229</ID>
          <Description>"[X] &lt;== Minimum Resources -----------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMPR",1)
getAddressList().getMemoryRecordByID(229).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMPR",0)
getAddressList().getMemoryRecordByID(229).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"[X] &lt;== God Mode --------------------------------------------&gt; (HK: CTRL+Home / CTRL+End)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableGMD",1)
getAddressList().getMemoryRecordByID(98).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableGMD",0)
getAddressList().getMemoryRecordByID(98).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>230</ID>
          <Description>"[X] &lt;== Unlimited Power Use  ---------------------------&gt; (HK: CTRL+Page Up / CTRL+Page Down)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMPU",1)
getAddressList().getMemoryRecordByID(230).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMPU",0)
getAddressList().getMemoryRecordByID(230).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>231</ID>
          <Description>"[X] &lt;== Instant Research ---------------------------------&gt; (HK: CTRL+Page Up / CTRL+Page Down)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMRP",1)
getAddressList().getMemoryRecordByID(231).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMRP",0)
getAddressList().getMemoryRecordByID(231).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>232</ID>
          <Description>"[X] &lt;== Instant Construction -----------------------------&gt; (HK: CTRL+Insert / CTRL+Delete)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMCP",1)
getAddressList().getMemoryRecordByID(232).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMCP",0)
getAddressList().getMemoryRecordByID(232).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>233</ID>
          <Description>"[X] &lt;== Instant Production --------------------------------&gt; (HK: CTRL+Insert / CTRL+Delete)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMPP",1)
getAddressList().getMemoryRecordByID(233).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMPP",0)
getAddressList().getMemoryRecordByID(233).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>234</ID>
          <Description>"[X] &lt;==Used Population -----------------------------------&gt; (HK: CTRL+Insert / CTRL+Delete)"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
writeInteger("iEnableMUP",1)
getAddressList().getMemoryRecordByID(234).Color=0x0008000
{$ASM}

[disable]
{$LUA}
writeInteger("iEnableMUP",0)
getAddressList().getMemoryRecordByID(234).Color=0x0c08000
{$ASM}

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>92</ID>
          <Description>"[X] &lt;======================= Player Info ======================"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>000080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>19</ID>
              <Description>"Name"</Description>
              <ShowAsHex>1</ShowAsHex>
              <Color>FF00FF</Color>
              <VariableType>String</VariableType>
              <Length>32</Length>
              <Unicode>1</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>43</ID>
              <Description>"ID of Power 1 ====&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>3DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>44</ID>
              <Description>"Amount of Power 1"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>4</Offset>
                <Offset>3DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"ID of Power 2 ====&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>2C</Offset>
                <Offset>3DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>46</ID>
              <Description>"Amount of Power 2"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>30</Offset>
                <Offset>3DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>47</ID>
              <Description>"ID of Power 3 ====&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>58</Offset>
                <Offset>3DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>48</ID>
              <Description>"Amount of Power 3"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>5C</Offset>
                <Offset>3DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>49</ID>
              <Description>"ID of Power 3 ====&gt;"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>84</Offset>
                <Offset>3DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>50</ID>
              <Description>"Amount of Power 3"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>88</Offset>
                <Offset>3DC</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>228</ID>
      <Description>"[X] &lt;== Table/Script Information"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[enable]
define(test,LUDO)

{$LUA}
getMainForm().CommentButton.doClick()
{$ASM}

[disable]

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Recifense</Name>
      <Address>20160204</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Age of Mithology Extended Edition
 Game Version  : 2.0.953557
 Game Sponsor  : Myself
 Process Name  : aomx.exe
 Script Version: 2.1 AOB
 CE Version    : 6.5
 Release date  : 04-Feb-2016
 Author        : Recifense
 History:
 24-Dec-14: First Release for Steam (v1.10.3104)
 24-Apr-15: First Release for Steam (v1.11.3158)
 25-Apr-15: First Release for Steam (v1.11.3163)
 02-May-15: First Release for Steam (v1.11.3165)
 05-Jun-15: First Release for Steam (v1.12.647985)
 16-Jun-15: First Release for Steam (v1.12.651680)
 05-Sep-15: First Release for Steam (v1.12.761632)
 29-Jan-16: First Release for Steam (v2.0.951481) - No CRC Protection
 30-Jan-16: First Release for Steam (v2.0.953557) - +Pop (S2.0 AOB)
 04-Feb-16: Changed GM and Unlimited Pop (S2.1 AOB)
 Features:
 - Minimum Resources     [1]
 - God Mode              [2]
 - Unlimited Power Use   [3]
 - Instant Research/Age  [4]
 - Instant Construction  [5]
 - Instant Production    [6]
 - Unlimited Population  [7]
 - Some Pointers         [8]
===========================================
[1] For Human Player Only (default = 65000);
[2] Player's units/buildings Only;
[3] For Human Player Only;
[4] For Human Player Only;
[5] For Human Player Only;
[6] For Human Player Only;
[7] For Human Player Only;
[8] Used in the table;
===========================================
[USAGE]
 - Run CE 6.5;
 - Run the GAME;
 - Load game process "aomx.exe" via CE6.5;
 - Load this Table;
 - Activate the main script by clicking on its box [X];
 - Now Activate the script of each cheat you want to use;
 - Go back to the game and have fun.
===========================================
HOTKEYS:
CTRL+Home   = Enable  MR/GM cheats;
CTRL+End    = Disable MR/GM cheats;
-----------
CTRL+PageUp   = Enable  UPU/IR cheats;
CTRL+PageDown = Disable UPU/IR cheats;
-----------
CTRL+Insert = Enable  IC/IP/NUP cheats;
CTRL+Delete = Disable IC/IP/NUP cheats;
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat.
So you can always come back in case you don't like the result.
===========================================
[WARNING]
- This table is meant to be used in single player games.
===========================================
[INFO]
Tested on Win10 64bits
===========================================
Cheers!
===========================================
Some Power IDs:
2Ah (042) = LIGHTING STORM (RAYS) ok
2Bh (043) = LOCUST SWARM (ATTACK FARM) ok
2Ch (044) = TORNADO (ATTACK) ok
39h (057) = FROST (ATTACK ENEMY) ok
3Dh (061) = METEOR (ATTACK BUILDINGS) ok
54h (084) = DWARVEN MINE (PRODUCTION) ok
81h (129) = ANCESTOR (UNDEATH) ok
85h (133) = UNDER WORLD PASSAGE ok
86h (134) = RESTORATION (HEALTH) ok
92h (146) = GREAT HUNT (PRODUCTION) ok
93h (147) = CEASE FIRE ok
98h (152) = UNDERMINE (ATTACK BUILDING) ok
9Ch (156) = RAIN (FAST GATHERING) ok
ACh (172) = FIMBULWINTER (ATTACK TOWN) ok
AFh (175) = BRONZE (PROTECTION) ok
D3h (211) = PROSPERITY (FAST GOLD PRODUCTION) ok
D6h (214) = ECLIPSE (DAY INTO NIGHT) ok
DCh (220) = VISION (REVEAL MAP FOR A WHILE) ok
DDh (221) = BOLT	 (RAY) ok
DEh (222) = SPY ok
DFh (223) = FLAMING WEAPONS (ATTACK)
E2h (226) = PLAGUE OF SERPENTS (SNAKES) ok
E3h (227) = LURE (Animal Attrack) ok
E4h (228) = HEALING SPRING (HEALTH) ok
E5h (229) = CURSE (CHANGE INTO PIGS) ok
E6h (230) = SENTINEL (DEFEND) ok
E7h (231) = SHIFTING SAND (MOVE TROOP) ok
E8h (232) = CITADEL	(DEFEND) ok
E9h (233) = WALKING WOODS (ATTACK) ok
EAh (234) = RAGNAROK (CHANGING) ok
EBh (235) = NIDHOGG (DRAGON ATTACK) ok
ECh (236) = PLENTY (RESOURCES) ok
EDh (237) = SON OF OSIRIS (CHANGING) ok
EEh (239) = EARTH QUAKE (ATTACK) ok
F8h (248) = FOREST FIRE (ATTACK) ok
F9h (249) = PESTILENCE (NO PRODUCTION) ok
-------------------
0196 (406) = DECONSTRUCTION	(ATTACK BUILDING) ok
0197 (407) = CARNIVORA (ATTACK) ok
0198 (408) = TRAITOR (Convert enemy to your side) ok
0199 (409) = CHAOS (ATTACK) ok
019e (414) = SHOCKWAVE (ATTACK UNITS) ok
01a2 (418) = GAIAÂ´S FOREST (CREAT FOREST) ok
01a3 (419) = TARTARIAN GATE (ATTACK ALL) ok
01af (431) = VORTEX (TRANSPORT TROOP) ok
01b2 (434) = DECONSTRUCTION WONDER (ATTACK) ok
01b4 (436) = HESPERIDES	(ATTACK) ok
01b6 (438) = SPIDERÂ´S LAIR (ATTACK) ok
01b7 (439) = VALOR (Covert unit to hero) ok
01bA (442) = IMPLODE (ATTACK) ok
01E5 (485) = SEED OF GAIA (QUEST) ok
===========================================
</Comments>
</CheatTable>
