<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Inf Speed"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : TidesOfNumenera.exe
  Version: 
  Date   : 2017-01-01
  Author : StevenCherry

  This script does blah blah blah
}

[ENABLE]

aobscan(infspeed,48 63 40 28 89 45 90) // should be unique
alloc(newmem,$1000,1D704690)

label(code)
label(return)

newmem:
  mov [rax+28], 999
  movsxd  rax,dword ptr [rax+28]
  mov [rbp-70],eax
  jmp return
code:


infspeed:
  jmp newmem
  nop
  nop
return:
registersymbol(infspeed)

[DISABLE]

infspeed:
  db 48 63 40 28 89 45 90

unregistersymbol(infspeed)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1D704690

""+1D70465F: 72 10                             -  jb 1D704671
""+1D704661: 48 8B 43 10                       -  mov rax,[rbx+10]
""+1D704665: 48 8B 40 38                       -  mov rax,[rax+38]
""+1D704669: 48 3D 98 F0 F2 0F                 -  cmp rax,0FF2F098
""+1D70466F: 74 0B                             -  je 1D70467C
""+1D704671: 48 C7 85 78 FF FF FF 00 00 00 00  -  mov [rbp-00000088],00000000
""+1D70467C: 48 8B 85 78 FF FF FF              -  mov rax,[rbp-00000088]
""+1D704683: 48 8B 80 98 00 00 00              -  mov rax,[rax+00000098]
""+1D70468A: 48 8B C8                          -  mov rcx,rax
""+1D70468D: 83 39 00                          -  cmp dword ptr [rcx],00
// ---------- INJECTING HERE ----------
""+1D704690: 48 63 40 28                       -  movsxd  rax,dword ptr [rax+28]
""+1D704694: 89 45 90                          -  mov [rbp-70],eax
// ---------- DONE INJECTING  ----------
""+1D704697: 48 8B 86 60 02 00 00              -  mov rax,[rsi+00000260]
""+1D70469E: 48 8B C8                          -  mov rcx,rax
""+1D7046A1: 83 39 00                          -  cmp dword ptr [rcx],00
""+1D7046A4: 48 8B 80 90 00 00 00              -  mov rax,[rax+00000090]
""+1D7046AB: 48 89 85 70 FF FF FF              -  mov [rbp-00000090],rax
""+1D7046B2: 48 89 85 68 FF FF FF              -  mov [rbp-00000098],rax
""+1D7046B9: 48 85 C0                          -  test rax,rax
""+1D7046BC: 0F 84 40 00 00 00                 -  je 1D704702
""+1D7046C2: 48 8B 85 70 FF FF FF              -  mov rax,[rbp-00000090]
""+1D7046C9: 48 8B 00                          -  mov rax,[rax]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Inf Will"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : TidesOfNumenera.exe
  Version: 
  Date   : 2017-01-01
  Author : StevenCherry

  This script does blah blah blah
}

[ENABLE]

aobscan(infwill,48 63 40 28 89 45 8C) // should be unique
alloc(newmem,$1000,1D704716)

label(code)
label(return)

newmem:
  mov [rax+28], 999
  movsxd  rax,dword ptr [rax+28]
  mov [rbp-74],eax
  jmp return
code:


infwill:
  jmp newmem
  nop
  nop
return:
registersymbol(infwill)

[DISABLE]

infwill:
  db 48 63 40 28 89 45 8C

unregistersymbol(infwill)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1D704716

""+1D7046E0: 48 8B 85 70 FF FF FF              -  mov rax,[rbp-00000090]
""+1D7046E7: 48 8B 40 10                       -  mov rax,[rax+10]
""+1D7046EB: 48 8B 40 38                       -  mov rax,[rax+38]
""+1D7046EF: 48 3D 98 F0 F2 0F                 -  cmp rax,0FF2F098
""+1D7046F5: 74 0B                             -  je 1D704702
""+1D7046F7: 48 C7 85 68 FF FF FF 00 00 00 00  -  mov [rbp-00000098],00000000
""+1D704702: 48 8B 85 68 FF FF FF              -  mov rax,[rbp-00000098]
""+1D704709: 48 8B 80 A0 00 00 00              -  mov rax,[rax+000000A0]
""+1D704710: 48 8B C8                          -  mov rcx,rax
""+1D704713: 83 39 00                          -  cmp dword ptr [rcx],00
// ---------- INJECTING HERE ----------
""+1D704716: 48 63 40 28                       -  movsxd  rax,dword ptr [rax+28]
""+1D70471A: 89 45 8C                          -  mov [rbp-74],eax
// ---------- DONE INJECTING  ----------
""+1D70471D: 48 8B 86 60 02 00 00              -  mov rax,[rsi+00000260]
""+1D704724: 48 8B C8                          -  mov rcx,rax
""+1D704727: 83 39 00                          -  cmp dword ptr [rcx],00
""+1D70472A: 48 8B 80 90 00 00 00              -  mov rax,[rax+00000090]
""+1D704731: 48 89 85 60 FF FF FF              -  mov [rbp-000000A0],rax
""+1D704738: 48 89 85 58 FF FF FF              -  mov [rbp-000000A8],rax
""+1D70473F: 48 85 C0                          -  test rax,rax
""+1D704742: 0F 84 40 00 00 00                 -  je 1D704788
""+1D704748: 48 8B 85 60 FF FF FF              -  mov rax,[rbp-000000A0]
""+1D70474F: 48 8B 00                          -  mov rax,[rax]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Inf Might"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : TidesOfNumenera.exe
  Version: 
  Date   : 2017-01-01
  Author : StevenCherry

  This script does blah blah blah
}

[ENABLE]

aobscan(infMight,48 63 40 28 89 45 94) // should be unique
alloc(newmem,$1000,1D70462A)

label(code)
label(return)

newmem:
  mov [rax+28], 999
  movsxd  rax,dword ptr [rax+28]
  mov [rbp-6C],eax
  jmp return
code:


infMight:
  jmp newmem
  nop
  nop
return:
registersymbol(infMight)

[DISABLE]

infMight:
  db 48 63 40 28 89 45 94

unregistersymbol(infMight)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1D70462A

""+1D704601: 41 0F B7 45 18                    -  movzx eax,word ptr [r13+18]
""+1D704606: 48 83 F8 08                       -  cmp rax,08
""+1D70460A: 72 10                             -  jb 1D70461C
""+1D70460C: 49 8B 45 10                       -  mov rax,[r13+10]
""+1D704610: 48 8B 40 38                       -  mov rax,[rax+38]
""+1D704614: 48 3D 98 F0 F2 0F                 -  cmp rax,0FF2F098
""+1D70461A: 74 03                             -  je 1D70461F
""+1D70461C: 45 33 E4                          -  xor r12d,r12d
""+1D70461F: 49 8B 84 24 90 00 00 00           -  mov rax,[r12+00000090]
""+1D704627: 83 38 00                          -  cmp dword ptr [rax],00
// ---------- INJECTING HERE ----------
""+1D70462A: 48 63 40 28                       -  movsxd  rax,dword ptr [rax+28]
""+1D70462E: 89 45 94                          -  mov [rbp-6C],eax
// ---------- DONE INJECTING  ----------
""+1D704631: 48 8B 86 60 02 00 00              -  mov rax,[rsi+00000260]
""+1D704638: 48 8B C8                          -  mov rcx,rax
""+1D70463B: 83 39 00                          -  cmp dword ptr [rcx],00
""+1D70463E: 48 8B 98 90 00 00 00              -  mov rbx,[rax+00000090]
""+1D704645: 48 89 9D 78 FF FF FF              -  mov [rbp-00000088],rbx
""+1D70464C: 48 85 DB                          -  test rbx,rbx
""+1D70464F: 74 2B                             -  je 1D70467C
""+1D704651: 48 8B 03                          -  mov rax,[rbx]
""+1D704654: 48 8B 18                          -  mov rbx,[rax]
""+1D704657: 0F B7 43 18                       -  movzx eax,word ptr [rbx+18]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_points</Name>
      <Address>3AA30FA2</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
