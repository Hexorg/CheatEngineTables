<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Money"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(money)
registersymbol(money)
registersymbol(AOB)
aobscan(AOB, 89 48 40 8D 65 F8 5E 5F)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[money]
originalcode:
mov [eax+40],ecx
lea esp,[ebp-08]

exit:
jmp returnhere

money:
dd 5F5E0FF//999.999.99

AOB:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
AOB:
db 89 48 40 8D 65 F8
unregistersymbol(money)
unregistersymbol(AOB)

</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>77</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Changes money each buy</Description>
      <Address>0B9B36B0</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>E4</Byte>
        <Byte>89</Byte>
        <Byte>50</Byte>
        <Byte>44</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>65</Byte>
        <Byte>F8</Byte>
        <Byte>5E</Byte>
        <Byte>5F</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
