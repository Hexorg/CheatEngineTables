<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>147</ID>
      <Description>"Godmode"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Solus-Win64-Shipping.exe
  Version: 
  Date   : 2016-06-09
  Author : H47cH
}

define(addresssub,"Solus-Win64-Shipping.exe"+176277)
define(bytessub,44 29 07 39 0F)
define(address,"Solus-Win64-Shipping.exe"+17628A)
define(bytes,89 07 4C 8B CF)

[ENABLE]
assert(addresssub,bytessub)
assert(address,bytes)
alloc(newmemsub,$1000,"Solus-Win64-Shipping.exe"+176277)
alloc(newmem,$1000,"Solus-Win64-Shipping.exe"+17628A)

label(codesub)
label(returnsub)
label(code)
label(return)

newmemsub:

codesub:
  nop
  nop
  nop
  cmp [rdi],ecx
  jmp returnsub

addresssub:
  jmp codesub
returnsub:

newmem:

code:
  //mov eax,0
  //mov [rdi],eax
  nop
  nop
  mov r9,rdi
  jmp return

address:
  jmp code
return:

[DISABLE]

addresssub:
  db bytessub
  // sub [rdi],r8d
  // cmp [rdi],ecx

dealloc(newmemsub)

address:
  db bytes
  // mov [rdi],eax
  // mov r9,rdi

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Solus-Win64-Shipping.exe"+17628A

"Solus-Win64-Shipping.exe"+176267: 44 0F 4E C1              -  cmovle r8d,ecx
"Solus-Win64-Shipping.exe"+17626B: 44 89 44 24 40           -  mov [rsp+40],r8d
"Solus-Win64-Shipping.exe"+176270: 48 8D BB 58 07 00 00     -  lea rdi,[rbx+00000758]
// ---------- INJECTING HERE ----------
"Solus-Win64-Shipping.exe"+176277: 44 29 07                 -  sub [rdi],r8d
"Solus-Win64-Shipping.exe"+17627A: 39 0F                    -  cmp [rdi],ecx
// ---------- DONE INJECTING  ----------
"Solus-Win64-Shipping.exe"+17627C: 7D 02                    -  jnl Solus-Win64-Shipping.exe+176280
"Solus-Win64-Shipping.exe"+17627E: 89 0F                    -  mov [rdi],ecx
"Solus-Win64-Shipping.exe"+176280: 8B 83 5C 07 00 00        -  mov eax,[rbx+0000075C]
"Solus-Win64-Shipping.exe"+176286: 39 07                    -  cmp [rdi],eax
"Solus-Win64-Shipping.exe"+176288: 7E 02                    -  jle Solus-Win64-Shipping.exe+17628C
// ---------- INJECTING HERE ----------
"Solus-Win64-Shipping.exe"+17628A: 89 07                    -  mov [rdi],eax
"Solus-Win64-Shipping.exe"+17628C: 4C 8B CF                 -  mov r9,rdi
// ---------- DONE INJECTING  ----------
"Solus-Win64-Shipping.exe"+17628F: 4C 8D 44 24 40           -  lea r8,[rsp+40]
"Solus-Win64-Shipping.exe"+176294: 8B D6                    -  mov edx,esi
"Solus-Win64-Shipping.exe"+176296: 48 8B CB                 -  mov rcx,rbx
"Solus-Win64-Shipping.exe"+176299: E8 42 DC 02 00           -  call Solus-Win64-Shipping.exe+1A3EE0
"Solus-Win64-Shipping.exe"+17629E: 66 0F 6E 07              -  movd xmm0,[rdi]
"Solus-Win64-Shipping.exe"+1762A2: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"Solus-Win64-Shipping.exe"+1762A7: 48 8B 74 24 38           -  mov rsi,[rsp+38]
"Solus-Win64-Shipping.exe"+1762AC: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"Solus-Win64-Shipping.exe"+1762AF: 48 83 C4 20              -  add rsp,20
"Solus-Win64-Shipping.exe"+1762B3: 5F                       -  pop rdi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Body temp - (37.5°C/99.5°F)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Solus-Win64-Shipping.exe
  Version: 
  Date   : 2016-06-09
  Author : H47cH
}

define(address,"Solus-Win64-Shipping.exe"+148626)
define(bytes,F3 0F 11 B0 B0 62 03 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Solus-Win64-Shipping.exe"+148626)

label(code)
label(return)
label(temp)

newmem:

code:
  movss xmm6, [temp]
  movss [rax+000362B0],xmm6
  jmp return

temp:
dq (float)37.5

address:
  jmp code
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movss [rax+000362B0],xmm6

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Solus-Win64-Shipping.exe"+148626

"Solus-Win64-Shipping.exe"+14860C: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14860D: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14860E: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14860F: CC                       -  int 3
"Solus-Win64-Shipping.exe"+148610: 48 83 EC 38              -  sub rsp,38
"Solus-Win64-Shipping.exe"+148614: 0F 29 74 24 20           -  movaps [rsp+20],xmm6
"Solus-Win64-Shipping.exe"+148619: 0F 28 F0                 -  movaps xmm6,xmm0
"Solus-Win64-Shipping.exe"+14861C: E8 1F 84 01 00           -  call Solus-Win64-Shipping.exe+160A40
"Solus-Win64-Shipping.exe"+148621: 48 85 C0                 -  test rax,rax
"Solus-Win64-Shipping.exe"+148624: 74 08                    -  je Solus-Win64-Shipping.exe+14862E
// ---------- INJECTING HERE ----------
"Solus-Win64-Shipping.exe"+148626: F3 0F 11 B0 B0 62 03 00  -  movss [rax+000362B0],xmm6
// ---------- DONE INJECTING  ----------
"Solus-Win64-Shipping.exe"+14862E: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"Solus-Win64-Shipping.exe"+148633: 48 83 C4 38              -  add rsp,38
"Solus-Win64-Shipping.exe"+148637: C3                       -  ret
"Solus-Win64-Shipping.exe"+148638: CC                       -  int 3
"Solus-Win64-Shipping.exe"+148639: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14863A: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14863B: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14863C: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14863D: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14863E: CC                       -  int 3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Body temp - ONLY if you want to nullify the variations or keep a temp fixed."</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Solus-Win64-Shipping.exe
  Version: 
  Date   : 2016-06-09
  Author : H47cH
}

define(address,"Solus-Win64-Shipping.exe"+148626)
define(bytes,F3 0F 11 B0 B0 62 03 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Solus-Win64-Shipping.exe"+148626)

label(code)
label(return)

newmem:

code:
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  jmp return

address:
  jmp code
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movss [rax+000362B0],xmm6

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Solus-Win64-Shipping.exe"+148626

"Solus-Win64-Shipping.exe"+14860C: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14860D: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14860E: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14860F: CC                       -  int 3
"Solus-Win64-Shipping.exe"+148610: 48 83 EC 38              -  sub rsp,38
"Solus-Win64-Shipping.exe"+148614: 0F 29 74 24 20           -  movaps [rsp+20],xmm6
"Solus-Win64-Shipping.exe"+148619: 0F 28 F0                 -  movaps xmm6,xmm0
"Solus-Win64-Shipping.exe"+14861C: E8 1F 84 01 00           -  call Solus-Win64-Shipping.exe+160A40
"Solus-Win64-Shipping.exe"+148621: 48 85 C0                 -  test rax,rax
"Solus-Win64-Shipping.exe"+148624: 74 08                    -  je Solus-Win64-Shipping.exe+14862E
// ---------- INJECTING HERE ----------
"Solus-Win64-Shipping.exe"+148626: F3 0F 11 B0 B0 62 03 00  -  movss [rax+000362B0],xmm6
// ---------- DONE INJECTING  ----------
"Solus-Win64-Shipping.exe"+14862E: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"Solus-Win64-Shipping.exe"+148633: 48 83 C4 38              -  add rsp,38
"Solus-Win64-Shipping.exe"+148637: C3                       -  ret
"Solus-Win64-Shipping.exe"+148638: CC                       -  int 3
"Solus-Win64-Shipping.exe"+148639: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14863A: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14863B: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14863C: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14863D: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14863E: CC                       -  int 3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"Hunger (CAL)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Solus-Win64-Shipping.exe
  Version: 
  Date   : 2016-06-09
  Author : H47cH
}

define(address,"Solus-Win64-Shipping.exe"+148726)
define(bytes,F3 0F 11 B0 B8 62 03 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Solus-Win64-Shipping.exe"+148726)

label(code)
label(return)

newmem:

code:
  addss xmm6,xmm6
  movss [rax+000362B8],xmm6
  jmp return

address:
  jmp code
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movss [rax+000362B8],xmm6

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Solus-Win64-Shipping.exe"+148726

"Solus-Win64-Shipping.exe"+14870C: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14870D: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14870E: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14870F: CC                       -  int 3
"Solus-Win64-Shipping.exe"+148710: 48 83 EC 38              -  sub rsp,38
"Solus-Win64-Shipping.exe"+148714: 0F 29 74 24 20           -  movaps [rsp+20],xmm6
"Solus-Win64-Shipping.exe"+148719: 0F 28 F0                 -  movaps xmm6,xmm0
"Solus-Win64-Shipping.exe"+14871C: E8 1F 83 01 00           -  call Solus-Win64-Shipping.exe+160A40
"Solus-Win64-Shipping.exe"+148721: 48 85 C0                 -  test rax,rax
"Solus-Win64-Shipping.exe"+148724: 74 08                    -  je Solus-Win64-Shipping.exe+14872E
// ---------- INJECTING HERE ----------
"Solus-Win64-Shipping.exe"+148726: F3 0F 11 B0 B8 62 03 00  -  movss [rax+000362B8],xmm6
// ---------- DONE INJECTING  ----------
"Solus-Win64-Shipping.exe"+14872E: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"Solus-Win64-Shipping.exe"+148733: 48 83 C4 38              -  add rsp,38
"Solus-Win64-Shipping.exe"+148737: C3                       -  ret
"Solus-Win64-Shipping.exe"+148738: CC                       -  int 3
"Solus-Win64-Shipping.exe"+148739: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14873A: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14873B: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14873C: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14873D: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14873E: CC                       -  int 3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"Water (hydrating)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Solus-Win64-Shipping.exe
  Version: 
  Date   : 2016-06-09
  Author : H47cH
}

define(address,"Solus-Win64-Shipping.exe"+1489A6)
define(bytes,F3 0F 11 B0 BC 62 03 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Solus-Win64-Shipping.exe"+1489A6)

label(code)
label(return)

newmem:

code:
  addss xmm6,xmm6
  movss [rax+000362BC],xmm6
  jmp return

address:
  jmp code
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movss [rax+000362BC],xmm6

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Solus-Win64-Shipping.exe"+1489A6

"Solus-Win64-Shipping.exe"+14898C: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14898D: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14898E: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14898F: CC                       -  int 3
"Solus-Win64-Shipping.exe"+148990: 48 83 EC 38              -  sub rsp,38
"Solus-Win64-Shipping.exe"+148994: 0F 29 74 24 20           -  movaps [rsp+20],xmm6
"Solus-Win64-Shipping.exe"+148999: 0F 28 F0                 -  movaps xmm6,xmm0
"Solus-Win64-Shipping.exe"+14899C: E8 9F 80 01 00           -  call Solus-Win64-Shipping.exe+160A40
"Solus-Win64-Shipping.exe"+1489A1: 48 85 C0                 -  test rax,rax
"Solus-Win64-Shipping.exe"+1489A4: 74 08                    -  je Solus-Win64-Shipping.exe+1489AE
// ---------- INJECTING HERE ----------
"Solus-Win64-Shipping.exe"+1489A6: F3 0F 11 B0 BC 62 03 00  -  movss [rax+000362BC],xmm6
// ---------- DONE INJECTING  ----------
"Solus-Win64-Shipping.exe"+1489AE: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"Solus-Win64-Shipping.exe"+1489B3: 48 83 C4 38              -  add rsp,38
"Solus-Win64-Shipping.exe"+1489B7: C3                       -  ret
"Solus-Win64-Shipping.exe"+1489B8: CC                       -  int 3
"Solus-Win64-Shipping.exe"+1489B9: CC                       -  int 3
"Solus-Win64-Shipping.exe"+1489BA: CC                       -  int 3
"Solus-Win64-Shipping.exe"+1489BB: CC                       -  int 3
"Solus-Win64-Shipping.exe"+1489BC: CC                       -  int 3
"Solus-Win64-Shipping.exe"+1489BD: CC                       -  int 3
"Solus-Win64-Shipping.exe"+1489BE: CC                       -  int 3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>38</ID>
      <Description>"Sleep Time"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Solus-Win64-Shipping.exe
  Version: 
  Date   : 2016-06-09
  Author : H47cH
}

define(address,"Solus-Win64-Shipping.exe"+148846)
define(bytes,F3 0F 11 B0 C0 62 03 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Solus-Win64-Shipping.exe"+148846)

label(code)
label(return)

newmem:

code:
  addss xmm6,xmm6
  movss [rax+000362C0],xmm6
  jmp return

address:
  jmp code
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movss [rax+000362C0],xmm6

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Solus-Win64-Shipping.exe"+148846

"Solus-Win64-Shipping.exe"+14882C: 5B                       -  pop rbx
"Solus-Win64-Shipping.exe"+14882D: C3                       -  ret
"Solus-Win64-Shipping.exe"+14882E: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14882F: CC                       -  int 3
"Solus-Win64-Shipping.exe"+148830: 48 83 EC 38              -  sub rsp,38
"Solus-Win64-Shipping.exe"+148834: 0F 29 74 24 20           -  movaps [rsp+20],xmm6
"Solus-Win64-Shipping.exe"+148839: 0F 28 F0                 -  movaps xmm6,xmm0
"Solus-Win64-Shipping.exe"+14883C: E8 FF 81 01 00           -  call Solus-Win64-Shipping.exe+160A40
"Solus-Win64-Shipping.exe"+148841: 48 85 C0                 -  test rax,rax
"Solus-Win64-Shipping.exe"+148844: 74 08                    -  je Solus-Win64-Shipping.exe+14884E
// ---------- INJECTING HERE ----------
"Solus-Win64-Shipping.exe"+148846: F3 0F 11 B0 C0 62 03 00  -  movss [rax+000362C0],xmm6
// ---------- DONE INJECTING  ----------
"Solus-Win64-Shipping.exe"+14884E: 0F 28 74 24 20           -  movaps xmm6,[rsp+20]
"Solus-Win64-Shipping.exe"+148853: 48 83 C4 38              -  add rsp,38
"Solus-Win64-Shipping.exe"+148857: C3                       -  ret
"Solus-Win64-Shipping.exe"+148858: CC                       -  int 3
"Solus-Win64-Shipping.exe"+148859: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14885A: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14885B: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14885C: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14885D: CC                       -  int 3
"Solus-Win64-Shipping.exe"+14885E: CC                       -  int 3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>79</ID>
      <Description>"Inf inventory (Activate. Drop 1 thing and get it back)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Solus-Win64-Shipping.exe
  Version: 
  Date   : 2016-06-09
  Author : H47cH
}

define(address,"Solus-Win64-Shipping.exe"+16D1A6)
define(bytes,41 FF 8E A0 68 03 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"Solus-Win64-Shipping.exe"+16D1A6)

label(code)
label(return)

newmem:

code:
  mov [r14+000368A0],1
  jmp return

address:
  jmp code
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // dec [r14+000368A0]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Solus-Win64-Shipping.exe"+16D1A6

"Solus-Win64-Shipping.exe"+16D171: E8 7A 8C FF FF                    -  call Solus-Win64-Shipping.exe+165DF0
"Solus-Win64-Shipping.exe"+16D176: 40 0F B6 C5                       -  movzx eax,bpl
"Solus-Win64-Shipping.exe"+16D17A: 41 3B 86 A4 67 03 00              -  cmp eax,[r14+000367A4]
"Solus-Win64-Shipping.exe"+16D181: 75 0B                             -  jne Solus-Win64-Shipping.exe+16D18E
"Solus-Win64-Shipping.exe"+16D183: 41 C7 86 A4 67 03 00 FF FF FF FF  -  mov [r14+000367A4],FFFFFFFF
"Solus-Win64-Shipping.exe"+16D18E: 48 8B 5C 24 50                    -  mov rbx,[rsp+50]
"Solus-Win64-Shipping.exe"+16D193: 48 8B 7C 24 58                    -  mov rdi,[rsp+58]
"Solus-Win64-Shipping.exe"+16D198: 80 BE 08 03 00 00 00              -  cmp byte ptr [rsi+00000308],00
"Solus-Win64-Shipping.exe"+16D19F: 4C 8B 7C 24 60                    -  mov r15,[rsp+60]
"Solus-Win64-Shipping.exe"+16D1A4: 75 07                             -  jne Solus-Win64-Shipping.exe+16D1AD
// ---------- INJECTING HERE ----------
"Solus-Win64-Shipping.exe"+16D1A6: 41 FF 8E A0 68 03 00              -  dec [r14+000368A0]
// ---------- DONE INJECTING  ----------
"Solus-Win64-Shipping.exe"+16D1AD: 41 C6 45 00 01                    -  mov byte ptr [r13+00],01
"Solus-Win64-Shipping.exe"+16D1B2: 48 8B C6                          -  mov rax,rsi
"Solus-Win64-Shipping.exe"+16D1B5: 48 83 C4 20                       -  add rsp,20
"Solus-Win64-Shipping.exe"+16D1B9: 41 5E                             -  pop r14
"Solus-Win64-Shipping.exe"+16D1BB: 41 5D                             -  pop r13
"Solus-Win64-Shipping.exe"+16D1BD: 41 5C                             -  pop r12
"Solus-Win64-Shipping.exe"+16D1BF: 5E                                -  pop rsi
"Solus-Win64-Shipping.exe"+16D1C0: 5D                                -  pop rbp
"Solus-Win64-Shipping.exe"+16D1C1: C3                                -  ret
"Solus-Win64-Shipping.exe"+16D1C2: 33 C0                             -  xor eax,eax
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of sub [rdi],r8d</Description>
      <Address>13F626277</Address>
      <ModuleName>Solus-Win64-Shipping.exe</ModuleName>
      <ModuleNameOffset>176277</ModuleNameOffset>
      <Before>
        <Byte>BB</Byte>
        <Byte>58</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>29</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>39</Byte>
        <Byte>0F</Byte>
        <Byte>7D</Byte>
        <Byte>02</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
