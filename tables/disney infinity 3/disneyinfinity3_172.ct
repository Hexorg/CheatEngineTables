<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>43</ID>
      <Description>"enable"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
{$lua}
OpenProcess("DisneyInfinity3.exe")
{$asm}
aobscanmodule(rescourcesReadReadRetAOB,DisneyInfinity3.exe,8B 54 24 08 50 52 8B CE E8 ** ** ** ** 5E C2 0C 00)
registersymbol(rescourcesReadReadRetAOB)
/*
multiple results, should be the first one. included the call section just in case
DisneyInfinity3.exe+10B3A70 - 8B 44 24 0C           - mov eax,[esp+0C]
DisneyInfinity3.exe+10B3A74 - 56                    - push esi
DisneyInfinity3.exe+10B3A75 - 8B F1                 - mov esi,ecx
DisneyInfinity3.exe+10B3A77 - 8B 4C 24 0C           - mov ecx,[esp+0C]
DisneyInfinity3.exe+10B3A7B - 50                    - push eax
DisneyInfinity3.exe+10B3A7C - 51                    - push ecx
DisneyInfinity3.exe+10B3A7D - 8B CE                 - mov ecx,esi
DisneyInfinity3.exe+10B3A7F - E8 AC4AFEFF           - call DisneyInfinity3.exe+1098530
DisneyInfinity3.exe+10B3A84 - 8B 54 24 08           - mov edx,[esp+08]
DisneyInfinity3.exe+10B3A88 - 50                    - push eax
DisneyInfinity3.exe+10B3A89 - 52                    - push edx
DisneyInfinity3.exe+10B3A8A - 8B CE                 - mov ecx,esi
DisneyInfinity3.exe+10B3A8C - E8 7F6AFFFF           - call DisneyInfinity3.exe+10AA510
&gt;&gt;&gt;DisneyInfinity3.exe+10B3A91 - 5E                    - pop esi
DisneyInfinity3.exe+10B3A92 - C2 0C00               - ret 000C { 12 }
*/
label(pRescourcesReadReadRet)
registersymbol(pRescourcesReadReadRet)

rescourcesReadReadRetAOB+d:
pRescourcesReadReadRet:

///

aobscanmodule(sparksReadRet2AOB,DisneyInfinity3.exe,8B 10 8B C8 8B 42 60 FF D0 8B D8 5F 5E 8B C3 5B 83 C4 10 C3)
registersymbol(sparksReadRet2AOB)

label(pSprksReadRet2)
registersymbol(pSprksReadRet2)

sparksReadRet2AOB+9:
pSprksReadRet2:

///

aobscanmodule(coinsReadRet2AOB,DisneyInfinity3.exe,8B 0D ** ** ** ** 55 68 ** ** ** ** 8B F8)
registersymbol(coinsReadRet2AOB)

label(pCoinsReadRet2)
registersymbol(pCoinsReadRet2)

coinsReadRet2AOB:
pCoinsReadRet2:

///

aobscanmodule(someRead1AOB,DisneyInfinity3.exe,F2 0F 2C 41 48 C3)
registersymbol(someRead1AOB)

label(pRescources)
registersymbol(pRescources)
label(pSparks)
registersymbol(pSparks)
label(pCoins)
registersymbol(pCoins)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+4],pRescourcesReadReadRet //"DisneyInfinity3.exe"+10B3A91
jne @f
mov [pRescources],ecx
jmp originalcode
@@:
cmp [esp],pSprksReadRet2 //"DisneyInfinity3.exe"+10B4BEC
jne @f
mov [pSparks],ecx
@@:
cmp [esp+4],pCoinsReadRet2 //"DisneyInfinity3.exe"+BBB716
jne @f
mov [pCoins],ecx
@@:

originalcode:
cvttsd2si eax,[ecx+48]

exit:
jmp returnhere

///
pRescources:
dd 0
pSparks:
dd 0
pCoins:
dd 0
///

someRead1AOB: //"DisneyInfinity3.exe"+108C010:
jmp newmem
returnhere:

///********************************************///

aobscanmodule(playerHealthReadAOB,DisneyInfinity3.exe,F3 0F 10 40 08 F3 0F 5E 40 0C 0F 2F C8 77)
registersymbol(playerHealthReadAOB)

label(pPlayer)
registersymbol(pPlayer)
label(pPlayerBase)
registersymbol(pPlayerBase)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
push (float)150
movss xmm0,[eax+c]
comiss xmm0,[esp]
jl @f
mov [pPlayer],eax
mov [pPlayerBase],edx
@@:
add esp,4
popfd

originalcode2:
movss xmm0,[eax+08]

exit2:
jmp returnhere2

///
pPlayer:
dd 0
pPlayerBase:
dd 0
///

playerHealthReadAOB: //"DisneyInfinity3.exe"+113020E:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
someRead1AOB: //"DisneyInfinity3.exe"+108C010:
db F2 0F 2C 41 48
//Alt: cvttsd2si eax,[ecx+48]

unregistersymbol(pRescources)
unregistersymbol(pSparks)
unregistersymbol(pCoins)

///********************************************///

dealloc(newmem2)
playerHealthReadAOB: //"DisneyInfinity3.exe"+113020E:
db F3 0F 10 40 08
//Alt: movss xmm0,[eax+08]

unregistersymbol(pPlayer)
unregistersymbol(pPlayerBase)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
          <ActivateSound TTS="EN">table enabled</ActivateSound>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>36</ID>
          <Description>"undead"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(healthCalOnHitAOB,DisneyInfinity3.exe,F3 0F 10 4E 0C 0F 2F C1 57)
registersymbol(healthCalOnHitAOB)

label(fMinHealth)
registersymbol(fMinHealth)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//cmp [esi+18],0
//je @f
//cmp [esi+2c],0
//jne @f
//cmp [esi+30],0
//jne @f
cmp [pPlayer],esi
jne @f
//mov [pPlayer],esi
comiss xmm0,[fMinHealth]
jae originalcode
movss xmm0,[fMinHealth]

@@:

originalcode:
movss xmm1,[esi+0C]

exit:
jmp returnhere

///
fMinHealth:
dd (float)1
///

healthCalOnHitAOB: //"DisneyInfinity3.exe"+147A26B:
jmp newmem
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthCalOnHitAOB: //"DisneyInfinity3.exe"+147A26B:
db F3 0F 10 4E 0C
//Alt: movss xmm1,[esi+0C]

unregistersymbol(fMinHealth)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
              <ActivateSound TTS="EN">{MRDescription} Activated</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>75</ID>
          <Description>"walk / sprint key (alt / mmb)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(walkspeed,(float)0.3)
define(sprintspeed,(float)2)

aobscanmodule(yAnalogWriteOnStartAOB,DisneyInfinity3.exe,F3 0F 11 80 98 02 00 00 8B 4E 0C)
registersymbol(yAnalogWriteOnStartAOB)

label(fCustMoveSpeed)
registersymbol(fCustMoveSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode:
movss [eax+00000298],xmm0

exit:
jmp returnhere

///
fCustMoveSpeed:
dd (float)1
///

yAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899BB0:
jmp newmem
nop
nop
nop
returnhere:

///*************************************************///

aobscanmodule(yAnalogWriteOnMovingAOB,DisneyInfinity3.exe,F3 0F 10 44 24 08 F3 0F 11 80 98 02 00 00 C2 0C 00)
registersymbol(yAnalogWriteOnMovingAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode2:
movss [eax+00000298],xmm0

exit2:
jmp returnhere2

///

yAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892CC9:
jmp newmem2
nop
nop
nop
returnhere2:

///*************************************************///

aobscanmodule(xAnalogWriteOnStartAOB,DisneyInfinity3.exe,F3 0F 11 80 9C 02 00 00 8B 4E 0C)
registersymbol(xAnalogWriteOnStartAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode6:
movss [eax+0000029C],xmm0

exit6:
jmp returnhere6

///

xAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899CB0:
jmp newmem6
nop
nop
nop
returnhere6:

///*************************************************///

aobscanmodule(xAnalogWriteOnMovingAOB,DisneyInfinity3.exe,F3 0F 10 44 24 08 F3 0F 11 80 9C 02 00 00 C2 0C 00)
registersymbol(xAnalogWriteOnMovingAOB)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode11:
movss [eax+0000029C],xmm0

exit11:
jmp returnhere11

///

xAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892D09:
jmp newmem11
nop
nop
nop
returnhere11:

///*************************************************///

aobscanmodule(onHealthReadRetAOB,DisneyInfinity3.exe,F3 0F 10 44 24 08 F3 0F 11 46 18 5F 5E 83 C4 08)
registersymbol(onHealthReadRetAOB)

label(fWalkSpeed)
registersymbol(fWalkSpeed)
label(fSprintSpeed)
registersymbol(fSprintSpeed)

alloc(newmem17,2048)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
pushad

push 12 //ALT key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
jne @f
fld dword ptr [fWalkSpeed]
fstp dword ptr [fCustMoveSpeed]
popad
popfd
jmp originalcode17

@@:
push 04 //Middle mouse button (three-button mouse)
call GetAsyncKeyState
shr ax,#15
cmp ax,1
jne @f
fld dword ptr [fSprintSpeed]
fstp dword ptr [fCustMoveSpeed]
popad
popfd
jmp originalcode17

@@:
fld1
fstp dword ptr [fCustMoveSpeed]
popad
popfd

originalcode17:
pop edi
pop esi
add esp,08

exit17:
jmp returnhere17

///
fWalkSpeed:
dd walkspeed
fSprintSpeed:
dd sprintspeed
///

onHealthReadRetAOB+b: //"DisneyInfinity3.exe"+113043F:
jmp newmem17
returnhere17:

///*************************************************///

aobscanmodule(moveSpeedLimitCheckAOB,DisneyInfinity3.exe,0F 28 C1 F3 0F 59 44 24 10 0F 2F D0)
registersymbol(moveSpeedLimitCheckAOB)

alloc(newmem24,2048)
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm1,[fSprintSpeed]

originalcode24:
mulss xmm0,[esp+10]

exit24:
jmp returnhere24

///

moveSpeedLimitCheckAOB+3: //"DisneyInfinity3.exe"+898D82:
jmp newmem24
nop
returnhere24:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
yAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899BB0:
db F3 0F 11 80 98 02 00 00
//Alt: movss [eax+00000298],xmm0

unregistersymbol(fCustMoveSpeed)

///*************************************************///

dealloc(newmem2)
yAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892CC9:
db F3 0F 11 80 98 02 00 00
//Alt: movss [eax+00000298],xmm0

///*************************************************///

dealloc(newmem6)
xAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899CB0:
db F3 0F 11 80 9C 02 00 00
//Alt: movss [eax+0000029C],xmm0

///*************************************************///

//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
xAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892D09:
db F3 0F 11 80 9C 02 00 00
//Alt: movss [eax+0000029C],xmm0

///*************************************************///

dealloc(newmem17)
onHealthReadRetAOB+b: //"DisneyInfinity3.exe"+113043F:
db 5F 5E 83 C4 08
//Alt: pop edi
//Alt: pop esi
//Alt: add esp,08

unregistersymbol(fWalkSpeed)
unregistersymbol(fSprintSpeed)

///*************************************************///

dealloc(newmem24)
moveSpeedLimitCheckAOB+3: //"DisneyInfinity3.exe"+898D82:
db F3 0F 59 44 24 10
//Alt: mulss xmm0,[esp+10]
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <ID>0</ID>
              <ActivateSound TTS="EN">additional movement keys Activated</ActivateSound>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>80</ID>
              <Description>"walk speed"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>fWalkSpeed</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>81</ID>
              <Description>"sprint speed"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>fSprintSpeed</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"health"</Description>
          <Color>0000FF</Color>
          <VariableType>Float</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>8</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>84</Key>
              </Keys>
              <Value>(health max)</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">health replenished</ActivateSound>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>40</ID>
              <Description>"health max"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>+4</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"coins"</Description>
          <Color>0000FF</Color>
          <VariableType>Double</VariableType>
          <Address>pCoins</Address>
          <Offsets>
            <Offset>48</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"rescources"</Description>
          <Color>0000FF</Color>
          <VariableType>Double</VariableType>
          <Address>pRescources</Address>
          <Offsets>
            <Offset>48</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"sparks"</Description>
          <Color>0000FF</Color>
          <VariableType>Double</VariableType>
          <Address>pSparks</Address>
          <Offsets>
            <Offset>48</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation Allow Increase</Action>
              <Keys>
                <Key>120</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"pPlayerBase"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>808080</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>0</ByteLength>
          <Address>pPlayerBase</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>82</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>45</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>0E6F1A67</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1E000F04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1E004204</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1E00B384</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1E00B884</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1E00C504</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1E00DF44</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1E00CA04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1E00DCC4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1F8593C0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1FD2E299</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp edx,edi
jne originalcode
mov eax,[edx+04]

originalcode:
mov eax,[edx+04]
push ecx
push eax

exit:
jmp returnhere

///

"DisneyInfinity3.exe"+11301F6:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DisneyInfinity3.exe"+11301F6:
db 8B 42 04 51 50
//Alt: mov eax,[edx+04]
//Alt: push ecx
//Alt: push eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>200FEF18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"No description"</Description>
          <VariableType>Float</VariableType>
          <Address>200FEF1c</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(yAnalogWriteOnStartAOB,DisneyInfinity3.exe,F3 0F 11 80 98 02 00 00 8B 4E 0C)
registersymbol(yAnalogWriteOnStartAOB)

label(fCustMoveSpeed)
registersymbol(fCustMoveSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode:
movss [eax+00000298],xmm0

exit:
jmp returnhere

///
fCustMoveSpeed:
dd (float)0.3
///

yAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899BB0:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
yAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899BB0:
db F3 0F 11 80 98 02 00 00
//Alt: movss [eax+00000298],xmm0

unregistersymbol(fCustMoveSpeed)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(yAnalogWriteOnMovingAOB,DisneyInfinity3.exe,F3 0F 10 44 24 08 F3 0F 11 80 98 02 00 00 C2 0C 00)
registersymbol(yAnalogWriteOnMovingAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode2:
movss [eax+00000298],xmm0

exit2:
jmp returnhere2

///

yAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892CC9:
jmp newmem2
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
yAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892CC9:
db F3 0F 11 80 98 02 00 00
//Alt: movss [eax+00000298],xmm0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>72</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(xAnalogWriteOnStartAOB,DisneyInfinity3.exe,F3 0F 11 80 9C 02 00 00 8B 4E 0C)
registersymbol(xAnalogWriteOnStartAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode6:
movss [eax+0000029C],xmm0

exit6:
jmp returnhere6

///

xAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899CB0:
jmp newmem6
nop
nop
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
xAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899CB0:
db F3 0F 11 80 9C 02 00 00
//Alt: movss [eax+0000029C],xmm0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(xAnalogWriteOnMovingAOB,DisneyInfinity3.exe,F3 0F 10 44 24 08 F3 0F 11 80 9C 02 00 00 C2 0C 00)
registersymbol(xAnalogWriteOnMovingAOB)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode11:
movss [eax+0000029C],xmm0

exit11:
jmp returnhere11

///

xAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892D09:
jmp newmem11
nop
nop
nop
returnhere11:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
xAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892D09:
db F3 0F 11 80 9C 02 00 00
//Alt: movss [eax+0000029C],xmm0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"walk"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(yAnalogWriteOnStartAOB,DisneyInfinity3.exe,F3 0F 11 80 98 02 00 00 8B 4E 0C)
registersymbol(yAnalogWriteOnStartAOB)

label(fCustMoveSpeed)
registersymbol(fCustMoveSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode:
movss [eax+00000298],xmm0

exit:
jmp returnhere

///
fCustMoveSpeed:
dd (float)0.3
///

yAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899BB0:
jmp newmem
nop
nop
nop
returnhere:

///*************************************************///

aobscanmodule(yAnalogWriteOnMovingAOB,DisneyInfinity3.exe,F3 0F 10 44 24 08 F3 0F 11 80 98 02 00 00 C2 0C 00)
registersymbol(yAnalogWriteOnMovingAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode2:
movss [eax+00000298],xmm0

exit2:
jmp returnhere2

///

yAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892CC9:
jmp newmem2
nop
nop
nop
returnhere2:

///*************************************************///

aobscanmodule(xAnalogWriteOnStartAOB,DisneyInfinity3.exe,F3 0F 11 80 9C 02 00 00 8B 4E 0C)
registersymbol(xAnalogWriteOnStartAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode6:
movss [eax+0000029C],xmm0

exit6:
jmp returnhere6

///

xAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899CB0:
jmp newmem6
nop
nop
nop
returnhere6:

///*************************************************///

aobscanmodule(xAnalogWriteOnMovingAOB,DisneyInfinity3.exe,F3 0F 10 44 24 08 F3 0F 11 80 9C 02 00 00 C2 0C 00)
registersymbol(xAnalogWriteOnMovingAOB)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[fCustMoveSpeed]

originalcode11:
movss [eax+0000029C],xmm0

exit11:
jmp returnhere11

///

xAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892D09:
jmp newmem11
nop
nop
nop
returnhere11:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
yAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899BB0:
db F3 0F 11 80 98 02 00 00
//Alt: movss [eax+00000298],xmm0

unregistersymbol(fCustMoveSpeed)

///*************************************************///

dealloc(newmem2)
yAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892CC9:
db F3 0F 11 80 98 02 00 00
//Alt: movss [eax+00000298],xmm0

///*************************************************///

dealloc(newmem6)
xAnalogWriteOnStartAOB: //"DisneyInfinity3.exe"+899CB0:
db F3 0F 11 80 9C 02 00 00
//Alt: movss [eax+0000029C],xmm0

///*************************************************///

//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
xAnalogWriteOnMovingAOB+6: //"DisneyInfinity3.exe"+892D09:
db F3 0F 11 80 9C 02 00 00
//Alt: movss [eax+0000029C],xmm0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"walkkeylistener"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(onHealthReadRetAOB,DisneyInfinity3.exe,F3 0F 10 44 24 08 F3 0F 11 46 18 5F 5E 83 C4 08)
registersymbol(onHealthReadRetAOB)

label(fWalkSpeed)
registersymbol(fWalkSpeed)

alloc(newmem17,2048)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
pushad

push 12 //ALT key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
jne @f
fld dword ptr [fWalkSpeed]
fstp dword ptr [fCustMoveSpeed]
popad
popfd
jmp originalcode17

@@:
fld1
fstp dword ptr [fCustMoveSpeed]
popad
popfd

originalcode17:
pop edi
pop esi
add esp,08

exit17:
jmp returnhere17

///
fWalkSpeed:
dd (float)0.4
///

onHealthReadRetAOB+b: //"DisneyInfinity3.exe"+113043F:
jmp newmem17
returnhere17:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
onHealthReadRetAOB+b: //"DisneyInfinity3.exe"+113043F:
db 5F 5E 83 C4 08
//Alt: pop edi
//Alt: pop esi
//Alt: add esp,08

unregistersymbol(fWalkSpeed)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(ha)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[esi+298]
comiss xmm0,[ha]
jne originalcode
movss xmm0,[esi+00000298]

originalcode:
movss xmm0,[esi+00000298]

exit:
jmp returnhere

///
ha:
dd (float)2
///

"DisneyInfinity3.exe"+89BFEC:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DisneyInfinity3.exe"+89BFEC:
db F3 0F 10 86 98 02 00 00
//Alt: movss xmm0,[esi+00000298]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(ha)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm1,[ecx+298]
comiss xmm1,[ha]
jne originalcode
movss xmm1,[ecx+298]

originalcode:
movss xmm1,[ecx+00000298]

exit:
jmp returnhere

///
ha:
dd (float)1
///

"DisneyInfinity3.exe"+892AA1:
jmp newmem
nop
nop
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DisneyInfinity3.exe"+892AA1:
db F3 0F 10 89 98 02 00 00
//Alt: movss xmm1,[ecx+00000298]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(moveSpeedLimitCheckAOB,DisneyInfinity3.exe,0F 28 C1 F3 0F 59 44 24 10 0F 2F D0)
registersymbol(moveSpeedLimitCheckAOB)

alloc(newmem24,2048)
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm1,[fSprintSpeed]

originalcode24:
mulss xmm0,[esp+10]

exit24:
jmp returnhere24

///

moveSpeedLimitCheckAOB+3: //"DisneyInfinity3.exe"+898D82:
jmp newmem24
nop
returnhere24:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem24)
moveSpeedLimitCheckAOB+3: //"DisneyInfinity3.exe"+898D82:
db F3 0F 59 44 24 10
//Alt: mulss xmm0,[esp+10]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>83</ID>
          <Description>"No description"</Description>
          <VariableType>Byte</VariableType>
          <Address>1C249845</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>cJmpIfPlayerSpottedAOB</Name>
      <Address>192C992A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cJmpIfPlayerSpotted1AOB</Name>
      <Address>34A67D62</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cJmpIfPlayerSpotted2AOB</Name>
      <Address>547456EC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cJmpIfPlayerSpotted3AOB</Name>
      <Address>54700B37</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Detection_savedAOB</Name>
      <Address>05226339</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory_aob</Name>
      <Address>197E5B42</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cooldown_aob</Name>
      <Address>197E5B97</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>freezemissiontime_aob</Name>
      <Address>197E5C62</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Skill</Name>
      <Address>01476FC2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Health</Name>
      <Address>025BA273</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>STAR</Name>
      <Address>021CDB3F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>rescourcesReadReadRetAOB</Name>
      <Address>01FB3A84</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRescourcesReadReadRet</Name>
      <Address>01FB3A91</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sparksReadRet2AOB</Name>
      <Address>01FB4BE3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSprksReadRet2</Name>
      <Address>01FB4BEC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>coinsReadRet2AOB</Name>
      <Address>01ABB716</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCoinsReadRet2</Name>
      <Address>01ABB716</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>someRead1AOB</Name>
      <Address>01F8C010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRescources</Name>
      <Address>3AAA004A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSparks</Name>
      <Address>3AAA004E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCoins</Name>
      <Address>3AAA0052</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>playerHealthReadAOB</Name>
      <Address>0203020E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>3AAA082E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayerBase</Name>
      <Address>3AAA0832</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthCalOnHitAOB</Name>
      <Address>0237A26B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMinHealth</Name>
      <Address>3F2A002B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>yAnalogWriteOnStartAOB</Name>
      <Address>01799BB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fCustMoveSpeed</Name>
      <Address>3F360015</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>yAnalogWriteOnMovingAOB</Name>
      <Address>01792CC3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>xAnalogWriteOnStartAOB</Name>
      <Address>01799CB0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>xAnalogWriteOnMovingAOB</Name>
      <Address>01792D03</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>onHealthReadRetAOB</Name>
      <Address>02030434</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fWalkSpeed</Name>
      <Address>3F362066</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fSprintSpeed</Name>
      <Address>3F36206A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>moveSpeedLimitCheckAOB</Name>
      <Address>01798D7F</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5711694#5711694</Comments>
</CheatTable>
