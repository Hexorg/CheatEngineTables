<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>178</ID>
      <Description>"v1.0.0.55"</Description>
      <Color>F33525</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>177</ID>
          <Description>"Infinite Health"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,124)
label(returnhere)
label(originalcode)
label(Health)
registersymbol(Health)
aobscan(aob_health, F3 0F 10 83 58 03 00 00 F3 0F 2A D0 F3 0F 5C C1 F3 0F 5C D1 0F 57 C9 F3 0F 5E C2)

newmem:
mov [ebx+00000358],(float)900
originalcode:
movss xmm0,[ebx+00000358]
jmp returnhere

aob_health:
Health:
jmp newmem
nop
nop
nop
returnhere:


[DISABLE]
Health:
movss xmm0,[ebx+00000358]
unregistersymbol(Health)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>180</ID>
          <Description>"Infinite Ammo"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,124)
label(returnhere)
label(originalcode)
label(Ammo)
registersymbol(Ammo)
aobscan(aob_ammo, 8B 7E 14 75 0B 8B CE E8 96 46 28 00 84 C0 74 25 85 FF 75 21 8B 36 85 F6 74 11 81 7E 08 39 2C E8 D0)

newmem:
mov [esi+14],#900

originalcode:
mov edi,[esi+14]
jne 009483CE
jmp returnhere

aob_ammo:
Ammo:
jmp newmem
returnhere:



[DISABLE]
Ammo:
mov edi,[esi+14]
jne 009483CE
unregistersymbol(Ammo)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>181</ID>
          <Description>"No Reload"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,124)
label(returnhere)
label(originalcode)
label(Reloading)
registersymbol(Reloading)
aobscan(aob_rl, 8B 44 8F 44 89 44 24 14 75 36 8B 15 E8 F3 22 01 52 8B CB E8 B6 78 DF FF)

newmem:
mov [edi+ecx*4+44],#99
originalcode:
mov eax,[edi+ecx*4+44]
mov [esp+14],eax
jmp returnhere

aob_rl:
Reloading:
jmp newmem
nop
nop
nop
returnhere:



[DISABLE]
Reloading:
mov eax,[edi+ecx*4+44]
mov [esp+14],eax
unregistersymbol(Reloading)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>182</ID>
          <Description>"Infinite Medicits"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscan(aob_med, FF 0E D9 7C 24 0C 0F B7 44 24 0C 0D 00 0C 00 00 89 44 24 10 F3 0F 11 46 0C)
label(medicits)
registersymbol(medicits)

aob_med:
medicits:
db 90 90

[DISABLE]
medicits:
db FF 0E
unregistersymbol(medicits)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>183</ID>
          <Description>"Infinite Bullet-Time Mode"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,124)
label(returnhere)
label(originalcode)
label(BT)
registersymbol(BT)
aobscan(aob_btm, F3 0F 10 4F 08 8B F1 80 BE F4 00 00 00 00 F3 0F 11 4C 24 0C 0F 84 91 01 00 00 E8 46 02 0B 00)

newmem:
push eax
mov eax,[edi+04]
mov [edi+08],eax
mov [edi+0C],eax
pop eax
originalcode:
movss xmm1,[edi+08]
jmp returnhere

aob_btm:
BT:
jmp newmem
returnhere:



 
 
[DISABLE]
BT:
movss xmm1,[edi+08]
unregistersymbol(BT)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>188</ID>
          <Description>"Disarm Enemies"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,124)
label(returnhere)
label(originalcode)
label(DEn)
registersymbol(DEn)
aobscan(aob_de, 83 7C 8E 44 00 75 05 5F B0 01 5E C3 5F 32 C0 5E C3)

newmem:
mov [esi+ecx*4+44],0
originalcode:
cmp dword ptr [esi+ecx*4+44],00
jmp returnhere

aob_de:
DEn:
jmp newmem
returnhere:



[DISABLE]
DEn:
cmp dword ptr [esi+ecx*4+44],00
unregistersymbol(DEn)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>189</ID>
          <Description>"One Hit Kill"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,124)
label(returnhere)
label(originalcode)
label(Ohk)
registersymbol(Ohk)
aobscan(aob_ohk, F3 0F 10 86 58 03 00 00 0F 57 C9 0F 2F C8 72 18 8B 86 94 12 00 00 83 F8 01 0F 84 24 09 00 00 83 F8 02 0F 84 1B 09 00 00)

newmem:
mov [esi+00000358],(float)5
originalcode:
movss xmm0,[esi+00000358]
jmp returnhere

aob_ohk:
Ohk:
jmp newmem
nop
nop
nop
returnhere:



 
 
[DISABLE]
Ohk:
movss xmm0,[esi+00000358]
unregistersymbol(Ohk)
dealloc(newmem)

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>Made by ARM4ND0</Comments>
</CheatTable>
