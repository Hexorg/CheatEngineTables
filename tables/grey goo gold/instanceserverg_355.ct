<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>108</ID>
      <Description>"[X] &lt;== Grey Goo Gold v0.15.524791 CODEX Script v1.0 AOB"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Grey Goo Gold
 Game Version  : 0.15.524791
 Game Sponsor  : CODEX
 Process Name  : InstanceServerG.exe
 Script Version: 1.0 AOB
 CE Version    : 6.4
 Release date  : 22-Feb-2015
 Author        : Recifense
 History:
 28-Jan-15: First Release
 04-Feb-15: Release for version 0.15 (Update 1 by CODEX)
 22-Feb-15: Updated for version 0.15 (Update 2 by CODEX); updated by Csimbi
 Features:
 - Minimum Resources
 - God Mode
 - Full Ammo
 - Unlimited Units
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"InstanceServerG.exe")
//=========================================
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.4)
define(ctMRES,#640)    // Minimum Resource
//=========================================
[ENABLE]

aobscanmodule(aobMOHP,InstanceServerG.exe,8B 71 68 85 F6 74 1B 8B 06 8B 50 08 8B CE FF D2 85 C0 74 0E 3D ?? ?? ?? ?? 74 0B 8B 40 04 85 C0 75 F2 33 C0 5E C3 8B C6 5E C3 CC CC CC CC CC 56 8B)
aobscanmodule(aobMOPR,InstanceServerG.exe,8B 70 0C 89 58 0C 88 50 14 3B F3 74 ?? 8B 7F 08 85 FF 74 ?? 8B 07 8B 50 08 8B CF FF D2 85 C0 74 ?? 8D 49 00 3D ?? ?? ?? ?? 74 ?? 8B 40 04 85 C0 75)
aobscanmodule(aobGDMD,InstanceServerG.exe,F3 0F 10 4D 0C 0F 57 D2 0F 2F CA F3 0F 10 47 18 F3 0F 11 4D 9C 76 ?? F3 0F 10 57 14 0F 28 DA F3 0F 58 D9 0F 2F D8 76 ?? F3 0F 5C C2 EB ?? F3 0F 10)
aobscanmodule(aobMOFA,InstanceServerG.exe,DF 7D 0C 8B 55 0C 89 11 D9 6D 0A 5E 5D C2 0C 00 CC CC CC CC CC CC CC CC CC 55 8B EC A1 ?? ?? ?? ?? 0F B7 00 56 8B F1 8B 4D 08 50 E8 ?? ?? ?? ?? 85 C0 74 0E 8B 4E 04 03 C8 74 07 8B 09 8B 55 0C 89 0A 5E 5D C2 08 00 CC CC 55 8B EC A1 ?? ?? ?? ?? 0F B7 00 56 8B F1 8B 4D 08 50 E8 ?? ?? ?? ?? 85 C0 74 0E 8B 4E 04 03 C8 74 07 8B 09 8B 55 0C 89 0A 5E 5D C2 08 00 CC CC 55 8B EC A1 ?? ?? ?? ?? 0F B7 00 56 8B F1 8B 4D 08 50 E8 ?? ?? ?? ?? 85 C0 74 1E 8B 4E 04 03 C8 74 17 8B 09 89 4D 08 DB 45 08 85 C9 79 06 D8 05 ?? ?? ?? ?? 8B 55 0C D9 1A 5E 5D C2 08 00 CC CC 55 8B EC A1 ?? ?? ?? ?? 0F B7 00 56 8B F1 8B 4D 08 50 E8 ?? ?? ?? ?? 85 C0 74 1E 8B 4E 04 03 C8 74 17 8B 09 89 4D 08 DB 45 08 85 C9 79 06 DC 05 ?? ?? ?? ?? 8B 55 0C DD 1A 5E 5D C2 08 00 CC CC 53 56 8B F1 C7 06 ?? ?? ?? ?? 83 7E 38 10 72 0C 8B 46 24 50 E8 ?? ?? ?? ?? 83 C4 04 33 DB C7 46 38 0F 00 00 00 89 5E 34 88 5E 24 83 7E 1C 10 72 0C 8B 4E 08 51 E8 ?? ?? ?? ?? 83 C4 04 89 5E 18 C7 46 1C 0F 00 00 00 88 5E 08 5E 5B C3 CC CC CC 55 8B EC 56 8B F1 C7 06 ?? ?? ?? ?? 83 7E 38 10 72 0C 8B 46 24 50 E8 ?? ?? ?? ?? 83 C4 04 53 33 DB C7 46 38 0F 00 00 00 89 5E 34 88 5E 24 83 7E 1C 10 72 0C 8B 4E 08 51 E8 ?? ?? ?? ?? 83 C4 04 F6 45 08 01 89 5E 18 C7 46 1C 0F 00 00 00 88 5E 08 5B 74 09 56 E8 ?? ?? ?? ?? 83 C4 04 8B C6 5E 5D C2 04 00 CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 83 EC 20 A1 70 3C 31 01 33 C5 89 45 FC 8B 45 08 56 50 8D 45 E0 50 8B F1 E8 ?? ?? ?? ?? 8B 4D 0C 83 C4 08 89 4E 04 6A FF 8D 4E 08 C7 06 C4 15 17 01 6A 00 8D 55 E0 C7 41 14 0F 00 00 00 C7 41 10 00 00 00 00 52 C6 01 00 E8 ?? ?? ?? ?? C7 46 38 0F 00 00 00 C7 46 34 00 00 00 00 C6 46 24 00 83 7D F4 10 72 0C 8B 45 E0 50 E8 ?? ?? ?? ?? 83 C4 04 8B 4D FC 8B C6 C7 06 ?? ?? ?? ?? 33 CD 5E E8 ?? ?? ?? ?? 8B E5 5D C2 08 00 CC CC CC 55 8B EC 0F B7 05 ?? ?? ?? ?? 8B 4D 08 50 E8 ?? ?? ?? ?? 5D C3 CC CC CC CC CC CC CC CC CC CC CC 55)
aobscanmodule(aobMOUU,InstanceServerG.exe,8B 47 0C 6A 20 50 8B 42 04 8B CE 80 E3 01 FF D0 8B 16 22 D8 8B 47 10 6A 20 50 8B 42 04 8B CE FF D0 8B 7F 14 8B 16 6A 20 22 D8 8B 42 04 57 8B CE FF)
aobscanmodule(aobSELL,InstanceServerG.exe,DD D8 8D 8D 4C FF FF FF E8 ?? ?? ?? ?? 8B 4D FC 5F 33 CD B0 01 5E E8 ?? ?? ?? ?? 8B E5 5D C3 CC CC CC CC CC CC CC 53 56 8B F1 57 8D 4E 14 E8)
aobscanmodule(aobCTRK,InstanceServerG.exe,DD D8 8D 4D A0 E8 ?? ?? ?? ?? 5E 8B E5 5D C3 CC CC CC CC CC CC CC 55 8B EC 83 EC 60 56 8B F1 8B 46 08 50 E8 ?? ?? ?? ?? 83 C4 04 84 C0 0F 84)
label(aobMOHP_r)
label(aobMOPR_r)
label(aobGDMD_r)
label(aobMOFA_r)
label(aobMOUU_r)
label(aobSELL_r)
label(aobCTRK_r)
registersymbol(aobMOHP_r)
registersymbol(aobMOPR_r)
registersymbol(aobGDMD_r)
registersymbol(aobMOFA_r)
registersymbol(aobMOUU_r)
registersymbol(aobSELL_r)
registersymbol(aobCTRK_r)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_MonPlayerRes)
label(_BackMPR)
label(_ExitMPR)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)
label(_MonFullAmmo)
label(_BackMFA)
label(_ExitMFA)
label(_MonUnlimitedUnits)
label(_BackMUU)
label(_ExitMUU)

label(iEnableMPR)
label(iEnableGMD)
label(iEnableMFA)
label(iEnableMUU)

label(pCommon)
label(pUnit)
label(pRes)
label(pPop)

label(fLast)
label(aLast)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMPR)
registersymbol(iEnableGMD)
registersymbol(iEnableMFA)
registersymbol(iEnableMUU)
registersymbol(pCommon)
registersymbol(pUnit)
registersymbol(pRes)
registersymbol(pPop)

registersymbol(fLast)
registersymbol(aLast)

//=========================================
// Hacking Points
aobMOHP:
aobMOHP_r:
 jmp _MonHumanPlayer
_BackMHP:

aobMOPR:
aobMOPR_r:
 jmp _MonPlayerRes
 nop
_BackMPR:

aobGDMD:
aobGDMD_r:
 jmp _GodMode
_BackGMD:

aobMOFA:
aobMOFA_r:
 jmp _MonFullAmmo
 nop
_BackMFA:

aobMOUU:
aobMOUU_r:
 jmp _MonUnlimitedUnits
_BackMUU:

aobSELL:
aobSELL_r:

aobCTRK:
aobCTRK_r:

//=========================================
MyCode:
//=========================================
// At the game main RTS screen
_MonHumanPlayer:
 mov [aLast],'_MHP'

 push eax

 mov esi,[ecx+68]
 test esi,esi
 jz _ExitMHP

 cmp esi,[ecx+64]
 jne _ExitMHP

 mov eax,[esi+14]
 test eax,eax
 jz _ExitMHP

 mov eax,[eax]
 cmp eax,'HUMA'
 jne _ExitMHP

 mov [pCommon],esi

_ExitMHP:
 pop eax

 mov esi,[ecx+68]                  // Original code (get pPlayer)
 test esi,esi                      // Original code
 jmp _BackMHP                      // Back to main code

//=========================================
// When updating resource
_MonPlayerRes:
 mov [aLast],'_MPR'

 push ecx

 mov esi,[eax+0C]                  // Original code (get current value)

 test edi,edi
 jz _ExitMPR

 mov ecx,[edi+08]
 test ecx,ecx
 jz _ExitMPR

 mov ecx,[ecx+68]
 test ecx,ecx
 jz _ExitMPR

 mov ecx,[ecx+64]
 cmp ecx,[pCommon]
 jne _ExitMPR

 mov [pRes],edi

 cmp dword ptr [iEnableMPR],0
 je _ExitMPR                       // Jump if feature is disabled

 cmp ebx,ctMRES
 jns _ExitMPR

 mov ebx,ctMRES

 cmp ebx,esi
 jne _ExitMPR

 dec esi

_ExitMPR:
 pop ecx

 mov [eax+0C],ebx                  // Original code (set new value)
 jmp _BackMPR                      // Back to main code

//=========================================
// When changing HP
_GodMode:
 mov [aLast],'_GMD'

 push eax

 mov eax,[ebp+00000114]

 cmp eax,aobSELL_r
 je _ExitGMD

 cmp eax,aobCTRK_r
 je _ExitGMD

 mov [pUnit],edi

 mov eax,[edi+08]
 test eax,eax
 jz _ExitGMD

 mov eax,[eax+68]
 test eax,eax
 jz _ExitGMD

 mov eax,[eax+64]
 cmp eax,[pCommon]
 jne _ExitGMD

 mov eax,[edi+18]                  // Just for debugging
 mov eax,[ebp+0c]                  // Just for debugging
 mov [fLast],eax

 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 mov eax,[ebp+0c]
 test eax,eax
 jns _ExitGMD

 mov eax,[edi+18]
 mov [edi+14],eax

 mov eax,(float)-1.0
 mov [ebp+0c],eax

_ExitGMD:
 pop eax

 movss xmm1,[ebp+0C]               // Original code (get value 2 add or dec)
 jmp _BackGMD                      // Back to main code

//=========================================
// When loading/unloading ammo (affects all)
_MonFullAmmo:
 mov [aLast],'_MFA'

 fistp qword ptr [ebp+0C]          // Original code (convert new value)

 cmp dword ptr [iEnableMFA],0
 je _ExitMFA                       // Jump if feature is disabled

 mov edx,[ecx+04]
 mov [ebp+0C],edx

_ExitMFA:
 mov edx,[ebp+0C]                  // Original code (get new value)
 jmp _BackMFA                      // Back to main code

//=========================================
// When Inc/Dec spent unit points
_MonUnlimitedUnits:
 mov [aLast],'_MUU'

 cmp dword ptr [iEnableMUU],0
 je _ExitMUU                       // Jump if feature is disabled

 mov eax,[edi+04]
 cmp eax,[pCommon]
 jne _ExitMUU

 mov [pPop],edi

 xor eax,eax
 mov [edi+0c],eax
 mov [edi+14],eax

_ExitMUU:
 mov eax,[edi+0C]                  // Original code (get spent points)
 push 20                           // Original code
 jmp _BackMUU                      // Back to main code

//=========================================
 db '=================================&gt;'
 db 'CE6.4 Script by Recifense 012815'
//=========================================
// Variables
iEnableMPR:
 dd 0
iEnableGMD:
 dd 0
iEnableMFA:
 dd 0
iEnableMUU:
 dd 0
pCommon:
 dd MyCode
pUnit:
 dd 0
pRes:
 dd 0
pPop:
 dd 0
fLast:
 dd 0
aLast:
 db 'CE64'

//=========================================
// Script for Restoring Original Codes
[DISABLE]
aobMOHP_r:
// mov esi,[ecx+68]
// test esi,esi
 db 8b 71 68 85 f6

aobMOPR_r:
// mov esi,[eax+0C]
// mov [eax+0C],ebx
 db 8b 70 0c 89 58 0c

aobGDMD_r:
// movss xmm1,[ebp+0C]
 db f3 0f 10 4d 0c

aobMOFA_r:
// fistp qword ptr [ebp+0C]
// mov edx,[ebp+0C]
 db df 7d 0c 8b 55 0c

aobMOUU_r:
// mov eax,[edi+0C]
// push 20
 db 8b 47 0c 6a 20

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMPR)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMFA)
unregistersymbol(iEnableMUU)
unregistersymbol(pCommon)
unregistersymbol(pUnit)
unregistersymbol(pRes)
unregistersymbol(pPop)

unregistersymbol(fLast)
unregistersymbol(aLast)

unregistersymbol(aobMOHP_r)
unregistersymbol(aobMOPR_r)
unregistersymbol(aobGDMD_r)
unregistersymbol(aobMOFA_r)
unregistersymbol(aobMOUU_r)
unregistersymbol(aobSELL_r)
unregistersymbol(aobCTRK_r)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
v0.14.520083:
define(MOPR,InstanceServerG.exe+002b0c0c)
define(GDMD,InstanceServerG.exe+002ac09d)
define(MOFA,InstanceServerG.exe+00b17497)
define(MOUU,InstanceServerG.exe+00098d3e)

define(SELL,InstanceServerG.exe+002A33F8)
define(CTRK,InstanceServerG.exe+00261f4a)

v0.15.522362:
define(MOHP,InstanceServerG.exe+00b70981)
define(MOPR,InstanceServerG.exe+002afedc)
define(GDMD,InstanceServerG.exe+002ab29d)
define(MOFA,InstanceServerG.exe+00b16287)
define(MOUU,InstanceServerG.exe+000986be)

define(SELL,InstanceServerG.exe+002A25fa)
define(CTRK,InstanceServerG.exe+0026126a)
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>109</ID>
          <Description>"Minimum Resource"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="014801F0"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMPR</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description>"God Mode"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="014801F4"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>111</ID>
          <Description>"Full Ammo"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="014801F8"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMFA</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"Unlimited Unit Points"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="014801FC"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMUU</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <Comments>===========================================
 Game Title    : Grey Goo Gold
 Game Version  : 0.15.524791
 Game Sponsor  : CODEX
 Process Name  : InstanceServerG.exe
 Script Version: 1.0 AOB
 CE Version    : 6.4
 Release date  : 22-Feb-2015
 Author        : Recifense
 History:
 28-Jan-15: First Release
 04-Feb-15: Release for version 0.15 (Update 1 by CODEX)
 22-Feb-15: Updated for version 0.15 (Update 2 by CODEX); updated by Csimbi
 Features:
 - Minimum Resources [1]
 - God Mode          [2]
 - Full Ammo         [3]
 - Unlimited Units   [4]
 - Some Pointers
===========================================
[1] For human player only (not AI);
[2] For player's units and buildings (not AI's);
[3] For Human player and AIs;
[4] For Human player only (not AI);
===========================================
[USAGE]
1) Run CE64;
2) Run Game;
3) Load the game process "InstanceServerG.exe" in CE;
4) Load this table and activate the main script;
5) Now Activate the script of each cheat you want to use;
6) Game On;
===========================================
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat. So you can always come back in case you don't like the result.
===========================================
[INFO]
Tested on Win 7 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
