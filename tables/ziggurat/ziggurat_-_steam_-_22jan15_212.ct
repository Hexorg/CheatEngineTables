<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Inf. Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(health_saved)
registersymbol(health_saved)
aobscan(searchedAOB,D9 41 18 D9 5D F0 D9 45 F0 8B 4D D4 51 DB 04 24)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [ecx+18], (float)1000

originalcode:
fld dword ptr [ecx+18]
fstp dword ptr [ebp-10]

exit:
jmp returnhere

searchedAOB:
health_saved:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
health_saved:
fld dword ptr [ecx+18]
fstp dword ptr [ebp-10]
//Alt: db D9 41 18 D9 5D F0
unregistersymbol(health_saved)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>41</ID>
      <Description>"Maximum Mana"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(max_saved)
registersymbol(max_saved)
aobscan(searchedAOB,D9 41 18 D9 5D FC D9 45 FC 8B 4D 10 51 DB 04 24)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [ecx+14], #1000
mov dword ptr [ecx+18], (float)1000

originalcode:
fld dword ptr [ecx+18]
fstp dword ptr [ebp-04]

exit:
jmp returnhere

searchedAOB:
max_saved:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
max_saved:
fld dword ptr [ecx+18]
fstp dword ptr [ebp-04]
//Alt: db D9 41 18 D9 5D FC
unregistersymbol(max_saved)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"No Mana Cost"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

alloc(zero_space,4)
registersymbol(zero_space)
label(clip_saved)
registersymbol(clip_saved)
aobscan(searchedAOB,D9 45 DC DE E9 83 EC 08 83 EC 04 D9 1C 24 50 39)

newmem: //this is allocated memory, you have read,write,execute access


originalcode:
fld dword ptr [zero_space]
fsubp st(1),st(0)

exit:
jmp returnhere

searchedAOB:
clip_saved:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(zero_space)
clip_saved:
fld dword ptr [ebp-24]
fsubp st(1),st(0)
//Alt: db D9 45 DC DE E9
unregistersymbol(zero_space)
unregistersymbol(clip_saved)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"One Shot Kill"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(oneshot_saved)
registersymbol(oneshot_saved)
aobscan(searchedAOB,D9 83 A0 00 00 00 D9 9D EC FE FF FF D9 85 EC FE)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [ebx+000000A0], (float)0

originalcode:
fld dword ptr [ebx+000000A0]

exit:
jmp returnhere

searchedAOB:
oneshot_saved:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
oneshot_saved:
fld dword ptr [ebx+000000A0]
//Alt: db D9 83 A0 00 00 00
unregistersymbol(oneshot_saved)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>47</ID>
      <Description>"Max Level Experience"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(xplevel_saved)
registersymbol(xplevel_saved)
aobscan(searchedAOB,8B 40 18 33 C9 3B D0 0F 4F D0 8B 45 FC 3B CA 0F 4C CA 03 4D 0C 83 EC 08)

newmem: //this is allocated memory, you have read,write,execute access
mov [eax+18],#100000

originalcode:
mov eax,[eax+18]
xor ecx,ecx

exit:
jmp returnhere

searchedAOB:
xplevel_saved:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
xplevel_saved:
//mov eax,[eax+18]
//xor ecx,ecx
db 8B 40 18 33 C9
unregistersymbol(xplevel_saved)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>49</ID>
      <Description>"No Portal Key Needed (Bonus: Boss Farm)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(key_saved)
registersymbol(key_saved)
aobscan(searchedAOB,0F B6 80 08 01 00 00 85 C0 0F 84 70 01 00 00)

newmem: //this is allocated memory, you have read,write,execute access
mov byte ptr [eax+00000108],1

originalcode:
movzx eax,byte ptr [eax+00000108]

exit:
jmp returnhere

searchedAOB:
key_saved:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
key_saved:
movzx eax,byte ptr [eax+00000108]
//Alt: db 0F B6 80 08 01 00 00
unregistersymbol(key_saved)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>health_saved</Name>
      <Address>059D529C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>max_saved</Name>
      <Address>059A3CEE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>clip_saved</Name>
      <Address>059E5775</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>oneshot_saved</Name>
      <Address>059DC211</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>key_saved</Name>
      <Address>059CD595</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>xplevel_saved</Name>
      <Address>281925DD</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
