<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <Forms>
    <CETrainer Class="TTrainerForm" Encoding="Ascii85">#Z$^{)=ArR+u;9?b[,tnJ6M2JD6qzMrcKl_w(JO1S;f1_c$BFpawdKJ3ctjH1w#D_K7onHNt]BB;V}fDdE9f*WA3;Q016NHcMvLKlH:l#6(I!ttJRY)9(,[fQ*@:}%DDOmsEAF{tkL^JQl6:w8?eA*IAOWAD%$ZW!8u:,+mAwB2y(mYDb{s;BMy[X5wa/n!^_;ZEJ[NDb6:F.0?%oh)S#B%7G=xP+mqITFL@2HIxPiAR!S29LzIPaj.RIDP}Q#R9[-2??Q/Rj:}6PvbuFgzdzObUG413,k8TbwyX+:VIF-A;jIZt9Cs.]h6c2)T#f8!Url94]IA@*-dci63P7w-vl9+BvQ:XL]_6UOLRuMB_;M;Dzv9!GD4%m#BehLqDt6WMympy@;qH[[CaI/sb9;Mi*;Mv:7ve]_l(=8:8o?6GdyXv;0i*yZt=XIe}.4a=1uj3Z1m?8$wZal!$ZU@WXo[Aeu)a(0#wO6+YD*z6I-e[(c$N0t$/3gbOjIzQ2E5yAPjQoBlM4g}lgH5-=zFfh:.SeYM4s0z{zZ+ob9[!J1tUnjA9[wzNWUQFlMm)0mf;p9_LYB$aCZ)P%07-@pu9a!+-+M)eDdBY$#18;JzuOaqCc?V_nRD08gtqW7o;6YXl/,J0WGnMD/=z66.b}HkYQ{rw]4;*$U]yVh/wWh*=vy*UO+i4;GUhlncB?{.CR.WW,82]*W$a3Vm^vQU(bxc.,OWmHAexK@VgZ20YYN_ORoL59+m!]#4^Hja2RU{yggeKC)y8.-:_i^W@a2E/N0Iz}t7N[?S$Tluk86@5JNc00gk$G}/?o02QFI/]*2V)3n=ltG2;rAsRCCkRISc:nJ@:m#</CETrainer>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>25</ID>
      <Description>"http://deviatedhacking.com"</Description>
      <Color>0000FF</Color>
      <VariableType>String</VariableType>
      <Length>1</Length>
      <Unicode>0</Unicode>
      <ZeroTerminate>1</ZeroTerminate>
      <Address>Made by</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(plhealth)
registersymbol(plhealth)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
lea ecx,["South Park - The Stick of Truth.exe"+1B70FD0]
cmp ecx, 0
je originalcode
mov ecx,[c8*4+ecx]
cmp ecx, 0
je originalcode
mov ecx, [ecx+4]
cmp ecx, 0
je originalcode
mov ecx, [ecx+6c]
cmp ecx, 0
je originalcode
push eax
mov [plhealth], ecx
mov eax, [ecx+18+4]
mov [ecx+18], eax
pop eax
originalcode:
pop ecx
push esi
mov esi,[ecx+edx*4]
test esi,esi

exit:
jmp returnhere

newmem+100:
plhealth:
dd 0

"South Park - The Stick of Truth.exe"+2F4E03:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"South Park - The Stick of Truth.exe"+2F4E03:
push esi
mov esi,[ecx+edx*4]
test esi,esi
//Alt: db 56 8B 34 91 85 F6
unregistersymbol(plhealth)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"One Hit Kills"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp ecx, [plhealth]
je originalcode
cmp [ecx+18], (float)1
jle originalcode
mov dword ptr [ecx+18], (float)1
originalcode:
movss xmm0,[ecx+18]

exit:
jmp returnhere

"South Park - The Stick of Truth.exe"+3365F1:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"South Park - The Stick of Truth.exe"+3365F1:
movss xmm0,[ecx+18]
//Alt: db F3 0F 10 41 18
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Money"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [ecx+edx*8], 5F5E0F6
originalcode:
mov eax,[ecx+edx*8]
pop ebp
ret 0004

exit:
jmp returnhere

"South Park - The Stick of Truth.exe"+338B13:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"South Park - The Stick of Truth.exe"+338B13:
mov eax,[ecx+edx*8]
pop ebp
ret 0004
//Alt: db 8B 04 D1 5D C2 04 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"XP"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(xpflag)
registersymbol(xpflag)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [xpflag], 1
jne originalcode
mov ecx, 1F4
mov byte ptr [xpflag], 0
originalcode:
add [esi+24],ecx
push edi
mov ecx,esi

exit:
jmp returnhere

newmem+100:
xpflag:
db 0

"South Park - The Stick of Truth.exe"+30C520:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//dealloc(newmem)
"South Park - The Stick of Truth.exe"+30C520:

//add [esi+24],ecx
//push edi
//mov ecx,esi
//Alt: db 01 4E 24 57 8B CE
//unregistersymbol(xpflag)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"xpflag - Set 1 to enable"</Description>
      <Color>80000008</Color>
      <VariableType>Byte</VariableType>
      <Address>xpflag</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"Max Level"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+24], 2710
originalcode:
push edi
mov ecx,esi

exit:
jmp returnhere

newmem+100:
xpflag:
db 0

"South Park - The Stick of Truth.exe"+30C520:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"South Park - The Stick of Truth.exe"+30C520:
add [esi+24],ecx
push edi
mov ecx,esi
//Alt: db 01 4E 24 57 8B CE
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"PP"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [ecx+eax*8+1C], (float)50
originalcode:
fld dword ptr [ecx+eax*8+1C]
pop ebp

exit:
jmp returnhere

"South Park - The Stick of Truth.exe"+38587D:
jmp newmem
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"South Park - The Stick of Truth.exe"+38587D:
fld dword ptr [ecx+eax*8+1C]
pop ebp
//Alt: db D9 44 C1 1C 5D
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>xpflag</Name>
      <Address>17DF0100</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
