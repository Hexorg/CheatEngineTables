<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"ON/off Mono feature [attach a mono/unity target 1st]"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$lua}
[ENABLE]

--bDebug = true  -- uncomment to print err msg

if not syntaxcheck then
  local good = false
  if readInteger('mono_domain_get')~=nil and not debug_canBreak() then
    local ok,ret = pcall(LaunchMonoDataCollector)
    if ok and ret~=0 then good = true end
  end
  monopipe = good and monopipe or monopipe and monopipe.Destroy and monopipe.Destroy() or nil
  if monopipe==nil then local msg = "Can't launch mono data collector." if bDebug then print(msg) end error(msg) end
end

[DISABLE]

if not syntaxcheck then
  if readInteger('mono_domain_get')~=nil and not debug_canBreak() and monopipe~=nil and monopipe.Destroy then
    monopipe.Destroy()
  end
  monopipe=nil
end

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Your Scripts"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
