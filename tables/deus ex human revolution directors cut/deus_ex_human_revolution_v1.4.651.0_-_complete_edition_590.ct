<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Max Heatlh"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dxhr.exe
  Author : WarezLine
}
[ENABLE]
aobscanmodule(HeatlhView,dxhr.exe,D9 41 5C F6 C4 01 74 03 D8 41 60 8B) // "dxhr.exe"+264EB8
aobscanmodule(Health,dxhr.exe,D9 41 68 D9 5E 64 8B) // "dxhr.exe"+265917
alloc(newmem,$1000)
label(code1)
label(code2)
label(codeView1)
label(codeView2)
label(return)
label(returnView)

newmem:
code1:
  cmp [esi+007C],(float)1
  jl code2
  mov [esi+5C],(float)200.0

code2:
  fld dword ptr [ecx+68]
  fstp dword ptr [esi+64]
  jmp return

codeView1:
  cmp dword ptr [ecx+5C],(float)200.0
  je codeView2
  mov dword ptr [ecx+5C],(float)200.0

codeView2:
  fld dword ptr [ecx+5C]
  test ah,01
  jmp returnView

Health:
  jmp code1
  nop
return:
registersymbol(Health)

HeatlhView:
  jmp codeView1
  nop
returnView:
registersymbol(HeatlhView)

[DISABLE]
Health:
  db D9 41 68 D9 5E 64
unregistersymbol(Health)

HeatlhView:
  db D9 41 5C F6 C4 01
unregistersymbol(HeatlhView)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Max Energy"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dxhr.exe
  Author : WarezLine
}
[ENABLE]
aobscanmodule(EnergyView,dxhr.exe,D9 46 04 8B 0E) // "dxhr.exe"+25CCC6
aobscanmodule(Energy,dxhr.exe,D9 59 08 C2 04 00 DD) // "dxhr.exe"+25CDE2
alloc(newmem,$1000)
label(code)
label(codeView)
label(return)
label(returnView)

newmem:
codeView:
  mov dword ptr [esi+04],(float)150.0
  fld dword ptr [esi+04]
  mov ecx,[esi]
  jmp returnView

code:
  mov [ecx+04],(float)150
  fstp dword ptr [ecx+08]
  jmp return

Energy:
  jmp code
  nop
return:
registersymbol(Energy)

EnergyView:
  jmp codeView
returnView:
registersymbol(EnergyView)

[DISABLE]
Energy:
  db D9 59 08 C2 04 00
unregistersymbol(Energy)

EnergyView:
  db D9 46 04 8B 0E
unregistersymbol(EnergyView)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Max Stamina"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dxhr.exe
  Author : WarezLine
}
[ENABLE]
aobscanmodule(Stamina,dxhr.exe,D9 41 30 C3 CC) // "dxhr.exe"+29B1E0
alloc(newmem,$1000)
label(code)
label(return)

newmem:
  cmp [ecx+30],(float)0.09
  jl code
  mov [ecx+30],(float)0.09

code:
  fld dword ptr [ecx+30]
  ret
  int 3
  jmp return

Stamina:
  jmp newmem
return:
registersymbol(Stamina)

[DISABLE]
Stamina:
  db D9 41 30 C3 CC
unregistersymbol(Stamina)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Max Praxis 90"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dxhr.exe
  Author : WarezLine
}
[ENABLE]
aobscanmodule(Praxis,dxhr.exe,8B D8 83 C4 04 8D 44 24 50) // "dxhr.exe"+3D9367
aobscanmodule(PraxisMod,dxhr.exe,8B F1 01 7E 10) // "dxhr.exe"+25A7F6
alloc(newmem,$1000)
label(code)
label(codemod)
label(return)
label(returnmod)

newmem:
  cmp [eax+10],5A
  jl code:
  mov [eax+10],5A

code:
  mov ebx,eax
  add esp,04
  jmp return

codemod:
  mov esi,ecx
  add [esi+10],edi
  cmp [esi+10],5A
  je returnmod
  pushad
  mov edi,5A
  mov [esi+10],5A
  popad
  jmp returnmod

Praxis:
  jmp newmem
return:
registersymbol(Praxis)

PraxisMod:
  jmp codemod
returnmod:
registersymbol(PraxisMod)

[DISABLE]
Praxis:
  db 8B D8 83 C4 04
unregistersymbol(Praxis)

PraxisMod:
  db 8B F1 01 7E 10
unregistersymbol(PraxisMod)

dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Unlimited ammo / No Reload"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dxhr.exe
  Author : WarezLine
}
[ENABLE]
aobscanmodule(NoReload,dxhr.exe,66 FF 48 14 8B 4E 70) // "dxhr.exe"+3459F8
alloc(newmem,$1000)
label(code)
label(return)

newmem:
  mov ecx,[edx+1C]
  mov [eax+14],ecx

code:
//  dec word ptr [eax+14]
  mov ecx,[esi+70]
  jmp return

NoReload:
  jmp newmem
  nop
  nop
return:
registersymbol(NoReload)

[DISABLE]
NoReload:
  db 66 FF 48 14 8B 4E 70
unregistersymbol(NoReload)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Unlimited items"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dxhr.exe
  Author : WarezLine
}
[ENABLE]
aobscanmodule(Use,dxhr.exe,66 89 48 06 8B C5) // "dxhr.exe"+36773A
aobscanmodule(Multi,dxhr.exe,E8 D6 3F 00 00) // "dxhr.exe"+26AAB5
aobscanmodule(Drop,dxhr.exe,0F B7 48 06 0F B7 D9) // "dxhr.exe"+36772C
aobscanmodule(Soltar,dxhr.exe,8B 42 0C FF D0 5E C2 04 00 CC) // "dxhr.exe"+3668E1
alloc(newmem,$1000)
label(cuse)
label(cmulti)
label(cdrop1)
label(cdrop2)
label(csoltar)
label(retuse)
label(retmulti)
label(retdrop)
label(retsoltar)
label(iMulti)
label(iSoltar)

newmem:

cuse:
  mov ecx,[eax+06]
  mov [eax+06],cx
  mov eax,ebp
  jmp retuse

cmulti:
  call dxhr.exe+26EA90
  mov dword ptr [iMulti],1
  jmp retmulti

cdrop1:
  cmp dword ptr [iSoltar],1
  je cdrop2
  cmp dword ptr [iMulti],1
  je cdrop2
  mov ecx,2
  mov ebx,2
  mov ebp,1
  jmp retdrop

cdrop2:
  mov dword ptr [iSoltar],0
  mov dword ptr [iMulti],0
  movzx ecx,word ptr [eax+06]
  movzx ebx,cx
  jmp retdrop

csoltar:
  mov dword ptr [iSoltar],1
  mov eax,[edx+0C]
  call eax
  jmp retsoltar

iMulti:
  dd 0
iSoltar:
  dd 0

Use:
  jmp cuse
  nop
retuse:
registersymbol(Use)

Multi:
  jmp cmulti
retmulti:
registersymbol(Multi)

Drop:
  jmp cdrop1
  nop
  nop
retdrop:
registersymbol(Drop)

Soltar:
  jmp csoltar
retsoltar:
registersymbol(Soltar)

registersymbol(iMulti)
registersymbol(iSoltar)

[DISABLE]

Use:
  db 66 89 48 06 8B C5
unregistersymbol(Use)

Multi:
  db E8 D6 3F 00 00
unregistersymbol(Multi)

Drop:
  db 0F B7 48 06 0F B7 D9
unregistersymbol(Drop)

Soltar:
  db 8B 42 0C FF D0
unregistersymbol(Soltar)

unregistersymbol(iMulti)
unregistersymbol(iSoltar)

dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"One hit kill"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dxhr.exe
  Author : WarezLine
}
[ENABLE]
aobscanmodule(OneHit,dxhr.exe,D9 46 5C 8B 46 0C) // "dxhr.exe"+265923
alloc(newmem,$1000)
label(code)
label(return)

newmem:
  cmp [esi+007C],(float)0
  jg code
  mov dword ptr [esi+5C],(float)0.0

code:
  fld dword ptr [esi+5C]
  mov eax,[esi+0C]
  jmp return

OneHit:
  jmp newmem
  nop
return:
registersymbol(OneHit)

[DISABLE]
OneHit:
  db D9 46 5C 8B 46 0C
unregistersymbol(OneHit)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Exp x 100"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dxhr.exe
  Author : WarezLine
}
[ENABLE]
aobscanmodule(ExpX100,dxhr.exe,8B 44 24 04 01 41 08) // "dxhr.exe"+25ACF0
alloc(newmem,$1000)
label(code)
label(return)

newmem:
  cmp [esp+04],0
  jle code
  mov eax,[esp+04]
  imul eax,eax,64
  mov [esp+04],eax

code:
  mov eax,[esp+04]
  add [ecx+08],eax
  jmp return

ExpX100:
  jmp newmem
  nop
  nop
return:
registersymbol(ExpX100)

[DISABLE]
ExpX100:
  db 8B 44 24 04 01 41 08
unregistersymbol(ExpX100)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Credits x 100, Min 50K"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : dxhr.exe
  Author : WarezLine
}
[ENABLE]
aobscanmodule(MoneyX100,dxhr.exe,01 56 60 8B 70 20) // "dxhr.exe"+26B182
aobscanmodule(MinCredits,dxhr.exe,8B 70 60 8B 44 24 68 C1) // "dxhr.exe"+3D941B
alloc(newmem,$1000)
label(code)
label(code1)
label(cmin)
label(cmin1)
label(return)
label(retmin)

newmem:
  cmp edx,0
  jle code
  imul edx,edx,#100

code:
  add [esi+60],edx
  cmp [eax+60],C350
  jg code1
  mov [eax+60],C350
code1:
  mov esi,[eax+20]
  jmp return

cmin:
  cmp [eax+60],C350
  jg cmin1
  mov [eax+60],C350
cmin1:
  mov esi,[eax+60]
  mov eax,[esp+68]
  jmp retmin

MoneyX100:
  jmp newmem
  nop
return:
registersymbol(MoneyX100)

MinCredits:
  jmp cmin
  nop
  nop
retmin:
registersymbol(MinCredits)

[DISABLE]
MoneyX100:
  db 01 56 60 8B 70 20
unregistersymbol(MoneyX100)

MinCredits:
  db 8B 70 60 8B 44 24 68
unregistersymbol(MinCredits)

dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
