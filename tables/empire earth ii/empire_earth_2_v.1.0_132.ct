<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Empire Earth 2 V1.0 Script"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Empire Earth 2
 Game Version  : 1.0
 Script Version: 1.0
 CE Version    : 6.1
 GM, Resources, Tech Points
 25-Sept-2011 Adapted/Improved from my TSearchB Script
 By Recifense
===========================================
}

[ENABLE]
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(EE2.exe+3A188C,d9 5e 58 8d 7e 58)
//assert(EE2.exe+389e35,d9 84 bb 9c 00 00 00)
assert(EE2.exe+2E9941,D9 84 BD 80 00 00 00)
assert(EE2.exe+3b615d,d8 4e 58 8b 7c 24 10)

//=========================================
alloc(MyCode,1024)
//=========================================
// Declaration section
label(_GodMode)
label(_BackGM)
label(_ExitGM)
label(_MonRes)
label(_MonR0)
label(_BackMR)
label(_ExitMR)
label(_MonSel)
label(_BackMS)
label(pSelHP)
label(pSelUnit)
label(pUnit)
label(pHP)
label(pRes)
label(iEnableGM)
label(iEnableMR)
label(iEnableMT)
label(fOne)

registersymbol(MyCode)
registersymbol(pSelHP)
registersymbol(pSelUnit)
registersymbol(pUnit)
registersymbol(pHP)
registersymbol(pRes)
registersymbol(iEnableGM)
registersymbol(iEnableMR)
registersymbol(iEnableMT)

//=========================================
MyCode:
//=========================================
_GodMode:
 mov [pHP],esi                     // Save ptr for debugging

 cmp dword ptr [iEnableGM],0
 je _ExitGM                        // Jump if feature is disabled

 cmp byte ptr [esi+3f],08
 jne _ExitGM

 fstp st(0)                        // Discard value
 fld dword ptr [fOne]              // Get 1.0 = 100%
 mov [esi+58],0

_ExitGM:
 fstp dword ptr [esi+58]           // Original code (Update % HP)
 lea edi,[esi+58]                  // Original code
 jmp _BackGM                       // Back to main code

//=========================================
_MonRes:
 mov [pRes],ebx                    // Save ptr for debugging

 cmp dword ptr [iEnableMR],0
 je _ExitMR                        // Jump if feature is disabled

 cmp edi,9
 je _MonR0

 cmp dword ptr [ebp+edi*4+00000080],(float)5000.0
 jge _ExitMR

 mov dword ptr [ebp+edi*4+00000080],(float)5000.0
 jmp _ExitMR

_MonR0:
 cmp dword ptr [iEnableMT],0
 je _ExitMR                        // Jump if feature is disabled

 cmp dword ptr [ebp+edi*4+00000080],(float)100.0
 jge _ExitMR

 mov dword ptr [ebp+edi*4+00000080],(float)100.0

_ExitMR:
 fld dword ptr [ebp+edi*4+00000080]// Original code
 jmp _BackMR                       // Back to main code

//=========================================
_MonSel:
 mov [pSelHP],esi                  // Save ptr for debugging

 mov edi,[esi+40]
 mov [pSelUnit],edi

 fmul dword ptr [esi+58]           // Original code
 mov edi,[esp+10]                  // Original code
 jmp _BackMS                       // Back to main code

//=========================================
// Variables
iEnableGM:
 dd 1
iEnableMR:
 dd 1
iEnableMT:
 dd 1
pSelHP:
 dd 0
pSelUnit:
 dd 0
pUnit:
 dd 0
pHP:
 dd 0
pRes:
 dd 0
fOne:
 dd (float)1.0

//=========================================
// Hacking Points
EE2.exe+3A188C://
 jmp _GodMode
 nop
_BackGM:

EE2.exe+2E9941://
 jmp _MonRes
 nop
 nop
_BackMR:

EE2.exe+3b615d://
 jmp _MonSel
 nop
 nop
_BackMS:

//=========================================
// Original Codes
[DISABLE]
EE2.exe+3A188C://ok
 fstp dword ptr [esi+58]
 lea edi,[esi+58]

EE2.exe+2E9941://ok
 //fld dword ptr [ebx+edi*4+0000009C]
 fld dword ptr [ebp+edi*4+00000080]

EE2.exe+3b615d://ok
 fmul dword ptr [esi+58]
 mov edi,[esp+10]

unregistersymbol(MyCode)
unregistersymbol(pSelHP)
unregistersymbol(pSelUnit)
unregistersymbol(pUnit)
unregistersymbol(pHP)
unregistersymbol(pRes)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMR)
unregistersymbol(iEnableMT)

dealloc(MyCode)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Enable/Disable God Mode"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Enable/Disable Minimum Resources"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Enable/Disable Minimum Tech Points"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMT</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"No Population"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
//***************pop*************************
alloc(popvar,4)
alloc(glow,4)
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
registersymbol(popvar)
registersymbol(glow)
glow:
dd 0
popvar:
dd 0

006E981B:
jmp newmem2
nop
returnhere2:

newmem2:
push ebx
mov ebx,[ebp+0000091c]
mov [popvar],ebx
pop ebx

originalcode2:
mov edx,[ebp+0000091c]

exit2:
jmp returnhere2

//*******************************************
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

0054C8CD:
jmp newmem
nop
returnhere:

newmem:
push ebx
pushfd
mov ebx,[edi+0000091c]
mov [glow],ebx
cmp [popvar],ebx
jne originalcode
popfd
pop ebx
mov [edi+0000091c],0
jmp returnhere

originalcode:
popfd
pop ebx
mov [edi+0000091c],ecx

exit:
jmp returnhere
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
dealloc(newmem2)

006E981B:
mov edx,[ebp+0000091c]

0054C8CD:
mov [edi+0000091c],ecx
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Instant Unit Production"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

00753393:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
pushfd
mov ebx,[edi+40]
mov edx,[ebx+bc]
cmp edx,1
jne originalcode
mov edx,dword ptr [esi+58]
fst dword ptr [esi+5c]
mov dword ptr [esi+5c],edx
fcomp dword ptr [esi+58]
popfd
popad
jmp returnhere
originalcode:
popfd
popad
fst dword ptr [esi+5c]
fcomp dword ptr [esi+58]

exit:
jmp returnhere
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
00753393:
fst dword ptr [esi+5c]
fcomp dword ptr [esi+58]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"gm + instant"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

007A188C:
jmp newmem
nop
returnhere:

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
pushfd
mov ebx,[esi+40]
mov edx,[ebx+bc]
cmp edx,1
jne originalcode
jmp returnhere

originalcode:
popfd
popad
fstp dword ptr [esi+58]
mov [esi+58],0
lea edi,[esi+58]

exit:
jmp returnhere
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
007A188C:
fstp dword ptr [esi+58]
lea edi,[esi+58]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"Inf Structures"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
0067F038:
nop
nop
nop
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
0067F038:
inc [eax+08]
pop edi
pop esi
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>iEnableIK</Name>
      <Address>024B0117</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnablekill</Name>
      <Address>024B011B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>MyCode</Name>
      <Address>024B0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSelHP</Name>
      <Address>024B00D0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSelUnit</Name>
      <Address>024B00D4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUnit</Name>
      <Address>024B00D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHP</Name>
      <Address>024B00DC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRes</Name>
      <Address>024B00E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableGM</Name>
      <Address>024B00C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMR</Name>
      <Address>024B00C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iEnableMT</Name>
      <Address>024B00CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>popvar</Name>
      <Address>024D0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>glow</Name>
      <Address>024D0004</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Empire Earth 2
 Game Version  : 1.0
 Script Version: 1.0
 CE Version    : 6.0
 GM, Resources, Tech Points
 04-Mar-2011 Adapted/Improved from my TSearchB Script
 By Recifense
===========================================
</Comments>
</CheatTable>
