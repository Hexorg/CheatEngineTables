<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>145</ID>
      <Description>"[v2.00, Build367]"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>124</ID>
          <Description>"[All Characters]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>121</ID>
              <Description>"Undead"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(changedhealthreadAOB,89 55 F8 8B 30 57)
registersymbol(changedhealthreadAOB)

label(pCHHealth)
registersymbol(pCHHealth)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp word ptr [ebx+16E],0
jne originalcode

mov [pCHHealth],ebx

cmp [eax],1
jge originalcode
mov [eax],1

originalcode:
popfd
mov [ebp-08],edx
mov esi,[eax]

exit:
jmp returnhere

///
pCHHealth:
dd 0
///

changedhealthreadAOB: //"trine2_32bit.exe"+4BC776:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
changedhealthreadAOB: //"trine2_32bit.exe"+4BC776:
db 89 55 F8 8B 30
//Alt: mov [ebp-08],edx
//Alt: mov esi,[eax]
unregistersymbol(changedhealthreadAOB)

unregistersymbol(pCHHealth)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>122</ID>
                  <Description>"Health of Hero using"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pCHHealth</Address>
                  <Offsets>
                    <Offset>15C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>148</ID>
              <Description>"get Skill Pts"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(skillptsreadonmenuaccessAOB,8B 81 18 01 00 00 C3 CC CC CC CC CC CC CC CC CC 55 8B EC 8B ** ** 89 ** ** ** ** ** 85 C0)
registersymbol(skillptsreadonmenuaccessAOB)

label(pSkillPoints)
registersymbol(pSkillPoints)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pSkillPoints],ecx

originalcode:
mov eax,[ecx+00000118]

exit:
jmp returnhere

///
pSkillPoints:
dd 0
///

skillptsreadonmenuaccessAOB: //"trine2_32bit.exe"+ECA260:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
skillptsreadonmenuaccessAOB: //"trine2_32bit.exe"+ECA260:
db 8B 81 18 01 00 00
//Alt: mov eax,[ecx+00000118]
unregistersymbol(skillptsreadonmenuaccessAOB)

unregistersymbol(pSkillPoints)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>149</ID>
                  <Description>"Skill Pts, Ctrl + to set 10, Ctrl - to set 0"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSkillPoints</Address>
                  <Offsets>
                    <Offset>118</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>107</Key>
                      </Keys>
                      <Value>10</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>109</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"[Mage]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>132</ID>
              <Description>"Levitate Standing-On Object"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(getisstandingonflagaftercallAOB,8B ** ** ** ** ** 50 E8 ** ** ** ** FF 30 8B CE E8 ** ** ** ** 5E 8B E5 5D C3)
registersymbol(getisstandingonflagaftercallAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
xor al,al

originalcode:
pop esi
mov esp,ebp
pop ebp
ret

exit:
jmp returnhere

///

getisstandingonflagaftercallAOB+15: //"trine2_32bit.exe"+E9690F:
jmp newmem
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
getisstandingonflagaftercallAOB+15: //"trine2_32bit.exe"+E9690F:
db 5E 8B E5 5D C3
//Alt: pop esi
//Alt: mov esp,ebp
//Alt: pop ebp
//Alt: ret
unregistersymbol(getisstandingonflagaftercallAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>135</ID>
              <Description>"set max Blocks/Planks"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(getmaxbpAOB,8B ** ** ** ** ** D9 ** ** C3 CC CC CC CC CC CC 8B 81 D4 00 00 00 C3)
registersymbol(getmaxbpAOB)

label(iMaxBlocks)
registersymbol(iMaxBlocks)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[iMaxBlocks]
jmp exit

originalcode:
mov eax,[ecx+000000D4]

exit:
jmp returnhere

///
iMaxBlocks:
dd #160
///

getmaxbpAOB+10: //"trine2_32bit.exe"+E8C420:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
getmaxbpAOB+10: //"trine2_32bit.exe"+E8C420:
db 8B 81 D4 00 00 00
//Alt: mov eax,[ecx+000000D4]
unregistersymbol(getmaxbpAOB)

unregistersymbol(iMaxBlocks)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>136</ID>
                  <Description>"set max Blocks/Planks"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iMaxBlocks</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>144</ID>
          <Description>"[Thief]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>142</ID>
              <Description>"Inf. Stealth, press R to cancel"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(stealthbarchkzeroAOB,0F 57 C0 0F 2F 86 28 01 00 00)
registersymbol(stealthbarchkzeroAOB)

label(pStealthBar)
registersymbol(pStealthBar)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(cancelstealth)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pStealthBar],esi
pushad
push 'R'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je cancelstealth
fld dword ptr [esi+12c]
fstp dword ptr [esi+128]
jmp originalcode

cancelstealth:
mov dword ptr [esi+128],0
jmp originalcode

originalcode:
comiss xmm0,[esi+00000128]

exit:
jmp returnhere

///
pStealthBar:
dd 0
///

stealthbarchkzeroAOB+3: //"trine2_32bit.exe"+E65C64:
jmp newmem
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
stealthbarchkzeroAOB+3: //"trine2_32bit.exe"+E65C64:
db 0F 2F 86 28 01 00 00
//Alt: comiss xmm0,[esi+00000128]
unregistersymbol(stealthbarchkzeroAOB)

unregistersymbol(pStealthBar)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>143</ID>
                  <Description>"Stealth Bar"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pStealthBar</Address>
                  <Offsets>
                    <Offset>12C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>152</ID>
          <Description>"[Warrior]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>151</ID>
              <Description>"Instant Explosion Hammer"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(warriorchargereadAOB,F3 0F 10 86 78 02 00 00 0F 2F 86 80 02 00 00 76)
registersymbol(warriorchargereadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[esi+280]
movss [esi+278],xmm0
jmp exit

originalcode:
movss xmm0,[esi+00000278]

exit:
jmp returnhere

warriorchargereadAOB: //"trine2_32bit.exe"+6F247B:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
warriorchargereadAOB: //"trine2_32bit.exe"+6F247B:
db F3 0F 10 86 78 02 00 00
//Alt: movss xmm0,[esi+00000278]
unregistersymbol(warriorchargereadAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>160</ID>
              <Description>"Charge No Reload"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(warriormaxchargereadAOB,8B 8E 9C 01 00 00 8B 86 94 01 00 00)
registersymbol(warriormaxchargereadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
xor eax,eax
mov [esi+00000194],eax

originalcode:
mov eax,[esi+00000194]

exit:
jmp returnhere

///

warriormaxchargereadAOB+6: //"trine2_32bit.exe"+E7EA96:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
warriormaxchargereadAOB+6: //"trine2_32bit.exe"+E7EA96:
db 8B 86 94 01 00 00
//Alt: mov eax,[esi+00000194]
unregistersymbol(warriormaxchargereadAOB)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>123</ID>
      <Description>"[v2.00, Build?]"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>116</ID>
          <Description>"[All Characters]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>49</ID>
              <Description>"Undead"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(undeadscriptAOB,8B 45 F8 89 82 74 01 00 00)
registersymbol(undeadscriptAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(pCHHealth)
registersymbol(pCHHealth)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebp-08]

cmp word ptr [edx+00000186],0000
jne originalcode

mov [pCHHealth],edx
cmp eax,1
jge originalcode
mov eax,1
mov [ebp-08],eax

originalcode:
//mov eax,[ebp-08]
mov [edx+00000174],eax

exit:
jmp returnhere

///
pCHHealth:
dd 0
///

undeadscriptAOB: //"trine2_32bit.exe"+739F8D:
jmp newmem
nop
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
undeadscriptAOB: //"trine2_32bit.exe"+739F8D:
db 8B 45 F8 89 82 74 01 00 00
//Alt: mov eax,[ebp-08]
//Alt: mov [edx+00000174],eax
unregistersymbol(pCHHealth)
unregistersymbol(undeadscriptAOB)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>112</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>50</ID>
                  <Description>"Health of Hero using"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pCHHealth</Address>
                  <Offsets>
                    <Offset>174</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>41</ID>
              <Description>"get Skill Pts"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(skillprsscriptAOB,CC CC CC CC CC CC 55 8B EC 51 89 4D FC 8B 45 FC 05 ** ** ** ** 8B E5 5D C3 CC CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 51 89 4D FC 8B 45 FC 8A 80 44 01 00 00 8B E5 5D C3 CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 51 89 4D FC 8B 45 FC 05 ** ** ** ** 8B E5 5D C3 CC CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 51 89 4D FC 8B 45 FC 8B 80 3C 01 00 00 8B E5 5D C3 CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 51 89 4D FC 8B 45 FC 8B 80 38 01 00 00 8B E5 5D C3 CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 51 89 4D FC 8B 45 FC 8B 80 34 01 00 00 8B E5 5D C3 CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 51 89 4D FC 8B 45 FC 8B 80 30 01 00 00)
registersymbol(skillprsscriptAOB)

label(pSkillPts)
registersymbol(pSkillPts)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pSkillPts],eax

originalcode:
mov eax,[eax+00000130]

exit:
jmp returnhere

///
pSkillPts:
dd 0
///

skillprsscriptAOB+D0: //"trine2_32bit.exe"+C5621A:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
skillprsscriptAOB+D0: //"trine2_32bit.exe"+C5621A:
db 8B 80 30 01 00 00
//Alt: mov eax,[eax+00000130]
unregistersymbol(pSkillPts)
unregistersymbol(skillprsscriptAOB)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>112</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>57</ID>
                  <Description>"Skill Pts, Ctrl + to set 10, Ctrl - to set 0"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSkillPts</Address>
                  <Offsets>
                    <Offset>130</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>107</Key>
                      </Keys>
                      <Value>10</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>17</Key>
                        <Key>109</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>117</ID>
          <Description>"[Mage]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>112</ID>
              <Description>"Levitate Standing-On Object"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(getisstandingonflagaftercallAOB,88 45 FF 8A 45 FF 8B E5 5D C3 55)
registersymbol(getisstandingonflagaftercallAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
xor al,al

originalcode:
mov [ebp-01],al
mov al,[ebp-01]

exit:
jmp returnhere

getisstandingonflagaftercallAOB: //"trine2_32bit.exe"+BEA316:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
getisstandingonflagaftercallAOB: //"trine2_32bit.exe"+BEA316:
db 88 45 FF 8A 45 FF
//Alt: mov [ebp-01],al
//Alt: mov al,[ebp-01]
unregistersymbol(getisstandingonflagaftercallAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>45</ID>
              <Description>"set max Blocks/Planks"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(setmaxbpAOB,CC CC CC CC CC CC 55 8B EC 51 89 4D FC 8B 45 FC D9 80 00 01 00 00 8B E5 5D C3 CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 51 89 4D FC 8B 45 FC 8B 80 F0 00 00 00 8B E5 5D C3 CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 51 89 4D FC 8B 45 FC 8B 80 EC 00 00 00)
registersymbol(setmaxbpAOB)

label(maxBlocks)
registersymbol(maxBlocks)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[maxBlocks]
jmp exit

originalcode:
mov eax,[eax+000000EC]

exit:
jmp returnhere

///
maxBlocks:
dd #160
///

setmaxbpAOB+50: //"trine2_32bit.exe"+BEDBAA:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
setmaxbpAOB+50: //"trine2_32bit.exe"+BEDBAA:
db 8B 80 EC 00 00 00
//Alt: mov eax,[eax+000000EC]
unregistersymbol(maxBlocks)
unregistersymbol(setmaxbpAOB)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>112</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>46</ID>
                  <Description>"max Blocks/Planks"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>maxBlocks</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>118</ID>
          <Description>"[Thief]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>102</ID>
              <Description>"(Almost)Every Surface Attachable"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(attachableconditionjmpAOB,0F B6 4D F7 85 C9 74 3E)
registersymbol(attachableconditionjmpAOB)

attachableconditionjmpAOB+6: //"trine2_32bit.exe"+BB223F:
db 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
attachableconditionjmpAOB+6: //"trine2_32bit.exe"+BB223F:
db 74 3E
//Alt: je trine2_32bit.AK::MusicEngine::Init+65EF8F
unregistersymbol(attachableconditionjmpAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>55</ID>
              <Description>"Inf. Stealth, press R to cancel"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(infstealthAOB,CC CC CC CC CC CC 55 8B EC 83 EC 14 89 4D F4 51 D9 45 08 D9 1C 24 8B 4D F4 E8 ** ** ** ** 0F B6 C0 85 C0 75 05 E9 ** ** ** ** 8B 4D F4 F3 0F 10 45 08 F3 0F 11 81 40 01 00 00)
registersymbol(infstealthAOB)

label(pStealth)
registersymbol(pStealth)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(cancelStealth)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pStealth],ecx
pushad
push 'R'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je cancelStealth
push eax
mov eax,[ecx+00000144]
mov dword ptr [ecx+00000140],eax
pop eax
jmp exit

cancelStealth:
mov dword ptr [ecx+00000140],(float)0
jmp exit

originalcode:
//movss [ecx+00000140],xmm0

exit:
jmp returnhere

///
pStealth:
dd 0
///

infstealthAOB+32: //"trine2_32bit.exe"+C06BAC:
jmp newmem
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
infstealthAOB+32: //"trine2_32bit.exe"+C06BAC:
db F3 0F 11 81 40 01 00 00
//Alt: movss [ecx+00000140],xmm0
unregistersymbol(pStealth)
unregistersymbol(infstealthAOB)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>112</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>56</ID>
                  <Description>"Stealth"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pStealth</Address>
                  <Offsets>
                    <Offset>140</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"[Warrior]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>115</ID>
              <Description>"Instant Explosion Hammer"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(weaponchargereadAOB,F3 0F 10 80 A8 02 00 00 0F 2F 81 B0 02 00 00 76)
registersymbol(weaponchargereadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[eax+000002B0]
movss [eax+000002A8],xmm0

originalcode:
//movss xmm0,[eax+000002A8]

exit:
jmp returnhere

weaponchargereadAOB: //"trine2_32bit.exe"+74930F:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
weaponchargereadAOB: //"trine2_32bit.exe"+74930F:
db F3 0F 10 80 A8 02 00 00
//Alt: movss xmm0,[eax+000002A8]
unregistersymbol(weaponchargereadAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>111</ID>
              <Description>"Hammer Return Delay Shorten"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(delayreadonthrowAOB,8B 50 0C FF D2 8B 85 ** ** ** ** 8B 88 E0000000)
registersymbol(delayreadonthrowAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [eax+000000E0],#1500

originalcode:
mov ecx,[eax+000000E0]

exit:
jmp returnhere

delayreadonthrowAOB+b: //"trine2_32bit.exe"+BC85FF:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
delayreadonthrowAOB+b: //"trine2_32bit.exe"+BC85FF:
db 8B 88 E0 00 00 00
//Alt: mov ecx,[eax+000000E0]
unregistersymbol(delayreadonthrowAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>107</ID>
              <Description>"Charge No Reload"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(chargereloadtimewriteonwarriorselectAOB,8B 4D 08 89 88 DC 01 00 00 8B 55 F4)
registersymbol(chargereloadtimewriteonwarriorselectAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
xor ecx,ecx

originalcode:
mov [eax+000001DC],ecx

exit:
jmp returnhere

chargereloadtimewriteonwarriorselectAOB+3: //"trine2_32bit.exe"+BF695F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chargereloadtimewriteonwarriorselectAOB+3: //"trine2_32bit.exe"+BF695F:
db 89 88 DC 01 00 00
//Alt: mov [eax+000001DC],ecx
unregistersymbol(chargereloadtimewriteonwarriorselectAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>104</ID>
              <Description>"Charge Moving Speed Up"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(chargemovespeedreadonwarriorselectedAOB,CC CC CC CC CC CC CC CC CC CC CC CC CC 55 8B EC 83 EC 14 89 4D F4 8B 45 F4 F3 0F 10 45 08 F3 0F 11 80 D8 01 00 00)
registersymbol(chargemovespeedreadonwarriorselectedAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [eax+000001D8],(float)50.0
movss xmm0,[eax+000001D8]

originalcode:
movss [eax+000001D8],xmm0

exit:
jmp returnhere

chargemovespeedreadonwarriorselectedAOB+1e: //"trine2_32bit.exe"+BF6A31:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chargemovespeedreadonwarriorselectedAOB+1e: //"trine2_32bit.exe"+BF6A31:
db F3 0F 11 80 D8 01 00 00
//Alt: movss [eax+000001D8],xmm0
unregistersymbol(chargemovespeedreadonwarriorselectedAOB)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>75</ID>
      <Description>"[old / testing]"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>67</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>24D8BB34</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0F934B30</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>24DC13F0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>2ABAEFB4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24DB21B0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>72</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24DC0258</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>2497914C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>2497914C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>23A20088</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24D93E58</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24DBCDB4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>23A20088</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24D93E58</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>81</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24DBCD38</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24DBCD44</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>83</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24DBCD54</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>84</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24DBCD98</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>85</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24DBCDB4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>86</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>24C89C00</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>87</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>10475BB0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>88</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+000002E0]
movss [ebp+08],xmm0

originalcode:
movss [ecx+000002E0],xmm0

exit:
jmp returnhere

"trine2_32bit.exe"+A2560C:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+A2560C:
db F3 0F 11 81 E0 02 00 00
//Alt: movss [ecx+000002E0],xmm0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>89</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+00000100]
movss [ebp+08],xmm0

originalcode:
movss [ecx+00000100],xmm0

exit:
jmp returnhere

"trine2_32bit.exe"+AE7605:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+AE7605:
db F3 0F 11 81 00 01 00 00
//Alt: movss [ecx+00000100],xmm0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>90</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0113F318</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>91</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>30DBF720</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>92</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [ecx+00000100],(float)1.0

originalcode:
movss xmm0,[ecx+00000100]

exit:
jmp returnhere

"trine2_32bit.exe"+AE750E:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+AE750E:
db F3 0F 10 81 00 01 00 00
//Alt: movss xmm0,[ecx+00000100]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>93</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [ecx+00000100],(float)1.0
movss xmm0,[ecx+00000100]

originalcode:
movss [ecx+00000100],xmm0

exit:
jmp returnhere

"trine2_32bit.exe"+AE7605:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+AE7605:
db F3 0F 11 81 00 01 00 00
//Alt: movss [ecx+00000100],xmm0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"trine2_32bit.exe"+AE7620:
db eb


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+AE7620:
db 75
//Alt: jne
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>95</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>288D0570</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>96</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp [ecx],288D0570
jne originalcode
mov dword ptr [ecx],(float)1.0

originalcode:
popfd
fld dword ptr [ecx]
fsub dword ptr [edx+000002E4]

exit:
jmp returnhere

"trine2_32bit.exe"+A25718:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+A25718:
fld dword ptr [ecx]
fsub dword ptr [edx+000002E4]
//Alt: db D9 01 D8 A2 E4 02 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>97</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [ecx+000002E0],(float)1.0
movss xmm0,[ecx+000002E0]

originalcode:
movss [ecx+000002E0],xmm0

exit:
jmp returnhere

"trine2_32bit.exe"+A2560C:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+A2560C:
db F3 0F 11 81 E0 02 00 00
//Alt: movss [ecx+000002E0],xmm0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>28791E24</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>99</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>28791E20</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>3094649C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov cl,1

originalcode:
mov [eax+00000134],cl

exit:
jmp returnhere

"trine2_32bit.exe"+C0DCFD:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+C0DCFD:
db 88 88 34 01 00 00
//Alt: mov [eax+00000134],cl
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>28983FF0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>105</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28984048</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>106</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28983FF4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>108</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>3231F8B0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>109</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,0

originalcode:
mov [eax+000000E0],ecx

exit:
jmp returnhere

"trine2_32bit.exe"+BC4D5F:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+BC4D5F:
db 89 88 E0 00 00 00
//Alt: mov [eax+000000E0],ecx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [edx+000000E0],0

exit:
jmp returnhere

"trine2_32bit.exe"+BC746C:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+BC746C:
db C7 82 E0 00 00 00 88 13 00 00
//Alt: mov [edx+000000E0],00001388
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>2FDA0D90</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(fMyFullChargeTime)
registersymbol(fMyFullChargeTime)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
comiss xmm0,[fMyFullChargeTime]

originalcode:
comiss xmm0,[ecx+000002B0]

exit:
jmp returnhere

///
fMyFullChargeTime:
dd 0
///

"trine2_32bit.exe"+749317:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+749317:
db 0F 2F 81 B0 02 00 00
//Alt: comiss xmm0,[ecx+000002B0]

unregistersymbol(fMyFullChargeTime)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"[1.18]"</Description>
          <Options moHideChildren="1"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>59</ID>
              <Description>"Undead"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(undeadAOB,8B 45 F8 89 82 BC 01 00 00)
label(undeadAOB_jmp)
registersymbol(undeadAOB_jmp)

label(pCHHealth)
registersymbol(pCHHealth)

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebp-08]

cmp word ptr [edx+000001CE],0000
jne originalcode

mov [pCHHealth],edx
//cmp dword ptr [edx+000001BC],eax
//jle originalcode
//mov eax,[edx+000001BC]
cmp eax,1
jge originalcode
mov eax,1
mov [ebp-08],eax

originalcode:
//mov eax,[ebp-08]
mov [edx+000001BC],eax

exit:
jmp returnhere

///
pCHHealth:
dd 0
///

undeadAOB: //"trine2_32bit.exe"+71FD3D:
undeadAOB_jmp:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
undeadAOB_jmp: //"trine2_32bit.exe"+71FD3D:
db 8B 45 F8 89 82 BC 01 00 00
//Alt: mov eax,[ebp-08]
//Alt: mov [edx+000001BC],eax
unregistersymbol(pCHHealth)
unregistersymbol(undeadAOB_jmp)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>60</ID>
                  <Description>"Health of Hero using"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pCHHealth</Address>
                  <Offsets>
                    <Offset>1BC</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>61</ID>
              <Description>"Inf. Stealth, press R to cancel"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(cancelStealth)
globalalloc(pStealth,4)

///
pStealth:
dd 0
///

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pStealth],ecx
pushad
push 'R'
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je cancelStealth
push eax
mov eax,[ecx+00000174]
mov dword ptr [ecx+00000170],eax
pop eax
jmp exit

cancelStealth:
mov dword ptr [ecx+00000170],(float)0
jmp exit

originalcode:
//movss [ecx+00000170],xmm0

exit:
jmp returnhere

"trine2_32bit.exe"+B9F52C:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+B9F52C:
db F3 0F 11 81 70 01 00 00
//Alt: movss [ecx+00000170],xmm0
dealloc(pStealth)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>62</ID>
                  <Description>"Stealth"</Description>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pStealth</Address>
                  <Offsets>
                    <Offset>170</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>63</ID>
              <Description>"get Skill Pts"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(pSkillPts,4)

///
pSkillPts:
dd 0
///

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pSkillPts],eax

originalcode:
mov eax,[eax+00000154]

exit:
jmp returnhere

"trine2_32bit.exe"+BEBE0A:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+BEBE0A:
db 8B 80 54 01 00 00
//Alt: mov eax,[eax+00000154]
dealloc(pSkillPts)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>64</ID>
                  <Description>"Skill Pts"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSkillPts</Address>
                  <Offsets>
                    <Offset>154</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>65</ID>
              <Description>"set max Blocks/Planks"</Description>
              <Options moHideChildren="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(maxBlocks,4)

///
maxBlocks:
dd #160
///

newmem: //this is allocated memory, you have read,write,execute access
//place your code here\
push ecx
mov ecx,[maxBlocks]
mov [eax+000000F8],ecx
pop ecx

originalcode:
mov eax,[eax+000000F8]

exit:
jmp returnhere

"trine2_32bit.exe"+B8809A:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+B8809A:
db 8B 80 F8 00 00 00
//Alt: mov eax,[eax+000000F8]
dealloc(maxBlocks)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>66</ID>
                  <Description>"max Blocks/Planks"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>maxBlocks</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>120</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1A68CD6C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>125</ID>
          <Description>"No Description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>02526DF4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>126</ID>
          <Description>"No Description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>02526CCC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>127</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,01D334B0

originalcode:
mov ecx,[ebp+0C]
call eax

exit:
jmp returnhere

"trine2_32bit.exe"+D043FB:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+D043FB:
db 8B 4D 0C FF D0
//Alt: mov ecx,[ebp+0C]
//Alt: call eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>128</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov al,1

originalcode:
mov [ebp-09],al
movzx ecx,byte ptr [ebp-09]

exit:
jmp returnhere

"trine2_32bit.exe"+BB21B0:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+BB21B0:
db 88 45 F7 0F B6 4D F7
//Alt: mov [ebp-09],al
//Alt: movzx ecx,byte ptr [ebp-09]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>129</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0026ECA8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>130</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0026ECE0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>131</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0026ED3C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>134</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>34FBA6E4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>137</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>29D03798</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>138</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>315469D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>139</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>31CDA300</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>140</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>80000008</Color>
          <VariableType>Array of byte</VariableType>
          <ByteLength>8</ByteLength>
          <Address>trine2_32bit.exe+88CE46</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>141</ID>
          <Description>"No Description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>315469D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>146</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>2A02292C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>147</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>3183BEE8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>150</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>354423b8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>153</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>354423d4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>154</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>02D7D618</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>155</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>002AF888</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>156</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>362B6234</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>157</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>362B623C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>158</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28EE6C04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>159</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28EE6C0C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>161</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(tpf1)
registersymbol(tpf1)
label(tpf2)
registersymbol(tpf2)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss dword ptr [tpf2],xmm7
cmp dword ptr [tpf2],(float)1.0
jne originalcode
movss xmm7,[tpf1]

originalcode:
push ebp
mov ebp,esp
push ecx
mov eax,[ecx+20]

exit:
jmp returnhere

///
tpf1:
dd (float)-1.0
tpf2:
dd 0
///

"trine2_32bit.exe"+D043F0:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+D043F0:
db 55 8B EC 51 8B 41 20
//Alt: push ebp
//Alt: mov ebp,esp
//Alt: push ecx
//Alt: mov eax,[ecx+20]

unregistersymbol(tpf1)
unregistersymbol(tpf2)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>162</ID>
              <Description>"tpf1"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>tpf1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>163</ID>
              <Description>"tpf2"</Description>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>tpf2</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>164</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov byte ptr [edx+000000C9],01

originalcode:
cmp byte ptr [edx+000000C9],00

exit:
jmp returnhere

"trine2_32bit.exe"+4FB2AE:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"trine2_32bit.exe"+4FB2AE:
db 80 BA C9 00 00 00 00
//Alt: cmp byte ptr [edx+000000C9],00
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>skill pts access (skill menu opening) Code :mov eax,[eax+000000F8]</Description>
      <Address>00FA60DA</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>BA60DA</ModuleNameOffset>
      <Before>
        <Byte>4D</Byte>
        <Byte>FC</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
        <Byte>5D</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>normal health access (only?) Code :mov eax,[eax+000001BC]</Description>
      <Address>00AF8B5A</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>6F8B5A</ModuleNameOffset>
      <Before>
        <Byte>4D</Byte>
        <Byte>FC</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>BC</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
        <Byte>5D</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health access before +- Code :mov edx,[ecx+000001BC]</Description>
      <Address>00AFB41C</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>6FB41C</ModuleNameOffset>
      <Before>
        <Byte>8D</Byte>
        <Byte>70</Byte>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>91</Byte>
        <Byte>BC</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>55</Byte>
        <Byte>F0</Byte>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health +- Code :mov [ecx+000001BC],edx</Description>
      <Address>00AFB505</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>6FB505</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>EC</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>91</Byte>
        <Byte>BC</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>70</Byte>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health access after +- Code :mov eax,[edx+000001BC]</Description>
      <Address>00AFB553</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>6FB553</ModuleNameOffset>
      <Before>
        <Byte>95</Byte>
        <Byte>70</Byte>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>82</Byte>
        <Byte>BC</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>45</Byte>
        <Byte>BC</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>bar onscreen write Code :movss [eax+00000290],xmm0</Description>
      <Address>00DD5A1F</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>9D5A1F</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>80</Byte>
        <Byte>90</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
        <Byte>5D</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>bar onscreen access (when NOT full) Code :fld dword ptr [ecx]</Description>
      <Address>00DD5B28</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>9D5B28</ModuleNameOffset>
      <Before>
        <Byte>4D</Byte>
        <Byte>F0</Byte>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>A2</Byte>
        <Byte>94</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>stealth - Code :movss [ecx+00000168],xmm0</Description>
      <Address>00B7F1EC</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>77F1EC</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>81</Byte>
        <Byte>68</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>F4</Byte>
        <Byte>81</Byte>
        <Byte>C2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>max blocks/planks access when using Code :mov eax,[eax+000000F8]</Description>
      <Address>00F4E10A</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>B4E10A</ModuleNameOffset>
      <Before>
        <Byte>4D</Byte>
        <Byte>FC</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
        <Byte>5D</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>v1.18 skill pts access (skill menu opening) Code :mov eax,[eax+00000154]</Description>
      <Address>00FEBE0A</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>BEBE0A</ModuleNameOffset>
      <Before>
        <Byte>4D</Byte>
        <Byte>FC</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>54</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
        <Byte>5D</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>v1.18 max blocks/planks read when using Code :mov eax,[eax+000000F8]</Description>
      <Address>00F8809A</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>B8809A</ModuleNameOffset>
      <Before>
        <Byte>4D</Byte>
        <Byte>FC</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>E5</Byte>
        <Byte>5D</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>v1.18 health +- Code :mov [edx+000001BC],eax</Description>
      <Address>00B1FD40</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>71FD40</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>F8</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>82</Byte>
        <Byte>BC</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>FC</Byte>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>v1.18 stealth - Code :movss [ecx+00000170],xmm0</Description>
      <Address>00F9F52C</Address>
      <ModuleName>trine2_32bit.exe</ModuleName>
      <ModuleNameOffset>B9F52C</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>81</Byte>
        <Byte>70</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>55</Byte>
        <Byte>F4</Byte>
        <Byte>81</Byte>
        <Byte>C2</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pRemoteClawAmmo</Name>
      <Address>2446013E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthcmpzeroAOB</Name>
      <Address>00D2900C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ongameloadAOB</Name>
      <Address>008BDBE6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somereadAOB</Name>
      <Address>00492B16</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>camerareadAOB</Name>
      <Address>00EDBDCA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>somesubAOB</Name>
      <Address>00431BE3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sometimerAOB</Name>
      <Address>00492DDC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pDisruptorAmmo</Name>
      <Address>0E080104</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pUpgradePts</Name>
      <Address>0E080108</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCamera</Name>
      <Address>0E08010C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bComboNoInterruption</Name>
      <Address>0E080110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bAlwaysSpecialCombo</Name>
      <Address>0E080111</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMissionTimer</Name>
      <Address>194D001D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGadgetCooldownTimer</Name>
      <Address>1E610029</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>comboresetAOB</Name>
      <Address>00430140</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bComboTakedownResetSkip</Name>
      <Address>1E62005B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>combotakedowncounteraddAOB</Name>
      <Address>00431B43</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>meleeweapondurabiliywriteAOB</Name>
      <Address>015D9869</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemvaluereadafteruseAOB</Name>
      <Address>015DDDCF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSth</Name>
      <Address>052F04E8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fSth</Name>
      <Address>052F04EC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredSth</Name>
      <Address>052F04F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockSth</Name>
      <Address>052F0549</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumSth</Name>
      <Address>052F054A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>backpacksizereadAOB</Name>
      <Address>015DDE20</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>staminareadAOB</Name>
      <Address>01546B79</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoclipreadAOB</Name>
      <Address>01677096</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammopouchreadAOB</Name>
      <Address>00774536</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>decryption1AOB</Name>
      <Address>013F4E21</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>predecryptionAOB</Name>
      <Address>013F53E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>encryptionAOB</Name>
      <Address>013F4F70</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>predecryption2AOB</Name>
      <Address>013F5190</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventoryread3AOB</Name>
      <Address>015FDDA1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pPlayer</Name>
      <Address>05410053</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoClip</Name>
      <Address>05410057</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoPouch</Name>
      <Address>0541005B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfAmmoPouch</Name>
      <Address>0541005F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bUseAltEncryption</Name>
      <Address>05410060</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthwriteAOB</Name>
      <Address>01545660</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>humanhealthreadAOB</Name>
      <Address>01546958</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFriendlyAll</Name>
      <Address>08010063</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFriendAll</Name>
      <Address>08010064</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>friendflagreadAOB</Name>
      <Address>01533340</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFriendAllV2</Name>
      <Address>08020148</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bSetHome</Name>
      <Address>08020149</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bSetPositiveAttitude</Name>
      <Address>0802014A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iSecretiveID</Name>
      <Address>0802014B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iWiggedOutID</Name>
      <Address>0802014D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iBrusqueID</Name>
      <Address>0802014F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iUncertainID</Name>
      <Address>08020151</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iExpelledID</Name>
      <Address>08020153</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iMoralObjectionsID</Name>
      <Address>08020155</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iChritableID</Name>
      <Address>08020157</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iConfidentID</Name>
      <Address>08020159</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iTrustingID</Name>
      <Address>0802015B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>staminawriteAOB</Name>
      <Address>015361BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoclipwriteAOB</Name>
      <Address>01678F76</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>meleeweapondurabilitywriteAOB</Name>
      <Address>015FE319</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gundurabilityAOB</Name>
      <Address>015FDED9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemvaluereadbeforeuseAOB</Name>
      <Address>015FEC1F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>radioactionscooldownwriteAOB</Name>
      <Address>0162884C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pRadioActions</Name>
      <Address>0A210036</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInstantCooldownRActions</Name>
      <Address>0A210035</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>checkproperdecryptAOB</Name>
      <Address>0146F437</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>getrealaddresspredecryptAOB</Name>
      <Address>013F542A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMedicine</Name>
      <Address>0A22046B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMedicine</Name>
      <Address>0A22046F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredMedicine</Name>
      <Address>0A220473</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFood</Name>
      <Address>0A220477</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fFood</Name>
      <Address>0A22047B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredFood</Name>
      <Address>0A22047F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmunition</Name>
      <Address>0A220483</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fAmmunition</Name>
      <Address>0A220487</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredAmmunition</Name>
      <Address>0A22048B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMaterial</Name>
      <Address>0A22048F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMaterial</Name>
      <Address>0A220493</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredMaterial</Name>
      <Address>0A220497</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pFuel</Name>
      <Address>0A22049B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fFuel</Name>
      <Address>0A22049F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredFuel</Name>
      <Address>0A2204A3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInfluence</Name>
      <Address>0A2204A7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fInfluence</Name>
      <Address>0A2204AB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredInfluence</Name>
      <Address>0A2204AF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBeds</Name>
      <Address>0A2204B3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fBeds</Name>
      <Address>0A2204B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredBeds</Name>
      <Address>0A2204BB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bTypeFlag</Name>
      <Address>0A2204BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockMedicine</Name>
      <Address>0A2204C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumMedicine</Name>
      <Address>0A2204C1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockFood</Name>
      <Address>0A2204C2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumFood</Name>
      <Address>0A2204C3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockAmmunition</Name>
      <Address>0A2204C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumAmmunition</Name>
      <Address>0A2204C5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockMaterial</Name>
      <Address>0A2204C6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumMaterial</Name>
      <Address>0A2204C7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockFuel</Name>
      <Address>0A2204C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumFuel</Name>
      <Address>0A2204C9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockInfluence</Name>
      <Address>0A2204CA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumInfluence</Name>
      <Address>0A2204CB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockBeds</Name>
      <Address>0A2204CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumBeds</Name>
      <Address>0A2204CD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>domoraledecryptionAOB</Name>
      <Address>0146F3E9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMorale</Name>
      <Address>0A23015A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fMorale</Name>
      <Address>0A23015E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fDesiredMorale</Name>
      <Address>0A230162</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bLockMorale</Name>
      <Address>0A230166</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bMinimumMorale</Name>
      <Address>0A230167</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hlcharinfogroup1readAOB</Name>
      <Address>01532F6B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHightlightedCharacter</Name>
      <Address>0A55001F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventoryreadAOB</Name>
      <Address>015FDC29</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventorytypereadAOB</Name>
      <Address>015FDC00</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInventory</Name>
      <Address>0A560051</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pInventoryType</Name>
      <Address>0A560055</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBagSize</Name>
      <Address>0A560059</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aimflagcheckzeroAOB</Name>
      <Address>0165D729</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bSpecialTechniqueSlot</Name>
      <Address>088E0094</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bAimFlag</Name>
      <Address>088E0095</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pLuneth</Name>
      <Address>00E46114</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Arc</Name>
      <Address>00D263E8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Refia</Name>
      <Address>00D266E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Ingus</Name>
      <Address>00D269D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Luneth</Name>
      <Address>014160F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>battletypewroteAPB</Name>
      <Address>0144A5B3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>BestiaryBase</Name>
      <Address>005E58E4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Character1</Name>
      <Address>005E60F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Character2</Name>
      <Address>005E63E8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Character3</Name>
      <Address>005E66E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Character4</Name>
      <Address>005E69D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlighteditemidreadAOB</Name>
      <Address>014B5A92</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pherobasereadAOB</Name>
      <Address>013FA6CD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pmoneybasereadAOB</Name>
      <Address>014BD3C7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bestiarybasereadAOB</Name>
      <Address>01535D89</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItemBase</Name>
      <Address>007A0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHighlightedItem</Name>
      <Address>007A0024</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>013FA6CF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pMoney</Name>
      <Address>014BD3C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aBestiaryBase</Name>
      <Address>016B58E4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthsubinbattleAOB</Name>
      <Address>014251CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthreadinbattleAOB</Name>
      <Address>01414C6C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bOneHitKill</Name>
      <Address>009700A1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mpwriteoncastAOB</Name>
      <Address>0140CAC9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mpwroteoutsidebattle1AOB</Name>
      <Address>015B2B50</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mpwroteoutsidebattle2AOB</Name>
      <Address>015B157B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mpchkzerooncastAOB</Name>
      <Address>014368FC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemquantitywrite1AOB</Name>
      <Address>01405B13</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>arrowsubAOB</Name>
      <Address>0142D7EA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>moneysubAOB</Name>
      <Address>01610511</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Money</Name>
      <Address>016B79D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jobreadonbattleloadAOB</Name>
      <Address>01414E5C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>charslot1jobreadonfieldloadAOB</Name>
      <Address>0154CCA6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bOnionKnightsAppearAsFreelancers</Name>
      <Address>01390129</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCharacterSlot1Appearance</Name>
      <Address>0139012A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCharacterSlot2Appearance</Name>
      <Address>0139012B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCharacterSlot3Appearance</Name>
      <Address>0139012C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bCharacterSlot4Appearance</Name>
      <Address>0139012D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jobchkonmagicmenuAOB</Name>
      <Address>014BA1FF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jobchkoncastAOB</Name>
      <Address>0143696E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jobchkinequipmenuAOB</Name>
      <Address>014B7422</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jobchkonequipAOB</Name>
      <Address>01433883</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jobchkonequip2AOB</Name>
      <Address>01433EA0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jobadjustmentphasewriteAOB</Name>
      <Address>014327E1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>battlecheckAOB</Name>
      <Address>0155A54D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>physicalattackreadonattack1AOB</Name>
      <Address>01402B17</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fC1AttackMultiplier</Name>
      <Address>024D00C0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fC2AttackMultiplier</Name>
      <Address>024D00C4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fC3AttackMultiplier</Name>
      <Address>024D00C8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fC4AttackMultiplier</Name>
      <Address>024D00CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mindreadonbeingcastspellonAOB</Name>
      <Address>01404F74</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>intellectreadoncastAOB</Name>
      <Address>01404F68</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bAlwaysHitEnemy</Name>
      <Address>024E0164</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bAlwaysMissParty</Name>
      <Address>024E0163</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jobexpchkonbattleendAOB</Name>
      <Address>0142AE39</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>expwriteAOB</Name>
      <Address>01430CD7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fEXPMultiplier</Name>
      <Address>0270001C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aCharacterSlot1</Name>
      <Address>016B60F0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aCharacterSlot2</Name>
      <Address>016B63E8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aCharacterSlot3</Name>
      <Address>016B66E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aCharacterSlot4</Name>
      <Address>016B69D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>heyho</Name>
      <Address>21730000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>slowmoSpeed</Name>
      <Address>21740000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>changedhealthreadAOB</Name>
      <Address>0188C776</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>skillptsreadonmenuaccessAOB</Name>
      <Address>0229A260</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSkillPoints</Name>
      <Address>0E6A0011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>getmaxbpAOB</Name>
      <Address>0225C410</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iMaxBlocks</Name>
      <Address>0E6C0015</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stealthbarchkzeroAOB</Name>
      <Address>02235C61</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pStealthBar</Name>
      <Address>0E6D0049</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>warriorchargereadAOB</Name>
      <Address>01AC247B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>warriormaxchargereadAOB</Name>
      <Address>0224EA90</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>infstealthAOB</Name>
      <Address> 01006B7A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pStealth</Name>
      <Address>2A360044</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>attachableconditionjmpAOB</Name>
      <Address> 00FB2239</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>setmaxbpAOB</Name>
      <Address> 00FEDB5A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>maxBlocks</Name>
      <Address>2A370015</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>getisstandingonflagaftercallAOB</Name>
      <Address> 00FEA316</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>chargemovespeedreadonwarriorselectedAOB</Name>
      <Address> 00FF6A13</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>chargereloadtimewriteonwarriorselectAOB</Name>
      <Address> 00FF695C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>delayreadonthrowAOB</Name>
      <Address> 00FC85F4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weaponchargereadAOB</Name>
      <Address> 00B4930F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>skillprsscriptAOB</Name>
      <Address> 0105614A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSkillPts</Name>
      <Address>2A3D0011</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>undeadscriptAOB</Name>
      <Address> 00B39F8D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCHHealth</Name>
      <Address>2A3E0034</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?t=544798#5303941
</Comments>
</CheatTable>
