<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Oxyrock does not lose weight from passive release"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : OxygenNotIncluded.exe
  Version: 
  Date   : 2017-02-22
  Author : Wat

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(oxyrock,SimDLL.dll,F3 42 0F 11 44 A1 08) // should be unique
alloc(newmem,$1000,"SimDLL.dll"+1CC14)

label(code)
label(return)

newmem:

code:

//  movss [rcx+r12*4+08],xmm0
  jmp return

oxyrock:
  jmp newmem
  nop
  nop
return:
registersymbol(oxyrock)

[DISABLE]

oxyrock:
  db F3 42 0F 11 44 A1 08

unregistersymbol(oxyrock)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SimDLL.dll"+1CC14

"SimDLL.dll"+1CBDF: 7D 23                       -  jnl SimDLL.dll+1CC04
"SimDLL.dll"+1CBE1: 49 8D 8F A8 00 00 00        -  lea rcx,[r15+000000A8]
"SimDLL.dll"+1CBE8: F3 0F 11 44 24 40           -  movss [rsp+40],xmm0
"SimDLL.dll"+1CBEE: 48 8D 54 24 38              -  lea rdx,[rsp+38]
"SimDLL.dll"+1CBF3: 89 44 24 38                 -  mov [rsp+38],eax
"SimDLL.dll"+1CBF7: C7 44 24 3C 60 C8 19 01     -  mov [rsp+3C],0119C860
"SimDLL.dll"+1CBFF: E8 3C 05 00 00              -  call SimDLL.dll+1D140
"SimDLL.dll"+1CC04: 48 8B 4C 24 30              -  mov rcx,[rsp+30]
"SimDLL.dll"+1CC09: F3 42 0F 10 44 A1 08        -  movss xmm0,[rcx+r12*4+08]
"SimDLL.dll"+1CC10: F3 0F 5C C6                 -  subss xmm0,xmm6
// ---------- INJECTING HERE ----------
"SimDLL.dll"+1CC14: F3 42 0F 11 44 A1 08        -  movss [rcx+r12*4+08],xmm0
// ---------- DONE INJECTING  ----------
"SimDLL.dll"+1CC1B: 48 8B 43 20                 -  mov rax,[rbx+20]
"SimDLL.dll"+1CC1F: F3 42 0F 58 34 A8           -  addss xmm6,[rax+r13*4]
"SimDLL.dll"+1CC25: F3 42 0F 11 34 A8           -  movss [rax+r13*4],xmm6
"SimDLL.dll"+1CC2B: 46 0F 2F 5C A1 08           -  comiss xmm11,[rcx+r12*4+08]
"SimDLL.dll"+1CC31: 72 1F                       -  jb SimDLL.dll+1CC52
"SimDLL.dll"+1CC33: 48 8B 4B 18                 -  mov rcx,[rbx+18]
"SimDLL.dll"+1CC37: 4D 8B C5                    -  mov r8,r13
"SimDLL.dll"+1CC3A: 0F B6 43 0D                 -  movzx eax,byte ptr [rbx+0D]
"SimDLL.dll"+1CC3E: 48 8B D3                    -  mov rdx,rbx
"SimDLL.dll"+1CC41: 42 88 04 A1                 -  mov [rcx+r12*4],al
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"Infinite manual water extraction by dupes"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : OxygenNotIncluded.exe
  Version: 
  Date   : 2017-02-22
  Author : Wat

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Watertake,SimDLL.dll,F3 0F 11 01 F3 0F 10 4D 00) // should be unique
alloc(newmem,$1000,"SimDLL.dll"+144F8)

label(code)
label(return)

newmem:

code:
  //movss [rcx],xmm0
  movss xmm1,[rbp+00]
  jmp return

Watertake:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(Watertake)

[DISABLE]

Watertake:
  db F3 0F 11 01 F3 0F 10 4D 00

unregistersymbol(Watertake)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "SimDLL.dll"+144F8

"SimDLL.dll"+144C9: 0F 85 AD 00 00 00        -  jne SimDLL.dll+1457C
"SimDLL.dll"+144CF: 49 8D 48 02              -  lea rcx,[r8+02]
"SimDLL.dll"+144D3: 48 8B C5                 -  mov rax,rbp
"SimDLL.dll"+144D6: F3 41 0F 10 04 89        -  movss xmm0,[r9+rcx*4]
"SimDLL.dll"+144DC: 49 8D 0C 89              -  lea rcx,[r9+rcx*4]
"SimDLL.dll"+144E0: 0F 2F 45 00              -  comiss xmm0,[rbp+00]
"SimDLL.dll"+144E4: 48 0F 42 C1              -  cmovb rax,rcx
"SimDLL.dll"+144E8: F3 0F 10 20              -  movss xmm4,[rax]
"SimDLL.dll"+144EC: 48 8B 84 24 B8 00 00 00  -  mov rax,[rsp+000000B8]
"SimDLL.dll"+144F4: F3 0F 5C C4              -  subss xmm0,xmm4
// ---------- INJECTING HERE ----------
"SimDLL.dll"+144F8: F3 0F 11 01              -  movss [rcx],xmm0
"SimDLL.dll"+144FC: F3 0F 10 4D 00           -  movss xmm1,[rbp+00]
// ---------- DONE INJECTING  ----------
"SimDLL.dll"+14501: F3 0F 5C CC              -  subss xmm1,xmm4
"SimDLL.dll"+14505: F3 0F 11 4D 00           -  movss [rbp+00],xmm1
"SimDLL.dll"+1450A: F3 0F 10 58 08           -  movss xmm3,[rax+08]
"SimDLL.dll"+1450F: F3 43 0F 10 54 81 04     -  movss xmm2,[r9+r8*4+04]
"SimDLL.dll"+14516: 0F 2F DA                 -  comiss xmm3,xmm2
"SimDLL.dll"+14519: 73 08                    -  jae SimDLL.dll+14523
"SimDLL.dll"+1451B: 0F 28 EB                 -  movaps xmm5,xmm3
"SimDLL.dll"+1451E: 0F 28 F2                 -  movaps xmm6,xmm2
"SimDLL.dll"+14521: EB 06                    -  jmp SimDLL.dll+14529
"SimDLL.dll"+14523: 0F 28 EA                 -  movaps xmm5,xmm2
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"Power use by batteries nullified (in and out) -turn on after battery has some power"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : OxygenNotIncluded.exe
  Version: 
  Date   : 2017-02-24
  Author : Wat

  This script does blah blah blah
}

[ENABLE]

aobscan(poweruse,F3 0F 11 68 58 48 83) // should be unique
alloc(newmem,$1000,C3AC5D00)

label(code)
label(return)

newmem:

code:
  //movss [rax+58],xmm5
  jmp return

poweruse:
  jmp newmem
return:
registersymbol(poweruse)

[DISABLE]

poweruse:
  db F3 0F 11 68 58

unregistersymbol(poweruse)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: C3AC5D00

""+C3AC5CDD: 00 00                          -  add [rax],al
""+C3AC5CDF: 00 48 83                       -  add [rax-7D],cl
""+C3AC5CE2: EC                             -  in al,dx
""+C3AC5CE3: 18 48 89                       -  sbb [rax-77],cl
""+C3AC5CE6: 0C 24                          -  or al,24
""+C3AC5CE8: F3 0F 11 4C 24 08              -  movss [rsp+08],xmm1
""+C3AC5CEE: F3 0F 10 44 24 08              -  movss xmm0,[rsp+08]
""+C3AC5CF4: F3 0F 5A C0                    -  cvtss2sd xmm0,xmm0
""+C3AC5CF8: 48 8B 04 24                    -  mov rax,[rsp]
""+C3AC5CFC: F2 0F 5A E8                    -  cvtsd2ss xmm5,xmm0
// ---------- INJECTING HERE ----------
""+C3AC5D00: F3 0F 11 68 58                 -  movss [rax+58],xmm5
// ---------- DONE INJECTING  ----------
""+C3AC5D05: 48 83 C4 18                    -  add rsp,18
""+C3AC5D09: C3                             -  ret 
""+C3AC5D0A: 00 00                          -  add [rax],al
""+C3AC5D0C: 00 00                          -  add [rax],al
""+C3AC5D0E: 00 00                          -  add [rax],al
""+C3AC5D10: 00 00                          -  add [rax],al
""+C3AC5D12: 00 00                          -  add [rax],al
""+C3AC5D14: 2A 00                          -  sub al,[rax]
""+C3AC5D16: 00 00                          -  add [rax],al
""+C3AC5D18: 3C 00                          -  cmp al,00
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of movss [rax+rdi*4+08],xmm0</Description>
      <Address>7FF97783A407</Address>
      <ModuleName>SimDLL.dll</ModuleName>
      <ModuleNameOffset>1A407</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>B8</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>28</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rcx],xmm0</Description>
      <Address>7FF9778344F8</Address>
      <ModuleName>SimDLL.dll</ModuleName>
      <ModuleNameOffset>144F8</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>C4</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>4D</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss [rax+58],xmm5</Description>
      <Address>C3AC5D00</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>24</Byte>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>68</Byte>
        <Byte>58</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>18</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>Watertake</Name>
      <Address> 7FFA707344F8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>poweruse</Name>
      <Address> C3AC5D00</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
