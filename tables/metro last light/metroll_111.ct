<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>343</ID>
      <Description>"INFINITE HEALTH  [by mgr.inz.Player]"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(Health,MetroLL.exe,8B 81 A4 03 00 00 85 C0 74 23) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [ecx+00000204],(float)1.0
  movss xmm0,[ecx+00000204]

code:
  mov eax,[ecx+000003A4]
  jmp return

Health:
  jmp newmem
  nop
return:
registersymbol(Health)

[DISABLE]
Health:
  db 8B 81 A4 03 00 00

unregistersymbol(Health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+22BBEB

"MetroLL.exe"+22BBCA:     ret 0008
"MetroLL.exe"+22BBCD:     int 3
"MetroLL.exe"+22BBCE:     int 3
"MetroLL.exe"+22BBCF:     int 3
"MetroLL.exe"+22BBD0:     mov eax,[MetroLL.exe+905ECC]
"MetroLL.exe"+22BBD5:     cmp ecx,[eax+20]
"MetroLL.exe"+22BBD8:     jne MetroLL.exe+22BC18
"MetroLL.exe"+22BBDA:     movss xmm0,[ecx+00000204]
"MetroLL.exe"+22BBE2:     comiss xmm0,[MetroLL.exe+8DAE94]
"MetroLL.exe"+22BBE9:     jna MetroLL.exe+22BC18
// ---------- INJECTING HERE ----------
"MetroLL.exe"+22BBEB:     mov eax,[ecx+000003A4]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+22BBF1:     test eax,eax
"MetroLL.exe"+22BBF3:     je MetroLL.exe+22BC18
"MetroLL.exe"+22BBF5:     mov ecx,[eax+4C]
"MetroLL.exe"+22BBF8:     mov ecx,[eax+ecx*4+34]
"MetroLL.exe"+22BBFC:     test ecx,ecx
"MetroLL.exe"+22BBFE:     je MetroLL.exe+22BC18
"MetroLL.exe"+22BC00:     mov edx,[ecx+00000104]
"MetroLL.exe"+22BC06:     cmp byte ptr [edx+1F],00
"MetroLL.exe"+22BC0A:     je MetroLL.exe+22BC18
"MetroLL.exe"+22BC0C:     cmp dword ptr [eax+58],00
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>344</ID>
      <Description>"INFINITE AMMO"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(AMMO,MetroLL.exe,8B 81 A4 03 00 00 C3 56) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [ecx+000003A4],#999
code:
  mov eax,[ecx+000003A4]
  jmp return

AMMO:
  jmp newmem
  nop
return:
registersymbol(AMMO)

[DISABLE]
AMMO:
  db 8B 81 A4 03 00 00

unregistersymbol(AMMO)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+1690B1

"MetroLL.exe"+169085:     ret
"MetroLL.exe"+169086:     movzx eax,byte ptr [ecx+0000034B]
"MetroLL.exe"+16908D:     ret
"MetroLL.exe"+16908E:     mov al,[esp+04]
"MetroLL.exe"+169092:     mov [ecx+0000034B],al
"MetroLL.exe"+169098:     ret 0004
"MetroLL.exe"+16909B:     add ecx,000002B0
"MetroLL.exe"+1690A1:     jmp MetroLL.exe+1DD1C0
"MetroLL.exe"+1690A6:     add ecx,000002B0
"MetroLL.exe"+1690AC:     jmp MetroLL.exe+1DD260
// ---------- INJECTING HERE ----------
"MetroLL.exe"+1690B1:     mov eax,[ecx+000003A4]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+1690B7:     ret
"MetroLL.exe"+1690B8:     push esi
"MetroLL.exe"+1690B9:     mov esi,ecx
"MetroLL.exe"+1690BB:     mov eax,[esi]
"MetroLL.exe"+1690BD:     call dword ptr [eax+00000110]
"MetroLL.exe"+1690C3:     test eax,eax
"MetroLL.exe"+1690C5:     je MetroLL.exe+1690D6
"MetroLL.exe"+1690C7:     lea ecx,[esi-000002B0]
"MetroLL.exe"+1690CD:     mov eax,[ecx]
"MetroLL.exe"+1690CF:     pop esi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>345</ID>
      <Description>"INFINITE MEDKITS"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(Medkits,MetroLL.exe,8B 91 EC 02 00 00 33) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [ecx+000002EC],#31
code:
  mov edx,[ecx+000002EC]
  jmp return

Medkits:
  jmp newmem
  nop
return:
registersymbol(Medkits)

[DISABLE]
Medkits:
  db 8B 91 EC 02 00 00

unregistersymbol(Medkits)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+2D446B

"MetroLL.exe"+2D4459:     int 3
"MetroLL.exe"+2D445A:     int 3
"MetroLL.exe"+2D445B:     int 3
"MetroLL.exe"+2D445C:     int 3
"MetroLL.exe"+2D445D:     int 3
"MetroLL.exe"+2D445E:     int 3
"MetroLL.exe"+2D445F:     int 3
"MetroLL.exe"+2D4460:     push esi
"MetroLL.exe"+2D4461:     mov esi,[esp+10]
"MetroLL.exe"+2D4465:     mov [esi],00000000
// ---------- INJECTING HERE ----------
"MetroLL.exe"+2D446B:     mov edx,[ecx+000002EC]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+2D4471:     xor eax,eax
"MetroLL.exe"+2D4473:     test dl,01
"MetroLL.exe"+2D4476:     je MetroLL.exe+2D447D
"MetroLL.exe"+2D4478:     mov eax,00000001
"MetroLL.exe"+2D447D:     test dl,02
"MetroLL.exe"+2D4480:     je MetroLL.exe+2D4483
"MetroLL.exe"+2D4482:     inc eax
"MetroLL.exe"+2D4483:     test dl,04
"MetroLL.exe"+2D4486:     je MetroLL.exe+2D4489
"MetroLL.exe"+2D4488:     inc eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>346</ID>
      <Description>"INFINITE CLAYMORES"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(Claymores,MetroLL.exe,8B 81 FC 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [ecx+000001FC],#5
code:
  mov eax,[ecx+000001FC]
  jmp return

Claymores:
  jmp newmem
  nop
return:
registersymbol(Claymores)

[DISABLE]
Claymores:
  db 8B 81 FC 01 00 00

unregistersymbol(Claymores)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+17F931

"MetroLL.exe"+17F905:     mov [esi+00000500],MetroLL.exe+7E5758
"MetroLL.exe"+17F90F:     mov [esi+000005B0],MetroLL.exe+7E8A74
"MetroLL.exe"+17F919:     mov [esi+000005CC],ebx
"MetroLL.exe"+17F91F:     mov [esi+0000064C],ebx
"MetroLL.exe"+17F925:     pop edi
"MetroLL.exe"+17F926:     mov [esi+00000650],ebx
"MetroLL.exe"+17F92C:     mov eax,esi
"MetroLL.exe"+17F92E:     pop esi
"MetroLL.exe"+17F92F:     pop ebx
"MetroLL.exe"+17F930:     ret
// ---------- INJECTING HERE ----------
"MetroLL.exe"+17F931:     mov eax,[ecx+000001FC]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+17F937:     ret
"MetroLL.exe"+17F938:     mov eax,[esp+04]
"MetroLL.exe"+17F93C:     mov [ecx+000001FC],eax
"MetroLL.exe"+17F942:     ret 0004
"MetroLL.exe"+17F945:     add ecx,FFFFFE80
"MetroLL.exe"+17F94B:     mov eax,[ecx]
"MetroLL.exe"+17F94D:     jmp dword ptr [eax+000001B4]
"MetroLL.exe"+17F953:     mov al,[ecx-000000EE]
"MetroLL.exe"+17F959:     ret
"MetroLL.exe"+17F95A:     push 09
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>347</ID>
      <Description>"INFINITE ELECTRICITY"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(Electricity,MetroLL.exe,F3 0F 10 86 F4 02 00 00 F3 0F 10) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [esi+000002F4],(float)2
code:
  movss xmm0,[esi+000002F4]
  jmp return

Electricity:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Electricity)

[DISABLE]
Electricity:
  db F3 0F 10 86 F4 02 00 00

unregistersymbol(Electricity)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+2D5510

"MetroLL.exe"+2D54FC:     pop esi
"MetroLL.exe"+2D54FD:     ret
"MetroLL.exe"+2D54FE:     int 3
"MetroLL.exe"+2D54FF:     int 3
"MetroLL.exe"+2D5500:     push esi
"MetroLL.exe"+2D5501:     push edi
"MetroLL.exe"+2D5502:     mov edi,[esp+14]
"MetroLL.exe"+2D5506:     mov esi,ecx
"MetroLL.exe"+2D5508:     test edi,edi
"MetroLL.exe"+2D550A:     je MetroLL.exe+2D55E6
// ---------- INJECTING HERE ----------
"MetroLL.exe"+2D5510:     movss xmm0,[esi+000002F4]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+2D5518:     movss xmm1,[esp+0C]
"MetroLL.exe"+2D551E:     mulss xmm1,[esp+10]
"MetroLL.exe"+2D5524:     mov eax,[esi+00000144]
"MetroLL.exe"+2D552A:     movss [esp+14],xmm0
"MetroLL.exe"+2D5530:     subss xmm0,xmm1
"MetroLL.exe"+2D5534:     movss [esi+000002F4],xmm0
"MetroLL.exe"+2D553C:     movss xmm3,[MetroLL.exe+8DAE80]
"MetroLL.exe"+2D5544:     xorps xmm1,xmm1
"MetroLL.exe"+2D5547:     movss xmm1,xmm0
"MetroLL.exe"+2D554B:     movaps xmm0,xmm1
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>348</ID>
      <Description>"INFINITE FILTER DURATION "</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(Filter,MetroLL.exe,D9 81 80 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [ecx+00000180],(float)3000
code:
  fld dword ptr [ecx+00000180]
  jmp return

Filter:
  jmp newmem
  nop
return:
registersymbol(Filter)

[DISABLE]
Filter:
  db D9 81 80 01 00 00

unregistersymbol(Filter)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+180B5C

"MetroLL.exe"+180B4D:     je MetroLL.exe+180B57
"MetroLL.exe"+180B4F:     cmp al,02
"MetroLL.exe"+180B51:     je MetroLL.exe+180B57
"MetroLL.exe"+180B53:     xor eax,eax
"MetroLL.exe"+180B55:     pop esi
"MetroLL.exe"+180B56:     ret
"MetroLL.exe"+180B57:     xor eax,eax
"MetroLL.exe"+180B59:     inc eax
"MetroLL.exe"+180B5A:     pop esi
"MetroLL.exe"+180B5B:     ret
// ---------- INJECTING HERE ----------
"MetroLL.exe"+180B5C:     fld dword ptr [ecx+00000180]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+180B62:     fadd dword ptr [MetroLL.exe+7894E0]
"MetroLL.exe"+180B68:     jmp MetroLL.exe+48CBC6
"MetroLL.exe"+180B6D:     mov eax,[esp+04]
"MetroLL.exe"+180B71:     fild dword ptr [esp+04]
"MetroLL.exe"+180B75:     test eax,eax
"MetroLL.exe"+180B77:     jns MetroLL.exe+180B7F
"MetroLL.exe"+180B79:     fadd dword ptr [MetroLL.exe+8DAF68]
"MetroLL.exe"+180B7F:     fstp dword ptr [ecx+00000180]
"MetroLL.exe"+180B85:     ret 0004
"MetroLL.exe"+180B88:     sub ecx,000002B0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>349</ID>
      <Description>"INFINITE AMMO IN AIR RIFLE"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(AirRifle,MetroLL.exe,8B 81 6C 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [ecx+0000016C],#999
code:
  mov eax,[ecx+0000016C]
  jmp return

AirRifle:
  jmp newmem
  nop
return:
registersymbol(AirRifle)

[DISABLE]
AirRifle:
  db 8B 81 6C 01 00 00

unregistersymbol(AirRifle)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+169579

"MetroLL.exe"+16954F:     mov [esi+000002B4],MetroLL.exe+7B5108
"MetroLL.exe"+169559:     mov [esi+000003A0],MetroLL.exe+77CE48
"MetroLL.exe"+169563:     mov eax,esi
"MetroLL.exe"+169565:     pop esi
"MetroLL.exe"+169566:     ret
"MetroLL.exe"+169567:     add ecx,FFFFFF10
"MetroLL.exe"+16956D:     mov eax,[ecx]
"MetroLL.exe"+16956F:     jmp dword ptr [eax+000001B4]
"MetroLL.exe"+169575:     mov al,[ecx-5E]
"MetroLL.exe"+169578:     ret
// ---------- INJECTING HERE ----------
"MetroLL.exe"+169579:     mov eax,[ecx+0000016C]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+16957F:     ret
"MetroLL.exe"+169580:     mov eax,[esp+04]
"MetroLL.exe"+169584:     mov [ecx+0000016C],eax
"MetroLL.exe"+16958A:     ret 0004
"MetroLL.exe"+16958D:     mov eax,[ecx+0000041C]
"MetroLL.exe"+169593:     ret
"MetroLL.exe"+169594:     mov eax,[esp+04]
"MetroLL.exe"+169598:     mov [ecx+0000041C],eax
"MetroLL.exe"+16959E:     ret 0004
"MetroLL.exe"+1695A1:     mov ecx,[esp+04]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>350</ID>
      <Description>"INFINITE KNIVES AND BOMBS"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(KnivesBombs,MetroLL.exe,8B 81 BC 04 00 00 C3) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [ecx+000004BC],#5
code:
  mov eax,[ecx+000004BC]
  jmp return

KnivesBombs:
  jmp newmem
  nop
return:
registersymbol(KnivesBombs)

[DISABLE]
KnivesBombs:
  db 8B 81 BC 04 00 00

unregistersymbol(KnivesBombs)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+174CDF

"MetroLL.exe"+174CC0:     mov [esi+000004C0],MetroLL.exe+7CB51C
"MetroLL.exe"+174CCA:     mov [esi+000006F0],MetroLL.exe+831088
"MetroLL.exe"+174CD4:     mov eax,esi
"MetroLL.exe"+174CD6:     pop esi
"MetroLL.exe"+174CD7:     ret
"MetroLL.exe"+174CD8:     xor eax,eax
"MetroLL.exe"+174CDA:     inc eax
"MetroLL.exe"+174CDB:     ret
"MetroLL.exe"+174CDC:     mov al,03
"MetroLL.exe"+174CDE:     ret
// ---------- INJECTING HERE ----------
"MetroLL.exe"+174CDF:     mov eax,[ecx+000004BC]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+174CE5:     ret
"MetroLL.exe"+174CE6:     mov eax,[esp+04]
"MetroLL.exe"+174CEA:     and eax,00004000
"MetroLL.exe"+174CEF:     ret 0008
"MetroLL.exe"+174CF2:     push esi
"MetroLL.exe"+174CF3:     mov esi,ecx
"MetroLL.exe"+174CF5:     call MetroLL.exe+17014F
"MetroLL.exe"+174CFA:     test al,al
"MetroLL.exe"+174CFC:     jne MetroLL.exe+174D08
"MetroLL.exe"+174CFE:     xor eax,eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>351</ID>
      <Description>"INFINITE GAS MASK DURABILITY"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(Gasmask,MetroLL.exe,F3 0F 10 80 04 02 00 00 8B 11) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [eax+00000204],(float)1
code:
  movss xmm0,[eax+00000204]
  jmp return

Gasmask:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Gasmask)

[DISABLE]
Gasmask:
  db F3 0F 10 80 04 02 00 00

unregistersymbol(Gasmask)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+1BDEBD

"MetroLL.exe"+1BDEA1:     call eax
"MetroLL.exe"+1BDEA3:     test eax,eax
"MetroLL.exe"+1BDEA5:     je MetroLL.exe+1BDEB5
"MetroLL.exe"+1BDEA7:     mov edx,[eax]
"MetroLL.exe"+1BDEA9:     mov ecx,eax
"MetroLL.exe"+1BDEAB:     mov eax,[edx+00000210]
"MetroLL.exe"+1BDEB1:     call eax
"MetroLL.exe"+1BDEB3:     jmp MetroLL.exe+1BDEB7
"MetroLL.exe"+1BDEB5:     xor eax,eax
"MetroLL.exe"+1BDEB7:     mov ecx,[esi+00000730]
// ---------- INJECTING HERE ----------
"MetroLL.exe"+1BDEBD:     movss xmm0,[eax+00000204]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+1BDEC5:     mov edx,[ecx]
"MetroLL.exe"+1BDEC7:     mov eax,[edx+5C]
"MetroLL.exe"+1BDECA:     push 00
"MetroLL.exe"+1BDECC:     push 04
"MetroLL.exe"+1BDECE:     movss [esp+10],xmm0
"MetroLL.exe"+1BDED4:     call eax
"MetroLL.exe"+1BDED6:     test eax,eax
"MetroLL.exe"+1BDED8:     je MetroLL.exe+1BDEE8
"MetroLL.exe"+1BDEDA:     mov edx,[eax]
"MetroLL.exe"+1BDEDC:     mov ecx,eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>352</ID>
      <Description>"INFINITE COMPRESSED AIR WEAPON "</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(AirWeapon,MetroLL.exe,F3 0F 10 86 F0 07 00 00 85 C0 74 05 8D 50) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [esi+000007F0],(float)12
code:
  movss xmm0,[esi+000007F0]
  jmp return

AirWeapon:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(AirWeapon)

[DISABLE]
AirWeapon:
  db F3 0F 10 86 F0 07 00 00

unregistersymbol(AirWeapon)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+28DEE0

"MetroLL.exe"+28DEB4:     call MetroLL.exe+267EE0
"MetroLL.exe"+28DEB9:     test eax,eax
"MetroLL.exe"+28DEBB:     je MetroLL.exe+28DFAC
"MetroLL.exe"+28DEC1:     mov eax,[esi+000002B0]
"MetroLL.exe"+28DEC7:     mov edx,[eax+34]
"MetroLL.exe"+28DECA:     lea ecx,[esi+000002B0]
"MetroLL.exe"+28DED0:     call edx
"MetroLL.exe"+28DED2:     test al,al
"MetroLL.exe"+28DED4:     jne MetroLL.exe+28DFAC
"MetroLL.exe"+28DEDA:     mov eax,[esi+00000144]
// ---------- INJECTING HERE ----------
"MetroLL.exe"+28DEE0:     movss xmm0,[esi+000007F0]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+28DEE8:     test eax,eax
"MetroLL.exe"+28DEEA:     je MetroLL.exe+28DEF1
"MetroLL.exe"+28DEEC:     lea edx,[eax-74]
"MetroLL.exe"+28DEEF:     jmp MetroLL.exe+28DEF3
"MetroLL.exe"+28DEF1:     xor edx,edx
"MetroLL.exe"+28DEF3:     test eax,eax
"MetroLL.exe"+28DEF5:     je MetroLL.exe+28DEFC
"MetroLL.exe"+28DEF7:     lea ecx,[eax-74]
"MetroLL.exe"+28DEFA:     jmp MetroLL.exe+28DEFE
"MetroLL.exe"+28DEFC:     xor ecx,ecx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>353</ID>
      <Description>"NO WEAPON OVERHEATING"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(Overheating,MetroLL.exe,F3 0F 10 8E 90 08 00 00 F3 0F 59) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [esi+00000890],(float)0
code:
  movss xmm1,[esi+00000890]
  jmp return

Overheating:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Overheating)

[DISABLE]
Overheating:
  db F3 0F 10 8E 90 08 00 00

unregistersymbol(Overheating)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+261A27

"MetroLL.exe"+261A00:     fadd dword ptr [esi+00000890]
"MetroLL.exe"+261A06:     fstp dword ptr [esi+00000890]
"MetroLL.exe"+261A0C:     jmp MetroLL.exe+261A41
"MetroLL.exe"+261A0E:     mov eax,[esi+00000144]
"MetroLL.exe"+261A14:     test eax,eax
"MetroLL.exe"+261A16:     je MetroLL.exe+261A1D
"MetroLL.exe"+261A18:     add eax,-74
"MetroLL.exe"+261A1B:     jmp MetroLL.exe+261A1F
"MetroLL.exe"+261A1D:     xor eax,eax
"MetroLL.exe"+261A1F:     movss xmm0,[eax+00000D1C]
// ---------- INJECTING HERE ----------
"MetroLL.exe"+261A27:     movss xmm1,[esi+00000890]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+261A2F:     mulss xmm0,[esp+10]
"MetroLL.exe"+261A35:     subss xmm1,xmm0
"MetroLL.exe"+261A39:     movss [esi+00000890],xmm1
"MetroLL.exe"+261A41:     mov eax,[esi+00000144]
"MetroLL.exe"+261A47:     test eax,eax
"MetroLL.exe"+261A49:     je MetroLL.exe+261A50
"MetroLL.exe"+261A4B:     lea ecx,[eax-74]
"MetroLL.exe"+261A4E:     jmp MetroLL.exe+261A52
"MetroLL.exe"+261A50:     xor ecx,ecx
"MetroLL.exe"+261A52:     movss xmm3,[ecx+00000D10]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>354</ID>
      <Description>"SUPER ACCURACY"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(Accuracy,MetroLL.exe,F3 0F 10 8E 6C 01 00 00 F3 0F 5C C8 F3 0F 59) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [esi+0000016C],(float)0
code:
  movss xmm1,[esi+0000016C]
  jmp return

Accuracy:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Accuracy)

[DISABLE]
Accuracy:
  db F3 0F 10 8E 6C 01 00 00

unregistersymbol(Accuracy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+1ADEFE

"MetroLL.exe"+1ADECB:     mov ecx,[esi+000000FC]
"MetroLL.exe"+1ADED1:     movss xmm0,[MetroLL.exe+8DB090]
"MetroLL.exe"+1ADED9:     mov edx,[ecx]
"MetroLL.exe"+1ADEDB:     mov eax,[edx+14]
"MetroLL.exe"+1ADEDE:     sub esp,08
"MetroLL.exe"+1ADEE1:     movss [esp+04],xmm0
"MetroLL.exe"+1ADEE7:     movss xmm0,[MetroLL.exe+8DAE80]
"MetroLL.exe"+1ADEEF:     movss [esp],xmm0
"MetroLL.exe"+1ADEF4:     call eax
"MetroLL.exe"+1ADEF6:     movss xmm0,[esi+00000164]
// ---------- INJECTING HERE ----------
"MetroLL.exe"+1ADEFE:     movss xmm1,[esi+0000016C]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+1ADF06:     subss xmm1,xmm0
"MetroLL.exe"+1ADF0A:     mulss xmm1,[esi+00000168]
"MetroLL.exe"+1ADF12:     mulss xmm1,[MetroLL.exe+908654]
"MetroLL.exe"+1ADF1A:     addss xmm1,xmm0
"MetroLL.exe"+1ADF1E:     mov ecx,esi
"MetroLL.exe"+1ADF20:     movss [esi+00000164],xmm1
"MetroLL.exe"+1ADF28:     call MetroLL.exe+1A9A40
"MetroLL.exe"+1ADF2D:     mov cl,[edi+00000DE0]
"MetroLL.exe"+1ADF33:     test cl,cl
"MetroLL.exe"+1ADF35:     jne MetroLL.exe+1ADF44
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>355</ID>
      <Description>"NO RELOAD"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(CurrentMag,MetroLL.exe,8B 87 BC 02 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [edi+000002BC],#50
code:
  mov eax,[edi+000002BC]
  jmp return

CurrentMag:
  jmp newmem
  nop
return:
registersymbol(CurrentMag)

[DISABLE]
CurrentMag:
  db 8B 87 BC 02 00 00

unregistersymbol(CurrentMag)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+2678B5

"MetroLL.exe"+26789B:     mov eax,[edx+00000728]
"MetroLL.exe"+2678A1:     mov ecx,esi
"MetroLL.exe"+2678A3:     call eax
"MetroLL.exe"+2678A5:     test eax,eax
"MetroLL.exe"+2678A7:     jne MetroLL.exe+2678BF
"MetroLL.exe"+2678A9:     mov ecx,edi
"MetroLL.exe"+2678AB:     inc ebx
"MetroLL.exe"+2678AC:     call MetroLL.exe+1703CF
"MetroLL.exe"+2678B1:     test al,al
"MetroLL.exe"+2678B3:     jne MetroLL.exe+267870
// ---------- INJECTING HERE ----------
"MetroLL.exe"+2678B5:     mov eax,[edi+000002BC]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+2678BB:     pop edi
"MetroLL.exe"+2678BC:     pop esi
"MetroLL.exe"+2678BD:     pop ebx
"MetroLL.exe"+2678BE:     ret
"MetroLL.exe"+2678BF:     mov edx,[esi]
"MetroLL.exe"+2678C1:     mov eax,[edx+00000740]
"MetroLL.exe"+2678C7:     pop edi
"MetroLL.exe"+2678C8:     mov ecx,esi
"MetroLL.exe"+2678CA:     pop esi
"MetroLL.exe"+2678CB:     pop ebx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>356</ID>
      <Description>"RAPIDFIRE"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(RapidFire,MetroLL.exe,0F 2F 86 20 04 00 00 0F 82) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [esi+00000420],(float)0
code:
  comiss xmm0,[esi+00000420]
  jmp return

RapidFire:
  jmp newmem
  nop
  nop
return:
registersymbol(RapidFire)

[DISABLE]
RapidFire:
  db 0F 2F 86 20 04 00 00

unregistersymbol(RapidFire)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+26B4B3

"MetroLL.exe"+26B496:     je MetroLL.exe+26B4A8
"MetroLL.exe"+26B498:     cmp al,1E
"MetroLL.exe"+26B49A:     je MetroLL.exe+26B4A8
"MetroLL.exe"+26B49C:     cmp al,32
"MetroLL.exe"+26B49E:     je MetroLL.exe+26B4A8
"MetroLL.exe"+26B4A0:     mov [esp+0C],edi
"MetroLL.exe"+26B4A4:     cmp al,19
"MetroLL.exe"+26B4A6:     jne MetroLL.exe+26B4B0
"MetroLL.exe"+26B4A8:     mov [esp+0C],00000001
"MetroLL.exe"+26B4B0:     xorps xmm0,xmm0
// ---------- INJECTING HERE ----------
"MetroLL.exe"+26B4B3:     comiss xmm0,[esi+00000420]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+26B4BA:     jb MetroLL.exe+26B6F4
"MetroLL.exe"+26B4C0:     push ebx
"MetroLL.exe"+26B4C1:     push ebp
"MetroLL.exe"+26B4C2:     mov edx,[esi]
"MetroLL.exe"+26B4C4:     mov eax,[edx+000008C8]
"MetroLL.exe"+26B4CA:     mov ecx,esi
"MetroLL.exe"+26B4CC:     call eax
"MetroLL.exe"+26B4CE:     test al,al
"MetroLL.exe"+26B4D0:     jne MetroLL.exe+26B6F2
"MetroLL.exe"+26B4D6:     mov cl,[esi+00000718]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>357</ID>
      <Description>"SUPER SPEED"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(Speed,MetroLL.exe,F3 0F 10 8E 74 0E 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [esi+00000E74],(float)3
code:
  movss xmm1,[esi+00000E74]
  jmp return

Speed:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Speed)

[DISABLE]
Speed:
  db F3 0F 10 8E 74 0E 00 00

unregistersymbol(Speed)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+1BCCAF

"MetroLL.exe"+1BCC97:     movaps xmm0,xmm1
"MetroLL.exe"+1BCC9A:     test edi,edi
"MetroLL.exe"+1BCC9C:     pop edi
"MetroLL.exe"+1BCC9D:     pop ebp
"MetroLL.exe"+1BCC9E:     pop ebx
"MetroLL.exe"+1BCC9F:     je MetroLL.exe+1BCCAB
"MetroLL.exe"+1BCCA1:     movss xmm1,[esi+00000E78]
"MetroLL.exe"+1BCCA9:     jmp MetroLL.exe+1BCCC1
"MetroLL.exe"+1BCCAB:     test eax,eax
"MetroLL.exe"+1BCCAD:     je MetroLL.exe+1BCCB9
// ---------- INJECTING HERE ----------
"MetroLL.exe"+1BCCAF:     movss xmm1,[esi+00000E74]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+1BCCB7:     jmp MetroLL.exe+1BCCC1
"MetroLL.exe"+1BCCB9:     movss xmm1,[esi+00000E70]
"MetroLL.exe"+1BCCC1:     movss xmm5,[MetroLL.exe+8DAE80]
"MetroLL.exe"+1BCCC9:     movss xmm6,[MetroLL.exe+8DB100]
"MetroLL.exe"+1BCCD1:     movss xmm3,[MetroLL.exe+7FBF00]
"MetroLL.exe"+1BCCD9:     movaps xmm2,xmm1
"MetroLL.exe"+1BCCDC:     subss xmm2,xmm5
"MetroLL.exe"+1BCCE0:     andps xmm2,xmm6
"MetroLL.exe"+1BCCE3:     comiss xmm3,xmm2
"MetroLL.exe"+1BCCE6:     ja MetroLL.exe+1BCCEF
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>358</ID>
      <Description>"SUPER JUMP"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Metro Last Light
  Version: 1.0.0.7 and newer
  Date   : 2013-07-23
  Author : -GRIZZLY-, aob version:  mgr.inz.Player
}

[ENABLE]
aobscanmodule(Jump,MetroLL.exe,F3 0F 10 86 80 0E 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [esi+00000E80],(float)3
code:
  movss xmm0,[esi+00000E80]
  jmp return

Jump:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Jump)

[DISABLE]
Jump:
  db F3 0F 10 86 80 0E 00 00

unregistersymbol(Jump)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "MetroLL.exe"+239F1A

"MetroLL.exe"+239EF7:     fstp dword ptr [esp+20]
"MetroLL.exe"+239EFB:     jna MetroLL.exe+239F00
"MetroLL.exe"+239EFD:     movaps xmm0,xmm1
"MetroLL.exe"+239F00:     mov edx,[ebp+18]
"MetroLL.exe"+239F03:     mov eax,[ebp+30]
"MetroLL.exe"+239F06:     movss [edi],xmm0
"MetroLL.exe"+239F0A:     mov ecx,[esi+00000144]
"MetroLL.exe"+239F10:     fld dword ptr [ecx+00000654]
"MetroLL.exe"+239F16:     push 20
"MetroLL.exe"+239F18:     fstp dword ptr [ebx]
// ---------- INJECTING HERE ----------
"MetroLL.exe"+239F1A:     movss xmm0,[esi+00000E80]
// ---------- DONE INJECTING  ----------
"MetroLL.exe"+239F22:     mulss xmm0,[esp+24]
"MetroLL.exe"+239F28:     movss [edx],xmm0
"MetroLL.exe"+239F2C:     mov ecx,esi
"MetroLL.exe"+239F2E:     mov [eax],00000001
"MetroLL.exe"+239F34:     call MetroLL.exe+226E40
"MetroLL.exe"+239F39:     mov edi,[ebp+14]
"MetroLL.exe"+239F3C:     mov ebx,[ebp+10]
"MetroLL.exe"+239F3F:     test byte ptr [ebx],10
"MetroLL.exe"+239F42:     je MetroLL.exe+239F97
"MetroLL.exe"+239F44:     cmp dword ptr [esi+0000032C],00
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
