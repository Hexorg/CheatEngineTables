<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Instant Fate"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(fateA_AOB,3B F1 ** ** 8B F1 89 B0 04 02 00 00 5F 33 C0 5E)
label(fateAJMP)
registersymbol(fateAJMP)
aobscan(fateB_AOB,D9 6C 24 0C 3B C1 73 0C 89 82 04 02 00 00)
label(fateBJMP)
registersymbol(fateBJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov esi,ecx

originalcode:
mov [eax+00000204],esi

exit:
jmp returnhere

fateA_AOB+6:                //"Reckoning.exe"+6F7D00:
fateAJMP:
jmp newmem
nop
returnhere:

fateB_AOB+6:                //"Reckoning.exe"+42D30C:
fateBJMP:
db EB


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
fateAJMP:                   //"Reckoning.exe"+6F7D00:
mov [eax+00000204],esi
//Alt: db 89 B0 04 02 00 00
fateBJMP:                   //"Reckoning.exe"+42D30C:
db 73
unregistersymbol(fateAJMP)
unregistersymbol(fateBJMP)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Inf. Arrows"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(arrowSub_AOB,8B 85 84 00 00 00 48 3B C3 ** ** 89 85 84 00 00 00)
label(arrowSubJMP)
registersymbol(arrowSubJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
inc eax

originalcode:
mov [ebp+00000084],eax

exit:
jmp returnhere

arrowSub_AOB+B:             //"Reckoning.exe"+4C16DB:
arrowSubJMP:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
arrowSubJMP:                //"Reckoning.exe"+4C16DB:
db 89 85 84 00 00 00
//Alt: mov [ebp+00000084],eax
unregistersymbol(arrowSubJMP)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Inf. Lvl up Points (hold R to enable)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(lvlPtSub_AOB,89 48 18 8B 57 1C 5D 89 50 1C 5B C2 08 00 CC CC CC CC CC CC CC CC 50 8B 44 24 08 83 C0 30)
label(lvlPtSubJMP)
registersymbol(lvlPtSubJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 'R'      //key R
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov ecx,1

originalcode:
mov [eax+18],ecx
mov edx,[edi+1C]

exit:
jmp returnhere

lvlPtSub_AOB:               //"Reckoning.exe"+49CFBA:
lvlPtSubJMP:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
lvlPtSubJMP:                //"Reckoning.exe"+49CFBA:
db 89 48 18 8B 57 1C
//Alt: mov [eax+18],ecx
//Alt: mov edx,[edi+1C]
unregistersymbol(lvlPtSubJMP)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Money script"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(pMoney,4)
aobscan(moneyRead_AOB,85 C0 74 08 8B 80 64 03 00 00 EB 02 33 C0 33 C9 33 D2 89 44 24 20)
label(moneyReadJMP)
registersymbol(moneyReadJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMoney],eax

originalcode:
mov eax,[eax+00000364]

exit:
jmp returnhere

moneyRead_AOB+4:            //"Reckoning.exe"+7020EC:
moneyReadJMP:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
moneyReadJMP:               //"Reckoning.exe"+7020EC:
db 8B 80 64 03 00 00
//Alt: mov eax,[eax+00000364]
dealloc(pMoney)
unregistersymbol(moneyReadJMP)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Money"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pMoney</Address>
          <Offsets>
            <Offset>364</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Inf. Money"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(moneySub_AOB,CC CC 01 86 64 03 00 00 8B 86 64 03 00 00 8B 15 EC 5F BF 00)
label(moneySubJMP)
registersymbol(moneySubJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pMoney],esi
jne originalcode
cmp eax,(int)0
jge originalcode
mov eax,(int)0

originalcode:
add [esi+00000364],eax

exit:
jmp returnhere

moneySub_AOB+2:             //"Reckoning.exe"+63C490:
moneySubJMP:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
moneySubJMP:                //"Reckoning.exe"+63C490:
db 01 86 64 03 00 00
//Alt: add [esi+00000364],eax
unregistersymbol(moneySubJMP)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
