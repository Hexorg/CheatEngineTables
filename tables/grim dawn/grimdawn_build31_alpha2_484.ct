<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"God Mode"</Description>
      <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Increased Attack Speed x6"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(AttSpeed,32)

label(returnAS)

Game.GAME::Player::CapAttackSpeed+F4:
  jmp AttSpeed
  nop
  nop
  returnAS:

AttSpeed:
  movss [ebp+08],xmm0
  mov [ebp+08],40c00000
  jmp returnAS

[DISABLE]
Game.GAME::Player::CapAttackSpeed+F4:
  db 76 0E F3 0F 11 45 08
dealloc(AttSpeed)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Increased Cast Speed x6"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(CastSpeed,32)

label(returnCS)

Game.GAME::Player::CapSpellCastSpeed+F4:
  jmp CastSpeed
  nop
  nop
  returnCS:

CastSpeed:
  movss [ebp+08],xmm0
  mov [ebp+08],40c00000
  jmp returnCS

[DISABLE]
Game.GAME::Player::CapSpellCastSpeed+F4:
  db 76 0E F3 0F 11 45 08
dealloc(CastSpeed)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Instant CoolDowns"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(CoolD,64)

label(returnCD)

Game.GAME::Skill::GetCooldownTime+A2:
  jmp CoolD
  nop
  nop
  nop
  nop
  nop
  nop
  returnCD:

CoolD:
  mov [ebp-10],38d1b717
  fld dword ptr [ebp-10]
  pop esi
  mov fs:[00000000],ecx
  jmp returnCD

[DISABLE]
Game.GAME::Skill::GetCooldownTime+A2:
  db D9 45 F0 5E 64 89 0D 00 00 00 00
dealloc(CoolD)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No energy cost for skills/spells"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(PlayerCheckM,128)

label(returnPM)

Game.GAME::SkillManager::SubtractMana+3:
  jmp PlayerCheckM
  returnPM:

PlayerCheckM:
  mov eax,[ecx+0C]
  push eax
  cmp eax,00000000
  je MobM
  cmp dword ptr[ecx+351],00461C40
  jne MobM
  mov al,01
  jmp FinishM

  MobM:
  xor al,al

  FinishM:
  cmp al,00
  pop eax
  jmp returnPM+5

[DISABLE]
Game.GAME::SkillManager::SubtractMana+3:
  db 8B 41 0C 80 B8
dealloc(PlayerCheckM)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No incoming damage"</Description>
          <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(PlayerCheckH,128)

label(returnPH)

Game.GAME::Character::SubtractLife+7:
  jmp PlayerCheckH
  returnPH:

PlayerCheckH:
  push edi
  mov edi,ecx
  jne returnPH+1A
  push eax
  cmp edi,00000000
  je MobH
  cmp dword ptr[edi+85D],00461C40
  jne MobH
  mov al,01
  jmp FinishH

  MobH:
  xor al,al

  FinishH:
  cmp al,00
  pop eax
  jmp returnPH+D

[DISABLE]
Game.GAME::Character::SubtractLife+7:
  db 57 8B F9 75 1A
dealloc(PlayerCheckH)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Quick Kills (may still backfire without no dmg)"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
alloc(1H,64)

label(return1H)

Game.GAME::Character::SubtractLife+41:
  jmp 1H
  nop
  nop
  nop
  nop
  return1H:

1H:
  cmp esi,00000000
  je skipAll
  cmp dword ptr[esi+15],00461C40
  je skipH
  subss xmm0,xmm1
  movss [esi+1C],xmm0
  mov dword ptr [esi+1C],0
  jmp return1H

  skipH:
  movss [esi+1C],xmm0
  subss xmm0,xmm1

  skipAll:
  jmp return1H


[DISABLE]
Game.GAME::Character::SubtractLife+41:
  db F3 0F 5C C1 F3 0F 11 46 1C
dealloc(1H)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Move Speed x4"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(MS1,32)
alloc(MS2,32)

label(returnMS1)
label(returnMS2)

Game.GAME::Player::CapRunSpeed+F6:
  jmp MS1
  returnMS1:

MS1:
  movss [ebp+08],xmm0
  mov [ebp+08],40800000
  jmp returnMS1

Game.GAME::Player::CapRunSpeed+104:
  jmp MS2
  returnMS2:

MS2:
  movss [ebp+08],xmm2
  mov [ebp+08],40800000
  jmp returnMS2


[DISABLE]
Game.GAME::Player::CapRunSpeed+F6:
  db F3 0F 11 45 08
Game.GAME::Player::CapRunSpeed+104:
  db F3 0F 11 45 08
dealloc(MS1)
dealloc(MS2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Light Radius +300%"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(LightR,32)

label(returnL)

Game.GAME::Player::UpdateSelf+75E:
  jmp LightR
  nop
  nop
  nop
  returnL:

LightR:
  mov [eax+00000988],43960000
  movss xmm3,[eax+00000988]
  jmp returnL

[DISABLE]
Game.GAME::Player::UpdateSelf+75E:
  db F3 0F 10 98 88 09 00 00

dealloc(LightR)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Play any difficulty (switch char to see change)"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Game.GAME::Player::GetGreatestDifficultyCompleted+B:
  mov al,3
  nop

[DISABLE]
Game.GAME::Player::GetGreatestDifficultyCompleted+B:
  db 0F 44 C1
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Wear ANYTHING"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
Game.GAME::EquipmentCtrl::AreRequirementsMet+12A:
  mov al,1
  nop

[DISABLE]
Game.GAME::EquipmentCtrl::AreRequirementsMet+12A:
  setne al
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Enable placing quest/soulbound items into the transfer stash"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(TransferShift, 8B 06 8B CE 8B ?? ?? ?? ?? ?? FF D0 84 C0 75 ?? 68 ?? ?? ?? ?? FF ?? ?? ?? ?? ?? 8B C8 FF)
registersymbol(TransferShift)

TransferShift+A:
  db B0 01
Game.GAME::CursorHandlerItemMove::PrimaryTransferActivate+7C:
  db B0 01

[DISABLE]
TransferShift+A:
  db FF D0
Game.GAME::CursorHandlerItemMove::PrimaryTransferActivate+7C:
  db FF D2
unregistersymbol(TransferShift)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Combine Anything (0 iron or mats required/used)"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(_Combine, 55 8B EC 83 ?? ?? 00 75 1C 8D ?? ?? ?? ?? ?? 39 45 0C 75 11 80 ?? ?? ?? ?? ?? 00 75 08 83 C1 F4 E8 ?? ?? ?? ?? 5D C2 0C 00)
registersymbol(_Combine)

_Combine+7:
  db 90 90 8D ?? ?? ?? ?? ?? 39 45 0C 90 90 80 ?? ?? ?? ?? ?? 00 90 90

Game.GAME::CreateArtifactConfigCmd::Execute+12C:
  jmp GAME::CreateArtifactConfigCmd::Execute+488
  nop
  nop
  nop
  nop

[DISABLE]
_Combine+7:
  db 75 1C 8D ?? ?? ?? ?? ?? 39 45 0C 75 11 80 ?? ?? ?? ?? ?? 00 75 08
Game.GAME::CreateArtifactConfigCmd::Execute+12C:
  db 74 13 80 BE 58 01 00 00 00
unregistersymbol(_Combine)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"Dismantle Free (No Dynamite or iron required/used)"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(SubDyn,32)
alloc(Dism,32)
aobscan(_Dism, 64 89 25 00 00 00 00 83 EC 18 83 7D 08 00 56 8B F1)
registersymbol(_Dism)

label(returnDism)
label(returnDyn)

_Dism+A:
  jmp Dism
  returnDism:

Dism:
  cmp dword ptr [ebp+08],00
  push esi
  mov esi,ecx
  jmp returnDism+8

Game.GAME::Character::SubtractDynamite+3A:
  jmp SubDyn
  nop
  nop
  returnDyn:

SubDyn:
  mov [ebp-04],00000000
  push eax
  jmp returnDyn+6

Game.GAME::EnchanterDismantleConfigCmd::Execute+6E:
  db EB 01 90

[DISABLE]
Game.GAME::EnchanterDismantleConfigCmd::Execute+6E:
  db 2B 43 18
Game.GAME::Character::SubtractDynamite+3A:
  db C7 45 FC 00 00 00 00
_Dism+A:
  db 83 7D 08 00 56
dealloc(SubDyn)
unregistersymbol(_Dism)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Restore Shrine without items (may still use ones you have)"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(_Shrine1, 55 8B EC 83 7D 08 00 56 8B F1 0F ?? ?? ?? ?? ?? 8B 4D 0C 8D ?? ?? ?? ?? ?? 3B C8 75 0D 8D 4E AC E8 ?? ?? ?? ?? 5E 5D C2 0C 00)
registersymbol(_Shrine1)
aobscan(_Shrine2, 8B 86 54 02 00 00 8D 8E 54 02 00 00 8B 40 48 FF D0 84 C0)
registersymbol(_Shrine2)

alloc(ShrineBy,32)

label(returnS)

_Shrine1+3:
  jmp ShrineBy
  returnS:

ShrineBy:
  cmp dword ptr [ebp+08],00
  push esi
  mov esi,ecx
  jmp returnS+8

_Shrine2+11:
  db EB 06

_Shrine2+2A:
  db EB 06

_Shrine2+43:
  db EB 06

[DISABLE]
_Shrine1+3:
  db 83 7D 08 00 56
_Shrine2+11:
  db 84 C0
_Shrine2+2A:
  db 84 C0
_Shrine2+43:
  db 84 C0
unregistersymbol(_Shrine1)
unregistersymbol(_Shrine2)
dealloc(ShrineBy)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"Hardcore Death Count Guard (When killed deaths are set to 0)"</Description>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(DeathGuard,32)

label(returnDG)

Game.GAME::ControllerPlayer::CharacterIsDying+70:
  jmp DeathGuard
  nop
  returnDG:

DeathGuard:
  mov ecx,[eax+00000D40]
  xor ecx,ecx
  mov [eax+00000D40],ecx
  jmp returnDG

[DISABLE]
Game.GAME::ControllerPlayer::CharacterIsDying+70:
  db FF 80 40 0D 00 00
dealloc(DeathGuard)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Play Hardcore chars that have died"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(HC,32)

Game.GAME::PlayStats::GetNumberOfDeaths:
  jmp HC

HC:
  xor al,al
  mov byte ptr [ecx+28],al
  mov eax,[ecx+28]
  ret

[DISABLE]
Game.GAME::PlayStats::GetNumberOfDeaths:
  db 8B 41 28 C3 CC
dealloc(HC)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Set zero deaths (Must open 'Char III'tab while active)"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(0Deaths,32)

label(return0D)

Game.GAME::PlayStats::ResolveEquationVariable+20:
  jmp 0Deaths
  return0D:

0Deaths:
  pop edi
  pop esi
  xor eax,eax
  mov [ebx+28],eax
  jmp return0D

[DISABLE]
Game.GAME::PlayStats::ResolveEquationVariable+20:
  db 8B 43 28 5F 5E
dealloc(0Deaths)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
