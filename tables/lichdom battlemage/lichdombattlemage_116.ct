<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(maxhpreadAOB,F3 0F 10 83 98 00 00 00 0F 2F C1)
registersymbol(maxhpreadAOB)

label(pHero)
registersymbol(pHero)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHero],ebx

originalcode:
movss xmm0,[ebx+00000098]

exit:
jmp returnhere

///
pHero:
dd 0
///

maxhpreadAOB: //"LichdomBattlemage.exe"+13D306E:
jmp newmem
nop
nop
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
maxhpreadAOB: //"LichdomBattlemage.exe"+13D306E:
db F3 0F 10 83 98 00 00 00
//Alt: movss xmm0,[ebx+00000098]
unregistersymbol(maxhpreadAOB)

unregistersymbol(pHero)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Undead"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(hpwriteAOB,F3 0F 10 4C 24 50 F3 0F 5C C1 F3 0F 11 87 A0 00 00 00)
registersymbol(hpwriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [edi+000000A0],xmm0//

pushfd
cmp [pHero],edi
jne originalcode
cmp dword ptr [edi+a0],(float)1.0
jge originalcode
mov dword ptr [edi+a0],(float)1.0

originalcode:
popfd//
//movss [edi+000000A0],xmm0

exit:
jmp returnhere

///

hpwriteAOB+a: //"LichdomBattlemage.exe"+13D1C0C:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hpwriteAOB+a: //"LichdomBattlemage.exe"+13D1C0C:
db F3 0F 11 87 A0 00 00 00
//Alt: movss [edi+000000A0],xmm0
unregistersymbol(hpwriteAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Instant Charge"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(castchargereadAOB,F3 0F 10 87 A4 00 00 00 0F 2E ** ** 9F)
registersymbol(castchargereadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(chkarea)
label(setmax)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 20 //Space
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je originalcode

pushad
push 09 //Tab
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setmax

pushad
push 01 //LMB
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setmax

pushad
push 02 //RMB
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je chkarea

jmp originalcode

setmax:
mov dword ptr [edi+a4],(float)1.0
jmp originalcode

chkarea:
pushad
push 01 //LMB
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setmax
//mov dword ptr [edi+a4],(float)0.0
jmp originalcode

originalcode:
movss xmm0,[edi+000000A4]

exit:
jmp returnhere

///

castchargereadAOB: //"LichdomBattlemage.exe"+138EA10:
jmp newmem
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
castchargereadAOB: //"LichdomBattlemage.exe"+138EA10:
db F3 0F 10 87 A4 00 00 00
//Alt: movss xmm0,[edi+000000A4]
unregistersymbol(castchargereadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Instant Charge (no key check)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(castchargereadAOB,F3 0F 10 87 A4 00 00 00 0F 2E ** ** 9F)
registersymbol(castchargereadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [edi+a4],(float)1.0

originalcode:
movss xmm0,[edi+000000A4]

exit:
jmp returnhere

///

castchargereadAOB: //"LichdomBattlemage.exe"+138EA10:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
castchargereadAOB: //"LichdomBattlemage.exe"+138EA10:
db F3 0F 10 87 A4 00 00 00
//Alt: movss xmm0,[edi+000000A4]
unregistersymbol(castchargereadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Synergy Mod"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(chkcurrentsynergywithmaxoncastAOB,0F 9D C1 85 C0)
registersymbol(chkcurrentsynergywithmaxoncastAOB)

label(iSMKey)
registersymbol(iSMKey)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
setge cl

pushad
mov eax,[iSMKey]
push eax
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
sete cl

originalcode:
//setge cl
test eax,eax

exit:
jmp returnhere

///
iSMKey:
dd 00000010 //Shift
///

chkcurrentsynergywithmaxoncastAOB: //"LichdomBattlemage.exe"+1259B76:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chkcurrentsynergywithmaxoncastAOB: //"LichdomBattlemage.exe"+1259B76:
db 0F 9D C1 85 C0
//Alt: setge cl
//Alt: test eax,eax
unregistersymbol(chkcurrentsynergywithmaxoncastAOB)

unregistersymbol(iSMKey)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>42</ID>
              <Description>"Mod Key"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">10:Shift
11:Ctrl
12:Alt
</DropDownList>
              <LastState Value="10" Activated="0" RealAddress="0BCF0022"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>iSMKey</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Shield HP"</Description>
          <LastState Value="196.3499908" Activated="0" RealAddress="77E33C78"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>A0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"Shield Max HP"</Description>
              <LastState Value="196.3499908" Activated="0" RealAddress="77E33C70"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHero</Address>
              <Offsets>
                <Offset>98</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"-----------"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="31770B6C"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>31770B6C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="2398752C"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>2398752C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"No description"</Description>
          <LastState Value="3.567426367E-30" Activated="0" RealAddress="39132DBC"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>39132DBC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Instant Charge (on write)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(castchargewriteAOB,F3 0F 11 83 A4 00 00 00 F3 0F 10 83)
registersymbol(castchargewriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(chkarea)
label(setmax)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 02 //RMB
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je chkarea

setmax:
movss xmm0,[ebx+a8]
jmp originalcode

chkarea:
pushad
push 01 //LMB
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setmax
mov dword ptr [ebx+a4],(float)0.5
movss xmm0,[ebx+a4]
jmp originalcode

originalcode:
movss [ebx+000000A4],xmm0

exit:
jmp returnhere

///

castchargewriteAOB: //"LichdomBattlemage.exe"+13955A0:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
castchargewriteAOB: //"LichdomBattlemage.exe"+13955A0:
db F3 0F 11 83 A4 00 00 00
//Alt: movss [ebx+000000A4],xmm0
unregistersymbol(castchargewriteAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Instant Charge (on read)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(castchargereadAOB,F3 0F 10 87 A4 00 00 00 0F 2E ** ** 9F)
registersymbol(castchargereadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(chkarea)
label(setmax)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 02 //RMB
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je chkarea

setmax:
mov dword ptr [edi+a4],(float)1.0
jmp originalcode

chkarea:
pushad
push 01 //LMB
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je setmax
mov dword ptr [edi+a4],(float)0.0
jmp originalcode

originalcode:
movss xmm0,[edi+000000A4]

exit:
jmp returnhere

///

castchargereadAOB: //"LichdomBattlemage.exe"+138EA10:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
castchargereadAOB: //"LichdomBattlemage.exe"+138EA10:
db F3 0F 10 87 A4 00 00 00
//Alt: movss xmm0,[edi+000000A4]
unregistersymbol(castchargereadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"No Description"</Description>
          <LastState Value="2058499961" Activated="0" RealAddress="0546D0A4"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0546D0A4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"No Description"</Description>
          <LastState Value="16845065" Activated="0" RealAddress="0670DAA4"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>0670DAA4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" Activated="0" RealAddress="7A984738"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>7A984738</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(bCallFromNova)
registersymbol(bCallFromNova)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov byte ptr [bCallFromNova],1

originalcode:
push 00
push edi
mov ecx,esi

exit:
jmp returnhere

///
bCallFromNova:
dd 0
///

"LichdomBattlemage.exe"+1196C25:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"LichdomBattlemage.exe"+1196C25:
db 6A 00 57 8B CE
//Alt: push 00
//Alt: push edi
//Alt: mov ecx,esi

unregistersymbol(bCallFromNova)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[edx]
cmp byte ptr [bCallFromNova],1
jne originalcode
mov byte ptr [bCallFromNova],0
jmp exit

originalcode:
mov eax,[edx]
cmp eax,edx
je LichdomBattlemage.CryGetIMemoryManagerInterface+F52FE

exit:
jmp returnhere

"LichdomBattlemage.exe"+123827C:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"LichdomBattlemage.exe"+123827C:
db 8B 02 3B C2 74 4C
//Alt: mov eax,[edx]
//Alt: cmp eax,edx
//Alt: je LichdomBattlemage.CryGetIMemoryManagerInterface+F52FE
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[eax+58]//
call eax//
cmp byte ptr [bCallFromNova],1
jne originalcode
mov byte ptr [bCallFromNova],0
mov al,1

originalcode:
//mov eax,[eax+58]
//call eax

exit:
jmp returnhere

///

"LichdomBattlemage.exe"+1267192:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"LichdomBattlemage.exe"+1267192:
db 8B 40 58 FF D0
//Alt: mov eax,[eax+58]
//Alt: call eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"No description"</Description>
          <LastState Value="1" Activated="0" RealAddress="09A7734C"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>09A7734C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(pSome3)
registersymbol(pSome3)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bCallFromNova],1
jne originalcode
mov byte ptr [bCallFromNova],0
mov [pSome3],ebx

originalcode:
cmp esi,[ebx+0000009C]

exit:
jmp returnhere

///
pSome3:
dd 0
///

"LichdomBattlemage.exe"+12671B7:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"LichdomBattlemage.exe"+12671B7:
db 3B B3 9C 00 00 00
//Alt: cmp esi,[ebx+0000009C]

unregistersymbol(pSome3)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pSome3</Address>
          <Offsets>
            <Offset>98</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"No description"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pSome3</Address>
          <Offsets>
            <Offset>9C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[eax+00000344]//
call eax//
mov al,1

originalcode:
//mov eax,[eax+00000344]
//call eax

exit:
jmp returnhere

///

"LichdomBattlemage.exe"+11969EC:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"LichdomBattlemage.exe"+11969EC:
db 8B 80 44 03 00 00 FF D0
//Alt: mov eax,[eax+00000344]
//Alt: call eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Synergy Mod Key"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(iSMKey)
registersymbol(iSMKey)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
mov eax,[iSMKey]
push eax
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov [esi+14],eax

originalcode:
cmp [esi+14],eax
mov eax,[edi+00000578]

exit:
jmp returnhere

///
iSMKey:
dd 00000010 //Shift
///

"LichdomBattlemage.exe"+1259B6D:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"LichdomBattlemage.exe"+1259B6D:
db 39 46 14 8B 87 78 05 00 00
//Alt: cmp [esi+14],eax
//Alt: mov eax,[edi+00000578]

unregistersymbol(iSMKey)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>max hp read 1 Code :movss xmm1,[esi+00000098]</Description>
      <Address>383D2C72</Address>
      <ModuleName>LichdomBattlemage.exe</ModuleName>
      <ModuleNameOffset>13D2C72</ModuleNameOffset>
      <Before>
        <Byte>86</Byte>
        <Byte>BC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8E</Byte>
        <Byte>98</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>5B</Byte>
        <Byte>D2</Byte>
        <Byte>40</Byte>
        <Byte>66</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>max hp read 2 Code :movss xmm0,[ebx+00000098]</Description>
      <Address>383D306E</Address>
      <ModuleName>LichdomBattlemage.exe</ModuleName>
      <ModuleNameOffset>13D306E</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>A0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>83</Byte>
        <Byte>98</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C1</Byte>
        <Byte>C7</Byte>
        <Byte>45</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp read 1 Code :movss xmm3,[esi+000000A0]</Description>
      <Address>383D2C47</Address>
      <ModuleName>LichdomBattlemage.exe</ModuleName>
      <ModuleNameOffset>13D2C47</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>F8</Byte>
        <Byte>01</Byte>
        <Byte>75</Byte>
        <Byte>5B</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>9E</Byte>
        <Byte>A0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C3</Byte>
        <Byte>72</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp read 2 Code :movss xmm1,[ebx+000000A0]</Description>
      <Address>383D3066</Address>
      <ModuleName>LichdomBattlemage.exe</ModuleName>
      <ModuleNameOffset>13D3066</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>10</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>A0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>83</Byte>
        <Byte>98</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>hp read 3 Code :mov eax,[edi+000000A0]</Description>
      <Address>383CDEBB</Address>
      <ModuleName>LichdomBattlemage.exe</ModuleName>
      <ModuleNameOffset>13CDEBB</ModuleNameOffset>
      <Before>
        <Byte>7F</Byte>
        <Byte>14</Byte>
        <Byte>04</Byte>
        <Byte>7D</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>87</Byte>
        <Byte>A0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>87</Byte>
        <Byte>9C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>some shield chk call Code :call eax</Description>
      <Address>38196A12</Address>
      <ModuleName>LichdomBattlemage.exe</ModuleName>
      <ModuleNameOffset>1196A12</ModuleNameOffset>
      <Before>
        <Byte>80</Byte>
        <Byte>44</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>D0</Byte>
      </Actual>
      <After>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>75</Byte>
        <Byte>66</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>maxhpreadAOB</Name>
      <Address> 383D319E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>01580013</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hpwriteAOB</Name>
      <Address> 383D1D32</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>castchargereadAOB</Name>
      <Address> 3838EB40</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>chkcurrentsynergywithmaxoncastAOB</Name>
      <Address> 38259B76</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>iSMKey</Name>
      <Address>0BCF0022</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5548724#5548724
</Comments>
</CheatTable>
