<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>12593</ID>
      <Description>"Monster Vacuum"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(vacuum_inj, DarkSoulsII.exe, 0F 28 80 A0 01 00 00 0F 54 05 F8 42 56 00)
aobscanmodule(vacuum_nodeath, DarkSoulsII.exe, E8 1d 04 00 00 EB 20)
aobscanmodule(vacuum_heading, DarkSoulsII.exe, 66 0F 7F 43 50 0F 28 48 10 66 0F 7F 4B 60)
alloc(vacuum_mem, 2000)

label(code)
label(exit)
label(skipplayer)
label(return)
label(code2)
label(exit2)
label(return2)
label(tmp_data)
label(max_distance)
label(heading)
label(offset)

registersymbol(vacuum_inj)
registersymbol(vacuum_nodeath)
registersymbol(vacuum_heading)
registersymbol(max_distance)
registersymbol(heading)
registersymbol(offset)


vacuum_mem:
tmp_data:
  dd 0 0 0 0
offset:  // offset from player where mobs should hover
  dd (float)0 (float)1 (float)3 0
max_distance: // all mobs within this radius get vacuumed
  dd (float)5
heading:
  dd 0 0
code:
  // based on code following on injection site the registers that are safe to use are:
  // rcx, rdx, r8:r11, xmm0:xmm5

  // load player entity address
  push rcx

  mov rcx, DarkSoulsII.exe+0160B8D0
  mov rcx,[rcx]
  mov rcx,[rcx+0D0]
  mov rcx,[rcx+100]
  mov rcx,[rcx+320]
  mov rcx,[rcx+020]

  // is current entity player?
  cmp rcx, rax
  je skipplayer

  push rax
  push rdi
  sub rsp,40
  movups [rsp],xmm0
  movups [rsp+10],xmm1
  movups [rsp+20],xmm2
  movups [rsp+30],xmm3

  // if not see if it should be vacuumed
  // caculate distance
  movaps xmm0,[rcx+1A0] // p = &lt;player position&gt;
  movaps xmm1,[rax+1A0] // m = &lt;mob position&gt;
  subps xmm1, xmm0      // d = m-p
  mulps xmm1, xmm1
  movaps [tmp_data],xmm1
  xor edi, edi
  mov [tmp_data+C],edi
  movss xmm2,[tmp_data]
  movss xmm3,[tmp_data+4]
  movss xmm1,[tmp_data+8]
  addss xmm2,xmm3
  addss xmm2,xmm1       // nÂ² = &lt;d,d&gt;
  sqrtss xmm2,xmm2      // xmm2 &lt;- distance
  movss  xmm1,[max_distance]
  comiss xmm2,xmm1      // should we vacuum it?
  ja exit
  //addps  xmm0,[offset]  // set new position
  movaps xmm1,[offset]
  movaps [tmp_data],xmm1

  movss xmm1,[offset]
  movss xmm2,[heading+4]
  mulss xmm1,xmm2
  movss xmm2,[heading]
  movss xmm3,[offset+8]
  mulss xmm2,xmm3
  subss xmm1,xmm2
  movss [tmp_data],xmm1

  movss xmm1,[offset]
  movss xmm2,[heading]
  mulss xmm1,xmm2
  movss xmm2,[heading+4]
  mulss xmm2,xmm3
  addss xmm1,xmm2
  movss [tmp_data+8],xmm1

  movaps xmm1,[tmp_data]
  addps  xmm0,xmm1

  movaps [rax+1A0],xmm0
  movaps [rax+1B0],xmm0
  movaps [rax+1C0],xmm0

exit:
  movups xmm0,[rsp]
  movups xmm1,[rsp+10]
  movups xmm2,[rsp+20]
  movups xmm3,[rsp+30]
  add rsp,40
  pop rdi
  pop rax
skipplayer:
  // original code at injection site
  movaps xmm0,[rax+1A0]
  // CE won't assemble the original instruction directly
  // because the offset doesn't fit into 4 bytes counting from our memory
  // workaround using a register
  mov rcx,DarkSoulsII.exe+112F110
  andps xmm0,[rcx]
  // workaround end
  pop rcx
  jmp return



code2:
  push rax
  mov eax,[rbx+50]
  mov [heading], eax
  mov eax,[rbx+70]
  mov [heading+4],eax
  pop rax
exit2:
  movdqa [rbx+50],xmm0
  movaps xmm1,[rax+10]
  movdqa [rbx+60],xmm1
  jmp return2


vacuum_inj:
  jmp code
return:

vacuum_nodeath:
  nop
  nop
  nop
  nop
  nop

vacuum_heading:
  jmp code2
return2:

[DISABLE]


vacuum_inj:
  db 0F 28 80 A0 01 00 00 0F 54 05 F8 42 56 00

vacuum_nodeath:
  call vacuum_nodeath+422

vacuum_heading:
  db 66 0F 7F 43 50 0F 28 48 10 66 0F 7F 4B 60


unregistersymbol(vacuum_inj)
unregistersymbol(vacuum_nodeath)
unregistersymbol(vacuum_heading)
unregistersymbol(max_distance)
unregistersymbol(heading)
unregistersymbol(offset)

dealloc(vacuum_mem)

{ ===  original code  === (Ver.1.01 Calibrations 2.01 2015-04-11)
DarkSoulsII.exe+BCADF4 - 4C 8B E9              - mov r13,rcx
DarkSoulsII.exe+BCADF7 - 48 8B 89 D0010000     - mov rcx,[rcx+000001D0]
DarkSoulsII.exe+BCADFE - E8 0D01BAFF           - call DarkSoulsII.exe+76AF10
DarkSoulsII.exe+BCAE03 - 49 8B 8D D0010000     - mov rcx,[r13+000001D0]
  === injection start ===
DarkSoulsII.exe+BCAE0A - 0F28 80 A0010000      - movaps xmm0,[rax+000001A0]
DarkSoulsII.exe+BCAE11 - 0F54 05 F8425600      - andps xmm0,[DarkSoulsII.exe+112F110]
  ===  injection end  ===
DarkSoulsII.exe+BCAE18 - 66 41 0F7F 45 70      - movdqa [r13+70],xmm0
DarkSoulsII.exe+BCAE1E - E8 ED00BAFF           - call DarkSoulsII.exe+76AF10
DarkSoulsII.exe+BCAE23 - 0F28 80 E0010000      - movaps xmm0,[rax+000001E0]
DarkSoulsII.exe+BCAE2A - 66 41 0F7F 85 90000000  - movdqa [r13+00000090],xmm0
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>12594</ID>
          <Description>"Vacuum distance"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>max_distance</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12595</ID>
          <Description>"Offset X"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>offset</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12596</ID>
          <Description>"Offset Y"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>offset+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12597</ID>
          <Description>"Offset Z"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>offset+8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12598</ID>
          <Description>"Heading"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>last_heading</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
