<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="12">
  <CheatEntries>
    <CheatEntry>
      <ID>84</ID>
      <Description>"[X] &lt;== Port Royale 3 v112 Script v21 AOB"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Port Royale 3
 Game Version  : 1.1.2 - 24556 BS
 Proces Name   : PortRoyale3.exe
 Script Version: 2.1 AOB
 CE Version    : 6.1
 Release date  : 12-May-2012
 Author        : Recifense
 History:
 08-May-12: (v1.0) First Release for version 1.1.0
 10-May-12: (v2.0) Bug fixed related to iEnableMA + Ship Speed
 12-May-12: (v2.0) Bug fixed related to ShipCargo Release for version 1.1.2
 Features:
 - Minimum Gold
 - Minimum capacity (1000) and Existing Items on player's selected ship
 - Minimum capacity (10000) and Existing Items on player's Warehouse
 - God Mode:
   - Hull (6100)
   - Sail (250 each)
 - Maximum crew
 - Minimum ammo and full weapons
 - Minimum Reputation in towns
 - Minimum Ship Speed
 - pGlobalReputation
===========================================
}

//=========================================
[ENABLE]
//=========================================
alloc(MyCode,1024,PortRoyale3.exe)
//=========================================

AOBScan(aobMonPlayerR,8b 73 48 85 f6 ?? ?? 8b 4e 1c 85 c9) //+7
AOBScan(aobMonPlayerC,89 7d fc 85 ff ?? ?? ?? ?? ?? ?? 8b 47 1c 85 c0) //+0b
AOBScan(aobMonCargoR,8b 47 2c 85 c0 ?? ?? 83 78 0c 00) //+00
AOBScan(aobMonCargoC,8b 40 2c 3b c7 ?? ?? 89 78 0c 8b 46 18 3b c7) //+00
AOBScan(aobMonWHR,8b 47 2c 83 78 0c 00 ?? ?? 8b 4d 08 50) //+00
AOBScan(aobMonWHC,8b 79 2c 89 71 0c 89 b7 38 01 00 00 8b 49 2c) //+00
AOBScan(aobGodModeS,8b 51 28 56 8b 75 08 3b f2) //+00
AOBScan(aobMonSail,0f b6 c0 3a 54 08 1c 8d 44 08 1c) //+00
AOBScan(aobMonShipR,8b 44 b0 fc 4e 85 c0 ?? ?? 83 78 0c 00) //+00
AOBScan(aobMonShipC,8b 4c b0 fc 4e 85 c9 ?? ?? 0f b6 41 3b) //+00
AOBScan(aobMonRep,8b 06 03 45 08 3d 18 fc ff ff) //+00

//=========================================
// Declaration section
label(pMonPlayerR)
label(pMonPlayerC)
label(pMonCargoR)
label(pMonCargoC)
label(pMonWHR)
label(pMonWHC)
label(pGodModeS)
label(pMonSail)
label(pMonShipR)
label(pMonShipC)
label(pMonRep)

label(_MonPlayerR)
label(_BackMPR)
label(_ExitMPR)
label(_MonPlayerC)
label(_BackMPC)
label(_ExitMPC)
label(_MonCargoR)
label(_MonCR00)
label(_MonCR01)
label(_MonCR02)
label(_MonCR03)
label(_MonCR04)
label(_MonCR10)
label(_BackMCR)
label(_ExitMCR)
label(_MonCargoC)
label(_MonCC00)
label(_MonCC01)
label(_MonCC02)
label(_MonCC03)
label(_MonCC04)
label(_MonCC10)
label(_BackMCC)
label(_ExitMCC)
label(_MonWHR)
label(_MonWR00)
label(_MonWR01)
label(_MonWR02)
label(_MonWR03)
label(_MonWR04)
label(_BackMWR)
label(_ExitMWR)
label(_MonWHC)
label(_MonWC00)
label(_MonWC01)
label(_MonWC02)
label(_MonWC03)
label(_MonWC04)
label(_BackMWC)
label(_ExitMWC)
label(_GodModeS)
label(_GodMS00)
label(_BackGMS)
label(_ExitGMS)
label(_MonSail)
label(_MonS00)
label(_BackMS)
label(_ExitMS)
label(_MonShipR)
label(_MonSR00)
label(_MonSR01)
label(_MonSR02)
label(_MonSR10)
label(_MonSR11)
label(_MonSR12)
label(_BackMSR)
label(_ExitMSR)
label(_MonShipC)
label(_MonSC00)
label(_MonSC01)
label(_MonSC02)
label(_MonSC10)
label(_MonSC11)
label(_MonSC12)
label(_BackMSC)
label(_ExitMSC)
label(_MonRep)
label(_MonR00)
label(_MonR01)
label(_BackMR)
label(_ExitMR)
label(pPlayerR)
label(pPlayerC)
label(pCargoR)
label(pCargoC)
label(pWHR)
label(pWHC)
label(iEnableMG)
label(iEnableMC)
label(iEnableMW)
label(iEnableGM)
label(iEnableMCr)
label(iEnableMA)
label(iEnableMR)
label(iEnableMS)
label(iMinGold)
label(aLast)
label(pFleet)
label(pFleet1)
label(wAmmo)
label(wAmmo1)
label(wWeapon)
label(wWeapon1)
label(wBarrel)
label(wBarrel1)
label(iCargo)
label(iCargo1)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pPlayerR)
registersymbol(pPlayerC)
registersymbol(pCargoR)
registersymbol(pCargoC)
registersymbol(pWHR)
registersymbol(pWHC)
registersymbol(iEnableMG)
registersymbol(iEnableMC)
registersymbol(iEnableMW)
registersymbol(iEnableGM)
registersymbol(iEnableMCr)
registersymbol(iEnableMA)
registersymbol(iEnableMR)
registersymbol(iEnableMS)
registersymbol(iMinGold)
registersymbol(aLast)
registersymbol(pMonPlayerR)
registersymbol(pMonPlayerC)
registersymbol(pMonCargoR)
registersymbol(pMonCargoC)
registersymbol(pMonWHR)
registersymbol(pMonWHC)
registersymbol(pGodModeS)
registersymbol(pMonSail)
registersymbol(pMonShipR)
registersymbol(pMonShipC)
registersymbol(pMonRep)

//=========================================
MyCode:
//========================================= ok
// Real value
// Called all the time
_MonPlayerR:
 mov dword ptr [aLast],'MPlR'

 push eax

 mov ecx,[esi+1C]                  // get pPlayer
 test ecx,ecx
 jz _ExitMPR

 mov [pPlayerR],esi

 cmp dword ptr [iEnableMG],0
 je _ExitMPR                       // Jump if feature is disabled

 mov eax,[iMinGold]
 cmp eax,[ecx+0000025c]
 jle _ExitMPR

 mov [ecx+0000025c],eax            // Udate current gold

_ExitMPR:
 pop eax

 mov ecx,[esi+1C]                  // Original code
 test ecx,ecx                      // Original code
 jmp _BackMPR                      // Back to main code

//========================================= ok
// Copy (Displayed value)
// Called when in a province
_MonPlayerC:
 mov dword ptr [aLast],'MPlC'

 push ecx

 mov eax,[edi+1C]                  // get pPlayer
 test eax,eax
 jz _ExitMPC

 mov [pPlayerC],edi

 cmp dword ptr [iEnableMG],0
 je _ExitMPC                       // Jump if feature is disabled

 mov ecx,[iMinGold]
 cmp ecx,[eax+0000025c]
 jle _ExitMPC

 mov [eax+0000025c],ecx            // Udate current gold

_ExitMPC:
 pop ecx

 mov eax,[edi+1C]                  // Original code
 test eax,eax                      // Original code
 jmp _BackMPC                      // Back to main code

//========================================= ok
// Minimum value for existing items
// Real value
// Called when ship is selected
_MonCargoR:
 mov dword ptr [aLast],'MCaR'

 push ebx
 push ecx
 push edx
 push esi
 push edi

 mov eax,[edi+10]                  // get pOwnerPlayer
 cmp eax,[pPlayerR]
 jne _ExitMCR

 mov eax,[edi+2C]                  // get pCargo
 test eax,eax
 jz _ExitMCR

 mov [pCargoR],edi

 cmp dword ptr [iEnableMS],0
 je _MonCR10                       // Jump if feature is disabled

 mov ecx,(float)120.0
 cmp ecx,[edi+5c]
 jle _MonCR10

 mov [edi+5c],ecx

_MonCR10:
 cmp dword ptr [iEnableMC],0
 je _ExitMCR                       // Jump if feature is disabled

 mov ecx,#1000
 cmp ecx,[eax+10]
 jle _MonCR00

 mov [eax+10],ecx

_MonCR00:
 mov ecx,[eax+14]
 test ecx,ecx
 jz _ExitMCR

 xor ebx,ebx
 mov ecx,#20
 lea esi,[eax+18]

_MonCR01:
 cmp dword ptr [esi+ecx*4-04],0
 je _MonCR02

 inc ebx

_MonCR02:
 loop _MonCR01

 test ebx,ebx
 jz _ExitMCR

 push eax
 xor edx,edx
 mov eax,[eax+10]
 lea eax,[eax-64]
 div ebx
 mov ebx,eax
 pop eax

 xor ecx,ecx
 mov [eax+14],ecx
 mov [eax+000000b8],ecx

 mov ecx,#20
 lea edi,[eax+18]

_MonCR03:
 cmp dword ptr [edi+ecx*4-04],0
 je _MonCR04

 mov [edi+ecx*4-04],ebx
 add [eax+14],ebx
 add [eax+000000b8],ebx

_MonCR04:
 loop _MonCR03

_ExitMCR:
 pop edi
 pop esi
 pop edx
 pop ecx
 pop ebx

 mov eax,[edi+2C]                  // Original code
 test eax,eax                      // Original code
 jmp _BackMCR                      // Back to main code

//========================================= ok
// Minimum value for existing items
// Copy (displayed) value
// Called when ship is selected
_MonCargoC:
 mov dword ptr [aLast],'MCaC'

 push eax
 push ebx
 push ecx
 push edx
 push esi
 push edi

 mov ebx,[eax+10]                  // get pOwnerPlayer
 cmp ebx,[pPlayerC]
 jne _ExitMCC

 mov ebx,[eax+2C]                  // get pPlayer
 test ebx,ebx
 jz _ExitMCC

 mov [pCargoC],eax

 cmp dword ptr [iEnableMS],0
 je _MonCC10                       // Jump if feature is disabled

 mov ecx,(float)120.0
 cmp ecx,[eax+5c]
 jle _MonCC10

 mov [eax+5c],ecx

_MonCC10:
 mov eax,ebx

 cmp dword ptr [iEnableMC],0
 je _ExitMCC                       // Jump if feature is disabled

 mov ecx,#1000
 cmp ecx,[eax+10]
 jle _MonCC00

 mov [eax+10],ecx

_MonCC00:
 mov ecx,[eax+14]
 test ecx,ecx
 jz _ExitMCC

 xor ebx,ebx
 mov ecx,#20
 lea esi,[eax+18]

_MonCC01:
 cmp dword ptr [esi+ecx*4-04],0
 je _MonCC02

 inc ebx

_MonCC02:
 loop _MonCC01

 test ebx,ebx
 jz _ExitMCC

 push eax
 xor edx,edx
 mov eax,[eax+10]
 lea eax,[eax-64]
 div ebx
 mov ebx,eax
 pop eax

 xor ecx,ecx
 mov [eax+14],ecx
 mov [eax+000000b8],ecx

 mov ecx,#20
 lea edi,[eax+18]

_MonCC03:
 cmp dword ptr [edi+ecx*4-04],0
 je _MonCC04

 mov [edi+ecx*4-04],ebx
 add [eax+14],ebx
 add [eax+000000b8],ebx

_MonCC04:
 loop _MonCC03

_ExitMCC:
 pop edi
 pop esi
 pop edx
 pop ecx
 pop ebx
 pop eax

 mov eax,[eax+2C]                  // Original code
 cmp eax,edi                       // Original code
 jmp _BackMCC                      // Back to main code

//========================================= ok
// Minimum value for existing items
// Real value
// Called when in a town
_MonWHR:
 mov dword ptr [aLast],'MWHR'

 push ebx
 push ecx
 push edx
 push esi
 push edi

 mov eax,[edi+10]                  // get pOwnerPlayer
 cmp eax,[pPlayerR]
 jne _ExitMWR

 mov eax,[edi+2C]                  // get pPlayer
 test eax,eax
 jz _ExitMWR

 mov [pWHR],edi

 cmp dword ptr [iEnableMW],0
 je _ExitMWR                       // Jump if feature is disabled

 mov ecx,#10000
 cmp ecx,[eax+10]
 jle _MonWR00

 mov [eax+10],ecx

_MonWR00:
 mov ecx,[eax+14]
 test ecx,ecx
 jz _ExitMWR

 xor ebx,ebx
 mov ecx,#20
 lea esi,[eax+18]

_MonWR01:
 cmp dword ptr [esi+ecx*4-04],0
 je _MonWR02

 inc ebx

_MonWR02:
 loop _MonWR01

 test ebx,ebx
 jz _ExitMWR

 push eax
 xor edx,edx
 mov eax,[eax+10]
 lea eax,[eax-64]
 div ebx
 mov ebx,eax
 pop eax

 xor ecx,ecx
 mov [eax+14],ecx
 mov [eax+000000b8],ecx

 mov ecx,#20
 lea edi,[eax+18]

_MonWR03:
 cmp dword ptr [edi+ecx*4-04],0
 je _MonWR04

 mov [edi+ecx*4-04],ebx
 add [eax+14],ebx
 add [eax+000000b8],ebx

_MonWR04:
 loop _MonWR03

_ExitMWR:
 pop edi
 pop esi
 pop edx
 pop ecx
 pop ebx

 mov eax,[edi+2C]                  // Original code
 cmp dword ptr [eax+0C],00         // Original code
 jmp _BackMWR                      // Back to main code

//========================================= ok
// Minimum value for existing items
// Real value
// Called when in a town
_MonWHC:
 mov dword ptr [aLast],'MWHC'

 push eax
 push ebx
 push ecx
 push edx
 push esi
 push edi

 mov edi,ecx

 mov eax,[edi+10]                  // get pOwnerPlayer
 cmp eax,[pPlayerC]
 jne _ExitMWC

 mov eax,[edi+2C]                  // get pPlayer
 test eax,eax
 jz _ExitMWC

 mov [pWHC],edi

 cmp dword ptr [iEnableMW],0
 je _ExitMWC                       // Jump if feature is disabled

 mov ecx,#10000
 cmp ecx,[eax+10]
 jle _MonWC00

 mov [eax+10],ecx

_MonWC00:
 mov ecx,[eax+14]
 test ecx,ecx
 jz _ExitMWC

 xor ebx,ebx
 mov ecx,#20
 lea esi,[eax+18]

_MonWC01:
 cmp dword ptr [esi+ecx*4-04],0
 je _MonWC02

 inc ebx

_MonWC02:
 loop _MonWC01

 test ebx,ebx
 jz _ExitMWC

 push eax
 xor edx,edx
 mov eax,[eax+10]
 lea eax,[eax-64]
 div ebx
 mov ebx,eax
 pop eax

 xor ecx,ecx
 mov [eax+14],ecx
 mov [eax+000000b8],ecx

 mov ecx,#20
 lea edi,[eax+18]

_MonWC03:
 cmp dword ptr [edi+ecx*4-04],0
 je _MonWC04

 mov [edi+ecx*4-04],ebx
 add [eax+14],ebx
 add [eax+000000b8],ebx

_MonWC04:
 loop _MonWC03

_ExitMWC:
 pop edi
 pop esi
 pop edx
 pop ecx
 pop ebx
 pop eax

 mov edi,[ecx+2C]                  // Original code
 mov [ecx+0C],esi                  // Original code
 jmp _BackMWC                      // Back to main code

//========================================= ok
// Real/Copy value
_GodModeS:
 mov dword ptr [aLast],'GMoS'

 mov edx,[ecx+10]                  // get pOwnerPlayer
 cmp edx,[pPlayerR]
 je _GodMS00

 cmp edx,[pPlayerC]
 jne _ExitGMS

_GodMS00:
 cmp dword ptr [iEnableGM],0
 je _ExitGMS                       // Jump if feature is disabled

 mov edx,[ecx+2C]
 mov [ecx+28],edx
 mov [ebp+08],edx

_ExitGMS:
 mov edx,[ecx+28]                  // Original code
 push esi                          // Original code
 mov esi,[ebp+08]                  // Original code
 jmp _BackGMS                      // Back to main code

//========================================= ok
// Real/Copy value
_MonSail:
 mov dword ptr [aLast],'MSai'

 push ebx

 movzx eax,al                      // Original code

 mov ebx,[ecx+10]                  // get pOwnerPlayer
 cmp ebx,[pPlayerR]
 je _MonS00

 cmp ebx,[pPlayerC]
 jne _ExitMS

_MonS00:
 cmp dword ptr [iEnableGM],0
 je _ExitMS                        // Jump if feature is disabled

 mov dl,[eax+ecx+1C]

_ExitMS:
 pop ebx

 cmp dl,[eax+ecx+1C]               // Original code
 jmp _BackMS                       // Back to main code

//========================================= ok
// Real value
_MonShipR:
 mov dword ptr [aLast],'MSpR'

 push ebx
 push ecx
 push edx

 mov ecx,[eax+esi*4-04]
 test ecx,ecx
 jz _ExitMSR

 mov ebx,[ecx+10]                  // get pOwnerPlayer
 cmp ebx,[pPlayerR]
 jne _ExitMSR

 mov ebx,[ecx+14]                  // Get pFleet
 cmp ebx,[pFleet]
 je _MonSR10

 mov [pFleet],ebx
 xor ebx,ebx
 mov [wAmmo],ebx
 mov [wWeapon],ebx
 mov [wBarrel],ebx
 mov [iCargo],ebx

_MonSR10:
 cmp dword ptr [iEnableGM],0
 je _MonSR00                        // Jump if feature is disabled

 mov ebx,#61000000
 mov [ecx+28],ebx
 mov [ecx+2C],ebx
 mov ebx,#250
 mov [ecx+1C],bl
 mov [ecx+1d],bl
 mov [ecx+1e],bl
 mov [ecx+1f],bl

_MonSR00:
 cmp dword ptr [iEnableMS],0
 je _MonSR11                        // Jump if feature is disabled

 mov ebx,(float)120.0
 cmp ebx,[ecx+20]
 jle _MonSR11

 mov [ecx+20],ebx

_MonSR11:
 cmp dword ptr [iEnableMC],0
 je _MonSR01                        // Jump if feature is disabled

 mov ebx,#1000
 cmp bx,[ecx+36]
 jle _MonSR12

 mov [ecx+36],bx

_MonSR12:
 mov bx,[ecx+36]
 add [iCargo],ebx

 cmp esi,2
 jge _MonSR01

 push eax
 mov eax,[ecx+14]
 mov eax,[eax+2c]
 mov ebx,[iCargo]
 mov [eax+10],ebx
 pop eax

 xor ebx,ebx
 mov [iCargo],ebx

_MonSR01:
 cmp dword ptr [iEnableMCr],0
 je _MonSR02                        // Jump if feature is disabled

 push eax
 xor edx,edx
 mov eax,edx
 mov ax,[ecx+34]
 mov ebx,#1000
 mul ebx
 mov [ecx+30],eax
 pop eax

_MonSR02:
 cmp dword ptr [iEnableMA],0
 je _ExitMSR                       // Jump if feature is disabled

 mov bx,[ecx+34]                   // Get wmCrew
 mov ecx,[ecx+14]                  // Get pFleet
 xor edx,edx

 add [wWeapon],bx
 add [wWeapon+02],bx

 mov bx,#10
 add [wBarrel],bx

 mov bx,#80
 add [wAmmo],bx
 add [wAmmo+02],bx

 cmp esi,2
 jge _ExitMSR

 mov bx,[wWeapon]
 mov [ecx+000000aa],bx
 mov bx,[wWeapon+02]
 mov [ecx+000000ac],bx
 mov bx,[wBarrel]
 mov [ecx+000000ae],bx

 mov bx,[wAmmo]
 mov dx,[ecx+000000a6]
 cmp bx,dx
 cmovg dx,bx
 mov [ecx+000000a6],dx

 mov bx,[wAmmo+02]
 mov dx,[ecx+000000a8]
 cmp bx,dx
 cmovg dx,bx
 mov [ecx+000000a8],bx

 xor ebx,ebx
 mov [wAmmo],ebx
 mov [wWeapon],ebx
 mov [wBarrel],ebx

_ExitMSR:
 pop edx
 pop ecx
 pop ebx

 mov eax,[eax+esi*4-04]            // Original code
 dec esi                           // Original code
 jmp _BackMSR                      // Back to main code

//========================================= ok
// Displayed value
_MonShipC:
 mov dword ptr [aLast],'MSpC'

 push ebx
 push edx

 mov ecx,[eax+esi*4-04]
 test ecx,ecx
 jz _ExitMSC

 mov ebx,[ecx+10]                  // get pOwnerPlayer
 cmp ebx,[pPlayerC]
 jne _ExitMSC

 mov ebx,[ecx+14]                  // Get pFleet
 cmp ebx,[pFleet1]
 je _MonSC10

 mov [pFleet1],ebx
 xor ebx,ebx
 mov [wAmmo1],ebx
 mov [wWeapon1],ebx
 mov [wBarrel1],ebx
 mov [iCargo1],ebx

_MonSC10:
 cmp dword ptr [iEnableGM],0
 je _MonSC00                        // Jump if feature is disabled

 mov ebx,#61000000
 mov [ecx+28],ebx
 mov [ecx+2C],ebx
 mov ebx,#250
 mov [ecx+1C],bl
 mov [ecx+1d],bl
 mov [ecx+1e],bl
 mov [ecx+1f],bl

_MonSC00:
 cmp dword ptr [iEnableMS],0
 je _MonSC11                        // Jump if feature is disabled

 mov ebx,(float)120.0
 cmp ebx,[ecx+20]
 jle _MonSC11

 mov [ecx+20],ebx

_MonSC11:
 cmp dword ptr [iEnableMC],0
 je _MonSC01                        // Jump if feature is disabled

 mov ebx,#1000
 cmp bx,[ecx+36]
 jle _MonSC12

 mov [ecx+36],bx

_MonSC12:
 mov bx,[ecx+36]
 add [iCargo1],ebx

 cmp esi,2
 jge _MonSC01

 push eax
 mov eax,[ecx+14]
 mov eax,[eax+2c]
 mov ebx,[iCargo1]
 mov [eax+10],ebx
 pop eax

 xor ebx,ebx
 mov [iCargo1],ebx

_MonSC01:
 cmp dword ptr [iEnableMCr],0
 je _MonSC02                        // Jump if feature is disabled

 push eax
 xor edx,edx
 mov eax,edx
 mov ax,[ecx+34]
 mov ebx,#1000
 mul ebx
 mov [ecx+30],eax
 pop eax

_MonSC02:
 cmp dword ptr [iEnableMA],0
 je _ExitMSC                       // Jump if feature is disabled

 mov bx,[ecx+34]                   // Get wmCrew
 mov ecx,[ecx+14]                  // Get pFleet
 xor edx,edx

 add [wWeapon1],bx
 add [wWeapon1+02],bx

 mov bx,#10
 add [wBarrel1],bx

 mov bx,#80
 add [wAmmo1],bx
 add [wAmmo1+02],bx

 cmp esi,2
 jge _ExitMSC

 mov bx,[wWeapon1]
 mov [ecx+000000aa],bx
 mov bx,[wWeapon1+02]
 mov [ecx+000000ac],bx
 mov bx,[wBarrel1]
 mov [ecx+000000ae],bx

 mov bx,[wAmmo1]
 mov dx,[ecx+000000a6]
 cmp bx,dx
 cmovg dx,bx
 mov [ecx+000000a6],dx

 mov bx,[wAmmo1+02]
 mov dx,[ecx+000000a8]
 cmp bx,dx
 cmovg dx,bx
 mov [ecx+000000a8],bx

 xor ebx,ebx
 mov [wAmmo1],ebx
 mov [wWeapon1],ebx
 mov [wBarrel1],ebx

_ExitMSC:
 pop edx
 pop ebx

 mov ecx,[eax+esi*4-04]            // Original code
 dec esi                           // Original code
 jmp _BackMSC                      // Back to main code

//========================================= AOB changed
// Real value
// When Updating REP on Towns
_MonRep:
 mov dword ptr [aLast],'MRep'

 push ebx

 mov ebx,[ebp+14]                  // get pOwnerPlayer
 cmp ebx,[pPlayerR]
 jne _ExitMR

 cmp dword ptr [iEnableMR],0
 je _ExitMR                        // Jump if feature is disabled

 xor ebx,ebx

 mov edx,[esi]
 test edx,edx
 jns _MonR00

 mov [esi],ebx

_MonR00:
 mov edx,[ebp+08]
 add edx,[esi]
 test edx,edx
 jns _MonR01

 mov [ebp+08],ebx

_MonR01:
 mov edx,[esi]
 add edx,[esi+04]
 add edx,[ebp+08]
 mov ebx,#500
 cmp ebx,edx
 jle _ExitMR

 sub ebx,edx
 mov [esi],ebx

_ExitMR:
 pop ebx

 mov eax,[esi]                     // Original code
 add eax,[ebp+08]                  // Original code
 jmp _BackMR                       // Back to main code

//=========================================
 db '=======================================&gt;'
 db 'CE6.1 Script by Recifense 051212'
//=========================================
// Variables
iEnableMG:
 dd 0
iEnableMC:
 dd 0
iEnableMW:
 dd 0
iEnableGM:
 dd 1
iEnableMCr:
 dd 0
iEnableMA:
 dd 0
iEnableMR:
 dd 0
iEnableMS:
 dd 0
pPlayerR:
 dd MyCode
pPlayerC:
 dd MyCode
pCargoR:
 dd MyCode
pCargoC:
 dd MyCode
pWHR:
 dd MyCode
pWHC:
 dd MyCode
iMinGold:
 dd #610000
aLast:
 db 'CE61'
pFleet:
 dd MyCode
pFleet1:
 dd MyCode
wAmmo:
 dw 0
 dw 0
wAmmo1:
 dw 0
 dw 0
wWeapon:
 dw 0
 dw 0
wWeapon1:
 dw 0
 dw 0
wBarrel:
 dw 0
 dw 0
wBarrel1:
 dw 0
 dw 0
iCargo:
 dd 0
iCargo1:
 dd 0

//=========================================
// Hacking Points
//PortRoyale3.exe+00293dc7:
//PortRoyale3.exe+00293967:
aobMonPlayerR+07:
pMonPlayerR:
 jmp _MonPlayerR
_BackMPR:

//PortRoyale3.exe+000edf96:
//PortRoyale3.exe+000ed746:
aobMonPlayerC+0B:
pMonPlayerC:
 jmp _MonPlayerC
_BackMPC:

//PortRoyale3.exe+002937ec:
//PortRoyale3.exe+0029338c:
aobMonCargoR:
pMonCargoR:
 jmp _MonCargoR
_BackMCR:

//PortRoyale3.exe+000343ee:
//PortRoyale3.exe+0003343e:
aobMonCargoC:
pMonCargoC:
 jmp _MonCargoC
_BackMCC:

//PortRoyale3.exe+00293b58:
//PortRoyale3.exe+002936f8:
aobMonWHR:
pMonWHR:
 jmp _MonWHR
 nop
 nop
_BackMWR:

//PortRoyale3.exe+00033c74:
//PortRoyale3.exe+00032cc4:
aobMonWHC:
pMonWHC:
 jmp _MonWHC
 nop
_BackMWC:

//PortRoyale3.exe+00270193:
//PortRoyale3.exe+0026fdc3:
aobGodModeS:
pGodModeS:
 jmp _GodModeS
 nop
 nop
_BackGMS:

//PortRoyale3.exe+0027036b:
//PortRoyale3.exe+0026ff9b:
aobMonSail:
pMonSail:
 jmp _MonSail
 nop
 nop
_BackMS:

//PortRoyale3.exe+002937c3:
//PortRoyale3.exe+00293363:
aobMonShipR:
pMonShipR:
 jmp _MonShipR
_BackMSR:

//PortRoyale3.exe+0035d71e:
//PortRoyale3.exe+0035d0ee:
aobMonShipC:
pMonShipC:
 jmp _MonShipC
_BackMSC:

//PortRoyale3.exe+00279b45:
//PortRoyale3.exe+00279315:
//PortRoyale3.exe+002792f6: //AOB changed
aobMonRep:
pMonRep:
 jmp _MonRep
_BackMR:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
//PortRoyale3.exe+00293dc7:
//PortRoyale3.exe+00293967:
pMonPlayerR:
// mov ecx,[esi+1C]
// test ecx,ecx
 db 8b 4e 1c 85 c9

//PortRoyale3.exe+000edf96:
//PortRoyale3.exe+000ed746:
pMonPlayerC:
// mov eax,[edi+1C]
// test eax,eax
 db 8b 47 1c 85 c0

//PortRoyale3.exe+002937ec:
//PortRoyale3.exe+0029338c:
pMonCargoR:
// mov ecx,[edi+2C]
// test eax,eax
 db 8b 47 2c 85 c0

//PortRoyale3.exe+000343ee:
//PortRoyale3.exe+0003343e:
pMonCargoC:
// mov eax,[eax+2C]
// cmp eax,edi
 db 8b 40 2c 3b c7

//PortRoyale3.exe+00293b58:
//PortRoyale3.exe+002936f8:
pMonWHR:
// mov eax,[edi+2C]
// cmp dword ptr [eax+0C],00
 db 8b 47 2c 83 78 0c 00

//PortRoyale3.exe+00033c74:
//PortRoyale3.exe+00032cc4:
pMonWHC:
// mov edi,[ecx+2C]
// mov [ecx+0C],esi
 db 8b 79 2c 89 71 0c

//PortRoyale3.exe+00270193:
//PortRoyale3.exe+0026fdc3:
pGodModeS:
// mov edx,[ecx+28]
// push esi
// mov esi,[ebp+08]
 db 8b 51 28 56 8b 75 08

//PortRoyale3.exe+0027036b:
//PortRoyale3.exe+0026ff9b:
pMonSail:
// movzx eax,al
// cmp dl,[eax+ecx+1C]
 db 0f b6 c0 3a 54 08 1c

//PortRoyale3.exe+002937c3:
//PortRoyale3.exe+00293363:
pMonShipR:
// mov eax,[eax+esi*4-04]
// dec esi
 db 8b 44 b0 fc 4e

//PortRoyale3.exe+0035d71e:
//PortRoyale3.exe+0035d0ee:
pMonShipC:
// mov ecx,[eax+esi*4-04]
// dec esi
 db 8b 4c b0 fc 4e

//PortRoyale3.exe+00279b45:
//PortRoyale3.exe+00279315:
// mov edx,[esi+04]
// add edx,eax
// db 8b 56 04 03 d0
//PortRoyale3.exe+002792f6: //AOB changed
pMonRep:
// mov eax,[esi]
// add eax,[ebp+08]
 db 8b 06 03 45 08

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMG)
unregistersymbol(iEnableMC)
unregistersymbol(iEnableMW)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMCr)
unregistersymbol(iEnableMA)
unregistersymbol(iEnableMS)
unregistersymbol(pPlayerR)
unregistersymbol(pPlayerC)
unregistersymbol(pCargoR)
unregistersymbol(pCargoC)
unregistersymbol(pWHR)
unregistersymbol(pWHC)
unregistersymbol(iMinGold)
unregistersymbol(aLast)
unregistersymbol(pMonPlayerR)
unregistersymbol(pMonPlayerC)
unregistersymbol(pMonCargoR)
unregistersymbol(pMonCargoC)
unregistersymbol(pMonWHR)
unregistersymbol(pMonWHC)
unregistersymbol(pGodModeS)
unregistersymbol(pMonSail)
unregistersymbol(pMonShipR)
unregistersymbol(pMonShipC)
unregistersymbol(pMonRep)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>87</ID>
          <Description>"Enable/Disable God Mode ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Enable/Disable Minimum Gold ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMG</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>85</ID>
              <Description>"Minimum Gold Value ==&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinGold</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Enable/Disable Minimum Cargo on Selected Ship ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Enable/Disable Minimum Items on Selected Warehouse ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMW</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"Enable/Disable Full Crew on Selected Ship ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMCr</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"Enable/Disable Minimum Ammo/Weapon ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMA</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>88</ID>
          <Description>"Enable/Disable Minimum Ship Speed ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMS</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>86</ID>
          <Description>"Enable/Disable Minimum Reputation in Towns ==&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMR</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>89</ID>
          <Description>"======= Global Reputation (Real) ======="</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>404080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerR</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>90</ID>
              <Description>"SPAIN"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerR</Address>
              <Offsets>
                <Offset>170</Offset>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>91</ID>
              <Description>"ENGLAND"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerR</Address>
              <Offsets>
                <Offset>174</Offset>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>92</ID>
              <Description>"FRANCE"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerR</Address>
              <Offsets>
                <Offset>178</Offset>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>93</ID>
              <Description>"HOLLAND"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerR</Address>
              <Offsets>
                <Offset>17C</Offset>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"======= Global Reputation (Copy) ======="</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>404080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayerC</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>95</ID>
              <Description>"SPAIN"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerC</Address>
              <Offsets>
                <Offset>170</Offset>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>96</ID>
              <Description>"ENGLAND"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerC</Address>
              <Offsets>
                <Offset>174</Offset>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>97</ID>
              <Description>"FRANCE"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerC</Address>
              <Offsets>
                <Offset>178</Offset>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>98</ID>
              <Description>"HOLLAND"</Description>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayerC</Address>
              <Offsets>
                <Offset>17C</Offset>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>99</ID>
          <Description>"======= Selcted Fleet Captain Attributes (Real) ======="</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>404080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pCargoR</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>100</ID>
              <Description>"Battle XP"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoR</Address>
              <Offsets>
                <Offset>20</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>101</ID>
              <Description>"Navigation XP"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoR</Address>
              <Offsets>
                <Offset>24</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>102</ID>
              <Description>"Traiding XP"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoR</Address>
              <Offsets>
                <Offset>28</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>103</ID>
              <Description>"Shipbuilding XP"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoR</Address>
              <Offsets>
                <Offset>2C</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>104</ID>
              <Description>"Fighting XP"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoR</Address>
              <Offsets>
                <Offset>30</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>105</ID>
              <Description>"Sight Distance"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoR</Address>
              <Offsets>
                <Offset>34</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>106</ID>
          <Description>"======= Selcted Fleet Captain Attributes (Copy) ======="</Description>
          <ShowAsHex>1</ShowAsHex>
          <Color>404080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pCargoR</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>107</ID>
              <Description>"Battle XP"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoC</Address>
              <Offsets>
                <Offset>20</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>108</ID>
              <Description>"Navigation XP"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoC</Address>
              <Offsets>
                <Offset>24</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>109</ID>
              <Description>"Traiding XP"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoC</Address>
              <Offsets>
                <Offset>28</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>110</ID>
              <Description>"Shipbuilding XP"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoC</Address>
              <Offsets>
                <Offset>2C</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>111</ID>
              <Description>"Fighting XP"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoC</Address>
              <Offsets>
                <Offset>30</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>112</ID>
              <Description>"Sight Distance"</Description>
              <Color>0000FF</Color>
              <VariableType>Float</VariableType>
              <Address>pCargoC</Address>
              <Offsets>
                <Offset>34</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>iEnableMR</Name>
      <Address>02E908E8</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>===========================================
 Game Title    : Port Royale 3
 Game Version  : 1.1.2 - 24556 BS
 Proces Name   : PortRoyale3.exe
 Script Version: 2.1 AOB
 CE Version    : 6.1
 Release date  : 12-May-2012
 Author        : Recifense
 History:
 08-May-12: (v1.0) First Release for version 1.1.0
 10-May-12: (v2.0) Bug fixed related to iEnableMA + Ship Speed
 12-May-12: (v2.0) Bug fixed related to ShipCargo Release for version 1.1.2
 Features:
 - Minimum Gold
 - Minimum capacity (1000) and Existing Items on player's selected ship
 - Minimum capacity (10000) and Existing Items on player's Warehouse
 - God Mode:
   - Hull (6100)
   - Sail (250 each)
 - Maximum crew
 - Minimum ammo and full weapons
 - Minimum Reputation in towns (50%)
 - Minimum Ship Speed (30 knots)
===========================================
[GOLD] Minimum Value for Player's GOLD defined by "Minimum Gold Value";
[CARGO] Selected ship capacity will be set to 1000 and the total cargo will be 980 (this value will be devided among the existing items).
[WAREHOUSE] Selected WH capacity will be set to 10000 and the total cargo will be 9980 (this value will be devided among the existing items).
[CREW] The selected ship crew is set to maximum;
[AMMO] The selected ship minimum ammo value is 80.
[WEAPONS] The selected ship number of weapons will be equal to her maximum crew number.
[REPUTATION] When in a town, make your REP change by buying or selling any thing (or any other way).
[SPEED] The ships/fleet minimum speed will be 30 knots
[POINTER TO GLOBAL REP]  Each 10 = 1% REP
[POINTER TO FLEET CAPTAIN]  The captain's attributes can be changed;
[***NOTE***] Everything in this game is in double. So the REP information and captain's attributes have to be changed in 2 different addresses.
  
  
</Comments>
</CheatTable>
