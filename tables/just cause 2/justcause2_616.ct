<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoclipcheckzeroAOB,83 BE E4 01 00 00 00 57 8D 7E FC)
registersymbol(ammoclipcheckzeroAOB)
aobscan(ammopouchreadAOB,8B 44 88 78 03 45 FC 5F 5E 8B E5)
registersymbol(ammopouchreadAOB)
aobscan(armorreadAOB,0fxxxxxxxxxxxx0fxxxxxxxxxx8bxxe8xxxxxxxx84xx0fxxxxxxxxxxf3xxxxxx)
registersymbol(armorreadAOB)
/*
armorreadAOB is the exact copy from SER[G]ANT's INFINITE HEALTH aob
http://forum.cheatengine.org/viewtopic.php?t=497909#4879769
*/
aobscan(resourcesreadAOB,8B 44 81 08 5D C2 04 00 CC)
registersymbol(resourcesreadAOB)
aobscan(wantedreadAOB,F3 0F 10 40 30 0F 2F 05 ** ** ** ** 53 56)
registersymbol(wantedreadAOB)
aobscan(drivingreadAOB,8B 07 8B 90 C4 00 00 00 8D 4D E4)
registersymbol(drivingreadAOB)
aobscan(allhealthsubAOB,F3 0F 11 8E E8 00 00 00 76)
registersymbol(allhealthsubAOB)
aobscan(healthreadAOB,0F 2F 81 E8 00 00 00 72 06 B8 01 00 00 00)
registersymbol(healthreadAOB)

label(pAmmoClip)
registersymbol(pAmmoClip)
label(pAmmoPouch)
registersymbol(pAmmoPouch)
label(pHero)
registersymbol(pHero)
label(pResources)
registersymbol(pResources)
label(pWanted)
registersymbol(pWanted)
label(pDriving)
registersymbol(pDriving)
label(bInfCarHealth)
registersymbol(bInfCarHealth)
label(bInfHeroHealth)
registersymbol(bInfHeroHealth)
label(bUndead)
registersymbol(bUndead)
label(pHeroRH)
registersymbol(pHeroRH)

label(tpAllHealth)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)

label(newmem17)
label(returnhere17)
label(originalcode17)
label(exit17)

label(newmem24)
label(returnhere24)
label(originalcode24)
label(exit24)

label(newmem32)
label(returnhere32)
label(originalcode32)
label(exit32)
label(checkBICarHealth32)
label(checkBIHHealth32)
label(doLockHealth32)
label(doMinHealth32)

label(newmem41)
label(returnhere41)
label(originalcode41)
label(exit41)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
/*cmp bl,01
jne originalcode
cmp edi,04
jne originalcode*/

mov eax,[pAmmoPouch]
xor al,al
xor bl,bl
cmp eax,ebx
jne originalcode
cmp word ptr [esi+1E6],FFFF
je originalcode
cmp byte ptr [esi+1E5],FF
je originalcode
cmp edi,2
je originalcode

mov [pAmmoClip],esi
sub [pAmmoClip],4

originalcode:
popad
cmp dword ptr [esi+000001E4],00

exit:
jmp returnhere

///

newmem2:
mov [pAmmoPouch],eax

originalcode2:
mov eax,[eax+ecx*4+78]
add eax,[ebp-04]

exit2:
jmp returnhere2

///

newmem6:
mov [pHero],esi

originalcode6:
comiss xmm0,[esi+000001B0]

exit6:
jmp returnhere6

///

newmem11:
/*
eax 4, Chaos
eax 3, Money
eax 0, Weapon parts
eax 2, Vehicle parts
eax 1, Armor parts
*/
mov [pResources],ecx

originalcode11:
mov eax,[ecx+eax*4+08]
pop ebp

exit11:
jmp returnhere11

///

newmem17:
mov [pWanted],eax

originalcode17:
movss xmm0,[eax+30]

exit17:
jmp returnhere17

///

newmem24:
mov [pDriving],edi

originalcode24:
mov eax,[edi]
mov edx,[eax+000000C4]

exit24:
jmp returnhere24

///

newmem32:
pushfd

checkBICarHealth32:
cmp [pDriving],esi
jne checkBIHHealth32
cmp byte ptr [bInfCarHealth],01
je doLockHealth32
jmp originalcode32

checkBIHHealth32:
cmp [pHeroRH],esi
jne originalcode32
cmp byte ptr [bInfHeroHealth],01
je doLockHealth32
cmp byte ptr [bUndead],01
je doMinHealth32
jmp originalcode32

doLockHealth32:
movss [tpAllHealth],xmm1
push eax
mov eax,[tpAllHealth]
cmp [esi+000000E8],eax
pop eax
jle originalcode32
movss xmm1,[esi+000000E8]
jmp originalcode32

doMinHealth32:
movss [esi+000000E8],xmm1
cmp dword ptr [esi+000000E8],(float)1.0
jge originalcode32
mov dword ptr [esi+000000E8],(float)1.0
movss xmm1,[esi+000000E8]
jmp originalcode32

originalcode32:
popfd
movss [esi+000000E8],xmm1

exit32:
jmp returnhere32

///

newmem41:
mov [pHeroRH],ecx

originalcode41:
comiss xmm0,[ecx+000000E8]

exit41:
jmp returnhere41

///
pAmmoClip:
dd 0
pAmmoPouch:
dd 0
pHero:
dd 0
pResources:
dd 0
pWanted:
dd 0
pDriving:
dd 0
bInfCarHealth:
db 0
bInfHeroHealth:
db 0
bUndead:
db 0
pHeroRH:
dd 0

tpAllHealth:
dd 0
///

ammoclipcheckzeroAOB: //"JustCause2.exe"+43F873:
jmp newmem
nop
nop
returnhere:

ammopouchreadAOB: //"JustCause2.exe"+1E9776:
jmp newmem2
nop
nop
returnhere2:

armorreadAOB: //"JustCause2.exe"+1C5B57:
jmp newmem6
nop
nop
returnhere6:

resourcesreadAOB: //"JustCause2.exe"+22E476:
jmp newmem11
returnhere11:

wantedreadAOB: //"JustCause2.exe"+1DED95:
jmp newmem17
returnhere17:

drivingreadAOB: //"JustCause2.exe"+18D348:
jmp newmem24
nop
nop
nop
returnhere24:

allhealthsubAOB: //"JustCause2.exe"+3E87C2:
jmp newmem32
nop
nop
nop
returnhere32:

healthreadAOB: //"JustCause2.exe"+16BD03:
jmp newmem41
nop
nop
returnhere41:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoclipcheckzeroAOB: //"JustCause2.exe"+43F873:
db 83 BE E4 01 00 00 00
//Alt: cmp dword ptr [esi+000001E4],00
unregistersymbol(ammoclipcheckzeroAOB)
ammopouchreadAOB: //"JustCause2.exe"+1E9776:
db 8B 44 88 78 03 45 FC
//Alt: mov eax,[eax+ecx*4+78]
//Alt: add eax,[ebp-04]
unregistersymbol(ammopouchreadAOB)
armorreadAOB: //"JustCause2.exe"+1C5B57:
db 0F 2F 86 B0 01 00 00
//Alt: comiss xmm0,[esi+000001B0]
unregistersymbol(armorreadAOB)
resourcesreadAOB: //"JustCause2.exe"+22E476:
db 8B 44 81 08 5D
//Alt: mov eax,[ecx+eax*4+08]
//Alt: pop ebp
unregistersymbol(resourcesreadAOB)
wantedreadAOB: //"JustCause2.exe"+1DED95:
db F3 0F 10 40 30
//Alt: movss xmm0,[eax+30]
unregistersymbol(wantedreadAOB)
drivingreadAOB: //"JustCause2.exe"+18D348:
db 8B 07 8B 90 C4 00 00 00
//Alt: mov eax,[edi]
//Alt: mov edx,[eax+000000C4]
unregistersymbol(drivingreadAOB)
allhealthsubAOB: //"JustCause2.exe"+3E87C2:
db F3 0F 11 8E E8 00 00 00
//Alt: movss [esi+000000E8],xmm1
unregistersymbol(allhealthsubAOB)
healthreadAOB: //"JustCause2.exe"+16BD03:
db 0F 2F 81 E8 00 00 00
//Alt: comiss xmm0,[ecx+000000E8]
unregistersymbol(healthreadAOB)
unregistersymbol(pAmmoClip)
unregistersymbol(pAmmoPouch)
unregistersymbol(pHero)
unregistersymbol(pResources)
unregistersymbol(pWanted)
unregistersymbol(pDriving)
unregistersymbol(bInfCarHealth)
unregistersymbol(bInfHeroHealth)
unregistersymbol(bUndead)
unregistersymbol(pHeroRH)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Undead"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bUndead:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bUndead:
db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"Inf. Health"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bInfHeroHealth:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bInfHeroHealth:
db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Inf. Oxygen"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(oxygenunderwaterwriteAOB,F3 0F 11 8E 24 02 00 00 51 8B)
registersymbol(oxygenunderwaterwriteAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [esi+00000224],xmm1
cmp [pHero],esi
jne originalcode
cmp dword ptr [esi+00000224],(float)50.0
jge originalcode
mov dword ptr [esi+00000224],(float)50.0
movss xmm1,[esi+00000224]

originalcode:
//movss [esi+00000224],xmm1

exit:
jmp returnhere

oxygenunderwaterwriteAOB: //"JustCause2.exe"+1BF8BF:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
oxygenunderwaterwriteAOB: //"JustCause2.exe"+1BF8BF:
db F3 0F 11 8E 24 02 00 00
//Alt: movss [esi+00000224],xmm1
unregistersymbol(oxygenunderwaterwriteAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Inf. Ammo"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoclipsubAOB,83 86 E8 01 00 00 FF 8B 0D ** ** ** ** 85 C9)
registersymbol(ammoclipsubAOB)
aobscan(ammopouchsubAOB,01 74 83 78 8B C7 5F 5E 5B 8B E5)
registersymbol(ammopouchsubAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add dword ptr [esi+000001E8],-01
cmp [pAmmoClip],esi
jne originalcode
cmp dword ptr [esi+000001E8],1
jge originalcode
mov dword ptr [esi+000001E8],1

originalcode:
//add dword ptr [esi+000001E8],-01

exit:
jmp returnhere

///

newmem2:
add [ebx+eax*4+78],esi
cmp [pAmmoPouch],ebx
jne originalcode2
cmp [ebx+eax*4+78],#40
jge originalcode2
mov [ebx+eax*4+78],#40

originalcode2:
//add [ebx+eax*4+78],esi
mov eax,edi

exit2:
jmp returnhere2

ammoclipsubAOB: //"JustCause2.exe"+2EC80B:
jmp newmem
nop
nop
returnhere:

ammopouchsubAOB: //"JustCause2.exe"+1051E0:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoclipsubAOB: //"JustCause2.exe"+2EC80B:
db 83 86 E8 01 00 00 FF
//Alt: add dword ptr [esi+000001E8],-01
ammopouchsubAOB: //"JustCause2.exe"+1051E0:
db 01 74 83 78 8B C7
//Alt: add [ebx+eax*4+78],esi
//Alt: mov eax,edi
unregistersymbol(ammoclipsubAOB)
unregistersymbol(ammopouchsubAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Inf. Grenade"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(grenadesubAOB,89 84 99 D4 00 00 00 8B 89 C8 00 00 00)
registersymbol(grenadesubAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
push ebx
mov ebx,[pAmmoPouch]
xor cl,cl
xor bl,bl
cmp ecx,ebx
jne originalcode
cmp eax,1
jge originalcode
mov eax,1

originalcode:
pop ebx//
pop ecx//
mov [ecx+ebx*4+000000D4],eax

exit:
jmp returnhere

grenadesubAOB: //"JustCause2.exe"+2FD3EA:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
grenadesubAOB: //"JustCause2.exe"+2FD3EA:
db 89 84 99 D4 00 00 00
//Alt: mov [ecx+ebx*4+000000D4],eax
unregistersymbol(grenadesubAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"Inf. Vehicle/Heli/Planes Health (Driving and/or Last Drived)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bInfCarHealth:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bInfCarHealth:
db 0
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>43</ID>
              <Description>"Lock/Show Health for Driving Vehicle/Heli/Planes Only"</Description>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(exitdrivingAOB,8B 07 8B 90 00 01 00 00 C7 45 F8 00 00 00 00)
registersymbol(exitdrivingAOB)

alloc(newmem32,2048)
label(returnhere32)
label(originalcode32)
label(exit32)

newmem32: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pDriving],0

originalcode32:
mov eax,[edi]
mov edx,[eax+00000100]

exit32:
jmp returnhere32

///
pDriving:
dd 0
///

exitdrivingAOB: //"JustCause2.exe"+3470FB:
jmp newmem32
nop
nop
nop
returnhere32:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem32)
exitdrivingAOB: //"JustCause2.exe"+3470FB:
db 8B 07 8B 90 00 01 00 00
//Alt: mov eax,[edi]
//Alt: mov edx,[eax+00000100]
unregistersymbol(exitdrivingAOB)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHeroRH</Address>
          <Offsets>
            <Offset>E8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Armor"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>1B0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Oxygen"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHero</Address>
          <Offsets>
            <Offset>224</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Vehicle/Heli/Planes Health (Driving and/or Last Driven)"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pDriving</Address>
          <Offsets>
            <Offset>E8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Heat (Ctrl/Alt-:0)"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pWanted</Address>
          <Offsets>
            <Offset>30</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>109</Key>
              </Keys>
              <Value>0</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>109</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>18</Key>
                <Key>109</Key>
              </Keys>
              <ID>2</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Resources"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Chaos"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResources</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"Money"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResources</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"Weapons parts"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResources</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>20</ID>
              <Description>"Vehicle parts"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResources</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>19</ID>
              <Description>"Armor parts"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pResources</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Ammo Clip (show one wepon only when dual wield)"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pAmmoClip</Address>
          <Offsets>
            <Offset>1E8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Ammo Pouch"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>5</ID>
              <Description>"Pistol"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>7C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Submachine Gun"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>80</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Assult Rifle"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>98</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>25</ID>
              <Description>"Shotgun"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>B4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Grenades / Explosives"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>11</ID>
              <Description>"Fragmentation Grenade"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>D4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"Triggered Explosive"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoPouch</Address>
              <Offsets>
                <Offset>D8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"------------------------------"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>17ED9738</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>12989924</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammopouchsubAOB,01 74 83 78 8B C7 5F 5E 5B 8B E5)
registersymbol(ammopouchsubAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
add [ebx+eax*4+78],esi
cmp [pAmmoPouch],ebx
jne originalcode2
cmp [ebx+eax*4+78],#80
jge originalcode2
mov [ebx+eax*4+78],#80

originalcode2:
//add [ebx+eax*4+78],esi
mov eax,edi

exit2:
jmp returnhere2

ammopouchsubAOB: //"JustCause2.exe"+1051E0:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
ammopouchsubAOB: //"JustCause2.exe"+1051E0:
db 01 74 83 78 8B C7
//Alt: add [ebx+eax*4+78],esi
//Alt: mov eax,edi
unregistersymbol(ammopouchsubAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthreadAOB,0fxxxxxxxxxxxx0fxxxxxxxxxx8bxxe8xxxxxxxx84xx0fxxxxxxxxxxf3xxxxxx)
registersymbol(healthreadAOB)
/*
healthreadAOB by SER[G]ANT
http://forum.cheatengine.org/viewtopic.php?t=497909
*/

label(pHero)
registersymbol(pHero)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHero],esi

originalcode6:
comiss xmm0,[esi+000001B0]

exit6:
jmp returnhere6

///
pHero:
dd 0
///

healthreadAOB: //"JustCause2.exe"+1C5B57:
jmp newmem6
nop
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
healthreadAOB: //"JustCause2.exe"+1C5B57:
db 0F 2F 86 B0 01 00 00
//Alt: comiss xmm0,[esi+000001B0]
unregistersymbol(healthreadAOB)
unregistersymbol(pHero)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1298997C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>128F9608</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>128FA5D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>1295AC8C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(resourcesreadAOB,8B 44 81 08 5D C2 04 00 CC)
registersymbol(resourcesreadAOB)

label(pResources)
registersymbol(pResources)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
/*
eax 4, Chaos
eax 3, Money
eax 0, Weapon parts
eax 2, Vehicle parts
eax 1, Armor parts
*/
mov [pResources],ecx

originalcode11:
mov eax,[ecx+eax*4+08]
pop ebp

exit11:
jmp returnhere11

///
pResources:
dd 0
///

resourcesreadAOB: //"JustCause2.exe"+22E476:
jmp newmem11
returnhere11:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
resourcesreadAOB: //"JustCause2.exe"+22E476:
db 8B 44 81 08 5D
//Alt: mov eax,[ecx+eax*4+08]
//Alt: pop ebp
unregistersymbol(resourcesreadAOB)
unregistersymbol(pResources)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(wantedreadAOB,F3 0F 10 40 30 0F 2F 05 ** ** ** ** 53 56)
registersymbol(wantedreadAOB)

label(pWanted)
registersymbol(pWanted)

alloc(newmem17,2048)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pWanted],eax

originalcode17:
movss xmm0,[eax+30]

exit17:
jmp returnhere17

///
pWanted:
dd 0
///

wantedreadAOB: //"JustCause2.exe"+1DED95:
jmp newmem17
returnhere17:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
wantedreadAOB: //"JustCause2.exe"+1DED95:
db F3 0F 10 40 30
//Alt: movss xmm0,[eax+30]
unregistersymbol(wantedreadAOB)
unregistersymbol(pWanted)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0DD840CC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0DDDA33C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>0DE3DF14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>16FE8EB0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>16FE8EB4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>1716E730</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>1716F190</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>16FE8DC8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(drivingreadAOB,8B 07 8B 90 C4 00 00 00 8D 4D E4)
registersymbol(drivingreadAOB)

label(pDriving)
registersymbol(pDriving)

alloc(newmem24,2048)
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pDriving],edi

originalcode24:
mov eax,[edi]
mov edx,[eax+000000C4]

exit24:
jmp returnhere24

///
pDriving:
dd 0
///

drivingreadAOB: //"JustCause2.exe"+18D348:
jmp newmem24
nop
nop
nop
returnhere24:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem24)
drivingreadAOB: //"JustCause2.exe"+18D348:
db 8B 07 8B 90 C4 00 00 00
//Alt: mov eax,[edi]
//Alt: mov edx,[eax+000000C4]
unregistersymbol(drivingreadAOB)
unregistersymbol(pDriving)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Undead"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthsubAOB,F3 0F 11 86 B0 01 00 00 F3 0F 10 00)
registersymbol(healthsubAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [esi+000001B0],xmm0
cmp [pHero],esi
jne originalcode
cmp dword ptr [esi+000001B0],(float)20.0
jge originalcode
mov dword ptr [esi+000001B0],(float)20.0
movss xmm0,[esi+000001B0]

originalcode:
//movss [esi+000001B0],xmm0

exit:
jmp returnhere

healthsubAOB: //"JustCause2.exe"+395E6A:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthsubAOB: //"JustCause2.exe"+395E6A:
db F3 0F 11 86 B0 01 00 00
//Alt: movss [esi+000001B0],xmm0
unregistersymbol(healthsubAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Inf. Vehicle/Heli/Planes Health (Driving and/or Last Drived)"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(allhealthsubAOB,F3 0F 11 8E E8 00 00 00 76)
registersymbol(allhealthsubAOB)

label(bInfCarHealth)
registersymbol(bInfCarHealth)
label(bInfHeroHealth)
registersymbol(bInfHeroHealth)
label(bUndead)
registersymbol(bUndead)
label(tpAllHealth)

alloc(newmem32,2048)
label(returnhere32)
label(originalcode32)
label(exit32)
label(checkBICarHealth32)
label(checkBIHHealth32)
label(doLockHealth32)
label(doMinHealth32)

newmem32: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd

checkBICarHealth32:
cmp [pDriving],esi
jne checkBIHHealth32
cmp byte ptr [bInfCarHealth],01
je doLockHealth32
jmp originalcode32

checkBIHHealth32:
cmp [pHeroRH],esi
jne originalcode32
cmp byte ptr [bInfHeroHealth],01
je doLockHealth32
cmp byte ptr [bUndead],01
je doMinHealth32
jmp originalcode32

doLockHealth32:
movss [tpAllHealth],xmm1
push eax
mov eax,[tpAllHealth]
cmp [esi+000000E8],eax
pop eax
jle originalcode32
movss xmm1,[esi+000000E8]
jmp originalcode32

doMinHealth32:
movss [esi+000000E8],xmm1
cmp dword ptr [esi+000000E8],(float)1.0
jge originalcode32
mov dword ptr [esi+000000E8],(float)1.0
movss xmm1,[esi+000000E8]
jmp originalcode32

originalcode32:
popfd
movss [esi+000000E8],xmm1

exit32:
jmp returnhere32

///
bInfCarHealth:
db 0
bInfHeroHealth:
db 0
bUndead:
db 0
tpAllHealth:
dd 0
///

allhealthsubAOB: //"JustCause2.exe"+3E87C2:
jmp newmem32
nop
nop
nop
returnhere32:





[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem32)
allhealthsubAOB: //"JustCause2.exe"+3E87C2:
db F3 0F 11 8E E8 00 00 00
//Alt: movss [esi+000000E8],xmm1
unregistersymbol(allhealthsubAOB)
unregistersymbol(bInfCarHealth)
unregistersymbol(bInfHeroHealth)
unregistersymbol(bUndead)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>128E1B84</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>128E1B20</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>128E1B60</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>128E1B64</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(realhealthwriteAOB,F3 0F 11 86 E8 01 00 00 76 08 F3 0F 11 8E E8 01 00 00)
registersymbol(realhealthwriteAOB)

label(tpRHealth)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)
label(check2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
movss [tpRHealth],xmm0
push eax
mov eax,[tpRHealth]
cmp [esi+000001E8],eax
jge check2
movss xmm0,[esi+000001E8]

check2:
movss [tpRHealth],xmm1
mov eax,[tpRHealth]
cmp [esi+000001E8],eax
pop eax
jge originalcode2
movss xmm1,[esi+000001E8]

originalcode2:
popfd
movss [esi+000001E8],xmm0

exit2:
jmp returnhere2

///
tpRHealth:
dd 0
///

realhealthwriteAOB: //"JustCause2.exe"+34944F:
jmp newmem2
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
realhealthwriteAOB: //"JustCause2.exe"+34944F:
db F3 0F 11 86 E8 01 00 00
//Alt: movss [esi+000001E8],xmm0
unregistersymbol(realhealthwriteAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>128E1BB0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>128E1B80</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>128FA750</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"No description"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>128FA754</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"Auto Assemble script"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(realhealthreadAOB,0F 2F 81 E8 00 00 00 72 06 B8 01 00 00 00)
registersymbol(realhealthreadAOB)

label(pHeroRH)
registersymbol(pHeroRH)

alloc(newmem41,2048)
label(returnhere41)
label(originalcode41)
label(exit41)

newmem41: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHeroRH],ecx

originalcode41:
comiss xmm0,[ecx+000000E8]

exit41:
jmp returnhere41

///
pHeroRH:
dd 0
///

realhealthreadAOB: //"JustCause2.exe"+16BD03:
jmp newmem41
nop
nop
returnhere41:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem41)
realhealthreadAOB: //"JustCause2.exe"+16BD03:
db 0F 2F 81 E8 00 00 00
//Alt: comiss xmm0,[ecx+000000E8]
unregistersymbol(realhealthreadAOB)
unregistersymbol(pHeroRH)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>57</ID>
              <Description>"bInfCarHealth"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bInfCarHealth</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>58</ID>
              <Description>"bInfHeroHealth"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bInfHeroHealth</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>59</ID>
              <Description>"bUndead"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bUndead</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>mission timer write Code :movss [eax],xmm0</Description>
      <Address>0065EB5A</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>25EB5A</ModuleNameOffset>
      <Before>
        <Byte>45</Byte>
        <Byte>08</Byte>
        <Byte>8D</Byte>
        <Byte>04</Byte>
        <Byte>19</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
        <Byte>7C</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>all (car / human) health - Code :movss [esi+000000E8],xmm1</Description>
      <Address>007E87C2</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>3E87C2</ModuleNameOffset>
      <Before>
        <Byte>9E</Byte>
        <Byte>EC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>8E</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>76</Byte>
        <Byte>08</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>exit car Code :mov edx,[ebx]</Description>
      <Address>007AF0DD</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>3AF0DD</ModuleNameOffset>
      <Before>
        <Byte>7D</Byte>
        <Byte>E8</Byte>
        <Byte>8B</Byte>
        <Byte>75</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>13</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>92</Byte>
        <Byte>9C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>*driving car Code :mov eax,[edi]</Description>
      <Address>0058D348</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>18D348</ModuleNameOffset>
      <Before>
        <Byte>84</Byte>
        <Byte>6B</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>90</Byte>
        <Byte>C4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>driving car Code :mov eax,[ecx]</Description>
      <Address>0080A16A</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>40A16A</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>0F</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>C4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>driving car Code :mov eax,[ecx]</Description>
      <Address>00550EF8</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>150EF8</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>0E</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>C0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>driving car Code :mov edx,[ebx]</Description>
      <Address>006A0FF5</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>2A0FF5</ModuleNameOffset>
      <Before>
        <Byte>F8</Byte>
        <Byte>51</Byte>
        <Byte>52</Byte>
        <Byte>EB</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>13</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>82</Byte>
        <Byte>B4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>driving car Code :mov eax,[ecx]</Description>
      <Address>005C5D91</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>1C5D91</ModuleNameOffset>
      <Before>
        <Byte>4D</Byte>
        <Byte>EC</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>E4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>driving car Code :mov eax,[esi]</Description>
      <Address>0053DD44</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>13DD44</ModuleNameOffset>
      <Before>
        <Byte>D2</Byte>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>7F</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>06</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>90</Byte>
        <Byte>C4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>driving car Code :mov eax,[esi]</Description>
      <Address>00747950</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>347950</ModuleNameOffset>
      <Before>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>5B</Byte>
        <Byte>74</Byte>
        <Byte>68</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>06</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>90</Byte>
        <Byte>C4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>driving car Code :mov eax,[ecx]</Description>
      <Address>0057600F</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>17600F</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>0E</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>80</Byte>
        <Byte>C4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>driving car Code :mov edx,[ecx]</Description>
      <Address>0050653B</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>10653B</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>0B</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>11</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>92</Byte>
        <Byte>C4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>*exit car Code :mov eax,[edi]</Description>
      <Address>007470FB</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>3470FB</ModuleNameOffset>
      <Before>
        <Byte>53</Byte>
        <Byte>56</Byte>
        <Byte>57</Byte>
        <Byte>8B</Byte>
        <Byte>F9</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>90</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>exit car Code :mov edx,[esi]</Description>
      <Address>007E3C2A</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>3E3C2A</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>C6</Byte>
        <Byte>34</Byte>
        <Byte>F6</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>16</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>82</Byte>
        <Byte>B8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>exit car Code :mov edx,[esi]</Description>
      <Address>007E3C5B</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>3E3C5B</ModuleNameOffset>
      <Before>
        <Byte>D0</Byte>
        <Byte>84</Byte>
        <Byte>DB</Byte>
        <Byte>74</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>16</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>82</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>health read Code :movss xmm0,[esi+000001F0]</Description>
      <Address>005BF975</Address>
      <ModuleName>JustCause2.exe</ModuleName>
      <ModuleNameOffset>1BF975</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>EB</Byte>
        <Byte>75</Byte>
        <Byte>3B</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>F0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>86</Byte>
        <Byte>F4</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>ammoclipcheckzeroAOB</Name>
      <Address> 0083F873</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammopouchreadAOB</Name>
      <Address> 005E9776</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>armorreadAOB</Name>
      <Address> 005C5B57</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>resourcesreadAOB</Name>
      <Address> 0062E476</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>wantedreadAOB</Name>
      <Address> 005DED95</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>drivingreadAOB</Name>
      <Address> 0058D348</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>allhealthsubAOB</Name>
      <Address> 007E87C2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthreadAOB</Name>
      <Address> 0056BD03</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoClip</Name>
      <Address>03720169</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoPouch</Name>
      <Address>0372016D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHero</Name>
      <Address>03720171</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pResources</Name>
      <Address>03720175</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pWanted</Name>
      <Address>03720179</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pDriving</Name>
      <Address>0372017D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfCarHealth</Name>
      <Address>03720181</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfHeroHealth</Name>
      <Address>03720182</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bUndead</Name>
      <Address>03720183</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHeroRH</Name>
      <Address>03720184</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>oxygenunderwaterwriteAOB</Name>
      <Address> 005BF8BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoclipsubAOB</Name>
      <Address> 006EC80B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammopouchsubAOB</Name>
      <Address> 005051E0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>grenadesubAOB</Name>
      <Address> 006FD3EA</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>forum.cheatengine.org/viewtopic.php?t=568797#5500947</Comments>
</CheatTable>
