<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Unlimited HP"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2016-05-26
  Author : Leo

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT,FFX-2.exe,89 7E 28 85 FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //mov [esi+28],edi
  test edi,edi
  jmp return

INJECT:
  jmp code
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db 89 7E 28 85 FF

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FFX-2.exe"+201917

"FFX-2.exe"+2018FC: 48                             -  dec eax
"FFX-2.exe"+2018FD: 74 34                          -  je FFX-2.exe+201933
"FFX-2.exe"+2018FF: 83 E8 04                       -  sub eax,04
"FFX-2.exe"+201902: 74 13                          -  je FFX-2.exe+201917
"FFX-2.exe"+201904: 51                             -  push ecx
"FFX-2.exe"+201905: FF 76 04                       -  push [esi+04]
"FFX-2.exe"+201908: 68 08 CF B3 00                 -  push FFX-2.exe+83CF08
"FFX-2.exe"+20190D: E8 BE 94 E9 FF                 -  call FFX-2.exe+9ADD0
"FFX-2.exe"+201912: 83 C4 0C                       -  add esp,0C
"FFX-2.exe"+201915: EB 4C                          -  jmp FFX-2.exe+201963
// ---------- INJECTING HERE ----------
"FFX-2.exe"+201917: 89 7E 28                       -  mov [esi+28],edi
"FFX-2.exe"+20191A: 85 FF                          -  test edi,edi
// ---------- DONE INJECTING  ----------
"FFX-2.exe"+20191C: 79 09                          -  jns FFX-2.exe+201927
"FFX-2.exe"+20191E: C7 46 28 00 00 00 00           -  mov [esi+28],00000000
"FFX-2.exe"+201925: EB 3C                          -  jmp FFX-2.exe+201963
"FFX-2.exe"+201927: 8B 46 2C                       -  mov eax,[esi+2C]
"FFX-2.exe"+20192A: 3B F8                          -  cmp edi,eax
"FFX-2.exe"+20192C: 7E 35                          -  jle FFX-2.exe+201963
"FFX-2.exe"+20192E: 89 46 28                       -  mov [esi+28],eax
"FFX-2.exe"+201931: EB 30                          -  jmp FFX-2.exe+201963
"FFX-2.exe"+201933: 33 C0                          -  xor eax,eax
"FFX-2.exe"+201935: 85 FF                          -  test edi,edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Locks MP"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : FFX-2.exe
  Version: 
  Date   : 2016-05-26
  Author : Leo

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(Mana,FFX-2.exe,89 7E 1C 48 21 46 1C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //mov [esi+1C],edi
  dec eax
  and [esi+1C],eax
  jmp return

Mana:
  jmp code
  nop
  nop
return:
registersymbol(Mana)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Mana:
  db 89 7E 1C 48 21 46 1C

unregistersymbol(Mana)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FFX-2.exe"+201A7A

"FFX-2.exe"+201A62: 68 A8 CF B3 00        -  push FFX-2.exe+83CFA8
"FFX-2.exe"+201A67: E8 64 93 E9 FF        -  call FFX-2.exe+9ADD0
"FFX-2.exe"+201A6C: 83 C4 0C              -  add esp,0C
"FFX-2.exe"+201A6F: 5F                    -  pop edi
"FFX-2.exe"+201A70: 5E                    -  pop esi
"FFX-2.exe"+201A71: 5D                    -  pop ebp
"FFX-2.exe"+201A72: C3                    -  ret 
"FFX-2.exe"+201A73: 33 C0                 -  xor eax,eax
"FFX-2.exe"+201A75: 85 FF                 -  test edi,edi
"FFX-2.exe"+201A77: 0F 98 C0              -  sets al
// ---------- INJECTING HERE ----------
"FFX-2.exe"+201A7A: 89 7E 1C              -  mov [esi+1C],edi
"FFX-2.exe"+201A7D: 48                    -  dec eax
"FFX-2.exe"+201A7E: 21 46 1C              -  and [esi+1C],eax
// ---------- DONE INJECTING  ----------
"FFX-2.exe"+201A81: 8B 46 20              -  mov eax,[esi+20]
"FFX-2.exe"+201A84: 39 46 1C              -  cmp [esi+1C],eax
"FFX-2.exe"+201A87: 7E 03                 -  jle FFX-2.exe+201A8C
"FFX-2.exe"+201A89: 89 46 1C              -  mov [esi+1C],eax
"FFX-2.exe"+201A8C: 5F                    -  pop edi
"FFX-2.exe"+201A8D: 5E                    -  pop esi
"FFX-2.exe"+201A8E: 5D                    -  pop ebp
"FFX-2.exe"+201A8F: C3                    -  ret 
"FFX-2.exe"+201A90: 55                    -  push ebp
"FFX-2.exe"+201A91: 8B EC                 -  mov ebp,esp
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address> 00501917</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Mana</Name>
      <Address> 00501A7A</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
