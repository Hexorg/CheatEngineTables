<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>47</ID>
      <Description>"Weight scripts [Choose one]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Weight always 0"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(Weight,D9 5F 38 D9 47 38 D9 05 * * * * DF F1 DD D8 76 05)
alloc(newmem,$256)

label(code)
label(return)

newmem:

code:
  fstp dword ptr [edi+38]
  mov [edi+38],0
  fld dword ptr [edi+38]
  jmp return

Weight:
  jmp newmem
  nop
return:
registersymbol(Weight)

[DISABLE]

Weight:
  db D9 5F 38 D9 47 38

unregistersymbol(Weight)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 05502683

""+550266D: D9 EE              -  fldz
""+550266F: DF F1              -  fcomip st(0),st(1)
""+5502671: DD D8              -  fstp st(0)
""+5502673: 75 06              -  jne 0550267B
""+5502675: 7A 04              -  jp 0550267B
""+5502677: 72 02              -  jb 0550267B
""+5502679: EB 1F              -  jmp 0550269A
""+550267B: D9 47 38           -  fld dword ptr [edi+38]
""+550267E: D9 45 0C           -  fld dword ptr [ebp+0C]
""+5502681: DE C1              -  faddp
// ---------- INJECTING HERE ----------
""+5502683: D9 5F 38           -  fstp dword ptr [edi+38]
""+5502686: D9 47 38           -  fld dword ptr [edi+38]
// ---------- DONE INJECTING  ----------
""+5502689: D9 05 88 5B 45 46  -  fld dword ptr [46455B88]
""+550268F: DF F1              -  fcomip st(0),st(1)
""+5502691: DD D8              -  fstp st(0)
""+5502693: 76 05              -  jna 0550269A
""+5502695: D9 EE              -  fldz
""+5502697: D9 5F 38           -  fstp dword ptr [edi+38]
""+550269A: 8D 65 FC           -  lea esp,[ebp-04]
""+550269D: 5F                 -  pop edi
""+550269E: C9                 -  leave
""+550269F: C3                 -  ret
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"No weight penalty"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(weightp,DD 5D F8 83 EC 0C 50 E8 18)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  fstp st(0)
  sub esp,0C
  jmp return

weightp:
  jmp newmem
  nop
return:
registersymbol(weightp)

[DISABLE]

weightp:
  db DD 5D F8 83 EC 0C

unregistersymbol(weightp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 054CE89C

""+54CE881: B8 78 BD 59 03     -  mov eax,0359BD78
""+54CE886: 89 08              -  mov [eax],ecx
""+54CE888: 8B 05 78 BD 59 03  -  mov eax,[0359BD78]
""+54CE88E: C9                 -  leave 
""+54CE88F: C3                 -  ret 
""+54CE890: 55                 -  push ebp
""+54CE891: 8B EC              -  mov ebp,esp
""+54CE893: 83 EC 08           -  sub esp,08
""+54CE896: 8B 45 08           -  mov eax,[ebp+08]
""+54CE899: D9 40 38           -  fld dword ptr [eax+38]
// ---------- INJECTING HERE ----------
""+54CE89C: DD 5D F8           -  fstp qword ptr [ebp-08]
""+54CE89F: 83 EC 0C           -  sub esp,0C
// ---------- DONE INJECTING  ----------
""+54CE8A2: 50                 -  push eax
""+54CE8A3: E8 18 00 00 00     -  call 054CE8C0
""+54CE8A8: 83 C4 10           -  add esp,10
""+54CE8AB: DD 45 F8           -  fld qword ptr [ebp-08]
""+54CE8AE: D9 C9              -  fxch st(1)
""+54CE8B0: DE F9              -  fdivp st(1),st(0)
""+54CE8B2: C9                 -  leave 
""+54CE8B3: C3                 -  ret 
""+54CE8B4: 68 70 31 0A 0F     -  push 0F0A3170
""+54CE8B9: E9 6A 17 A1 FF     -  jmp 04EE0028
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>48</ID>
      <Description>"Player scripts"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Thirst"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(Water,D9 40 18 D9 45 0C)
alloc(newmem,$256)

label(code)
label(return)

newmem:

code:
  mov [eax+18],(float)700
  fld dword ptr [eax+18]
  fld dword ptr [ebp+0C]
  jmp return

Water:
  jmp newmem
  nop
return:
registersymbol(Water)

[DISABLE]

Water:
  db D9 40 18 D9 45 0C

unregistersymbol(Water)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 05BAF481

""+5BAF46C: D9 5D FC           -  fstp dword ptr [ebp-04]
""+5BAF46F: D9 45 FC           -  fld dword ptr [ebp-04]
""+5BAF472: EB 02              -  jmp 05BAF476
""+5BAF474: D9 EE              -  fldz 
""+5BAF476: C9                 -  leave 
""+5BAF477: C3                 -  ret 
""+5BAF478: 55                 -  push ebp
""+5BAF479: 8B EC              -  mov ebp,esp
""+5BAF47B: 83 EC 18           -  sub esp,18
""+5BAF47E: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
""+5BAF481: D9 40 18           -  fld dword ptr [eax+18]
""+5BAF484: D9 45 0C           -  fld dword ptr [ebp+0C]
// ---------- DONE INJECTING  ----------
""+5BAF487: DE C1              -  faddp 
""+5BAF489: DD 5D F8           -  fstp qword ptr [ebp-08]
""+5BAF48C: D9 EE              -  fldz 
""+5BAF48E: DD 5D F0           -  fstp qword ptr [ebp-10]
""+5BAF491: 83 EC 0C           -  sub esp,0C
""+5BAF494: 50                 -  push eax
""+5BAF495: E8 1E C6 FF FF     -  call 05BABAB8
""+5BAF49A: 83 C4 10           -  add esp,10
""+5BAF49D: DD 45 F8           -  fld qword ptr [ebp-08]
""+5BAF4A0: DD 45 F0           -  fld qword ptr [ebp-10]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"100% Health"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Drift_Into_Eternity.exe (paused)
  Version: 
  Date   : 2016-12-16
  Author : Nister

  This script does blah blah blah
}

[ENABLE]

aobscan(Health,D9 40 2C DD 5D F8) // should be unique
alloc(newmem,$256)

label(code)
label(return)

newmem:

code:
  fld dword ptr [eax+2C]
  mov [eax+2C],(float)700
  fstp qword ptr [ebp-08]
  jmp return

Health:
  jmp newmem
  nop
return:
registersymbol(Health)

[DISABLE]

Health:
  db D9 40 2C DD 5D F8

unregistersymbol(Health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 05DD0AE1

""+5DD0ACE: 5F                 -  pop edi
""+5DD0ACF: C9                 -  leave 
""+5DD0AD0: C3                 -  ret 
""+5DD0AD1: 00 00              -  add [eax],al
""+5DD0AD3: 00 00              -  add [eax],al
""+5DD0AD5: 00 00              -  add [eax],al
""+5DD0AD7: 00 55 8B           -  add [ebp-75],dl
""+5DD0ADA: EC                 -  in al,dx
""+5DD0ADB: 83 EC 08           -  sub esp,08
""+5DD0ADE: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
""+5DD0AE1: D9 40 2C           -  fld dword ptr [eax+2C]
""+5DD0AE4: DD 5D F8           -  fstp qword ptr [ebp-08]
// ---------- DONE INJECTING  ----------
""+5DD0AE7: E8 CC 29 F9 FF     -  call 05D634B8
""+5DD0AEC: DD 45 F8           -  fld qword ptr [ebp-08]
""+5DD0AEF: 8B 40 50           -  mov eax,[eax+50]
""+5DD0AF2: D9 40 28           -  fld dword ptr [eax+28]
""+5DD0AF5: DE F9              -  fdivp st(1),st(0)
""+5DD0AF7: D9 05 F0 DA 9F 47  -  fld dword ptr [479FDAF0]
""+5DD0AFD: DE C9              -  fmulp st(1),st(0)
""+5DD0AFF: C9                 -  leave 
""+5DD0B00: C3                 -  ret 
""+5DD0B01: 00 00              -  add [eax],al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"100% Stamina"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Drift_Into_Eternity.exe
  Version: 
  Date   : 2016-12-15
  Author : Nister

  This script does blah blah blah
}

[ENABLE]

aobscan(Stamina,D9 5F 24 8D 65 FC) // should be unique
alloc(newmem,$256)

label(code)
label(return)

newmem:

code:
  fstp dword ptr [edi+24]
  mov [edi+24],(float)700
  lea esp,[ebp-04]
  jmp return

Stamina:
  jmp newmem
  nop
return:
registersymbol(Stamina)

[DISABLE]

Stamina:
  db D9 5F 24 8D 65 FC

unregistersymbol(Stamina)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 05956768

""+595674A: 83 EC 04              -  sub esp,04
""+595674D: D9 CA                 -  fxch st(2)
""+595674F: D9 1C 24              -  fstp dword ptr [esp]
""+5956752: 83 EC 04              -  sub esp,04
""+5956755: D9 C9                 -  fxch st(1)
""+5956757: D9 1C 24              -  fstp dword ptr [esp]
""+595675A: 83 EC 04              -  sub esp,04
""+595675D: D9 1C 24              -  fstp dword ptr [esp]
""+5956760: E8 13 D1 F8 FF        -  call 058E3878
""+5956765: 83 C4 10              -  add esp,10
// ---------- INJECTING HERE ----------
""+5956768: D9 5F 24              -  fstp dword ptr [edi+24]
""+595676B: 8D 65 FC              -  lea esp,[ebp-04]
// ---------- DONE INJECTING  ----------
""+595676E: 5F                    -  pop edi
""+595676F: C9                    -  leave 
""+5956770: C3                    -  ret 
""+5956771: 00 00                 -  add [eax],al
""+5956773: 00 68 B8              -  add [eax-48],ch
""+5956776: 37                    -  aaa 
""+5956777: 45                    -  inc ebp
""+5956778: 0F E9 AA 98 97 FF 00  -  psubsw mm5,[edx+00FF9798]
""+595677F: 00 55 8B              -  add [ebp-75],dl
""+5956782: EC                    -  in al,dx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Hunger"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(Food,00 55 8B EC 83 EC 18 8B 45 08 D9 40 10 D9 45 0C)
alloc(newmem,$256)

label(code)
label(return)

newmem:

code:
  mov [eax+10],(float)700
  fld dword ptr [eax+10]
  fld dword ptr [ebp+0C]
  jmp return

Food+0A:
  jmp newmem
  nop
return:
registersymbol(Food)

[DISABLE]

Food+0A:
  db D9 40 10 D9 45 0C

unregistersymbol(Food)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 05F459F1

""+5F459DD: EB 00                 -  jmp 05F459DF
""+5F459DF: 8B 45 E8              -  mov eax,[ebp-18]
""+5F459E2: EB 00                 -  jmp 05F459E4
""+5F459E4: C9                    -  leave 
""+5F459E5: C3                    -  ret 
""+5F459E6: 00 00                 -  add [eax],al
""+5F459E8: 55                    -  push ebp
""+5F459E9: 8B EC                 -  mov ebp,esp
""+5F459EB: 83 EC 18              -  sub esp,18
""+5F459EE: 8B 45 08              -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
""+5F459F1: D9 40 10              -  fld dword ptr [eax+10]
""+5F459F4: D9 45 0C              -  fld dword ptr [ebp+0C]
// ---------- DONE INJECTING  ----------
""+5F459F7: DE C1                 -  faddp 
""+5F459F9: DD 5D F8              -  fstp qword ptr [ebp-08]
""+5F459FC: D9 EE                 -  fldz 
""+5F459FE: DD 5D F0              -  fstp qword ptr [ebp-10]
""+5F45A01: 83 EC 0C              -  sub esp,0C
""+5F45A04: 50                    -  push eax
""+5F45A05: E8 B6 5C FE FF        -  call 05F2B6C0
""+5F45A0A: 83 C4 10              -  add esp,10
""+5F45A0D: DD 45 F8              -  fld qword ptr [ebp-08]
""+5F45A10: DD 45 F0              -  fld qword ptr [ebp-10]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Hunger [use this if other one doesn't work]"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(Hunger,D9 58 10 C9 C3 00 00 00)
alloc(newmem,$100)

label(code)
label(return)

newmem:

code:
  fstp dword ptr [eax+10]
  mov [eax+10],(float)700
  leave 
  ret 
  jmp return

Hunger:
  jmp newmem
return:
registersymbol(Hunger)

[DISABLE]

Hunger:
  db D9 58 10 C9 C3

unregistersymbol(Hunger)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0543E5B7

""+543E599: D9 CA              -  fxch st(2)
""+543E59B: D9 1C 24           -  fstp dword ptr [esp]
""+543E59E: 83 EC 04           -  sub esp,04
""+543E5A1: D9 C9              -  fxch st(1)
""+543E5A3: D9 1C 24           -  fstp dword ptr [esp]
""+543E5A6: 83 EC 04           -  sub esp,04
""+543E5A9: D9 1C 24           -  fstp dword ptr [esp]
""+543E5AC: E8 C7 52 F1 FF     -  call 05353878
""+543E5B1: 83 C4 10           -  add esp,10
""+543E5B4: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
""+543E5B7: D9 58 10           -  fstp dword ptr [eax+10]
""+543E5BA: C9                 -  leave 
""+543E5BB: C3                 -  ret 
// ---------- DONE INJECTING  ----------
""+543E5BC: 00 00              -  add [eax],al
""+543E5BE: 00 00              -  add [eax],al
""+543E5C0: 00 00              -  add [eax],al
""+543E5C2: 00 00              -  add [eax],al
""+543E5C4: 00 00              -  add [eax],al
""+543E5C6: 00 00              -  add [eax],al
""+543E5C8: 00 00              -  add [eax],al
""+543E5CA: 00 00              -  add [eax],al
""+543E5CC: 00 00              -  add [eax],al
""+543E5CE: 00 00              -  add [eax],al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Mood"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(Mood,D9 40 20 D9 45 0C)
alloc(newmem,$256)

label(code)
label(return)

newmem:

code:
  mov [eax+20],(float)700
  fld dword ptr [eax+20]
  fld dword ptr [ebp+0C]
  jmp return

Mood:
  jmp newmem
  nop
return:
registersymbol(Mood)

[DISABLE]

Mood:
  db D9 40 20 D9 45 0C

unregistersymbol(Mood)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 05F2F161

""+5F2F14C: 8B 45 08           -  mov eax,[ebp+08]
""+5F2F14F: D9 58 18           -  fstp dword ptr [eax+18]
""+5F2F152: C9                 -  leave 
""+5F2F153: C3                 -  ret 
""+5F2F154: 00 00              -  add [eax],al
""+5F2F156: 00 00              -  add [eax],al
""+5F2F158: 55                 -  push ebp
""+5F2F159: 8B EC              -  mov ebp,esp
""+5F2F15B: 83 EC 18           -  sub esp,18
""+5F2F15E: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
""+5F2F161: D9 40 20           -  fld dword ptr [eax+20]
""+5F2F164: D9 45 0C           -  fld dword ptr [ebp+0C]
// ---------- DONE INJECTING  ----------
""+5F2F167: DE C1              -  faddp 
""+5F2F169: DD 5D F0           -  fstp qword ptr [ebp-10]
""+5F2F16C: D9 EE              -  fldz 
""+5F2F16E: DD 5D E8           -  fstp qword ptr [ebp-18]
""+5F2F171: 83 EC 0C           -  sub esp,0C
""+5F2F174: 50                 -  push eax
""+5F2F175: E8 46 C6 FF FF     -  call 05F2B7C0
""+5F2F17A: 83 C4 10           -  add esp,10
""+5F2F17D: DD 45 F0           -  fld qword ptr [ebp-10]
""+5F2F180: DD 45 E8           -  fld qword ptr [ebp-18]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"100% Air"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(Air,D9 40 28 D9 45 0C)
alloc(newmem,$256)

label(code)
label(return)

newmem:

code:
  mov [eax+28],(float)1
  fld dword ptr [eax+28]
  fld dword ptr [ebp+0C]
  jmp return

Air:
  jmp newmem
  nop
return:
registersymbol(Air)

[DISABLE]

Air:
  db D9 40 28 D9 45 0C

unregistersymbol(Air)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 05F2F1F1

""+5F2F1DC: D9 5D FC           -  fstp dword ptr [ebp-04]
""+5F2F1DF: D9 45 FC           -  fld dword ptr [ebp-04]
""+5F2F1E2: EB 02              -  jmp 05F2F1E6
""+5F2F1E4: D9 EE              -  fldz 
""+5F2F1E6: C9                 -  leave 
""+5F2F1E7: C3                 -  ret 
""+5F2F1E8: 55                 -  push ebp
""+5F2F1E9: 8B EC              -  mov ebp,esp
""+5F2F1EB: 83 EC 18           -  sub esp,18
""+5F2F1EE: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
""+5F2F1F1: D9 40 28           -  fld dword ptr [eax+28]
""+5F2F1F4: D9 45 0C           -  fld dword ptr [ebp+0C]
// ---------- DONE INJECTING  ----------
""+5F2F1F7: DE C1              -  faddp 
""+5F2F1F9: DD 5D F0           -  fstp qword ptr [ebp-10]
""+5F2F1FC: D9 EE              -  fldz 
""+5F2F1FE: DD 5D E8           -  fstp qword ptr [ebp-18]
""+5F2F201: 83 EC 0C           -  sub esp,0C
""+5F2F204: 50                 -  push eax
""+5F2F205: E8 2E C6 FF FF     -  call 05F2B838
""+5F2F20A: 83 C4 10           -  add esp,10
""+5F2F20D: DD 45 F0           -  fld qword ptr [ebp-10]
""+5F2F210: DD 45 E8           -  fld qword ptr [ebp-18]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"0% Poison"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(Poison,D9 40 2C D9 40 30)
alloc(newmem,$256)

label(code)
label(return)

newmem:

code:
  mov [eax+2C],(float)0
  fld dword ptr [eax+2C]
  fld dword ptr [eax+30]
  jmp return

Poison:
  jmp newmem
  nop
return:
registersymbol(Poison)

[DISABLE]

Poison:
  db D9 40 2C D9 40 30

unregistersymbol(Poison)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 05F2F669

""+5F2F650: C3                 -  ret 
""+5F2F651: 00 00              -  add [eax],al
""+5F2F653: 00 68 90           -  add [eax-70],ch
""+5F2F656: 30 B7 0F E9 CA 09  -  xor [edi+09CAE90F],dh
""+5F2F65C: 9B                 -  wait 
""+5F2F65D: FF 00              -  inc [eax]
""+5F2F65F: 00 55 8B           -  add [ebp-75],dl
""+5F2F662: EC                 -  in al,dx
""+5F2F663: 83 EC 08           -  sub esp,08
""+5F2F666: 8B 45 08           -  mov eax,[ebp+08]
// ---------- INJECTING HERE ----------
""+5F2F669: D9 40 2C           -  fld dword ptr [eax+2C]
""+5F2F66C: D9 40 30           -  fld dword ptr [eax+30]
// ---------- DONE INJECTING  ----------
""+5F2F66F: DE F9              -  fdivp st(1),st(0)
""+5F2F671: D9 05 00 96 ED 0F  -  fld dword ptr [0FED9600]
""+5F2F677: DE C9              -  fmulp st(1),st(0)
""+5F2F679: C9                 -  leave 
""+5F2F67A: C3                 -  ret 
""+5F2F67B: 00 00              -  add [eax],al
""+5F2F67D: 00 00              -  add [eax],al
""+5F2F67F: 00 55 8B           -  add [ebp-75],dl
""+5F2F682: EC                 -  in al,dx
""+5F2F683: 57                 -  push edi
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Remove nearby fire[need time to enable]"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(nFire,D9 80 A4 00 00 00 D9 5D F8 D9 45 F8 D9 05)
alloc(newmem,$256)

label(code)
label(return)

newmem:

code:
  fld dword ptr [eax+000000A4]
  mov [eax+000000A4],(float)0
  jmp return

nFire:
  jmp newmem
  nop
return:
registersymbol(nFire)

[DISABLE]

nFire:
  db D9 80 A4 00 00 00

unregistersymbol(nFire)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 6EAC8F21

""+6EAC8F06: 39 00              -  cmp [eax],eax
""+6EAC8F08: E8 83 00 00 00     -  call 6EAC8F90
""+6EAC8F0D: 83 C4 10           -  add esp,10
""+6EAC8F10: DD 45 E0           -  fld qword ptr [ebp-20]
""+6EAC8F13: D9 C9              -  fxch st(1)
""+6EAC8F15: DE C9              -  fmulp st(1),st(0)
""+6EAC8F17: DD 5D E8           -  fstp qword ptr [ebp-18]
""+6EAC8F1A: 8B 47 10           -  mov eax,[edi+10]
""+6EAC8F1D: 8B C8              -  mov ecx,eax
""+6EAC8F1F: 39 09              -  cmp [ecx],ecx
// ---------- INJECTING HERE ----------
""+6EAC8F21: D9 80 A4 00 00 00  -  fld dword ptr [eax+000000A4]
// ---------- DONE INJECTING  ----------
""+6EAC8F27: D9 5D F8           -  fstp dword ptr [ebp-08]
""+6EAC8F2A: D9 45 F8           -  fld dword ptr [ebp-08]
""+6EAC8F2D: D9 05 D0 7A 75 4D  -  fld dword ptr [4D757AD0]
""+6EAC8F33: DE C9              -  fmulp st(1),st(0)
""+6EAC8F35: D9 05 D8 7A 75 4D  -  fld dword ptr [4D757AD8]
""+6EAC8F3B: D9 E8              -  fld1 
""+6EAC8F3D: 83 EC 04           -  sub esp,04
""+6EAC8F40: 83 EC 04           -  sub esp,04
""+6EAC8F43: D9 1C 24           -  fstp dword ptr [esp]
""+6EAC8F46: 83 EC 04           -  sub esp,04
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Clear toxin from air"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(cToxin,02 00 00 83 C4 10 DD 85 60 FF FF FF D9 87 A0 00 00 00)
alloc(newmem,$256)

label(code)
label(return)

newmem:

code:
  mov [edi+000000A0],(float)0
  fld dword ptr [edi+000000A0]
  jmp return

cToxin+0C:
  jmp newmem
  nop
return:
registersymbol(cToxin)

[DISABLE]

cToxin+0C:
  db D9 87 A0 00 00 00

unregistersymbol(cToxin)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 05734BB0

""+5734B90: DE C9                 -  fmulp st(1),st(0)
""+5734B92: DD 9D 60 FF FF FF     -  fstp qword ptr [ebp-000000A0]
""+5734B98: 8B 47 44              -  mov eax,[edi+44]
""+5734B9B: 83 EC 08              -  sub esp,08
""+5734B9E: 56                    -  push esi
""+5734B9F: 50                    -  push eax
""+5734BA0: 39 00                 -  cmp [eax],eax
""+5734BA2: E8 B1 02 00 00        -  call 05734E58
""+5734BA7: 83 C4 10              -  add esp,10
""+5734BAA: DD 85 60 FF FF FF     -  fld qword ptr [ebp-000000A0]
// ---------- INJECTING HERE ----------
""+5734BB0: D9 87 A0 00 00 00     -  fld dword ptr [edi+000000A0]
// ---------- DONE INJECTING  ----------
""+5734BB6: 83 EC 04              -  sub esp,04
""+5734BB9: 83 EC 04              -  sub esp,04
""+5734BBC: D9 1C 24              -  fstp dword ptr [esp]
""+5734BBF: 83 EC 04              -  sub esp,04
""+5734BC2: D9 C9                 -  fxch st(1)
""+5734BC4: D9 1C 24              -  fstp dword ptr [esp]
""+5734BC7: 83 EC 04              -  sub esp,04
""+5734BCA: D9 1C 24              -  fstp dword ptr [esp]
""+5734BCD: E8 E6 C7 F6 FF        -  call 056A13B8
""+5734BD2: 83 C4 10              -  add esp,10
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>54</ID>
      <Description>"Freeze Time"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(Time,8B 48 08 41 89 48 08 B8)
alloc(newmem,$100)

label(code)
label(return)

newmem:

code:
  mov ecx,[eax+08]
  nop
  mov [eax+08],ecx
  jmp return

Time:
  jmp newmem
  nop
  nop
return:
registersymbol(Time)

[DISABLE]

Time:
  db 8B 48 08 41 89 48 08

unregistersymbol(Time)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0576017E

""+576015C: DD 45 E8              -  fld qword ptr [ebp-18]
""+576015F: DD 45 E0              -  fld qword ptr [ebp-20]
""+5760162: D9 80 10 02 00 00     -  fld dword ptr [eax+00000210]
""+5760168: DE C9                 -  fmulp st(1),st(0)
""+576016A: DE C1                 -  faddp 
""+576016C: B8 3C EF 80 03        -  mov eax,0380EF3C
""+5760171: D9 18                 -  fstp dword ptr [eax]
""+5760173: EB 22                 -  jmp 05760197
""+5760175: 8D 6D 00              -  lea ebp,[ebp+00]
""+5760178: 8B 05 34 EF 80 03     -  mov eax,[0380EF34]
// ---------- INJECTING HERE ----------
""+576017E: 8B 48 08              -  mov ecx,[eax+08]
""+5760181: 41                    -  inc ecx
""+5760182: 89 48 08              -  mov [eax+08],ecx
// ---------- DONE INJECTING  ----------
""+5760185: B8 3C EF 90 90        -  mov eax,9090EF3C
""+576018A: D9 00                 -  fld dword ptr [eax]
""+576018C: D9 E8                 -  fld1 
""+576018E: DE E9                 -  fsubp st(1),st(0)
""+5760190: B8 3C EF 80 03        -  mov eax,0380EF3C
""+5760195: D9 18                 -  fstp dword ptr [eax]
""+5760197: B8 3C EF 80 03        -  mov eax,0380EF3C
""+576019C: D9 00                 -  fld dword ptr [eax]
""+576019E: D9 E8                 -  fld1 
""+57601A0: DF F1                 -  fcomip st(0),st(1)
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>59</ID>
      <Description>"Teleport cheat"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(Teleport,Drift_Into_Eternity.exe,F0 F2 0F 10 40 08)
alloc(newmem,$1000)
alloc(coord,$2000)

label(code)
label(return)
label(xp)
label(yp)
label(zp)
label(xp2)
label(yp2)
label(zp2)
label(xp3)
label(yp3)
label(zp3)
label(xp4)
label(yp4)
label(zp4)
label(xp5)
label(yp5)
label(zp5)
label(xp6)
label(yp6)
label(zp6)
label(xp7)
label(yp7)
label(zp7)
label(xp8)
label(yp8)
label(zp8)
label(xp9)
label(yp9)
label(zp9)
label(xp10)
label(yp10)
label(zp10)
label(xp11)
label(yp11)
label(zp11)
label(xp12)
label(yp12)
label(zp12)
label(asave)
label(aload)
label(asave2)
label(aload2)
label(asave3)
label(aload3)
label(asave4)
label(aload4)
label(asave5)
label(aload5)
label(asave6)
label(aload6)
label(asave7)
label(aload7)
label(asave8)
label(aload8)
label(asave9)
label(aload9)
label(asave10)
label(aload10)
label(asave11)
label(aload11)
label(asave12)
label(aload12)
label(save)
label(load)
label(save2)
label(save3)
label(save4)
label(save5)
label(save6)
label(save7)
label(save8)
label(save9)
label(save10)
label(save11)
label(save12)
registersymbol(asave)
registersymbol(aload)
registersymbol(asave2)
registersymbol(aload2)
registersymbol(asave3)
registersymbol(aload3)
registersymbol(asave4)
registersymbol(aload4)
registersymbol(asave5)
registersymbol(aload5)
registersymbol(asave6)
registersymbol(aload6)
registersymbol(asave7)
registersymbol(aload7)
registersymbol(asave8)
registersymbol(aload8)
registersymbol(asave9)
registersymbol(aload9)
registersymbol(asave10)
registersymbol(aload10)
registersymbol(asave11)
registersymbol(aload11)
registersymbol(asave12)
registersymbol(aload12)


coord:
xp:
dd 0
yp:
dd 0
zp:
dd 0
xp2:
dd 0
yp2:
dd 0
zp2:
dd 0
xp3:
dd 0
yp3:
dd 0
zp3:
dd 0
xp4:
dd 0
yp4:
dd 0
zp4:
dd 0
xp5:
dd 0
yp5:
dd 0
zp5:
dd 0
xp6:
dd 0
yp6:
dd 0
zp6:
dd 0
xp7:
dd 0
yp7:
dd 0
zp7:
dd 0
xp8:
dd 0
yp8:
dd 0
zp8:
dd 0
xp9:
dd 0
yp9:
dd 0
zp9:
dd 0
xp10:
dd 0
yp10:
dd 0
zp10:
dd 0
xp11:
dd 0
yp11:
dd 0
zp11:
dd 0
xp12:
dd 0
yp12:
dd 0
zp12:
dd 0


asave:
dd 0
aload:
dd 0
asave2:
dd 0
aload2:
dd 0
asave3:
dd 0
aload3:
dd 0
asave4:
dd 0
aload4:
dd 0
asave5:
dd 0
aload5:
dd 0
asave6:
dd 0
aload6:
dd 0
asave7:
dd 0
aload7:
dd 0
asave8:
dd 0
aload8:
dd 0
asave9:
dd 0
aload9:
dd 0
asave10:
dd 0
aload10:
dd 0
asave11:
dd 0
aload11:
dd 0
asave12:
dd 0
aload12:
dd 0

newmem:
cmp [asave],1
je save
cmp [aload],1
je load
cmp [asave2],1
je save2
cmp [aload2],1
je load2
cmp [asave3],1
je save3
cmp [aload3],1
je load3
cmp [asave4],1
je save4
cmp [aload4],1
je load4
cmp [asave5],1
je save5
cmp [aload5],1
je load5
cmp [asave6],1
je save6
cmp [aload6],1
je load6
cmp [asave7],1
je save7
cmp [aload7],1
je load7
cmp [asave8],1
je save8
cmp [aload8],1
je load8
cmp [asave9],1
je save9
cmp [aload9],1
je load9
cmp [asave10],1
je save10
cmp [aload10],1
je load10
cmp [asave11],1
je save11
cmp [aload11],1
je load11
cmp [asave12],1
je save12
cmp [aload12],1
je load12
jmp code

save:
mov [asave],0
push ebx
mov ebx,[eax+4]
mov [xp],ebx
mov ebx,[eax+14]
mov [yp],ebx
mov ebx,[eax+0C]
mov [zp],ebx
pop ebx
jmp code

save2:
mov [asave2],0
push ebx
mov ebx,[eax+4]
mov [xp2],ebx
mov ebx,[eax+14]
mov [yp2],ebx
mov ebx,[eax+0C]
mov [zp2],ebx
pop ebx
jmp code

save3:
mov [asave3],0
push ebx
mov ebx,[eax+4]
mov [xp3],ebx
mov ebx,[eax+14]
mov [yp3],ebx
mov ebx,[eax+0C]
mov [zp3],ebx
pop ebx
jmp code

save4:
mov [asave4],0
push ebx
mov ebx,[eax+4]
mov [xp4],ebx
mov ebx,[eax+14]
mov [yp4],ebx
mov ebx,[eax+0C]
mov [zp4],ebx
pop ebx
jmp code

save5:
mov [asave5],0
push ebx
mov ebx,[eax+4]
mov [xp5],ebx
mov ebx,[eax+14]
mov [yp5],ebx
mov ebx,[eax+0C]
mov [zp5],ebx
pop ebx
jmp code

save6:
mov [asave6],0
push ebx
mov ebx,[eax+4]
mov [xp6],ebx
mov ebx,[eax+14]
mov [yp6],ebx
mov ebx,[eax+0C]
mov [zp6],ebx
pop ebx
jmp code

save7:
mov [asave7],0
push ebx
mov ebx,[eax+4]
mov [xp7],ebx
mov ebx,[eax+14]
mov [yp7],ebx
mov ebx,[eax+0C]
mov [zp7],ebx
pop ebx
jmp code

save8:
mov [asave8],0
push ebx
mov ebx,[eax+4]
mov [xp8],ebx
mov ebx,[eax+14]
mov [yp8],ebx
mov ebx,[eax+0C]
mov [zp8],ebx
pop ebx
jmp code

save9:
mov [asave9],0
push ebx
mov ebx,[eax+4]
mov [xp9],ebx
mov ebx,[eax+14]
mov [yp9],ebx
mov ebx,[eax+0C]
mov [zp9],ebx
pop ebx
jmp code

save10:
mov [asave10],0
push ebx
mov ebx,[eax+4]
mov [xp10],ebx
mov ebx,[eax+14]
mov [yp10],ebx
mov ebx,[eax+0C]
mov [zp10],ebx
pop ebx
jmp code

save11:
mov [asave11],0
push ebx
mov ebx,[eax+4]
mov [xp11],ebx
mov ebx,[eax+14]
mov [yp11],ebx
mov ebx,[eax+0C]
mov [zp11],ebx
pop ebx
jmp code

save12:
mov [asave12],0
push ebx
mov ebx,[eax+4]
mov [xp12],ebx
mov ebx,[eax+14]
mov [yp12],ebx
mov ebx,[eax+0C]
mov [zp12],ebx
pop ebx
jmp code



load:
mov [aload],0
push ebx
mov ebx,[xp]
mov [eax+4],ebx
mov ebx,[yp]
mov [eax+14],ebx
mov ebx,[zp]
mov [eax+0C],ebx
pop ebx
jmp code

load2:
mov [aload2],0
push ebx
mov ebx,[xp2]
mov [eax+4],ebx
mov ebx,[yp2]
mov [eax+14],ebx
mov ebx,[zp2]
mov [eax+0C],ebx
pop ebx
jmp code

load3:
mov [aload3],0
push ebx
mov ebx,[xp3]
mov [eax+4],ebx
mov ebx,[yp3]
mov [eax+14],ebx
mov ebx,[zp3]
mov [eax+0C],ebx
pop ebx
jmp code

load4:
mov [aload4],0
push ebx
mov ebx,[xp4]
mov [eax+4],ebx
mov ebx,[yp4]
mov [eax+14],ebx
mov ebx,[zp4]
mov [eax+0C],ebx
pop ebx
jmp code

load5:
mov [aload5],0
push ebx
mov ebx,[xp5]
mov [eax+4],ebx
mov ebx,[yp5]
mov [eax+14],ebx
mov ebx,[zp5]
mov [eax+0C],ebx
pop ebx
jmp code

load6:
mov [aload6],0
push ebx
mov ebx,[xp6]
mov [eax+4],ebx
mov ebx,[yp6]
mov [eax+14],ebx
mov ebx,[zp6]
mov [eax+0C],ebx
pop ebx
jmp code

load7:
mov [aload7],0
push ebx
mov ebx,[xp7]
mov [eax+4],ebx
mov ebx,[yp7]
mov [eax+14],ebx
mov ebx,[zp7]
mov [eax+0C],ebx
pop ebx
jmp code

load8:
mov [aload8],0
push ebx
mov ebx,[xp8]
mov [eax+4],ebx
mov ebx,[yp8]
mov [eax+14],ebx
mov ebx,[zp8]
mov [eax+0C],ebx
pop ebx
jmp code

load9:
mov [aload9],0
push ebx
mov ebx,[xp9]
mov [eax+4],ebx
mov ebx,[yp9]
mov [eax+14],ebx
mov ebx,[zp9]
mov [eax+0C],ebx
pop ebx
jmp code

load10:
mov [aload10],0
push ebx
mov ebx,[xp10]
mov [eax+4],ebx
mov ebx,[yp10]
mov [eax+14],ebx
mov ebx,[zp10]
mov [eax+0C],ebx
pop ebx
jmp code

load11:
mov [aload11],0
push ebx
mov ebx,[xp11]
mov [eax+4],ebx
mov ebx,[yp11]
mov [eax+14],ebx
mov ebx,[zp11]
mov [eax+0C],ebx
pop ebx
jmp code

load12:
mov [aload12],0
push ebx
mov ebx,[xp12]
mov [eax+4],ebx
mov ebx,[yp12]
mov [eax+14],ebx
mov ebx,[zp12]
mov [eax+0C],ebx
pop ebx
jmp code


code:
  movsd xmm0,[eax+08]
  jmp return

Teleport+01:
  jmp newmem
return:
registersymbol(Teleport)

[DISABLE]

Teleport+01:
  db F2 0F 10 40 08

unregistersymbol(Teleport)
unregistersymbol(asave)
unregistersymbol(aload)
unregistersymbol(asave1)
unregistersymbol(aload1)
unregistersymbol(asave2)
unregistersymbol(aload2)
unregistersymbol(asave3)
unregistersymbol(aload3)
unregistersymbol(asave4)
unregistersymbol(aload4)
unregistersymbol(asave5)
unregistersymbol(aload5)
unregistersymbol(asave6)
unregistersymbol(aload6)
unregistersymbol(asave7)
unregistersymbol(aload7)
unregistersymbol(asave8)
unregistersymbol(aload8)
unregistersymbol(asave9)
unregistersymbol(aload9)
unregistersymbol(asave10)
unregistersymbol(aload10)
unregistersymbol(asave11)
unregistersymbol(aload11)
unregistersymbol(asave12)
unregistersymbol(aload12)
dealloc(newmem)
dealloc(coord)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>72</ID>
          <Description>"Save slot 1 (F1)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>112</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 1</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Save slot 2 (F2)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave2</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>113</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 2</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"Save slot 3 (F3)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave3</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>114</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 3</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"Save slot 4 (F4)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave4</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>115</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 4</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"Save slot 5 (F5)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave5</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>116</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 5</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"Save slot 6 (F6)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave6</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>117</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 6</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Save slot 7 (F7)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave7</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>118</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 7</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"Save slot 8 (F8)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave8</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>119</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 8</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>75</ID>
          <Description>"Save slot 9 (F9)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave9</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>120</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 9</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"Save slot 10 (F10)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave10</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>121</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 10</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"Save slot 11 (F11)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave11</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 11</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"Save slot 12 (F12)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>asave12</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">Saved 12</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Load slot 1 (1)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>49</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"Load slot 2 (2)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aLoad2</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>50</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"Load slot 3 (3)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload3</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>51</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"Load slot 4 (4)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload4</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>52</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"Load slot 5 (5)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload5</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>53</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"Load slot 6 (6)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload6</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>54</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"Load slot 7 (7)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload7</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>55</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"Load slot 8 (8)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload8</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>56</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>81</ID>
          <Description>"Load slot 9 (9)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload9</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>57</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>82</ID>
          <Description>"Load slot 10 (0)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload10</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>48</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>83</ID>
          <Description>"Load slot 11 (-)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload11</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>189</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>84</ID>
          <Description>"Load slot 12 (=)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>aload12</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>187</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>osave</Name>
      <Address>06F0010C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>oload</Name>
      <Address>06F00110</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Time</Name>
      <Address> 055CD886</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Water</Name>
      <Address> 055D4B41</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Stamina</Name>
      <Address> 055771D8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Mood</Name>
      <Address> 055D4B99</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Food</Name>
      <Address> 055E1AAF</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
