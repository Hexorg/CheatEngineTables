<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>7</ID>
      <Description>"Unlimit Containimation"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : znt.exe
  Version: 
  Date   : 2016-07-20
  Author : Schnitzelmaker

  This script does blah blah blah
}

[ENABLE]

aobscan(ItemUsage,48 83 EC 08 6A 00 50 E8 ?? ?? ?? ?? 83 c4 10 89) // should be unique

ItemUsage:
  nop
return:
registersymbol(ItemUsage)

[DISABLE]

ItemUsage:
  db 48 83 EC 08 6A 00

unregistersymbol(ItemUsage)

{
// ORIGINAL CODE - INJECTION POINT: 0709879C

0709877F: E8 BC 00 00 00     -  call MutationSelector:Consume
07098784: 83 C4 10           -  add esp,10
07098787: 8B 43 38           -  mov eax,[ebx+38]
0709878A: 8B 4F 30           -  mov ecx,[edi+30]
0709878D: 83 EC 08           -  sub esp,08
07098790: 51                 -  push ecx
07098791: 50                 -  push eax
07098792: 39 00              -  cmp [eax],eax
07098794: E8 BF 9C FB FF     -  call System.Collections.Generic:Dictionary`2:get_Item
07098799: 83 C4 10           -  add esp,10
// ---------- INJECTING HERE ----------
0709879C: 48                 -  dec eax
0709879D: 83 EC 08           -  sub esp,08
070987A0: 6A 00              -  push 00
// ---------- DONE INJECTING  ----------
070987A2: 50                 -  push eax
070987A3: E8 70 50 75 FF     -  call UnityEngine:Mathf:Max
070987A8: 83 C4 10           -  add esp,10
070987AB: 89 45 EC           -  mov [ebp-14],eax
070987AE: 8B 43 38           -  mov eax,[ebx+38]
070987B1: 8B 4F 30           -  mov ecx,[edi+30]
070987B4: 83 EC 04           -  sub esp,04
070987B7: FF 75 EC           -  push [ebp-14]
070987BA: 51                 -  push ecx
070987BB: 50                 -  push eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Max DNA"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : znt.exe
  Version: 
  Date   : 2016-07-20
  Author : Schnitzelmaker

  This script does blah blah blah
}

[ENABLE]

aobscan(CanUse,8B 4B 50 3B C1) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
//Dna = max DNA
  push ecx
  mov ecx,[ebx+48]
  mov [ebx+50],ecx
  pop ecx

code:
  mov ecx,[ebx+50]
  cmp eax,ecx
  jmp return

CanUse:
  jmp newmem
return:
registersymbol(CanUse)

[DISABLE]

CanUse:
  db 8B 4B 50 3B C1

unregistersymbol(CanUse)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 07052371

07052357: 83 C4 10              -  add esp,10
0705235A: 85 C0                 -  test eax,eax
0705235C: 74 2B                 -  je MutationSelector:CanUse+91
0705235E: 8B 47 30              -  mov eax,[edi+30]
07052361: 83 EC 04              -  sub esp,04
07052364: 50                    -  push eax
07052365: FF 75 0C              -  push [ebp+0C]
07052368: 53                    -  push ebx
07052369: E8 9A B7 FF FF        -  call MutationSelector:GetMutationCost
0705236E: 83 C4 10              -  add esp,10
// ---------- INJECTING HERE ----------
07052371: 8B 4B 50              -  mov ecx,[ebx+50]
07052374: 3B C1                 -  cmp eax,ecx
// ---------- DONE INJECTING  ----------
07052376: 0F 9F C0              -  setg al
07052379: 0F B6 C0              -  movzx eax,al
0705237C: 85 C0                 -  test eax,eax
0705237E: 0F 94 C0              -  sete al
07052381: 0F B6 C0              -  movzx eax,al
07052384: 89 45 F4              -  mov [ebp-0C],eax
07052387: EB 07                 -  jmp MutationSelector:CanUse+98
07052389: C7 45 F4 00 00 00 00  -  mov [ebp-0C],00000000
07052390: 8B 45 F4              -  mov eax,[ebp-0C]
07052393: E9 5D 00 00 00        -  jmp MutationSelector:CanUse+fd
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"Godmode"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : znt.exe
  Version: 
  Date   : 2016-07-21
  Author : Schnitzelmaker

  This script does blah blah blah
}

[ENABLE]

aobscan(ReceiveDamage,0F B6 43 50 85 C0 74 28) // should be unique
alloc(newmem,$1000)

label(code)
label(ignore)
label(return)
{
public enum DamageType
  None,
  Fall,
  Bite,
  Gun,
  Rifle,
  Shotgun,
  Melee,
  Sword,
  Canon,
  Explosion,
  Spikes,
  Fire,
  Electricity,
  Laser,
  Sentry,
  Contamination,
  Sacrifice,
  Acid,
  Radioactivity,
  Ripped,
  Plasma,
  Squashed,
  TankDash,
  MachineGun,
  Crawler,
  Tank,
  Boomer,
  Spit,
}

newmem:
  cmp esi, #0 //None
  je code
  cmp esi, #1 //Fall
  je ignore
  cmp esi, #2 //Bite
  je code
  cmp esi, #3 //Gun
  je ignore
  cmp esi, #4 //Rifle
  je ignore
  cmp esi, #5 //Shotgun
  je ignore
  cmp esi, #6 //Melee
  je ignore
  cmp esi, #7 //Sword
  je ignore
  cmp esi, #8 //Canon
  je code
  cmp esi, #9 //Explosion
  je code
  cmp esi, #10 //Spikes
  je ignore
  cmp esi, #11 //Fire
  je ignore
  cmp esi, #12 //Electricity
  je ignore
  cmp esi, #13 //Laser
  je ignore
  cmp esi, #14 //Sentry
  je ignore
  cmp esi, #15 //Contamination
  je code
  cmp esi, #16 //Sacrifice
  je code
  cmp esi, #17 //Acid
  je ignore
  cmp esi, #18 //Radioactivity
  je ignore
  cmp esi, #19 //Ripped
  je ignore
  cmp esi, #20 //Plasma
  je ignore
  cmp esi, #21 //Squashed
  je code
  cmp esi, #22 //TankDash
  je code
  cmp esi, #23 //MachineGun
  je ignore
  cmp esi, #24 //Crawler
  je code
  cmp esi, #25 //Tank
  je code
  cmp esi, #26 //Boomer
  je code
  cmp esi, #27 //Spit
  je code

ignore:
  mov eax, #1
  test eax,eax
  jmp return

code:
  movzx eax,byte ptr [ebx+50]
  test eax,eax
  jmp return

ReceiveDamage:
  jmp newmem
  nop
return:
registersymbol(ReceiveDamage)

[DISABLE]

ReceiveDamage:
  db 0F B6 43 50 85 C0

unregistersymbol(ReceiveDamage)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 165A72A6

165A728F: C3                    -  ret 
165A7290: 55                    -  push ebp
165A7291: 8B EC                 -  mov ebp,esp
165A7293: 53                    -  push ebx
165A7294: 56                    -  push esi
165A7295: 81 EC 90 00 00 00     -  sub esp,00000090
165A729B: 8B 5D 08              -  mov ebx,[ebp+08]
165A729E: 8B 75 14              -  mov esi,[ebp+14]
165A72A1: D9 EE                 -  fldz 
165A72A3: D9 5D F4              -  fstp dword ptr [ebp-0C]
// ---------- INJECTING HERE ----------
165A72A6: 0F B6 43 50           -  movzx eax,byte ptr [ebx+50]
165A72AA: 85 C0                 -  test eax,eax
// ---------- DONE INJECTING  ----------
165A72AC: 74 28                 -  je Health:ReceiveDamage+46
165A72AE: 8B 43 28              -  mov eax,[ebx+28]
165A72B1: D9 45 0C              -  fld dword ptr [ebp+0C]
165A72B4: 8B 4B 2C              -  mov ecx,[ebx+2C]
165A72B7: 83 EC 0C              -  sub esp,0C
165A72BA: 51                    -  push ecx
165A72BB: 56                    -  push esi
165A72BC: FF 75 10              -  push [ebp+10]
165A72BF: 83 EC 04              -  sub esp,04
165A72C2: D9 1C 24              -  fstp dword ptr [esp]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>ItemUsage</Name>
      <Address> 1F27E29C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>CanUse</Name>
      <Address> 1F21E659</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ReceiveDamage</Name>
      <Address> 1F26ED46</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
