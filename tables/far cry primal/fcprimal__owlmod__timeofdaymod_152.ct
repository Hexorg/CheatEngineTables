<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>578</ID>
      <Description>"owl mod .5"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(keysChk1AOB,MSCTF.dll,8B 05 ** ** ** ** 66 8B 94 24 88 00 00 00 66 44 8B 84 24 80 00 00 00)
registersymbol(keysChk1AOB)

alloc(values,2048,"FCPrimal.exe")

label(pPlayerCoords)
registersymbol(pPlayerCoords)
///
label(pWaypointCoords)
registersymbol(pWaypointCoords)
///
label(pControllingEntityCoords)
registersymbol(pControllingEntityCoords)
label(afTmpFlyCoords)
registersymbol(afTmpFlyCoords)
///
label(bOwlFlying)
registersymbol(bOwlFlying)
label(bIsLanding)
registersymbol(bIsLanding)
///
label(bOwlWaypointSet)
registersymbol(bOwlWaypointSet)
///
label(bInfFlyDistance)
registersymbol(bInfFlyDistance)

values:
///
pPlayerCoords:
dq 0
///
pWaypointCoords:
dq 0
///
pControllingEntityCoords:
dq 0
afTmpFlyCoords:
dq 0
dq 0
///
bOwlFlying:
dd 0
bIsLanding:
dd 0
///
bOwlWaypointSet:
dd 0
///
bInfFlyDistance:
dd 0
///

///********************************************************///

aobscanmodule(PLYCOORDS_AOB,FCPrimal.exe,0F 28 00 0F 29 81 90 00 00 00 0F 28)
registersymbol(PLYCOORDS_AOB)

alloc(newmem,2048,PLYCOORDS_AOB) //"FCPrimal.exe"+3EE500A)
label(returnhere)
label(originalcode)
label(exit)
label(isflying)
label(notflying)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pPlayerCoords],rax

cmp byte ptr [bOwlFlying],1
jne notflying

cmp byte ptr [bInfFlyDistance],1
jne originalcode

cmp byte ptr [bIsLanding],1
jne isflying
push rbx
mov rbx,[pControllingEntityCoords]
cmp byte ptr [bOwlWaypointSet],1
jne @f
mov rbx,[pWaypointCoords]
@@:
movups xmm0,[rbx]
movaps [rax],xmm0
pop rbx
jmp originalcode

isflying:
push rbx
mov rbx,[pControllingEntityCoords]
movups xmm0,[rbx]
movaps [rax],xmm0
mov ebx,(float)20
movd xmm0,ebx
addss xmm0,[rax+8]
movss [rax+8],xmm0
pop rbx

mov rax,[pControllingEntityCoords]
movups xmm0,[rax]
movaps [rcx+00000090],xmm0
jmp exit

notflying:
mov byte ptr [bIsLanding],0
mov byte ptr [bOwlWaypointSet],0

originalcode:
movaps xmm0,[rax]
movaps [rcx+00000090],xmm0

exit:
jmp returnhere

///

PLYCOORDS_AOB: //"FCPrimal.exe"+3EE500A:
jmp newmem
nop
nop
nop
nop
nop
returnhere:

///********************************************************///

aobscanmodule(WAYCOORDS_AOB,FCPrimal.exe,F3 0F 10 3E 48 8D 54 24 20)
registersymbol(WAYCOORDS_AOB)

alloc(newmem2,2048,WAYCOORDS_AOB) //"FCPrimal.exe"+516DA5E)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pWaypointCoords],rsi

originalcode2:
movss xmm7,[rsi]
lea rdx,[rsp+20]

exit2:
jmp returnhere2

///

WAYCOORDS_AOB: //"FCPrimal.exe"+516DA5E:
jmp newmem2
nop
nop
nop
nop
returnhere2:

///********************************************************///

aobscanmodule(someCoordsReadAOB,FCPrimal.exe,F3 44 0F 10 25 ** ** ** ** F3 44 0F 10 15 ** ** ** ** E8)
registersymbol(someCoordsReadAOB)

alloc(newmem6,2048,someCoordsReadAOB) //"FCPrimal.exe"+53A3759)
label(returnhere6)
label(originalcode6)
label(exit6)

label(originalcode6_owlmod)
registersymbol(originalcode6_owlmod)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
push rbx

db b8
readmem(someCoordsReadAOB-4,4)
movsxd rax,eax
mov rbx,someCoordsReadAOB
add rbx,rax
mov [pControllingEntityCoords],rbx

@@:
pop rbx
pop rax

originalcode6:
reassemble(someCoordsReadAOB)
//movss xmm12,[FCPrimal.Ordinal3+327FB5C]

exit6:
jmp returnhere6

///

originalcode6_owlmod:
readmem(someCoordsReadAOB,9)

///

someCoordsReadAOB: //"FCPrimal.exe"+53A3759:
jmp newmem6
nop
nop
nop
nop
returnhere6:

///********************************************************///

aobscanmodule(owlFlagChkAOB,FCPrimal.exe,80 BB DD 00 00 00 00 74 25)
registersymbol(owlFlagChkAOB)

alloc(newmem11,2048,owlFlagChkAOB) //"FCPrimal.exe"+51BDA78)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
pushfq
push rbx
mov bl,[rbx+dd]
mov [bOwlFlying],bl
test bl,bl
jz @f
mov rbx,[rsp]
mov bl,[rbx+101]
mov [bOwlFlying],bl
@@:
pop rbx
popfq

originalcode11:
cmp byte ptr [rbx+000000DD],00

exit11:
jmp returnhere11

///

owlFlagChkAOB: //"FCPrimal.exe"+51BDA78:
jmp newmem11
nop
nop
returnhere11:

///********************************************************///

aobscanmodule(baseFetchOnOwlWaypointAddAOB,FCPrimal.exe,89 01 8B 42 04 48 83 C1 20 89 41 E4 ** ** ** ** ** ** ** ** ** ** ** 42 EC ** ** ** ** ** ** ** ** ** 48)
registersymbol(baseFetchOnOwlWaypointAddAOB)

alloc(newmem17,2048,baseFetchOnOwlWaypointAddAOB) //"FCPrimal.exe"+4C398C2)
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
pushfq
cmp byte ptr [bOwlFlying],1
jne @f
mov byte ptr [bOwlWaypointSet],1
@@:
popfq

originalcode17:
mov [rcx],eax
mov eax,[rdx+04]

exit17:
jmp returnhere17

///

baseFetchOnOwlWaypointAddAOB: //"FCPrimal.exe"+4C398C2:
jmp newmem17
returnhere17:

///********************************************************///

aobscanmodule(owlFlagWriteOnLandAOB,FCPrimal.exe,40 88 BB DD 00 00 00 E8)
registersymbol(owlFlagWriteOnLandAOB)

alloc(newmem24,2048,owlFlagWriteOnLandAOB) //"FCPrimal.exe"+5155DB1)
label(returnhere24)
label(originalcode24)
label(exit24)
label(end24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
mov byte ptr [bIsLanding],1
pushfq
push rax
push rbx

cmp byte ptr [bInfFlyDistance],1
je @f

reassemble(keysChk1AOB)
//0104: left shift,0024: right shift, 0041: left alt, 0009: right alt, 0082: left ctrl, 0012: right ctrl, ax: any of these 3 keys, either left or right
test ax,0104
jz end24

@@:
mov rax,[pControllingEntityCoords]
cmp byte ptr [bOwlWaypointSet],1
jne @f
mov rax,[pWaypointCoords]
@@:
mov rbx,[pPlayerCoords]
movups xmm15,[rax]
movups [rbx],xmm15

end24:
pop rbx
pop rax
popfq

originalcode24:
mov [rbx+000000DD],dil

exit24:
jmp returnhere24

///

owlFlagWriteOnLandAOB: //"FCPrimal.exe"+5155DB1:
jmp newmem24
nop
nop
returnhere24:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(values)

unregistersymbol(pPlayerCoords)
unregistersymbol(pWaypointCoords)
unregistersymbol(pControllingEntityCoords)
unregistersymbol(afTmpFlyCoords)
unregistersymbol(bOwlFlying)
unregistersymbol(bIsLanding)
unregistersymbol(bOwlWaypointSet)
unregistersymbol(bInfFlyDistance)

///********************************************************///

dealloc(newmem)
PLYCOORDS_AOB: //"FCPrimal.exe"+3EE500A:
db 0F 28 00 0F 29 81 90 00 00 00
//Alt: movaps xmm0,[rax]
//Alt: movaps [rcx+00000090],xmm0

///********************************************************///

dealloc(newmem2)
WAYCOORDS_AOB: //"FCPrimal.exe"+516DA5E:
db F3 0F 10 3E 48 8D 54 24 20
//Alt: movss xmm7,[rsi]
//Alt: lea rdx,[rsp+20]

///********************************************************///

dealloc(newmem6)
someCoordsReadAOB: //"FCPrimal.exe"+53A3759:
readmem(originalcode6_owlmod,9)
//db F3 44 0F 10 25 FA C3 ED FD
//Alt: movss xmm12,[FCPrimal.Ordinal3+327FB5C]

unregistersymbol(originalcode6_owlmod)

///********************************************************///

dealloc(newmem11)
owlFlagChkAOB: //"FCPrimal.exe"+51BDA78:
db 80 BB DD 00 00 00 00
//Alt: cmp byte ptr [rbx+000000DD],00

///********************************************************///

dealloc(newmem17)
baseFetchOnOwlWaypointAddAOB: //"FCPrimal.exe"+4C398C2:
db 89 01 8B 42 04
//Alt: mov [rcx],eax
//Alt: mov eax,[rdx+04]

///********************************************************///

dealloc(newmem24)
owlFlagWriteOnLandAOB: //"FCPrimal.exe"+5155DB1:
db 40 88 BB DD 00 00 00
//Alt: mov [rbx+000000DD],dil
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>579</ID>
          <Description>"fly mode (numpad01 - mode 1 , numpad02 - mode 2)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:mode 1
1:mode 2
</DropDownList>
          <Color>008000</Color>
          <VariableType>Byte</VariableType>
          <Address>bInfFlyDistance</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>96</Key>
                <Key>97</Key>
              </Keys>
              <Value>0</Value>
              <ID>0</ID>
              <ActivateSound TTS="EN">owl fly mode 1</ActivateSound>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>96</Key>
                <Key>98</Key>
              </Keys>
              <Value>1</Value>
              <ID>1</ID>
              <ActivateSound TTS="EN">owl fly mode 2</ActivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>580</ID>
          <Description>""</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>581</ID>
              <Description>"bOwlFlying"</Description>
              <Color>808080</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>bOwlFlying</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>582</ID>
              <Description>"bIsLanding"</Description>
              <Color>808080</Color>
              <VariableType>Byte</VariableType>
              <Address>bIsLanding</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>583</ID>
              <Description>"bOwlWaypointSet"</Description>
              <Color>808080</Color>
              <VariableType>Byte</VariableType>
              <Address>bOwlWaypointSet</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>584</ID>
              <Description>"bInfFlyDistance"</Description>
              <Color>808080</Color>
              <VariableType>Byte</VariableType>
              <Address>bInfFlyDistance</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>585</ID>
              <Description>"[player coords]"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>pPlayerCoords</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>586</ID>
                  <Description>"+0"</Description>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>587</ID>
                  <Description>"+4"</Description>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>588</ID>
                  <Description>"+8"</Description>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>589</ID>
              <Description>"[waypoint coords]"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>pWaypointCoords</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>590</ID>
                  <Description>"+0"</Description>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>591</ID>
                  <Description>"+4"</Description>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>592</ID>
                  <Description>"+8"</Description>
                  <Color>0000FF</Color>
                  <VariableType>Float</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>593</ID>
              <Description>"[controlling entity coords]"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>000080</Color>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>pControllingEntityCoords</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>594</ID>
                  <Description>"+0"</Description>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>595</ID>
                  <Description>"+4"</Description>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>596</ID>
                  <Description>"+8"</Description>
                  <Color>808080</Color>
                  <VariableType>Float</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>597</ID>
              <Description>"inf. flying distance"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bInfFlyDistance:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bInfFlyDistance:
db 0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>605</ID>
      <Description>"time of day mod"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(timeOfDayWriteAOB,FCPrimal.exe,8B 10 89 97 ** ** ** ** ** ** ** ** ** ** ** FF)
registersymbol(timeOfDayWriteAOB)

define(day_length,(float)86400)

label(pTimeOfDay)
registersymbol(pTimeOfDay)
label(bAdvanceTimeOfDay)
registersymbol(bAdvanceTimeOfDay)
label(bRewindTimeOfDay)
registersymbol(bRewindTimeOfDay)
label(fTimeOfDayMod)
registersymbol(fTimeOfDayMod)

alloc(newmem,2048,timeOfDayWriteAOB) //"FCPrimal.exe"+462DE85)
label(returnhere)
label(originalcode_timeofdaymod)
registersymbol(originalcode_timeofdaymod)
label(exit)
label(inctodm)
label(dectodm)
label(settodm)
label(settod)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pTimeOfDay],rdi

//
sub esp,16
movdqu dqword [esp],xmm1
sub esp,16
movdqu dqword [esp],xmm2
//

movss xmm1,[fTimeOfDayMod+c]
mov edx,[bAdvanceTimeOfDay]
test dl,dl
jnz @f
mulss xmm1,[fTimeOfDayMod+10]
mov edx,[bRewindTimeOfDay]
test dl,dl
jnz @f
xorps xmm1,xmm1

@@:
movss [fTimeOfDayMod+4],xmm1

@@:
movss xmm1,[fTimeOfDayMod]
comiss xmm1,[fTimeOfDayMod+4]
jb inctodm
ja dectodm
jmp settodm

inctodm:
addss xmm1,[fTimeOfDayMod+8]
comiss xmm1,[fTimeOfDayMod+4]
jbe settodm
movss xmm1,[fTimeOfDayMod+4]
jmp settodm

dectodm:
subss xmm1,[fTimeOfDayMod+8]
comiss xmm1,[fTimeOfDayMod+4]
jae settodm
movss xmm1,[fTimeOfDayMod+4]
jmp settodm

settodm:
movss [fTimeOfDayMod],xmm1

@@:
mov edx,day_length
movss xmm1,[rax]
addss xmm1,[fTimeOfDayMod]
xorps xmm2,xmm2
comiss xmm1,xmm2
jae @f
movd xmm2,edx
addss xmm1,xmm2
jmp settod

@@:
movd xmm2,edx
comiss xmm1,xmm2
jbe settod
subss xmm1,xmm2
//xorps xmm1,xmm1

settod:
movss [rax],xmm1

//
movdqu xmm2,dqword [esp]
add esp,16
movdqu xmm1,dqword [esp]
add esp,16
//

originalcode_timeofdaymod:
readmem(timeOfDayWriteAOB,8)
//mov edx,[rax]
//mov [rdi+00000CE8],edx

exit:
jmp returnhere

///
pTimeOfDay:
dq 0
bAdvanceTimeOfDay:
dd 0
bRewindTimeOfDay:
dd 0
fTimeOfDayMod:
dd 0
dd 0
dd (float)10
dd (float)200
dd (float)-1
///

timeOfDayWriteAOB: //"FCPrimal.exe"+462DE85:
jmp newmem
nop
nop
nop
returnhere:

///**************************************///

label(bEndThread_FCPrimal_keylistener1_mem)
registersymbol(bEndThread_FCPrimal_keylistener1_mem)
label(bAdvanceTimeOfDayTmp)
label(bRewindTimeOfDayTmp)

alloc(FCPrimal_keylistener1_mem,2048,"FCPrimal.exe")
registersymbol(FCPrimal_keylistener1_mem)
createthread(FCPrimal_keylistener1_mem)
label(keylistenerstart)
label(keylistenerend)
label(keylistenerexit)

FCPrimal_keylistener1_mem:
sub rsp,28

keylistenerstart:
mov dword ptr [bAdvanceTimeOfDayTmp],0
mov dword ptr [bRewindTimeOfDayTmp],0

mov rcx,10 //SHIFT key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne keylistenerend

mov rcx,22 //PAGE DOWN key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne @f
mov dword ptr [bAdvanceTimeOfDayTmp],1
jmp keylistenerend

@@:
mov rcx,21 //PAGE UP key
push rcx
call GetAsyncKeyState
add rsp,08
shr ax,#15
cmp ax,1
jne @f
mov dword ptr [bRewindTimeOfDayTmp],1
jmp keylistenerend

keylistenerend:
mov eax,[bAdvanceTimeOfDayTmp]
mov [bAdvanceTimeOfDay],eax
mov eax,[bRewindTimeOfDayTmp]
mov [bRewindTimeOfDay],eax
mov rcx,#100
call Sleep
cmp dword ptr [bEndThread_FCPrimal_keylistener1_mem],1
jne keylistenerstart

keylistenerexit:
add rsp,28
mov dword ptr [bEndThread_FCPrimal_keylistener1_mem],2
ret

///
bEndThread_FCPrimal_keylistener1_mem:
dd 0
bAdvanceTimeOfDayTmp:
dd 0
bRewindTimeOfDayTmp:
dd 0
///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//obtained from SubBeam's ACS script - start//
{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "bEndThread_FCPrimal_keylistener1_mem" ) == 0 then --could be 2 already
  writeInteger( "bEndThread_FCPrimal_keylistener1_mem", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "bEndThread_FCPrimal_keylistener1_mem" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}
//obtained from SubBeam's ACS script - end//

//bEndThread_FCPrimal_keylistener1_mem:
//dd 1

///**************************************///

dealloc(newmem)
timeOfDayWriteAOB: //"FCPrimal.exe"+462DE85:
readmem(originalcode_timeofdaymod,8)
//db 8B 10 89 97 E8 0C 00 00
//Alt: mov edx,[rax]
//Alt: mov [rdi+00000CE8],edx

unregistersymbol(pTimeOfDay)
unregistersymbol(bAdvanceTimeOfDay)
unregistersymbol(bRewindTimeOfDay)
unregistersymbol(fTimeOfDayMod)

///**************************************///

unregistersymbol(bEndThread_FCPrimal_keylistener1_mem)

dealloc(FCPrimal_keylistener1_mem)
unregistersymbol(FCPrimal_keylistener1_mem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>939</ID>
          <Description>"Shift_PageUp to rewind"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>808080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>932</ID>
              <Description>"bAdvanceTimeOfDay"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:no
1:yes
</DropDownList>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bAdvanceTimeOfDay</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>933</ID>
              <Description>"bRewindTimeOfDay"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:no
1:yes
</DropDownList>
              <Color>008000</Color>
              <VariableType>Byte</VariableType>
              <Address>bRewindTimeOfDay</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>940</ID>
          <Description>"Shift_PageDown to advance"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>808080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>934</ID>
              <Description>"fTimeOfDayMod"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>fTimeOfDayMod</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>935</ID>
              <Description>"fTimeOfDayMod+4"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>fTimeOfDayMod+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>936</ID>
              <Description>"fTimeOfDayMod+8"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>fTimeOfDayMod+8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>937</ID>
              <Description>"fTimeOfDayMod+c"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>fTimeOfDayMod+c</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>931</ID>
          <Description>"current time of day"</Description>
          <Color>0000FF</Color>
          <VariableType>Float</VariableType>
          <Address>pTimeOfDay</Address>
          <Offsets>
            <Offset>[originalcode_timeofdaymod+4]</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5713223#5713223
</Comments>
</CheatTable>
