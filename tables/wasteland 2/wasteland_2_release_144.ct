<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Prevent Ammo Exhaustion (Need Reloading Once)"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(unlammo,1024)
label(returnhere)
//label(originalcode)
label(unlammo_aob)
registersymbol(unlammo_aob)
aobscan(aob_unlammo,8B 46 18 2B C2 89 46 18 2B FA)

unlammo:
mov eax,[esi+18]
//sub eax,edx
nop
nop
jmp returnhere

/*
originalcode:
mov eax,[esi+18]
sub eax,edx
jmp returnhere
*/


aob_unlammo:
unlammo_aob:
jmp unlammo
returnhere:


 
 
[DISABLE]
unlammo_aob:
db 8B 46 18 2B C2
unregistersymbol(unlammo_aob)
dealloc(unlammo)
//mov eax,[esi+18]
//sub eax,edx
//Alt: db 8B 46 18 2B C2 - 89 46 18 2B FA
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Items Quantity Set On Transfer (Need Moving Items Once)"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>// Define
define(ITEMS,"WL2.exe")

[ENABLE]
alloc(Nodec,$1000,ITEMS)
label(noonmove)
label(returnhere)
label(originalcode)
label(aQunatity)
label(hommany_aob)
registersymbol(Nodec)
registersymbol(aQunatity)
registersymbol(hommany_aob)
aobscan(aob_hommany,8B 46 18 2B 45 10 89 46 18)


Nodec:

// Var
aQunatity:
dd 0

// Set Items On Move, Subtract
noonmove:
cmp [aQunatity],0
je originalcode
mov eax,[aQunatity]
nop
nop
nop
mov [aQunatity],0
jmp returnhere


originalcode:
mov eax,[esi+18]
sub eax,[ebp+10]
jmp returnhere



aob_hommany:
hommany_aob:
jmp noonmove
nop
returnhere:


 
 
[DISABLE]
hommany_aob:
db 8B 46 18 2B 45 10
unregistersymbol(hommany_aob)
unregistersymbol(aQunatity)
unregistersymbol(Nodec)
dealloc(Nodec)
//mov eax,[esi+18]
//sub eax,[ebp+10]
//Alt: db 8B 46 18 2B 45 10 - 89 46 18
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"How Much"</Description>
          <LastState Value="??" Activated="0" RealAddress="07280000"/>
          <Color>80000008</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>aQunatity</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Limitless AP Single +4"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Limitless Ap Movement Only (Need Moving Once)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(unlimitedap,1024)
label(returnhere)
label(unlimitedap_aob)
registersymbol(unlimitedap_aob)
aobscan(aob_unlimitedap,?? 4F ?? 8B 57 30 2B CA 89 88 AC 00 00 00 BA ?? ?? ?? ?? E8 ?? ?? ?? ?? 8B F0 8B 47 10 89 46 08 BA) //00 4F ?? ?? 83 EC 0C 6A 00 E8) // Movement +8


// Movement Only
unlimitedap:
mov [eax+000000AC],0F//ecx
//mov ecx,0F //15
jmp returnhere



// Movement
aob_unlimitedap+8:
unlimitedap_aob:
jmp unlimitedap
nop
returnhere:

 
[DISABLE]
unlimitedap_aob:
db 89 88 AC 00 00 00
unregistersymbol(unlimitedap_aob)
dealloc(unlimitedap)
//mov [eax+000000AC],ecx
//Alt: ?? 4F ?? 8B 57 30 2B CA - db 89 88 AC 00 00 00 - BA ?? ?? ?? ?? E8 ?? ?? ?? ?? 8B F0 8B 47 10 89 46 08 B
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Limitless Ap Shooting Only (Need Attacking Once)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(unlimitedshooting,1024)
label(returnhere3)
label(unlimitedshooting_aob)
registersymbol(unlimitedshooting_aob)
aobscan(aob_unlimitedshooting,8B 57 38 2B CA 89 88 AC 00 00 00 BA ?? ?? ?? ?? E8 ?? ?? ?? ??) // Shooting +5



// Shooting Only
unlimitedshooting:
mov [eax+000000AC],0F //ecx
jmp returnhere3



// Shooting
aob_unlimitedshooting+5:
unlimitedshooting_aob:
jmp unlimitedshooting
nop
returnhere3:

 
[DISABLE]
unlimitedshooting_aob:
db 89 88 AC 00 00 00
unregistersymbol(unlimitedshooting_aob)
dealloc(unlimitedshooting)
//mov [eax+000000AC],ecx
//Alt: 8B 57 38 2B CA - db 89 88 AC 00 00 00 - BA ?? ?? ?? ?? E8 ?? ?? ?? ??
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Limitless Ap Reloading Only (Need Rerloading Once)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(unlimitedreload,1024)
label(returnhere2)
label(unlimitedreload_aob)
registersymbol(unlimitedreload_aob)
aobscan(aob_unlimitedreload,8B 4D D4 2B CA 89 88 AC 00 00 00 BA ?? ?? ?? ?? E8 ?? ?? ?? ??) // Reload +5


// Reloading Only
unlimitedreload:
mov [eax+000000AC],0F//ecx
jmp returnhere2


// Reload
aob_unlimitedreload+5:
unlimitedreload_aob:
jmp unlimitedreload
nop
returnhere2:


 
[DISABLE]
unlimitedreload_aob:
db 89 88 AC 00 00 00
unregistersymbol(unlimitedreload_aob)
dealloc(unlimitedreload)
//mov [eax+000000AC],ecx
//Alt: 8B 4D D4 2B CA - db 89 88 AC 00 00 00 - BA F0 49 45 35 E8 69 BA 6C C2
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Limitless Ap Unjam Only (Need Unjamming Once)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(unlimunjam,1024)
label(returnhere)
label(unlimunjam_aob)
registersymbol(unlimunjam_aob)
aobscan(aob_unlimunjam,8B 4D F0 2B CA 89 88 AC 00 00 00 BA)


unlimunjam:
mov [eax+000000AC],0F //ecx
jmp returnhere


aob_unlimunjam+5:
unlimunjam_aob:
jmp unlimunjam
nop
returnhere:



 
[DISABLE]
unlimunjam_aob:
db 89 88 AC 00 00 00
unregistersymbol(unlimunjam_aob)
dealloc(unlimunjam)
//mov [eax+000000AC],ecx
//Alt: 8B 4D F0 2B CA - db 89 88 AC 00 00 00 - BA
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"Unlimited Requisitions"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(unlreq,512)
label(returnhere)
label(originalcode)
label(unlrequ_aob)
registersymbol(unlrequ_aob)
aobscan(aob_unlrequ,89 11 83 EC 0C 50 E8)


unlreq:
mov edx,9
jmp originalcode


originalcode:
mov [ecx],edx
sub esp,0C
jmp returnhere




aob_unlrequ:
unlrequ_aob:
jmp unlreq
returnhere:


 
 
[DISABLE]
unlrequ_aob:
db 89 11 83 EC 0C
unregistersymbol(unlrequ_aob)
dealloc(unlreq)
//mov [ecx],edx
//sub esp,0C
//Alt: 8B 55 0C - db 89 11 83 EC 0C - 50 E8
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of sub eax,edx</Description>
      <Address>415AC5F6</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>55</Byte>
        <Byte>E8</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>C2</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>18</Byte>
        <Byte>2B</Byte>
        <Byte>FA</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub eax,[ebp+10]</Description>
      <Address>09317027</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>EB</Byte>
        <Byte>0F</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>45</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>18</Byte>
        <Byte>EB</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
