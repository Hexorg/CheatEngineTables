<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>43</ID>
      <Description>"Suit"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>804000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Infinite Mining Laser"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Infinite Mining Laser, Infinite Photon Cannon, no heat }


[ENABLE]

aobscanmodule(mining,NMS.exe,29 43 18 44 01 AC BE 38 0F 00 00) // should be unique
alloc(newmem,$100,"NMS.exe"+A29859)

label(code)
label(return)

newmem:

code:
  sub [rbx+18],0
  add [rsi+rdi*4+00000F38],r13d
  jmp return

mining:
  jmp code
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(mining)

aobscanmodule(heat,NMS.exe,F3 41 0F 11 86 C0 0E 00 00 41 0F) // should be unique
alloc(newmem1,$100,"NMS.exe"+A26D03)

label(heat1)
label(return1)

newmem1:

heat1:
  movss [r14+00000EC0],xmm12
  jmp return1

heat:
  jmp heat1
  nop
  nop
  nop
  nop
return1:
registersymbol(heat)


[DISABLE]

mining:
  db 29 43 18 44 01 AC BE 38 0F 00 00

unregistersymbol(mining)
dealloc(newmem)

heat:
  db F3 41 0F 11 86 C0 0E 00 00

unregistersymbol(heat)
dealloc(newmem1)




</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Infinite Boltcaster"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(boltcaster,NMS.exe,9F C5 45 29 B4 24 38 0F 00 00) // should be unique
alloc(bolcas,$100,"NMS.exe"+A2B845)

label(hax)
label(goback)

bolcas:

hax:
  sub [r12+00000F38],0
  jmp goback

boltcaster+2:
  jmp hax
  nop
  nop
  nop
goback:
registersymbol(boltcaster)

[DISABLE]

boltcaster+2:
  db 45 29 B4 24 38 0F 00 00

unregistersymbol(boltcaster)
dealloc(bolcas)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"Infinite Grenades"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(nades,NMS.exe,01 00 00 41 FF 8C 24 40 0F 00 00)
nades+3:
db 90 90 90 90 90 90 90 90
registersymbol(nades)
[DISABLE]
nades+3:
db 41 FF 8C 24 40 0F 00 00
unregistersymbol(nades)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Infinite Elements/Inventory"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(inventory,NMS.exe,29 47 18 4C 8B 35)
inventory:
  db 90 90 90
registersymbol(inventory)

aobscanmodule(elements,NMS.exe,44 2B C1 45 89 41 18)
alloc(food,$100,"NMS.exe"+45F130)
label(feeding)
label(gofeed)
food:
feeding:
  mov r8d,[r9+18] //move the current held value
  mov [r9+18],r8d //move the value back, nop didn't want to work for me
  jmp gofeed
elements:
  jmp feeding
  nop
  nop
gofeed:
registersymbol(elements)
[DISABLE]
inventory:
  db 29 47 18
unregistersymbol(inventory)

elements:
  db 44 2B C1 45 89 41 18
unregistersymbol(elements)
dealloc(food)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Infinite Life Support"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(lifeSupport,NMS.exe,2B CE 85 C9 7F 04) // should be unique
alloc(newmem,$100,"NMS.exe"+A04DCE)

label(code)
label(return)

newmem:

code:
  sub ecx,edi
  test ecx,ecx
  jg NMS.exe+A04DD8
  jmp return

lifeSupport:
  jmp code
  nop
return:
registersymbol(lifeSupport)

aobscanmodule(weather,NMS.exe,F3 0F 58 C2 F3 0F 11 03) // should be unique
alloc(effect,$100,"NMS.exe"+A2D17B)

label(noeffect)
label(back)

effect:

noeffect:
  subss xmm0,xmm6
  movss [rbx],xmm0
  jmp back

weather:
  jmp noeffect
  nop
  nop
  nop
back:
registersymbol(weather)

[DISABLE]

lifeSupport:
  db 2B CE 85 C9 7F 04

unregistersymbol(lifeSupport)
dealloc(newmem)

weather:
  db F3 0F 58 C2 F3 0F 11 03

unregistersymbol(weather)
dealloc(effect)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Infinite Run"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(run,NMS.exe,23 00 00 F3 0F 5C C8 F3 0F 11 8F 44 23 00 00 44 0F 2F E1 0F) // should be unique
alloc(newmem,$100,"NMS.exe"+A0A5EA)

label(code)
label(return)

newmem:

code:
  subss xmm0,xmm1
  movss [rdi+00002344],xmm1
  jmp return

run+3:
  jmp code
  nop
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(run)

[DISABLE]

run+3:
  db F3 0F 5C C8 F3 0F 11 8F 44 23 00 00

unregistersymbol(run)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A0A5EA

"NMS.exe"+A0A5AE: F3 0F 10 7C 24 54                 -  movss xmm7,[rsp+54]
"NMS.exe"+A0A5B4: F3 0F 59 F8                       -  mulss xmm7,xmm0
"NMS.exe"+A0A5B8: F3 0F 11 7C 24 54                 -  movss [rsp+54],xmm7
"NMS.exe"+A0A5BE: F3 0F 10 35 2A B0 C1 00           -  movss xmm6,[NMS.exe+16255F0]
"NMS.exe"+A0A5C6: F3 0F 59 F7                       -  mulss xmm6,xmm7
"NMS.exe"+A0A5CA: F3 41 0F 59 F7                    -  mulss xmm6,xmm15
"NMS.exe"+A0A5CF: F3 0F 10 05 3D AA C1 00           -  movss xmm0,[NMS.exe+1625014]
"NMS.exe"+A0A5D7: F3 41 0F 59 C6                    -  mulss xmm0,xmm14
"NMS.exe"+A0A5DC: F3 0F 5E 44 24 58                 -  divss xmm0,[rsp+58]
"NMS.exe"+A0A5E2: F3 0F 10 8F 44 23 00 00           -  movss xmm1,[rdi+00002344]
// ---------- INJECTING HERE ----------
"NMS.exe"+A0A5EA: F3 0F 5C C8                       -  subss xmm1,xmm0
"NMS.exe"+A0A5EE: F3 0F 11 8F 44 23 00 00           -  movss [rdi+00002344],xmm1
// ---------- DONE INJECTING  ----------
"NMS.exe"+A0A5F6: 44 0F 2F E1                       -  comiss xmm12,xmm1
"NMS.exe"+A0A5FA: 0F 82 B3 00 00 00                 -  jb NMS.exe+A0A6B3
"NMS.exe"+A0A600: 48 C7 87 40 23 00 00 01 00 00 00  -  mov [rdi+00002340],00000001
"NMS.exe"+A0A60B: 44 89 74 24 38                    -  mov [rsp+38],r14d
"NMS.exe"+A0A610: 4C 89 74 24 30                    -  mov [rsp+30],r14
"NMS.exe"+A0A615: 44 89 74 24 28                    -  mov [rsp+28],r14d
"NMS.exe"+A0A61A: 4C 89 74 24 20                    -  mov [rsp+20],r14
"NMS.exe"+A0A61F: 45 33 C9                          -  xor r9d,r9d
"NMS.exe"+A0A622: 45 33 C0                          -  xor r8d,r8d
"NMS.exe"+A0A625: 48 8B 97 F8 00 00 00              -  mov rdx,[rdi+000000F8]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Infinite Jetpack"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(jetpack,NMS.exe,F3 41 0F 5C C6 F3 0F 11 87 14) // should be unique
alloc(newmem,$100,"NMS.exe"+A09E80)

label(code)
label(return)

newmem:

code:
  subss xmm0,xmm12
  jmp return

jetpack:
  jmp code
return:
registersymbol(jetpack)

[DISABLE]

jetpack:
  db F3 41 0F 5C C6

unregistersymbol(jetpack)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A09E80

"NMS.exe"+A09E44: F3 0F 10 15 F8 78 95 00  -  movss xmm2,[NMS.exe+1361744]
"NMS.exe"+A09E4C: 48 8D 15 3D 2F B6 00     -  lea rdx,[NMS.exe+156CD90]
"NMS.exe"+A09E53: E8 E8 7B 0F 00           -  call NMS.exe+B01A40
"NMS.exe"+A09E58: 41 0F 28 C6              -  movaps xmm0,xmm14
"NMS.exe"+A09E5C: F3 0F 58 87 10 14 00 00  -  addss xmm0,[rdi+00001410]
"NMS.exe"+A09E64: F3 0F 11 87 10 14 00 00  -  movss [rdi+00001410],xmm0
"NMS.exe"+A09E6C: 80 BF 18 14 00 00 00     -  cmp byte ptr [rdi+00001418],00
"NMS.exe"+A09E73: 75 4F                    -  jne NMS.exe+A09EC4
"NMS.exe"+A09E75: F3 0F 10 8F 14 14 00 00  -  movss xmm1,[rdi+00001414]
"NMS.exe"+A09E7D: 0F 28 C1                 -  movaps xmm0,xmm1
// ---------- INJECTING HERE ----------
"NMS.exe"+A09E80: F3 41 0F 5C C6           -  subss xmm0,xmm14
// ---------- DONE INJECTING  ----------
"NMS.exe"+A09E85: F3 0F 11 87 14 14 00 00  -  movss [rdi+00001414],xmm0
"NMS.exe"+A09E8D: 44 0F 2F E0              -  comiss xmm12,xmm0
"NMS.exe"+A09E91: 72 31                    -  jb NMS.exe+A09EC4
"NMS.exe"+A09E93: 41 0F 2F CC              -  comiss xmm1,xmm12
"NMS.exe"+A09E97: 76 2B                    -  jna NMS.exe+A09EC4
"NMS.exe"+A09E99: 44 89 74 24 38           -  mov [rsp+38],r14d
"NMS.exe"+A09E9E: 4C 89 74 24 30           -  mov [rsp+30],r14
"NMS.exe"+A09EA3: 44 89 74 24 28           -  mov [rsp+28],r14d
"NMS.exe"+A09EA8: 4C 89 74 24 20           -  mov [rsp+20],r14
"NMS.exe"+A09EAD: 45 33 C9                 -  xor r9d,r9d
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Infinite Health"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(health,NMS.exe,87 80 00 00 00 41 89 87 E8 00 00 00 E9 90) // should be unique
alloc(newmem,$100,"NMS.exe"+A0763B)

label(code)
label(return)

newmem:

code:
  mov [r15+000000E8],ecx
  jmp return

health+5:
  jmp code
  nop
  nop
return:
registersymbol(health)

[DISABLE]

health+5:
  db 41 89 87 E8 00 00 00

unregistersymbol(health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A0763B

"NMS.exe"+A07610: 85 C0                 -  test eax,eax
"NMS.exe"+A07612: 7F 16                 -  jg NMS.exe+A0762A
"NMS.exe"+A07614: 49 FF 87 80 00 00 00  -  inc [r15+00000080]
"NMS.exe"+A0761B: 41 8B C5              -  mov eax,r13d
"NMS.exe"+A0761E: 41 89 87 E8 00 00 00  -  mov [r15+000000E8],eax
"NMS.exe"+A07625: E9 AD 00 00 00        -  jmp NMS.exe+A076D7
"NMS.exe"+A0762A: B9 64 00 00 00        -  mov ecx,00000064
"NMS.exe"+A0762F: 3B C1                 -  cmp eax,ecx
"NMS.exe"+A07631: 0F 4D C1              -  cmovge eax,ecx
"NMS.exe"+A07634: 49 FF 87 80 00 00 00  -  inc [r15+00000080]
// ---------- INJECTING HERE ----------
"NMS.exe"+A0763B: 41 89 87 E8 00 00 00  -  mov [r15+000000E8],eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+A07642: E9 90 00 00 00        -  jmp NMS.exe+A076D7
"NMS.exe"+A07647: 41 83 FC 02           -  cmp r12d,02
"NMS.exe"+A0764B: 0F 85 8E 00 00 00     -  jne NMS.exe+A076DF
"NMS.exe"+A07651: 45 8B C4              -  mov r8d,r12d
"NMS.exe"+A07654: 41 BC 3A 00 00 00     -  mov r12d,0000003A
"NMS.exe"+A0765A: 45 33 C9              -  xor r9d,r9d
"NMS.exe"+A0765D: 41 8B D4              -  mov edx,r12d
"NMS.exe"+A07660: 49 8B CF              -  mov rcx,r15
"NMS.exe"+A07663: E8 C8 D5 A5 FF        -  call NMS.exe+464C30
"NMS.exe"+A07668: 48 8B F8              -  mov rdi,rax
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"Ship"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>804000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Infinite Launch Thruster"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(launchThrust,NMS.exe,2B C8 C6 44 24 28 01) // should be unique
alloc(newmem,$1000,"NMS.exe"+ACD8BD)

label(code)
label(return)

newmem:

code:
  mov ecx,258
  mov byte ptr [rsp+28],01
  jmp return

launchThrust:
  jmp code
  nop
  nop
return:
registersymbol(launchThrust)

[DISABLE]

launchThrust:
  db 2B C8 C6 44 24 28 01

unregistersymbol(launchThrust)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+ACD8BD

"NMS.exe"+ACD895: 48 8B 7C 24 30              -  mov rdi,[rsp+30]
"NMS.exe"+ACD89A: 48 8B 74 24 50              -  mov rsi,[rsp+50]
"NMS.exe"+ACD89F: 48 85 DB                    -  test rbx,rbx
"NMS.exe"+ACD8A2: 74 3D                       -  je NMS.exe+ACD8E1
"NMS.exe"+ACD8A4: 8B 53 18                    -  mov edx,[rbx+18]
"NMS.exe"+ACD8A7: 3B D0                       -  cmp edx,eax
"NMS.exe"+ACD8A9: 7C 36                       -  jl NMS.exe+ACD8E1
"NMS.exe"+ACD8AB: F3 0F 10 1D 29 3D 89 00     -  movss xmm3,[NMS.exe+13615DC]
"NMS.exe"+ACD8B3: F3 0F 10 15 5D 3F 89 00     -  movss xmm2,[NMS.exe+1361818]
"NMS.exe"+ACD8BB: 8B CA                       -  mov ecx,edx
// ---------- INJECTING HERE ----------
"NMS.exe"+ACD8BD: 2B C8                       -  sub ecx,eax
"NMS.exe"+ACD8BF: C6 44 24 28 01              -  mov byte ptr [rsp+28],01
// ---------- DONE INJECTING  ----------
"NMS.exe"+ACD8C4: 89 54 24 20                 -  mov [rsp+20],edx
"NMS.exe"+ACD8C8: 89 4B 18                    -  mov [rbx+18],ecx
"NMS.exe"+ACD8CB: 48 8B 0D 36 DE B5 00        -  mov rcx,[NMS.exe+162B708]
"NMS.exe"+ACD8D2: 48 8B D3                    -  mov rdx,rbx
"NMS.exe"+ACD8D5: 48 81 C1 B0 9A 2F 00        -  add rcx,002F9AB0
"NMS.exe"+ACD8DC: E8 5F 8B 9C FF              -  call NMS.exe+496440
"NMS.exe"+ACD8E1: 48 8B 5C 24 48              -  mov rbx,[rsp+48]
"NMS.exe"+ACD8E6: 48 83 C4 38                 -  add rsp,38
"NMS.exe"+ACD8EA: C3                          -  ret 
"NMS.exe"+ACD8EB: CC                          -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Infinite Pulse Engine"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(pulse,NMS.exe,FF 4F 18 33 C0) // should be unique
alloc(newmem,$1000,"NMS.exe"+AF9612)

label(code)
label(return)

newmem:

code:
  mov [rdi+18],C8
  xor eax,eax
  jmp return

pulse:
  jmp code
return:
registersymbol(pulse)

[DISABLE]

pulse:
  db FF 4F 18 33 C0

unregistersymbol(pulse)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+AF9612

"NMS.exe"+AF95D8: 48 8B 15 29 21 B3 00        -  mov rdx,[NMS.exe+162B708]
"NMS.exe"+AF95DF: 48 81 C2 10 09 00 00        -  add rdx,00000910
"NMS.exe"+AF95E6: C6 44 24 20 00              -  mov byte ptr [rsp+20],00
"NMS.exe"+AF95EB: 45 33 C9                    -  xor r9d,r9d
"NMS.exe"+AF95EE: 4C 8D 85 F0 00 00 00        -  lea r8,[rbp+000000F0]
"NMS.exe"+AF95F5: E8 96 A3 96 FF              -  call NMS.exe+463990
"NMS.exe"+AF95FA: F3 44 0F 5E 9D FC 01 00 00  -  divss xmm11,[rbp+000001FC]
"NMS.exe"+AF9603: F3 41 0F 10 86 C4 00 00 00  -  movss xmm0,[r14+000000C4]
"NMS.exe"+AF960C: 41 0F 2F C3                 -  comiss xmm0,xmm11
"NMS.exe"+AF9610: 76 0C                       -  jna NMS.exe+AF961E
// ---------- INJECTING HERE ----------
"NMS.exe"+AF9612: FF 4F 18                    -  dec [rdi+18]
"NMS.exe"+AF9615: 33 C0                       -  xor eax,eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+AF9617: 41 89 86 C4 00 00 00        -  mov [r14+000000C4],eax
"NMS.exe"+AF961E: 49 8B 04 24                 -  mov rax,[r12]
"NMS.exe"+AF9622: BA 06 00 00 00              -  mov edx,00000006
"NMS.exe"+AF9627: 49 8B CC                    -  mov rcx,r12
"NMS.exe"+AF962A: FF 50 10                    -  call qword ptr [rax+10]
"NMS.exe"+AF962D: 0F 2F 05 04 72 86 00        -  comiss xmm0,[NMS.exe+1360838]
"NMS.exe"+AF9634: 77 17                       -  ja NMS.exe+AF964D
"NMS.exe"+AF9636: 49 8B 04 24                 -  mov rax,[r12]
"NMS.exe"+AF963A: BA 28 00 00 00              -  mov edx,00000028
"NMS.exe"+AF963F: 49 8B CC                    -  mov rcx,r12
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Infinite Phase Beam"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(phaseBeam,NMS.exe,2B CF 89 48 18) // should be unique
alloc(newmem,$100,"NMS.exe"+AFD32F)

label(code)
label(return)

newmem:

code:
  mov ecx,3E8
  mov [rax+18],ecx
  jmp return

phaseBeam:
  jmp code
return:
registersymbol(phaseBeam)

aobscanmodule(shipHeat,NMS.exe,F3 41 0F 11 86 1C 0A 00 00) // should be unique
alloc(newmem2,$100,"NMS.exe"+AFC52E)

label(code2)
label(return2)

newmem2:

code2:
  movss [r14+00000A1C],xmm14
  jmp return2

shipHeat:
  jmp code2
  nop
  nop
  nop
  nop
return2:
registersymbol(shipHeat)

[DISABLE]

phaseBeam:
  db 2B CF 89 48 18

unregistersymbol(phaseBeam)
dealloc(newmem)


shipHeat:
  db F3 41 0F 11 86 1C 0A 00 00

unregistersymbol(shipHeat)
dealloc(newmem2)


</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Infinite Deflector Shield"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(shipShield,NMS.exe,89 5F 18 49 FF 87 80 00 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+A076A6)

label(code)
label(return)

newmem:

code:
  mov [rdi+18],C8
  inc [r15+00000080]
  jmp return

shipShield:
  jmp code
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(shipShield)

[DISABLE]

shipShield:
  db 89 5F 18 49 FF 87 80 00 00 00

unregistersymbol(shipShield)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A076A6

"NMS.exe"+A0768C: 74 05                    -  je NMS.exe+A07693
"NMS.exe"+A0768E: 8B 40 1C                 -  mov eax,[rax+1C]
"NMS.exe"+A07691: EB 05                    -  jmp NMS.exe+A07698
"NMS.exe"+A07693: B8 01 00 00 00           -  mov eax,00000001
"NMS.exe"+A07698: 85 DB                    -  test ebx,ebx
"NMS.exe"+A0769A: 7F 05                    -  jg NMS.exe+A076A1
"NMS.exe"+A0769C: 41 8B DD                 -  mov ebx,r13d
"NMS.exe"+A0769F: EB 05                    -  jmp NMS.exe+A076A6
"NMS.exe"+A076A1: 3B D8                    -  cmp ebx,eax
"NMS.exe"+A076A3: 0F 4D D8                 -  cmovge ebx,eax
// ---------- INJECTING HERE ----------
"NMS.exe"+A076A6: 89 5F 18                 -  mov [rdi+18],ebx
"NMS.exe"+A076A9: 49 FF 87 80 00 00 00     -  inc [r15+00000080]
// ---------- DONE INJECTING  ----------
"NMS.exe"+A076B0: 45 33 C9                 -  xor r9d,r9d
"NMS.exe"+A076B3: 41 8B D4                 -  mov edx,r12d
"NMS.exe"+A076B6: 49 8B CF                 -  mov rcx,r15
"NMS.exe"+A076B9: 45 8D 41 02              -  lea r8d,[r9+02]
"NMS.exe"+A076BD: E8 6E D5 A5 FF           -  call NMS.exe+464C30
"NMS.exe"+A076C2: 48 85 C0                 -  test rax,rax
"NMS.exe"+A076C5: 74 18                    -  je NMS.exe+A076DF
"NMS.exe"+A076C7: F3 0F 10 40 20           -  movss xmm0,[rax+20]
"NMS.exe"+A076CC: 41 0F 2E C1              -  ucomiss xmm0,xmm9
"NMS.exe"+A076D0: 7A 0D                    -  jp NMS.exe+A076DF
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Infinite Hyperdrive"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(hyperdrive,NMS.exe,DA 00 00 00 FF C9 33 F6 48 8D 54 24 60)
hyperdrive+4:
  nop
  nop
  xor esi,esi
  lea rdx,[rsp+60]
registersymbol(hyperdrive)

[DISABLE]

hyperdrive+4:
  db FF C9 33 F6 48 8D 54 24 60

unregistersymbol(hyperdrive)

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>55</ID>
      <Description>"Misc"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>804000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Unlock Atlas Locks"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(atlas,NMS.exe,45 85 DB 7E 04 B3 01 EB 02 32 DB 4D 85 FF) // should be unique
alloc(newmem,$100,"NMS.exe"+A3016D)

label(code)
label(return)

newmem:

code:
  jg NMS.exe+A30173
  mov bl,01
  jmp NMS.exe+A30175
  jmp return

atlas+3:
  jmp code
  nop
return:
registersymbol(atlas)

[DISABLE]

atlas+3:
  db 7E 04 B3 01 EB 02

unregistersymbol(atlas)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A3016D

"NMS.exe"+A3014F: 75 04                    -  jne NMS.exe+A30155
"NMS.exe"+A30151: 44 03 40 18              -  add r8d,[rax+18]
"NMS.exe"+A30155: 48 83 C0 30              -  add rax,30
"NMS.exe"+A30159: 48 3B C1                 -  cmp rax,rcx
"NMS.exe"+A3015C: 75 E2                    -  jne NMS.exe+A30140
"NMS.exe"+A3015E: 45 03 D8                 -  add r11d,r8d
"NMS.exe"+A30161: 48 83 C2 04              -  add rdx,04
"NMS.exe"+A30165: 49 3B D2                 -  cmp rdx,r10
"NMS.exe"+A30168: 75 99                    -  jne NMS.exe+A30103
"NMS.exe"+A3016A: 45 85 DB                 -  test r11d,r11d
// ---------- INJECTING HERE ----------
"NMS.exe"+A3016D: 7E 04                    -  jle NMS.exe+A30173
"NMS.exe"+A3016F: B3 01                    -  mov bl,01
"NMS.exe"+A30171: EB 02                    -  jmp NMS.exe+A30175
// ---------- DONE INJECTING  ----------
"NMS.exe"+A30173: 32 DB                    -  xor bl,bl
"NMS.exe"+A30175: 4D 85 FF                 -  test r15,r15
"NMS.exe"+A30178: 74 18                    -  je NMS.exe+A30192
"NMS.exe"+A3017A: 41 83 C8 FF              -  or r8d,-01
"NMS.exe"+A3017E: 49 8B D7                 -  mov rdx,r15
"NMS.exe"+A30181: E8 0A A0 1A 00           -  call NMS.exe+BDA190
"NMS.exe"+A30186: 0F 57 C0                 -  xorps xmm0,xmm0
"NMS.exe"+A30189: F3 0F 7F 45 D7           -  movdqu [rbp-29],xmm0
"NMS.exe"+A3018E: 4C 89 65 E7              -  mov [rbp-19],r12
"NMS.exe"+A30192: 0F B6 C3                 -  movzx eax,bl
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>112</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"No Craft Requirements"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
NMS.exe+460638:
  xorps xmm0,xmm0
  db 90 90 90

NMS.exe+460BAA:
  xorps xmm0,xmm0
  db 90 90 90 90

NMS.exe+45FF1C:
  db 90 90

NMS.exe+461A9C:
  db 90 90

[DISABLE]
NMS.exe+460638:
  db 66 41 0F 6E 46 14

NMS.exe+460BAA:
  db 66 41 0F 6E 44 24 14

NMS.exe+45FF1C:
  db 7C 1E 49 83 C6 18

NMS.exe+461A9C:
  db 7C 12 45 33 FF
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"One Hit Kill"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(oneHK,NMS.exe,85 C0 7E 08 01 86 FC 00 00 00)

oneHK+4:
 db 86 8E FC
 registersymbol(oneHK)

[DISABLE]
oneHK+4:
  db 01 86 FC 00 00 00
unregistersymbol(oneHK)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"Inventory Slot Pointers"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(inventory_slots,NMS.exe,8B 0C 8E 0F A3 D1)
alloc(newmem,$1000,inventory_slots)

label(code)
label(return)
label(inventory_slots_ptr)

newmem:
  push rcx
  mov rcx,inventory_slots_ptr
  mov [rcx],rsi
  pop rcx
code:
  mov ecx,[rsi+rcx*4]
  bt ecx,edx
  jmp return

inventory_slots_ptr:
  dq 0

inventory_slots:
  jmp newmem
  nop
return:
registersymbol(inventory_slots)
registersymbol(inventory_slots_ptr)

[DISABLE]
inventory_slots:
  db 8B 0C 8E 0F A3 D1
unregistersymbol(inventory_slots)
unregistersymbol(inventory_slots_ptr)
dealloc(newmem)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>247</ID>
              <Description>"Currently Opened Inventory"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>inventory_slots_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>248</ID>
                  <Description>"Row 1 (set to -1 for all slots)"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>249</ID>
                  <Description>"Row 2"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>250</ID>
                  <Description>"Row 3"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>251</ID>
                  <Description>"Row 4"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>252</ID>
                  <Description>"Row 5"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>253</ID>
                  <Description>"Row 6"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>+14</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1528</ID>
          <Description>"Mouseover Item Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(mouseover_item,NMS.exe,49 8B 47 50 41 83 3E 01)
alloc(newmem,$1000,mouseover_item)

label(code)
label(return)
label(mouseover_item_ptr)

newmem:
  mov rax,mouseover_item_ptr
  mov [rax],r14
code:
  mov rax,[r15+50]
  cmp dword ptr [r14],01
  jmp return

mouseover_item_ptr:
  dq 0

mouseover_item:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(mouseover_item)
registersymbol(mouseover_item_ptr)

[DISABLE]
mouseover_item:
  db 49 8B 47 50 41 83 3E 01
unregistersymbol(mouseover_item)
unregistersymbol(mouseover_item_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+519942

"NMS.exe"+51991F: E8 FC CB F5 FF        -  call NMS.exe+476520
"NMS.exe"+519924: 4C 8B F8              -  mov r15,rax
"NMS.exe"+519927: 48 85 C0              -  test rax,rax
"NMS.exe"+51992A: 75 0D                 -  jne NMS.exe+519939
"NMS.exe"+51992C: 48 FF C3              -  inc rbx
"NMS.exe"+51992F: 48 3B DF              -  cmp rbx,rdi
"NMS.exe"+519932: 72 DC                 -  jb NMS.exe+519910
"NMS.exe"+519934: E9 72 05 00 00        -  jmp NMS.exe+519EAB
"NMS.exe"+519939: 4D 85 FF              -  test r15,r15
"NMS.exe"+51993C: 0F 84 69 05 00 00     -  je NMS.exe+519EAB
// ---------- INJECTING HERE ----------
"NMS.exe"+519942: 49 8B 47 50           -  mov rax,[r15+50]
"NMS.exe"+519946: 41 83 3E 01           -  cmp dword ptr [r14],01
// ---------- DONE INJECTING  ----------
"NMS.exe"+51994A: 0F 84 57 05 00 00     -  je NMS.exe+519EA7
"NMS.exe"+519950: 44 88 60 28           -  mov [rax+28],r12l
"NMS.exe"+519954: 45 33 C0              -  xor r8d,r8d
"NMS.exe"+519957: 49 8D 56 08           -  lea rdx,[r14+08]
"NMS.exe"+51995B: E8 20 99 37 00        -  call NMS.exe+893280
"NMS.exe"+519960: 0F 28 F0              -  movaps xmm6,xmm0
"NMS.exe"+519963: 41 B0 01              -  mov r8l,01
"NMS.exe"+519966: 49 8D 56 08           -  lea rdx,[r14+08]
"NMS.exe"+51996A: E8 11 99 37 00        -  call NMS.exe+893280
"NMS.exe"+51996F: 66 41 0F 6E 56 18     -  movd xmm2,[r14+18]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>113</ID>
              <Description>"Base Address"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>mouseover_item_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>209</ID>
                  <Description>"Quantity"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+18</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>115</ID>
                  <Description>"Max"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+1c</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1529</ID>
                  <Description>"Damaged"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+20</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>118</ID>
                  <Description>"Item ID"</Description>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>116</ID>
                  <Description>"Inventory Column"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+24</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>117</ID>
                  <Description>"Inventory Row"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+28</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>197</ID>
          <Description>"Mouseover Object Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(mouseover_mine,NMS.exe,8B 91 F8 00 00 00 85)
alloc(newmem,$1000,mouseover_mine)

label(code)
label(return)
label(mouseover_mine_ptr)

newmem:
  mov rdx,mouseover_mine_ptr
  mov [rdx],rcx
code:
  mov edx,[rcx+000000F8]
  jmp return

mouseover_mine_ptr:
  dq 0

mouseover_mine:
  jmp newmem
  nop
return:
registersymbol(mouseover_mine)
registersymbol(mouseover_mine_ptr)

[DISABLE]
mouseover_mine:
  db 8B 91 F8 00 00 00
unregistersymbol(mouseover_mine)
unregistersymbol(mouseover_mine_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+47BD40

"NMS.exe"+47BD20: 49 3B D3                 -  cmp rdx,r11
"NMS.exe"+47BD23: 7C E0                    -  jl NMS.exe+47BD05
"NMS.exe"+47BD25: 33 C0                    -  xor eax,eax
"NMS.exe"+47BD27: 48 8B 5C 24 08           -  mov rbx,[rsp+08]
"NMS.exe"+47BD2C: C3                       -  ret 
"NMS.exe"+47BD2D: 49 63 C1                 -  movsxd  rax,r9d
"NMS.exe"+47BD30: 48 69 C0 D0 00 00 00     -  imul rax,rax,000000D0
"NMS.exe"+47BD37: 48 03 03                 -  add rax,[rbx]
"NMS.exe"+47BD3A: 48 8B 5C 24 08           -  mov rbx,[rsp+08]
"NMS.exe"+47BD3F: C3                       -  ret 
// ---------- INJECTING HERE ----------
"NMS.exe"+47BD40: 8B 91 F8 00 00 00        -  mov edx,[rcx+000000F8]
// ---------- DONE INJECTING  ----------
"NMS.exe"+47BD46: 85 D2                    -  test edx,edx
"NMS.exe"+47BD48: 7E 55                    -  jle NMS.exe+47BD9F
"NMS.exe"+47BD4A: 8B C2                    -  mov eax,edx
"NMS.exe"+47BD4C: 66 0F 6E C2              -  movd xmm0,edx
"NMS.exe"+47BD50: 0F 57 D2                 -  xorps xmm2,xmm2
"NMS.exe"+47BD53: 2B 81 FC 00 00 00        -  sub eax,[rcx+000000FC]
"NMS.exe"+47BD59: B9 00 00 00 00           -  mov ecx,00000000
"NMS.exe"+47BD5E: 0F 48 C1                 -  cmovs eax,ecx
"NMS.exe"+47BD61: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"NMS.exe"+47BD64: 66 0F 6E C8              -  movd xmm1,eax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>198</ID>
              <Description>"Base Address"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>mouseover_mine_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>200</ID>
                  <Description>"Damage Taken"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+fc</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>199</ID>
                  <Description>"Damage Capacity"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+f8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1453</ID>
          <Description>"Set the Next Item Looted"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(next_loot,NMS.exe,48 89 85 10 01 00 00 F3)
alloc(newmem,$1000,next_loot)

label(code)
label(return)
label(next_loot_ptr)

newmem:
  mov r9,next_loot_ptr
  cmp byte ptr [r9],0
  je code
  mov rax,[r9]
  mov [rbp+00000108],rax
  mov rax,[r9+8]
  mov [rbp+00000110],rax
  xor rax,rax
  mov [r9],rax
  mov [r9+8],rax
  jmp return
code:
  mov [rbp+00000110],rax
  jmp return

next_loot_ptr:
  dq 0
  dq 0
  dq 0

next_loot:
  jmp newmem
  nop
  nop
return:
registersymbol(next_loot)
registersymbol(next_loot_ptr)

[DISABLE]
next_loot:
  db 48 89 85 10 01 00 00
unregistersymbol(next_loot)
unregistersymbol(next_loot_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A4195A

"NMS.exe"+A4191A: F3 41 0F 59 C0                 -  mulss xmm0,xmm8
"NMS.exe"+A4191F: F3 0F 11 44 24 60              -  movss [rsp+60],xmm0
"NMS.exe"+A41925: F3 0F 11 8D C0 00 00 00        -  movss [rbp+000000C0],xmm1
"NMS.exe"+A4192D: F3 44 0F 11 95 C4 00 00 00     -  movss [rbp+000000C4],xmm10
"NMS.exe"+A41936: F3 0F 11 85 C8 00 00 00        -  movss [rbp+000000C8],xmm0
"NMS.exe"+A4193E: C7 85 CC 00 00 00 00 00 80 3F  -  mov [rbp+000000CC],3F800000
"NMS.exe"+A41948: 4C 8B 4D 08                    -  mov r9,[rbp+08]
"NMS.exe"+A4194C: 49 8B 01                       -  mov rax,[r9]
"NMS.exe"+A4194F: 48 89 85 08 01 00 00           -  mov [rbp+00000108],rax
"NMS.exe"+A41956: 49 8B 41 08                    -  mov rax,[r9+08]
// ---------- INJECTING HERE ----------
"NMS.exe"+A4195A: 48 89 85 10 01 00 00           -  mov [rbp+00000110],rax
// ---------- DONE INJECTING  ----------
"NMS.exe"+A41961: F3 0F 10 05 DB 2B BE 00        -  movss xmm0,[NMS.exe+1624544]
"NMS.exe"+A41969: F3 0F 11 85 FC 00 00 00        -  movss [rbp+000000FC],xmm0
"NMS.exe"+A41971: F3 41 0F 10 50 20              -  movss xmm2,[r8+20]
"NMS.exe"+A41977: 8B C2                          -  mov eax,edx
"NMS.exe"+A41979: 48 69 D0 99 F8 76 5A           -  imul rdx,rax,5A76F899
"NMS.exe"+A41980: 48 03 D1                       -  add rdx,rcx
"NMS.exe"+A41983: 48 89 55 B0                    -  mov [rbp-50],rdx
"NMS.exe"+A41987: 48 8B C2                       -  mov rax,rdx
"NMS.exe"+A4198A: 48 C1 E8 20                    -  shr rax,20
"NMS.exe"+A4198E: 48 89 45 A0                    -  mov [rbp-60],rax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1454</ID>
              <Description>"Next Item"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">COM1:COM1
COMRARE1:COMRARE1
COMUNCOMMON1:COMUNCOMMON1
FUEL1:FUEL1
FUELRARE1:FUELRARE1
FUELUNCOMMON1:FUELUNCOMMON1
TECH1:TECH1
TECHRARE1:TECHRARE1
TECHUNCOMMON1:TECHUNCOMMON1
TRADEABLE1:TRADEABLE1
TRADEABLE2:TRADEABLE2
TRADEABLE3:TRADEABLE3
TRADEABLE4:TRADEABLE4
TRADEABLE5:TRADEABLE5
TRADEABLE6:TRADEABLE6
TRADEABLE7:TRADEABLE7
TRADEABLE8:TRADEABLE8
TRADEABLE9:TRADEABLE9
TRADEABLE10:TRADEABLE10
ACCESS1:ACCESS1
ACCESS2:ACCESS2
ACCESS3:ACCESS3
ALBUMENPEARL:ALBUMENPEARL
ALLOY1:ALLOY1
ALLOY2:ALLOY2
ALLOY3:ALLOY3
ALLOY4:ALLOY4
ALLOY5:ALLOY5
ALLOY6:ALLOY6
ALLOY7:ALLOY7
AQUASPHERE:AQUASPHERE
CAVECUBE:CAVECUBE
COMMODITY1:COMMODITY1
COMMODITY2:COMMODITY2
COMMODITY3:COMMODITY3
COMMODITY4:COMMODITY4
COMMODITY5:COMMODITY5
COMMODITY6:COMMODITY6
COMMODITY7:COMMODITY7
CURIO1:CURIO1
CURIO2:CURIO2
CURIO3:CURIO3
CURIO4:CURIO4
CURIO5:CURIO5
CURIO6:CURIO6
CURIO7:CURIO7
CURIO8:CURIO8
CURIO9:CURIO9
DRUGS1:DRUGS1
GRAVBALL:GRAVBALL
GRENFUEL1:GRENFUEL1
HACK1:HACK1
HYPERFUEL1:HYPERFUEL1
PRODFUEL1:PRODFUEL1
PRODFUEL2:PRODFUEL2
PRODFUEL3:PRODFUEL3
SACVENOM:SACVENOM
SENTINEL1:SENTINEL1
SENTINEL2:SENTINEL2
SHIELDFUEL1:SHIELDFUEL1
SHIELDFUEL2:SHIELDFUEL2
SHIELDFUEL3:SHIELDFUEL3
</DropDownList>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>next_loot_ptr</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>254</ID>
          <Description>"Player Position Data"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(PlayerPosAOB,NMS.exe,48 8B 81 B0 00 00 00 44 0F 29 5C)
alloc(newmem,$1000,PlayerPosAOB)

label(code)
label(return)
label(PlayerPosData)
registersymbol(PlayerPosData)

newmem:

code:
  mov rax,[rcx+000000B0]
  mov [PlayerPosData],rax
  jmp return
  PlayerPosData:

PlayerPosAOB:
  jmp code
  nop
  nop
return:
registersymbol(PlayerPosAOB)

[DISABLE]
PlayerPosAOB:
  db 48 8B 81 B0 00 00 00
unregistersymbol(PlayerPosAOB)
unregistersymbol(PlayerPosData)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1456</ID>
              <Description>"X"</Description>
              <LastState Value="114.6680374" RealAddress="7FF71DE76BC0"/>
              <VariableType>Float</VariableType>
              <Address>PlayerPosData</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1457</ID>
              <Description>"Y"</Description>
              <LastState Value="3.467198372" RealAddress="7FF71DE76BC4"/>
              <VariableType>Float</VariableType>
              <Address>PlayerPosData</Address>
              <Offsets>
                <Offset>34</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1458</ID>
              <Description>"Z"</Description>
              <LastState Value="30.58611488" RealAddress="7FF71DE76BC8"/>
              <VariableType>Float</VariableType>
              <Address>PlayerPosData</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>143</ID>
          <Description>"Laser Color"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(laser_color,NMS.exe,F3 0F 10 1E 45 33 C0 BA 07) // should be unique
alloc(newmem,$1000,"NMS.exe"+A425F6)

label(code)
label(return)
label(laser_color_ptr)

newmem:
  mov r8,laser_color_ptr
  mov [r8],rsi
code:
  movss xmm3,[rsi]
  xor r8d,r8d
  jmp return

laser_color_ptr:
  dq 0

laser_color:
  jmp newmem
  nop
  nop
return:
registersymbol(laser_color)
registersymbol(laser_color_ptr)

[DISABLE]
laser_color:
  db F3 0F 10 1E 45 33 C0
unregistersymbol(laser_color)
unregistersymbol(laser_color_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A425F6

"NMS.exe"+A425D0: 45 33 C0              -  xor r8d,r8d
"NMS.exe"+A425D3: BA 05 29 00 00        -  mov edx,00002905
"NMS.exe"+A425D8: 48 8B C8              -  mov rcx,rax
"NMS.exe"+A425DB: 41 FF 51 28           -  call qword ptr [r9+28]
"NMS.exe"+A425DF: 8B 57 08              -  mov edx,[rdi+08]
"NMS.exe"+A425E2: 48 8B 0D 07 26 BE 00  -  mov rcx,[NMS.exe+1624BF0]
"NMS.exe"+A425E9: E8 02 06 1E 00        -  call NMS.exe+C22BF0
"NMS.exe"+A425EE: 48 85 C0              -  test rax,rax
"NMS.exe"+A425F1: 74 16                 -  je NMS.exe+A42609
"NMS.exe"+A425F3: 4C 8B 08              -  mov r9,[rax]
// ---------- INJECTING HERE ----------
"NMS.exe"+A425F6: F3 0F 10 1E           -  movss xmm3,[rsi]
"NMS.exe"+A425FA: 45 33 C0              -  xor r8d,r8d
// ---------- DONE INJECTING  ----------
"NMS.exe"+A425FD: BA 07 29 00 00        -  mov edx,00002907
"NMS.exe"+A42602: 48 8B C8              -  mov rcx,rax
"NMS.exe"+A42605: 41 FF 51 28           -  call qword ptr [r9+28]
"NMS.exe"+A42609: 8B 57 08              -  mov edx,[rdi+08]
"NMS.exe"+A4260C: 48 8B 0D DD 25 BE 00  -  mov rcx,[NMS.exe+1624BF0]
"NMS.exe"+A42613: E8 D8 05 1E 00        -  call NMS.exe+C22BF0
"NMS.exe"+A42618: 48 85 C0              -  test rax,rax
"NMS.exe"+A4261B: 74 1A                 -  je NMS.exe+A42637
"NMS.exe"+A4261D: 4C 8B 08              -  mov r9,[rax]
"NMS.exe"+A42620: F3 0F 10 5E 04        -  movss xmm3,[rsi+04]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>204</ID>
              <Description>"Base Address"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>laser_color_ptr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>205</ID>
                  <Description>"Red (0.0 to 1.0)"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>206</ID>
                  <Description>"Green (0.0 to 1.0)"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>207</ID>
                  <Description>"Blue (0.0 to 1.0)"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1465</ID>
          <Description>"Decode All Words"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(words,NMS.exe,EB 02 32 C9 84 C9)
words:
  db 90 90 B1 01
registersymbol(words)

[DISABLE]
words:
  db EB 02 32 C9
unregistersymbol(words)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+892E6C

"NMS.exe"+892E4C: 0F 1F 40 00           -  nop [rax+00]
"NMS.exe"+892E50: 4C 39 00              -  cmp [rax],r8
"NMS.exe"+892E53: 75 06                 -  jne NMS.exe+892E5B
"NMS.exe"+892E55: 48 39 50 08           -  cmp [rax+08],rdx
"NMS.exe"+892E59: 74 0B                 -  je NMS.exe+892E66
"NMS.exe"+892E5B: 48 83 C0 18           -  add rax,18
"NMS.exe"+892E5F: 48 3B C1              -  cmp rax,rcx
"NMS.exe"+892E62: 74 0A                 -  je NMS.exe+892E6E
"NMS.exe"+892E64: EB EA                 -  jmp NMS.exe+892E50
"NMS.exe"+892E66: 41 0F B6 4C 04 10     -  movzx ecx,byte ptr [r12+rax+10]
// ---------- INJECTING HERE ----------
"NMS.exe"+892E6C: EB 02                 -  jmp NMS.exe+892E70
"NMS.exe"+892E6E: 32 C9                 -  xor cl,cl
"NMS.exe"+892E70: 84 C9                 -  test cl,cl
// ---------- DONE INJECTING  ----------
"NMS.exe"+892E72: 0F 84 A3 00 00 00     -  je NMS.exe+892F1B
"NMS.exe"+892E78: 48 8D 05 1D 4B AB 00  -  lea rax,[NMS.exe+134799C]
"NMS.exe"+892E7F: 48 89 45 A0           -  mov [rbp-60],rax
"NMS.exe"+892E83: 48 8D 05 0E 4B AB 00  -  lea rax,[NMS.exe+1347998]
"NMS.exe"+892E8A: 48 89 45 A8           -  mov [rbp-58],rax
"NMS.exe"+892E8E: 48 8D 05 2B 4B AB 00  -  lea rax,[NMS.exe+13479C0]
"NMS.exe"+892E95: 48 89 45 B0           -  mov [rbp-50],rax
"NMS.exe"+892E99: 48 8D 1D 5E C7 A9 00  -  lea rbx,[NMS.exe+132F5FE]
"NMS.exe"+892EA0: 48 89 5D B8           -  mov [rbp-48],rbx
"NMS.exe"+892EA4: 48 8D 05 0D 4B AB 00  -  lea rax,[NMS.exe+13479B8]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1470</ID>
          <Description>"Always Have Conversation Item"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(conversation,NMS.exe,0F 8C E4 00 00 00 40)
conversation:
  db 90 90 90 90 90 90
registersymbol(conversation)

[DISABLE]
conversation:
  db 0F 8C E4 00 00 00
unregistersymbol(conversation)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+55BFB5

"NMS.exe"+55BF98: 75 0F                 -  jne NMS.exe+55BFA9
"NMS.exe"+55BF9A: 48 3B 50 08           -  cmp rdx,[rax+08]
"NMS.exe"+55BF9E: 75 09                 -  jne NMS.exe+55BFA9
"NMS.exe"+55BFA0: 4C 3B 40 10           -  cmp r8,[rax+10]
"NMS.exe"+55BFA4: 75 03                 -  jne NMS.exe+55BFA9
"NMS.exe"+55BFA6: 03 78 18              -  add edi,[rax+18]
"NMS.exe"+55BFA9: 48 83 C0 30           -  add rax,30
"NMS.exe"+55BFAD: 48 3B C1              -  cmp rax,rcx
"NMS.exe"+55BFB0: 75 E3                 -  jne NMS.exe+55BF95
"NMS.exe"+55BFB2: 41 3B FA              -  cmp edi,r10d
// ---------- INJECTING HERE ----------
"NMS.exe"+55BFB5: 0F 8C E4 00 00 00     -  jl NMS.exe+55C09F
// ---------- DONE INJECTING  ----------
"NMS.exe"+55BFBB: 40 B6 01              -  mov sil,01
"NMS.exe"+55BFBE: 45 84 FF              -  test r15l,r15l
"NMS.exe"+55BFC1: 0F 84 D8 00 00 00     -  je NMS.exe+55C09F
"NMS.exe"+55BFC7: 49 8D 89 E0 03 00 00  -  lea rcx,[r9+000003E0]
"NMS.exe"+55BFCE: 89 5D 87              -  mov [rbp-79],ebx
"NMS.exe"+55BFD1: 89 5D 8B              -  mov [rbp-75],ebx
"NMS.exe"+55BFD4: 4C 8B 4D 87           -  mov r9,[rbp-79]
"NMS.exe"+55BFD8: 4C 8D 45 A7           -  lea r8,[rbp-59]
"NMS.exe"+55BFDC: 48 8D 91 30 04 00 00  -  lea rdx,[rcx+00000430]
"NMS.exe"+55BFE3: E8 68 35 F0 FF        -  call NMS.exe+45F550
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1542</ID>
          <Description>"Unlimited Warp Distance"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(warp_distance,NMS.exe,0F 28 7C 24 20 4C 8B BC)
alloc(newmem,$1000,warp_distance)//"NMS.exe"+46520F

label(code)
label(return)

newmem:
  mov dword ptr [rsp+20],0
  //mov dword ptr [rsp+24],0
code:
  movaps xmm7,[rsp+20]
  jmp return

warp_distance:
  jmp newmem
return:
registersymbol(warp_distance)

[DISABLE]
warp_distance:
  db 0F 28 7C 24 20
unregistersymbol(warp_distance)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+46520F

"NMS.exe"+4651EE: 0F 2F C6                 -  comiss xmm0,xmm6
"NMS.exe"+4651F1: 76 06                    -  jna NMS.exe+4651F9
"NMS.exe"+4651F3: 0F 28 F0                 -  movaps xmm6,xmm0
"NMS.exe"+4651F6: 48 8B EB                 -  mov rbp,rbx
"NMS.exe"+4651F9: 48 83 C0 0C              -  add rax,0C
"NMS.exe"+4651FD: 48 3B C1                 -  cmp rax,rcx
"NMS.exe"+465200: 75 E2                    -  jne NMS.exe+4651E4
"NMS.exe"+465202: 48 83 C3 30              -  add rbx,30
"NMS.exe"+465206: 48 3B DF                 -  cmp rbx,rdi
"NMS.exe"+465209: 0F 85 31 FF FF FF        -  jne NMS.exe+465140
// ---------- INJECTING HERE ----------
"NMS.exe"+46520F: 0F 28 7C 24 20           -  movaps xmm7,[rsp+20]
// ---------- DONE INJECTING  ----------
"NMS.exe"+465214: 4C 8B BC 24 88 00 00 00  -  mov r15,[rsp+00000088]
"NMS.exe"+46521C: 4C 8B AC 24 80 00 00 00  -  mov r13,[rsp+00000080]
"NMS.exe"+465224: 48 8B 74 24 78           -  mov rsi,[rsp+78]
"NMS.exe"+465229: 48 85 ED                 -  test rbp,rbp
"NMS.exe"+46522C: 74 0A                    -  je NMS.exe+465238
"NMS.exe"+46522E: 48 8B 45 24              -  mov rax,[rbp+24]
"NMS.exe"+465232: 49 89 04 24              -  mov [r12],rax
"NMS.exe"+465236: EB 08                    -  jmp NMS.exe+465240
"NMS.exe"+465238: 49 C7 04 24 FF FF FF FF  -  mov [r12],FFFFFFFF
"NMS.exe"+465240: 49 8B C4                 -  mov rax,r12
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Pointers"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>804000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Units"</Description>
          <LastState Value="0" RealAddress="20E77A014E4"/>
          <VariableType>4 Bytes</VariableType>
          <Address>"NMS.exe"+0163FCB0</Address>
          <Offsets>
            <Offset>4E4</Offset>
            <Offset>48</Offset>
            <Offset>50</Offset>
            <Offset>60</Offset>
            <Offset>C0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>1543</ID>
          <Description>"Boltcaster Ammo"</Description>
          <LastState Value="48" RealAddress="20E77CF9558"/>
          <VariableType>4 Bytes</VariableType>
          <Address>"NMS.exe"+015ACE88</Address>
          <Offsets>
            <Offset>1038</Offset>
            <Offset>70</Offset>
            <Offset>50</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>64</ID>
      <Description>"Separator"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>craft</Name>
      <Address>7FF6D5750C53</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>craft2</Name>
      <Address>7FF6D57511DA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sprint</Name>
      <Address>7FF7B253AF1A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sell</Name>
      <Address>7FF7B1F8F760</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>unlock</Name>
      <Address>7FF7B2560A9D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>unlock2</Name>
      <Address>7FF7B1F8F7A4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting2</Name>
      <Address>7FF7B1F911DA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting3</Name>
      <Address>7FF7B2045124</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting4</Name>
      <Address>7FF7B1F9054C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>crafting5</Name>
      <Address>7FF7B1F920CC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>reload</Name>
      <Address>7FF7B255C175</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>grenades</Name>
      <Address>7FF7B255BDF9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>overheat</Name>
      <Address>7FF7B2557626</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>laser</Name>
      <Address>7FF7B255A185</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>environment</Name>
      <Address>7FF7B255DAAB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>onehit</Name>
      <Address>7FF7B23F0ADF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>elements1</Name>
      <Address>7FF71CBEF130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>noreq</Name>
      <Address> 7FF71CBF0638</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mining</Name>
      <Address> 7FF71D1B9859</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>heat</Name>
      <Address> 7FF71D1B6D03</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>boltcaster</Name>
      <Address> 7FF71D1BB843</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>nades</Name>
      <Address> 7FF71D1BB4C6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>inventory</Name>
      <Address> 7FF71CBF0F74</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>elements</Name>
      <Address> 7FF71CBEF130</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>lifeSupport</Name>
      <Address> 7FF71D194DCE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>weather</Name>
      <Address> 7FF71D1BD17B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>run</Name>
      <Address> 7FF71D19A5E7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jetpack</Name>
      <Address> 7FF71D199E80</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address> 7FF71D197636</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>launchThrust</Name>
      <Address> 7FF71D25D8BD</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pulse</Name>
      <Address> 7FF71D289612</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>phaseBeam</Name>
      <Address> 7FF71D28D32F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>shipHeat</Name>
      <Address> 7FF71D28C52E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>shipShield</Name>
      <Address> 7FF71D1976A6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>hyperdrive</Name>
      <Address> 7FF71D166B46</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>atlas</Name>
      <Address> 7FF71D1C016A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>oneHK</Name>
      <Address> 7FF71D0501AB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>words</Name>
      <Address> 7FF71D02253C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>conversation</Name>
      <Address> 7FF71CCEB685</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PlayerPosData</Name>
      <Address>7FF71C69001C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>PlayerPosAOB</Name>
      <Address> 7FF71D1961D4</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
