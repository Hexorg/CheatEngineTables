<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>76</ID>
      <Description>"CVE_R25"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>63</ID>
          <Description>"Player Money"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>007402EC</Address>
          <Offsets>
            <Offset>30</Offset>
            <Offset>68</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>107</Key>
              </Keys>
              <Value>10000</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"/ - Enable all Support mission actions"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
// cmp byte ptr [esp+04],00
cmp eax,eax

exit:
jmp returnhere

"MC2XGame.exe"+A2CA0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+A2CA0:
cmp byte ptr [esp+04],00
//Alt: db 80 7C 24 04 00


//MC2XGame.exe+A2CA0 - 80 7C 24 04 00        - cmp byte ptr [esp+04],00 { 0 }
//MC2XGame.exe+A2CA5 - 74 07                 - je MC2XGame.exe+A2CAE
//MC2XGame.exe+A2CA7 - B8 02000000           - mov eax,00000002 { 2 }
//MC2XGame.exe+A2CAC - EB 0C                 - jmp MC2XGame.exe+A2CBA
//MC2XGame.exe+A2CAE - 33 C0                 - xor eax,eax
//MC2XGame.exe+A2CB0 - 83 B9 88000000 01     - cmp dword ptr [ecx+00000088],01 { 1 } &lt;&lt;&lt;&lt;&lt;
//MC2XGame.exe+A2CB7 - 0F94 C0               - sete al
//MC2XGame.exe+A2CBA - 8B 91 84000000        - mov edx,[ecx+00000084]
//MC2XGame.exe+A2CC0 - 52                    - push edx
//MC2XGame.exe+A2CC1 - 50                    - push eax
//MC2XGame.exe+A2CC2 - 51                    - push ecx
//MC2XGame.exe+A2CC3 - 89 81 88000000        - mov [ecx+00000088],eax
//MC2XGame.exe+A2CC9 - E8 A2D3FFFF           - call MC2XGame.exe+A0070
//MC2XGame.exe+A2CCE - C2 0400               - ret 0004 { 4 }

// enum States
//	{
//		ENABLED = 0,
//		PRESSED,
//		DISABLED,
//		AMBIGUOUS,
//		HIDDEN
//	};
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>111</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"8 - Mech characteristics"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256)
label(returnhere)
label(originalcode)
label(exit)

label(MechC)
registersymbol(MechC)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fld dword ptr [ecx+1C]
fmul qword ptr [MC2XGame.exe+29B310]

//new code
mov [MechC], ecx

exit:
jmp returnhere

MechC:
dd 0

"MC2XGame.exe"+F2300:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
unregistersymbol(MechC)
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+F2300:
fld dword ptr [ecx+1C]
fmul qword ptr [MC2XGame.exe+29B310]
//Alt: db D9 41 1C DC 0D 10 B3 69 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>104</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>24</ID>
              <Description>"MechC Weight"</Description>
              <VariableType>Float</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>25</ID>
              <Description>"7 - MechC Heat Max"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>10</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>26</ID>
              <Description>"MechC Current Armor"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>27</ID>
              <Description>"MechC Max Armor"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"MechC Speed"</Description>
              <VariableType>Float</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>71</ID>
              <Description>"Mech_componentAreaWidth"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>72</ID>
              <Description>"Mech_componentAreaHeight"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Mechwarrior skills"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256)
label(returnhere)
label(originalcode)
label(exit)

label(MechW)
registersymbol(MechW)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

mov [MechW],eax
originalcode:
fld dword ptr [eax+24]
fstp dword ptr [esp+1C]

exit:
jmp returnhere

MechW:
dd 0

"MC2XGame.exe"+110CCC:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
unregistersymbol(MechW)
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+110CCC:
fld dword ptr [eax+24]
fstp dword ptr [esp+1C]
//Alt: db D9 40 24 D9 5C 24 1C

//MC2XGame.exe+110CBB - 81 C1 E0130000        - add ecx,000013E0 { 5088 }
//MC2XGame.exe+110CC1 - E8 7AD5F8FF           - call MC2XGame.exe+9E240
//MC2XGame.exe+110CC6 - 8B 85 EC040000        - mov eax,[ebp+000004EC]
//MC2XGame.exe+110CCC - D9 40 24              - fld dword ptr [eax+24]
//MC2XGame.exe+110CCF - D9 5C 24 1C           - fstp dword ptr [esp+1C]
//MC2XGame.exe+110CD3 - D9 44 24 1C           - fld dword ptr [esp+1C]
//MC2XGame.exe+110CD7 - E8 34DC1500           - call MC2XGame.exe+26E910
//MC2XGame.exe+110CDC - 8B 35 88736800        - mov esi,[MC2XGame.exe+287388]
//MC2XGame.exe+110CE2 - 50                    - push eax

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>31</ID>
              <Description>"Gunnery"</Description>
              <VariableType>Float</VariableType>
              <Address>MechW</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>32</ID>
              <Description>"Piloting"</Description>
              <VariableType>Float</VariableType>
              <Address>MechW</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>33</ID>
              <Description>"jump"</Description>
              <VariableType>Float</VariableType>
              <Address>MechW</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"sensor"</Description>
              <VariableType>Float</VariableType>
              <Address>MechW</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>". - God Mode "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fld dword ptr [esi+eax*8+0000024C]

push ecx
mov ecx, dword ptr[esi+000001AC]  // old test on 000001AC
cmp ecx, 00FF0011                 // old test on 00FF00FF
jne exit
mov dword ptr[edi+08],(float)0.0  // si mon mech, degats = 0


exit:
pop ecx
jmp returnhere

"MC2XGame.exe"+31302:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+31302:
fld dword ptr [esi+eax*8+0000024C]
//Alt: db D9 84 C6 4C 02 00 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>110</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"3 - Components Availability "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here


originalcode:
mov eax,[ecx+000032AC]

// new
mov byte ptr [eax+57],01

exit:
jmp returnhere

"MC2XGame.exe"+D7763:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+D7763:
mov eax,[ecx+000032AC]
//Alt: db 8B 81 AC 32 00 00


//MC2XGame.exe+D7760 - 8B 4B 08              - mov ecx,[ebx+08]
//MC2XGame.exe+D7763 - 8B 81 AC320000        - mov eax,[ecx+000032AC]
//MC2XGame.exe+D7769 - 80 78 57 00           - cmp byte ptr [eax+57],00 { 0 } &lt;&lt;&lt;&lt;&lt;
//MC2XGame.exe+D776D - 0F84 7E000000         - je MC2XGame.exe+D77F1
//MC2XGame.exe+D7773 - 8B 40 04              - mov eax,[eax+04]
//MC2XGame.exe+D7776 - 3B 85 D8140000        - cmp eax,[ebp+000014D8]

</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>99</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"6 - Mechs Availability "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ecx,[esi+08]
mov byte ptr [ecx+00000378],01 // Mech is available now
cmp byte ptr [ecx+00000378],00

exit:
jmp returnhere

"MC2XGame.exe"+DD180:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+DD180:
mov ecx,[esi+08]
cmp byte ptr [ecx+00000378],00
//Alt: db 8B 4E 08 80 B9 78 03 00 00 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>102</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>77</ID>
      <Description>"TME_R25"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Player Money"</Description>
          <LastState Value="263300" RealAddress="07DD5CB8"/>
          <VariableType>4 Bytes</VariableType>
          <Address>007412EC</Address>
          <Offsets>
            <Offset>30</Offset>
            <Offset>68</Offset>
          </Offsets>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>107</Key>
              </Keys>
              <Value>10000</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"Enable all mechs"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov byte ptr [ecx+00000378],01 // Mech is available now
cmp byte ptr [ecx+00000378],00

exit:
jmp returnhere

"MC2XGame.exe"+DDDB3:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+DDDB3:
cmp byte ptr [ecx+00000378],00
//Alt: db 80 B9 78 03 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"Enable all Components"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,128)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax,[ecx+000032AC]
// new
mov byte ptr [eax+57],01

exit:
jmp returnhere

"MC2XGame.exe"+D81F3:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+D81F3:
mov eax,[ecx+000032AC]
//Alt: db 8B 81 AC 32 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Enable all Support mission actions"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
// cmp byte ptr [esp+04],00
cmp eax,eax

exit:
jmp returnhere

"MC2XGame.exe"+A2CA0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+A2CA0:
cmp byte ptr [esp+04],00
//Alt: db 80 7C 24 04 00


//MC2XGame.exe+A2CA0 - 80 7C 24 04 00        - cmp byte ptr [esp+04],00 { 0 }
//MC2XGame.exe+A2CA5 - 74 07                 - je MC2XGame.exe+A2CAE
//MC2XGame.exe+A2CA7 - B8 02000000           - mov eax,00000002 { 2 }
//MC2XGame.exe+A2CAC - EB 0C                 - jmp MC2XGame.exe+A2CBA
//MC2XGame.exe+A2CAE - 33 C0                 - xor eax,eax
//MC2XGame.exe+A2CB0 - 83 B9 88000000 01     - cmp dword ptr [ecx+00000088],01 { 1 } &lt;&lt;&lt;&lt;&lt;
//MC2XGame.exe+A2CB7 - 0F94 C0               - sete al
//MC2XGame.exe+A2CBA - 8B 91 84000000        - mov edx,[ecx+00000084]
//MC2XGame.exe+A2CC0 - 52                    - push edx
//MC2XGame.exe+A2CC1 - 50                    - push eax
//MC2XGame.exe+A2CC2 - 51                    - push ecx
//MC2XGame.exe+A2CC3 - 89 81 88000000        - mov [ecx+00000088],eax
//MC2XGame.exe+A2CC9 - E8 A2D3FFFF           - call MC2XGame.exe+A0070
//MC2XGame.exe+A2CCE - C2 0400               - ret 0004 { 4 }

// enum States
//	{
//		ENABLED = 0,
//		PRESSED,
//		DISABLED,
//		AMBIGUOUS,
//		HIDDEN
//	};
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>81</ID>
          <Description>"Mechwarrior skills"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,128)
label(returnhere)
label(originalcode)
label(exit)

label(MechW)
registersymbol(MechW)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

mov [MechW],eax
originalcode:
fld dword ptr [eax+24]
fstp dword ptr [esp+1C]

exit:
jmp returnhere

MechW:
dd 0

"MC2XGame.exe"+11194C:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
unregistersymbol(MechW)
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+11194C:
fld dword ptr [eax+24]
fstp dword ptr [esp+1C]
//Alt: db D9 40 24 D9 5C 24 1C
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>85</ID>
              <Description>"sensor"</Description>
              <VariableType>Float</VariableType>
              <Address>MechW</Address>
              <Offsets>
                <Offset>30</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>84</ID>
              <Description>"jump"</Description>
              <VariableType>Float</VariableType>
              <Address>MechW</Address>
              <Offsets>
                <Offset>2C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>83</ID>
              <Description>"Piloting"</Description>
              <VariableType>Float</VariableType>
              <Address>MechW</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>82</ID>
              <Description>"Gunnery"</Description>
              <VariableType>Float</VariableType>
              <Address>MechW</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>86</ID>
          <Description>"Mech characteristics"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,256)
label(returnhere)
label(originalcode)
label(exit)


label(MechC)
registersymbol(MechC)
newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
fld dword ptr [ecx+1C]
fmul qword ptr [MC2XGame.exe+29C300]

//new code
mov [MechC], ecx

exit:
jmp returnhere

MechC:
dd 0

"MC2XGame.exe"+F2EF0:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
unregistersymbol(MechC)
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"MC2XGame.exe"+F2EF0:
fld dword ptr [ecx+1C]
fmul qword ptr [MC2XGame.exe+29C300]
//Alt: db D9 41 1C DC 0D 00 C3 69 00
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>87</ID>
              <Description>"MechC Weight"</Description>
              <VariableType>Float</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>88</ID>
              <Description>"7 - MechC Heat Max"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>10</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>89</ID>
              <Description>"MechC Current Armor"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>90</ID>
              <Description>"MechC Max Armor"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>91</ID>
              <Description>"MechC Speed"</Description>
              <VariableType>Float</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>92</ID>
              <Description>"Mech_componentAreaWidth"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>93</ID>
              <Description>"Mech_componentAreaHeight"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>MechC</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>PlayerInfo</Name>
      <Address>027B0011</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Info about this table:
</Comments>
</CheatTable>
