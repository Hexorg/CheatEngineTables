<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Light of Altair Script AOB"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//=========================================
// Light of Altair
// Game Version  : 1.00
// Script Version: 1.0
// CE Version    : 6.2
// Resource, Population, GM and fast travel
// 09-Oct-2009
// 04-Jan-2013 AOB
//=========================================

[ENABLE]
//=========================================
alloc(MyCode,4096,Altair.exe)
//=========================================
AOBScan(aob_MonRes,8b 44 24 04 8b 04 81 c2 04 00)
AOBScan(aob_MonColony,8b 8e ac 00 00 00 2b c8 0f af)
AOBScan(aob_GodMode,83 45 3c f6 8b 44 24 14 c7 40 34 0a)
AOBScan(aob_MonShip,8b 8e ec 00 00 00 83 c4 0c dc 0d)
AOBScan(aob_MonTrek,8b 4e 44 3b 48 44 8b 4b 18 ?? ?? 81)
AOBScan(aob_MonID,3a cb 8b 54 24 04 8b 14 95 ?? ?? ?? ?? 89)

//=========================================
// Declaration section
label(p_MonRes)
label(p_MonColony)
label(p_GodMode)
label(p_MonShip)
label(p_MonTrek)
label(p_MonID)

label(_MonRes)
label(_BackMR)
label(_ExitMR)
label(_MonColony)
label(_BackMC)
label(_ExitMC)
label(_MonC0)
label(_MonC1)
label(_MonC2)
label(_MonC3)
label(_GodMode)
label(_BackGM)
label(_ExitGM)
label(_MonShip)
label(_BackMS)
label(_ExitMS)
label(_MonS0)
label(_MonS1)
label(_MonTrek)
label(_BackMT)
label(_ExitMT)
label(_MonID)
label(_BackMI)
label(_ExitMI)
label(pColony)
label(iEnableMR)
label(iEnableMC)
label(iEnableGM)
label(iEnableMA)
label(iEnableMT)
label(iMaxPop)
label(iID)
label(iIDP)
label(iEAX)

registersymbol(MyCode)
registersymbol(pColony)
registersymbol(iEnableMR)
registersymbol(iEnableMC)
registersymbol(iEnableGM)
registersymbol(iEnableMA)
registersymbol(iEnableMT)
registersymbol(iID)
registersymbol(iIDP)

registersymbol(p_MonRes)
registersymbol(p_MonColony)
registersymbol(p_GodMode)
registersymbol(p_MonShip)
registersymbol(p_MonTrek)
registersymbol(p_MonID)

//=========================================
MyCode:
//=========================================
_MonRes:
 mov eax,[esp+04]             // Original code

 cmp dword ptr [iEnableMR],0
 je _ExitMR                   // Jump if feature is disabled

 or eax,eax                   // Player´s resource?
 jnz _ExitMR                  // Jump if false

 cmp dword ptr [ecx],#1000000 // Current value &gt;= 1000000?
 jge _ExitMR                  // Jump if true

 add dword ptr [ecx],#1000000 // Add 1000000 to current value

_ExitMR:
 mov eax,[ecx+eax*4]          // Original code
 jmp _BackMR                  // Back to main code

//=========================================
_MonColony:
 push eax
 push edx

 mov [pColony],esi            // Save ptr for debugging

 cmp dword ptr [iEnableMC],0
 je _MonC3                    // Jump if feature is disabled

 mov ecx,[esi+50]             // Get Colony Level
 or ecx,ecx                   // Valid?
 jz _MonC3                    // Jump if false

 cmp ecx,#50                  // Valid?
 jg _MonC3                    // Jump if false

 cmp ecx,5                    // Colony Level &lt; 6?
 jle _MonC1                   // Jump if true

 cmp ecx,#10                  // Colony Level &gt; 10?
 jg _MonC0                    // Jump if true

 lea ecx,[ecx-05]             // ECX = ECX - 5
 mov eax,#1000                // EAX = 1000
 mul ecx                      // EDX:EAX = EAX * ECX
 mov ecx,eax                  // Get max pop
 jmp _MonC2

_MonC0:
 lea ecx,[ecx-0a]             // ECX = ECX - 10
 mov eax,#6333                // EAX = 6333
 mul ecx                      // EDX:EAX = EAX * ECX
 mov ecx,eax                  // Get max pop
 add ecx,#5000
 jmp _MonC2

_MonC1:
 mov ecx,[ecx*4+iMaxPop]      // Get max pop

_MonC2:
 dec ecx                      // Max pop - 1

 cmp ecx,[esi+000000ac]       // Current pop &gt; Max-1?
 jle _MonC3                   // Jump if true

 mov [esi+000000ac],ecx       // Update current pop

_MonC3:
 mov edx,[esi+0c]             // Get ptr to planet info
 or edx,edx
 jz _ExitMC

 mov eax,[edx+00000098]       // Get owner ID
 mov [iIDP],eax               // Save it for further use

_ExitMC:
 pop edx
 pop eax

 mov ecx,[esi+000000ac]       // Original code
 jmp _BackMC                  // Back to main code

//=========================================
_GodMode:
 cmp dword ptr [iEnableGM],0
 je _ExitGM                   // Jump if feature is disabled

 mov eax,[ebp+34]             // Get ship ID?
 cmp eax,[iID]                // Player´s ship?
 jne _ExitGM                  // Jump if false

 add dword ptr [ebp+3c],#10   // Add 10 to current value

_ExitGM:
 add dword ptr [ebp+3c],f6    // Original code (add -10)
 mov eax,[esp+14]             // Original code
 jmp _BackGM                  // Back to main code

//=========================================
_MonShip:
 mov ecx,[esi+34]             // Get ship ID?
 cmp ecx,[iID]                // Player´s ship?
 jne _ExitMS                  // Jump if false

_MonS0:
 cmp dword ptr [iEnableGM],0
 je _MonS1                    // Jump if feature is disabled

 mov ecx,#10000
 mov [esi+4c],ecx             // Maximum HP = 10000
 mov [esi+3c],ecx             // Current HP = 10000
 mov [esi+40],ecx             // Current HP = 10000

 mov ecx,00
 mov [esi+00000098],ecx       // Other damage = 0
 mov [esi+0000009c],ecx       // Other damage = 0
 mov [esi+000000A0],ecx       // Other damage = 0

 fild dword ptr [esi+50]      // Get Maximum shield
 fstp dword ptr [esi+44]      // Current shield = maximum

_MonS1:
 cmp dword ptr [iEnableMA],0
 je _ExitMS                   // Jump if feature is disabled

 mov ecx,[esi+78]             // ---&gt; Restore all ammo
 mov [esi+58],ecx
 mov ecx,[esi+7c]
 mov [esi+5c],ecx
 mov ecx,[esi+80]
 mov [esi+60],ecx
 mov ecx,[esi+84]
 mov [esi+64],ecx
 mov ecx,[esi+88]
 mov [esi+68],ecx
 mov ecx,[esi+8c]
 mov [esi+6c],ecx
 mov ecx,[esi+90]
 mov [esi+70],ecx
 mov ecx,[esi+94]
 mov [esi+74],ecx             // &lt;---

_ExitMS:
 mov ecx,[esi+000000ec]       // Original code
 jmp _BackMS                  // Back to main code

//=========================================
_MonTrek:
 cmp dword ptr [iEnableMT],0
 je _ExitMT                   // Jump if feature is disabled

 cmp dword ptr [ebx+18],04    // Current number of days &lt;= 4?
 jle _ExitMT                  // Jump if true

 mov dword ptr [ebx+18],04    // Make current value = 4

_ExitMT:
 mov ecx,[esi+44]             // Original code
 cmp ecx,[eax+44]             // Original code
 jmp _BackMT                  // Back to main code

//========================================= NHP
_MonID:
 cmp cl,bl                    // Original code
 mov edx,[esp+04]             // Original code

_ExitMI:
 mov [iID],edx                // Save Faction ID
 jmp _BackMI                  // Back to main code
//=========================================
// Variables
pColony:
 dd 0
iEnableMR:
 dd 1
iEnableMC:
 dd 1
iEnableGM:
 dd 1
iEnableMA:
 dd 1
iEnableMT:
 dd 1
iEAX:
 dd 0
iID:
 dd 0
iIDP:
 dd 0
iMaxPop:
 dd 0
 dd #20                       // Level 1 max pop
 dd #30                       // Level 2 max pop
 dd #50                       // Level 3 max pop
 dd #366                      // Level 4 max pop
 dd #683                      // Level 5 max pop

//=========================================
// Hacking Points
//Altair.exe+01bfe0:
aob_MonRes:
p_MonRes:
 jmp _MonRes
 nop
 nop
_BackMR:

//Altair.exe+03bfa0:
aob_MonColony:
p_MonColony:
 jmp _MonColony
 nop
_BackMC:

//Altair.exe+0645d9:
aob_GodMode:
p_GodMode:
 jmp _GodMode
 nop
 nop
 nop
_BackGM:

//Altair.exe+064bb4:
aob_MonShip:
p_MonShip:
 jmp _MonShip
 nop
_BackMS:

//Altair.exe+038e48:
aob_MonTrek:
p_MonTrek:
 jmp _MonTrek
 nop
_BackMT:

//Altair.exe+08cb45:
aob_MonID:
p_MonID:
 jmp _MonID
 nop
_BackMI:

//=========================================
// Original Codes
[DISABLE]
//Altair.exe+01bfe0:
p_MonRes:
// mov eax,[esp+04]
// mov eax,[ecx+eax*4]
 db 8b 44 24 04 8b 04 81

//Altair.exe+03bfa0:
p_MonColony:
// mov ecx,[esi+000000ac]
 db 8b 8e ac 00 00 00

//Altair.exe+0645d9:
p_GodMode:
// add dword ptr [ebp+3c],f6
// mov eax,[esp+14]
 db 83 45 3c f6 8b 44 24 14

//Altair.exe+064bb4:
p_MonShip:
// mov ecx,[esi+000000ec]
 db 8b 8e ec 00 00 00

//Altair.exe+038e48:
p_MonTrek:
// mov ecx,[esi+44]
// cmp ecx,[eax+44]
db 8b 4e 44 3b 48 44

//Altair.exe+08cb45:
// mov edx,[edx*4+altair.exe+25b914]
//Altair.exe+08cb3f: //NHP
p_MonID:
// cmp cl,bl
// mov edx,[esp+04]
 db 3a cb 8b 54 24 04

dealloc(MyCode)
unregistersymbol(MyCode)
unregistersymbol(pColony)
unregistersymbol(iEnableMR)
unregistersymbol(iEnableMC)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMA)
unregistersymbol(iEnableMT)
unregistersymbol(iID)
unregistersymbol(iIDP)

unregistersymbol(p_MonRes)
unregistersymbol(p_MonColony)
unregistersymbol(p_GodMode)
unregistersymbol(p_MonShip)
unregistersymbol(p_MonTrek)
unregistersymbol(p_MonID)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Enable/Disable Unlimited Credit"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMR</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Enable/Disable Colony Population"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMC</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Enable/Disable God Mode"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableGM</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Enable/Disable Unlimited Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMA</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Enable/Disable Fast Travel"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMT</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
