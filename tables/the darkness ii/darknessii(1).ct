<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Skidrow-Ali213 "</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Unlimited Health (Skidrow)-( Ali213) Only"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(myhp)
alloc(newmem,2048)
alloc(myhp,4)
label(returnhere)
label(originalcode)
label(exit)
label(hp1)
registersymbol(hp1)
aobscan(aobhp1,8B 81 C0 04 00 00)

aobhp1:
hp1:
jmp newmem
nop
returnhere:

newmem:
cmp dword ptr [ecx+484],(float)1.7
cmp byte ptr [ecx+4e0],01
jne originalcode
nop
nop
nop
nop
nop
nop
jmp exit

originalcode:
mov eax,[ecx+000004C0]

exit:
jmp returnhere

[DISABLE]
unregistersymbol(myhp)
dealloc(newmem)
dealloc(myhp)
hp1:
db 8B 81 C0 04 00 00
unregistersymbol(hp1)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"One Shoot Kill   (Skidrow)-( Ali213) Only"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(kill_on)
alloc(newmem,2048)
alloc(kill_on,4)
label(returnhere)
label(exit)
label(jmb1)
label(jmb2)
label(k1)
registersymbol(k1)
aobscan(aobk1,8B 81 C0 04 00 00)

00B87B53:
k1:
jmp newmem
nop
returnhere:

newmem:
pushad
cmp byte ptr [ecx+4e0],01
je jmb1
mov [ecx+000004C0],(int)1
je jmb2
mov [kill_on],1
jmb2:
jmb1:
popad

exit:
jmp returnhere

 
[DISABLE]
unregistersymbol(kill_on)
dealloc(newmem)
dealloc(kill_on
k1:
db 8B 81 C0 04 00 00
unregistersymbol(k1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Unlimited Ammo (Skidrow)-( Ali213) Only"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(myammo_on)
alloc(newmem,2048)
alloc(myammo_on,4)
label(returnhere)
label(exit)
label(am1)
registersymbol(am1)
aobscan(aobam1,89 86 48 0A 00 00)

00AF85CF:
am1:
jmp newmem
nop
returnhere:

newmem:
mov byte ptr [myammo_on],1
mov [esi+00000A48],(int)30

exit:
jmp returnhere

[DISABLE]
unregistersymbol(myammo_on)
dealloc(newmem)
dealloc(myammo_on)
am1:
db 89 86 48 0A 00 00
unregistersymbol(am1)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Fire Power Off  (Fog Guns)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(firelight_off)
alloc(newmem,2048)
alloc(firelight_off,1)
label(returnhere)
label(exit)
label(fire1)
label(fire2)
registersymbol(fire2)
aobscan(aob2,89 02 0F 28 86 C0 01 00 00)

aob2:
fire2:
jmp newmem
nop
nop
nop
nop
returnhere:

newmem:
pushad
mov [edx],0
je fire1
mov byte ptr [firelight_off],1
fire1:
popad

exit:
jmp returnhere

[DISABLE]
unregistersymbol(firelight_off)
dealloc(newmem)
dealloc(firelight_off)
fire2:
db 89 02 0F 28 86 C0 01 00 00
unregistersymbol(fire2)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Rapidfire "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(rapid_on)
alloc(newmem,2048)
alloc(rapid_on,4)
label(returnhere)
label(exit)
label(rpd)
label(test)
label(rpd1)
registersymbol(rpd1)
aobscan(aobrpd1,F3 0F 11 81 08 0B 00 00)

aobrpd1:
rpd1:
jmp newmem
nop
nop
nop
returnhere:

newmem:
pushad
mov byte ptr [rapid_on],1
je test
mov [ecx+00000B08],(int)0
test:
rpd:
popad

exit:
jmp returnhere

[DISABLE]
unregistersymbol(rapid_on)
dealloc(newmem)
dealloc(rapid_on)
rpd1:
db F3 0F 11 81 08 0B 00 00
unregistersymbol(rpd1)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Unlimited Essence"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(ssec_on)
alloc(newmem,2048)
alloc(ssec_on,4)
label(returnhere)
label(exit)
label(ssc)
label(ss1)
registersymbol(ss1)
aobscan(aobss1,89 46 08 83 7C 24 18 04)

aobss1:
ss1:
jmp newmem
nop
nop
nop
returnhere:

newmem:
pushad
mov [esi+08],(int)999999
je ssc
mov byte ptr [ssec_on],1
ssc:
popad

exit:
jmp returnhere

[DISABLE]
unregistersymbol(ssec_on)
dealloc(newmem)
dealloc(ssec_on)
ss1:
db 89 46 08 83 7C 24 18 04
unregistersymbol(ss1)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"Stop Croshair "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(cross_on)
alloc(newmem,2048)
alloc(cross_on,4)
label(returnhere)
label(exit)
label(crr)
label(crs1)
registersymbol(crs1)
aobscan(aobcrs1,D9 9C 8E F8 00 00 00)

aobcrs1:
crs1:
jmp newmem
nop
nop
returnhere:


newmem:
pushad
mov dword ptr [esi+ecx*4+000000F8],(float)0
je crr
mov [cross_on],1
crr:
popad


exit:
jmp returnhere

[DISABLE]
unregistersymbol(cross_on)
dealloc(newmem)
dealloc(cross_on)
crs1:
db D9 9C 8E F8 00 00 00
unregistersymbol(crs1)

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>45</ID>
      <Description>"Limited edition"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Unlimited Health  (limited edition) Only"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(myhp)
alloc(newmem,2048)
alloc(myhp,4)
label(returnhere)
label(originalcode)
label(exit)
label(hp1)
registersymbol(hp1)
aobscan(aobhp1,8B 81 C0 04 00 00)

009120D0:
hp1:
jmp newmem
nop
returnhere:

newmem:
cmp dword ptr [ecx+484],(float)1.75
jne originalcode
nop
nop
nop
nop
nop
nop
jmp exit

originalcode:
mov eax,[ecx+000004C0]

exit:
jmp returnhere

[DISABLE]
unregistersymbol(myhp)
dealloc(newmem)
dealloc(myhp)
hp1:
db 8B 81 C0 04 00 00
unregistersymbol(hp1)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"One Shoot Kill (limited edition) Only"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(killlimit_on)
alloc(newmem,2048)
alloc(killlimit_on,4)
label(returnhere)
label(exit)
label(k111)
registersymbol(k111)
aobscan(aobk11,8B 81 C0 04 00 00)

00582EF3:
k111:
jmp newmem
nop
returnhere:

newmem:
mov [ecx+000004C0],1
mov [killlimit_on],1

exit:
jmp returnhere

 
[DISABLE]
unregistersymbol(killlimit_on)
dealloc(newmem)
dealloc(killlimit_on)
k111:
db 8B 81 C0 04 00 00
unregistersymbol(k111)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Unlimited Ammo (Limited edition) Only "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(myammo_on)
alloc(newmem,2048)
alloc(myammo_on,4)
label(returnhere)
label(exit)
label(am1)
registersymbol(am1)
aobscan(aobam1,89 86 48 0A 00 00)

aobam1:
am1:
jmp newmem
nop
returnhere:

newmem:
mov byte ptr [myammo_on],1
mov [esi+00000A48],(int)30

exit:
jmp returnhere

[DISABLE]
unregistersymbol(myammo_on)
dealloc(newmem)
dealloc(myammo_on)
am1:
db 89 86 48 0A 00 00
unregistersymbol(am1)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"Rapidfire "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(rapid_on)
alloc(newmem,2048)
alloc(rapid_on,4)
label(returnhere)
label(exit)
label(rpd)
label(test)
label(rpd1)
registersymbol(rpd1)
aobscan(aobrpd1,F3 0F 11 81 08 0B 00 00)

aobrpd1:
rpd1:
jmp newmem
nop
nop
nop
returnhere:

newmem:
pushad
mov byte ptr [rapid_on],1
je test
mov [ecx+00000B08],(int)0
test:
rpd:
popad

exit:
jmp returnhere

[DISABLE]
unregistersymbol(rapid_on)
dealloc(newmem)
dealloc(rapid_on)
rpd1:
db F3 0F 11 81 08 0B 00 00
unregistersymbol(rpd1)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"Fire Power Off  (Fog Guns)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(firelight_off)
alloc(newmem,2048)
alloc(firelight_off,1)
label(returnhere)
label(exit)
label(fire1)
label(fire2)
registersymbol(fire2)
aobscan(aob2,89 02 0F 28 86 C0 01 00 00)

aob2:
fire2:
jmp newmem
nop
nop
nop
nop
returnhere:

newmem:
pushad
mov [edx],0
je fire1
mov byte ptr [firelight_off],1
fire1:
popad

exit:
jmp returnhere

[DISABLE]
unregistersymbol(firelight_off)
dealloc(newmem)
dealloc(firelight_off)
fire2:
db 89 02 0F 28 86 C0 01 00 00
unregistersymbol(fire2)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"Unlimited Essence "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(ssec_on)
alloc(newmem,2048)
alloc(ssec_on,4)
label(returnhere)
label(exit)
label(ssc)
label(ss1)
registersymbol(ss1)
aobscan(aobss1,89 46 08 83 7C 24 18 04)

aobss1:
ss1:
jmp newmem
nop
nop
nop
returnhere:

newmem:
pushad
mov [esi+08],(int)999999
je ssc
mov byte ptr [ssec_on],1
ssc:
popad

exit:
jmp returnhere

[DISABLE]
unregistersymbol(ssec_on)
dealloc(newmem)
dealloc(ssec_on)
ss1:
db 89 46 08 83 7C 24 18 04
unregistersymbol(ss1)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Stop Croshair "</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
registersymbol(cross_on)
alloc(newmem,2048)
alloc(cross_on,4)
label(returnhere)
label(exit)
label(crr)
label(crs1)
registersymbol(crs1)
aobscan(aobcrs1,D9 9C 8E F8 00 00 00)

aobcrs1:
crs1:
jmp newmem
nop
nop
returnhere:


newmem:
pushad
mov dword ptr [esi+ecx*4+000000F8],(float)0
je crr
mov [cross_on],1
crr:
popad


exit:
jmp returnhere

[DISABLE]
unregistersymbol(cross_on)
dealloc(newmem)
dealloc(cross_on)
crs1:
db D9 9C 8E F8 00 00 00
unregistersymbol(crs1)

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
