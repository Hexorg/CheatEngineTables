<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Lives Never Decrease"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(LIVES_AOB,89 5D EC 89 5D F0 89 5D F4 89 5D F8 C7 45 E8 03 00 00 00)
label(LIVES)
registersymbol(LIVES)

aobscan(LIVES_AOB2,8D 54 24 38 52 89 7C)
label(LIVES2)
registersymbol(LIVES2)

LIVES_AOB-7:
LIVES:
  //dec eax // live decreases here
  nop

LIVES_AOB2-7:
LIVES2:
  //dec eax // live decreases here
  nop

[DISABLE]
LIVES:
  dec eax
LIVES2:
  dec eax

unregistersymbol(LIVES)
unregistersymbol(LIVES2)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Diamonds Lasts Much Much Longer"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(ItemsLastsLonger_AOB,DE E2 D9 C9 D9 5C 24 0C D9 44 24 0C D9 96)
label(ItemsLastsLonger)
registersymbol(ItemsLastsLonger)
alloc(newmem,$1000)
label(code)
label(return)

newmem:
code:
//fsubrp st(2),st(0) // orig
                     // subtracts ST(2) from ST(0), store result in ST(2), pop ST(0)
                     // we can not just nop it, so:
  fstp st(2)         // copy ST(0) to ST(2),  pop ST(0)

  fxch st(1)              // orig
  fstp dword ptr [esp+0C] // orig
  jmp return

ItemsLastsLonger_AOB:
ItemsLastsLonger:
  jmp code
  nop
  nop
  nop
return:

[DISABLE]
ItemsLastsLonger:
  db DE E2 D9 C9 D9 5C 24 0C

unregistersymbol(ItemsLastsLonger)
dealloc(newmem)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"High Jump"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,$1000)

aobscan(HighJumpAOB,30 D9 45 F4 D9 C0)
label(HighJump)
registersymbol(HighJump)

label(code)
label(return)

newmem:
code:
  fld dword ptr [ebp-0C]
  push (float)0.5
  fmul [esp]
  add esp,04
  fld st(0)
  jmp return

HighJumpAOB+01:
HighJump:
  jmp code
return:

[DISABLE]
HighJump:
  db D9 45 F4 D9 C0

unregistersymbol(HighJump)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Hearts"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048)

aobscan(HeartsAOB,D9 83 AC 02 00 00 8A)
label(Hearts)
registersymbol(Hearts)

HeartsAOB:
Hearts:
jmp newmem
nop
label(returnhere)
returnhere:

newmem:
fld dword ptr [ebx+000002B0]
fst dword ptr [ebx+000002AC]
//fld dword ptr [ebx+000002AC] //orig
jmp returnhere

[DISABLE]
Hearts:
db D9 83 AC 02 00 00

unregistersymbol(Hearts)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"find pointer base (Money)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscan(ptrBase_AOB,A1xxxxxxxx8B0Dxxxxxxxx69C0A80000008B440810C1)
label(ptrBase)
registersymbol(ptrBase)

[ptrBase_AOB+7]:
ptrBase:


[DISABLE]
unregistersymbol(ptrBase)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Current Money"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>ptrBase</Address>
          <Offsets>
            <Offset>148</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>by mgr.inz.Player
</Comments>
</CheatTable>
