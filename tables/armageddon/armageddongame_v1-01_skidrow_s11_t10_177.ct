<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>77</ID>
      <Description>"[X] &lt;== Warhammer 40000 Armageddon v1.01 SKIDROW Script v1.1"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Warhammer 40000 Armageddon
 Game Version  : 1.01
 Game Sponsor  : SKIDROW
 Process Name  : ArmageddonGame.exe
 Script Version: 1.1
 CE Version    : 6.4
 Release date  : 02-Dec-2014
 Author        : Recifense
 History:
 28-Nov-14: First Release
 02-Dec-14: Fix a bug related to unit identification (v1.1)
 Features:
 - God Mode
 - Unlimited Moves
 - Unlimited Attacks
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"ArmageddonGame.exe")
define(MOHP,ArmageddonGame.exe+00594469)
define(MOSU,ArmageddonGame.exe+00604cd1)
define(GDMD,ArmageddonGame.exe+005d7cf7)
define(MOMP,ArmageddonGame.exe+005afef3)
define(MOFA,ArmageddonGame.exe+005a931f)
define(GMD1,ArmageddonGame.exe+005d7ce0)
define(GMD2,ArmageddonGame.exe+005d7d0d)
define(GMD3,ArmageddonGame.exe+005dd48b)

define(BMD3,ArmageddonGame.exe+005a97e2)

//=========================================
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.4)
define(ctMMON,#64000)  // Minimum Money
define(ctMATT,#10)     // Minimum Attributes

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MOHP,8b 9e 08 01 00 00 8b 86 0c 01 00 00 2b c3 c1 f8 02 3b c2 0f 86)
assert(MOSU,89 97 d8 00 00 00 8b 97 44 01 00 00 8b 87 40 01 00 00 89 55 94)
assert(GDMD,29 81 84 01 00 00 8b 0b 8b 43 0c 8b 51 48 8b 72 70 99 f7 fe 2b)
assert(MOMP,89 b0 a4 00 00 00 89 90 94 00 00 00 8d 50 60 8b b7 00 02 00 00)
assert(MOFA,c6 80 a9 00 00 00 01 8b 45 0c 85 c0 ?? ?? 83 c0 60 8d 9f f4 01)
assert(GMD1,89 91 8c 01 00 00 ?? ?? 2b c2 89 43 0c 8b 71 48 99 8b 7e 70 f7)
assert(GMD2,89 b1 8c 01 00 00 8b 45 04 8b 4d 08 8d 50 14 3b d1 ?? ?? 8b 1a)
assert(GMD3,8b 56 70 89 57 70 8b 96 8c 01 00 00 89 97 8c 01 00 00 8b 96 84)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_MonSelUnit)
label(_BackMSU)
label(_ExitMSU)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)
label(_MonMovePoints)
label(_BackMMP)
label(_ExitMMP)
label(_MonFlagAttack)
label(_BackMFA)
label(_ExitMFA)
label(_GodMode1)
label(_BackGM1)
label(_ExitGM1)
label(_GodMode2)
label(_BackGM2)
label(_ExitGM2)
label(_GodMode3)
label(_BackGM3)
label(_ExitGM3)

label(iEnableGMD)
label(iEnableMMP)
label(iEnableMFA)

label(pPlayer)
label(pUnit)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableGMD)
registersymbol(iEnableMMP)
registersymbol(iEnableMFA)
registersymbol(pPlayer)
registersymbol(pUnit)

//=========================================
MyCode:
//=========================================
// During a match
_MonHumanPlayer:
 mov [pPlayer],esi

_ExitMHP:
 mov ebx,[esi+00000108]            // Original code (set pUnit)
 jmp _BackMHP                      // Back to main code

//=========================================
// Unit Under Cursor
_MonSelUnit:
 mov [pUnit],edx

_ExitMSU:
 mov [edi+000000D8],edx            // Original code (set pUnit)
 jmp _BackMSU                      // Back to main code

//=========================================
// During Combat (strength)
_GodMode:
 push ebx

 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 cmp dword ptr [ecx+5c],0
 jne _ExitGMD

 mov ebx,[ecx+48]
 test ebx,ebx
 jz _ExitGMD

 mov eax,[ebx+6c]
 mov [ecx+6c],eax
 mov [ecx+00000184],eax
 mov [ecx+74],eax

 mov eax,[ebx+70]
 mov [ecx+70],eax
 mov [ecx+0000018c],eax

 xor eax,eax

_ExitGMD:
 pop ebx

 sub [ecx+00000184],eax            // Original code (set STR)
 jmp _BackGMD                      // Back to main code

//=========================================
// When moving a unit
_MonMovePoints:
 cmp dword ptr [iEnableMMP],0
 je _ExitMMP                       // Jump if feature is disabled

 cmp dword ptr [eax+5c],0
 jne _ExitMMP

 mov esi,[eax+000000A4]            // Get current MP
 mov byte ptr [eax+000000A8],00    // Flag Moved Off

_ExitMMP:
 mov [eax+000000A4],esi            // Original code (set MP)
 jmp _BackMMP                      // Back to main code

//=========================================
// When attacking
_MonFlagAttack:
 mov byte ptr [eax+000000A9],01    // Original code (set Already Attacked)

 cmp dword ptr [iEnableMFA],0
 je _ExitMFA                       // Jump if feature is disabled

 cmp dword ptr [eax+5c],0
 jne _ExitMFA

 mov byte ptr [eax+000000A9],00    // Flag Already Attacked Off

_ExitMFA:
 jmp _BackMFA                      // Back to main code

//=========================================
// During Combat (hit points)
_GodMode1:
 push ebx

 cmp dword ptr [iEnableGMD],0
 je _ExitGM1                       // Jump if feature is disabled

 cmp dword ptr [ecx+5c],0
 jne _ExitGM1

 mov ebx,[ecx+48]
 test ebx,ebx
 jz _ExitGM1

 mov edx,[ebx+6c]
 mov [ecx+6c],edx
 mov [ecx+00000184],edx
 mov [ecx+74],edx

 mov edx,[ebx+70]
 mov [ecx+70],edx

_ExitGM1:
 pop ebx

 mov [ecx+0000018C],edx            // Original code (set HP)
 jmp _BackGM1                      // Back to main code

//=========================================
// During Combat (hit points)
_GodMode2:
 push ebx

 cmp dword ptr [iEnableGMD],0
 je _ExitGM2                       // Jump if feature is disabled

 cmp dword ptr [ecx+5c],0
 jne _ExitGM2

 mov ebx,[ecx+48]
 test ebx,ebx
 jz _ExitGM2

 mov esi,[ebx+6c]
 mov [ecx+6c],esi
 mov [ecx+00000184],esi
 mov [ecx+74],esi

 mov esi,[ebx+70]
 mov [ecx+70],esi

_ExitGM2:
 pop ebx

 mov [ecx+0000018C],esi            // Original code (set HP)
 jmp _BackGM2                      // Back to main code

//=========================================
// During Combat (hit points)
_GodMode3:
 push ebx

 cmp dword ptr [iEnableGMD],0
 je _ExitGM3                       // Jump if feature is disabled

 mov edx,[ebp+04]
 cmp edx,BMD3
 jne _ExitGM3

 cmp dword ptr [edi+5c],0
 jne _ExitGM3

 mov ebx,[edi+48]
 test ebx,ebx
 jz _ExitGM3

 mov edx,[ebx+6c]
 mov [edi+6c],edx
 mov [esi+6c],edx
 mov [edi+00000184],edx
 mov [esi+00000184],edx
 mov [edi+74],edx
 mov [esi+74],edx

 mov edx,[ebx+70]
 mov [edi+70],edx
 mov [esi+70],edx

_ExitGM3:
 pop ebx

 mov edx,[esi+70]                  // Original code (get HP)
 mov [edi+70],edx                  // Original code (set HP)
 jmp _BackGM3                      // Back to main code

//=========================================
 db '==============================&gt;'
 db 'CE6.4 Script by Recifense 120214'
//=========================================
// Variables
iEnableGMD:
 dd 0
iEnableMMP:
 dd 0
iEnableMFA:
 dd 0
pPlayer:
 dd 0
pUnit:
 dd 0

//=========================================
// Hacking Points
MOHP:
 jmp _MonHumanPlayer
 nop
_BackMHP:

MOSU:
 jmp _MonSelUnit
 nop
_BackMSU:

GDMD:
 jmp _GodMode
 nop
_BackGMD:

MOMP:
 jmp _MonMovePoints
 nop
_BackMMP:

MOFA:
 jmp _MonFlagAttack
 nop
 nop
_BackMFA:

GMD1:
 jmp _GodMode1
 nop
_BackGM1:

GMD2:
 jmp _GodMode2
 nop
_BackGM2:

GMD3:
 jmp _GodMode3
 nop
_BackGM3:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MOHP:
// mov ebx,[esi+00000108]
 db 8b 9e 08 01 00 00

MOSU:
// mov [edi+000000D8],edx
 db 89 97 d8 00 00 00

GDMD:
// sub [ecx+00000184],eax
 db 29 81 84 01 00 00

MOMP:
// mov [eax+000000A4],esi
 db 89 b0 a4 00 00 00

MOFA:
// mov byte ptr [eax+000000A9],01
 db c6 80 a9 00 00 00 01

GMD1:
// mov [ecx+0000018C],edx
 db 89 91 8c 01 00 00

GMD2:
// mov [ecx+0000018C],esi
 db 89 b1 8c 01 00 00

GMD3:
// mov edx,[esi+70]
// mov [edi+70],edx
 db 8b 56 70 89 57 70

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMMP)
unregistersymbol(iEnableMFA)
unregistersymbol(pPlayer)
unregistersymbol(pUnit)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>66</ID>
          <Description>"Enable/Disable God Mode =====================&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"Enable/Disable Unlimited Moves  ================&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMMP</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>72</ID>
          <Description>"Enable/Disable Unlimited Attacks   ===============&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMFA</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"================== Player Info ================"</Description>
          <LastState Value="??" Activated="0" RealAddress="00000000"/>
          <ShowAsHex>1</ShowAsHex>
          <Color>000080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pPlayer</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>79</ID>
              <Description>"Requisition Points =====&gt;"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>0</Offset>
                <Offset>108</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>80</ID>
              <Description>"Glory ===============&gt;"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPlayer</Address>
              <Offsets>
                <Offset>8</Offset>
                <Offset>0</Offset>
                <Offset>108</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Warhammer 40000 Armageddon
 Game Version  : 1.01
 Game Sponsor  : SKIDROW
 Process Name  : ArmageddonGame.exe
 Script Version: 1.1
 CE Version    : 6.4
 Release date  : 02-Dec-2014
 Author        : Recifense
 History:
 28-Nov-14: First Release
 02-Dec-14: Fix a bug related to unit identification (v1.1)
 Features:
 - God Mode          [1]
 - Unlimited Moves   [2]
 - Unlimited Attacks [3]
 - Some Pointers     [4]
===========================================
[1] For human player's units only;
[2] You can move multiple times;
[2] You can attack multiple times;
[4] Used at the table;
===========================================
[USAGE]
1) Run CE64;
2) Run Game;
3) Load the game process "ArmageddonGame.exe" in CE;
4) Load this table and activate it;
5) Change the value to "Enabled" of each cheat you want to use;
6) Game On;
===========================================
[HOTKEYS]
CTRL+Home      = Enable  GM cheat;
CTRL+End       = Disable GM cheat;
-----------
CTRL+PageUp    = Enable  UM cheat;
CTRL+PageDown  = Disable UM cheat;
-----------
CTRL+Insert    = Enable  UA cheat;
CTRL+Delete    = Disable UA cheat;
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat. So you can always come back in case you don't like the result.
===========================================
[INFO]
Tested on Win 7 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
