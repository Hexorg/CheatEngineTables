<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>660</ID>
      <Description>"Enable [F12]"</Description>
      <LastState Activated="0"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(hpWrite1AOB,DDDA.exe,F3 0F 11 89 9C 02 00 00 89 B7 F4 3D 00 00)
registersymbol(hpWrite1AOB)
aobscanmodule(rhpReadOnHitAOB,DDDA.exe,F3 0F 10 47 08 8B 8F B4 01 00 00)
registersymbol(rhpReadOnHitAOB)
aobscanmodule(rhpFallDamageCalAOB,DDDA.exe,8B 54 24 24 52 8B C7)
registersymbol(rhpFallDamageCalAOB)

///

label(bUndead)
registersymbol(bUndead)
label(pPartyHP)
registersymbol(pPartyHP)
label(pPartyBase)
registersymbol(pPartyBase)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx+8],ffffffff
jne @f
pushad
push 00000004
push ecx
call isbadreadptr
test eax,eax
popad
jnz originalcode
mov edx,[ecx]
cmp [edx+74],0
je originalcode

@@:
test eax,eax
jz originalcode

mov edx,[ecx+8]
cmp edx,4
jae originalcode
mov [pPartyHP+edx*4],eax
mov [pPartyBase+edx*4],edi

originalcode:
movss [ecx+0000029C],xmm1

exit:
jmp returnhere

///
bUndead:
db 0
pPartyHP:
dq 0
dq 0
pPartyBase:
dq 0
dq 0
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bUndead],1
jne originalcode2

xor ecx,ecx
@@:
cmp [pPartyHP+ecx*4],edi
je @f
inc ecx
cmp ecx,4
jl @b
jmp originalcode2

@@:
movss xmm0,[edi+8]
comiss xmm0,[esp+c]
ja originalcode2
mov [edi+8],(float)1
movss xmm0,[esp+c]
addss xmm0,[edi+8]
movss [edi+8],xmm0

originalcode2:
movss xmm0,[edi+08]

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bUndead],1
jne originalcode3

xor edx,edx
@@:
cmp [pPartyHP+edx*4],ebp
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode3

@@:
xorps xmm1,xmm1
comiss xmm0,xmm1
jae originalcode3

addss xmm0,[ebp+8]
mov edx,(float)1
movd xmm1,edx
comiss xmm0,xmm1
jae @f
mov edx,(float)-1
movd xmm1,edx
movss xmm0,[ebp+8]
addss xmm0,xmm1
mulss xmm0,xmm1
movss [esp+20],xmm0

@@:
movss xmm0,[esp+20]

originalcode3:
mov edx,[esp+24]
push edx

exit3:
jmp returnhere3

///

hpWrite1AOB: //"DDDA.exe"+761311:
jmp newmem
nop
nop
nop
returnhere:

rhpReadOnHitAOB: //"DDDA.exe"+3743C1:
jmp newmem2
returnhere2:

rhpFallDamageCalAOB: //"DDDA.exe"+485F86:
jmp newmem3
returnhere3:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hpWrite1AOB: //"DDDA.exe"+761311:
db F3 0F 11 89 9C 02 00 00
//Alt: movss [ecx+0000029C],xmm1
unregistersymbol(hpWrite1AOB)
dealloc(newmem2)
rhpReadOnHitAOB: //"DDDA.exe"+3743C1:
db F3 0F 10 47 08
//Alt: movss xmm0,[edi+08]
unregistersymbol(rhpReadOnHitAOB)
dealloc(newmem3)
rhpFallDamageCalAOB: //"DDDA.exe"+485F86:
db 8B 54 24 24 52
//Alt: mov edx,[esp+24]
//Alt: push edx
unregistersymbol(rhpFallDamageCalAOB)

unregistersymbol(bUndead)
unregistersymbol(pPartyHP)
unregistersymbol(pPartyBase)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>661</ID>
          <Description>"Undead (party)"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bUndead:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bUndead:
db 0
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>662</ID>
              <Description>"HP 1"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPartyHP+0*4</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>71</Key>
                  </Keys>
                  <Value>(Max 1)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>663</ID>
                  <Description>"Max 1"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPartyHP+0*4</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>664</ID>
              <Description>"HP 2"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPartyHP+1*4</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>71</Key>
                  </Keys>
                  <Value>(Max 2)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>665</ID>
                  <Description>"Max 2"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPartyHP+1*4</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>666</ID>
              <Description>"HP 3"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPartyHP+2*4</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>71</Key>
                  </Keys>
                  <Value>(Max 3)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>667</ID>
                  <Description>"Max 3"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPartyHP+2*4</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>668</ID>
              <Description>"HP 4"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPartyHP+3*4</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>71</Key>
                  </Keys>
                  <Value>(Max 4)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>669</ID>
                  <Description>"Max 4"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPartyHP+3*4</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>670</ID>
          <Description>"Full Stamina (party)"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(staminaWrite1AOB,DDDA.exe,F3 0F 11 85 A8 02 00 00 8B BE EC 3D 00 00)
registersymbol(staminaWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebp+8],ffffffff
jne @f
pushad
push 00000004
push ebp
call isbadreadptr
test eax,eax
popad
jnz originalcode
mov edi,[ebp]
cmp [edi+74],0
je originalcode

@@:
comiss xmm0,[ebp+2a8]
jbe exit

originalcode:
movss [ebp+000002A8],xmm0

exit:
jmp returnhere

///

staminaWrite1AOB: //"DDDA.exe"+77ED22:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminaWrite1AOB: //"DDDA.exe"+77ED22:
db F3 0F 11 85 A8 02 00 00
//Alt: movss [ebp+000002A8],xmm0
unregistersymbol(staminaWrite1AOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>671</ID>
          <Description>"Instant Skill Charge (protagonist)"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(staffShieldSpellsChargeReadAOB,DDDA.exe,F3 0F 10 83 40 01 00 00 F3 0F 5E C1)
registersymbol(staffShieldSpellsChargeReadAOB)
aobscanmodule(swordSpellsChargeChkMaxAOB,DDDA.exe,D9 45 74 DF F1)
registersymbol(swordSpellsChargeChkMaxAOB)
aobscanmodule(bowSkillsChargeChkMaxAOB,DDDA.exe,D9 85 A0 01 00 00 DF F1)
registersymbol(bowSkillsChargeChkMaxAOB)
aobscanmodule(meleeSkillsChargeChkMaxAOB,DDDA.exe,0F 2F 44 24 0C F3 0F 11 46 74)
registersymbol(meleeSkillsChargeChkMaxAOB)

///

label(fAltCharge)
registersymbol(fAltCharge)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[ebx+58]
cmp [pPartyBase],edx
jne originalcode
/*test edx,edx
jz originalcode
cmp dword ptr [edx+100],00004040
jne originalcode*/
movss xmm0,[ebx+13c]
cmp dword ptr [fAltCharge],0
je @f
movss xmm0,[fAltCharge]
@@:
movss [ebx+140],xmm0

originalcode:
movss xmm0,[ebx+00000140]

exit:
jmp returnhere

///
fAltCharge:
dd 0
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [ebp+58],0
je originalcode2
push eax
mov eax,[ebp+58]
cmp [pPartyBase],eax
/*cmp dword ptr [eax+100],00004040*/
pop eax
jne originalcode2
fst dword ptr [ebp+74]
cmp dword ptr [fAltCharge],0
je @f
fld dword ptr [fAltCharge]
fstp dword ptr [ebp+74]
@@:

originalcode2:
fld dword ptr [ebp+74]
fcomip st(0),st(1)

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [ebp+58],0
je originalcode3
push eax
mov eax,[ebp+58]
cmp [pPartyBase],eax
/*cmp dword ptr [eax+100],00004040*/
pop eax
jne originalcode3
fst dword ptr [ebp+1a0]
cmp dword ptr [fAltCharge],0
je @f
fld dword ptr [fAltCharge]
fstp dword ptr [ebp+1a0]
@@:

originalcode3:
fld dword ptr [ebp+000001A0]

exit3:
jmp returnhere3

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[esi+58]
cmp [pPartyBase],edx
jne originalcode4
/*test edx,edx
jz originalcode4
cmp [edx+100],00004040
jne originalcode4*/
movss xmm0,[esp+c]
cmp dword ptr [fAltCharge],0
je @f
movss xmm0,[fAltCharge]
@@:
movss [esi+74],xmm0

originalcode4:
comiss xmm0,[esp+0C]

exit4:
jmp returnhere4

///

staffShieldSpellsChargeReadAOB: //"DDDA.exe"+742004:
jmp newmem
nop
nop
nop
returnhere:

swordSpellsChargeChkMaxAOB: //"DDDA.exe"+712ABC:
jmp newmem2
returnhere2:

bowSkillsChargeChkMaxAOB: //"DDDA.exe"+716519:
jmp newmem3
nop
returnhere3:

meleeSkillsChargeChkMaxAOB: //"DDDA.exe"+73D3C0:
jmp newmem4
returnhere4:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staffShieldSpellsChargeReadAOB: //"DDDA.exe"+742004:
db F3 0F 10 83 40 01 00 00
//Alt: movss xmm0,[ebx+00000140]
unregistersymbol(staffShieldSpellsChargeReadAOB)
dealloc(newmem2)
swordSpellsChargeChkMaxAOB: //"DDDA.exe"+712ABC:
db D9 45 74 DF F1
//Alt: fld dword ptr [ebp+74]
//Alt: fcomip st(0),st(1)
unregistersymbol(swordSpellsChargeChkMaxAOB)
dealloc(newmem3)
bowSkillsChargeChkMaxAOB: //"DDDA.exe"+716519:
db D9 85 A0 01 00 00
//Alt: fld dword ptr [ebp+000001A0]
unregistersymbol(bowSkillsChargeChkMaxAOB)
dealloc(newmem4)
meleeSkillsChargeChkMaxAOB: //"DDDA.exe"+73D3C0:
db 0F 2F 44 24 0C
//Alt: comiss xmm0,[esp+0C]
unregistersymbol(meleeSkillsChargeChkMaxAOB)

unregistersymbol(fAltCharge)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>672</ID>
              <Description>"Method"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00000000:Default
49742400:Alternate
</DropDownList>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>fAltCharge</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>294</ID>
          <Description>"Share Weapons' Skills"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfSkillsClassNotMatchInEquipMenuAOB,DDDA.exe,0F 84 97 00 00 00 8B ** ** ** 8B ** 8B)
registersymbol(cJmpIfSkillsClassNotMatchInEquipMenuAOB)
aobscanmodule(cJmpIfSkillsClassMatchAOB,DDDA.exe,75 06 C7 02 FF FF FF FF 8N ** ** 83)
registersymbol(cJmpIfSkillsClassMatchAOB)

aobscanmodule(cJmpIfPSkill1ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 70 02)
registersymbol(cJmpIfPSkill1ClassMatchAOB)
aobscanmodule(cJmpIfPSkill2ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** 33 ** ** ** ** ** ** ** 74 02)
registersymbol(cJmpIfPSkill2ClassMatchAOB)
aobscanmodule(cJmpIfPSkill3ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** 33 ** ** ** ** ** ** ** 78 02)
registersymbol(cJmpIfPSkill3ClassMatchAOB)

aobscanmodule(cJmpIfSSkill1ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** 33 ** ** ** ** ** ** ** 7C 02)
registersymbol(cJmpIfSSkill1ClassMatchAOB)
aobscanmodule(cJmpIfSSkill2ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** 33 ** ** ** ** ** ** ** 80 02)
registersymbol(cJmpIfSSkill2ClassMatchAOB)
aobscanmodule(cJmpIfSSkill3ClassMatchAOB,DDDA.exe,75 18 8B ** ** ** ** ** ** ** ** ** ** ** 33 ** ** ** ** ** ** ** 84 02)
registersymbol(cJmpIfSSkill3ClassMatchAOB)

///

cJmpIfSkillsClassNotMatchInEquipMenuAOB: //"DDDA.exe"+2F7CC4:
db 90 90 90 90 90 90
//Alt: nop
//Alt: nop
//Alt: nop
//Alt: nop
//Alt: nop
//Alt: nop

cJmpIfSkillsClassMatchAOB: //"DDDA.exe"+37DE76:
db EB
//Alt: jmp

cJmpIfPSkill1ClassMatchAOB: //"DDDA.exe"+37DCC7:
db EB
//Alt: jmp

cJmpIfPSkill2ClassMatchAOB: //"DDDA.exe"+37DD41:
db EB
//Alt: jmp

cJmpIfPSkill3ClassMatchAOB: //"DDDA.exe"+37DDBB:
db EB
//Alt: jmp

cJmpIfSSkill1ClassMatchAOB: //"DDDA.exe"+37DD1E:
db EB
//Alt: jmp

cJmpIfSSkill2ClassMatchAOB: //"DDDA.exe"+37DD98:
db EB
//Alt: jmp

cJmpIfSSkill3ClassMatchAOB: //"DDDA.exe"+37DE12:
db EB
//Alt: jmp


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfSkillsClassNotMatchInEquipMenuAOB: //"DDDA.exe"+2F7CC4:
db 0F 84 97 00 00 00
//Alt: je cJmpIfSkillsClassMatchInEquipMenuAOB+9d //DDDA.exe+2F7D61
unregistersymbol(cJmpIfSkillsClassNotMatchInEquipMenuAOB)
cJmpIfSkillsClassMatchAOB: //"DDDA.exe"+37DE76:
db 75
//Alt: jne cJmpIfSkillsClassNotMatchAOB+8 //DDDA.exe+37DE7E
unregistersymbol(cJmpIfSkillsClassNotMatchAOB)
cJmpIfPSkill1ClassMatchAOB: //"DDDA.exe"+37DCC7:
db 75
//Alt: jne
unregistersymbol(cJmpIfPSkill1ClassMatchAOB)
cJmpIfPSkill2ClassMatchAOB: //"DDDA.exe"+37DD41:
db 75
//Alt: jne
unregistersymbol(cJmpIfPSkill2ClassMatchAOB)
cJmpIfPSkill3ClassMatchAOB: //"DDDA.exe"+37DDBB:
db 75
//Alt: jne
unregistersymbol(cJmpIfPSkill3ClassMatchAOB)
cJmpIfSSkill1ClassMatchAOB: //"DDDA.exe"+37DD1E:
db 75
//Alt: jne
unregistersymbol(cJmpIfSSkill1ClassMatchAOB)
cJmpIfSSkill2ClassMatchAOB: //"DDDA.exe"+37DD98:
db 75
//Alt: jne
unregistersymbol(cJmpIfSSkill2ClassMatchAOB)
cJmpIfSSkill3ClassMatchAOB: //"DDDA.exe"+37DE12:
db 75
//Alt: jne
unregistersymbol(cJmpIfSSkill3ClassMatchAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>673</ID>
          <Description>"Vocation Ignore when Learning Skills"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB,DDDA.exe,74 2F 8B 47 10)
registersymbol(cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB)
aobscanmodule(cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB,DDDA.exe,74 74 8B 44 24 1C)
registersymbol(cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB)
aobscanmodule(cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB,DDDA.exe,74 24 83 BD ** ** ** ** 05)
registersymbol(cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB)
aobscanmodule(chkIfAugmentsClassMatchInLearnMenu1AOB,DDDA.exe,8B 4A 10 49 3B C1)
registersymbol(chkIfAugmentsClassMatchInLearnMenu1AOB)

///

cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB: //"DDDA.exe"+2FB661:
db 90 90
//Alt: nop
//Alt: nop

cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB: //"DDDA.exe"+2FB0A9:
db 90 90
//Alt: nop
//Alt: nop

cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB: //"DDDA.exe"+2FB0F9:
db 90 90
//Alt: nop
//Alt: nop

chkIfAugmentsClassMatchInLearnMenu1AOB: //"DDDA.exe"+2FB768:
db 90 90 8B C1
//Alt: nop
//Alt: nop
//Alt: mov eax,ecx

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB: //"DDDA.exe"+2FB661:
db 74 2F
//Alt: je cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB+31 //DDDA.exe+2FB692
unregistersymbol(cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB)
cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB: //"DDDA.exe"+2FB0A9:
db 74 74
//Alt: je cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB+76 //DDDA.exe+2FB11F
unregistersymbol(cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB)
cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB: //"DDDA.exe"+2FB0F9:
db 74 24
//Alt: je cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB+26 //DDDA.exe+2FB11F
unregistersymbol(cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB)
chkIfAugmentsClassMatchInLearnMenu1AOB: //"DDDA.exe"+2FB768:
db 8B 4A 10 49
//Alt: mov ecx,[edx+10]
//Alt: dec ecx
unregistersymbol(chkIfAugmentsClassMatchInLearnMenu1AOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>120</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>16</Key>
                <Key>120</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>674</ID>
          <Description>"Ranks Ignore when Learning Skills"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(weaponSkillsRankReqReadInLearnMenuAOB,DDDA.exe,8B 4C 24 10 50 8B ** ** ** ** ** E8)
registersymbol(weaponSkillsRankReqReadInLearnMenuAOB)
aobscanmodule(setFlagIfWeaponSkillsRanksReqMetInLearnMenuAOB,DDDA.exe,3B 56 10 0F 9D C0)
registersymbol(setFlagIfWeaponSkillsRanksReqMetInLearnMenuAOB)
aobscanmodule(coreSkillsRankReqReadInLearnMenuAOB,DDDA.exe,8B 94 88 CC 02 00 00 3B 57 0C)
registersymbol(coreSkillsRankReqReadInLearnMenuAOB)
aobscanmodule(setFlagIfCoreSkillsRanksReqMetInLearnMenuAOB,DDDA.exe,3B 56 0C 0F 9D C0)
registersymbol(setFlagIfCoreSkillsRanksReqMetInLearnMenuAOB)
aobscanmodule(augmentsRankReqReadInLearnMenuAOB,DDDA.exe,8B 44 24 18 52 E8 ** ** ** ** 5D)
registersymbol(augmentsRankReqReadInLearnMenuAOB)
aobscanmodule(setFlagIfAugmentsRanksReqMetInLearnMenuAOB,DDDA.exe,3B 46 0C 0F 9D C0)
registersymbol(setFlagIfAugmentsRanksReqMetInLearnMenuAOB)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
xor eax,eax

originalcode:
mov ecx,[esp+10]
push eax

exit:
jmp returnhere

///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[esi+10]

originalcode2:
cmp edx,[esi+10]
setge al

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[edi+c]
jmp exit3

originalcode3:
mov edx,[eax+ecx*4+000002CC]

exit3:
jmp returnhere3

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[esi+c]

originalcode4:
cmp edx,[esi+0C]
setge al

exit4:
jmp returnhere4

///

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
//place your code here
xor edx,edx

originalcode5:
mov eax,[esp+18]
push edx

exit5:
jmp returnhere5

///

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+c]

originalcode6:
cmp eax,[esi+0C]
setge al

exit6:
jmp returnhere6

///

weaponSkillsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB666:
jmp newmem
returnhere:

setFlagIfWeaponSkillsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FB30C:
jmp newmem2
nop
returnhere2:

coreSkillsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB0B2:
jmp newmem3
nop
nop
returnhere3:

setFlagIfCoreSkillsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FB469:
jmp newmem4
nop
returnhere4:

augmentsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB777:
jmp newmem5
returnhere5:

setFlagIfAugmentsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FBB75:
jmp newmem6
nop
returnhere6:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
weaponSkillsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB666:
db 8B 4C 24 10 50
//Alt: mov ecx,[esp+10]
//Alt: push eax
unregistersymbol(weaponSkillsRankReqReadInLearnMenuAOB)
dealloc(newmem2)
setFlagIfWeaponSkillsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FB30C:
db 3B 56 10 0F 9D C0
//Alt: cmp edx,[esi+10]
//Alt: setge al
unregistersymbol(setFlagIfWeaponSkillsRanksReqMetInLearnMenuAOB)
dealloc(newmem3)
coreSkillsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB0B2:
db 8B 94 88 CC 02 00 00
//Alt: mov edx,[eax+ecx*4+000002CC]
unregistersymbol(coreSkillsRankReqReadInLearnMenuAOB)
dealloc(newmem4)
setFlagIfCoreSkillsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FB469:
db 3B 56 0C 0F 9D C0
//Alt: cmp edx,[esi+0C]
//Alt: setge al
unregistersymbol(setFlagIfCoreSkillsRanksReqMetInLearnMenuAOB)
dealloc(newmem5)
augmentsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB777:
db 8B 44 24 18 52
//Alt: mov eax,[esp+18]
//Alt: push edx
unregistersymbol(augmentsRankReqReadInLearnMenuAOB)
dealloc(newmem6)
setFlagIfAugmentsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FBB75:
db 3B 46 0C 0F 9D C0
//Alt: cmp eax,[esi+0C]
//Alt: setge al
unregistersymbol(setFlagIfAugmentsRanksReqMetInLearnMenuAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>119</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>16</Key>
                <Key>119</Key>
              </Keys>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>675</ID>
          <Description>"Ignore Gold"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(goldReadOnShopCalAOB,DDDA.exe,8B 80 18 7A 0A 00 03 91 60 0E 00 00)
registersymbol(goldReadOnShopCalAOB)
luaCall(lua_aobscan("enoughGoldFlagSetOneTimeChk1AOB","DDDA.exe","39 82 ** ** ** ** 0F 9D C1",1))
luaCall(lua_aobscan("enoughGoldFlagSetOneTimeChk1AOB","DDDA.exe","39 82 ** ** ** ** 0F 9D C1",2))
luaCall(lua_aobscan("enoughGoldFlagSetOneTimeChk1AOB","DDDA.exe","39 82 ** ** ** ** 0F 9D C1",3))

///

label(pHAHAHA)
registersymbol(pHAHAHA)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esp+18] //18
mov [pHAHAHA],eax
mov eax,[esp+1c] //1c
mov [pHAHAHA+4],eax
mov eax,#10000000

originalcode:
mov eax,[eax+000A7A18]

exit:
jmp returnhere

///
pHAHAHA:
///

goldReadOnShopCalAOB: //"DDDA.exe"+2DE2A7:
jmp newmem
nop
returnhere:

enoughGoldFlagSetOneTimeChk1AOB+6: //"DDDA.exe"+55EC3:
db 90 B1 01
//Alt: nop
//Alt: mov cl,1

enoughGoldFlagSetOneTimeChk1AOB+6: //"DDDA.exe"+55FF6:
db 90 B1 01
//Alt: nop
//Alt: mov cl,1

enoughGoldFlagSetOneTimeChk1AOB+6: //"DDDA.exe"+56429:
db 90 B1 01
//Alt: nop
//Alt: mov cl,1




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
goldReadOnShopCalAOB: //"DDDA.exe"+2DE2A7:
db 8B 80 18 7A 0A 00
//Alt: mov eax,[eax+000A7A18]
unregistersymbol(goldReadOnShopCalAOB)
enoughGoldFlagSetOneTimeChk1AOB+6: //"DDDA.exe"+55EC3:
db 0F 9D C1
//Alt: setge cl
unregistersymbol(enoughGoldFlagOneTimeChk1AOB)
enoughGoldFlagSetOneTimeChk1AOB+6: //"DDDA.exe"+55FF6:
db 0F 9D C1
//Alt: setge cl
unregistersymbol(enoughGoldFlagOneTimeChk2AOB)
dealloc(newmem)
enoughGoldFlagSetOneTimeChk1AOB+6: //"DDDA.exe"+56429:
db 0F 9D C1
//Alt: setge cl
unregistersymbol(enoughGoldFlagOneTimeChk3AOB)

unregistersymbol(pHAHAHA)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>676</ID>
              <Description>""</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>677</ID>
                  <Description>"No description"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHAHAHA</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>678</ID>
                  <Description>"No description"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHAHAHA+4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>679</ID>
          <Description>"Secret of Metamorphosis"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(menuItemChkOnSelectAOB,DDDA.exe,83 BB 84 02 00 00 0B)
registersymbol(menuItemChkOnSelectAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 11 //CTRL key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
pushad
push 10 //SHIFT key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov dword ptr [ebx+284],2

originalcode:
cmp dword ptr [ebx+00000284],0B

exit:
jmp returnhere

///

menuItemChkOnSelectAOB: //"DDDA.exe"+328F34:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
menuItemChkOnSelectAOB: //"DDDA.exe"+328F34:
db 83 BB 84 02 00 00 0B
//Alt: cmp dword ptr [ebx+00000284],0B
unregistersymbol(menuItemChkOnSelectAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>680</ID>
          <Description>"Game Speed Mod"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(gameSpeedReadAOB,DDDA.exe,F3 0F 10 4A 24 F3 0F 59 49 70)
registersymbol(gameSpeedReadAOB)

label(bSlowMo)
registersymbol(bSlowMo)
label(bFirstExitSlowMo)
registersymbol(bFirstExitSlowMo)
label(pGameSpeed)
registersymbol(pGameSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pGameSpeed],edx
cmp byte ptr [bSlowMo],0
je @f
mov byte ptr [bFirstExitSlowMo],1
mov dword ptr [edx+24],(float)0.3
jmp originalcode
@@:
cmp byte ptr [bFirstExitSlowMo],1
jne originalcode
mov byte ptr [bFirstExitSlowMo],0
mov dword ptr [edx+24],(float)1

originalcode:
movss xmm1,[edx+24]

exit:
jmp returnhere

///
bSlowMo:
db 0
bFirstExitSlowMo:
db 0
pGameSpeed:
dd 0
///

gameSpeedReadAOB: //"DDDA.exe"+A34B6:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
gameSpeedReadAOB: //"DDDA.exe"+A34B6:
db F3 0F 10 4A 24
//Alt: movss xmm1,[edx+24]
unregistersymbol(gameSpeedReadAOB)

unregistersymbol(bSlowMo)
unregistersymbol(bFirstExitSlowMo)
unregistersymbol(pGameSpeed)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>681</ID>
              <Description>"Slow Motion? (Caps == on, Tab == off)"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:Enable
</DropDownList>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bSlowMo</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>20</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>9</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>682</ID>
              <Description>"Game Speed"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pGameSpeed</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>683</ID>
          <Description>"Extend Vertical Cam Limit"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(vCamLimitsCmpAOB,DDDA.exe,F3 0F 10 80 8C 00 00 00 ** ** ** ** ** ** ** ** F3 0F 10 11 ** ** ** ** ** ** ** ** ** ** ** ** ** F3 0F 10 80 88 00 00 00)
registersymbol(vCamLimitsCmpAOB)
aobscanmodule(vCamLimitsCmpOnBowAimAOB,DDDA.exe,F3 0F 10 81 8C 00 00 00 F3 ** ** ** ** ** ** ** F3)
registersymbol(vCamLimitsCmpOnBowAimAOB)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2) //,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

///

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ebx,(float)89.9
movd xmm0,ebx
jmp exit

originalcode:
movss xmm0,[eax+0000008C]

exit:
jmp returnhere

///

newmem2:
mov ebx,(float)-89.9
movd xmm0,ebx
jmp exit2

originalcode2:
movss xmm0,[eax+00000088]

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

label(newmem4) //,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

///

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
mov ebx,(float)89.9
movd xmm0,ebx
pop ebx
jmp exit3

originalcode3:
movss xmm0,[ecx+0000008C]

exit3:
jmp returnhere3

///

newmem4:
push ebx
mov ebx,(float)-89.9
movd xmm0,ebx
pop ebx
jmp exit4

originalcode4:
movss xmm0,[edx+00000088]

exit4:
jmp returnhere4

///

vCamLimitsCmpAOB: //"DDDA.exe"+3C5B64:
jmp newmem
nop
nop
nop
returnhere:

vCamLimitsCmpAOB+21: //"DDDA.exe"+3C5B85:
jmp newmem2
nop
nop
nop
returnhere2:

///

vCamLimitsCmpOnBowAimAOB: //"DDDA.exe"+3CAF47:
jmp newmem3
nop
nop
nop
returnhere3:

vCamLimitsCmpOnBowAimAOB+27: //"DDDA.exe"+3CAF6E:
jmp newmem4
nop
nop
nop
returnhere4:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
vCamLimitsCmpAOB: //"DDDA.exe"+3C5B64:
db F3 0F 10 80 8C 00 00 00
//Alt: movss xmm0,[eax+0000008C]
vCamLimitsCmpAOB+21: //"DDDA.exe"+3C5B85:
db F3 0F 10 80 88 00 00 00
//Alt: movss xmm0,[eax+00000088]
unregistersymbol(vCamLimitsCmpAOB)
dealloc(newmem3)
vCamLimitsCmpOnBowAimAOB: //"DDDA.exe"+3CAF47:
db F3 0F 10 81 8C 00 00 00
//Alt: movss xmm0,[ecx+0000008C]
vCamLimitsCmpOnBowAimAOB+27: //"DDDA.exe"+3CAF6E:
db F3 0F 10 82 88 00 00 00
//Alt: movss xmm0,[edx+00000088]
unregistersymbol(vCamLimitsCmpOnBowAimAOB)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>134</ID>
          <Description>"Fly .3"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(nvXReadAOB,DDDA.exe,D9 84 C1 C0 F1 03 00)
registersymbol(nvXReadAOB)
aobscanmodule(axisXYWriteAOB,DDDA.exe,F3 0F 11 7F 14 F3 0F 11 77 18)
registersymbol(axisXYWriteAOB)
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 10 74 24 30 C6)
registersymbol(coordWrite1AOB)

///

alloc(vNV,16)
registersymbol(vNV)
label(pNVector)
registersymbol(pNVector)

label(pMovementInfo)
registersymbol(pMovementInfo)

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)
label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)
label(fFlySpeed)
registersymbol(fFlySpeed)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+eax*8+3f1c0]

movss xmm1,[ecx+eax*8+3f1c8]
shufps xmm1,xmm1,c6
addps xmm0,xmm1

movss xmm1,[ecx+eax*8+3f1d8]
shufps xmm1,xmm1,e1
addps xmm0,xmm1

movaps [vNV],xmm0
//mov byte ptr [bVNVSet],1

push ecx
lea ecx,[ecx+eax*8+3f1e0]
mov [pNVector],ecx
pop ecx

originalcode:
fld dword ptr [ecx+eax*8+0003F1C0]

exit:
jmp returnhere

///
pNVector:
dd 0
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMovementInfo],edi

originalcode2:
movss [edi+14],xmm7

exit2:
jmp returnhere2

///
pMovementInfo:
dd 0
///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pPartyBase],esi
je @f
//cmp [esi+100],00004040
//je @f
//cmp [esi+120],fffffdff //player+pawns only?
//je @f
jmp originalcode3

@@:
mov [pPlayerCoord],esi

cmp byte ptr [bFlyMode],1
je @f
jmp originalcode3

@@:
push eax
sub esp,4
movss [esp],xmm7

xorps xmm6,xmm6
movss [esp+38],xmm6
movss [esp+3c],xmm6
movss [esp+40],xmm6

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f

xorps xmm6,xmm6
movss xmm7,[eax+18]
shufps xmm7,xmm7,c0 //set stick x axis to all but most significant element
subps xmm6,xmm7

//mov eax,(float)20
//movd xmm7,eax
movss xmm7,[fFlySpeed]
shufps xmm7,xmm7,00
mulps xmm6,xmm7     //apply "speed"

mov eax,[pNVector]
test eax,eax
jz @f
mulps xmm6,[eax] //apply vector

movss [esp+38],xmm6
shufps xmm6,xmm6,39
movss [esp+3c],xmm6
shufps xmm6,xmm6,39
movss [esp+40],xmm6

//do y
mov eax,[pMovementInfo]
movss xmm6,[eax+14]
mov eax,(float)-1
movd xmm7,eax
mulss xmm6,xmm7     //neg least significant element
shufps xmm6,xmm6,c4 //copy stick y axis to 3rd element

//mov eax,(float)20
//movd xmm7,eax
movss xmm7,[fFlySpeed]
shufps xmm7,xmm7,00
mulps xmm6,xmm7     //apply "speed"

movaps xmm7,[vNV]
mulps xmm6,xmm7     //apply vector

movups xmm7,[esp+38]
addps xmm7,xmm6
movss [esp+38],xmm7
shufps xmm7,xmm7,39
movss [esp+3c],xmm7
shufps xmm7,xmm7,39
movss [esp+40],xmm7

@@:
movss xmm7,[esp]
add esp,4
pop eax

originalcode3:
movss xmm6,[esp+30]

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
fFlySpeed:
dd (float)20
///

nvXReadAOB: //"DDDA.exe"+9C2BF9:
jmp newmem
nop
nop
returnhere:

axisXYWriteAOB: //"DDDA.exe"+74F342:
jmp newmem2
returnhere2:

coordWrite1AOB: //"DDDA.exe"+44A020:
jmp newmem3
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
nvXReadAOB: //"DDDA.exe"+9C2BF9:
db D9 84 C1 C0 F1 03 00
//Alt: fld dword ptr [ecx+eax*8+0003F1C0]
unregistersymbol(nvXReadAOB)
dealloc(newmem2)
axisXYWriteAOB: //"DDDA.exe"+74F342:
db F3 0F 11 7F 14
//Alt: movss [edi+14],xmm7
unregistersymbol(axisXYWriteAOB)
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+44A020:
db F3 0F 10 74 24 30
//Alt: movss xmm6,[esp+30]
unregistersymbol(coordWrite1AOB)

///

dealloc(vNV)
unregistersymbol(vNV)
unregistersymbol(pNVector)

unregistersymbol(pMovementInfo)

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)
unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
unregistersymbol(fFlySpeed)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>135</ID>
              <Description>"status (numpad0/ turn on, numpad0* turn off)"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:Fly
</DropDownList>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bFlyMode</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>96</Key>
                    <Key>111</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>96</Key>
                    <Key>106</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>684</ID>
              <Description>"fly speed"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>fFlySpeed</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>136</ID>
              <Description>"x"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>138</ID>
              <Description>"Total Weight Mod .3"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>48</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>137</ID>
              <Description>"z"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>174</ID>
              <Description>""</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>168</ID>
                  <Description>"nv x"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pNVector</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>169</ID>
                      <Description>"No description"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>vNV</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>170</ID>
                  <Description>"nv z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pNVector</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>171</ID>
                      <Description>"No description"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>vNV+4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>172</ID>
                  <Description>"nv y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pNVector</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>173</ID>
                      <Description>"No description"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>vNV+8</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>186</ID>
                  <Description>"?"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Binary</VariableType>
                  <BitStart>3</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>2366</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>187</ID>
                  <Description>"?"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>1F98</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>191</ID>
                  <Description>"?"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>2DD4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>685</ID>
          <Description>"Time Interval Mod"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(timeOfDayCalAOB,DDDA.exe,8B 44 24 08 01 86 68 87 0B 00)
registersymbol(timeOfDayCalAOB)

///

label(iTimeSpeed)
registersymbol(iTimeSpeed)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+08],0
je originalcode
cmp [iTimeSpeed+4],497423f0
jne @f
mov eax,[iTimeSpeed]
mov [esp+8],eax
jmp originalcode

@@:
fild dword ptr [esp+8]
fmul dword ptr [iTimeSpeed+4]
fistp dword ptr [iTimeSpeed+8]
mov eax,[iTimeSpeed+8]
mov [esp+8],eax

originalcode:
mov eax,[esp+08]
add [esi+000B8768],eax

exit:
jmp returnhere

///
iTimeSpeed:
dd #16
dd (float)1.0
dd 0
///

timeOfDayCalAOB: //"DDDA.exe"+3EA83:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
timeOfDayCalAOB: //"DDDA.exe"+3EA83:
db 8B 44 24 08 01 86 68 87 0B 00
//Alt: mov eax,[esp+08]
//Alt: add [esi+000B8768],eax
unregistersymbol(timeOfDayCalAOB)

unregistersymbol(iTimeSpeed)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>686</ID>
              <Description>"Multiplier [F11-Half] [F10-Read]"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">1:Game Default
0.5:Half Game Default
999999:Real Time (almost)
</DropDownList>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>iTimeSpeed+4</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <Value>0.5</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>121</Key>
                  </Keys>
                  <Value>999999</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>207</ID>
          <Description>"Total Weight Mod .4"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightReadAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 8B C6)
registersymbol(totalWeightReadAOB)
aobscanmodule(totalWeightReadInventoryAOB,DDDA.exe,F3 0F 10 84 0A C4 03 00 00 EB 03)
registersymbol(totalWeightReadInventoryAOB)
aobscanmodule(totalWeightWriteAOB,DDDA.exe,F3 0F 11 AB 4C 02 00 00 3B 6B 08)
registersymbol(totalWeightWriteAOB)
aobscanmodule(totalWeightReadOnShopEnterAOB,DDDA.exe,F3 0F 10 84 11 C4 03 00 00)
registersymbol(totalWeightReadOnShopEnterAOB)
aobscanmodule(totalWeightReadOnBuyEndAOB,DDDA.exe,F3 0F 10 84 10 C4 03 00 00 F3)
registersymbol(totalWeightReadOnBuyEndAOB)
aobscanmodule(totalWeightReadonEquipFromStorageAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 F3 ** ** ** ** ** E8 ** ** ** ** F3 ** ** ** ** ** 0F 57 C9)
registersymbol(totalWeightReadonEquipFromStorageAOB)
aobscanmodule(totalWeightReadOnPickUpAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 0F 2F C8 5E)
registersymbol(totalWeightReadOnPickUpAOB)

///

label(bIgnoreWeight)
registersymbol(bIgnoreWeight)
label(pTotalWeight)
registersymbol(pTotalWeight)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
/*label(isparty)*/

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[eax+ecx+000003C4]//

mov edx,[eax+ecx+3c0]
test edx,edx
js originalcode
cmp edx,4
jg originalcode

push eax
lea eax,[eax+ecx]
mov [pTotalWeight+edx*4],eax
pop eax

cmp byte ptr [bIgnoreWeight+edx],0
je originalcode
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:

originalcode:
//movss xmm0,[eax+ecx+000003C4]

exit:
jmp returnhere

///
bIgnoreWeight:
dd 0
pTotalWeight:
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[edx+ecx+000003C4]//

push ebx

mov ebx,[edx+ecx+3c0]
test ebx,ebx
js originalcode2
cmp ebx,4
jg originalcode2

push eax
lea eax,[eax+ecx]
mov [pTotalWeight+ebx*4],eax
pop eax

cmp byte ptr [bIgnoreWeight+ebx],0
je originalcode2
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+ebx],2
jne @f
movss [edx+ecx+3c4],xmm0
@@:

originalcode2:
pop ebx
//movss xmm0,[edx+ecx+000003C4]

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,[ebx+248]
test edi,edi
js originalcode3
cmp edi,4
jg originalcode3

push eax
lea eax,[ebx-178]
mov [pTotalWeight+edi*4],eax
pop eax

@@:
cmp byte ptr [bIgnoreWeight+edi],2
jne originalcode3
xorps xmm5,xmm5

originalcode3:
movss [ebx+0000024C],xmm5

exit3:
jmp returnhere3

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+edx+000003C4]//

push eax

mov eax,[ecx+edx+3c0]
test eax,eax
js originalcode4
cmp eax,4
jg originalcode4

push ebx
lea ebx,[ecx+edx]
mov [pTotalWeight+eax*4],ebx
pop ebx

@@:
cmp byte ptr [bIgnoreWeight+eax],0
je originalcode4
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+eax],2
jne @f
movss [ecx+edx+3c4],xmm0
@@:

originalcode4:
pop eax
//movss xmm0,[ecx+edx+000003C4]

exit4:
jmp returnhere4

///

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[eax+edx+000003C4]//

push ecx

mov ecx,[eax+edx+3c0]
test ecx,ecx
js originalcode5
cmp ecx,4
jg originalcode5

push ebx
lea ebx,[eax+edx]
mov [pTotalWeight+ecx*4],ebx
pop ebx

@@:
cmp byte ptr [bIgnoreWeight+ecx],0
je originalcode5
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+ecx],2
jne @f
movss [eax+edx+3c4],xmm0
@@:

originalcode5:
pop ecx
//movss xmm0,[eax+edx+000003C4]

exit5:
jmp returnhere5

///

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[eax+ecx+000003C4]//

push edx

mov edx,[eax+ecx+3c0]
test edx,edx
js originalcode6
cmp edx,4
jg originalcode6

push ebx
lea ebx,[eax+ecx]
mov [pTotalWeight+edx*4],ebx
pop ebx

@@:
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode6
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:

originalcode6:
pop edx
//movss xmm0,[eax+ecx+000003C4]

exit6:
jmp returnhere6

///

alloc(newmem7,2048)
label(returnhere7)
label(originalcode7)
label(exit7)

newmem7: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[eax+ecx+000003C4]//

push edx

mov edx,[eax+ecx+3c0]
test edx,edx
js originalcode7
cmp edx,4
jg originalcode7

push ebx
lea ebx,[eax+ecx]
mov [pTotalWeight+edx*4],ebx
pop ebx

@@:
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode7
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:

originalcode7:
pop edx
//movss xmm0,[eax+ecx+000003C4]

exit7:
jmp returnhere7

///

totalWeightReadAOB: //"DDDA.exe"+77B350:
jmp newmem
nop
nop
nop
nop
returnhere:

totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
jmp newmem2
nop
nop
nop
nop
returnhere2:

totalWeightWriteAOB: //"DDDA.exe"+580C7:
jmp newmem3
nop
nop
nop
returnhere3:

totalWeightReadOnShopEnterAOB: //"DDDA.exe"+2DEB29:
jmp newmem4
nop
nop
nop
nop
returnhere4:

totalWeightReadOnBuyEndAOB: //"DDDA.exe"+2E4457:
jmp newmem5
nop
nop
nop
nop
returnhere5:

totalWeightReadonEquipFromStorageAOB: //"DDDA.exe"+77B579:
jmp newmem6
nop
nop
nop
nop
returnhere6:

totalWeightReadOnPickUpAOB: //"DDDA.exe"+77B3F9:
jmp newmem7
nop
nop
nop
nop
returnhere7:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
totalWeightReadAOB: //"DDDA.exe"+77B350:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadAOB)
dealloc(newmem2)
totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
db F3 0F 10 84 0A C4 03 00 00
//Alt: movss xmm0,[edx+ecx+000003C4]
unregistersymbol(totalWeightReadInventoryAOB)
dealloc(newmem3)
totalWeightWriteAOB: //"DDDA.exe"+580C7:
db F3 0F 11 AB 4C 02 00 00
//Alt: movss [ebx+0000024C],xmm5
unregistersymbol(totalWeightWriteAOB)
dealloc(newmem4)
totalWeightReadOnShopEnterAOB: //"DDDA.exe"+2DEB29:
db F3 0F 10 84 11 C4 03 00 00
//Alt: movss xmm0,[ecx+edx+000003C4]
unregistersymbol(totalWeightReadOnShopEnterAOB)
dealloc(newmem5)
totalWeightReadOnBuyEndAOB: //"DDDA.exe"+2E4457:
db F3 0F 10 84 10 C4 03 00 00
//Alt: movss xmm0,[eax+edx+000003C4]
unregistersymbol(totalWeightReadOnBuyEndAOB)
dealloc(newmem6)
totalWeightReadonEquipFromStorageAOB: //"DDDA.exe"+77B579:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadonEquipFromStorageAOB)
dealloc(newmem7)
totalWeightReadOnPickUpAOB: //"DDDA.exe"+77B3F9:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadOnPickUpAOB)

///

unregistersymbol(bIgnoreWeight)
unregistersymbol(pTotalWeight)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>273</ID>
              <Description>"1"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pTotalWeight+0*4</Address>
              <Offsets>
                <Offset>3C4</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>274</ID>
                  <Description>"Status [F11-Ignore]"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bIgnoreWeight+0</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>122</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>687</ID>
              <Description>"2"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pTotalWeight+1*4</Address>
              <Offsets>
                <Offset>3C4</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>688</ID>
                  <Description>"Status"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bIgnoreWeight+1</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>689</ID>
              <Description>"3"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pTotalWeight+2*4</Address>
              <Offsets>
                <Offset>3C4</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>690</ID>
                  <Description>"Status"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bIgnoreWeight+2</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>691</ID>
              <Description>"4"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pTotalWeight+3*4</Address>
              <Offsets>
                <Offset>3C4</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>692</ID>
                  <Description>"Status"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bIgnoreWeight+3</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>693</ID>
          <Description>"Affinity Mod"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(affinityCalOnChangeAOB,DDDA.exe,0F B7 86 B8 08 00 00 8B D8 03 C5)
registersymbol(affinityCalOnChangeAOB)

label(iAffinityMod)
registersymbol(iAffinityMod)
label(pLastAffinityChangedCharacter)
registersymbol(pLastAffinityChangedCharacter)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pLastAffinityChangedCharacter],esi
cmp dword ptr [iAffinityMod],0
je originalcode
cmp dword ptr [iAffinityMod],2
jle @f
movzx eax,word ptr [esi+8b8]
cmp eax,[iAffinityMod] //#900
jae @f
sub eax,[iAffinityMod] //#900
neg eax
mov ebp,eax
jmp originalcode

@@:
test ebp,ebp
jns originalcode
cmp dword ptr [iAffinityMod],1
jne @f
xor ebp,ebp
jmp originalcode

@@:
neg ebp

originalcode:
movzx eax,word ptr [esi+000008B8]

exit:
jmp returnhere

///
iAffinityMod:
dd 0 //0:disable, 1:no negative change, 2:all change positive, 3:instnat max, 4:all max
pLastAffinityChangedCharacter:
dd 0
///

affinityCalOnChangeAOB: //"DDDA.exe"+760D1:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
affinityCalOnChangeAOB: //"DDDA.exe"+760D1:
db 0F B7 86 B8 08 00 00
//Alt: movzx eax,word ptr [esi+000008B8]
unregistersymbol(affinityCalOnChangeAOB)

unregistersymbol(iAffinityMod)
unregistersymbol(pLastAffinityChangedCharacter)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>694</ID>
              <Description>"Mod"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:normal (do nothing)
1:no negative change
2:all change positive
850:instant friend (850)
900:instant pink (900)
</DropDownList>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iAffinityMod</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>695</ID>
              <Description>"Last Changed Affinity (850:friend,900:pink)"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">850:friend
900:pink
</DropDownList>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pLastAffinityChangedCharacter</Address>
              <Offsets>
                <Offset>8B8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>696</ID>
              <Description>"Attitude (hex)"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pLastAffinityChangedCharacter</Address>
              <Offsets>
                <Offset>8BA</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>697</ID>
          <Description>"Highlighted Item"</Description>
          <LastState Activated="1"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemNameReadCall,DDDA.exe,8B 44 24 04 39 81 80 00 00 00)
registersymbol(highlightedItemNameReadCall)
aobscanmodule(highlightedItemIDReadAOB,DDDA.exe,8B F0 0F BF 47 10 85 C0 78)
registersymbol(highlightedItemIDReadAOB)
aobscanmodule(highlightedItemStringReadAOB,DDDA.exe,85 C9 74 07 52 57 E8 ** ** ** ** 8B C3)
registersymbol(highlightedItemStringReadAOB)
aobscanmodule(highlightedEquipmentStringReadAOB,DDDA.exe,8B ** ** ** ** ** ** 85 C9 74 07 56 52 E8)
registersymbol(highlightedEquipmentStringReadAOB)
aobscanmodule(highlightedItemWeightAOB,DDDA.exe,F3 0F 10 40 44 83 FE 06)
registersymbol(highlightedItemWeightAOB)

///

label(pHighlightedItem)
registersymbol(pHighlightedItem)
label(pSomeBase2)
registersymbol(pSomeBase2)

label(pHighlightedItemName)
registersymbol(pHighlightedItemName)

label(pHighlightedItemWeight)
registersymbol(pHighlightedItemWeight)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHighlightedItem],edi
mov eax,[esp+1c]
mov [pSomeBase2],eax

originalcode:
movsx eax,word ptr [edi+10]
test eax,eax

exit:
jmp returnhere

///
pHighlightedItem:
dd 0
pSomeBase2:
dd 0
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedItemStringReadAOB+b //DDDA.exe+26908C
pushad
push eax
call highlightedItemNameReadCall
mov [pHighlightedItemName],eax

originalcode2:
popad
//test ecx,ecx
//je highlightedItemStringReadAOB+b //DDDA.exe+26908C
push edx

exit2:
jmp returnhere2

///
pHighlightedItemName:
dd 0
///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
pushad
push eax
call highlightedItemNameReadCall
mov [pHighlightedItemName],eax

originalcode3:
popad
//test ecx,ecx
//je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
push esi

exit3:
jmp returnhere3

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHighlightedItemWeight],eax

originalcode4:
movss xmm0,[eax+44]

exit4:
jmp returnhere4

///
pHighlightedItemWeight:
dd 0
///

highlightedItemIDReadAOB+2: //"DDDA.exe"+5937F:
jmp newmem
nop
returnhere:

highlightedItemStringReadAOB: //"DDDA.exe"+269081:
jmp newmem2
returnhere2:

highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
jmp newmem3
returnhere3:

highlightedItemWeightAOB: //"DDDA.exe"+593AA:
jmp newmem4
returnhere4:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(highlightedItemNameReadCall)
dealloc(newmem)
highlightedItemIDReadAOB+2: //"DDDA.exe"+5937F:
db 0F BF 47 10 85 C0
//Alt: movsx eax,word ptr [edi+10]
//Alt: test eax,eax
unregistersymbol(highlightedItemIDReadAOB)
dealloc(newmem2)
highlightedItemStringReadAOB: //"DDDA.exe"+269081:
db 85 C9 74 07 52
//Alt: test ecx,ecx
//Alt: je highlightedItemStringReadAOB+b //DDDA.exe+26908C
//Alt: push edx
unregistersymbol(highlightedItemStringReadAOB)
dealloc(newmem3)
highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
db 85 C9 74 07 56
//Alt: test ecx,ecx
//Alt: je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
//Alt: push esi
unregistersymbol(highlightedEquipmentStringReadAOB)
dealloc(newmem4)
highlightedItemWeightAOB: //"DDDA.exe"+593AA:
db F3 0F 10 40 44
//Alt: movss xmm0,[eax+44]
unregistersymbol(highlightedItemWeightAOB)

///

unregistersymbol(pHighlightedItem)
unregistersymbol(pSomeBase2)

unregistersymbol(pHighlightedItemName)

unregistersymbol(pHighlightedItemWeight)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>16</ID>
              <Description>"ID"</Description>
              <DropDownList DisplayValueAsItem="1">== Curatives ===============
0000:Airtight Flask
0001:Scrag of Beast
0002:Beast-Steak
0003:Ambrosial Meat
0004:Sour Scrag of Beast
0005:Sour Beast-Steak
0006:Sour Ambrosial Meat
0007:Rotten Scrag of Beast
0008:Rotten Beast-Steak
0009:Rotten Ambrosial Meat
000A:Small Fish
000B:Large Fish
000C:Giant Fish
000D:Small Rank Fish
000E:Large Rank Fish
000F:Giant Rank Fish
0010:Small Rotten Fish
0011:Large Rotten Fish
0012:Giant Rotten Fish
0013:Berry
0014:Apple
0015:Grandgrapes
0016:Moldy Berry
0017:Moldy Apple
0018:Moldy Grandgrapes
0019:Rotten Berry
001A:Rotten Apple
001B:Rotten Grandgrapes
001C:Twigbean
001D:Carrot
001E:Pumpkin
001F:Moldy Twigbean
0020:Moldy Carrot
0021:Moldy Pumpkin
0022:Rotten Twigbean
0023:Rotten Carrot
0024:Rotten Pumpkin
0025:Egg
0026:Golden Egg
0027:Rotten Egg
0028:Sunbright
0029:Moonglow
002A:Wilted Blossom
002B:Greenwarish
002C:Potent Greenwarish
002D:Mushroom
002E:Large Mushroom
002F:Avernal Mushroom
0030:Mithridate
0031:Bringbout
0032:Small Nut
0033:Large Nut
== Tools ===============
0040:Lantern
0041:Lantern (Half-Full)
0042:Ferrystone
0043:Empty Flask
0044:Flask of Water
0045:Flask of Oil
0046:Kindling
0048:Ceramic Jug
0049:Rock
004A:Skull
004B:Pickaxe
004C:Lantern (No Fuel)
004F:Throwblast
0050:Dragon's Spit
== ShortBows===============
01EB:Shortbow
01EC:Direwolf Bow
01ED:Sylvan Bow
01EE:Fluted Bow
01EF:Dragon's Rancor
01F0:Hunter's Bow
01F1:Pleached Limbs
01F2:Fey Whisper
01F3:Stalwart Bow
01F6:Griffinbane
01F7:Repeller Bow
01F8:Rusted Bow
0318:Dragon's Ire
0319:Darkening Storm
==Longbows==========
01F9:Plain Longbow
01FA:Reinforced Longbow
01FB:Bespoke Longbow
01FC:Noble Limbs
01FD:Veteran's Arc
01FE:Dragon's Blink
01FF:Savage Fang
0205:Hydra Husk
0206:Bezel Crown
0207:Rusted Longbow
031A:Dragon's Glaze
031B:Revenant Wail
==Magick Bows========
0208:Gimble Gyre
0209:Terminal Gyre
020A:Herald's Helix
020B:Master's Merle
020C:Dragon's Breath
020D:Dragon's Quickening
020E:Magian Crutch
020F:Metered Catharsis
0210:Militant Dove
0211:Rusted Spellbow
031C:Dragon's Tempest
031D:Blackwing Bow
==Daggers========
0181:Throatcutters
0182:Signs of Valor
0183:Crimson Teeth
0184:Bardiche Daggers
0185:Golden Bardiches
0186:Aneled Bardiches
0187:Vouge Daggers
0188:Divine Razors
0189:Stilettos
018A:Golden Stilettos
018B:Aneled Stilettos
018C:Criteria
018D:Dragon's Vein
018E:Dragon's Pain
018F:Snagdaggers
0190:Snags of Gold
0191:Aneled Snags
0193:Saurian Bane
0194:Dowsing Spikes
0195:Rusted Daggers
021D:Scalding Razors
021E:Kunai
021F:Galvanic Razors
0220:Chilling Razors
0221:Heaven's Key
02C3:Helmbarte Daggers
02C4:Sapfire Daggers
02C5:Framae Blades
==Maces==========
0142:Mace
0143:Thousand Troops
0144:Obliteratrix
0145:Golden Obliteratrix
0146:Aneled Obliteratrix
0147:Steel Beak
0148:Beak of Gold
0149:Aneled Beak
014A:Threaded Cudgel
014B:Dragon's Toll
014C:Morgenstern
014D:Bloodthirsty Beak
014E:Thousand Stings
014F:Golden Stings
0150:Aneled Stings
0151:Ingot Club
0152:Totem Mace
0153:Dragon's Presence
0154:Sickening Skull
0155:Royal Alms
0156:Rusted Mace
01C3:Crescending Roar
01C4:Font of Fire
0215:Shooting Star
0216:Magebreaker
0217:Virge of Madness
==Warhammers==========
0169:Dragon's Flight
016C:Judgment
016D:Mounted Pale
016E:Golden Pale
016F:Aneled Pale
0170:Cyclops Sigil
0171:Golden Cyclops Sigil
0172:Aneled Cyclops Sigil
0173:Triple Tooth
0174:Teeth of Gold
0175:Aneled Tooth
0176:Ferric Talon
0177:Bloody Thistle
0178:Steel Urchin
0179:Angel's Fist
017A:Dragon's Repast
017B:Black Matter
017C:Chestcaver
017E:Cyclop's Bane
017F:Stamina Hammer
0180:Rusted Warhammer
01C7:Fiery Talon
01C8:Rooted Gloom
02C0:Twinpaler
02C1:Twinterfang
02C2:Devil's Nail
==Shields==========
01CD:Iron Shield
01CE:Pelta
01CF:Round Shield
01D0:Gran Sorean Shield
01D1:Mark of the Chimera
01D2:Orilux Shield
01D3:Lustrous Targe
01D4:Sable Sentinel
01D5:Dragon's Aegis
01D6:Feather-Light Pelta
01D7:Scarred Sentinel
01D8:Dragon's Den
01D9:Hellfang
01DA:Brutish Wall
01DB:Rusted Shield
021A:Scorched Pelta
021B:Lambent Shield
0314:Dragon's Roost
0315:Dread Aspis
==Magick Shields==========
01DC:Wooden Wall
01DD:Magick Buckler
01DE:Fine Magick Bucklers
01DF:Lustrous Greatshield
01E0:Blute Kite Shield
01E1:Wizard's Vizard
01E2:Knight's Honor
01E3:Angel's Sanctum
01E4:Dark Buckler
01E5:Dragon's Faith
01E8:Zombiebane
01E9:Brilliance
01EA:Rusted Magick Shield
021C:Thunder Kite Shield
0316:Purged Buckler
0317:Diabolic Shield
==Staves==============
0196:Wooden Staff
0197:Favored Flower
0198:Volant White
0199:Unfettered Claw
019A:Golden Claw
019B:Aneled Claw
019C:Cast Stone
019D:Dragon's Nous
019E:Ironclad Staff
019F:Unspoken Grace
01A0:Golden Grace
01A1:Aneled Grace
01A2:Anchor To Heaven
01A3:Path To Heaven
01A4:Gleam Of Heaven
01A5:Favored Canopy
01A6:Frigid Finger
01A8:Goblin Bane
01A9:Legion's Might
01AA:Rusted Staff
01C9:Crimson Glare
01CA:Thunderclap
01CB:Divine Axis
01CC:Algid Bloom
02C6:Chilling Focus
02C7:Melting Focus
02C8:Dominion Claw
==Archistaves=============
01AB:Common Archistaff
01AC:Favored Branches
01AD:Talarian White
01AE:Plucked Heart
01AF:Solar Providence
01B0:Eclipsed Providence
01B1:Dragon's Wit
01B2:Keen Dragon's Wit
01B3:Grievous Horns
01B4:Grievous Gold
01B5:Grievous Black
01B6:Meniscus
01B7:Golden Meniscus
01B8:Aneled Meniscus
01B9:Helical Archistaff
01BA:Solar Numen
01BB:Dragons Risen
01BD:Evil Eyesight
01BE:Caged Fury
01BF:Rusted Archistaff
0222:Frozen Tomorrow
0223:Stagnant Surge
0311:Bane Archistaff
0312:Hallowed Dragon
0313:Sanguine Stalk
==Swords==============
012D:Iron Sword
012E:Cutlass
012F:Silver Rapier
0130:Golden Rapier
0131:Aneled Rapier
0132:Broadsword
0133:Trusty Sword
0134:Undulant Sword
0135:Undulant Gold
0136:Undulant Black
0137:Crossed Cinquedea
0138:Dragon's Dogma
0139:Bastard Sword
013A:Golden Bastard
013B:Aneled Bastard
013C:Carnation
013D:Tight Cinquedea
013E:Ascalon
013F:Wounded Fury
0140:Force Hatchet
0141:Rusted Sword
01C0:Eden's Warden
01C1:Caladbolg
01C2:Almace
01C5:Malignance
01C6:Ardent Will
0212:Cursed Bite
0213:Cursed Light
0214:Devil's Bane
0225:White Hawk's Talon
==Greatswords=============
0157:Two-Hander
0158:Steel Greatsword
0159:Lifetaker
015A:Soultaker
015B:Soulbreaker
015C:War Blade
015D:Flamberge
015E:Cassardi Flamberge
015F:Saving Grace
0160:Dwells-In-Light
0161:Dragon's Bite
0162:Lancer's Sword
0163:Golden Lance
0164:Aneled Lance
0165:Gryphic Victory
0166:Gryphic Gold
0167:Gryphic Black
0168:Wounded Heart
016A:Iraklis
016B:Rusted Greatsword
0224:Thousandlimbs
02BD:Gransys Flamberge
02BE:Boltbringer
02BF:Bitter End
==Outfits===============
049D:Set of Servant's Garb
049E:Set of Duke's Clothing
049F:Set of Salvation Robes
04A0:Set of Fisherman's Garb
04A1:Set of Fisherman's Tatters
04A2:Set of Royal Guard Armor
04A3:Set of Lady's Garb
04A4:Set of Caretaker's Garb
04A5:Forest Tunic Set
04A7:Set of Prisoner's Rags
04A8:Set of Jester's Motley
04A9:Nameless Armor Set
04AA:Captain's Armor Set
04AB:Set of Fop's Trek Wear
04AC:Set of Voldoan Armor
04AD:Set of Priest Vestments
04AE:Set of Lady's Trek Wear
04AF:Set of Queen's Clothing
04B0:Set of Nun Vestments
==Jewlry===============
043F:Baleful Nails
0440:Ogre Bone
0442:Barbed Nails
0443:Ring of Gules
0444:Ring of Azure
0445:Ring of Purpure
0446:Ring of Sable
0447:Ring or Argent
0448:Ring of Ruby
0449:Ring of Sapphire
044A:Ring of Amethyst
044B:Ring of Pearl
044C:Ring of Onyx
044D:Rose Ring
044E:Iris Ring
044F:Violet Ring
0452:Cleansing Earring
0453:Restless Earring
0454:Nimble Earring
0455:Free-Spoken Earring
0456:Benevolent Earring
0457:Sight Earring
0458:Faithful Earring
0459:Exuberant Earring
045A:Stalwart Earring
045B:Noble Earring
045C:Harmonious Earring
045D:Dignified Earring
045E:Indomitable Earring
045F:Dragonblood
0460:Silver Ring
0461:Golden Ring
0462:Platinum Ring
0463:Red Star Ring
0464:Red Star Earring
0465:Green Star Ring
0466:Green Star Earring
0467:Blue Star Ring
0468:Blue Star Earring
0469:Premium Ring
046A:Premium Earring
047B:Vandal's Ring
047C:Bloody Knuckle
047D:Stonewall Earring
047E:Ring of Dessication
047F:Ring of Perseverance
0480:Wanderlust Ring
0483:Master Ring
0484:Savior Ring
==Head Armor===========
02CB:Leather Cap
02CC:Circlet
02CD:Leather Hood
02CE:Chain Coif
02CF:Faerie Hood
02D0:Bronze Sallet
02D1:Feather Hood
02D2:Verdant Hood
02D3:White Cap
02D4:Skulker's Mask
02D5:Horned Helm
02D6:Cyclops Veil
02D7:Red Leather Cap
02D8:Red Leather Hood
02D9:Dragon Band
02DA:Wizard's Helm
02DB:Lupine Veil
02DC:Incognito Mask
02DD:Bandit's Mask
02DE:Barreled Helm
02DF:Leather Circlet
02E0:Iron Helm
02E1:Gryphic Helm
02E2:Assassin's Mask
02E3:Iron Headgear
02E4:Twilight Hood
02E5:Guardian's Hood
02E6:Gossip's Mask
02E7:Summery Cowl
02E8:Chimeric Armet
02E9:Lion-Lord's Helm
02EA:Crowned Hood
02EB:Clerical Cap
02EC:Meloirean Helm
02ED:Steel Sallet
02EE:Coupled Headgear
02EF:Archwizard's Helm
02F0:Autumn Hood
02F1:Laurel Circlet
02F2:Meloirean Cyclops Veil
02F3:Direwolf Veil
02F4:Sultry Cowl
02F5:Crimson Armet
02F6:Grisly Skull
02F7:Golden Lion Helm
02F8:Dragon Knight's Helm
02F9:Sage's Hood
02FA:Barbarian Chief's Helm
02FB:Twilight Mask
02FC:Diadem
02FD:Dragonroar
02FE:Hero's Hood
02FF:Chaos Helm
0300:Emissary Hood
0301:Monomi Mask
0302:Ancient Circlet
0303:Heresy Hood
0304:Beowulf Mask
0305:Apollo Mask
0306:Siegfried Mask
0307:Saint George Mask
0308:Silver Eyeglasses
0309:Gold Eyeglasses
030A:Black Eyeglasses
030B:Red Eyeglasses
030C:Farewell Hood
030D:Wyrmfyre Vizard
030E:Dragonseye Band
030F:Dragonspulse Circlet
0310:White Hawk Sallet
0369:Traveler's Hood
036A:Minstrel's Band
036B:Mistletoe Circlet
036C:Immortal's Helm* - Bonus 6
036D:Persecutor's Mask
036E:Farseer's Cap
036F:Adept's Hat* - Bonus 0
0371:Nether Helm*
0372:Hellfire Helm*
0373:Hood of Shadow*
0374:Hood of Oblivion*
0375:Grave Veil*
0376:Carrion Veil*
0417:Tormentor's Mask
0418:Dragonwing Circlet
0489:Tiara of Enlightenment
0370:Ruminator's Monocle
048A:Jester's Cap
==Chest Clothing========
0229:Faded Vest
022A:Traveler's Shirt
022B:Tunic
022C:Bandages
022D:Cassardi Shift
022E:Fine Cassardi Shirt
022F:Hemp Shirt
0230:Leather Chestguard
0232:Linen Shirt
0233:Riveted Coat
0234:Assembled Vest
0235:Quilted Jerkin
0236:Cotton Tunic
0237:Lady's Corset
0238:Chain Mail
0239:Braided Shirt
023A:Chainmail Bracers
023B:Bliaut
023C:Light Outfit
023D:Iron Vest
023E:Blessed Vest
023F:Brigandine Jerkin
0240:Hard Leather Plate
0241:Trooper Outfit
0243:Maiden's Camisole
0245:Silver Vest
0246:Silver Chestplate
0247:Forest Tunic
0248:Alchemick Vest
0249:Plated Coat
024A:Hunter's Shirt
024B:Gambeson
024C:Doublet
024D:Noblewoman's Corset
024E:Dragonleather Vest
0250:Abyssinal Outfit
0251:Crimson Jerkin
0252:Silver Cuirass
0253:Marshal's Bracers
0254:Swordsman's Shirt
0255:White Hawk Tunic
0365:Patterned Gambeson
0000:Torso Armor
0227:Plebian Shirt
0321:Skull Belts
0322:Leather Jacket
0323:Shabby Robe
0324:Bone Armor
0325:Bone Plate Armor
0326:Leather Belts
0327:Sectional Armor
0328:Chestguard
0329:Scholar's Coat
032A:Healer's Robe
032B:Bronze Cuirass
032C:Leather Waistwrap
032D:Mummer's Wear
032E:Bronze Lorica
032F:Hide Armor
0330:Surcoat
0331:Hunter's Jacket
0332:Red Leather Armor
0334:Missionary's Robe
0335:Frame Plate
0336:Padded Armor
0337:Sectional Iron Plate
0338:Gryphic Armor
0339:Iron Lorica
033A:Weak Guard
033B:Magician's Surcoat
033C:Dalmatica
033D:Grand Surcoat
033E:Summery Pareo
033F:Recluse's Robe
0340:Maiden's Petticoat
0341:Flutter Padding
0342:Chimeric Half Plate
0343:Scale Coat
0344:Rex Lion Padding
0345:Sage's Robe
0346:Animistic Robe
0347:Meloirean Plate
0348:Steel Cuirass
0349:Lamellar Jacket
034A:Cardinal Surcoat
034B:Royal Surcoat
034C:Divine Surcoat
034D:Golden Belt
034E:Sultry Pareo
034F:Crimson Robe
0350:Archer's Culottes
0351:Crimson Plate
0352:Grisly Bone Armor
0353:Golden Lion Padding
0354:Matte Robe
0355:Philosopher's Robe
0356:Red Dragon Scale
0357:Dark Lorica
0358:Berserkin
0359:Hero's Surcoat
035A:Chaos Armor
035B:Emissary Armor
035C:Monomi Coat
035D:Ancient Robe
035E:Heresy Armor
035F:Abyssinal Coat
0360:Solar Armor
0361:Asura Armor
0362:Leather Protector
0363:Swordsman's Plate
0364:White Hawk Half-Plate
0377:Traveler's Vest
0378:Novice's Coat
037A:Immortal's Coat* - Bonus 6
037B:Cursed King's Belt
037C:Trophy Jacket* - Bonus 5
037D:Adept's Robe* - Bonus 4
037E:Celestial Armor
037F:Votary's Robe
0380:Traitor's Armor*
0381:Hellfire Armor*
0382:Coat of Shadow*
0383:Coat of Oblivion*
0384:Grave Mantle*
0385:Carrion Mantle*
0488:Robe of Enlightenment
048B:Wavering Cloth
048D:Vagabond Armor
==Arm Armor========
0386:Wizarding Gloves
0387:Force Bangles
0388:Immortal's Bracers* - Bonus 6
0389:Trophy Bracers* - Bonus 10
038A:Dragonwing Gloves
038B:Blessed Sleeves
038C:Wooden Bands
038D:Talismanic Beads
038E:Novice's Bracers
038F:Funnybone Guards
0390:Bandit's Glove
0391:Scholar's Bangle
0392:Navy Leather Gloves
0393:Bronze Gauntlets
0394:Hand Covers
0395:Bronze Bangles
0396:Scale Armguard
0397:Assailant's Bracers
0398:Iron Bracers
0399:Red Leather Glove
039A:Tiger Bangle
039B:Silver Bands
039C:Iron Armguard
039D:Gryphic Gauntlets
039E:Iron Manicae
039F:Assembled Sleeves
03A1:Runic Bangles
03A2:Leather Gloves
03A3:Master's Bracers
03A4:Chimeric Gauntlets
03A5:Arm Crest
03A6:Scarlet Hand Covers
03A7:Jade Bangles
03A8:Meloirean Armguard
03A9:Steel Gauntlets
03AA:Dragon Hide Bracers
03AB:Assassin's Armguards
03AC:Alchemickal Bangles
03AD:Champion's Bangles
03AE:Black Leather Gloves
03AF:Darkened Gloves
03B0:Crimson Gauntlets
03B1:Grisly Bracers
03B2:Twilight Manicae
03B3:Burnished Bracers
03B4:Gleaming Bangles
03B5:Golden Wristbands
03B6:Dragonscale Arm
03B7:Shadow Gauntlets
03B8:Hero's Gauntlets
03B9:Chaos Gauntlets
03BA:Emissary Bracers
03BB:Monomi Bracers
03BC:Ancient Bangles
03BD:Heresy Armguards
03BE:Abyssinal Bracers
03BF:Farewell Gloves
03C0:Gloves of Might
03C1:Swordsman's Bracers
03C2:White Hawk Gauntlets
03C3:Crested Armguards
03C4:Bonds of the Dragon
03C5:Sinner's Gauntlets*
03C6:Hellfire Gauntlets*
03C7:Grave Claws*
03C8:Carrion Claws*
03C9:Worker's Gloves
0419:Gauntlets of Shadow*
041A:Gauntlets of Oblivion*
048C:The Lion's Spine
==Leg Armor========
0228:Plebian Trousers
0278:Short Pants
0279:Traveler's Tights
027A:Cotton Hose
027B:Leather Bandings
027C:Cassardi Trousers
027D:Fine Cassardi Hosen
027F:Hemp Hosen
0280:Worker's Pants
0281:Yellow Gaiters
0282:Half Chain Hosen
0283:Laced Leggings
0284:Brown Leathers
0285:Evening Tights
0286:Bandit Stalkers
0287:Urban Hose
0288:Twisted Leathers
0289:Seeker Tights
02AF:Laborer's Breeches
02B0:White Stockings
02B1:Full Chain Hosen
02B2:Black Gaiters
02B3:Huntsman's Trousers
02B4:Braided Hosen
02B5:Brown Laced Leggings
02B6:Iron Bandings
02B7:Silver Hosen
02B8:Alchemickal Hosen
02B9:Denim Hosen
02BA:Silk Lingerie
02BB:Swordsman's Pants
02BC:White Hawk Leggings
0367:Delta Guard
0368:Silk Tights
0000:Leg Armor
03CA:Cloth Greaves
03CB:Budget Greaves
03CC:Leather Cuisses
03CD:Leather Shoes
03CE:Novice Breeches
03CF:Cassardi Greaves
03D0:Metal Greaves
03D1:Fur Greaves
03D2:Scholar's Boots
03D3:Iron Leg Guards
03D4:Steel-Toed Boots
03D5:Bronze Sabatons
03D6:Fur &amp; Cuisses
03D7:Riveted Boots
03D8:Blue Longkilt
03D9:Dusk Shoes
03DA:Steel Sabatons
03DB:Battle Greaves
03DC:Downcuffs &amp; Cuisses
03DD:Mage's Shoes
03DE:Red Leather Cuisses
03DF:Over-Knee Boots
03E0:Scale Greaves
03E1:Iron Boots
03E2:Iron Cuisses
03E3:Gryphic Greaves
03E4:Chainmail Skirt
03E5:Assembled Breeches
03E6:Wizard's Boots
03E7:Red Longkilt
03E8:Fine Over-Knee Boots
03E9:Raptor Cuisses
03EA:Gloaming Shoes
03EB:Chimeric Sabatons
03EC:Thick Fur Greaves
03ED:Assassin's Breeches
03EE:Nimble Cuisses
03EF:Red Over-Knee Boots
03F0:Meloirean Greaves
03F1:Leather Ocreae
03F2:Striker's Greaves
03F3:Royal Cuisses
03F4:Purple Longkilt
03F5:Molten Boots
03F6:Dark Over-Knee Boots
03F7:Flame Skirt
03F8:Superior Cuisses
03F9:Crimson Sabatons
03FA:Grisly Greaves
03FB:Carmine Breeches
03FC:Exotic High Boots
03FD:Shadow Greaves
03FE:Dragonbeards
03FF:Twilight Greaves
0400:Holy Cuisses
0401:Hero's Cuisses
0402:Chaos Greaves
0403:Emissary Greaves
0404:Monomi Greaves
0405:Ancient Greaves
0406:Heresy Greaves
0407:Abyssinal Greaves
0408:Swordsman's Greaves
0409:White Hawk Cuisses
040A:Foreign Waistguard
040B:Hinterland Waistguard
040C:Extrinsic Waistguard
040D:Immortal's Sabatons* - Bonus 6
040E:Trophy Boots* - Bonus 13
040F:Mercenary Slogs
0410:Dragonwing Boots
0411:Assault Boots
0412:Apostate's Anklet
0413:Betrayer's Greaves*
0414:Hellfire Greaves*
0415:Grave Greaves*
0416:Carrion Greaves*
041B:Boots of Shadow*
041C:Boots of Oblivion*
==Cloaks=========
041D:Adept's Mantle
0422:Leather Cape
0423:Shed Cape
0424:Shoulder Cape
0425:Ebon Neck Wrap
0426:Scholar's Cape
0427:Mahogany Cape
0428:Direwolf Cape
0429:Adventurer`s Cloak
042A:Feather Cape
042B:Knight's Mantle
042C:Harpy Cloak
042D:Alchemickal Cloak
042E:Violet Neck Wrap
042F:Paladin's Mantle
0430:Gryphic Cloak
0431:Scarlet Cape
0432:Pauldron
0433:Feral Cape
0434:Royal Mantle
0435:Dignified Cape
0436:Dragon Knight's Cloak
0437:Ancient Cape
0438:lordly Cloak
0439:Hero's Cape
043A:Monomi Neck Wrap
043B:heresy Cloak
043C:Nebula Cape
043D:Magnanimous Cloak
043E:Farewell Cloak
046B:Wyrm Hunt Mantle
046C:Beastly Mantle
046D:Conqueror's Mantle
046E:Tattered Mantle
046F:Swordsman's Mantle
0470:White Hawk Cape
0471:Divine Embrace
0473:Nomad's Cloak
0474:Sovereign's Mantle
0479:Blasphemer's Cloak
047A:Hellfire Cloak
==BBI Novelty========
00CE:Antique Panoply
0748:Auspicious Incense
011D:Dragon's Gaze
073B:Fiendish Essence
0742:Jewel of Antilight
0743:Jewel of Summoning
0734:Light Pickaxe
073F:Liquid Effluvium
0746:Lordly Tonic
073D:Month-Dried Harspud
073A:Rancid Bait Meat
0720:Scroll of Acquisition
071F:Scroll of Conveyance
072A:Scroll of Facility
0725:Scroll of Recuperation
073E:Decade-Dried Harspud
0741:Dreamwing Nostrum
073C:Fiendish Extract
0747:Godly Analeptic
05CB:Priceless Artifact
0726:Scroll of Adhesion
071C:Scroll of Predation
071E:Scroll of Tenacity
072C:Elite Lantern
0731:Expediting Papers
072D:Ring of Thrift
0724:Scroll of Athleticism
0728:Scroll of Flow
0729:Scroll of Grace
0723:Scroll of Mettle
0727:Scroll of Opportunism
0721:Scroll of Prolongation
==OTHER/UNCATEGORIZED=======
004C:Lantern (No Fuel)
004F:Throwblast
0050:Dragon's Spit
0052:Smother Sap
0053:Harspud Milk
0054:Harspud Juice
0055:Harspud Sauce
0056:Interventive
0057:Spicy Mushroom Tea
0058:Light-Cure
005A:Panacea
005B:White Wine
005C:Red Wine
005D:Poison Flask
005E:Absorbent Rag
005F:Clean Cloth
0061:Secret Softener
0062:Liquid Vim
0063:Salubrious Brew
0064:Bottled Haste
0065:Eyedropper
0066:Throat Drops
0068:Placative Brew
0069:Liberating Brew
006A:Purifying Brew
006C:Dose of Strength
006D:Dose of Courage
006E:Warlock's Draught
006F:Cleric's Draught
0070:Conqueror's Periapt
0071:Angel's Periapt
0072:Demon's Periapt
0073:Mage's Periapt
0074:Monk's Periapt
0075:Veteran's Periapt
0076:Banker's Periapt
0077:Isometricine
0078:Foreign Knife
0083:Poison Arrow
0084:Blinder Arrow
0085:Silencer Arrow
0086:Sleeper Arrow
0087:Oil Arrow
0089:Petrifying Arrow
008B:Blast Arrow
008C:Maker's Finger
008E:First Key To Salvation
008F:Second Key To Salvation
0090:First Gem of Salvation
0091:Second Gem of Salvation
0092:Third Gem of Salvation
0093:Fourth Gem of Salvation
0094:Watergod's Altar Key
0095:Quarry Key
0096:Portcrystal
0097:Wakestone
0098:Wyrm Hunt License
0099:Gardener's Permit
009A:Ancient Slate
009B:Wakestone Shard
009E:Incriminating Contract
00A2:Salomet's Grimoire
00A3:Confidential Letter
00A4:Parcel
00A6:Altar Slate
00A7:Maul's Badge Of Amity
00A8:Ophis's Badge Of Amity
00AA:Gold Idol
00AB:Blessed Flower
00AC:Dead Flower
00AD:Ancient Tablet
00AE:Fifth Gem of Salvation
00AF:Godsbane
00B0:Windbluff Tower Key
00B1:Arisen's Bond
00B3:Watergod's Altar Lever
00B4:Shadow Fort Lever
00B5:Wyrmward Perfume
00B8:Seeker's Token
00B9:Badge of Vows
00BB:Engraved Lever
00BE:First Journal Entry
00BF:Second Journal Entry
00C0:Third Journal Entry
00C1:Fourth Journal Entry
00C2:Fifth Journal Entry
00C3:Final Journal Entry
00C4:Unsigned Letter
00C5:Tightly Folded Letter
00C6:Silver Idol
00C7:Bronze Idol
00CA:Godsbane
00CB:Coin Purse of Charity
00CC:Scriptures
00CD:Promissory Note
00CE:Antique Panoply
00CF:Matured Greenwarish
00D0:Pretty Stone
00D1:Champion's Writ
00D2:Warden's Writ
00D3:Archmage's Writ
00D4:Quina's Note
00D5:Pilgrim's Charm
00D9:Strongwarish
00DA:Badge of Merit
00DB:Rift Crystal
00DD:Salvation's Badge
00DE:Manse Key
00DF:Skeleton Key
00E0:Love-In-The-Rough
00E1:Ne'er-Do-Part
00E5:Wyrmking's Ring
00E6:Kept Scrag of Beast
00E7:Kept Beast-Steak
00E8:Kept Ambrosial Meat
00E9:Kept Sour Scrag of Beast
00EA:Kept Sour Beast-Steak
00EB:Kept Sour Ambrosial Meat
00EC:Kept Rotten Scrag of Beast
00ED:Kept Rotten Beast-Steak
00EE:Kept Rotten Ambrosial Meat
00EF:Kept Small Fish
00F0:Kept Large Fish
00F1:Kept Giant Fish
00F2:Kept Small Rank Fish
00F3:Kept Large Rank Fish
00F4:Kept Giant Rank Fish
00F5:Kept Small Rotten Fish
00F6:Kept Large Rotten Fish
00F7:Kept Giant Rotten Fish
00F8:Kept Berry
00F9:Kept Apple
00FA:Kept Grandgrapes
00FB:Kept Moldy Berry
00FC:Kept Moldy Apple
00FD:Kept Moldy Grandgrapes
00FE:Kept Rotten Berry
00FF:Kept Rotten Apple
0100:Kept Rotten Grandgrapes
0101:Kept Twigbean
0102:Kept Carrot
0103:Kept Pumpkin
0104:Kept Moldy Twigbean
0105:Kept Moldy Carrot
0106:Kept Moldy Pumpkin
0107:Kept Rotten Twigbean
0108:Kept Rotten Carrot
0109:Kept Rotten Pumpkin
010A:Kept Egg
010B:Kept Golden Egg
010C:Kept Rotten Egg
010D:Kept Sunbright
010E:Kept Moonglow
010F:Kept Wilted Blossom
0110:Ferrystone
0111:Maker's Finger
0112:Portcrystal
0113:Wakestone
0114:Wakestone Shard
0115:Wyrmward Perfume
0116:Salomet's Grimoire Forgery
0117:Gold Idol Forgery
0118:Silver Idol Forgery
0119:Bronze Idol Forgery
011A:Wyrmking's Ring Forgery
011B:Rift Fragment
011C:Rift Cluster
011D:Dragon's Gaze
011E:Confidential Letter Forgery
04B4:Royal Banner
04B5:Enlistment Corps Banner
04B6:War Bugle
04B7:Fishing Bob
04B8:Bucket
04B9:Hoe
04BA:Spade
04BB:Scythe
04BC:Hammer
04BD:Trowel
04BE:Work Table
04BF:Quill
04C0:Wooden Board
04C1:Tray
04C2:Sconce
04C3:Blank Scroll
04C4:Broom
04C5:Ancient Scroll
04C6:Shackle
04C7:Large Coin Pouch
04C8:Coin Pouch
04C9:Small Coin Pouch
04CA:Giant Coin Pouch
04CB:Hunk of Ore
04CC:Goblin Horn
04CD:Wormwood Sap
04CE:Iron Blade Piece
04CF:Slate-Colored Horn
04D0:Curious Wine
04D1:Ebon Blade Piece
04D2:Night Terror Horn
04D3:Blood Decanter
04D4:Small Fang
04D5:Wolf Pelt
04D6:Large Fang
04D7:Direwolf Pelt
04D8:Hellhound Fang
04D9:Hellhound Pelt
04DA:Ember Crystal
04DB:Saurian Scale
04DC:Poison Sac
04DD:Fisheye Stone
04DE:Saurian Tail
04DF:Striped Saurian Skin
04E0:Yellow Poison Sac
04E1:Incarnadine Scale
04E2:Inky Saurian Skin
04E3:Acid Sac
04E4:Snowy Saurian Skin
04E5:Argentine Sac
04E6:Purpure Crystal
04E7:Harpy Pinion
04E8:Harpy Rectrix
04E9:Elongated Claw
04EA:Glacial Pinion
04EB:Glacial Rectrix
04EC:Spurious Wing
04ED:Sinistone
04EE:Petrifactor
04EF:Bastard Wing
04F0:Shroud
04F1:Putrid Gold Tooth
04F2:Necrophagous Loin
04F3:Rusted Plate
04F4:Aged Insignia
04F5:Hex Runes
04F6:Brawn Runes
04F7:Miasmite Shard
04F8:Miasmite
04F9:Eldricite Shard
04FA:Eldricite
04FB:Astracite Shard
04FC:Astracite
04FD:Black Crystal
04FE:Immortelle
04FF:Vengeful Mirror
0500:Wailing Crystal
0501:Craft Bone
0502:Scrap Iron
0503:Hard Bone
0504:Dark Peridot
0505:Fell-Lord's Bone
0506:Lordly Emblem
0507:Mandrake
0508:Torn Grimoire Preface
0509:Torn Grimoire Appendix
050A:Agate
050B:Forgotten Arcanum
050C:Pigeon's Blood
050D:Rugged Bone
050E:Rugged Tusk
050F:Misshapen Eye
0510:Ogre Spur
0511:Ogre Tooth
0512:Unspeakable Meat
0513:Dappled Ore
0514:Magick Medal
0515:Hunk of Gold Ore
0516:Electrum
0517:Griffin Pinion
0518:Great Griffin Claw
0519:Slick Black Pinion
051A:Cockatrice Beak
051B:Hydra's Lifeblood
051C:Poison Hydra Fang
051D:Black Hydra Scale
051E:White Hydra Scale
051F:Hydra Gallstone
0520:Freakish Claw
0521:Freakish Mane
0522:Freakish Scale
0523:Black Freakish Claw
0524:Black Freakish Mane
0525:Black Freakish Horn
0526:Black Freakish Scale
0527:Malecryst
0528:Evil Eyeball
0529:Malecryst Shard
052A:Dragon Scale
052B:Crimson Dragon Scale
052C:Putrid Dragon Scale
052D:Great Dragon Horn
052E:Great Dragon Alula
052F:Great Dragon Claw
0530:Great Dragon Fang
0531:Indurated Dragonsblood
0532:Dragon Horn
0533:Dragon Claw
0534:Azure Dragon Scale
0535:Amber Dragon Scale
0536:Virid Dragon Scale
0537:Rabbit Pelt
0538:Snakeskin
0539:Spider Venom
053B:Desiccated Herbs
053C:Stone-Moss Poultice
053D:Foreign Medicament
053E:Pickled Mushrooms
053F:Backfat Oil
0540:Staminal Drench
0541:Crimson Concoction
0542:Cerulean Concoction
0543:Verdigris Concoction
0544:Violet Concoction
0545:Balmy Perfume
0546:Balmy Incense
0547:Rousing Perfume
0548:Rousing Incense
0549:Herb Ale
054A:Select Herb Ale
054B:Distilled Herb Ale
054C:Secret Herb Ale
054D:Finest Herb Ale
054E:Fragrant Herb Ale
054F:Perfect Herb Ale
0550:Detoxicating Powder
0551:Oak Leaf Oil
0552:Vigilite
0553:Throat Remedy
0554:Peppermint Seed
0555:Nostalgia Dust
0556:Drop of Deliverance
0557:Frozen Holy Water
0558:Cockatrice Liquor
0559:Font of Vigor
055A:Font of Constitution
055B:Tagilus's Miracle
055C:Steel Nut Salve
055D:Salomet's Secret
055E:Decoction of Bandlily
055F:Mushroom Potage
0560:Sobering Wine
0561:Martyr's Talisman
0562:Golden Talisman
0563:Mage's Talisman
0564:Iridescent Talisman
0565:Vigor Extract
0566:Serenity Extract
0567:Silverwheat Paste
0568:Goldbean Grind
0569:Leaden Globe
056A:Headless Icon
056B:Warlock's Incense
056C:Cleric's Incense
056D:Goddess Cameo
056E:Wroth Mask
056F:Decaying Grimoire
0570:The Sundering Spear Tome
0571:Fulgurous Lord Tome
0572:Winter's Path Tome
0573:Jewel of Silence
0574:Jewel of Darkness
0575:Jewel of Time
0576:Jewel of Health
0577:Jewel of Endurance
0578:Jewel of Petrifaction
0579:Jewel of Toxicity
057A:Jewel of Sleep
057B:Jewel of Vicissitude
057D:Sweet Pollen
057E:Cloudwine
057F:Shadowcap
0580:Unremarkable Ore
0581:White Sage
0582:Sand-Layer Ore
0583:Stagnant Shroom
0584:Purple Anise
0585:Firefly Stone
0586:Capeflower
0587:King Bay Leaf
0588:Cassardite
0589:Lava Flower
058A:Catacomb Gold
058B:Flammica
058D:Imperial Acid
0593:Copperstone
0594:Godsthrone Blossom
0595:Lodestone
0596:Reminishroom
0597:Destiny Grass
0598:Devilwort
0599:Fiend's Perch
059A:Grandblossom
059E:Gloamcap
059F:Cragwort
05A0:Burst-Rock
05A1:Windmill Flower
05A2:Scarlet Angelica
05A3:Nightcry
05A4:Waterfell Gentian Root
05A5:Waterfell Gentian Leaf
05A7:Polar Mushroom
05AE:Alluvial Yore-Ore
05AF:Bladeleaf
05B0:Shiverberry
05B1:Southron Iron
05B2:Southron Oregano
05B3:Thornflower
05B4:Chaffstem
05B5:Nurse Log Sap
05B7:Gransys Herb
05B8:Toadstool Sitter
05B9:Spiny Nut
05BA:Loneflower
05BB:Anathema Grass
05C1:Wintry Herb
05C2:White Orchid
05C3:Sorrowstone
05C4:Jasper Blossom
05C7:Ancient Ore
05C8:Droughtshroom
05C9:Cursed Carving
05CA:Snakeskin Purse
05CB:Priceless Artifact
05CC:Brick
05CD:Festival Pie
05CE:Gran Soren Rubble
05CF:Noonflower
05D1:Tuft of Hair
05D2:Spring Water
05DD:Symone's Petition
05DE:Fedel's Petition
05DF:Geffrey's Petition
05E0:Jasper's Condemnation
05E1:Sara's Condemnation
05E2:Pip's Condemnation
05E3:Soiled Affidavit
05E4:Tattered Affidavit
05E5:Sweat-Stained Affidavit
05E6:Blurred Affidavit
05E7:Chamberlain's Affidavit
05E8:Dirty Affidavit
05E9:Moldy Affidavit
05EA:Worn Affidavit
05EB:Ripped Affidavit
05EC:Gift Ledger
05ED:Drake's Tear
05EE:Wyrm's Tear
05EF:Wyvern's Tear
05F0:Scather's Elixir
05F1:Medicant's Elixir
05F2:Mitigator's Elixir
05F3:Challenger's Elixir
05F4:Utilitarian's Elixir
05F5:Guardian's Elixir
05F6:Nexus's Elixir
05F7:Pioneer's Elixir
05F8:Acquisitor's Elixir
05F9:Neutralizing Elixir
05FA:Hobgoblin Tactics
05FB:Goblin Strategies
05FC:Wolf Strategy Vol. I
05FD:Wolf Strategy Vol. 2
05FE:Wolf Strategy Vol. 3
05FF:Skeleton Knight Tactics
0600:Skeleton Strategies
0601:Saurian Tactics Vol. I
0602:Saurian Tactics Vol. 2
0603:Saurian Strategy Vol. I
0604:Saurian Strategy Vol. 2
0605:Saurian Strategy Vol. 2
0606:Undead Tactics Vol. I
0607:Undead Tactics Vol. 2
0608:Undead Strategy Vol. I
0609:Undead Strategy Vol. 2
060A:Harpy Strategies
060B:Ghost Tactics Vol. I
060C:Ghost Tactics Vol. 2
060D:Ghost Strategies
060E:Ogre Strategy Vol. I
060F:Ogre Strategy Vol. 2
0610:Cyclops Tactics
0611:Cyclops Strategy Vol. I
0612:Cyclops Strategy Vol. 2
0613:Golem Tactics
0614:Golem Strategy Vol. I
0615:Golem Strategy Vol. 2
0616:Chimera Tactics
0617:Chimera Strategy Vol. I
0618:Chimera Strategy Vol. 2
0619:Hydra Tactics
061A:Hydra Strategy Vol. I
061B:Hydra Strategy Vol. 2
061C:Griffin Strategy Vol. I
061D:Griffin Strategy Vol. 2
061E:Griffin Strategy Vol. 3
061F:Cockatrice Strategy Vol. I
0620:Cockatrice Strategy Vol. 2
0621:Evil Eye Strategy Vol. I
0622:Evil Eye Strategy Vol. 2
0623:Vile Eye Strategy Vol. I
0624:Vile Eye Strategy Vol. 2
0625:Wight Tactics
0626:Lich Tactics
0627:Draconian Strategy Vol. I
0628:Draconian Strategy Vol. 2
06A5:BBI Novelty Lv. 1
06A6:BBI Novelty Lv. 2
06A7:BBI Novelty Lv. 3
06A8:BBI Gear Lv. 1
06A9:BBI Gear Lv. 2
06AA:BBI Gear Lv. 3
06AB:BBI Weapon Lv. 1
06AC:BBI Weapon Lv. 2
06AD:BBI Weapon Lv. 3
06AE:BBI Armor Lv. 1
06AF:BBI Armor Lv. 2
06B0:BBI Armor Lv. 3
06B8:Moonbeam Gem
06B9:Macabre Sculpture
06BC:Eternal Ferrystone
06C2:Lava Rock
06C3:Hunk of Platinum
06C4:Moonstone
06C5:Diamond
06C6:Rubicite
06C7:Kingwarish
06C8:Lunaise
06C9:Corpse Nettle
06CA:Nightfall Cresset
06CB:Cragshadow Morel
06CC:Crimplecap
06CD:Pyrepipe
06D6:Daimon's Claw
06D7:Daimon's Horn
06D8:Vile Wakestone
06D9:Sorcerer's Quartz
06DA:Violet Carapace
06DB:Abyssal Eye
06DC:Cursed Dragon Scale
06DD:Cursed Dragon Horn
06DE:Netherstone
06DF:Corrupt Remains
06E0:Ruinous Relic
06E1:Sinister Hide
06E2:Sinister Fang
06E3:Beastial Eye
06E4:Scythe Shard
06E5:Bone Lantern
06E6:Ox Horn
06E7:Bloodied Chain
06E8:Blue Iron Bucket
06E9:Macabre Eye
06EA:Cyclops Fang
06EB:Rugged Femur
06EC:Fae-Silver Plate
06ED:Phantom Orb
06EE:Elder Ogre Claw
06EF:Elder Ogre Fang
06F0:Poxy Flesh
06F1:Bright Amber Scale
06F2:Firedrake Fang
06F3:Bright Azure Scale
06F4:Frostwyrm Scute
06F5:Bright Virid Scale
06F6:Thunderwyvern Horn
06F7:Supple Dragon Pelt
06F8:Greatwyrm Stone
06F9:Warmonger's Horn
06FA:Shamanic Reagents
06FB:Skull Pendant
06FC:Gnarled Fingernails
06FD:Befouled Gold Veneer
06FE:Tainted Silver Veneer
06FF:Bone Crest
0700:Great Bone Shard
0701:Gargantuan Skull
0702:Rotten Baneflesh
0703:Fetid Gallstone
0704:Banshee Locks
0705:Banshee Lyrinx
0706:Siren Patagium
0707:Siren Tailfin
0708:Strigoi Barb
0709:Bloodred Crystal
070A:Infernal Hide
070B:Crimson Stone
070C:Lizardscale Pelt
070D:Lizard Horn
070E:Venomous Cuspid
070F:Mottled Leather
0710:Septiscopie Crystal
0711:Leapworm Jelly
0712:Maleficent Heart Shard
0713:Maleficent Heart
0714:Sullied Rift Fragment
0715:Bloodstained Periapt
0716:Idol of the All-Mother
0717:Striped Pelt
0718:Ironblack Pelt
0719:Moonshimmer Pelt
071A:Large Fisheye Stone
072B:Elite Lantern
072D:Ring of Thrift
0731:Expediting Papers
0734:Light Pickaxe
073A:Rancid Bait Meat
073B:Fiendish Essence
073C:Fiendish Extract
073D:Month-Dried Harspud
073E:Decade-dried Harspud
073F:Liquid Effluvium
0741:Dreamwing Nostrum
0743:Jewel of Summoning
0744:Shattered Earth Tome
0745:Surging Light Tome
0746:Lordly Tonic
0747:Godly Analeptic
0748:Auspicious Incense
0749:Vivifying Incense
074A:Liftstone

</DropDownList>
              <LastState Value="005A" Activated="0" RealAddress="11EFF22C"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHighlightedItem</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>221</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>219</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>23</ID>
                  <Description>"Name (reference)"</Description>
                  <LastState Activated="0" RealAddress="28548A64"/>
                  <Color>80000008</Color>
                  <VariableType>String</VariableType>
                  <Length>58</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>pHighlightedItemName</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>698</ID>
              <Description>"Quantity"</Description>
              <LastState Value="3" Activated="0" RealAddress="11EFF22E"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHighlightedItem</Address>
              <Offsets>
                <Offset>12</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>220</Key>
                  </Keys>
                  <Value>999</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>699</ID>
              <Description>"Weight"</Description>
              <LastState Value="0.5899999738" Activated="0" RealAddress="2CC0BCC4"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pHighlightedItemWeight</Address>
              <Offsets>
                <Offset>44</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>700</ID>
              <Description>"Enchantment 1"</Description>
              <DropDownList DisplayValueAsItem="1">----Skill Enchantments----
40: Blitz Strike
42: Downcrush
46: Fate Skewer
47: Hindsight Strike
52: Maelstrom Sigil
54: Stone Jungle
57: Powder Blitz
58: Deadly Gouge
102: Calamitous Lunge
106: Ecliptic Slash
109: Arc of Obliteration
150: Shearing Wind
152: Thousand Kisses
155: Brain Splitter
159: Soaring Stone
161: Shadowsnare
164: Shirking Offense
165: Tempest Harness
167: Flameshroud
210: Grand Ingle
212: Grand Levin
214: Grand Frigor
215: Grand Brontide
220: Grand Anodyne
222: Fire Boon
223: Ice Pact
224: Thunder Pact
225: Holy Pact
226: Dark Pact
227: Grand Bolide
228: Grand Gicel
229: Grand Fulmination
230: Grand Seism
236: Grand Sopor
270: Shield Slam
274: Sheltered Fusillade
278: Crackdown
310: Inferno Feint
311: Blizzard Feint
312: Boltstorm Feint
313: Hallowed Feint
314: Desecration Feint
315: Inferno Invocation
316: Blizzard Invocation
317: Boltstorm Invocation
318: Hallowed Invocation
319: Desecration Invocation
320: Holy Retribution
352: Terrible Bend
353: Hailstorm Volley 
356: Eagle Sight
359: Ninefold Bolt
361: Explosive Volley
363: Magickal Radiance
402: Reaper's Arrow
403: Secure Binder
407: Corkscrew Arrow 
65535: Empty
</DropDownList>
              <LastState Value="0" Activated="0" RealAddress="11EFF234"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHighlightedItem</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>727</ID>
              <Description>"Enchantment 2"</Description>
              <DropDownList DisplayValueAsItem="1">----Skill Enchantments----
40: Blitz Strike
42: Downcrush
46: Fate Skewer
47: Hindsight Strike
52: Maelstrom Sigil
54: Stone Jungle
57: Powder Blitz
58: Deadly Gouge
102: Calamitous Lunge
106: Ecliptic Slash
109: Arc of Obliteration
150: Shearing Wind
152: Thousand Kisses
155: Brain Splitter
159: Soaring Stone
161: Shadowsnare
164: Shirking Offense
165: Tempest Harness
167: Flameshroud
210: Grand Ingle
212: Grand Levin
214: Grand Frigor
215: Grand Brontide
220: Grand Anodyne
222: Fire Boon
223: Ice Pact
224: Thunder Pact
225: Holy Pact
226: Dark Pact
227: Grand Bolide
228: Grand Gicel
229: Grand Fulmination
230: Grand Seism
236: Grand Sopor
270: Shield Slam
274: Sheltered Fusillade
278: Crackdown
310: Inferno Feint
311: Blizzard Feint
312: Boltstorm Feint
313: Hallowed Feint
314: Desecration Feint
315: Inferno Invocation
316: Blizzard Invocation
317: Boltstorm Invocation
318: Hallowed Invocation
319: Desecration Invocation
320: Holy Retribution
352: Terrible Bend
353: Hailstorm Volley 
356: Eagle Sight
359: Ninefold Bolt
361: Explosive Volley
363: Magickal Radiance
402: Reaper's Arrow
403: Secure Binder
407: Corkscrew Arrow 
65535: Empty
</DropDownList>
              <LastState Value="0" Activated="0" RealAddress="11EFF236"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHighlightedItem</Address>
              <Offsets>
                <Offset>1A</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>862</ID>
              <Description>"Bonus Armor Enchantment 1"</Description>
              <DropDownList DisplayValueAsItem="1">-----Bonus Armor Enchantment-----
0: Extends duration of equipped Skills
1: Boosts Strength when you've been noticed by a large group of enemies
2: Slightly reduce damage from bow attacks
3: Reduces damage from bow attacks
4: Has a slight restorative effect on pawns near you
5: Your delibitations naturally heal themselves more quickly than normal
6: Gradually restores small amounts of Health
7: Gradually restores Health
8: Boosts the power of normal and magick shields
9: Extends duration of attribute boosts applied to you
10: Slightly restores Stamina when you deliver the killing blow to the enemy
11: Restores Stamina when you deliver the killing blow to the enemy
12: Extends duration of you enemy holds
13: Slightly increases maximum item-carrying capacity
14: Increases maximum item-carrying capacity
15: Boosts movement speed while casting spells
16: Prevents wind from affecting mobility
65535: Empty
</DropDownList>
              <LastState Value="0" Activated="0" RealAddress="11EFF238"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHighlightedItem</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>107</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>863</ID>
              <Description>"Bonus Armor Enchantment 2?"</Description>
              <DropDownList DisplayValueAsItem="1">-----Bonus Armor Enchantment-----
0: Extends duration of equipped Skills
1: Boosts Strength when you've been noticed by a large group of enemies
2: Slightly reduce damage from bow attacks
3: Reduces damage from bow attacks
4: Has a slight restorative effect on pawns near you
5: Your delibitations naturally heal themselves more quickly than normal
6: Gradually restores small amounts of Health
7: Gradually restores Health
8: Boosts the power of normal and magick shields
9: Extends duration of attribute boosts applied to you
10: Slightly restores Stamina when you deliver the killing blow to the enemy
11: Restores Stamina when you deliver the killing blow to the enemy
12: Extends duration of you enemy holds
13: Slightly increases maximum item-carrying capacity
14: Increases maximum item-carrying capacity
15: Boosts movement speed while casting spells
16: Prevents wind from affecting mobility
65535: Empty
</DropDownList>
              <LastState Value="0" Activated="0" RealAddress="11EFF23A"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHighlightedItem</Address>
              <Offsets>
                <Offset>1E</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>726</ID>
              <Description>"Rank"</Description>
              <LastState Value="1" Activated="0" RealAddress="11EFF23C"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHighlightedItem</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>701</ID>
              <Description>"Vocation Flags?"</Description>
              <LastState Value="9FFE" Activated="0" RealAddress="2CC0BCB6"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHighlightedItemWeight</Address>
              <Offsets>
                <Offset>36</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>702</ID>
              <Description>"Type?"</Description>
              <LastState Value="1402" Activated="0" RealAddress="2CC0BCB8"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>pHighlightedItemWeight</Address>
              <Offsets>
                <Offset>38</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>142</ID>
          <Description>"Some Pointers .2"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(someBaseReadBeforeGoldChkUpperLimitAOB,DDDA.exe,8B 15 ** ** ** ** 33 DB 8B F8)
registersymbol(someBaseReadBeforeGoldChkUpperLimitAOB)

label(pSomeBase1)
registersymbol(pSomeBase1)

[someBaseReadBeforeGoldChkUpperLimitAOB+2]: //["DDDA.exe"+268507]:
pSomeBase1:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(someBaseReadBeforeGoldChkUpperLimitAOB)

unregistersymbol(pSomeBase1)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>123</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>250</ID>
              <Description>"[Misc.]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>143</ID>
                  <Description>"G"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7A18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>144</ID>
                  <Description>"RC"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7A1C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>703</ID>
                  <Description>"Pawn Talked Times (Knowledge Chair used)"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>B8884</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>162</ID>
                  <Description>"Current Day"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>B8760</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>156</ID>
                  <Description>"Time of Day"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:00:00
3600000:01:00
7200000:02:00
10800000:03:00
14400000:04:00
18000000:05:00
21600000:06:00
25200000:07:00
28800000:08:00
32400000:09:00
36000000:10:00
39600000:11:00
43200000:12:00
46800000:13:00
50400000:14:00
54000000:15:00
57600000:16:00
61200000:17:00
64800000:18:00
68400000:19:00
72000000:20:00
75600000:21:00
79200000:22:00
82800000:23:00
86400000:24:00
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>B8768</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>158</ID>
                      <Description>"hrs (reference)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>B876C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>159</ID>
                      <Description>"mins (reference)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>B8770</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>160</ID>
                      <Description>"secs (reference)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>B8774</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>269</ID>
                      <Description>"interval (reference)"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>B877C</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>248</ID>
              <Description>"[Protagonist]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>221</ID>
                  <Description>"Level"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7DD0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>145</ID>
                  <Description>"Exp"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7994</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>704</ID>
                      <Description>"next"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7998</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>705</ID>
                  <Description>"Dcp"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7A14</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>279</ID>
                  <Description>"Current Vocation"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A76E0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>377</ID>
                  <Description>"[Equiped Skills]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>378</ID>
                      <Description>"Sword 1"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
40:Burst Strike
41:Broad Slash
42:Downcrack
43:Antler Toss
44:Full Moon Slash
45:Heavenward Lash
46:Soul Skewer
47:Hindsight Sweep
48:Steel Will
49:Dragon's Maw
51:Great Cannon
52:Vortex Sigil
54:Stone Forest
55:Intimate Gambit
57:Powder Charge
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7808</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>379</ID>
                      <Description>"Sword 2"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
40:Burst Strike
41:Broad Slash
42:Downcrack
43:Antler Toss
44:Full Moon Slash
45:Heavenward Lash
46:Soul Skewer
47:Hindsight Sweep
48:Steel Will
49:Dragon's Maw
51:Great Cannon
52:Vortex Sigil
54:Stone Forest
55:Intimate Gambit
57:Powder Charge
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A780C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>380</ID>
                      <Description>"Sword 3"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
40:Burst Strike
41:Broad Slash
42:Downcrack
43:Antler Toss
44:Full Moon Slash
45:Heavenward Lash
46:Soul Skewer
47:Hindsight Sweep
48:Steel Will
49:Dragon's Maw
51:Great Cannon
52:Vortex Sigil
54:Stone Forest
55:Intimate Gambit
57:Powder Charge
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7810</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>381</ID>
                      <Description>"? 1"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7814</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>382</ID>
                      <Description>"? 2"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7818</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>383</ID>
                      <Description>"? 3"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A781C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>384</ID>
                      <Description>"Dagger 1"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
150:Cutting Wind
151:Advanced Trigger
152:Hundred Kisses
153:Dazzle Blast
154:Mad Dash
155:Skull Splitter
156:Implicate
157:Master Thief
158:Instant Reset
159:Leaping Stone
165:Escape Onslaught
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7850</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>385</ID>
                      <Description>"Dagger 2"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
150:Cutting Wind
151:Advanced Trigger
152:Hundred Kisses
153:Dazzle Blast
154:Mad Dash
155:Skull Splitter
156:Implicate
157:Master Thief
158:Instant Reset
159:Leaping Stone
165:Escape Onslaught
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7854</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>386</ID>
                      <Description>"Dagger 3"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
150:Cutting Wind
151:Advanced Trigger
152:Hundred Kisses
153:Dazzle Blast
154:Mad Dash
155:Skull Splitter
156:Implicate
157:Master Thief
158:Instant Reset
159:Leaping Stone
165:Escape Onslaught
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7858</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>387</ID>
                      <Description>"? 1"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A785C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>388</ID>
                      <Description>"? 2"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7860</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>389</ID>
                      <Description>"? 3"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7864</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>390</ID>
                      <Description>"Shield 1"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
270:Shield Storm
271:Launchboard
272:Shield Drum
273:Cymbal Onslaught
274:Sheltered Assault
275:Divine Defense
276:Swift Castle
277:Flight Response
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78B0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>391</ID>
                      <Description>"Shield 2"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
270:Shield Storm
271:Launchboard
272:Shield Drum
273:Cymbal Onslaught
274:Sheltered Assault
275:Divine Defense
276:Swift Castle
277:Flight Response
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78B4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>392</ID>
                      <Description>"Shield 3"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
270:Shield Storm
271:Launchboard
272:Shield Drum
273:Cymbal Onslaught
274:Sheltered Assault
275:Divine Defense
276:Swift Castle
277:Flight Response
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78B8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>393</ID>
                      <Description>"? 1"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78BC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>394</ID>
                      <Description>"? 2"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78C0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>395</ID>
                      <Description>"? 3"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78C4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>396</ID>
                      <Description>"Bow 1"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
350:Fivefold Flurry
351:Pentad Shot
352:Mighty Bend
353:Downpour Volley
354:Fracture Dart
355:Shriek Dart
356:Keen Sight
357:Skewer Dart
358:Blunting Arrow
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78E0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>397</ID>
                      <Description>"Bow 2"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
350:Fivefold Flurry
351:Pentad Shot
352:Mighty Bend
353:Downpour Volley
354:Fracture Dart
355:Shriek Dart
356:Keen Sight
357:Skewer Dart
358:Blunting Arrow
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78E4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>398</ID>
                      <Description>"Bow 3"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
350:Fivefold Flurry
351:Pentad Shot
352:Mighty Bend
353:Downpour Volley
354:Fracture Dart
355:Shriek Dart
356:Keen Sight
357:Skewer Dart
358:Blunting Arrow
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78E8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>462</ID>
                      <Description>"Longbow 1"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
401:Heptad Shot
402:Dire Arrow
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78F8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>463</ID>
                      <Description>"Longbow 2"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
401:Heptad Shot
402:Dire Arrow
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A78FC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>464</ID>
                      <Description>"Longbow 3"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
350:Fivefold Flurry
351:Pentad Shot
352:Mighty Bend
353:Downpour Volley
354:Fracture Dart
355:Shriek Dart
356:Keen Sight
357:Skewer Dart
358:Blunting Arrow
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7900</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>706</ID>
                      <Description>"Current Primary Skill 1 (reference)"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
== Sword Skills =============
40:Burst Strike
41:Broad Slash
42:Downcrack
43:Antler Toss
44:Full Moon Slash
45:Heavenward Lash
46:Soul Skewer
47:Hindsight Sweep
48:Steel Will
49:Dragon's Maw
55:Intimate Gambit
57:Powder Charge
== Dagger Skills =============
150:Cutting Wind
151:Advanced Trigger
152:Hundred Kisses
153:Dazzle Blast
154:Mad Dash
155:Skull Splitter
156:Implicate
157:Master Thief
158:Instant Reset
159:Leaping Stone
165:Escape Onslaught
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7940</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>707</ID>
                      <Description>"Current Primary Skill 2 (reference)"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
== Sword Skills =============
40:Burst Strike
41:Broad Slash
42:Downcrack
43:Antler Toss
44:Full Moon Slash
45:Heavenward Lash
46:Soul Skewer
47:Hindsight Sweep
48:Steel Will
49:Dragon's Maw
55:Intimate Gambit
57:Powder Charge
== Dagger Skills =============
150:Cutting Wind
151:Advanced Trigger
152:Hundred Kisses
153:Dazzle Blast
154:Mad Dash
155:Skull Splitter
156:Implicate
157:Master Thief
158:Instant Reset
159:Leaping Stone
165:Escape Onslaught
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7944</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>708</ID>
                      <Description>"Current Primary Skill 3 (reference)"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
== Sword Skills =============
40:Burst Strike
41:Broad Slash
42:Downcrack
43:Antler Toss
44:Full Moon Slash
45:Heavenward Lash
46:Soul Skewer
47:Hindsight Sweep
48:Steel Will
49:Dragon's Maw
55:Intimate Gambit
57:Powder Charge
== Dagger Skills =============
150:Cutting Wind
151:Advanced Trigger
152:Hundred Kisses
153:Dazzle Blast
154:Mad Dash
155:Skull Splitter
156:Implicate
157:Master Thief
158:Instant Reset
159:Leaping Stone
165:Escape Onslaught
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7948</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>709</ID>
                      <Description>"Current Secondary Skill 1 (reference)"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
== Shield Skills =============
270:Shield Storm
271:Launchboard
272:Shield Drum
273:Cymbal Onslaught
274:Sheltered Assault
275:Divine Defense
276:Swift Castle
277:Flight Response
== Bow Skills =============
350:Fivefold Flurry
351:Pentad Shot
352:Mighty Bend
353:Downpour Volley
354:Fracture Dart
355:Shriek Dart
356:Keen Sight
357:Skewer Dart
358:Blunting Arrow
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A794C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>710</ID>
                      <Description>"Current Secondary Skill 2 (reference)"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
== Shield Skills =============
270:Shield Storm
271:Launchboard
272:Shield Drum
273:Cymbal Onslaught
274:Sheltered Assault
275:Divine Defense
276:Swift Castle
277:Flight Response
== Bow Skills =============
350:Fivefold Flurry
351:Pentad Shot
352:Mighty Bend
353:Downpour Volley
354:Fracture Dart
355:Shriek Dart
356:Keen Sight
357:Skewer Dart
358:Blunting Arrow
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7950</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>711</ID>
                      <Description>"Current Secondary Skill 2 (reference)"</Description>
                      <DropDownList DisplayValueAsItem="1">4294967295:Empty
== Shield Skills =============
270:Shield Storm
271:Launchboard
272:Shield Drum
273:Cymbal Onslaught
274:Sheltered Assault
275:Divine Defense
276:Swift Castle
277:Flight Response
== Bow Skills =============
350:Fivefold Flurry
351:Pentad Shot
352:Mighty Bend
353:Downpour Volley
354:Fracture Dart
355:Shriek Dart
356:Keen Sight
357:Skewer Dart
358:Blunting Arrow
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A7954</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>247</ID>
                  <Description>"[Vocation Ranks]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>227</ID>
                      <Description>"Fighter"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A79A0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>228</ID>
                      <Description>"Strider"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A79A4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>229</ID>
                      <Description>"Mage"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A79A8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>230</ID>
                      <Description>"Mystic Knight"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A79AC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>231</ID>
                      <Description>"Assassin"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A79B0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>232</ID>
                      <Description>"Magic Archer"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A79B4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>233</ID>
                      <Description>"Warrior"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A79B8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>234</ID>
                      <Description>"Ranger"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A79BC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>235</ID>
                      <Description>"Sorcerer"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A79C0</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>249</ID>
              <Description>"[Main Pawn]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>237</ID>
                  <Description>"Level"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A85C0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>238</ID>
                  <Description>"Exp"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A8184</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>267</ID>
                      <Description>"next"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A8188</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>146</ID>
                  <Description>"Dcp"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A8204</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>280</ID>
                  <Description>"Current Vocation"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pSomeBase1</Address>
                  <Offsets>
                    <Offset>A7ED0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>712</ID>
                  <Description>"[Manner of Speech]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>713</ID>
                      <Description>"speech rate"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A93EC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>714</ID>
                      <Description>"orders' responce"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A93F8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>715</ID>
                      <Description>"triumphs (celebrate our triumphs)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A93FC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>716</ID>
                      <Description>"thanks (should I fall, you help me)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A9400</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>717</ID>
                      <Description>"comes to aid (should I aid you in times of need)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A9404</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>718</ID>
                      <Description>"support (should fate see you fall and rise)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A9408</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>719</ID>
                      <Description>"deadly blow (should I suffer a deadly blow)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A940C</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>251</ID>
                  <Description>"[Vocation Ranks]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>241</ID>
                      <Description>"Fighter"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A8190</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>242</ID>
                      <Description>"Strider"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A8194</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>243</ID>
                      <Description>"Mage"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A8198</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>252</ID>
                      <Description>"Mystic Knight"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A819C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>253</ID>
                      <Description>"Assassin"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A81A0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>254</ID>
                      <Description>"Magic Archer"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A81A4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>720</ID>
                      <Description>"Warrior"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A81A8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>721</ID>
                      <Description>"Ranger"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A81AC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>722</ID>
                      <Description>"Sorcerer"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>A81B0</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>449</ID>
              <Description>"[Pawn 2]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>723</ID>
                  <Description>"[Manner of Speech]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>460</ID>
                      <Description>"speech rate"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AAA4C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>443</ID>
                      <Description>"orders' responce"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AAA58</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>444</ID>
                      <Description>"triumphs (celebrate our triumphs)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AAA5C</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>445</ID>
                      <Description>"thanks (should I fall, you help me)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AAA60</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>446</ID>
                      <Description>"comes to aid (should I aid you in times of need)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AAA64</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>447</ID>
                      <Description>"support (should fate see you fall and rise)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AAA68</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>448</ID>
                      <Description>"deadly blow (should I suffer a deadly blow)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AAA6C</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>450</ID>
              <Description>"[Pawn 3]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>451</ID>
                  <Description>"[Manner of Speech]"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>452</ID>
                      <Description>"speech rate"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AC0AC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>461</ID>
                      <Description>"orders' responce"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AC0B8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>453</ID>
                      <Description>"triumphs (celebrate our triumphs)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AC0BC</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>454</ID>
                      <Description>"thanks (should I fall, you help me)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AC0C0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>455</ID>
                      <Description>"comes to aid (should I aid you in need)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AC0C4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>724</ID>
                      <Description>"support (should fate see you fall and rise)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AC0C8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>725</ID>
                      <Description>"deadly blow (should I suffer a deadly blow)"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Ordinary
1:Timid
2:Aggressive
3:Reticent
4:Confident
5:Meek
6:Arrogant
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeBase1</Address>
                      <Offsets>
                        <Offset>AC0CC</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>728</ID>
          <Description>""</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="0" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>729</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemStringReadAOB,DDDA.exe,85 C9 74 07 52 57 E8 ** ** ** ** 8B C3)
registersymbol(highlightedItemStringReadAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedItemStringReadAOB+b //DDDA.exe+26908C


originalcode2:
//test ecx,ecx
//je highlightedItemStringReadAOB+b //DDDA.exe+26908C
push edx

exit2:
jmp returnhere2

///

highlightedItemStringReadAOB: //"DDDA.exe"+269081:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
highlightedItemStringReadAOB: //"DDDA.exe"+269081:
db 85 C9 74 07 52
//Alt: test ecx,ecx
//Alt: je highlightedItemStringReadAOB+b //DDDA.exe+26908C
//Alt: push edx
unregistersymbol(highlightedItemStringReadAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>730</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemNameReadCall,DDDA.exe,8B 44 24 04 39 81 80 00 00 00)
registersymbol(highlightedItemNameReadCall)
aobscanmodule(highlightedItemStringReadAOB,DDDA.exe,85 C9 74 07 52 57 E8 ** ** ** ** 8B C3)
registersymbol(highlightedItemStringReadAOB)

label(pHighlightedItemName)
registersymbol(pHighlightedItemName)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedItemStringReadAOB+b //DDDA.exe+26908C
pushad
push eax
call highlightedItemNameReadCall
mov [pHighlightedItemName],eax

originalcode2:
popad
//test ecx,ecx
//je highlightedItemStringReadAOB+b //DDDA.exe+26908C
push edx

exit2:
jmp returnhere2

///
pHighlightedItemName:
dd 0
///

highlightedItemStringReadAOB: //"DDDA.exe"+269081:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(highlightedItemNameReadCall)
dealloc(newmem2)
highlightedItemStringReadAOB: //"DDDA.exe"+269081:
db 85 C9 74 07 52
//Alt: test ecx,ecx
//Alt: je highlightedItemStringReadAOB+b //DDDA.exe+26908C
//Alt: push edx
unregistersymbol(highlightedItemStringReadAOB)

unregistersymbol(pHighlightedItemName)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>731</ID>
                  <Description>"Name"</Description>
                  <LastState Activated="0" RealAddress="28548A64"/>
                  <Color>80000008</Color>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>pHighlightedItemName</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>732</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedEquipmentStringReadAOB,DDDA.exe,8B ** ** ** ** ** ** 85 C9 74 07 56 52 E8)
registersymbol(highlightedEquipmentStringReadAOB)

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
test ecx,ecx
je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464

originalcode3:
//test ecx,ecx
//je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
push esi

exit3:
jmp returnhere3

highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
jmp newmem3
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
highlightedEquipmentStringReadAOB+7: //"DDDA.exe"+248459:
db 85 C9 74 07 56
//Alt: test ecx,ecx
//Alt: je highlightedEquipmentStringReadAOB+12 //DDDA.exe+248464
//Alt: push esi
unregistersymbol(highlightedEquipmentStringReadAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>733</ID>
              <Description>"Menu Options"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(menuItemsCheckAOB,DDDA.exe,8B 83 84 02 00 00 83 F8 0C)
registersymbol(menuItemsCheckAOB)

label(pMenuItems)
registersymbol(pMenuItems)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMenuItems],ebx

originalcode:
mov eax,[ebx+00000284]

exit:
jmp returnhere

///
pMenuItems:
dd 0
///

menuItemsCheckAOB: //"DDDA.exe"+329088:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
menuItemsCheckAOB: //"DDDA.exe"+329088:
db 8B 83 84 02 00 00
//Alt: mov eax,[ebx+00000284]
unregistersymbol(menuItemsCheckAOB)

unregistersymbol(pMenuItems)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>734</ID>
                  <Description>"pMenuItems"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">6:Main Menu
10:Manual
12:Exit Game
0:New Game
1:Load Game
11:Hard Mode
3:Options
2:Secret of Metamorphosis
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pMenuItems</Address>
                  <Offsets>
                    <Offset>284</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>735</ID>
              <Description>"nv get"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(nvXReadAOB,DDDA.exe,D9 84 C1 C0 F1 03 00)
registersymbol(nvXReadAOB)

alloc(vNV,16)
registersymbol(vNV)

label(pNVector)
registersymbol(pNVector)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+eax*8+3f1c0]

movss xmm1,[ecx+eax*8+3f1c8]
shufps xmm1,xmm1,c6
addps xmm0,xmm1

movss xmm1,[ecx+eax*8+3f1d8]
shufps xmm1,xmm1,e1
addps xmm0,xmm1

movaps [vNV],xmm0
//mov byte ptr [bVNVSet],1

push ecx
lea ecx,[ecx+eax*8+3f1e0]
mov [pNVector],ecx
pop ecx

originalcode:
fld dword ptr [ecx+eax*8+0003F1C0]

exit:
jmp returnhere

///
pNVector:
dd 0
///

nvXReadAOB: //"DDDA.exe"+9C2BF9:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
nvXReadAOB: //"DDDA.exe"+9C2BF9:
db D9 84 C1 C0 F1 03 00
//Alt: fld dword ptr [ecx+eax*8+0003F1C0]
unregistersymbol(nvXReadAOB)

///

dealloc(vNV)
unregistersymbol(vNV)

unregistersymbol(pNVector)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>736</ID>
                  <Description>"nv x"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pNVector</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>737</ID>
                      <Description>"No description"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>vNV</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>738</ID>
                  <Description>"nv z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pNVector</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>739</ID>
                      <Description>"No description"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>vNV+4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>740</ID>
                  <Description>"nv y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pNVector</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>741</ID>
                      <Description>"No description"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>vNV+8</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>742</ID>
              <Description>"axis get"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(axisXYWriteAOB,DDDA.exe,F3 0F 11 7F 14 F3 0F 11 77 18)
registersymbol(axisXYWriteAOB)

label(pMovementInfo)
registersymbol(pMovementInfo)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMovementInfo],edi

originalcode2:
movss [edi+14],xmm7

exit2:
jmp returnhere2

///
pMovementInfo:
dd 0
///

axisXYWriteAOB: //"DDDA.exe"+74F342:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
axisXYWriteAOB: //"DDDA.exe"+74F342:
db F3 0F 11 7F 14
//Alt: movss [edi+14],xmm7
unregistersymbol(axisXYWriteAOB)

unregistersymbol(pMovementInfo)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>743</ID>
                  <Description>"axis x (+18)"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pMovementInfo</Address>
                  <Offsets>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>744</ID>
                  <Description>"axis y (+14)"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pMovementInfo</Address>
                  <Offsets>
                    <Offset>14</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>745</ID>
              <Description>"coord write1 .2"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)

label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
cmp [ebx+e0],fffffdff
je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
push eax

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f
movss xmm1,[eax+18]
shufps xmm1,xmm1,c0 //set stick x axis to all but most significant element

/*movss xmm1,[eax+18]
shufps xmm1,xmm1,e1 //swap least to 2nd
movss xmm3,[eax+18]
shufps xmm3,xmm3,c4 //copy least to 3rd
subps xmm1,xmm3*/

xorps xmm1,xmm1
movss xmm3,[eax+18]
shufps xmm3,xmm3,c0 //set stick x axis to all but most significant element
subps xmm1,xmm3

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

mov eax,[pNVector]
test eax,eax
jz @f
mulps xmm1,[eax] //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1

//do y
mov eax,[pMovementInfo]
movss xmm1,[eax+14]
mov eax,(float)-1
movd xmm3,eax
mulss xmm1,xmm3     //neg least significant element
shufps xmm1,xmm1,c4 //copy stick y axis to 3rd element

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

//mov eax,[pNVector]
movaps xmm3,[vNV]
//shufps xmm3,xmm3,c6 //swap least and 3rd element
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1


@@:
pop eax
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]
/*movss [esp+10],xmm3
movss [esp+14],xmm1
movss [esp+18],xmm4
movss [esp+20],xmm3
movss [esp+24],xmm1
movss [esp+28],xmm4
movss [esp+30],xmm3
movss [esp+34],xmm1
movss [esp+38],xmm4*/

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)

unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>746</ID>
                  <Description>"x"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>747</ID>
                  <Description>"z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>748</ID>
                  <Description>"y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>749</ID>
                  <Description>"bFlyMode"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bFlyMode</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>750</ID>
              <Description>"coord write1 .1"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)

label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
cmp [ebx+e0],fffffdff
je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
push eax

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f
movss xmm1,[eax+18]
movss xmm3,[eax+18]
shufps xmm3,xmm3,c1 //2 1 1 4
subps xmm1,xmm3

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

mov al,[bVNVSet]
test al,al
jz @f
movaps xmm3,[vNV]
shufps xmm3,xmm3,c6 //swap least and 3rd element
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1

//do y
mov eax,[pMovementInfo]
movss xmm1,[eax+14]
mov eax,(float)-1
movd xmm3,eax
mulss xmm1,xmm3     //neg least significant element
shufps xmm1,xmm1,c4 //copy stick y axis to 3rd element

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

//mov eax,[pNVector]
movaps xmm3,[vNV]
//shufps xmm3,xmm3,c6 //swap least and 3rd element
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1


@@:
pop eax
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]
/*movss [esp+10],xmm3
movss [esp+14],xmm1
movss [esp+18],xmm4
movss [esp+20],xmm3
movss [esp+24],xmm1
movss [esp+28],xmm4
movss [esp+30],xmm3
movss [esp+34],xmm1
movss [esp+38],xmm4*/

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)

unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>751</ID>
                  <Description>"x"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>752</ID>
                  <Description>"z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>753</ID>
                  <Description>"y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>754</ID>
                  <Description>"bFlyMode"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bFlyMode</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>755</ID>
              <Description>"coord write1"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)

label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
cmp [ebx+e0],fffffdff
je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)

unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>756</ID>
                  <Description>"x"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>757</ID>
                  <Description>"z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>758</ID>
                  <Description>"y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>759</ID>
                  <Description>"bFlyMode"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bFlyMode</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>760</ID>
              <Description>"coord write2"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite2AOB,DDDA.exe,F3 0F 10 74 24 30 C6)
registersymbol(coordWrite2AOB)

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bFirstActivate],1
je originalcode4
cmp [esi+100],00004040
je @f
cmp [esi+120],fffffdff
je @f
jmp originalcode4

@@:
xorps xmm6,xmm6
movss [esp+30],xmm6
movss [esp+34],xmm6
movss [esp+38],xmm6
movss xmm6,[fFlyModeCoord]
movss [esi+40],xmm6
movss xmm6,[fFlyModeCoord+4]
movss [esi+44],xmm6
movss xmm6,[fFlyModeCoord+8]
movss [esi+48],xmm6

originalcode4:
movss xmm6,[esp+30]

exit4:
jmp returnhere4

///

coordWrite2AOB: //"DDDA.exe"+44A020:
jmp newmem4
nop
returnhere4:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem4)
coordWrite2AOB: //"DDDA.exe"+44A020:
db F3 0F 10 74 24 30
//Alt: movss xmm6,[esp+30]
unregistersymbol(coordWrite2AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>761</ID>
              <Description>"coord write3"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coordWrite3AOB,DDDA.exe,F3 0F 11 56 44 F3 0F 11 5E 48 F3 0F 58 CF)
registersymbol(coordWrite3AOB)

///

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bFirstActivate],1
je originalcode5
cmp [esi+100],00004040
je @f
cmp [esi+120],fffffdff
je @f
jmp originalcode5

@@:
xorps xmm7,xmm7
movss xmm1,[fFlyModeCoord]
movss xmm2,[fFlyModeCoord+4]
movss xmm3,[fFlyModeCoord+8]

originalcode5:
movss [esi+44],xmm2

exit5:
jmp returnhere5

///

coordWrite3AOB: //"DDDA.exe"+44A07A:
jmp newmem5
returnhere5:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem5)
coordWrite3AOB: //"DDDA.exe"+44A07A:
db F3 0F 11 56 44
//Alt: movss [esi+44],xmm2
unregistersymbol(coordWrite3AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>762</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+18],"DDDA.exe"+9DE47F
jne originalcode
cmp [esp+2c],"DDDA.exe"+BFDD59
mov eax,[eax+a7a18]
jmp exit

originalcode:
mov eax,[eax+000A7A18]

exit:
jmp returnhere

///

"DDDA.exe"+2A3005:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+2A3005:
db 8B 80 18 7A 0A 00
//Alt: mov eax,[eax+000A7A18]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>763</ID>
              <Description>"No Clip .2"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(nvXReadAOB,DDDA.exe,D9 84 C1 C0 F1 03 00)
registersymbol(nvXReadAOB)
aobscanmodule(axisXYWriteAOB,DDDA.exe,F3 0F 11 7F 14 F3 0F 11 77 18)
registersymbol(axisXYWriteAOB)
aobscanmodule(coordWrite1AOB,DDDA.exe,F3 0F 11 1B F3 0F 11 4B 04 F3 0F 11 63 08 F3 0F 11 43 0C)
registersymbol(coordWrite1AOB)

///

alloc(vNV,16)
registersymbol(vNV)
label(pNVector)
registersymbol(pNVector)

label(pMovementInfo)
registersymbol(pMovementInfo)

alloc(fFlyModeCoord,16)
registersymbol(fFlyModeCoord)
label(bFlyMode)
registersymbol(bFlyMode)
label(bFirstActivate)
registersymbol(bFirstActivate)
label(pPlayerCoord)
registersymbol(pPlayerCoord)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ecx+eax*8+3f1c0]

movss xmm1,[ecx+eax*8+3f1c8]
shufps xmm1,xmm1,c6
addps xmm0,xmm1

movss xmm1,[ecx+eax*8+3f1d8]
shufps xmm1,xmm1,e1
addps xmm0,xmm1

movaps [vNV],xmm0
//mov byte ptr [bVNVSet],1

push ecx
lea ecx,[ecx+eax*8+3f1e0]
mov [pNVector],ecx
pop ecx

originalcode:
fld dword ptr [ecx+eax*8+0003F1C0]

exit:
jmp returnhere

///
pNVector:
dd 0
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pMovementInfo],edi

originalcode2:
movss [edi+14],xmm7

exit2:
jmp returnhere2

///
pMovementInfo:
dd 0
///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebx+c0],00004040
je @f
//cmp [ebx+e0],fffffdff
//je @f
jmp originalcode3

@@:
mov [pPlayerCoord],ebx

cmp byte ptr [bFlyMode],1
je @f
mov byte ptr [bFirstActivate],1
jmp originalcode3

@@:
cmp byte ptr [bFirstActivate],1
jne @f
mov byte ptr [bFirstActivate],0
movss [fFlyModeCoord],xmm3
movss [fFlyModeCoord+4],xmm1
movss [fFlyModeCoord+8],xmm4

@@:
push eax

//do x
mov eax,[pMovementInfo]
test eax,eax
jz @f

xorps xmm1,xmm1
movss xmm3,[eax+18]
shufps xmm3,xmm3,c0 //set stick x axis to all but most significant element
subps xmm1,xmm3

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

mov eax,[pNVector]
test eax,eax
jz @f
mulps xmm1,[eax] //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1

//do y
mov eax,[pMovementInfo]
movss xmm1,[eax+14]
mov eax,(float)-1
movd xmm3,eax
mulss xmm1,xmm3     //neg least significant element
shufps xmm1,xmm1,c4 //copy stick y axis to 3rd element

mov eax,(float)10
movd xmm3,eax
shufps xmm3,xmm3,00
mulps xmm1,xmm3     //apply "speed"

movaps xmm3,[vNV]
mulps xmm1,xmm3     //apply vector

addps xmm1,[fFlyModeCoord]
movaps [fFlyModeCoord],xmm1


@@:
pop eax
movss xmm3,[fFlyModeCoord]
movss xmm1,[fFlyModeCoord+4]
movss xmm4,[fFlyModeCoord+8]

originalcode3:
movss [ebx],xmm3
movss [ebx+04],xmm1

exit3:
jmp returnhere3

///
bFlyMode:
db 0
bFirstActivate:
db 1
pPlayerCoord:
dd 0
///

nvXReadAOB: //"DDDA.exe"+9C2BF9:
jmp newmem
nop
nop
returnhere:

axisXYWriteAOB: //"DDDA.exe"+74F342:
jmp newmem2
returnhere2:

coordWrite1AOB: //"DDDA.exe"+39BBCB:
jmp newmem3
nop
nop
nop
nop
returnhere3:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
nvXReadAOB: //"DDDA.exe"+9C2BF9:
db D9 84 C1 C0 F1 03 00
//Alt: fld dword ptr [ecx+eax*8+0003F1C0]
unregistersymbol(nvXReadAOB)
dealloc(newmem2)
axisXYWriteAOB: //"DDDA.exe"+74F342:
db F3 0F 11 7F 14
//Alt: movss [edi+14],xmm7
unregistersymbol(axisXYWriteAOB)
dealloc(newmem3)
coordWrite1AOB: //"DDDA.exe"+39BBCB:
db F3 0F 11 1B F3 0F 11 4B 04
//Alt: movss [ebx],xmm3
//Alt: movss [ebx+04],xmm1
unregistersymbol(coordWrite1AOB)

///

dealloc(vNV)
unregistersymbol(vNV)
unregistersymbol(pNVector)

unregistersymbol(pMovementInfo)

dealloc(fFlyModeCoord)
unregistersymbol(fFlyModeCoord)
unregistersymbol(bFlyMode)
unregistersymbol(bFirstActivate)
unregistersymbol(pPlayerCoord)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>764</ID>
                  <Description>"x"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>765</ID>
                  <Description>"z"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>766</ID>
                  <Description>"y"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pPlayerCoord</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>767</ID>
                  <Description>"status (numpad0/ turn on, numpad0* turn off)"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:No-Clip
</DropDownList>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>bFlyMode</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>96</Key>
                        <Key>111</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>0</ID>
                    </Hotkey>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>96</Key>
                        <Key>106</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>1</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>768</ID>
              <Description>"No description"</Description>
              <LastState Activated="0" RealAddress="1EA3BA54"/>
              <Color>80000008</Color>
              <VariableType>String</VariableType>
              <Length>12</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>1EA3BA54</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>769</ID>
              <Description>"No description"</Description>
              <LastState Activated="0" RealAddress="1EA37A95"/>
              <Color>80000008</Color>
              <VariableType>String</VariableType>
              <Length>13</Length>
              <Unicode>0</Unicode>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>1EA37A95</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>770</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0A428228"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0A428228</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>771</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0A438F78"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0A438F78</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>772</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0A438F80"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0A438F80</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>773</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0AA755E6"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>0AA755E6</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>774</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0AA7B6CE"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>0AA7B6CE</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>775</ID>
              <Description>"No description"</Description>
              <LastState Value="51578" Activated="0" RealAddress="38F8CC7C"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>38F8CC7C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>776</ID>
              <Description>"2 Bytes"</Description>
              <LastState Value="0000" Activated="0" RealAddress="0AA7B6CC"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>AA7B6CC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>777</ID>
              <Description>"No description"</Description>
              <LastState Value="0000" Activated="0" RealAddress="0AA7B6F4"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>0AA7B6F4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>778</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="111B20E4"/>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>111B20E4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>779</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0A438F7C"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>0A438F7C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>780</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(chkIfCoordZRaisedInAirAOB,DDDA.exe,0F 2F 86 98 20 00 00 76 08)
registersymbol(chkIfCoordZRaisedInAirAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+100],00004040
je chkIfCoordZRaisedInAirAOB+9

originalcode:
comiss xmm0,[esi+00002098]

exit:
jmp returnhere

///

chkIfCoordZRaisedInAirAOB: //"DDDA.exe"+7756DF:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chkIfCoordZRaisedInAirAOB: //"DDDA.exe"+7756DF:
db 0F 2F 86 98 20 00 00
//Alt: comiss xmm0,[esi+00002098]
unregistersymbol(chkIfCoordZRaisedInAirAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>781</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"DDDA.exe"+7757C0:
db 31 C0 C3
//Alt: xor eax,eax
//Alt: ret


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
"DDDA.exe"+7757C0:
db 56 8B F0
//Alt: push esi
//Alt: mov esi,eax
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>782</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(chkFallingStartAOB,DDDA.exe,84 C0 ** ** ** ** ** ** 81 8F 38 2E 00 00 00 10 00 00)
registersymbol(chkFallingStartAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edi+100],00004040
jne originalcode
xor al,al
jmp chkFallingStartAOB

originalcode:
or [edi+00002E38],00001000

exit:
jmp returnhere

///

chkFallingStartAOB+8: //"DDDA.exe"+771177:
jmp newmem
nop
nop
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chkFallingStartAOB+8: //"DDDA.exe"+771177:
db 81 8F 38 2E 00 00 00 10 00 00
//Alt: or [edi+00002E38],00001000
unregistersymbol(chkFallingStartAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>783</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CC120F8"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CC120F8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>784</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CC120E4"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CC120E4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>785</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CC13144"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CC13144</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>786</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CC14A54"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CC14A54</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>787</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CC14A64"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CC14A64</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>788</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CC14A74"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CC14A74</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>789</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CC14A84"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CC14A84</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>790</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0D39C9F4"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0D39C9F4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>791</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0D39CA74"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0D39CA74</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>792</ID>
              <Description>"No Description"</Description>
              <LastState Value="00000000" Activated="0" RealAddress="0CC12E34"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0CC12E34</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>793</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(rhpReadOnHitAOB,DDDA.exe,F3 0F 10 47 08 8B 8F B4 01 00 00)
registersymbol(rhpReadOnHitAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
xor ecx,ecx
@@:
cmp [pPartyHP+ecx*4],edi
je @f
inc ecx
cmp ecx,4
jl @f
jmp originalcode2

@@:
movss xmm0,[edi+8]
comiss xmm0,[esp+c]
ja originalcode2
mov [edi+8],(float)1
movss xmm0,[esp+c]
addss xmm0,[edi+8]
movss [edi+8],xmm0

originalcode2:
movss xmm0,[edi+08]

exit2:
jmp returnhere2

///

rhpReadOnHitAOB: //"DDDA.exe"+3743C1:
jmp newmem2
returnhere2:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
rhpReadOnHitAOB: //"DDDA.exe"+3743C1:
db F3 0F 10 47 08
//Alt: movss xmm0,[edi+08]
unregistersymbol(rhpReadOnHitAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>794</ID>
              <Description>"Full HP (all human) (may still be killed if damge &gt;current HP)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(hpWrite1AOB,DDDA.exe,F3 0F 11 89 9C 02 00 00 89 B7 F4 3D 00 00)
registersymbol(hpWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
/*cmp [ecx+24],0
jne originalcode
cmp [ecx+24],ffffffff
je originalcode
cmp [ecx+2c],ffffffff
je originalcode
cmp [ecx+34],ffffffff
je originalcode
cmp [ecx+38],ffffffff
je originalcode
cmp [ecx+3c],ffffffff
je originalcode*/
test eax,eax
jz originalcode
movss xmm1,[eax+c]
movss [eax+8],xmm1
movss [ecx+2a4],xmm1

originalcode:
movss [ecx+0000029C],xmm1

exit:
jmp returnhere

///

hpWrite1AOB: //"DDDA.exe"+761311:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
hpWrite1AOB: //"DDDA.exe"+761311:
db F3 0F 11 89 9C 02 00 00
//Alt: movss [ecx+0000029C],xmm1
unregistersymbol(hpWrite1AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>795</ID>
              <Description>"Full Stamina (all human)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(staminaWrite1AOB,DDDA.exe,F3 0F 11 85 A8 02 00 00 8B BE EC 3D 00 00)
registersymbol(staminaWrite1AOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
/*cmp [ebp+24],0
jne originalcode
cmp [ebp+24],ffffffff
je originalcode
cmp [ebp+2c],ffffffff
je originalcode
cmp [ebp+34],ffffffff
je originalcode
cmp [ebp+38],ffffffff
je originalcode
cmp [ebp+3c],ffffffff
je originalcode*/
comiss xmm0,[ebp+2a8]
jbe exit

originalcode:
movss [ebp+000002A8],xmm0

exit:
jmp returnhere

///

staminaWrite1AOB: //"DDDA.exe"+77ED22:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminaWrite1AOB: //"DDDA.exe"+77ED22:
db F3 0F 11 85 A8 02 00 00
//Alt: movss [ebp+000002A8],xmm0
unregistersymbol(staminaWrite1AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>796</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(rhpFallDamageWrite1AOB,DDDA.exe,0F 2F D9 F3 0F 11 4D 08)
registersymbol(rhpFallDamageWrite1AOB)

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
xor eax,eax
@@:
cmp [pPartyHP+eax*4],ebp
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode3

@@:
mov eax,(float)1
movd xmm3,eax
comiss xmm3,xmm1
jbe originalcode3
movss xmm1,xmm3
movss xmm0,xmm2
subss xmm0,xmm3
movss [esp+20],xmm0
movss [esp+c],xmm1

originalcode3:
xorps xmm3,xmm3
pop eax
comiss xmm3,xmm1
movss [ebp+08],xmm1

exit3:
jmp returnhere3

///

rhpFallDamageWrite1AOB: //"DDDA.exe"+486012:
jmp newmem3
nop
nop
nop
returnhere3:





[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
rhpFallDamageWrite1AOB: //"DDDA.exe"+486012:
db 0F 2F D9 F3 0F 11 4D 08
//Alt: comiss xmm3,xmm1
//Alt: movss [ebp+08],xmm1
unregistersymbol(rhpFallDamageWrite1AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>797</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(rhpFallDamageWrite2AOB,DDDA.exe,F3 0F 10 44 24 10 F3 0F 11 46 08 8B)
registersymbol(rhpFallDamageWrite2AOB)

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
xor eax,eax
@@:
cmp [pPartyHP+eax*4],esi
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode4

@@:
mov eax,(float)1
movd xmm0,eax
comiss xmm0,[esp+14]
jbe originalcode4
movss [esp+14],xmm0

originalcode4:
pop eax
movss xmm0,[esp+10]

exit4:
jmp returnhere4

///

rhpFallDamageWrite2AOB: //"DDDA.exe"+779285:
jmp newmem4
nop
returnhere4:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem4)
rhpFallDamageWrite2AOB: //"DDDA.exe"+779285:
db F3 0F 10 44 24 10
//Alt: movss xmm0,[esp+10]
unregistersymbol(rhpFallDamageWrite2AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>798</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
//xor edx,edx
//@@:
//cmp [pPartyHP+edx*4],ebp
//je @f
//inc edx
//cmp edx,4
//jl @b
//jmp originalcode3
cmp [pPartyHP],ebp
jne originalcode3

@@:
addss xmm0,[ebp+8]
mov edx,(float)1
movd xmm1,edx
comiss xmm0,xmm1
jae @f
mov edx,(float)-1
movd xmm1,edx
movss xmm0,[ebp+8]
addss xmm0,xmm1
mulss xmm0,xmm1
movss [esp+20],xmm0

@@:
movss xmm0,[esp+20]

originalcode3:
mov edx,[esp+24]
push edx

exit3:
jmp returnhere3

///

"DDDA.exe"+485F86:
jmp newmem3
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
"DDDA.exe"+485F86:
db 8B 54 24 24 52
//Alt: mov edx,[esp+24]
//Alt: push edx
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>799</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightReadInventoryAOB,DDDA.exe,F3 0F 10 84 0A C4 03 00 00 EB 03)
registersymbol(totalWeightReadInventoryAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
push ebx
xor eax,eax
lea ebx,[edx+ecx]
@@:
cmp [pTotalWeight+eax*4],ebx
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode2

@@:
cmp byte ptr [bIgnoreWeight+eax],1
jne originalcode2
pop ebx
pop eax
xorps xmm0,xmm0
jmp exit2

originalcode2:
pop ebx
pop eax
movss xmm0,[edx+ecx+000003C4]

exit2:
jmp returnhere2

///

totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
jmp newmem2
nop
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
db F3 0F 10 84 0A C4 03 00 00
//Alt: movss xmm0,[edx+ecx+000003C4]
unregistersymbol(totalWeightReadInventoryAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>800</ID>
              <Description>"No Description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0D3024A0"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0D3024A0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>801</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightWriteAOB,DDDA.exe,F3 0F 11 AB 4C 02 00 00 3B 6B 08)
registersymbol(totalWeightWriteAOB)

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
xor edx,edx
lea ecx,[ebx-178]
@@:
cmp [pTotalWeight+edx*4],ecx
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode3

@@:
cmp byte ptr [bIgnoreWeight+edx],2
jne originalcode3
xorps xmm5,xmm5

originalcode3:
movss [ebx+0000024C],xmm5

exit3:
jmp returnhere3

///

totalWeightWriteAOB: //"DDDA.exe"+580C7:
jmp newmem3
nop
nop
nop
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
totalWeightWriteAOB: //"DDDA.exe"+580C7:
db F3 0F 11 AB 4C 02 00 00
//Alt: movss [ebx+0000024C],xmm5
unregistersymbol(totalWeightWriteAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>802</ID>
              <Description>"No Description"</Description>
              <LastState Value="??" Activated="0" RealAddress="2185D0C4"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>2185D0C4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>803</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedItemWeightAOB,DDDA.exe,F3 0F 10 40 44 83 FE 06)
registersymbol(highlightedItemWeightAOB)

label(pHighlightedItemWeight)
registersymbol(pHighlightedItemWeight)

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHighlightedItemWeight],eax

originalcode4:
movss xmm0,[eax+44]

exit4:
jmp returnhere4

///
pHighlightedItemWeight:
dd 0
///

highlightedItemWeightAOB: //"DDDA.exe"+593AA:
jmp newmem4
returnhere4:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem4)
highlightedItemWeightAOB: //"DDDA.exe"+593AA:
db F3 0F 10 40 44
//Alt: movss xmm0,[eax+44]
unregistersymbol(highlightedItemWeightAOB)

unregistersymbol(pHighlightedItemWeight)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>804</ID>
              <Description>"No description"</Description>
              <LastState Value="00000000" Activated="0" RealAddress="11297AFC"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>11297AFC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>805</ID>
              <Description>"No description"</Description>
              <LastState Value="00000000" Activated="0" RealAddress="1E4D8E00"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>1E4D8E00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>806</ID>
              <Description>"No description"</Description>
              <LastState Value="00000000" Activated="0" RealAddress="35BC9820"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>35BC9820</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>807</ID>
              <Description>"No description"</Description>
              <LastState Value="03000002" Activated="0" RealAddress="3C08B460"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>3C08B460</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>808</ID>
              <Description>"No description"</Description>
              <LastState Value="00000000" Activated="0" RealAddress="0CF685CC"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0CF685CC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>809</ID>
              <Description>"No description"</Description>
              <LastState Value="??" Activated="0" RealAddress="215DD036"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>215dd036</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>810</ID>
              <Description>"No description"</Description>
              <LastState Value="??" Activated="0" RealAddress="215DF7B6"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>2 Bytes</VariableType>
              <Address>215DF7B6</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>811</ID>
              <Description>"No Description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0A2C8068"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0A2C8068</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>812</ID>
              <Description>"No Description"</Description>
              <LastState Value="50" Activated="0" RealAddress="014EFBB0"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>014EFBB0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>813</ID>
              <Description>"No Description"</Description>
              <LastState Value="00000164" Activated="0" RealAddress="014F0A10"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>014F0A10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>814</ID>
              <Description>"No Description"</Description>
              <LastState Value="00000004" Activated="0" RealAddress="014F0990"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>014F0990</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>815</ID>
              <Description>"skull spliter"</Description>
              <LastState Value="00000164" Activated="0" RealAddress="014F0A10"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>014F0A10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>816</ID>
              <Description>"Fracture Dart"</Description>
              <LastState Value="32" Activated="0" RealAddress="014F22F0"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>014F22F0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>817</ID>
              <Description>"No Description"</Description>
              <LastState Value="4" Activated="0" RealAddress="014F2270"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>014F2270</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>818</ID>
              <Description>"Ignore Equipment Vocation Restriction"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(setFlagIfClassMatchedAOB,DDDA.exe,0F 94 C0 C2 0C 00)
registersymbol(setFlagIfClassMatchedAOB)

setFlagIfClassMatchedAOB: //"DDDA.exe"+63DB2:
db 90 B0 01
//Alt: nop
//Alt: mov al,1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
setFlagIfClassMatchedAOB: //"DDDA.exe"+63DB2:
db 0F 94 C0
//Alt: sete al
unregistersymbol(setFlagIfClassMatchedAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>819</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp],DDDA.exe+2ffa95
jne @f
cmp dword ptr [eax+000002D8],01
jmp exit

@@:
cmp [esp],DDDA.exe+2fface
jne @f
cmp dword ptr [eax+000002D8],01
jmp exit

@@:
cmp [esp],DDDA.exe+302fbd
jne @f
cmp dword ptr [eax+000002D8],01
jmp exit

@@:
cmp [esp],DDDA.exe+302bc0
jne @f
cmp dword ptr [eax+000002D8],01
jmp exit

@@:

originalcode:
cmp dword ptr [eax+000002D8],01

exit:
jmp returnhere

///

"DDDA.exe"+303020:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+303020:
db 83 B8 D8 02 00 00 01
//Alt: cmp dword ptr [eax+000002D8],01
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>820</ID>
              <Description>"a"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,esi

originalcode:
//mov eax,[ebx+esi*4]
cmp eax,-01

exit:
jmp returnhere

///

"DDDA.exe"+302FC1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+302FC1:
db 8B 04 B3 83 F8 FF
//Alt: mov eax,[ebx+esi*4]
//Alt: cmp eax,-01
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>821</ID>
              <Description>"b"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
or edx,-02

originalcode:
//or edx,-01
xor ecx,ecx

exit:
jmp returnhere

///

"DDDA.exe"+302BC0:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+302BC0:
db 83 CA FF 33 C9
//Alt: or edx,-01
//Alt: xor ecx,ecx
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>822</ID>
              <Description>"fig start"</Description>
              <LastState Value="12" Activated="0" RealAddress="015128BC"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>"DDDA.exe"+11128BC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>823</ID>
              <Description>"ass start"</Description>
              <LastState Value="255" Activated="0" RealAddress="0151292C"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>"DDDA.exe"+111292C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>824</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightReadOnShopEnterAOB,DDDA.exe,F3 0F 10 84 11 C4 03 00 00)
registersymbol(totalWeightReadOnShopEnterAOB)

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
push ebx
xor eax,eax
lea ebx,[edx+ecx]
@@:
cmp [pTotalWeight+eax*4],ebx
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode4

@@:
cmp byte ptr [bIgnoreWeight+eax],0
je originalcode4
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+eax],2
jne @f
movss [edx+ecx+3c4],xmm0
@@:
pop ebx
pop eax
jmp exit4

originalcode4:
pop ebx
pop eax
movss xmm0,[ecx+edx+000003C4]

exit4:
jmp returnhere4

///

totalWeightReadOnShopEnterAOB: //"DDDA.exe"+2DEB29:
jmp newmem4
nop
nop
nop
nop
returnhere4:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem4)
totalWeightReadOnShopEnterAOB: //"DDDA.exe"+2DEB29:
db F3 0F 10 84 11 C4 03 00 00
//Alt: movss xmm0,[ecx+edx+000003C4]
unregistersymbol(totalWeightReadOnShopEnterAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>825</ID>
              <Description>"pawn talked #"</Description>
              <LastState Value="00000000" Activated="0" RealAddress="0A409094"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0A409094</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>826</ID>
              <Description>"2"</Description>
              <LastState Value="0" Activated="0" RealAddress="0A3FB268"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0A3FB268</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>827</ID>
              <Description>"3"</Description>
              <LastState Value="0" Activated="0" RealAddress="0A3FC8C8"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0A3FC8C8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>465</ID>
              <Description>"No Description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CEBDAA0"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CEBDAA0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>467</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
//8B 43 5C 83 F8 04 74 1E
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebx+5C]
cmp [esi+100],00004040
jmp exit

originalcode:
mov eax,[ebx+5C]
cmp eax,04

exit:
jmp returnhere

///

"DDDA.exe"+741F04:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+741F04:
db 8B 43 5C 83 F8 04
//Alt: mov eax,[ebx+5C]
//Alt: cmp eax,04
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>468</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CEBD9BC"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>0CEBD9BC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>469</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(chkIfReadyToCastAOB,DDDA.exe,83 7B 5C 02 0F 85 3C 03 00 00)
registersymbol(chkIfReadyToCastAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [ecx+100],00004040
jne originalcode
cmp [ebx+5c],1
jne originalcode
mov dword ptr [ebx+5c],2

originalcode:
cmp dword ptr [ebx+5C],02
jne chkIfReadyToCastAOB+346 //DDDA.exe+74405F

exit:
jmp returnhere

///

chkIfReadyToCastAOB: //"DDDA.exe"+743D19:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
chkIfReadyToCastAOB: //"DDDA.exe"+743D19:
db 83 7B 5C 02 0F 85 3C 03 00 00
//Alt: cmp dword ptr [ebx+5C],02
//Alt: jne chkIfReadyToCastAOB+346 //DDDA.exe+74405F
unregistersymbol(chkIfReadyToCastAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>470</ID>
              <Description>"No Description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CEDD93C"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0CEDD93C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>471</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx+100],00004040
jne originalcode
mov [esi+5c],2
jmp exit

originalcode:
mov [esi+5C],00000001

exit:
jmp returnhere

///

"DDDA.exe"+74249F:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+74249F:
db C7 46 5C 01 00 00 00
//Alt: mov [esi+5C],00000001
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>472</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ecx+100],00004040
jne originalcode
cmp [ebx+5c],1
jne originalcode
mov [ebx+5c],2
jmp exit

originalcode:
mov eax,[ebx+5C]
cmp eax,04

exit:
jmp returnhere

///

"DDDA.exe"+741F04:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+741F04:
db 8B 43 5C 83 F8 04
//Alt: mov eax,[ebx+5C]
//Alt: cmp eax,04
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>473</ID>
              <Description>"No description"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>pPlayerCoord</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>474</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0D1A2E40"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0D1A2E40</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>475</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0D1A4B00"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0D1A4B00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>476</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0D1E7B94"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0D1E7B94</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>477</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CD881E4"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CD881E4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>478</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CD88DE4"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CD88DE4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>479</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CDC6CEC"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CDC6CEC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>480</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CE24B00"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0CE24B00</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>481</ID>
              <Description>"No Description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0D1E7B7C"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0D1E7B7C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>482</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0D1E7B94"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0D1E7B94</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>483</ID>
              <Description>"No description"</Description>
              <LastState Value="00000000" Activated="0" RealAddress="0D1E7B94"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0D1E7B94</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>484</ID>
              <Description>"No description"</Description>
              <LastState Value="43350000" Activated="0" RealAddress="0152828C"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>DDDA.exe+112828C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>828</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(castStateChkAOB,DDDA.exe,83 7B 5C 00 0F 84 E1 01 00 00)
registersymbol(castStateChkAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test eax,eax
jz originalcode
cmp dword ptr [eax+100],00004040
jne originalcode
cmp dword ptr [ebx+5c],1
jne originalcode
mov dword ptr [ebx+5c],2

originalcode:
cmp dword ptr [ebx+5C],00
je castStateChkAOB+1eb //DDDA.exe+6C69CA

exit:
jmp returnhere

///

castStateChkAOB: //"DDDA.exe"+6C67DF:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
castStateChkAOB: //"DDDA.exe"+6C67DF:
db 83 7B 5C 00 0F 84 E1 01 00 00
//Alt: cmp dword ptr [ebx+5C],00
//Alt: je castStateChkAOB+1eb //DDDA.exe+6C69CA
unregistersymbol(castStateChkAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>829</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+100],00004040
jne originalcode
mov ecx,[edi+4]

originalcode:
mov ecx,[edi+04]
movss xmm0,[ecx+14]

exit:
jmp returnhere

///

"DDDA.exe"+449026:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+449026:
db 8B 4F 04 F3 0F 10 41 14
//Alt: mov ecx,[edi+04]
//Alt: movss xmm0,[ecx+14]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>830</ID>
              <Description>"No Description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0CD1DF3C"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0CD1DF3C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>831</ID>
              <Description>"No Description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0D3E44DC"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>0D3E44DC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>832</ID>
              <Description>"No description"</Description>
              <LastState Value="0" Activated="0" RealAddress="0D3E44F4"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>0D3E44F4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>833</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+100],00004040
jne originalcode2
//mov ecx,[edi+4]
mov ecx,[pSomeCharacterStates]
cmp word ptr [ecx+78],0100
jne @f
mov dword ptr [ecx+74],(float)100000
jmp originalcode2
@@:
fld dword ptr [ecx+13c]
fstp dword ptr [ecx+140]

originalcode2:
mov ecx,[edi+04]
movss xmm0,[ecx+14]

exit2:
jmp returnhere2

///

"DDDA.exe"+449026:
jmp newmem2
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"DDDA.exe"+449026:
db 8B 4F 04 F3 0F 10 41 14
//Alt: mov ecx,[edi+04]
//Alt: movss xmm0,[ecx+14]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>834</ID>
              <Description>"No description"</Description>
              <LastState Value="00000000" Activated="0" RealAddress="10F50EA4"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>10F50EA4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>835</ID>
              <Description>"No description"</Description>
              <LastState Value="??" Activated="0" RealAddress="282441BC"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>282441BC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>836</ID>
              <Description>"No description"</Description>
              <LastState Value="??" Activated="0" RealAddress="282441C0"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>282441C0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>837</ID>
              <Description>"No description"</Description>
              <LastState Value="00" Activated="0" RealAddress="10F51429"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>10F51429</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>838</ID>
              <Description>"No Description"</Description>
              <LastState Value="0" Activated="0" RealAddress="10F61429"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>10F61429</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>839</ID>
              <Description>"No description"</Description>
              <LastState Value="00" Activated="0" RealAddress="10F60060"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>10F60060</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>840</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov al,1
ret

originalcode:
mov eax,[eax+edx*4+000002CC]

exit:
jmp returnhere

///

"DDDA.exe"+303C24:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+303C24:
db 8B 84 90 CC 02 00 00
//Alt: mov eax,[eax+edx*4+000002CC]
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>509</ID>
              <Description>"weapon skills learn ranks ignore 1"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(weaponSkillsRankReqReadInLearnMenuAOB,DDDA.exe,8B 4C 24 10 50 8B ** ** ** ** ** E8)
registersymbol(weaponSkillsRankReqReadInLearnMenuAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
xor eax,eax

originalcode:
mov ecx,[esp+10]
push eax

exit:
jmp returnhere

///

weaponSkillsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB666:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
weaponSkillsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB666:
db 8B 4C 24 10 50
//Alt: mov ecx,[esp+10]
//Alt: push eax
unregistersymbol(weaponSkillsRankReqReadInLearnMenuAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>511</ID>
              <Description>"weapon skills learn ranks ignore 2"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(setFlagIfWeaponSkillsRanksReqMetInLearnMenuAOB,DDDA.exe,3B 56 10 0F 9D C0)
registersymbol(setFlagIfWeaponSkillsRanksReqMetInLearnMenuAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[esi+10]

originalcode2:
cmp edx,[esi+10]
setge al

exit2:
jmp returnhere2

///

setFlagIfWeaponSkillsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FB30C:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
setFlagIfWeaponSkillsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FB30C:
db 3B 56 10 0F 9D C0
//Alt: cmp edx,[esi+10]
//Alt: setge al
unregistersymbol(setFlagIfWeaponSkillsRanksReqMetInLearnMenuAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>512</ID>
              <Description>"core skills learn ranks ignore 1"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(coreSkillsRankReqReadInLearnMenuAOB,DDDA.exe,8B 94 88 CC 02 00 00 3B 57 0C)
registersymbol(coreSkillsRankReqReadInLearnMenuAOB)

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[edi+c]
jmp exit3

originalcode3:
mov edx,[eax+ecx*4+000002CC]

exit3:
jmp returnhere3

///

coreSkillsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB0B2:
jmp newmem3
nop
nop
returnhere3:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
coreSkillsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB0B2:
db 8B 94 88 CC 02 00 00
//Alt: mov edx,[eax+ecx*4+000002CC]
unregistersymbol(coreSkillsRankReqReadInLearnMenuAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>841</ID>
              <Description>"core skills learn ranks ignore 2"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(setFlagIfCoreSkillsRanksReqMetInLearnMenuAOB,DDDA.exe,3B 56 0C 0F 9D C0)
registersymbol(setFlagIfCoreSkillsRanksReqMetInLearnMenuAOB)

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[esi+c]

originalcode4:
cmp edx,[esi+0C]
setge al

exit4:
jmp returnhere4

///

setFlagIfCoreSkillsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FB469:
jmp newmem4
nop
returnhere4:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem4)
setFlagIfCoreSkillsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FB469:
db 3B 56 0C 0F 9D C0
//Alt: cmp edx,[esi+0C]
//Alt: setge al
unregistersymbol(setFlagIfCoreSkillsRanksReqMetInLearnMenuAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>842</ID>
              <Description>"augments learn ranks ignore 1"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(augmentsRankReqReadInLearnMenuAOB,DDDA.exe,8B 44 24 18 52 E8 ** ** ** ** 5D)
registersymbol(augmentsRankReqReadInLearnMenuAOB)

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
//place your code here
xor edx,edx

originalcode5:
mov eax,[esp+18]
push edx

exit5:
jmp returnhere5

///

augmentsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB777:
jmp newmem5
returnhere5:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem5)
augmentsRankReqReadInLearnMenuAOB: //"DDDA.exe"+2FB777:
db 8B 44 24 18 52
//Alt: mov eax,[esp+18]
//Alt: push edx
unregistersymbol(augmentsRankReqReadInLearnMenuAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>843</ID>
              <Description>"augments learn ranks ignore 2"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(setFlagIfAugmentsRanksReqMetInLearnMenuAOB,DDDA.exe,3B 46 0C 0F 9D C0)
registersymbol(setFlagIfAugmentsRanksReqMetInLearnMenuAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi+c]

originalcode6:
cmp eax,[esi+0C]
setge al

exit6:
jmp returnhere6

///

setFlagIfAugmentsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FBB75:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
setFlagIfAugmentsRanksReqMetInLearnMenuAOB: //"DDDA.exe"+2FBB75:
db 3B 46 0C 0F 9D C0
//Alt: cmp eax,[esi+0C]
//Alt: setge al
unregistersymbol(setFlagIfAugmentsRanksReqMetInLearnMenuAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>510</ID>
              <Description>"No Description"</Description>
              <LastState Value="??" Activated="0" RealAddress="2B41C084"/>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>2B41C084</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>844</ID>
              <Description>"weapon skills learn class ignore"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB,DDDA.exe,74 2F 8B 47 10)
registersymbol(cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB)

///

cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB: //"DDDA.exe"+2FB661:
db 90 90
//Alt: nop
//Alt: nop

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB: //"DDDA.exe"+2FB661:
db 74 2F
//Alt: je cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB+31 //DDDA.exe+2FB692
unregistersymbol(cJmpIfWeaponSkillsClassNotMatchInLearnMenuAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>845</ID>
              <Description>"core skills learn class ignore 1"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB,DDDA.exe,74 74 8B 44 24 1C)
registersymbol(cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB)

///

cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB: //"DDDA.exe"+2FB0A9:
db 90 90
//Alt: nop
//Alt: nop


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB: //"DDDA.exe"+2FB0A9:
db 74 74
//Alt: je cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB+76 //DDDA.exe+2FB11F
unregistersymbol(cJmpIfCoreSkillsClassNotMatchInLearnMenu1AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>846</ID>
              <Description>"core skills learn class ignore 2"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB,DDDA.exe,74 24 83 BD ** ** ** ** 05)
registersymbol(cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB)

cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB: //"DDDA.exe"+2FB0F9:
db 90 90
//Alt: nop
//Alt: nop


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB: //"DDDA.exe"+2FB0F9:
db 74 24
//Alt: je cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB+26 //DDDA.exe+2FB11F
unregistersymbol(cJmpIfCoreSkillsClassNotMatchInLearnMenu2AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>847</ID>
              <Description>"augments learn class ignore"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(chkIfAugmentsClassMatchInLearnMenu1AOB,DDDA.exe,8B 4A 10 49 3B C1)
registersymbol(chkIfAugmentsClassMatchInLearnMenu1AOB)

chkIfAugmentsClassMatchInLearnMenu1AOB: //"DDDA.exe"+2FB768:
db 90 90 8B C1
//Alt: nop
//Alt: nop
//Alt: mov eax,ecx


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
chkIfAugmentsClassMatchInLearnMenu1AOB: //"DDDA.exe"+2FB768:
db 8B 4A 10 49
//Alt: mov ecx,[edx+10]
//Alt: dec ecx
unregistersymbol(chkIfAugmentsClassMatchInLearnMenu1AOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>848</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightReadonEquipFromStorageAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 F3 ** ** ** ** ** E8 ** ** ** ** F3 ** ** ** ** ** 0F 57 C9)
registersymbol(totalWeightReadonEquipFromStorageAOB)

///

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
push edx
push ebx
xor edx,edx
lea ebx,[eax+ecx]
@@:
cmp [pTotalWeight+edx*4],ebx
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode6

@@:
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode6
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
pop ebx
pop edx
jmp exit6


originalcode6:
pop ebx
pop edx
movss xmm0,[eax+ecx+000003C4]

exit6:
jmp returnhere6

///

totalWeightReadonEquipFromStorageAOB: //"DDDA.exe"+77B579:
jmp newmem6
nop
nop
nop
nop
returnhere6:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
totalWeightReadonEquipFromStorageAOB: //"DDDA.exe"+77B579:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadonEquipFromStorageAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>849</ID>
              <Description>"Instant Skill Charge .1 (protagonist)"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(characterStateProcessPreCallAOB,DDDA.exe,8B 11 8B 42 18 FF D0 8B 4F 04 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 16 ** ** ** ** ** ** ** ** ** ** E8)
registersymbol(characterStateProcessPreCallAOB)

///

label(pSomeCharacterStates)
registersymbol(pSomeCharacterStates)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test esi,esi
jz originalcode
cmp dword ptr [esi+100],00004040 //chk protagonist
jne originalcode
mov [pSomeCharacterStates],ecx
//cmp word ptr [ecx+78],0100 //0100:alt charging, 0101:alt charged
//jne @f
//mov dword ptr [ecx+74],(float)100000 //set alt charge current

//@@:
//cmp dword ptr [ecx+13c],0
//je @f
//fld dword ptr [ecx+13c]    //load charge max
//fstp dword ptr [ecx+140]   //set charge current

//@@:
//cmp dword ptr [ecx+1b8],0  //with pointer when bow aiming
//je originalcode
//cmp byte ptr [ecx+1a4],1   //01: bow charged
//jge originalcode
//mov dword ptr [ecx+1a0],(float)100000 //set bow charge

originalcode:
mov edx,[ecx]
mov eax,[edx+18]

exit:
jmp returnhere

///
pSomeCharacterStates:
///

characterStateProcessPreCallAOB: //"DDDA.exe"+44901F:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
characterStateProcessPreCallAOB: //"DDDA.exe"+44901F:
db 8B 11 8B 42 18
//Alt: mov edx,[ecx]
//Alt: mov eax,[edx+18]
unregistersymbol(characterStateProcessPreCallAOB)

unregistersymbol(pSomeCharacterStates)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>850</ID>
                  <Description>""</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>851</ID>
                      <Description>"pSomeCharacterStates"</Description>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <ShowAsHex>1</ShowAsHex>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pSomeCharacterStates</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>852</ID>
                          <Description>"char state (+5c)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="0000005C"/>
                          <Color>80000008</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+5c</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>853</ID>
                          <Description>"charge 2 (+74)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000074"/>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>+74</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>854</ID>
                          <Description>"charage 2 state (+78)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000078"/>
                          <ShowAsHex>1</ShowAsHex>
                          <Color>80000008</Color>
                          <VariableType>2 Bytes</VariableType>
                          <Address>+78</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>855</ID>
                          <Description>"charge 1 max (+13c)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="0000013C"/>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>+13c</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>856</ID>
                          <Description>"charge 1 (+140)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="00000140"/>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>+140</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>857</ID>
                          <Description>"charge 3 (+1a0)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="000001A0"/>
                          <Color>80000008</Color>
                          <VariableType>Float</VariableType>
                          <Address>+1a0</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>858</ID>
                          <Description>"charge 3 flag (+1a4)"</Description>
                          <LastState Value="??" Activated="0" RealAddress="000001A4"/>
                          <Color>80000008</Color>
                          <VariableType>4 Bytes</VariableType>
                          <Address>+1a4</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>466</ID>
              <Description>"ic1 .1"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esi+100],00004040
jne originalcode
movss xmm0,[ebx+13c]
movss [ebx+140],xmm0

originalcode:
movss xmm0,[ebx+00000140]

exit:
jmp returnhere

///
bStaffCastFlag:
db 0
///

"DDDA.exe"+74272E:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DDDA.exe"+74272E:
db F3 0F 10 83 40 01 00 00
//Alt: movss xmm0,[ebx+00000140]

unregistersymbol(bStaffCastFlag)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>859</ID>
              <Description>"ic1 .2"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(staffShieldSpellsChargeReadAOB,DDDA.exe,F3 0F 10 83 40 01 00 00 F3 0F 5E C1)
registersymbol(staffShieldSpellsChargeReadAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[ebx+58]
test edx,edx
jz originalcode
cmp dword ptr [edx+100],00004040
jne originalcode
movss xmm0,[ebx+13c]
movss [ebx+140],xmm0

originalcode:
movss xmm0,[ebx+00000140]

exit:
jmp returnhere

///

staffShieldSpellsChargeReadAOB: //"DDDA.exe"+742004:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staffShieldSpellsChargeReadAOB: //"DDDA.exe"+742004:
db F3 0F 10 83 40 01 00 00
//Alt: movss xmm0,[ebx+00000140]
unregistersymbol(staffShieldSpellsChargeReadAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>860</ID>
              <Description>"ic2"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(swordSpellsChargeChkMaxAOB,DDDA.exe,D9 45 74 DF F1)
registersymbol(swordSpellsChargeChkMaxAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [ebp+58],0
je originalcode2
push eax
mov eax,[ebp+58]
cmp dword ptr [eax+100],00004040
pop eax
jne originalcode2
fst dword ptr [ebp+74]

originalcode2:
fld dword ptr [ebp+74]
fcomip st(0),st(1)

exit2:
jmp returnhere2

///

swordSpellsChargeChkMaxAOB: //"DDDA.exe"+712ABC:
jmp newmem2
returnhere2:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
swordSpellsChargeChkMaxAOB: //"DDDA.exe"+712ABC:
db D9 45 74 DF F1
//Alt: fld dword ptr [ebp+74]
//Alt: fcomip st(0),st(1)
unregistersymbol(swordSpellsChargeChkMaxAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>861</ID>
              <Description>"ic3"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(bowSkillsChargeChkMaxAOB,DDDA.exe,D9 85 A0 01 00 00 DF F1)
registersymbol(bowSkillsChargeChkMaxAOB)

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [ebp+58],0
je originalcode3
push eax
mov eax,[ebp+58]
cmp dword ptr [eax+100],00004040
pop eax
jne originalcode3
fst dword ptr [ebp+1a0]

originalcode3:
fld dword ptr [ebp+000001A0]

exit3:
jmp returnhere3

///

bowSkillsChargeChkMaxAOB: //"DDDA.exe"+716519:
jmp newmem3
nop
returnhere3:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem3)
bowSkillsChargeChkMaxAOB: //"DDDA.exe"+716519:
db D9 85 A0 01 00 00
//Alt: fld dword ptr [ebp+000001A0]
unregistersymbol(bowSkillsChargeChkMaxAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>538</ID>
              <Description>"No Description"</Description>
              <LastState Value="00000004" Activated="0" RealAddress="014F09B0"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>014F09B0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>543</ID>
              <Description>"No Description"</Description>
              <LastState Value="00000010" Activated="0" RealAddress="014F09B4"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>014F09B4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>539</ID>
              <Description>"get skill info in status menu"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(highlightedSkillClassReadAOB,DDDA.exe,8B ** ** ** ** ** 33 C9 33 C0 8B FF)
registersymbol(highlightedSkillClassReadAOB)

label(iHighlightedSkillID)
registersymbol(iHighlightedSkillID)
label(iHighlightedSkillWeaponType)
registersymbol(iHighlightedSkillWeaponType)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
shr eax,5
mov ecx,[edx+4]
mov [iHighlightedSkillID],eax
mov [iHighlightedSkillWeaponType],ecx
mov edx,[edx]

originalcode:
xor ecx,ecx
xor eax,eax
mov edi,edi

exit:
jmp returnhere

///
iHighlightedSkillID:
dd 0
iHighlightedSkillWeaponType:
dd 0
///

highlightedSkillClassReadAOB+6: //"DDDA.exe"+31923A:
jmp newmem
nop
returnhere:

highlightedSkillClassReadAOB: //"DDDA.exe"+319234:
db 8D
//Alt: lea


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
highlightedSkillClassReadAOB+6: //"DDDA.exe"+31923A:
db 33 C9 33 C0 8B FF
//Alt: xor ecx,ecx
//Alt: xor eax,eax
//Alt: mov edi,edi
highlightedSkillClassReadAOB: //"DDDA.exe"+319234:
db 8B
//Alt: mov
unregistersymbol(highlightedSkillClassReadAOB)

unregistersymbol(iHighlightedSkillID)
unregistersymbol(iHighlightedSkillWeaponType)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>540</ID>
                  <Description>"iHighlightedSkillID"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iHighlightedSkillID</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>541</ID>
                  <Description>"iHighlightedSkillWeaponType"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iHighlightedSkillWeaponType</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>542</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(swordSkillsChargeChkMaxAOB,DDDA.exe,0F 2F 44 24 0C F3 0F 11 46 74)
registersymbol(swordSkillsChargeChkMaxAOB)

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[esi+58]
test edx,edx
jz originalcode4
cmp [edx+100],00004040
jne originalcode4
movss xmm0,[esp+c]
movss [esi+74],xmm0

originalcode4:
comiss xmm0,[esp+0C]

exit4:
jmp returnhere4

///

swordSkillsChargeChkMaxAOB: //"DDDA.exe"+73D3C0:
jmp newmem4
returnhere4:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem4)
swordSkillsChargeChkMaxAOB: //"DDDA.exe"+73D3C0:
db 0F 2F 44 24 0C
//Alt: comiss xmm0,[esp+0C]
unregistersymbol(swordSkillsChargeChkMaxAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>545</ID>
              <Description>"Some Pointers .1 (access Inventory once)"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(goldChkUpperLimitAOB,DDDA.exe,8B 82 18 7A 0A 00 3D)
registersymbol(goldChkUpperLimitAOB)

label(pSomeBase1)
registersymbol(pSomeBase1)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pSomeBase1],edx

originalcode:
mov eax,[edx+000A7A18]

exit:
jmp returnhere

///
pSomeBase1:
dd 0
///

goldChkUpperLimitAOB: //"DDDA.exe"+2684A7:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
goldChkUpperLimitAOB: //"DDDA.exe"+2684A7:
db 8B 82 18 7A 0A 00
//Alt: mov eax,[edx+000A7A18]
unregistersymbol(goldChkUpperLimitAOB)

unregistersymbol(pSomeBase1)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>546</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightReadOnPickUpAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 0F 2F C8 5E)
registersymbol(totalWeightReadOnPickUpAOB)

alloc(newmem7,2048)
label(returnhere7)
label(originalcode7)
label(exit7)

newmem7: //this is allocated memory, you have read,write,execute access
//place your code here
push edx
push ebx
xor edx,edx
lea ebx,[eax+ecx]
@@:
cmp [pTotalWeight+edx*4],ebx
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode7

@@:
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode7
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
pop ebx
pop edx
jmp exit7

originalcode7:
movss xmm0,[eax+ecx+000003C4]

exit7:
jmp returnhere7

///

totalWeightReadOnPickUpAOB: //"DDDA.exe"+77B3F9:
jmp newmem7
nop
nop
nop
nop
returnhere7:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem7)
totalWeightReadOnPickUpAOB: //"DDDA.exe"+77B3F9:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadOnPickUpAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>552</ID>
              <Description>"pPartyBase 1"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPartyBase+0*4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>553</ID>
              <Description>"Total Weight Mod .1"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightReadAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 8B C6)
registersymbol(totalWeightReadAOB)
aobscanmodule(totalWeightReadInventoryAOB,DDDA.exe,F3 0F 10 84 0A C4 03 00 00 EB 03)
registersymbol(totalWeightReadInventoryAOB)
aobscanmodule(totalWeightWriteAOB,DDDA.exe,F3 0F 11 AB 4C 02 00 00 3B 6B 08)
registersymbol(totalWeightWriteAOB)
aobscanmodule(totalWeightReadOnShopEnterAOB,DDDA.exe,F3 0F 10 84 11 C4 03 00 00)
registersymbol(totalWeightReadOnShopEnterAOB)
aobscanmodule(totalWeightReadOnBuyEndAOB,DDDA.exe,F3 0F 10 84 10 C4 03 00 00 F3)
registersymbol(totalWeightReadOnBuyEndAOB)
aobscanmodule(totalWeightReadonEquipFromStorageAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 F3 ** ** ** ** ** E8 ** ** ** ** F3 ** ** ** ** ** 0F 57 C9)
registersymbol(totalWeightReadonEquipFromStorageAOB)
aobscanmodule(totalWeightReadOnPickUpAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 0F 2F C8 5E)
registersymbol(totalWeightReadOnPickUpAOB)

///

label(bIgnoreWeight)
registersymbol(bIgnoreWeight)
label(pTotalWeight)
registersymbol(pTotalWeight)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
//ebx:char base
newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test eax,eax
jnz @f
//lea edx,[eax+ecx+3c4]
//mov [pTotalWeight],edx
mov [pTotalWeight],ecx
cmp byte ptr [bIgnoreWeight],0
je originalcode
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight],2
jne exit
movss [eax+ecx+3c4],xmm0
jmp exit

@@:
mov edx,[esi+5854]
cmp edx,4
jg originalcode
inc edx
push eax
lea eax,[eax+ecx]
mov [pTotalWeight+edx*4],eax
pop eax
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
jmp exit

originalcode:
movss xmm0,[eax+ecx+000003C4]

exit:
jmp returnhere

///
bIgnoreWeight:
dd 0
pTotalWeight:
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
push ebx
xor eax,eax
lea ebx,[edx+ecx]
@@:
cmp [pTotalWeight+eax*4],ebx
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode2

@@:
cmp byte ptr [bIgnoreWeight+eax],0
je originalcode2
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+eax],2
jne @f
movss [edx+ecx+3c4],xmm0
@@:
pop ebx
pop eax
jmp exit2

originalcode2:
pop ebx
pop eax
movss xmm0,[edx+ecx+000003C4]

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
xor edi,edi
lea ecx,[ebx-178]
@@:
cmp [pTotalWeight+edi*4],ecx
je @f
inc edi
cmp edi,4
jl @b
jmp originalcode3

@@:
cmp byte ptr [bIgnoreWeight+edi],2
jne originalcode3
xorps xmm5,xmm5

originalcode3:
movss [ebx+0000024C],xmm5

exit3:
jmp returnhere3

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
push ebx
xor eax,eax
lea ebx,[edx+ecx]
@@:
cmp [pTotalWeight+eax*4],ebx
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode4

@@:
cmp byte ptr [bIgnoreWeight+eax],0
je originalcode4
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+eax],2
jne @f
movss [edx+ecx+3c4],xmm0
@@:
pop ebx
pop eax
jmp exit4

originalcode4:
pop ebx
pop eax
movss xmm0,[ecx+edx+000003C4]

exit4:
jmp returnhere4

///

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
push ebx
xor ecx,ecx
lea ebx,[eax+edx]
@@:
cmp [pTotalWeight+ecx*4],ebx
je @f
inc ecx
cmp ecx,4
jl @b
jmp originalcode5

@@:
cmp byte ptr [bIgnoreWeight+ecx],0
je originalcode5
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+ecx],2
jne @f
movss [eax+edx+3c4],xmm0
@@:
pop ebx
pop ecx
jmp exit5

originalcode5:
pop ebx
pop ecx
movss xmm0,[eax+edx+000003C4]

exit5:
jmp returnhere5

///

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
push edx
push ebx
xor edx,edx
lea ebx,[eax+ecx]
@@:
cmp [pTotalWeight+edx*4],ebx
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode6

@@:
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode6
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
pop ebx
pop edx
jmp exit6

originalcode6:
pop ebx
pop edx
movss xmm0,[eax+ecx+000003C4]

exit6:
jmp returnhere6

///

alloc(newmem7,2048)
label(returnhere7)
label(originalcode7)
label(exit7)

newmem7: //this is allocated memory, you have read,write,execute access
//place your code here
push edx
push ebx
xor edx,edx
lea ebx,[eax+ecx]
@@:
cmp [pTotalWeight+edx*4],ebx
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode7

@@:
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode7
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
pop ebx
pop edx
jmp exit7

originalcode7:
movss xmm0,[eax+ecx+000003C4]

exit7:
jmp returnhere7

///

totalWeightReadAOB: //"DDDA.exe"+77B350:
jmp newmem
nop
nop
nop
nop
returnhere:

totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
jmp newmem2
nop
nop
nop
nop
returnhere2:

totalWeightWriteAOB: //"DDDA.exe"+580C7:
jmp newmem3
nop
nop
nop
returnhere3:

totalWeightReadOnShopEnterAOB: //"DDDA.exe"+2DEB29:
jmp newmem4
nop
nop
nop
nop
returnhere4:

totalWeightReadOnBuyEndAOB: //"DDDA.exe"+2E4457:
jmp newmem5
nop
nop
nop
nop
returnhere5:

totalWeightReadonEquipFromStorageAOB: //"DDDA.exe"+77B579:
jmp newmem6
nop
nop
nop
nop
returnhere6:

totalWeightReadOnPickUpAOB: //"DDDA.exe"+77B3F9:
jmp newmem7
nop
nop
nop
nop
returnhere7:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
totalWeightReadAOB: //"DDDA.exe"+77B350:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadAOB)
dealloc(newmem2)
totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
db F3 0F 10 84 0A C4 03 00 00
//Alt: movss xmm0,[edx+ecx+000003C4]
unregistersymbol(totalWeightReadInventoryAOB)
dealloc(newmem3)
totalWeightWriteAOB: //"DDDA.exe"+580C7:
db F3 0F 11 AB 4C 02 00 00
//Alt: movss [ebx+0000024C],xmm5
unregistersymbol(totalWeightWriteAOB)
dealloc(newmem4)
totalWeightReadOnShopEnterAOB: //"DDDA.exe"+2DEB29:
db F3 0F 10 84 11 C4 03 00 00
//Alt: movss xmm0,[ecx+edx+000003C4]
unregistersymbol(totalWeightReadOnShopEnterAOB)
dealloc(newmem5)
totalWeightReadOnBuyEndAOB: //"DDDA.exe"+2E4457:
db F3 0F 10 84 10 C4 03 00 00
//Alt: movss xmm0,[eax+edx+000003C4]
unregistersymbol(totalWeightReadOnBuyEndAOB)
dealloc(newmem6)
totalWeightReadonEquipFromStorageAOB: //"DDDA.exe"+77B579:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadonEquipFromStorageAOB)
dealloc(newmem7)
totalWeightReadOnPickUpAOB: //"DDDA.exe"+77B3F9:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadOnPickUpAOB)

///

unregistersymbol(bIgnoreWeight)
unregistersymbol(pTotalWeight)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>554</ID>
                  <Description>"1"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pTotalWeight+0*4</Address>
                  <Offsets>
                    <Offset>3C4</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>555</ID>
                      <Description>"Status [F11-Ignore]"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bIgnoreWeight+0</Address>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Set Value</Action>
                          <Keys>
                            <Key>122</Key>
                          </Keys>
                          <Value>1</Value>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>556</ID>
                  <Description>"2"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pTotalWeight+1*4</Address>
                  <Offsets>
                    <Offset>3C4</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>557</ID>
                      <Description>"Status"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bIgnoreWeight+1</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>558</ID>
                  <Description>"3"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pTotalWeight+2*4</Address>
                  <Offsets>
                    <Offset>3C4</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>559</ID>
                      <Description>"Status"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bIgnoreWeight+2</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>560</ID>
                  <Description>"4"</Description>
                  <LastState Value="??" Activated="0" RealAddress="00000000"/>
                  <Color>80000008</Color>
                  <VariableType>Float</VariableType>
                  <Address>pTotalWeight+3*4</Address>
                  <Offsets>
                    <Offset>3C4</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>561</ID>
                      <Description>"Status"</Description>
                      <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Normal
1:Ignore
2:Set Zero
</DropDownList>
                      <LastState Value="??" Activated="0" RealAddress="00000000"/>
                      <Color>80000008</Color>
                      <VariableType>Byte</VariableType>
                      <Address>bIgnoreWeight+3</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>564</ID>
              <Description>"No description"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPartyBase+0*4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>562</ID>
              <Description>"No description"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pTotalWeight+0*4</Address>
              <Offsets>
                <Offset>514</Offset>
                <Offset>1A0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>565</ID>
              <Description>"No description"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPartyBase+1*4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>563</ID>
              <Description>"No description"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pTotalWeight+1*4</Address>
              <Offsets>
                <Offset>514</Offset>
                <Offset>1A0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>566</ID>
              <Description>"No description"</Description>
              <LastState Value="??" Activated="0" RealAddress="00000000"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pPartyBase+2*4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>568</ID>
              <Description>"Total Weight Mod .2"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightReadAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 8B C6)
registersymbol(totalWeightReadAOB)
aobscanmodule(totalWeightReadInventoryAOB,DDDA.exe,F3 0F 10 84 0A C4 03 00 00 EB 03)
registersymbol(totalWeightReadInventoryAOB)
aobscanmodule(totalWeightWriteAOB,DDDA.exe,F3 0F 11 AB 4C 02 00 00 3B 6B 08)
registersymbol(totalWeightWriteAOB)
aobscanmodule(totalWeightReadOnShopEnterAOB,DDDA.exe,F3 0F 10 84 11 C4 03 00 00)
registersymbol(totalWeightReadOnShopEnterAOB)
aobscanmodule(totalWeightReadOnBuyEndAOB,DDDA.exe,F3 0F 10 84 10 C4 03 00 00 F3)
registersymbol(totalWeightReadOnBuyEndAOB)
aobscanmodule(totalWeightReadonEquipFromStorageAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 F3 ** ** ** ** ** E8 ** ** ** ** F3 ** ** ** ** ** 0F 57 C9)
registersymbol(totalWeightReadonEquipFromStorageAOB)
aobscanmodule(totalWeightReadOnPickUpAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 0F 2F C8 5E)
registersymbol(totalWeightReadOnPickUpAOB)

///

label(bIgnoreWeight)
registersymbol(bIgnoreWeight)
label(pTotalWeight)
registersymbol(pTotalWeight)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
/*label(isparty)*/

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test eax,eax
jnz @f
//lea edx,[eax+ecx+3c4]
//mov [pTotalWeight],edx
mov [pTotalWeight],ecx
cmp byte ptr [bIgnoreWeight],0
je originalcode
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight],2
jne exit
movss [eax+ecx+3c4],xmm0
jmp exit

@@:
mov edx,[esi+5854]
cmp edx,4
jg originalcode
inc edx
push eax
lea eax,[eax+ecx]
mov [pTotalWeight+edx*4],eax
pop eax
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
jmp exit

//ebx:char base
/*xor edx,edx
test eax,eax
jz isparty
inc edx

@@:
cmp [pPartyBase+edx*4],ebx
je isparty
inc edx
cmp edx,4
jl @b
jmp originalcode

isparty:
push eax
lea eax,[eax+ecx]
mov [pTotalWeight+edx*4],eax
pop eax
movss xmm0,[eax+ecx+000003C4]
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
jmp exit*/

originalcode:
movss xmm0,[eax+ecx+000003C4]

exit:
jmp returnhere

///
bIgnoreWeight:
dd 0
pTotalWeight:
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
push ebx
xor eax,eax
lea ebx,[edx+ecx]
@@:
cmp [pTotalWeight+eax*4],ebx
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode2

@@:
cmp byte ptr [bIgnoreWeight+eax],0
je originalcode2
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+eax],2
jne @f
movss [edx+ecx+3c4],xmm0
@@:
pop ebx
pop eax
jmp exit2

originalcode2:
pop ebx
pop eax
movss xmm0,[edx+ecx+000003C4]

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
xor edi,edi
lea ecx,[ebx-178]
@@:
cmp [pTotalWeight+edi*4],ecx
je @f
inc edi
cmp edi,4
jl @b
jmp originalcode3

@@:
cmp byte ptr [bIgnoreWeight+edi],2
jne originalcode3
xorps xmm5,xmm5

originalcode3:
movss [ebx+0000024C],xmm5

exit3:
jmp returnhere3

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
push ebx
xor eax,eax
lea ebx,[edx+ecx]
@@:
cmp [pTotalWeight+eax*4],ebx
je @f
inc eax
cmp eax,4
jl @b
jmp originalcode4

@@:
cmp byte ptr [bIgnoreWeight+eax],0
je originalcode4
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+eax],2
jne @f
movss [edx+ecx+3c4],xmm0
@@:
pop ebx
pop eax
jmp exit4

originalcode4:
pop ebx
pop eax
movss xmm0,[ecx+edx+000003C4]

exit4:
jmp returnhere4

///

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
push ebx
xor ecx,ecx
lea ebx,[eax+edx]
@@:
cmp [pTotalWeight+ecx*4],ebx
je @f
inc ecx
cmp ecx,4
jl @b
jmp originalcode5

@@:
cmp byte ptr [bIgnoreWeight+ecx],0
je originalcode5
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+ecx],2
jne @f
movss [eax+edx+3c4],xmm0
@@:
pop ebx
pop ecx
jmp exit5

originalcode5:
pop ebx
pop ecx
movss xmm0,[eax+edx+000003C4]

exit5:
jmp returnhere5

///

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
push edx
push ebx
xor edx,edx
lea ebx,[eax+ecx]
@@:
cmp [pTotalWeight+edx*4],ebx
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode6

@@:
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode6
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
pop ebx
pop edx
jmp exit6

originalcode6:
pop ebx
pop edx
movss xmm0,[eax+ecx+000003C4]

exit6:
jmp returnhere6

///

alloc(newmem7,2048)
label(returnhere7)
label(originalcode7)
label(exit7)

newmem7: //this is allocated memory, you have read,write,execute access
//place your code here
push edx
push ebx
xor edx,edx
lea ebx,[eax+ecx]
@@:
cmp [pTotalWeight+edx*4],ebx
je @f
inc edx
cmp edx,4
jl @b
jmp originalcode7

@@:
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode7
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
pop ebx
pop edx
jmp exit7

originalcode7:
movss xmm0,[eax+ecx+000003C4]

exit7:
jmp returnhere7

///

totalWeightReadAOB: //"DDDA.exe"+77B350:
jmp newmem
nop
nop
nop
nop
returnhere:

totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
jmp newmem2
nop
nop
nop
nop
returnhere2:

totalWeightWriteAOB: //"DDDA.exe"+580C7:
jmp newmem3
nop
nop
nop
returnhere3:

totalWeightReadOnShopEnterAOB: //"DDDA.exe"+2DEB29:
jmp newmem4
nop
nop
nop
nop
returnhere4:

totalWeightReadOnBuyEndAOB: //"DDDA.exe"+2E4457:
jmp newmem5
nop
nop
nop
nop
returnhere5:

totalWeightReadonEquipFromStorageAOB: //"DDDA.exe"+77B579:
jmp newmem6
nop
nop
nop
nop
returnhere6:

totalWeightReadOnPickUpAOB: //"DDDA.exe"+77B3F9:
jmp newmem7
nop
nop
nop
nop
returnhere7:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
totalWeightReadAOB: //"DDDA.exe"+77B350:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadAOB)
dealloc(newmem2)
totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
db F3 0F 10 84 0A C4 03 00 00
//Alt: movss xmm0,[edx+ecx+000003C4]
unregistersymbol(totalWeightReadInventoryAOB)
dealloc(newmem3)
totalWeightWriteAOB: //"DDDA.exe"+580C7:
db F3 0F 11 AB 4C 02 00 00
//Alt: movss [ebx+0000024C],xmm5
unregistersymbol(totalWeightWriteAOB)
dealloc(newmem4)
totalWeightReadOnShopEnterAOB: //"DDDA.exe"+2DEB29:
db F3 0F 10 84 11 C4 03 00 00
//Alt: movss xmm0,[ecx+edx+000003C4]
unregistersymbol(totalWeightReadOnShopEnterAOB)
dealloc(newmem5)
totalWeightReadOnBuyEndAOB: //"DDDA.exe"+2E4457:
db F3 0F 10 84 10 C4 03 00 00
//Alt: movss xmm0,[eax+edx+000003C4]
unregistersymbol(totalWeightReadOnBuyEndAOB)
dealloc(newmem6)
totalWeightReadonEquipFromStorageAOB: //"DDDA.exe"+77B579:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadonEquipFromStorageAOB)
dealloc(newmem7)
totalWeightReadOnPickUpAOB: //"DDDA.exe"+77B3F9:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadOnPickUpAOB)

///

unregistersymbol(bIgnoreWeight)
unregistersymbol(pTotalWeight)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>569</ID>
              <Description>"Total Weight Mod .3"</Description>
              <LastState Activated="0"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(totalWeightReadAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 8B C6)
registersymbol(totalWeightReadAOB)
aobscanmodule(totalWeightReadInventoryAOB,DDDA.exe,F3 0F 10 84 0A C4 03 00 00 EB 03)
registersymbol(totalWeightReadInventoryAOB)
aobscanmodule(totalWeightWriteAOB,DDDA.exe,F3 0F 11 AB 4C 02 00 00 3B 6B 08)
registersymbol(totalWeightWriteAOB)
aobscanmodule(totalWeightReadOnShopEnterAOB,DDDA.exe,F3 0F 10 84 11 C4 03 00 00)
registersymbol(totalWeightReadOnShopEnterAOB)
aobscanmodule(totalWeightReadOnBuyEndAOB,DDDA.exe,F3 0F 10 84 10 C4 03 00 00 F3)
registersymbol(totalWeightReadOnBuyEndAOB)
aobscanmodule(totalWeightReadonEquipFromStorageAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 F3 ** ** ** ** ** E8 ** ** ** ** F3 ** ** ** ** ** 0F 57 C9)
registersymbol(totalWeightReadonEquipFromStorageAOB)
aobscanmodule(totalWeightReadOnPickUpAOB,DDDA.exe,F3 0F 10 84 08 C4 03 00 00 EB 03 0F 57 C0 ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** 0F 2F C8 5E)
registersymbol(totalWeightReadOnPickUpAOB)

///

label(bIgnoreWeight)
registersymbol(bIgnoreWeight)
label(pTotalWeight)
registersymbol(pTotalWeight)

///

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
/*label(isparty)*/

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edx,[eax+ecx+3c0]
test edx,edx
js originalcode
cmp edx,4
jg originalcode
push eax
lea eax,[eax+ecx]
mov [pTotalWeight+edx*4],eax
pop eax
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
jmp exit

originalcode:
movss xmm0,[eax+ecx+000003C4]

exit:
jmp returnhere

///
bIgnoreWeight:
dd 0
pTotalWeight:
///

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push ebx
mov ebx,[edx+ecx+3c0]
test ebx,ebx
js originalcode2
cmp ebx,4
jg originalcode2
cmp byte ptr [bIgnoreWeight+ebx],0
je originalcode2
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+ebx],2
jne @f
movss [edx+ecx+3c4],xmm0
@@:
pop ebx
jmp exit2

originalcode2:
pop ebx
movss xmm0,[edx+ecx+000003C4]

exit2:
jmp returnhere2

///

alloc(newmem3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,[ebx+248]
test edi,edi
js originalcode3
cmp edi,4
jg originalcode3

@@:
cmp byte ptr [bIgnoreWeight+edi],2
jne originalcode3
xorps xmm5,xmm5

originalcode3:
movss [ebx+0000024C],xmm5

exit3:
jmp returnhere3

///

alloc(newmem4,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
mov eax,[ecx+edx+3c0]
test eax,eax
js originalcode4
cmp eax,4
jg originalcode4

@@:
cmp byte ptr [bIgnoreWeight+eax],0
je originalcode4
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+eax],2
jne @f
movss [ecx+edx+3c4],xmm0
@@:
pop eax
jmp exit4

originalcode4:
pop eax
movss xmm0,[ecx+edx+000003C4]

exit4:
jmp returnhere4

///

alloc(newmem5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

newmem5: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
mov ecx,[eax+edx+3c0]
test ecx,ecx
js originalcode5
cmp ecx,4
jg originalcode5

@@:
cmp byte ptr [bIgnoreWeight+ecx],0
je originalcode5
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+ecx],2
jne @f
movss [eax+edx+3c4],xmm0
@@:
pop ecx
jmp exit5

originalcode5:
pop ecx
movss xmm0,[eax+edx+000003C4]

exit5:
jmp returnhere5

///

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
push edx
mov edx,[eax+ecx+3c0]
test edx,edx
js originalcode6
cmp edx,4
jg originalcode6

@@:
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode6
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
pop edx
jmp exit6

originalcode6:
pop edx
movss xmm0,[eax+ecx+000003C4]

exit6:
jmp returnhere6

///

alloc(newmem7,2048)
label(returnhere7)
label(originalcode7)
label(exit7)

newmem7: //this is allocated memory, you have read,write,execute access
//place your code here
push edx
mov edx,[eax+ecx+3c0]
test edx,edx
js originalcode7
cmp edx,4
jg originalcode7

@@:
cmp byte ptr [bIgnoreWeight+edx],0
je originalcode7
xorps xmm0,xmm0
cmp byte ptr [bIgnoreWeight+edx],2
jne @f
movss [eax+ecx+3c4],xmm0
@@:
pop edx
jmp exit7

originalcode7:
pop edx
movss xmm0,[eax+ecx+000003C4]

exit7:
jmp returnhere7

///

totalWeightReadAOB: //"DDDA.exe"+77B350:
jmp newmem
nop
nop
nop
nop
returnhere:

totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
jmp newmem2
nop
nop
nop
nop
returnhere2:

totalWeightWriteAOB: //"DDDA.exe"+580C7:
jmp newmem3
nop
nop
nop
returnhere3:

totalWeightReadOnShopEnterAOB: //"DDDA.exe"+2DEB29:
jmp newmem4
nop
nop
nop
nop
returnhere4:

totalWeightReadOnBuyEndAOB: //"DDDA.exe"+2E4457:
jmp newmem5
nop
nop
nop
nop
returnhere5:

totalWeightReadonEquipFromStorageAOB: //"DDDA.exe"+77B579:
jmp newmem6
nop
nop
nop
nop
returnhere6:

totalWeightReadOnPickUpAOB: //"DDDA.exe"+77B3F9:
jmp newmem7
nop
nop
nop
nop
returnhere7:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
totalWeightReadAOB: //"DDDA.exe"+77B350:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadAOB)
dealloc(newmem2)
totalWeightReadInventoryAOB: //"DDDA.exe"+77B3BA:
db F3 0F 10 84 0A C4 03 00 00
//Alt: movss xmm0,[edx+ecx+000003C4]
unregistersymbol(totalWeightReadInventoryAOB)
dealloc(newmem3)
totalWeightWriteAOB: //"DDDA.exe"+580C7:
db F3 0F 11 AB 4C 02 00 00
//Alt: movss [ebx+0000024C],xmm5
unregistersymbol(totalWeightWriteAOB)
dealloc(newmem4)
totalWeightReadOnShopEnterAOB: //"DDDA.exe"+2DEB29:
db F3 0F 10 84 11 C4 03 00 00
//Alt: movss xmm0,[ecx+edx+000003C4]
unregistersymbol(totalWeightReadOnShopEnterAOB)
dealloc(newmem5)
totalWeightReadOnBuyEndAOB: //"DDDA.exe"+2E4457:
db F3 0F 10 84 10 C4 03 00 00
//Alt: movss xmm0,[eax+edx+000003C4]
unregistersymbol(totalWeightReadOnBuyEndAOB)
dealloc(newmem6)
totalWeightReadonEquipFromStorageAOB: //"DDDA.exe"+77B579:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadonEquipFromStorageAOB)
dealloc(newmem7)
totalWeightReadOnPickUpAOB: //"DDDA.exe"+77B3F9:
db F3 0F 10 84 08 C4 03 00 00
//Alt: movss xmm0,[eax+ecx+000003C4]
unregistersymbol(totalWeightReadOnPickUpAOB)

///

unregistersymbol(bIgnoreWeight)
unregistersymbol(pTotalWeight)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>highlightedItemNameReadCall</Name>
      <Address> 00DDB2A0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedItemIDReadAOB</Name>
      <Address> 0045955D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedItemStringReadAOB</Name>
      <Address> 006690F1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedEquipmentStringReadAOB</Name>
      <Address> 006485C2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>highlightedItemWeightAOB</Name>
      <Address> 0045958A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHighlightedItem</Name>
      <Address>2BFB001B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pSomeBase2</Name>
      <Address>2BFB001F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHighlightedItemName</Name>
      <Address>2BFB081C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHighlightedItemWeight</Name>
      <Address>2BFB1810</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
