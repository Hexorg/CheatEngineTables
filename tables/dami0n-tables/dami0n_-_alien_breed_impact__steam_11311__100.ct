<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>44</ID>
      <Description>"Right click HERE -&gt; change script for info"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
Here's a nifty table for Team 17's "Alien Breed: Impact" as
sold on Steam (tested with and made for Steam Build 11311).

It includes two god mode scripts (which I honestly haven't tested
by doing a full playthrough but they seem to work; I've tried
three different savegames), one script for unlimited loaded ammo
and another one for unlimited items (it will set the remaining
number of that item to 20 when used).

I've tried adding pointers for different ammo types, but
they all seemed to only last for one level (or just the
section of it), so I scrapped the idea of adding any
pointer values and went just for the scripts.

Yes, yes, I still know about the table extras, but leaving info
like this is my thing. Thanks for reading &amp; enjoy - CyberD3m0n!
}

[ENABLE]
[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"AOB-stuff:"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>008000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>22</ID>
          <Description>"True god mode"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,AlienBreed-Impact.exe,29 03 8B 1B 8B 4C 24 14) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(npc)
label(player)

newmem:

code:
  cmp [ebx+0108],(float)1200
  jne npc
  cmp [ebx+0108],(float)1200
  je player

player:
  nop
  mov ebx,[ebx]
  mov ecx,[esp+14]
  jmp return

npc:
  sub [ebx],eax
  mov ebx,[ebx]
  mov ecx,[esp+14]
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 29 03 8B 1B 8B 4C 24 14

unregistersymbol(INJECT)
dealloc(newmem)

AlienBreed-Impact.exe+BE9E8:
  sub [ebx],eax
  mov ebx,[ebx]
  mov ecx,[esp+14]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"God mode (Unlimited Health)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,AlienBreed-Impact.exe,F3 0F 2A 80 D8 02 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+000002D8],64
  cvtsi2ss xmm0,[eax+000002D8]
  jmp return

INJECT:
  jmp code
  nop
  nop
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 2A 80 D8 02 00 00

unregistersymbol(INJECT)
dealloc(newmem)

AlienBreed-Impact.exe+2132FC:
  cvtsi2ss xmm0,[eax+000002D8]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Always have 200 Ammo loaded"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,AlienBreed-Impact.exe,8B 87 2C 03 00 00 03) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [edi+0000032C],C8
  mov eax,[edi+0000032C]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 87 2C 03 00 00

unregistersymbol(INJECT)
dealloc(newmem)

AlienBreed-Impact.exe+218249:
  mov eax,[edi+0000032C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Always have 20 items (works for everything)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(INJECT,AlienBreed-Impact.exe,8B 0F 8B 54 24 14 89 0A 83 07 FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [edi],14
  mov ecx,[edi]
  mov edx,[esp+14]
  jmp return

INJECT:
  jmp code
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 0F 8B 54 24 14

unregistersymbol(INJECT)
dealloc(newmem)

AlienBreed-Impact.exe+BEC2F:
  mov ecx,[edi]
  mov edx,[esp+14]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>INJECT</Name>
      <Address>004BE9E8</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
