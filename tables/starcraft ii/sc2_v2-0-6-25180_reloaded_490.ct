<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>27</ID>
      <Description>"[X] &lt;== Starcraft II - Heart of the Swarm v2.0.6 Script"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : StarCraft II - Heart of the Swarm
 Game Version  : 2.0.6.25180
 Game Sponsor  : RELOADED
 Proces Name   : SC2.exe
 Script Version: 1.0
 CE Version    : 6.2
 Release date  : 04-Apr-2013
 Author        : Recifense
 History:
 04-Apr-13: First Release
 Features:
 - Unlimited Resources
 - God Mode
 - Full Energy
 - Full Shield
===========================================
}

//=========================================
// Definitions
define(LUDO,"SC2.exe")
define(MRES,SC2.exe+00621560)
define(GDMD,SC2.exe+00722b84)
define(MSEL,SC2.exe+005baaf5)
define(MUEN,SC2.exe+00722f67)
define(MUSH,SC2.exe+00722dbb)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MRES,8b 4d fc 8b 31 3b 33 ?? ?? 56 8d 4d d4 e8 ?? ?? ?? ?? 8b cf)
assert(GDMD,89 be 10 01 00 00 3b fb ?? ?? 6a 01 6a 01 6a 00 51 8b c3 2b)
assert(MSEL,8b 9e 10 01 00 00 8d 45 e8 50 8b ce e8 ?? ?? ?? ?? 8b 00 2b)
assert(MUEN,89 86 18 01 00 00 3b c7 ?? ?? 6a 00 6a 05 6a 04 51 2b c7 57)
assert(MUSH,89 86 14 01 00 00 3b c7 ?? ?? 6a 01 6a 09 6a 08 51 8b d7 2b)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonPlayerRes)
label(_BackMPR)
label(_ExitMPR)
label(_GodMode)
label(_GodMD00)
label(_BackGMD)
label(_ExitGMD)
label(_MonSelUnit)
label(_BackMSU)
label(_ExitMSU)
label(_MonUnitEnergy)
label(_BackMUE)
label(_ExitMUE)
label(_MonUnitShield)
label(_BackMUS)
label(_ExitMUS)
label(pPlayer)
label(pUnit)
label(pSel)
label(iEnableMPR)
label(iEnableGMD)
label(iEnableQKK)
label(iEnableMUE)
label(iEnableMUS)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pPlayer)
registersymbol(pUnit)
registersymbol(pSel)
registersymbol(iEnableMPR)
registersymbol(iEnableGMD)
registersymbol(iEnableQKK)
registersymbol(iEnableMUE)
registersymbol(iEnableMUS)

//=========================================
MyCode:
//=========================================
_MonPlayerRes:
 mov [pPlayer],edi

 mov ecx,[ebp-04]               // Original code

 cmp dword ptr [iEnableMPR],0
 je _ExitMPR                    // Jump if feature is disabled

 cmp dword ptr [ecx],0
 je _ExitMPR

 cmp dword ptr [ecx],#5000
 jge _ExitMPR

 mov dword ptr [ecx],#5000

_ExitMPR:
 mov esi,[ecx]                  // Original code
 jmp _BackMPR                   // Back to main code

//=========================================
_GodMode:
 cmp byte ptr [esi+27],1        // Player's unit?
 jne _GodMD00                   // Jump if false

 mov [pUnit],esi

 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                    // Jump if feature is disabled

 xor edi,edi                    // Make damage = 0
 jmp _ExitGMD

_GodMD00:
 cmp dword ptr [iEnableQKK],0
 je _ExitGMD                    // Jump if feature is disabled

 mov edi,ecx

_ExitGMD:
 mov [esi+00000110],edi         // Original code
 jmp _BackGMD                   // Back to main code

//=========================================
_MonSelUnit:
 mov [pSel],esi

_ExitMSU:
 mov ebx,[esi+00000110]         // Original code
 jmp _BackMSU                   // Back to main code

//=========================================
_MonUnitEnergy:
 cmp byte ptr [esi+27],1        // Player's unit?
 jne _ExitMUE                   // Jump if false

 cmp dword ptr [iEnableMUE],0
 je _ExitMUE                    // Jump if feature is disabled

 mov eax,ecx                    // Get Maximum

_ExitMUE:
 mov [esi+00000118],eax         // Original code
 jmp _BackMUE                   // Back to main code

//=========================================
_MonUnitShield:
 cmp byte ptr [esi+27],1        // Player?‚Â´s unit?
 jne _ExitMUS                   // Jump if false

 cmp dword ptr [iEnableMUS],0
 je _ExitMUS                    // Jump if feature is disabled

 xor eax,eax                    // make used_shield = 0

_ExitMUS:
 mov [esi+00000114],eax         // Original code
 jmp _BackMUS                   // Back to main code

//=========================================
 db '================================&gt;'
 db 'CE6.2 Script by Recifense 040413'
//=========================================
// Variables
iEnableMPR:
 dd 0
iEnableGMD:
 dd 0
iEnableQKK:
 dd 0
iEnableMUE:
 dd 0
iEnableMUS:
 dd 0
pPlayer:
 dd 0
pUnit:
 dd 0
pSel:
 dd 0

//=========================================
// Hacking Points
MRES:
 jmp _MonPlayerRes
_BackMPR:

GDMD:
 jmp _GodMode
 nop
_BackGMD:

MSEL:
 jmp _MonSelUnit
 nop
_BackMSU:

MUEN:
 jmp _MonUnitEnergy
 nop
_BackMUE:

MUSH:
 jmp _MonUnitShield
 nop
_BackMUS:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MRES:
// mov ecx,[ebp-04]
// mov esi,[ecx]
 db 8b 4d fc 8b 31

GDMD:
//mov [esi+00000110],edi
 db 89 be 10 01 00 00

MSEL:
//mov ebx,[esi+00000110]
 db 8b 9e 10 01 00 00

MUEN:
//mov [esi+00000118],eax
 db 89 86 18 01 00 00

MUSH:
//mov [esi+00000114],eax
 db 89 86 14 01 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pPlayer)
unregistersymbol(pUnit)
unregistersymbol(pSel)
unregistersymbol(iEnableMPR)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableQKK)
unregistersymbol(iEnableMUE)
unregistersymbol(iEnableMUS)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>29</ID>
      <Description>"Population"</Description>
      <Color>80000008</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>SC2.exe+2579728</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Enable/Disable Minimum Resources =&gt; (1/0)"</Description>
      <Color>008000</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMPR</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>17</Key>
            <Key>36</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>17</Key>
            <Key>35</Key>
          </Keys>
          <Value>0</Value>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Enable/Disable God Mode =&gt; (1/0)"</Description>
      <Color>008000</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableGMD</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>17</Key>
            <Key>36</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>17</Key>
            <Key>35</Key>
          </Keys>
          <Value>0</Value>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Enable/Disable Full Energy =&gt; (1/0)"</Description>
      <Color>008000</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMUE</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>17</Key>
            <Key>36</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>17</Key>
            <Key>35</Key>
          </Keys>
          <Value>0</Value>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"Enable/Disable Full Shield =&gt; (1/0)"</Description>
      <Color>008000</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>iEnableMUS</Address>
      <Hotkeys>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>17</Key>
            <Key>36</Key>
          </Keys>
          <Value>1</Value>
          <ID>0</ID>
        </Hotkey>
        <Hotkey>
          <Action>Set Value</Action>
          <Keys>
            <Key>17</Key>
            <Key>35</Key>
          </Keys>
          <Value>0</Value>
          <ID>1</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Recifense SC2 script + selected unit conversion with left CTRL"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : StarCraft II - Heart of the Swarm
 Game Version  : 2.0.6.25180
 Game Sponsor  : RELOADED
 Proces Name   : SC2.exe
 Script Version: 1.0
 CE Version    : 6.2
 Release date  : 04-Apr-2013
 Author        : Recifense
 History:
 04-Apr-13: First Release
 Features:
 - Unlimited Resources
 - God Mode
 - Full Energy
 - Full Shield
===========================================
}

//=========================================
// Definitions
define(LUDO,"SC2.exe")
define(MRES,SC2.exe+00621560)
define(GDMD,SC2.exe+00722b84)
define(MSEL,SC2.exe+005baaf5)
define(MUEN,SC2.exe+00722f67)
define(MUSH,SC2.exe+00722dbb)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MRES,8b 4d fc 8b 31 3b 33 ?? ?? 56 8d 4d d4 e8 ?? ?? ?? ?? 8b cf)
assert(GDMD,89 be 10 01 00 00 3b fb ?? ?? 6a 01 6a 01 6a 00 51 8b c3 2b)
assert(MSEL,8b 9e 10 01 00 00 8d 45 e8 50 8b ce e8 ?? ?? ?? ?? 8b 00 2b)
assert(MUEN,89 86 18 01 00 00 3b c7 ?? ?? 6a 00 6a 05 6a 04 51 2b c7 57)
assert(MUSH,89 86 14 01 00 00 3b c7 ?? ?? 6a 01 6a 09 6a 08 51 8b d7 2b)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonPlayerRes)
label(_BackMPR)
label(_ExitMPR)
label(_GodMode)
label(_GodMD00)
label(_BackGMD)
label(_ExitGMD)
label(_MonSelUnit)
label(_BackMSU)
label(_ExitMSU)
label(_MonUnitEnergy)
label(_BackMUE)
label(_ExitMUE)
label(_MonUnitShield)
label(_BackMUS)
label(_ExitMUS)
label(pPlayer)
label(pUnit)
label(pSel)
label(iEnableMPR)
label(iEnableGMD)
label(iEnableQKK)
label(iEnableMUE)
label(iEnableMUS)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pPlayer)
registersymbol(pUnit)
registersymbol(pSel)
registersymbol(iEnableMPR)
registersymbol(iEnableGMD)
registersymbol(iEnableQKK)
registersymbol(iEnableMUE)
registersymbol(iEnableMUS)

//=========================================
MyCode:
//=========================================
_MonPlayerRes:
 mov [pPlayer],edi

 mov ecx,[ebp-04]               // Original code

 cmp dword ptr [iEnableMPR],0
 je _ExitMPR                    // Jump if feature is disabled

 cmp dword ptr [ecx],0
 je _ExitMPR

 cmp dword ptr [ecx],#5000
 jge _ExitMPR

 mov dword ptr [ecx],#5000

_ExitMPR:
 mov esi,[ecx]                  // Original code
 jmp _BackMPR                   // Back to main code

//=========================================
_GodMode:
 cmp byte ptr [esi+27],1        // Player's unit?
 jne _GodMD00                   // Jump if false

 mov [pUnit],esi

 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                    // Jump if feature is disabled

 xor edi,edi                    // Make damage = 0
 jmp _ExitGMD

_GodMD00:
 cmp dword ptr [iEnableQKK],0
 je _ExitGMD                    // Jump if feature is disabled

 mov edi,ecx

_ExitGMD:
 mov [esi+00000110],edi         // Original code
 jmp _BackGMD                   // Back to main code

//=========================================
_MonSelUnit:
 mov [pSel],esi
 pushfd
 pushad
 push A2
 call GetAsyncKeyState
 shr ax,#15
 cmp ax,1
 popad
 jne _ExitMSU
 mov byte ptr [esi+27],1

_ExitMSU:
 popfd
 mov ebx,[esi+00000110]         // Original code
 jmp _BackMSU                   // Back to main code

//=========================================
_MonUnitEnergy:
 cmp byte ptr [esi+27],1        // Player's unit?
 jne _ExitMUE                   // Jump if false

 cmp dword ptr [iEnableMUE],0
 je _ExitMUE                    // Jump if feature is disabled

 mov eax,ecx                    // Get Maximum

_ExitMUE:
 mov [esi+00000118],eax         // Original code
 jmp _BackMUE                   // Back to main code

//=========================================
_MonUnitShield:
 cmp byte ptr [esi+27],1        // Player?‚Â´s unit?
 jne _ExitMUS                   // Jump if false

 cmp dword ptr [iEnableMUS],0
 je _ExitMUS                    // Jump if feature is disabled

 xor eax,eax                    // make used_shield = 0

_ExitMUS:
 mov [esi+00000114],eax         // Original code
 jmp _BackMUS                   // Back to main code

//=========================================
 db '================================&gt;'
 db 'CE6.2 Script by Recifense 040413'
//=========================================
// Variables
iEnableMPR:
 dd 0
iEnableGMD:
 dd 0
iEnableQKK:
 dd 0
iEnableMUE:
 dd 0
iEnableMUS:
 dd 0
pPlayer:
 dd 0
pUnit:
 dd 0
pSel:
 dd 0

//=========================================
// Hacking Points
MRES:
 jmp _MonPlayerRes
_BackMPR:

GDMD:
 jmp _GodMode
 nop
_BackGMD:

MSEL:
 jmp _MonSelUnit
 nop
_BackMSU:

MUEN:
 jmp _MonUnitEnergy
 nop
_BackMUE:

MUSH:
 jmp _MonUnitShield
 nop
_BackMUS:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MRES:
// mov ecx,[ebp-04]
// mov esi,[ecx]
 db 8b 4d fc 8b 31

GDMD:
//mov [esi+00000110],edi
 db 89 be 10 01 00 00

MSEL:
//mov ebx,[esi+00000110]
 db 8b 9e 10 01 00 00

MUEN:
//mov [esi+00000118],eax
 db 89 86 18 01 00 00

MUSH:
//mov [esi+00000114],eax
 db 89 86 14 01 00 00

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pPlayer)
unregistersymbol(pUnit)
unregistersymbol(pSel)
unregistersymbol(iEnableMPR)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableQKK)
unregistersymbol(iEnableMUE)
unregistersymbol(iEnableMUS)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : StarCraft II - Heart of the Swarm
 Game Version  : 2.0.6.25180
 Game Sponsor  : RELOADED
 Proces Name   : SC2.exe
 Script Version: 1.0
 CE Version    : 6.2
 Release date  : 04-Apr-2013
 Author        : Recifense
 History:
 04-Apr-13: First Release
 Features:
 - Unlimited Resources [1]
 - God Mode            [2]
 - Full Energy         [3]
 - Full Shield         [4]
===========================================
[1] Minimum resource value is 5000;
[2] For player's Units/Buildings;
[3] For player's Units/Buildings;
[4] For player's Units/Buildings;
===========================================
HOTKEYS:
CTRL+Home = Enable  all cheats;
CTRL+End  = Disable all cheats;
===========================================
Cheers!
</Comments>
</CheatTable>
