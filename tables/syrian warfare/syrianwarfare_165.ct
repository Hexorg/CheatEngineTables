<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Command points / inf reinfortsments"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SyrianWarfare.exe
  Version: 1.0.0.2
  Date   : 2017-02-22
  Author :
}

[ENABLE]

aobscanmodule(aob_compoints,game.dll,29 97 A8 00 00 00)
aobscanmodule(aob_reinf,game.dll,FF 44 01 0C 8B 8F AC 00 00 00)
aobscanmodule(aob_reinf2,game.dll,01 74 01 0C 8B 8F AC 00 00 00)
aobscanmodule(aob_compoints2,game.dll,29 87 C4 00 00 00)
aobscanmodule(aob_reinf3,game.dll,FF 44 01 0C 8B 8F C8 00 00 00)
aobscanmodule(aob_reinf4,game.dll,01 5C 08 0C 8B 8F C8 00 00 00)
registersymbol(aob_compoints)
registersymbol(aob_compoints2)
registersymbol(aob_reinf)
registersymbol(aob_reinf2)
registersymbol(aob_reinf3)
registersymbol(aob_reinf4)
alloc(compoints,$1000)
label(reinf)
label(reinf2)
label(reinf3)
label(return)
label(return2)
label(return3)
label(return4)
label(return5)
label(return6)



compoints:
  //sub [edi+000000A8],edx
  add [edi+000000A8],edx
  jmp return

compoints2:
  //sub [edi+000000C4],eax
  add [edi+000000C4],eax
  jmp return4

reinf:
  //inc [ecx+eax+0C]
  mov [ecx+eax+0C], 1
  mov ecx,[edi+000000AC]
  jmp return2

reinf2:
  mov esi, 1
  add [ecx+eax+0C],esi
  mov ecx,[edi+000000AC]
  jmp return3

reinf3:
  //inc [ecx+eax+0C]
  mov [eax+ecx+0C], 1
  mov ecx,[edi+000000C8]
  jmp return5

reinf4:
  //add [eax+ecx+0C],ebx
  mov [eax+ecx+0C], 1
  mov ecx,[edi+000000C8]
  jmp return6

aob_compoints:
  jmp compoints
  nop
return:

aob_compoints2:
  jmp compoints2
  nop
return4:

aob_reinf:
  jmp reinf
  nop
  nop
  nop
  nop
  nop
return2:

aob_reinf2:
  jmp reinf2
  nop
  nop
  nop
  nop
  nop
return3:

aob_reinf3:
  jmp reinf3
  nop
  nop
  nop
  nop
  nop
return5:

aob_reinf4:
  jmp reinf4
  nop
  nop
  nop
  nop
  nop
return6:

[DISABLE]

aob_compoints:
  db 29 97 A8 00 00 00
aob_compoints2:
  db 29 87 C4 00 00 00
aob_reinf:
  db FF 44 01 0C 8B 8F AC 00 00 00
aob_reinf2:
  db 01 74 01 0C 8B 8F AC 00 00 00
aob_reinf3:
  db FF 44 01 0C 8B 8F C8 00 00 00
aob_reinf4:
  db 01 5C 08 0C 8B 8F C8 00 00 00

unregistersymbol(aob_compoints2)
unregistersymbol(aob_reinf)
unregistersymbol(aob_reinf2)
unregistersymbol(aob_reinf3)
unregistersymbol(aob_reinf4)
dealloc(aob_compoints)

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"InfAmmo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : SyrianWarfare.exe
  Version: 1.0.0.2
  Date   : 2017-02-22
  Author :

}

[ENABLE]

aobscanmodule(aob_infammo,logic.dll,29 11 83 C0 0C) // should be unique
registersymbol(aob_infammo)
alloc(infammo,128)

label(return)


infammo:
  xor edx, edx
  sub [ecx],edx
  add eax,0C
  jmp return

aob_infammo:
  jmp infammo
return:

[DISABLE]

aob_infammo:
  db 29 11 83 C0 0C

unregistersymbol(aob_infammo)
dealloc(infammo)

</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>aob_compoints</Name>
      <Address> 03A3EB7D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_compoints2</Name>
      <Address> 03A7217C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_reinf</Name>
      <Address> 03A3EAFC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_reinf2</Name>
      <Address> 03A3EB5F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_reinf3</Name>
      <Address> 03A72111</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>aob_reinf4</Name>
      <Address> 03A7214B</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
