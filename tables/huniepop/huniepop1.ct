<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"InstaWin"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(INJECT,89 87 A0 00 00 00 8B 47) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
globalalloc(base, 4)

newmem:

code:

  mov [base], edi
  push ebx
  mov ebx, [edi+A4]
  sub ebx, 1
  mov [edi+000000A0],ebx
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 87 A0 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)


{
// ORIGINAL CODE - INJECTION POINT: 04EA19C5

""+4EA19AA: 03 C1              -  add eax,ecx
""+4EA19AC: 8B 00              -  mov eax,[eax]
""+4EA19AE: FF E0              -  jmp eax
""+4EA19B0: 8B 87 A4 00 00 00  -  mov eax,[edi+000000A4]
""+4EA19B6: 83 EC 04           -  sub esp,04
""+4EA19B9: 50                 -  push eax
""+4EA19BA: 6A 00              -  push 00
""+4EA19BC: 56                 -  push esi
""+4EA19BD: E8 3E B4 F9 FF     -  call 04E3CE00
""+4EA19C2: 83 C4 10           -  add esp,10
// ---------- INJECTING HERE ----------
""+4EA19C5: 89 87 A0 00 00 00  -  mov [edi+000000A0],eax
// ---------- DONE INJECTING  ----------
""+4EA19CB: 8B 47 64           -  mov eax,[edi+64]
""+4EA19CE: 83 EC 08           -  sub esp,08
""+4EA19D1: 6A 00              -  push 00
""+4EA19D3: 50                 -  push eax
""+4EA19D4: E8 C7 7D F9 FF     -  call 04E397A0
""+4EA19D9: 83 C4 10           -  add esp,10
""+4EA19DC: 0F B6 45 14        -  movzx eax,byte ptr [ebp+14]
""+4EA19E0: 85 C0              -  test eax,eax
""+4EA19E2: 0F 84 D7 00 00 00  -  je 04EA1ABF
""+4EA19E8: D9 45 EC           -  fld dword ptr [ebp-14]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"custom-point"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>base</Address>
          <Offsets>
            <Offset>A0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"infinite-money"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : HuniePop.exe
  Version: 
  Date   : 2017-10-31
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 46 68 3B 45 F4) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
globalalloc(money, 4)

newmem:

code:
  mov [money], esi
  mov [esi+68],(int)999999
  cmp eax,[ebp-0C]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 46 68 3B 45 F4

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 04EDB324

""+4EDB305: 75 02              -  jne 04EDB309
""+4EDB307: 33 FF              -  xor edi,edi
""+4EDB309: 8B 46 68           -  mov eax,[esi+68]
""+4EDB30C: 89 45 F4           -  mov [ebp-0C],eax
""+4EDB30F: 83 EC 04           -  sub esp,04
""+4EDB312: 68 9F 86 01 00     -  push 0001869F
""+4EDB317: 6A 00              -  push 00
""+4EDB319: FF 75 0C           -  push [ebp+0C]
""+4EDB31C: E8 DF 1A FB FF     -  call 04E8CE00
""+4EDB321: 83 C4 10           -  add esp,10
// ---------- INJECTING HERE ----------
""+4EDB324: 89 46 68           -  mov [esi+68],eax
""+4EDB327: 3B 45 F4           -  cmp eax,[ebp-0C]
// ---------- DONE INJECTING  ----------
""+4EDB32A: 0F 84 83 00 00 00  -  je 04EDB3B3
""+4EDB330: 85 FF              -  test edi,edi
""+4EDB332: 0F 84 44 00 00 00  -  je 04EDB37C
""+4EDB338: E8 43 B1 FA FF     -  call 04E86480
""+4EDB33D: 8B 80 84 00 00 00  -  mov eax,[eax+00000084]
""+4EDB343: 8B 80 8C 00 00 00  -  mov eax,[eax+0000008C]
""+4EDB349: 8B 4E 68           -  mov ecx,[esi+68]
""+4EDB34C: D9 05 78 13 C3 50  -  fld dword ptr [50C31378]
""+4EDB352: D9 05 80 13 C3 50  -  fld dword ptr [50C31380]
""+4EDB358: 83 EC 0C           -  sub esp,0C
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"money-pointer"</Description>
          <LastState Value="999999" RealAddress="50820658"/>
          <VariableType>4 Bytes</VariableType>
          <Address>money</Address>
          <Offsets>
            <Offset>68</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"she never gets hungry"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : HuniePop.exe
  Version: 
  Date   : 2017-10-31
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 7E 3C 8D 65 F8) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
globalalloc(Hunger, 4)

newmem:

code:
  mov [Hunger], esi
  mov [esi+3C],(int)12
  lea esp,[ebp-08]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 7E 3C 8D 65 F8

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 04EDCA26

""+4EDCA13: 74 11                 -  je 04EDCA26
""+4EDCA15: 8B 46 30              -  mov eax,[esi+30]
""+4EDCA18: 83 EC 08              -  sub esp,08
""+4EDCA1B: 56                    -  push esi
""+4EDCA1C: 50                    -  push eax
""+4EDCA1D: 90                    -  nop 
""+4EDCA1E: 90                    -  nop 
""+4EDCA1F: 90                    -  nop 
""+4EDCA20: FF 50 0C              -  call dword ptr [eax+0C]
""+4EDCA23: 83 C4 10              -  add esp,10
// ---------- INJECTING HERE ----------
""+4EDCA26: 89 7E 3C              -  mov [esi+3C],edi
""+4EDCA29: 8D 65 F8              -  lea esp,[ebp-08]
// ---------- DONE INJECTING  ----------
""+4EDCA2C: 5E                    -  pop esi
""+4EDCA2D: 5F                    -  pop edi
""+4EDCA2E: C9                    -  leave 
""+4EDCA2F: C3                    -  ret 
""+4EDCA30: 55                    -  push ebp
""+4EDCA31: 8B EC                 -  mov ebp,esp
""+4EDCA33: 57                    -  push edi
""+4EDCA34: 56                    -  push esi
""+4EDCA35: 8B 75 08              -  mov esi,[ebp+08]
""+4EDCA38: 8B 7D 0C              -  mov edi,[ebp+0C]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Hunger-pointer"</Description>
          <LastState Value="12" RealAddress="0DA421BC"/>
          <VariableType>4 Bytes</VariableType>
          <Address>Hunger</Address>
          <Offsets>
            <Offset>3C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"infinite munie"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : HuniePop.exe
  Version: 
  Date   : 2017-10-31
  Author : admin

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 46 6C 3B 45 F4) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
globalalloc(munie, 4)

newmem:

code:
mov [munie], esi
  mov [esi+6C],(int)99999
  cmp eax,[ebp-0C]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 46 6C 3B 45 F4

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 04EDB48C

""+4EDB46D: 75 02              -  jne 04EDB471
""+4EDB46F: 33 FF              -  xor edi,edi
""+4EDB471: 8B 46 6C           -  mov eax,[esi+6C]
""+4EDB474: 89 45 F4           -  mov [ebp-0C],eax
""+4EDB477: 83 EC 04           -  sub esp,04
""+4EDB47A: 68 9F 86 01 00     -  push 0001869F
""+4EDB47F: 6A 00              -  push 00
""+4EDB481: FF 75 0C           -  push [ebp+0C]
""+4EDB484: E8 77 19 FB FF     -  call 04E8CE00
""+4EDB489: 83 C4 10           -  add esp,10
// ---------- INJECTING HERE ----------
""+4EDB48C: 89 46 6C           -  mov [esi+6C],eax
""+4EDB48F: 3B 45 F4           -  cmp eax,[ebp-0C]
// ---------- DONE INJECTING  ----------
""+4EDB492: 0F 84 83 00 00 00  -  je 04EDB51B
""+4EDB498: 85 FF              -  test edi,edi
""+4EDB49A: 0F 84 44 00 00 00  -  je 04EDB4E4
""+4EDB4A0: E8 DB AF FA FF     -  call 04E86480
""+4EDB4A5: 8B 80 84 00 00 00  -  mov eax,[eax+00000084]
""+4EDB4AB: 8B 80 90 00 00 00  -  mov eax,[eax+00000090]
""+4EDB4B1: 8B 4E 6C           -  mov ecx,[esi+6C]
""+4EDB4B4: D9 05 00 14 C3 50  -  fld dword ptr [50C31400]
""+4EDB4BA: D9 05 08 14 C3 50  -  fld dword ptr [50C31408]
""+4EDB4C0: 83 EC 0C           -  sub esp,0C
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"munie-pointer"</Description>
          <LastState Value="99999" RealAddress="5082065C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>munie</Address>
          <Offsets>
            <Offset>6C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>base</Name>
      <Address>03BD0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>money</Name>
      <Address>02FE0010</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>Hunger</Name>
      <Address>02FE0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>munie</Name>
      <Address>02FE0020</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
