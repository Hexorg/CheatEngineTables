<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="10">
  <CheatEntries>
    <CheatEntry>
      <Description>"NUMERIC7   POWER"</Description>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,256)
label(returnhere)
label(originalcode)

aobscan(code,F3 0F 10 40 04 0F 2F 05 xx xx xx xx 57 76 xx 8B 0D)
code:
jmp newmem
returnhere:

newmem:
cmp word ptr [eax],DF64
jne originalcode
mov [eax+4],3F800000
originalcode:
movss xmm0,[eax+04]
jmp returnhere

[DISABLE]
aobscan(code,E9 xx xx xx xx 0F 2F 05 xx xx xx xx 57 76 xx 8B 0D)
code:
movss xmm0,[eax+04]

dealloc(newmem)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>103</Key>
          </Keys>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <Description>"NUMERIC8   STAMINA"</Description>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,256)
label(returnhere)
label(originalcode)

aobscan(code,F3 0F 10 41 54 f3 0f 10 89 04 02 00 00)
code:
jmp newmem
returnhere:

newmem:
cmp word ptr [ecx],DF64
jne originalcode
mov [ecx+54],3F800000
originalcode:
movss xmm0,[ecx+54]
jmp returnhere

[DISABLE]
aobscan(code,E9 xx xx xx xx f3 0f 10 89 04 02 00 00)
code:
movss xmm0,[ecx+54]

dealloc(newmem)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>104</Key>
          </Keys>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <Description>"NUMERIC9   RADIATION"</Description>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,256)
label(returnhere)
label(originalcode)

aobscan(code,F3 0F 10 46 58 0F 2F 05 xx xx xx xx 76 xx F3)
code:
jmp newmem
returnhere:

newmem:
cmp word ptr [esi],DF64
jne originalcode
mov dword ptr [esi+58],0
originalcode:
movss xmm0,[esi+58]
jmp returnhere

[DISABLE]
aobscan(code,E9 xx xx xx xx 0F 2F 05 xx xx xx xx 76 xx F3)
code:
movss xmm0,[esi+58]

dealloc(newmem)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>105</Key>
          </Keys>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <Description>"NUMERIC4   FREEZE WEIGHT AT 55KG"</Description>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,256)
label(returnhere)
label(exit)

aobscan(code,D9 44 24 08 F3 0F 11 47 54 5F 5E 59 C3 CC)
code+4:
jmp newmem
returnhere:

newmem:
movss [edi+54],xmm0
cmp word ptr [edi],2D38
jne exit
mov [edi+54],(float)55.0
exit:
jmp returnhere

[DISABLE]
aobscan(code,D9 44 24 08 E9 xx xx xx xx 5F 5E 59 C3 CC)
code+4:
movss [edi+54],xmm0

dealloc(newmem)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>100</Key>
          </Keys>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <Description>"NUMERIC5   HUNGER"</Description>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,256)
label(returnhere)
label(originalcode)

aobscan(code,F3 0F 10 86 78 01 00 00 F3 0F 10 8E 88 01 00 00 0F 2F C1)
code:
jmp newmem
nop
nop
nop
returnhere:

newmem:
cmp word ptr [esi],DF64
jne originalcode
mov dword ptr [esi+00000178],3F800000
originalcode:
movss xmm0,[esi+00000178]
jmp returnhere

[DISABLE]
aobscan(code,E9 xx xx xx xx 90 90 90 F3 0F 10 8E 88 01 00 00 0F 2F C1)
code:
movss xmm0,[esi+00000178]

dealloc(newmem)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>101</Key>
          </Keys>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <Description>"NUMERIC6   Autorepair Weapon"</Description>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(cave,64)
label(returnhere)

aobscan(code,F3 0F 10 80 AC 00 00 00 F3 0F 10 88 30 06 00 00)
code:
jmp cave
nop
nop
nop
returnhere:

cave:
mov dword ptr [eax+ac],(float)0001.0
movss xmm0,[eax+000000ac]
jmp returnhere

[DISABLE]
aobscan(code,E9 xx xx xx xx 90 90 90 F3 0F 10 88 30 06 00 00)
code:
movss xmm0,[eax+000000ac]

dealloc(cave)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>102</Key>
          </Keys>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <Description>"NUMERIC2   Infinite Ammo"</Description>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,64) //2kb should be enough
label(returnhere)
label(storeeax)

aobscan(code,66 81 83 0A 03 00 00 FF FF 8B 9B 8C 00 00 00)
code:
jmp newmem
nop
nop
nop
nop
returnhere:

newmem:
mov [storeeax],eax
mov ax,[ebx+00000308]
mov [ebx+0000030a],ax
mov eax,[storeeax]
add word ptr [ebx+0000030a],0000
jmp returnhere

storeeax:
dd 00 
 
[DISABLE]
aobscan(code,E9 xx xx xx xx 90 90 90 90 8B 9B 8C 00 00 00)
code:
add word ptr [ebx+0000030a],ffff

dealloc(newmem)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>98</Key>
          </Keys>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <Description>"Z                    Zoom"</Description>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(cave,64)
label(returnhere)

aobscan(code,F3 0F 11 5E 34 F3 0F 10 5E 38 F3 0F 59 DA F3 0F 59 56 3C)
code:
jmp cave
returnhere:

cave:
movss [esi+34],xmm3
mov dword ptr [esi+34],(float)0001.0
jmp returnhere

[DISABLE]
aobscan(code,E9 xx xx xx xx F3 0F 10 5E 38 F3 0F 59 DA F3 0F 59 56 3C)
code:
movss [esi+34],xmm3

dealloc(cave)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>90</Key>
          </Keys>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <Description>"NUMERIC*    Money Hack"</Description>
      <Color>008000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
fullaccess(xrEngine.exe+1f,5)
alloc(newmem,64)
label(exit)
label(moneyvalueset)
label(done)
label(returnhere)

newmem:
cmp byte ptr [done],00
jne short exit

push ebx

mov ebx,[xrEngine.exe+1f]       //money user value 
cmp ebx,0
jne short moneyvalueset
mov ebx,(int)150000 //set default money value

moneyvalueset:
mov [edx+24],ebx
mov [done],01
pop ebx

exit:
mov eax,[edx+24]
push eax
lea ecx,[esp+10]
jmp returnhere

xrEngine.exe+23:
done:
db 00

aobscan(code, 8B 42 24 50 8D 4C 24 10)
code:
jmp newmem
nop
nop
nop
returnhere:

[DISABLE]
xrEngine.exe+23:
db 00
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>106</Key>
          </Keys>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <Description>"Enter money amount here(value column):"</Description>
      <Color>008000</Color>
      <VariableType>4 Bytes</VariableType>
      <Address>xrEngine.exe+1f</Address>
    </CheatEntry>
    <CheatEntry>
      <Description>"NUMERIC+   Must be on for cheats below"</Description>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//Please don't steal, ty
//Please don't steal, ty
//Please don't steal, ty
fullaccess(xrengine.exe+0019,6)

alloc(newmem,2048)
label(returnhere)
label(originalcode)

label(job)
label(cont1)
label(cont2)
label(cont3)
label(cont4)
label(cont5)

label(address)

label(physicsID)
registersymbol(physicsID)

label(savetele)
registersymbol(savetele)

label(loadtele)
registersymbol(loadtele)

label(levitate)
registersymbol(levitate)

label(superjump)
registersymbol(superjump)

label(sphere)
registersymbol(sphere)

label(gravity)
registersymbol(gravity)

label(coord)
label(usedslot)
label(tmp)



//Please don't steal, ty
//Please don't steal, ty
//Please don't steal, ty



alloc(physicsIDsearch,64)
label(physicsIDsearchExit)
label(physicsIDsearchRet)

aobscan(code,3B 57 0C 0F 94 C2 84 D2 88 16 75 xx 8B 49 54)
code:
jmp physicsIDsearch
nop
physicsIDsearchRet:

physicsIDsearch:
cmp edi,0
je physicsIDsearchExit

push edi
mov edi,[edi+0c]
mov [physicsID],edi      //get Player physicsID
pop edi

physicsIDsearchExit:
cmp edx,[edi+0c]
sete dl
jmp physicsIDsearchRet


//Please don't steal, ty
//Please don't steal, ty
//Please don't steal, ty


aobscan(code2,F3 0F 10 81 F0 00 00 00 83 EC 44 F3 0F 59 C5)
code2:
//ODE.dll+277AE:
jmp newmem
nop
nop
nop
returnhere:

newmem:
pushad
pushfd

cmp dword ptr [physicsID],0
je originalcode

mov edx,ecx

mov eax,[physicsID]              //Player physicsID
cmp dword ptr [ecx+1c],eax       //check
jne short job                    //not Player = jump

mov [address],ecx                //store address

job:
cmp [address],0
je originalcode

mov ecx,[address]                //restore address

mov eax,[physicsID]              //Player physicsID
cmp dword ptr [ecx+1c],eax       //check
jne originalcode

//ALL GOOD
cmp byte ptr [loadtele],0           //Player want to load position?(0-no,   1,2,3- yes and slot number)
je cont1
xor ebx,ebx                         // calculating slot
mov bl,[loadtele]                   // ..
mov byte ptr [loadtele],0           // reset steering variable - loadtele
sub bl,1                            // ..
cmp byte ptr [usedslot+ebx],0       // check that player, saved position in first place (on choosen slot)
je cont1                            // nah, he didn't

mov eax,[coord+ebx*4]               //
mov [ecx+98],eax                    // restoring position values
mov eax,[coord+0c+ebx*4]            //
mov [ecx+9c],eax                    //
mov eax,[coord+18+ebx*4]            //
mov [ecx+0a0],eax                   //


cont1:
cmp byte ptr [savetele],0           //Player want to save position?(0-no,   1,2,3- yes and slot number)
je cont2
xor ebx,ebx                         // calculating slot
mov bl,[savetele]                   // ..
mov byte ptr [savetele],0           // reset steering variable - savetele
sub bl,1                            // ..
mov byte ptr [usedslot+ebx],1       // player is saving position on choosen slot

mov eax,[ecx+98]                    //
mov [coord+ebx*4],eax               // saving position values
mov eax,[ecx+9c]                    //
mov [coord+0c+ebx*4],eax            //
mov eax,[ecx+0a0]                   //
mov [coord+18+ebx*4],eax            //

cont2:
cmp byte ptr [superjump],0   // player wants to superjump?
je cont3                     // nah
fld [ecx+0ec]
fabs
fistp [tmp]
cmp [tmp],(int)0003          // check speed is greater than 3,0 (direction - up or down)
jle cont3
mov [ecx+0ec],(float)0020.0  // set speed = 20,0 (direction - up)
mov byte ptr [superjump],0

cont3:
cmp byte ptr [levitate],0    // player wants to levitate?
je cont4                     // nah
mov [ecx+0ec],(float)0000.5  // yes, set speed = 0,5 (direction - up)
jmp short cont5              // if levitate is ON, skip low gravity part

cont4:
cmp byte ptr [gravity],0     //low gravity?
je cont5                     //nah
fld [ecx+0ec]
fistp [tmp]
cmp [tmp],(int)-0006         //check speed is lower than -06.0
jg cont5                     //skip, player don't fall so fast            
mov [ecx+0ec],(float)-0006.0 //set speed = -06.0 (direction - down)

cont5:
cmp byte ptr [sphere],0
je originalcode

cmp ecx,edx
je originalcode

cmp esi,00000000
jne originalcode

cmp edi,00000001
jne originalcode

//----- Calculating distance
fld [ecx+98]
fld [edx+98]
fsubp
fld st(0)
fmulp

fld [ecx+9c]
fld [edx+9c]
fsubp
fld st(0)
fmulp

faddp

fld [ecx+a0]
fld [edx+a0]
fsubp
fld st(0)
fmulp

faddp
fsqrt

fstp [tmp]
//----- end of Calculating distance

cmp [tmp],(float)0010.0       //check distance, if greater ignore 'sphere' for object
jg originalcode

//mov [edx+0e8],00000000
//mov [edx+0ec],(float)0002.0
//mov [edx+0f0],00000000

fld [edx+098]
fld [ecx+098]
fsubp
fstp [edx+0e8]

fld [edx+0a0]
fld [ecx+0a0]
fsubp
fstp [edx+0f0]

originalcode:
popfd
popad
movss xmm0,[ecx+000000f0]
jmp returnhere

address:
dd 00
physicsID:
dd 00

//physics
//saved positions
coord:
dd 00 //X1
dd 00 //X2
dd 00 //X3
dd 00 //Z1
dd 00 //Z2
dd 00 //Z3
dd 00 //Y1
dd 00 //Y2
dd 00 //Y3
//used slot
usedslot:
db 00 00 00
//distance
tmp:
dd 00

//steering variable:
xrengine.exe+0019:
savetele:
db 00
loadtele:
db 00
levitate:
db 00
superjump:
db 00
sphere:
db 00
gravity:
db 00

//Please don't steal, ty
//Please don't steal, ty
//Please don't steal, ty

[DISABLE]
aobscan(code2,E9 xx xx xx xx 90 90 90 83 EC 44 F3 0F 59 C5)
code2:
//ODE.dll+277AE:
movss xmm0,[ecx+000000f0]

aobscan(code,E9 xx xx xx xx 90 84 D2 88 16 75 xx 8B 49 54)
code:
cmp edx,[edi+0c]
sete dl

xrengine.exe+0019:
dd 00             //4 bytes
db 00             //1byte
db 00             //1byte              

dealloc(newmem)
dealloc(physicsIDsearch)

//Please don't steal, ty
//Please don't steal, ty
//Please don't steal, ty

unregistersymbol(savetele)
unregistersymbol(loadtele)
unregistersymbol(levitate)
unregistersymbol(superjump)
unregistersymbol(sphere)
unregistersymbol(gravity)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>107</Key>
          </Keys>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <Description>"ALT               Super Jump"</Description>
          <Color>FF0000</Color>
          <VariableType>Byte</VariableType>
          <Address>superjump</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>18</Key>
              </Keys>
              <Value>1</Value>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <Description>"NUMERIC1,PGUP,HOME   Teleport Save Position"</Description>
          <Color>FF0000</Color>
          <VariableType>Byte</VariableType>
          <Address>savetele</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>97</Key>
              </Keys>
              <Value>1</Value>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>33</Key>
              </Keys>
              <Value>2</Value>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>36</Key>
              </Keys>
              <Value>3</Value>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <Description>"NUMERIC0,PGDN,END      Teleport Load Position"</Description>
          <Color>FF0000</Color>
          <VariableType>Byte</VariableType>
          <Address>loadtele</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>96</Key>
              </Keys>
              <Value>1</Value>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>34</Key>
              </Keys>
              <Value>2</Value>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>35</Key>
              </Keys>
              <Value>3</Value>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <Description>"C                    Levitate"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
levitate:
db 01

[DISABLE]
levitate:
db 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>67</Key>
              </Keys>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <Description>"NUMERIC3   Gravity"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
gravity:
db 01 
 
[DISABLE]
gravity:
db 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>99</Key>
              </Keys>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <Description>"INSERT        The Sphere"</Description>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
sphere:
db 01

[DISABLE]
sphere:
db 00
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>45</Key>
              </Keys>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>money</Name>
      <Address>0040001F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>physicsID</Name>
      <Address>01580224</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>savetele</Name>
      <Address>00400019</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>loadtele</Name>
      <Address>0040001A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>levitate</Name>
      <Address>0040001B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>superjump</Name>
      <Address>0040001C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sphere</Name>
      <Address>0040001D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gravity</Name>
      <Address>0040001E</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>This trainer was made by                                      
    mgr.inz.Player (aka YourEnemy)                                
                                                                  
                                                                  
    Trainer Options:                                              
                                                                  
                                                                  
    NUMPAD 7  - Inf Health                                        
    NUMPAD 8  - Inf Stamina (running'n'jumping)                   
    NUMPAD 9  - Freeze Radiation at zero level                    
    NUMPAD 4  - Freeze Weight at 55kg,                            
                 then go to inventory or drop/pick up smthing     
    NUMPAD 5  - No Hunger                                         
    NUMPAD 6  - Auto-repair wielded weapon                        
    NUMPAD 2  - Infinite Ammo                                     
    Z                      - Zoom                                              
    NUMPAD *  - Set Money - before hitting *,                     
                 exit from "trade" or "inventory" menu            
                 Hit NUM* two times, to be sure                   
                                                                  
    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/                  
    NUMPAD +  - Must be turn on for cheats below                  
    /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\                  
                                                                  
    C         - Levitate, it's possible to move in air            
                 (needs practice)                                 
    Left ALT  - Super Jump (keep pressed while jump               
                 to jump higher), after jump you can use "C".     
                 Set Alternative key for jump under game          
                 controls settings to left ALT to achieve         
                 permanent super jump (using ALT key)             
                 RECOMMENDED: Inf Health Enabled :D               
                                                                  
    NUMPAD 3  - Gravity, Low Gravity for Degtyarev                
                                                                  
    Insert    - "The Sphere" supposed to make all characters      
                 (friendly or not), monsters and other moving     
                 objects (ex. Burer uses telekinesis to grab      
                 and throw objects at you), grenades float        
                 away. There is additional trainer with           
                 modified "Sphere". Disable before you            
                 use grenade. If object (weapon) hangs in         
                 the air, you can bring it back by shooting it.   
                                                                  
                                                                  
    NUMPAD 1  - Teleport: save position in slot1                  
    NUMPAD 0  - Teleport: load position in slot1                    
                 Notes:                                           
                 1) Of course, You must save pos. before load     
                 2) after "loading position" move or jump         
                                                                  
                                                                  
    Money value changeable by user.                               
                                                                  
    Trainer in action (link to youtube):                          
    http://tnij.org/cop_trainer_action                            
                                                                  
                                                                  
   Run both CoP and trainer as admin                              
                                                                  
   I got confirmation that under win7 xrengine.exe sometimes is   
   launched two times.                                            
                                                                  
   Suggestion win7:                                               
     1) Launch game                                               
     2) Alt-Tab, launch Task Manager. If you have two             
        xrengine.exe process, kill process which use              
        less memory (repeat this step if you have more xrengine.exe process).                                              
     3) Now you can launch my trainer. Activate some cheats.      
     4) Load a save.                                              
                                                                  
   Suggestion other OS's:                                         
     1) Launch trainer                                            
     2) Launch game                                               
     3) Activate some cheats (Inf health etc.)                    
     4) Load a save.                                              
                                                                  
   Why "3" before "4"? Because, 1 in 100 cases I got "Bug Trap    
   crash" just after enabling "NUMPAD +". So you save some time   
   by doing "3" before "4".                                       
                                                                  
                                                                  
                                                                  
                                                                  
    Trainer made with Cheat Engine                                
    www.cheatengine.org                                           
                                                                  
</Comments>
  <LuaScript>aalist=getAutoAttachList()
stringlist_add(aalist,"xrengine.exe")
</LuaScript>
</CheatTable>
