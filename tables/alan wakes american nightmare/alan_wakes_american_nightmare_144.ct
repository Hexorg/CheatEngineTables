<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>31</ID>
      <Description>"Undead (press Enter to refill Health)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(pHealth,4)
alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)
label(doNormal1)
alloc(vHealth,4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHealth],esi

pushad
push 0D      //key Enter
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov dword ptr [esi+0C],(float)2

originalcode:
fld dword ptr [esi+0C]
fld dword ptr [ebp-10]

exit:
jmp returnhere

newmem1: //this is allocated memory, you have read,write,execute access
//place your code here
pushfd
cmp [pHealth],esi
jne originalcode1

fstp dword ptr [vHealth]
cmp [vHealth],(float)0.0
jg doNormal1
mov dword ptr [esi+0C],(float)0.01
fld dword ptr [esi+0C]
jmp originalcode1

doNormal1:
fld dword ptr [vHealth]

originalcode1:
popfd
fst dword ptr [esi+0C]
fld dword ptr [esi+20]

exit1:
jmp returnhere1

///
pHealth:
dd 0
vHealth:
dd 0
///

"alan_wakes_american_nightmare.exe"+1C4F5A:
jmp newmem
nop
returnhere:

"alan_wakes_american_nightmare.exe"+1C4C48:
jmp newmem1
nop
returnhere1:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"alan_wakes_american_nightmare.exe"+1C4F5A:
db D9 46 0C D9 45 F0
//Alt: fld dword ptr [esi+0C]
//Alt: fld dword ptr [ebp-10]
dealloc(pHealth)
dealloc(newmem1)
"alan_wakes_american_nightmare.exe"+1C4C48:
db D9 56 0C D9 46 20
//Alt: fst dword ptr [esi+0C]
//Alt: fld dword ptr [esi+20]
dealloc(vHealth)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Health"</Description>
          <Color>80000008</Color>
          <VariableType>Float</VariableType>
          <Address>pHealth</Address>
          <Offsets>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"Inf. Sprint"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fst dword ptr [esi+7C]
pushfd
cmp dword ptr [esi+7C],(float)0.3
jge originalcode
mov dword ptr [esi+7C],(float)0.3

originalcode:
popfd
//fst dword ptr [esi+7C]
fld1 

exit:
jmp returnhere

"alan_wakes_american_nightmare.exe"+1BFE92:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"alan_wakes_american_nightmare.exe"+1BFE92:
db D9 56 7C D9 E8
//Alt: fst dword ptr [esi+7C]
//Alt: fld1
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Inf. Ammo"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
alloc(newmem1,2048) //2kb should be enough
label(returnhere1)
label(originalcode1)
label(exit1)
alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
globalalloc(pAmmoPouch,4)
globalalloc(mAmmoPouch,4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
and eax,edx

cmp eax,00000001
jge originalcode
mov eax,00000001

originalcode:
//and eax,edx
mov [ecx],eax
mov eax,[esi]

exit:
jmp returnhere

newmem1: //this is allocated memory, you have read,write,execute access
//place your code here
lea ecx,[esi+eax*4+20]
mov [pAmmoPouch],ecx
mov ecx,[esi+eax*4+20]
dec ecx
cmp ecx,[mAmmoPouch]
jge originalcode1
mov ecx,[esi+eax*4+20]

originalcode1:
//mov ecx,[esi+eax*4+20]
//dec ecx

exit1:
jmp returnhere1

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
lea ecx,[esi+eax*4+0C]
mov [pAmmoPouch],ecx
mov eax,[ecx]
dec eax
cmp eax,[mAmmoPouch]
jge originalcode2
mov eax,[ecx]

originalcode2:
//lea ecx,[esi+eax*4+0C]
//mov eax,[ecx]
//dec eax

exit2:
jmp returnhere2

///
pAmmoPouch:
dd 0
mAmmoPouch:
dd #10
///

"alan_wakes_american_nightmare.exe"+279280:
jmp newmem
nop
returnhere:

"alan_wakes_american_nightmare.exe"+279290:
jmp newmem1
returnhere1:

"alan_wakes_american_nightmare.exe"+299991:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"alan_wakes_american_nightmare.exe"+279280:
db 23 C2 89 01 8B 06
//Alt: and eax,edx
//Alt: mov [ecx],eax
//Alt: mov eax,[esi]
dealloc(newmem1)
"alan_wakes_american_nightmare.exe"+279290:
db 8B 4C 86 20 49
//Alt: mov ecx,[esi+eax*4+20]
//Alt: dec ecx
dealloc(newmem2)
"alan_wakes_american_nightmare.exe"+299991:
db 8D 4C 86 0C 8B 01 48
//Alt: lea ecx,[esi+eax*4+0C]
//Alt: mov eax,[ecx]
//Alt: dec eax
dealloc(pAmmoPouch)
dealloc(mAmmoPouch)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Ammo Pouch"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pAmmoPouch</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"min Ammo Pouch"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>mAmmoPouch</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"Inf. Flare / Flashbang"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
aobscan(flareSub_AOB,0F 98 C2 4A 23 C2 89 01 8B 06)
label(flareSubJMP)
registersymbol(flareSubJMP)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp eax,0
jg originalcode
mov eax,1

originalcode:
mov [ecx],eax
mov eax,[esi]
cmp dword ptr [esi+eax*4+0C],00

exit:
jmp returnhere

flareSub_AOB+6:                     //"alan_wakes_american_nightmare.exe"+2999A3:
flareSubJMP:
jmp newmem
nop
nop
nop
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
flareSubJMP:                        //"alan_wakes_american_nightmare.exe"+2999A3:
db 89 01 8B 06 83 7C 86 0C 00
//Alt: mov [ecx],eax
//Alt: mov eax,[esi]
//Alt: cmp dword ptr [esi+eax*4+0C],00
unregistersymbol(flareSubJMP)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"Inf. Flashlight"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(doNormal)
alloc(vLightFuel,4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
fstp dword ptr [vLightFuel]
cmp [vLightFuel],(float)0.15
jge doNormal
fld dword ptr [ecx+04]
jmp originalcode

doNormal:
fld dword ptr [vLightFuel]

originalcode:
fstp dword ptr [ecx+04]
mov edx,[esi]

exit:
jmp returnhere

///
vLightFuel:
dd 0
///

"alan_wakes_american_nightmare.exe"+1CA985:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"alan_wakes_american_nightmare.exe"+1CA985:
fstp dword ptr [ecx+04]
mov edx,[esi]
//Alt: db D9 59 04 8B 16
dealloc(vLightFuel)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Inf. Batteries"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
globalalloc(pBattery,4)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[esi]

mov [pBattery],eax

cmp dword ptr [eax+10],01
jg originalcode
mov dword ptr [eax+10],02

originalcode:
//mov eax,[esi]
cmp dword ptr [eax+10],00

exit:
jmp returnhere

///
pBattery:
dd 0
///

"alan_wakes_american_nightmare.exe"+1CB0F8:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"alan_wakes_american_nightmare.exe"+1CB0F8:
db 8B 06 83 78 10 00
//Alt: mov eax,[esi]
//Alt: cmp dword ptr [eax+10],00
dealloc(pBattery)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Battery"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>pBattery</Address>
          <Offsets>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>HP +- 1 Code :fst dword ptr [esi+0C]</Description>
      <Address>005C4C48</Address>
      <ModuleName>alan_wakes_american_nightmare.exe</ModuleName>
      <ModuleNameOffset>1C4C48</ModuleNameOffset>
      <Before>
        <Byte>0C</Byte>
        <Byte>00</Byte>
        <Byte>D9</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>56</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>46</Byte>
        <Byte>20</Byte>
        <Byte>DE</Byte>
        <Byte>C3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>HP read 1 Code :fld dword ptr [ecx+0C]</Description>
      <Address>005C4A4B</Address>
      <ModuleName>alan_wakes_american_nightmare.exe</ModuleName>
      <ModuleNameOffset>1C4A4B</ModuleNameOffset>
      <Before>
        <Byte>87</Byte>
        <Byte>00</Byte>
        <Byte>D9</Byte>
        <Byte>5D</Byte>
        <Byte>FC</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>41</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>45</Byte>
        <Byte>FC</Byte>
        <Byte>DE</Byte>
        <Byte>D9</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>HP read 2 Code :fld dword ptr [ecx+0C]</Description>
      <Address>005C4940</Address>
      <ModuleName>alan_wakes_american_nightmare.exe</ModuleName>
      <ModuleNameOffset>1C4940</ModuleNameOffset>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>41</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>HP read 3 Code :fld dword ptr [esi+0C]</Description>
      <Address>005C4F5A</Address>
      <ModuleName>alan_wakes_american_nightmare.exe</ModuleName>
      <ModuleNameOffset>1C4F5A</ModuleNameOffset>
      <Before>
        <Byte>87</Byte>
        <Byte>00</Byte>
        <Byte>D9</Byte>
        <Byte>5D</Byte>
        <Byte>F0</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>D9</Byte>
        <Byte>45</Byte>
        <Byte>F0</Byte>
        <Byte>DE</Byte>
        <Byte>D9</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>pAmmoPouch</Name>
      <Address>059D0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mAmmoPouch</Name>
      <Address>059E0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>059A0000</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>flareSubJMP</Name>
      <Address>006999A3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pBattery</Name>
      <Address>06810000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
