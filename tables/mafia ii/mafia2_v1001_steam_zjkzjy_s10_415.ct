<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>91</ID>
      <Description>"[X] &lt;== Prepare Environment for Cheating Script (ACTIVATE ME FIRST)"</Description>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Mafia II
 Game Version  : 1.0.0.1 (Steam)
 Game Sponsor  : zjkzjy (GIFT)
 Process Name  : mafia2.exe
 Script Version: 1.0
 CE Version    : 6.3
 Release date  : 07-Sep-2013
 Author        : Recifense
 History:
 09-Sep-13: Release for version 1.00-6858
 Features:
 - Prepare environment for bypassing CRC-Check
===========================================
}

//=========================================
// Definitions
define(CODESIZE,0x00b14800)  //00e75b55
define(LUDO,mafia2.exe)

//=========================================
[ENABLE]
//=========================================
alloc(CodeCopy,CODESIZE,LUDO)
alloc(_IniMem,4096,LUDO)
//=========================================
label(iFlagOK)
label(pCodeCopy)
//=========================================
registersymbol(CodeCopy)
registersymbol(_IniMem)
registersymbol(iFlagOK)
registersymbol(pCodeCopy)
//=========================================
_IniMem:
 pushad
 pushfd

 mov ecx,CODESIZE
 shr ecx,2
 mov esi,LUDO
 mov edi,CodeCopy
 cld
 rep movsd

 mov dword ptr [iFlagOK],55555555

 popfd
 popad
 ret
//=========================================
 db '===========================&gt;'
 db 'CE6.3 Script by Recifense 091513'
//=========================================
// Variables
pCodeCopy:
 dd CodeCopy
iFlagOK:
 dd 0

//=========================================
CREATETHREAD(_IniMem)
//=========================================
// Script for Restoring Original Codes
[DISABLE]
//=========================================
unregistersymbol(CodeCopy)
unregistersymbol(_IniMem)
unregistersymbol(iFlagOK)
unregistersymbol(pCodeCopy)
//=========================================
dealloc(CodeCopy)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>96</ID>
      <Description>"[X] &lt;== Mafia II v1001 Steam Script 1.0"</Description>
      <Options moHideChildren="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Mafia II
 Game Version  : 1.0.0.1 (Steam)
 Game Sponsor  : zjkzjy (GIFT)
 Proces Name   : mafia2.exe
 Script Version: 1.0
 CE Version    : 6.3
 Release date  : 15-Sep-2013
 Author        : Recifense
 History:
 15-Sep-13: First Release
 Features:
 - God Mode
 - Unlimited Ammo
 - Minimum Money
 - CRC Protection Bypass
===========================================
}

//=========================================
// Definitions
define(LUDO,"mafia2.exe")
define(LUDOEND,mafia2.exe+00b00000)

define(MHPR,mafia2.exe+007302c4)
define(GDMD,mafia2.exe+00590bca)
define(MOAM,mafia2.exe+005a46e3)
define(MOMO,mafia2.exe+00523db0)
define(CHKP,mafia2.exe+00a73208)
define(CHKQ,mafia2.exe+00a75b58)
define(CHKR,mafia2.exe+00a57b3e)
define(CHKS,mafia2.exe+00a57aae)
define(CHKU,mafia2.exe+00a57bce)
define(CHKV,mafia2.exe+00a58177)
define(CHKX,mafia2.exe+00a57ee7)
define(CHKY,mafia2.exe+00a57c57)

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MHPR,f3 0f 10 86 d0 00 00 00 ?? ?? f3 0f 10 05 ?? ?? ?? ?? d9 84 24)
assert(GDMD,d9 85 d0 00 00 00 8b ce d8 64 24 48 d9 9d d0 00 00 00 8b 16 8b)
assert(MOAM,8b 54 24 04 01 50 0c 8b 01 8b 50 08 ff d2 c2 04 00 ?? ?? ?? ??)
assert(MOMO,8b 49 08 8b 41 10 8b 51 14 c3 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ??)
assert(CHKP,8b 4d 10 8b 7d 08 8b c1 8b d1 03 c6 3b fe ?? ?? 3b f8 0f 82 ??)
assert(CHKQ,8b 4d 10 8b 7d 08 8b c1 8b d1 03 c6 3b fe ?? ?? 3b f8 0f 82 ??)
assert(CHKR,55 8b 6c 24 10 0f b6 0c 2a 8b 06 33 c8 81 e1 ff 00 00 00 c1 e8)
assert(CHKS,55 8b 6c 24 10 0f b6 0c 2a 8b 06 33 c8 81 e1 ff 00 00 00 c1 e8)
assert(CHKU,55 8b 6c 24 10 0f b6 0c 2a 8b 06 33 c8 81 e1 ff 00 00 00 c1 e8)
assert(CHKV,57 8b 7c 24 14 8d 64 24 00 83 fd 07 ?? ?? ff 24 ad ?? ?? ?? ??)
assert(CHKX,57 8b 7c 24 14 8d 64 24 00 83 fd 07 ?? ?? ff 24 ad ?? ?? ?? ??)
assert(CHKY,57 8b 7c 24 14 8d 64 24 00 83 fd 07 ?? ?? ff 24 ad ?? ?? ?? ??)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)
label(_MonAmmo)
label(_BackMAM)
label(_ExitMAM)
label(_MonMoney)
label(_BackMMO)
label(_ExitMMO)
label(_HackPoint)
label(_BackHPT)
label(_ExitHPT)
label(_HackPointQ)
label(_BackHPQ)
label(_ExitHPQ)
label(_HackPointR)
label(_BackHPR)
label(_ExitHPR)
label(_HackPointS)
label(_BackHPS)
label(_ExitHPS)
label(_HackPointU)
label(_BackHPU)
label(_ExitHPU)
label(_HackPointV)
label(_BackHPV)
label(_ExitHPV)
label(_HackPointX)
label(_BackHPX)
label(_ExitHPX)
label(_HackPointY)
label(_BackHPY)
label(_ExitHPY)
label(pPlayer)
label(pMoney)
label(iMinMoney)
label(iEnableGMD)
label(iEnableMAM)
label(iEnableMMO)
label(iEnableCRC)
label(iCounter)
label(iCounterQ)
label(iCounterR)
label(iCounterS)
label(iCounterU)
label(iCounterV)
label(iCounterX)
label(iCounterY)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(pPlayer)
registersymbol(pMoney)
registersymbol(iMinMoney)
registersymbol(iEnableGMD)
registersymbol(iEnableMAM)
registersymbol(iEnableMMO)
registersymbol(iEnableCRC)
registersymbol(iCounter)
registersymbol(iCounterQ)
registersymbol(iCounterR)
registersymbol(iCounterS)
registersymbol(iCounterU)
registersymbol(iCounterV)
registersymbol(iCounterX)
registersymbol(iCounterY)

//=========================================
MyCode:
//=========================================
_MonHumanPlayer:
 mov [pPlayer],esi

_ExitMHP:
 movss xmm0,[esi+000000D0]         // Original code (rds HP)
 jmp _BackMHP                      // Back to main code

//=========================================
_GodMode:
 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 cmp ebp,[pPlayer]
 jne _ExitGMD

 mov dword ptr [esp+48],00         // value2decrease = 0

_ExitGMD:
 fld dword ptr [ebp+000000D0]      // Original code (rds HP)
 jmp _BackGMD                      // Back to main code

//=========================================
_MonAmmo:
 mov edx,[esp+04]
 test edx,edx
 jns _ExitMAM

 cmp dword ptr [iEnableMAM],0
 je _ExitMAM                       // Jump if feature is disabled

 mov edx,[esp+00000088]
 cmp edx,[pPlayer]
 jne _ExitMAM

 xor edx,edx
 mov [esp+04],edx                  // value2decrease = 0

_ExitMAM:
 mov edx,[esp+04]                  // Original code
 add [eax+0C],edx                  // Original code
 jmp _BackMAM                      // Back to main code

//=========================================
_MonMoney:
 mov ecx,[ecx+08]                  // Original code (pMoney)

 mov [pMoney],ecx

 mov eax,[ecx+14]                  // Get High 4bytes
 test eax,eax
 jnz _ExitMMO

 cmp dword ptr [iEnableMMO],0
 je _ExitMMO                       // Jump if feature is disabled

 mov eax,[iMinMoney]
 cmp eax,[ecx+10]
 jle _ExitMMO

 mov [ecx+10],eax

_ExitMMO:
 mov eax,[ecx+10]                  // Original code (Get Money)
 jmp _BackMMO                      // Back to main code

//=========================================
// Cheating CRC check
_HackPoint:
 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPT

 cmp dword ptr [iEnableCRC],0
 je _ExitHPT                       // Jump if feature is disabled

 cmp esi,LUDO
 jl _ExitHPT

 cmp esi,LUDOEND
 jge _ExitHPT

 mov edi,LUDO
 sub esi,edi
 mov edi,CodeCopy
 add esi,edi

// mov [ebp+0c],esi

 inc dword ptr [iCounter]

_ExitHPT:
 mov ecx,[ebp+10]                  // Original code
 mov edi,[ebp+08]                  // Original code
 jmp _BackHPT                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointQ:
 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPQ

 cmp dword ptr [iEnableCRC],0
 je _ExitHPQ                       // Jump if feature is disabled

 cmp esi,LUDO
 jl _ExitHPQ

 cmp esi,LUDOEND
 jge _ExitHPQ

 mov edi,LUDO
 sub esi,edi
 mov edi,CodeCopy
 add esi,edi

// mov [ebp+0c],esi

 inc dword ptr [iCounterQ]

_ExitHPQ:
 mov ecx,[ebp+10]                  // Original code
 mov edi,[ebp+08]                  // Original code
 jmp _BackHPQ                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointR:
 push ebp                          // Original code
 mov ebp,[esp+10]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPR

 cmp dword ptr [iEnableCRC],0
 je _ExitHPR                       // Jump if feature is disabled

 cmp ebp,LUDO
 jl _ExitHPR

 cmp ebp,LUDOEND
 jge _ExitHPR

 mov ecx,LUDO
 sub ebp,ecx
 mov ecx,CodeCopy
 add ebp,ecx

 inc dword ptr [iCounterR]

_ExitHPR:
 jmp _BackHPR                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointS:
 push ebp                          // Original code
 mov ebp,[esp+10]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPS

 cmp dword ptr [iEnableCRC],0
 je _ExitHPS                       // Jump if feature is disabled

 cmp ebp,LUDO
 jl _ExitHPS

 cmp ebp,LUDOEND
 jge _ExitHPS

 mov ecx,LUDO
 sub ebp,ecx
 mov ecx,CodeCopy
 add ebp,ecx

 inc dword ptr [iCounterS]

_ExitHPS:
 jmp _BackHPS                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointU:
 push ebp                          // Original code
 mov ebp,[esp+10]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPU

 cmp dword ptr [iEnableCRC],0
 je _ExitHPU                       // Jump if feature is disabled

 cmp ebp,LUDO
 jl _ExitHPU

 cmp ebp,LUDOEND
 jge _ExitHPU

 mov ecx,LUDO
 sub ebp,ecx
 mov ecx,CodeCopy
 add ebp,ecx

 inc dword ptr [iCounterU]

_ExitHPU:
 jmp _BackHPU                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointV:
 push edi                          // Original code
 mov edi,[esp+14]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPV

 cmp dword ptr [iEnableCRC],0
 je _ExitHPV                       // Jump if feature is disabled

 cmp edi,LUDO
 jl _ExitHPV

 cmp edi,LUDOEND
 jge _ExitHPV

 push ecx
 mov ecx,LUDO
 sub edi,ecx
 mov ecx,CodeCopy
 add edi,ecx
 pop ecx

 inc dword ptr [iCounterV]

_ExitHPV:
 jmp _BackHPV                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointX:
 push edi                          // Original code
 mov edi,[esp+14]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPX

 cmp dword ptr [iEnableCRC],0
 je _ExitHPX                       // Jump if feature is disabled

 cmp edi,LUDO
 jl _ExitHPX

 cmp edi,LUDOEND
 jge _ExitHPX

 push ecx
 mov ecx,LUDO
 sub edi,ecx
 mov ecx,CodeCopy
 add edi,ecx
 pop ecx

 inc dword ptr [iCounterX]

_ExitHPX:
 jmp _BackHPX                      // Back to main code (keeping the template)

//=========================================
// Cheating CRC check
_HackPointY:
 push edi                          // Original code
 mov edi,[esp+14]                  // Original code

 cmp dword ptr [iFlagOK],55555555
 jne _ExitHPY

 cmp dword ptr [iEnableCRC],0
 je _ExitHPY                       // Jump if feature is disabled

 cmp edi,LUDO
 jl _ExitHPY

 cmp edi,LUDOEND
 jge _ExitHPY

 push ecx
 mov ecx,LUDO
 sub edi,ecx
 mov ecx,CodeCopy
 add edi,ecx
 pop ecx

 inc dword ptr [iCounterY]

_ExitHPY:
 jmp _BackHPY                      // Back to main code (keeping the template)

//=========================================
 db '========================================&gt;'
 db 'CE6.3 Script by Recifense 091513'
//=========================================
// Variables
iEnableGMD:
 dd 0
iEnableMAM:
 dd 0
iEnableMMO:
 dd 0
iEnableCRC:
 dd 1
iMinMoney:
 dd #630000                 // 6.300,00
pMoney:
 dd 0
pPlayer:
 dd MyCode
iCounter:
 dd 0
iCounterQ:
 dd 0
iCounterR:
 dd 0
iCounterS:
 dd 0
iCounterU:
 dd 0
iCounterV:
 dd 0
iCounterX:
 dd 0
iCounterY:
 dd 0

//=========================================
// Hacking Points
MHPR:
 jmp _MonHumanPlayer
 nop
 nop
 nop
_BackMHP:

GDMD:
 jmp _GodMode
 nop
_BackGMD:

MOAM:
 jmp _MonAmmo
 nop
 nop
_BackMAM:

MOMO:
 jmp _MonMoney
 nop
_BackMMO:

CHKP:
 jmp _HackPoint
 nop
_BackHPT:

CHKQ:
 jmp _HackPointQ
 nop
_BackHPQ:

CHKR:
 jmp _HackPointR
_BackHPR:

CHKS:
 jmp _HackPointS
_BackHPS:

CHKU:
 jmp _HackPointU
_BackHPU:

CHKV:
 jmp _HackPointV
_BackHPV:

CHKX:
 jmp _HackPointX
_BackHPX:

CHKY:
 jmp _HackPointY
_BackHPY:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MHPR:
// movss xmm0,[esi+000000D0]
 db f3 0f 10 86 d0 00 00 00

GDMD:
// fld dword ptr [ebp+000000D0]
 db d9 85 d0 00 00 00

MOAM:
// mov edx,[esp+04]
// add [eax+0C],edx
 db 8b 54 24 04 01 50 0c

MOMO:
// mov ecx,[ecx+08]
// mov eax,[ecx+10]
 db 8b 49 08 8b 41 10

CHKP:
// mov ecx,[ebp+10]
// mov edi,[ebp+08]
 db 8b 4d 10 8b 7d 08

CHKQ:
// mov ecx,[ebp+10]
// mov edi,[ebp+08]
 db 8b 4d 10 8b 7d 08

CHKR:
// push ebp
// mov ebp,[esp+10]
 db 55 8b 6c 24 10

CHKS:
// push ebp
// mov ebp,[esp+10]
 db 55 8b 6c 24 10

CHKU:
// push ebp
// mov ebp,[esp+10]
 db 55 8b 6c 24 10

CHKV:
// push edi
// mov edi,[esp+14]
 db 57 8b 7c 24 14

CHKX:
// push edi
// mov edi,[esp+14]
 db 57 8b 7c 24 14

CHKY:
// push edi
// mov edi,[esp+14]
 db 57 8b 7c 24 14

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(pPlayer)
unregistersymbol(pMoney)
unregistersymbol(iMinMoney)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMAM)
unregistersymbol(iEnableMMO)
unregistersymbol(iEnableCRC)
unregistersymbol(iCounter)
unregistersymbol(iCounterQ)
unregistersymbol(iCounterR)
unregistersymbol(iCounterS)
unregistersymbol(iCounterU)
unregistersymbol(iCounterV)
unregistersymbol(iCounterX)
unregistersymbol(iCounterY)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Enable/Disable God Mode =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Enable/Disable Unlimited Ammo (No Reload) =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMAM</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Enable/Disable Minimum Money =&gt; (1/0)"</Description>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMMO</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>27</ID>
              <Description>"Minimum Money Value =&gt;"</Description>
              <Color>0080FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>iMinMoney</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Mafia II
 Game Version  : 1.0.0.1 (Steam)
 Game Sponsor  : zjkzjy (GIFT)
 Proces Name   : mafia2.exe
 Script Version: 1.0
 CE Version    : 6.3
 Release date  : 15-Sep-2013
 Author        : Recifense
 History:
 15-Sep-13: First Release
 Features:
 - God Mode               [1]
 - Unlimited Ammo         [2]
 - Minimum Money          [3]
 - CRC Protection Bypass (8 check points)
===========================================
[1] That's it;
[2] That's it;
[3] Go to MAP to make it work;
===========================================
HOTKYES:
CTRL+Home = Enable  all cheats;
CTRL+End  = Disable all cheats;
===========================================
Cheers!
</Comments>
</CheatTable>
