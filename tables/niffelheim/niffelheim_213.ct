<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="20">
  <CheatEntries>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Establish Pointers (Only in Open World)"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
registersymbol(MyChar)
alloc(myChar,4)

aobscan(HP,D9 40 70 DD 5D F8 F2 0F 10 45 F8 F2 0F 2C C0)
alloc(newmem,$1000)

label(code)
label(return)
label(test1)

newmem:

code:
  cmp [myChar], 0
  jne test1
  mov [myChar], eax
  fld dword ptr [eax+70]
  fstp qword ptr [ebp-08]
  jmp return

test1:
  fld dword ptr [eax+70]
  fstp qword ptr [ebp-08]
  jmp return

HP:
  jmp code
  nop
return:
registersymbol(HP)

[DISABLE]
unregistersymbol(MyChar)
dealloc(myChar,4)


HP:
  db D9 40 70 DD 5D F8

unregistersymbol(HP)
dealloc(newmem)
</AssemblerScript>
      <CheatEntries Activated="1">
        <CheatEntry>
          <ID>8</ID>
          <Description>"Current HP"</Description>
          <VariableType>Float</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>70</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Weapon Min DMG"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>14</Offset>
            <Offset>10</Offset>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Weapon Max DMG"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>C</Offset>
            <Offset>14</Offset>
            <Offset>10</Offset>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Ranged Min DMG"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>mychar</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>14</Offset>
            <Offset>18</Offset>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Ranged Max DMG"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>mychar</Address>
          <Offsets>
            <Offset>C</Offset>
            <Offset>14</Offset>
            <Offset>18</Offset>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Arrow Min DMG"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>mychar</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>14</Offset>
            <Offset>30</Offset>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Arrow Max DMG"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>mychar</Address>
          <Offsets>
            <Offset>C</Offset>
            <Offset>14</Offset>
            <Offset>30</Offset>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Arrow count"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>80</Offset>
            <Offset>C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"smith"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>48</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"carpenter"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>50</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"alchemist"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>58</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"woodcutter"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>60</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"cook"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>68</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"warrior"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>70</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"trader"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>78</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"hunter"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>80</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"farmer"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>88</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"miner"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>myChar</Address>
          <Offsets>
            <Offset>40</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Inventory Management"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Niffelheim.exe
  Version: 
  Date   : 2016-05-23
  Author : kh

  This script does blah blah blah
}

[ENABLE]

aobscan(InventoryManagement,8B 49 0C 89 48 78) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
label(AddItems)

newmem:

code:
  cmp [ecx+0c],0
  jg AddItems
  mov ecx,[ecx+0c]
  mov [eax+78],ecx
  jmp return

AddItems:
  mov [ecx+0C], (int)49
  mov ecx,[ecx+0c]
  mov [eax+78],ecx
  jmp return

InventoryManagement:
  jmp code
  nop
return:
registersymbol(InventoryManagement)

[DISABLE]

InventoryManagement:
  db 8B 49 0C 89 48 78

unregistersymbol(InventoryManagement)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 11BA928C

11BA926E: 8B 45 E0           -  mov eax,[ebp-20]
11BA9271: 0F 86 A5 00 00 00  -  jbe 11BA931C
11BA9277: 0F AF C8           -  imul ecx,eax
11BA927A: 8B 45 E4           -  mov eax,[ebp-1C]
11BA927D: 03 C8              -  add ecx,eax
11BA927F: 8B 45 E8           -  mov eax,[ebp-18]
11BA9282: C1 E1 02           -  shl ecx,02
11BA9285: 03 CA              -  add ecx,edx
11BA9287: 83 C1 10           -  add ecx,10
11BA928A: 8B 09              -  mov ecx,[ecx]
// ---------- INJECTING HERE ----------
11BA928C: 8B 49 0C           -  mov ecx,[ecx+0C]
11BA928F: 89 48 78           -  mov [eax+78],ecx
// ---------- DONE INJECTING  ----------
11BA9292: 8B 47 14           -  mov eax,[edi+14]
11BA9295: 89 45 F0           -  mov [ebp-10],eax
11BA9298: 8B 40 08           -  mov eax,[eax+08]
11BA929B: 8B 50 04           -  mov edx,[eax+04]
11BA929E: 8B CE              -  mov ecx,esi
11BA92A0: 2B CA              -  sub ecx,edx
11BA92A2: 8B 10              -  mov edx,[eax]
11BA92A4: 3B D1              -  cmp edx,ecx
11BA92A6: 0F 86 6C 00 00 00  -  jbe 11BA9318
11BA92AC: 89 45 EC           -  mov [ebp-14],eax
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"All Items Stack to 99"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Niffelheim.exe
  Version: 
  Date   : 2016-05-23
  Author : kh

  This script does blah blah blah
}

[ENABLE]

aobscan(EnableStack99,8B 4B 18 3B C1 0F 8D) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebx+18], 63
  mov ecx,[ebx+18]
  cmp eax,ecx
  jmp return

EnableStack99:
  jmp code
return:
registersymbol(EnableStack99)

[DISABLE]

EnableStack99:
  db 8B 4B 18 3B C1

unregistersymbol(EnableStack99)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 11BB536C

11BB534D: 3B C2              -  cmp eax,edx
11BB534F: 0F 86 8B 05 00 00  -  jbe Ellada.Game.Gui:GITable:AddItem+740
11BB5355: 0F AF C1           -  imul eax,ecx
11BB5358: 8B 4D D8           -  mov ecx,[ebp-28]
11BB535B: 03 C2              -  add eax,edx
11BB535D: C1 E0 02           -  shl eax,02
11BB5360: 03 C1              -  add eax,ecx
11BB5362: 05 10 00 00 00     -  add eax,00000010
11BB5367: 8B 00              -  mov eax,[eax]
11BB5369: 8B 40 0C           -  mov eax,[eax+0C]
// ---------- INJECTING HERE ----------
11BB536C: 8B 4B 18           -  mov ecx,[ebx+18]
11BB536F: 3B C1              -  cmp eax,ecx
// ---------- DONE INJECTING  ----------
11BB5371: 0F 8D A5 01 00 00  -  jnl Ellada.Game.Gui:GITable:AddItem+37c
11BB5377: C6 45 F3 01        -  mov byte ptr [ebp-0D],01
11BB537B: 8B 43 08           -  mov eax,[ebx+08]
11BB537E: 89 45 D8           -  mov [ebp-28],eax
11BB5381: 8B 40 08           -  mov eax,[eax+08]
11BB5384: 8B 50 04           -  mov edx,[eax+04]
11BB5387: 8B 4D EC           -  mov ecx,[ebp-14]
11BB538A: 2B CA              -  sub ecx,edx
11BB538C: 8B 10              -  mov edx,[eax]
11BB538E: 3B D1              -  cmp edx,ecx
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov ecx,[ecx+0C]</Description>
      <Address>11BA928C</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>C1</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>09</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>49</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>78</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov edx,[edx+0C]</Description>
      <Address>11BF74A0</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>C2</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>12</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>52</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>04</Byte>
        <Byte>52</Byte>
        <Byte>51</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [eax+0C],00000000</Description>
      <Address>11BF0E3E</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
        <Byte>40</Byte>
        <Byte>0C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [edx+0C],eax</Description>
      <Address>11BB57A8</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>42</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>D8</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[eax+0C]</Description>
      <Address>11BB5369</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>4B</Byte>
        <Byte>18</Byte>
        <Byte>3B</Byte>
        <Byte>C1</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>InventoryManagement</Name>
      <Address> 046923F4</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>EnableStack99</Name>
      <Address> 0A379244</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>HP</Name>
      <Address> 04682719</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
