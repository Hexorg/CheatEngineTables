<?xml version="1.0"?>
<CheatTable CheatEngineTableVersion="10">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Conquest - Frontier Wars V1.05 Script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Conquest - Frontier Wars
 Game Version  : 1.05
 Script Version: 1.0
 CE Version    : 6.0
 God Mode and Unlimited Supply
 21-Feb-2011
 By Recifense
===========================================
}

[ENABLE]
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(conquest.exe+0e4e32,fe c1 88 4a 44)
assert(conquest.exe+13b2c2,66 8b 86 7e fd ff ff)
assert(conquest.exe+13d192,66 8b 86 7e fd ff ff)
assert(conquest.exe+13ebd2,66 8b 86 7e fd ff ff)
assert(conquest.exe+140852,66 8b 86 7e fd ff ff)
assert(conquest.exe+142812,66 8b 86 7e fd ff ff)
assert(conquest.exe+144122,66 8b 86 7e fd ff ff)
assert(conquest.exe+145a52,66 8b 86 7e fd ff ff)
assert(conquest.exe+13efc9,66 8b 86 7e fd ff ff)
assert(conquest.exe+0297c1,66 8b 46 82 8b c8)
assert(conquest.exe+0335c1,66 8b 46 82 8b c8)
assert(conquest.exe+08cd71,66 8b 46 82 8b c8)
assert(conquest.exe+099511,66 8b 46 82 8b c8)
assert(conquest.exe+0ae14c,66 8b 46 82 8b c8)
assert(conquest.exe+116511,66 8b 46 82 8b c8)
assert(conquest.exe+11c011,66 8b 46 82 8b c8)
assert(conquest.exe+134a41,66 8b 46 82 8b c8)
assert(conquest.exe+0338f0,66 8b 46 82 8b d0)
assert(conquest.exe+0adf00,66 8b 46 82 8b d0)
assert(conquest.exe+13a54a,66 8b 86 14 02 00 00)
assert(conquest.exe+14178a,66 8b 86 14 02 00 00)
assert(conquest.exe+133a85,66 8b 83 84 01 00 00)

//=========================================
alloc(MyCode,1024)
//=========================================
// Declaration section
label(_MonPlayer)
label(_BackMP)
label(_GodModeS0)
label(_BackGMS0)
label(_GodModeS1)
label(_BackGMS1)
label(_GodModeS2)
label(_BackGMS2)
label(_GodModeS3)
label(_BackGMS3)
label(_GodModeS4)
label(_BackGMS4)
label(_GodModeS5)
label(_BackGMS5)
label(_GodModeS6)
label(_BackGMS6)
label(_GodModeS7)
label(_BackGMS7)
label(_GodModeB0)
label(_BackGMB0)
label(_GodModeB1)
label(_BackGMB1)
label(_GodModeB2)
label(_BackGMB2)
label(_GodModeB3)
label(_BackGMB3)
label(_GodModeB4)
label(_BackGMB4)
label(_GodModeB5)
label(_BackGMB5)
label(_GodModeB6)
label(_BackGMB6)
label(_GodModeB7)
label(_BackGMB7)
label(_GodModeB8)
label(_BackGMB8)
label(_GodModeB9)
label(_BackGMB9)
label(_MonSupply)
label(_BackMS)
label(_ExitMS)
label(_MonSupply1)
label(_BackMS1)
label(_ExitMS1)
label(_MonSupplyT)
label(_BackMST)
label(_ExitMST)
label(_CheckShip)
label(_ExitCS)
label(_CheckBuilding)
label(_ExitCB)
label(pUnit)
label(iEnableGM)
label(iEnableMS)
label(iPlayerID)

registersymbol(MyCode)
registersymbol(pUnit)
registersymbol(iEnableGM)
registersymbol(iEnableMS)
registersymbol(iPlayerID)

//=========================================
MyCode:
//=========================================
// Find out player ID by grouping routine
_MonPlayer:
 movzx eax,byte ptr [esi+00000205] // Get PlayerID
 mov [iPlayerID],eax               // Save it for further use

 inc cl                            // Original code
 mov [edx+44],cl                   // Original code (upds group number)
 jmp _BackMP                       // Back to main code

//=========================================
// Combat Ships
_GodModeS0:
 call _CheckShip
 jmp _BackGMS0                     // Back to main code

//=========================================
// Combat Ships
_GodModeS1:
 call _CheckShip
 jmp _BackGMS1                     // Back to main code

//=========================================
// Combat Ships
_GodModeS2:
 call _CheckShip
 jmp _BackGMS2                     // Back to main code

//=========================================
// Combat Ships
_GodModeS3:
 call _CheckShip
 jmp _BackGMS3                     // Back to main code

//=========================================
// Combat Ships
_GodModeS4:
 call _CheckShip
 jmp _BackGMS4                     // Back to main code

//=========================================
// Combat Ships
_GodModeS5:
 call _CheckShip
 jmp _BackGMS5                     // Back to main code

//=========================================
// Combat Ships
_GodModeS6:
 call _CheckShip
 jmp _BackGMS6                     // Back to main code

//=========================================
// Combat Ships
_GodModeS7:
 push ebp
 call _CheckShip
 pop ebp
 xor ebx,ebx
 jmp _BackGMS7                     // Back to main code

//=========================================
_GodModeB0:
 call _CheckBuilding
 jmp _BackGMB0                     // Back to main code

//=========================================
_GodModeB1:
 call _CheckBuilding
 jmp _BackGMB1                     // Back to main code

//=========================================
_GodModeB2:
 call _CheckBuilding
 jmp _BackGMB2                     // Back to main code

//=========================================
_GodModeB3:
 call _CheckBuilding
 jmp _BackGMB3                     // Back to main code

//=========================================
_GodModeB4:
 call _CheckBuilding
 jmp _BackGMB5                     // Back to main code

//=========================================
_GodModeB5:
 call _CheckBuilding
 jmp _BackGMB5                     // Back to main code

//=========================================
_GodModeB6:
 call _CheckBuilding
 jmp _BackGMB6                     // Back to main code

//=========================================
_GodModeB7:
 call _CheckBuilding
 jmp _BackGMB7                     // Back to main code

//=========================================
_GodModeB8:
 push ebx
 push ecx
 call _CheckBuilding
 mov edx,ecx
 pop ecx
 mov ecx,ebx
 pop ebx
 jmp _BackGMB8                     // Back to main code

//=========================================
_GodModeB9:
 push ebx
 push ecx
 call _CheckBuilding
 mov edx,ecx
 pop ecx
 mov ecx,ebx
 pop ebx
 jmp _BackGMB9                     // Back to main code

//=========================================
// Ships
_MonSupply:
 cmp dword ptr [iEnableMS],0
 je _ExitMS                        // Jump if feature is disabled

 movzx eax,byte ptr [esi+00000205]
 cmp eax,[iPlayerID]
 jne _ExitMS

 mov ax,[esi+0000021a]             // Get max Supply
 mov [esi+00000214],ax             // Update Supply

_ExitMS:
 mov ax,[esi+00000214]             // Original code
 jmp _BackMS                       // Back to main code

//=========================================
// Ships
_MonSupply1:
 cmp dword ptr [iEnableMS],0
 je _ExitMS1                       // Jump if feature is disabled

 movzx eax,byte ptr [esi+00000205]
 cmp eax,[iPlayerID]
 jne _ExitMS1

 mov ax,[esi+0000021a]             // Get max Supply
 mov [esi+00000214],ax             // Update Supply

_ExitMS1:
 mov ax,[esi+00000214]             // Original code
 jmp _BackMS1                      // Back to main code

//=========================================
// Supply for Turrets
_MonSupplyT:
 cmp dword ptr [iEnableMS],0
 je _ExitMST                       // Jump if feature is disabled

 movzx eax,byte ptr [ebx+00000175]
 cmp eax,[iPlayerID]
 jne _ExitMST

 mov ax,[ebx+0000018A]             // Get max Supply
 mov [ebx+00000184],ax             // Update Supply

_ExitMST:
 mov ax,[ebx+00000184]             // Original code
 jmp _BackMST                      // Back to main code

//=========================================
_CheckShip:
 cmp dword ptr [iEnableGM],0
 je _ExitCS                        // Jump if feature is disabled

 test edi,edi
 jz _ExitCS

 movzx eax,byte ptr [edi+00000205]
 cmp eax,[iPlayerID]
 jne _ExitCS

 mov ax,[edi+00000218]             // Get max HP
 mov [edi+00000216],ax             // Make HP = Max
 xor ebp,ebp                       // value2decrease = 0

_ExitCS:
 mov ax,[esi-00000282]             // Original code
 ret

//=========================================
_CheckBuilding:
 cmp dword ptr [iEnableGM],0
 je _ExitCB                        // Jump if feature is disabled

 test edi,edi
 jz _ExitCB

 movzx eax,byte ptr [edi+00000175]
 cmp eax,[iPlayerID]
 jne _ExitCB

 mov ax,[edi+00000188]             // Get max HP
 mov [edi+00000186],ax             // Make HP = Max
 xor ebx,ebx                       // value2decrease = 0

_ExitCB:
 mov ax,[esi-7E]                   // Original code (Gets HP)
 mov ecx,eax                       // Original code
 ret

//=========================================
// Variables
iEnableGM:
 dd 1
iEnableMS:
 dd 1
iPlayerID:
 dd #254
pUnit:
 dd 0

//=========================================
// Hacking Points
conquest.exe+0e4e32:
 jmp _MonPlayer
_BackMP:

conquest.exe+13b2c2: //ok
 jmp _GodModeS0
 nop
 nop
_BackGMS0:

conquest.exe+13d192: //ok
 jmp _GodModeS1
 nop
 nop
_BackGMS1:

conquest.exe+13ebd2: //ok
 jmp _GodModeS2
 nop
 nop
_BackGMS2:

conquest.exe+140852: //ok
 jmp _GodModeS3
 nop
 nop
_BackGMS3:

conquest.exe+142812: //ok
 jmp _GodModeS4
 nop
 nop
_BackGMS4:

conquest.exe+144122: //ok
 jmp _GodModeS5
 nop
 nop
_BackGMS5:

conquest.exe+145a52: //ok
 jmp _GodModeS6
 nop
 nop
_BackGMS6:

conquest.exe+13efc9: //ok
 jmp _GodModeS7
 nop
 nop
_BackGMS7:

conquest.exe+0297c1: //ok
 jmp _GodModeB0
 nop
_BackGMB0:

conquest.exe+0335c1: //ok
 jmp _GodModeB1
 nop
_BackGMB1:

conquest.exe+08cd71: //ok
 jmp _GodModeB2
 nop
_BackGMB2:

conquest.exe+099511: //ok
 jmp _GodModeB3
 nop
_BackGMB3:

conquest.exe+0ae14c: //ok
 jmp _GodModeB4
 nop
_BackGMB4:

conquest.exe+116511: //ok
 jmp _GodModeB5
 nop
_BackGMB5:

conquest.exe+11c011: //ok
 jmp _GodModeB6
 nop
_BackGMB6:

conquest.exe+134a41: //ok
 jmp _GodModeB7
 nop
_BackGMB7:

conquest.exe+0338f0: //ok
 jmp _GodModeB8
 nop
_BackGMB8:

conquest.exe+0adf00: //ok
 jmp _GodModeB9
 nop
_BackGMB9:

conquest.exe+13a54a: //ok
 jmp _MonSupply
 nop
 nop
_BackMS:

conquest.exe+14178a: //ok1
 jmp _MonSupply1
 nop
 nop
_BackMS1:

conquest.exe+133a85: //ok
 jmp _MonSupplyT
 nop
 nop
_BackMST:

//=========================================
// Original Codes
[DISABLE]
conquest.exe+0e4e32: //ok
 inc cl
 mov [edx+44],cl

conquest.exe+13b2c2: //ok0
 mov ax,[esi-00000282]

conquest.exe+13d192: //ok1
 mov ax,[esi-00000282]

conquest.exe+13ebd2: //ok2
 mov ax,[esi-00000282]

conquest.exe+140852: //ok3
 mov ax,[esi-00000282]

conquest.exe+142812: //ok4
 mov ax,[esi-00000282]

conquest.exe+144122: //ok5
 mov ax,[esi-00000282]

conquest.exe+145a52: //ok6
 mov ax,[esi-00000282]

conquest.exe+13efc9: //ok7
 mov ax,[esi-00000282]

conquest.exe+0297c1: //ok0
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+0335c1: //ok1
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+08cd71: //ok2
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+099511: //ok3
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+0ae14c: //ok4
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+116511: //ok5
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+11c011: //ok6
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+134a41: //ok7
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+0338f0: //ok8
 mov ax,[esi-7E]
 mov edx,eax

conquest.exe+0adf00: //ok9
 mov ax,[esi-7E]
 mov edx,eax

conquest.exe+13a54a: //ok0
 mov ax,[esi+00000214]

conquest.exe+14178a: //ok1
 mov ax,[esi+00000214]

conquest.exe+133a85: //ok
 mov ax,[ebx+00000184]

unregistersymbol(MyCode)
unregistersymbol(pUnit)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMS)
unregistersymbol(iPlayerID)

dealloc(MyCode)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Enable/Disable God Mode"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Enable/Disable Unlimited Supply"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMS</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Conquest - Frontier Wars V1.07 Script"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Conquest - Frontier Wars
 Game Version  : 1.07
 Script Version: 1.0
 CE Version    : 6.0
 God Mode and Unlimited Supply
 21-Feb-2011 Release for version 1.05
 02-Mar-2011 Adapted to version 1.07
===========================================
}

[ENABLE]
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(conquest.exe+0e4e72,fe c1 88 4a 44) //1.07
assert(conquest.exe+13b302,66 8b 86 7e fd ff ff) //1.07
assert(conquest.exe+13d1d2,66 8b 86 7e fd ff ff) //1.07
assert(conquest.exe+13ec12,66 8b 86 7e fd ff ff) //1.07
assert(conquest.exe+140892,66 8b 86 7e fd ff ff) //1.07
assert(conquest.exe+142852,66 8b 86 7e fd ff ff) //1.07
assert(conquest.exe+144162,66 8b 86 7e fd ff ff) //1.07
assert(conquest.exe+145a92,66 8b 86 7e fd ff ff) //1.07
assert(conquest.exe+13f009,66 8b 86 7e fd ff ff) //1.07
assert(conquest.exe+0297c1,66 8b 46 82 8b c8) //ok
assert(conquest.exe+0335a1,66 8b 46 82 8b c8) //1.07
assert(conquest.exe+08cda1,66 8b 46 82 8b c8) //1.07
assert(conquest.exe+099541,66 8b 46 82 8b c8) //1.07
assert(conquest.exe+0ae17c,66 8b 46 82 8b c8) //1.07
assert(conquest.exe+116551,66 8b 46 82 8b c8) //1.07
assert(conquest.exe+11c051,66 8b 46 82 8b c8) //1.07
assert(conquest.exe+134a81,66 8b 46 82 8b c8) //1.07
assert(conquest.exe+0338d0,66 8b 46 82 8b d0) //1.07
assert(conquest.exe+0adf30,66 8b 46 82 8b d0) //1.07
assert(conquest.exe+13a58a,66 8b 86 14 02 00 00) //1.07
assert(conquest.exe+1417ca,66 8b 86 14 02 00 00) //1.07
assert(conquest.exe+133ac5,66 8b 83 84 01 00 00) //1.07

//=========================================
alloc(MyCode,1024)
//=========================================
// Declaration section
label(_MonPlayer)
label(_BackMP)
label(_GodModeS0)
label(_BackGMS0)
label(_GodModeS1)
label(_BackGMS1)
label(_GodModeS2)
label(_BackGMS2)
label(_GodModeS3)
label(_BackGMS3)
label(_GodModeS4)
label(_BackGMS4)
label(_GodModeS5)
label(_BackGMS5)
label(_GodModeS6)
label(_BackGMS6)
label(_GodModeS7)
label(_BackGMS7)
label(_GodModeB0)
label(_BackGMB0)
label(_GodModeB1)
label(_BackGMB1)
label(_GodModeB2)
label(_BackGMB2)
label(_GodModeB3)
label(_BackGMB3)
label(_GodModeB4)
label(_BackGMB4)
label(_GodModeB5)
label(_BackGMB5)
label(_GodModeB6)
label(_BackGMB6)
label(_GodModeB7)
label(_BackGMB7)
label(_GodModeB8)
label(_BackGMB8)
label(_GodModeB9)
label(_BackGMB9)
label(_MonSupply)
label(_BackMS)
label(_ExitMS)
label(_MonSupply1)
label(_BackMS1)
label(_ExitMS1)
label(_MonSupplyT)
label(_BackMST)
label(_ExitMST)
label(_CheckShip)
label(_ExitCS)
label(_CheckBuilding)
label(_ExitCB)
label(pUnit)
label(iEnableGM)
label(iEnableMS)
label(iPlayerID)

registersymbol(MyCode)
registersymbol(pUnit)
registersymbol(iEnableGM)
registersymbol(iEnableMS)
registersymbol(iPlayerID)

//=========================================
MyCode:
//=========================================
// Find out player ID by grouping routine
_MonPlayer:
 movzx eax,byte ptr [esi+00000205] // Get PlayerID
 mov [iPlayerID],eax               // Save it for further use

 inc cl                            // Original code
 mov [edx+44],cl                   // Original code (upds group number)
 jmp _BackMP                       // Back to main code

//=========================================
// Combat Ships
_GodModeS0:
 call _CheckShip
 jmp _BackGMS0                     // Back to main code

//=========================================
// Combat Ships
_GodModeS1:
 call _CheckShip
 jmp _BackGMS1                     // Back to main code

//=========================================
// Combat Ships
_GodModeS2:
 call _CheckShip
 jmp _BackGMS2                     // Back to main code

//=========================================
// Combat Ships
_GodModeS3:
 call _CheckShip
 jmp _BackGMS3                     // Back to main code

//=========================================
// Combat Ships
_GodModeS4:
 call _CheckShip
 jmp _BackGMS4                     // Back to main code

//=========================================
// Combat Ships
_GodModeS5:
 call _CheckShip
 jmp _BackGMS5                     // Back to main code

//=========================================
// Combat Ships
_GodModeS6:
 call _CheckShip
 jmp _BackGMS6                     // Back to main code

//=========================================
// Combat Ships
_GodModeS7:
 push ebp
 call _CheckShip
 pop ebp
 xor ebx,ebx
 jmp _BackGMS7                     // Back to main code

//=========================================
_GodModeB0:
 call _CheckBuilding
 jmp _BackGMB0                     // Back to main code

//=========================================
_GodModeB1:
 call _CheckBuilding
 jmp _BackGMB1                     // Back to main code

//=========================================
_GodModeB2:
 call _CheckBuilding
 jmp _BackGMB2                     // Back to main code

//=========================================
_GodModeB3:
 call _CheckBuilding
 jmp _BackGMB3                     // Back to main code

//=========================================
_GodModeB4:
 call _CheckBuilding
 jmp _BackGMB5                     // Back to main code

//=========================================
_GodModeB5:
 call _CheckBuilding
 jmp _BackGMB5                     // Back to main code

//=========================================
_GodModeB6:
 call _CheckBuilding
 jmp _BackGMB6                     // Back to main code

//=========================================
_GodModeB7:
 call _CheckBuilding
 jmp _BackGMB7                     // Back to main code

//=========================================
_GodModeB8:
 push ebx
 push ecx
 call _CheckBuilding
 mov edx,ecx
 pop ecx
 mov ecx,ebx
 pop ebx
 jmp _BackGMB8                     // Back to main code

//=========================================
_GodModeB9:
 push ebx
 push ecx
 call _CheckBuilding
 mov edx,ecx
 pop ecx
 mov ecx,ebx
 pop ebx
 jmp _BackGMB9                     // Back to main code

//=========================================
// Ships
_MonSupply:
 cmp dword ptr [iEnableMS],0
 je _ExitMS                        // Jump if feature is disabled

 movzx eax,byte ptr [esi+00000205]
 cmp eax,[iPlayerID]
 jne _ExitMS

 mov ax,[esi+0000021a]             // Get max Supply
 mov [esi+00000214],ax             // Update Supply

_ExitMS:
 mov ax,[esi+00000214]             // Original code
 jmp _BackMS                       // Back to main code

//=========================================
// Ships
_MonSupply1:
 cmp dword ptr [iEnableMS],0
 je _ExitMS1                       // Jump if feature is disabled

 movzx eax,byte ptr [esi+00000205]
 cmp eax,[iPlayerID]
 jne _ExitMS1

 mov ax,[esi+0000021a]             // Get max Supply
 mov [esi+00000214],ax             // Update Supply

_ExitMS1:
 mov ax,[esi+00000214]             // Original code
 jmp _BackMS1                      // Back to main code

//=========================================
// Supply for Turrets
_MonSupplyT:
 cmp dword ptr [iEnableMS],0
 je _ExitMST                       // Jump if feature is disabled

 movzx eax,byte ptr [ebx+00000175]
 cmp eax,[iPlayerID]
 jne _ExitMST

 mov ax,[ebx+0000018A]             // Get max Supply
 mov [ebx+00000184],ax             // Update Supply

_ExitMST:
 mov ax,[ebx+00000184]             // Original code
 jmp _BackMST                      // Back to main code

//=========================================
_CheckShip:
 cmp dword ptr [iEnableGM],0
 je _ExitCS                        // Jump if feature is disabled

 test edi,edi
 jz _ExitCS

 movzx eax,byte ptr [edi+00000205]
 cmp eax,[iPlayerID]
 jne _ExitCS

 mov ax,[edi+00000218]             // Get max HP
 mov [edi+00000216],ax             // Make HP = Max
 xor ebp,ebp                       // value2decrease = 0

_ExitCS:
 mov ax,[esi-00000282]             // Original code
 ret

//=========================================
_CheckBuilding:
 cmp dword ptr [iEnableGM],0
 je _ExitCB                        // Jump if feature is disabled

 test edi,edi
 jz _ExitCB

 movzx eax,byte ptr [edi+00000175]
 cmp eax,[iPlayerID]
 jne _ExitCB

 mov ax,[edi+00000188]             // Get max HP
 mov [edi+00000186],ax             // Make HP = Max
 xor ebx,ebx                       // value2decrease = 0

_ExitCB:
 mov ax,[esi-7E]                   // Original code (Gets HP)
 mov ecx,eax                       // Original code
 ret

//=========================================
// Variables
iEnableGM:
 dd 1
iEnableMS:
 dd 1
iPlayerID:
 dd #254
pUnit:
 dd 0

//=========================================
// Hacking Points
conquest.exe+0e4e72: //107
 jmp _MonPlayer
_BackMP:

conquest.exe+13b302: //107
 jmp _GodModeS0
 nop
 nop
_BackGMS0:

conquest.exe+13d1d2: //107
 jmp _GodModeS1
 nop
 nop
_BackGMS1:

conquest.exe+13ec12: //107
 jmp _GodModeS2
 nop
 nop
_BackGMS2:

conquest.exe+140892: //107
 jmp _GodModeS3
 nop
 nop
_BackGMS3:

conquest.exe+142852: //107
 jmp _GodModeS4
 nop
 nop
_BackGMS4:

conquest.exe+144162: //107
 jmp _GodModeS5
 nop
 nop
_BackGMS5:

conquest.exe+145a92: //107
 jmp _GodModeS6
 nop
 nop
_BackGMS6:

conquest.exe+13f009: //107
 jmp _GodModeS7
 nop
 nop
_BackGMS7:

conquest.exe+0297c1: //ok
 jmp _GodModeB0
 nop
_BackGMB0:

conquest.exe+0335A1: //107
 jmp _GodModeB1
 nop
_BackGMB1:

conquest.exe+08cda1: //107
 jmp _GodModeB2
 nop
_BackGMB2:

conquest.exe+099541: //107
 jmp _GodModeB3
 nop
_BackGMB3:

conquest.exe+0ae17c: //107
 jmp _GodModeB4
 nop
_BackGMB4:

conquest.exe+116551: //107
 jmp _GodModeB5
 nop
_BackGMB5:

conquest.exe+11c051: //107
 jmp _GodModeB6
 nop
_BackGMB6:

conquest.exe+134a81: //107
 jmp _GodModeB7
 nop
_BackGMB7:

conquest.exe+0338d0: //107
 jmp _GodModeB8
 nop
_BackGMB8:

conquest.exe+0adf30: //107
 jmp _GodModeB9
 nop
_BackGMB9:

conquest.exe+13a58a: //107
 jmp _MonSupply
 nop
 nop
_BackMS:

conquest.exe+1417ca: //107
 jmp _MonSupply1
 nop
 nop
_BackMS1:

conquest.exe+133ac5: //107
 jmp _MonSupplyT
 nop
 nop
_BackMST:

//=========================================
// Original Codes
[DISABLE]
conquest.exe+0e4e72: //107
 inc cl
 mov [edx+44],cl

conquest.exe+13b302: //107
 mov ax,[esi-00000282]

conquest.exe+13d1d2: //107
 mov ax,[esi-00000282]

conquest.exe+13ec12: //107
 mov ax,[esi-00000282]

conquest.exe+140892: //107
 mov ax,[esi-00000282]

conquest.exe+142852: //107
 mov ax,[esi-00000282]

conquest.exe+144162: //107
 mov ax,[esi-00000282]

conquest.exe+145a92: //107
 mov ax,[esi-00000282]

conquest.exe+13f009: //107
 mov ax,[esi-00000282]

conquest.exe+0297c1: //107
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+0335A1: //107
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+08cdA1: //107
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+099541: //107
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+0ae17c: //107
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+116551: //107
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+11c051: //107
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+134a81: //107
 mov ax,[esi-7E]
 mov ecx,eax

conquest.exe+0338d0: //107
 mov ax,[esi-7E]
 mov edx,eax

conquest.exe+0adf30: //107
 mov ax,[esi-7E]
 mov edx,eax

conquest.exe+13a58a: //107
 mov ax,[esi+00000214]

conquest.exe+1417ca: //107
 mov ax,[esi+00000214]

conquest.exe+133ac5: //107
 mov ax,[ebx+00000184]

unregistersymbol(MyCode)
unregistersymbol(pUnit)
unregistersymbol(iEnableGM)
unregistersymbol(iEnableMS)
unregistersymbol(iPlayerID)

dealloc(MyCode)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Enable/Disable Unlimited Supply"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMS</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Enable/Disable God Mode"</Description>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGM</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Conquest - Frontier Wars
 Game Version  : 1.07
 Script Version: 1.0
 CE Version    : 6.0
 God Mode and Unlimited Supply
 21-Feb-2011 Release for version 1.05
 02-Mar-2011 Adapted to version 1.07
===========================================
[Note] In order to identify your player ID, you need to select
one of your ships and make a group (for instance, Control+1).
</Comments>
</CheatTable>
