<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(enableAOB11,DB 80 ** ** 00 00 5E C3)
label(enableAOB11_jmp) //hp read
registersymbol(enableAOB11_jmp)
aobscan(enableAOB6,8B 86 ** ** 00 00 8B 80 ** ** 00 00 50)
label(enableAOB6_jmp) //current item q read
registersymbol(enableAOB6_jmp)
aobscan(enableAOB2,8B 44 24 10 29 03 8B 1B 8B 4C 24 14)
label(enableAOB2_jmp) //subtract (hp / $ / current ammo clip / pouch q)
registersymbol(enableAOB2_jmp)
aobscan(enableAOB0,8B 87 ** ** 00 00 03 87 ** ** 00 00 33 C9)
label(enableAOB0_jmp) //current ammo q read
registersymbol(enableAOB0_jmp)

label(pHP)
registersymbol(pHP)
label(pAmmoCP)
registersymbol(pAmmoCP)
label(pItem)
registersymbol(pItem)
label(pCredits)
registersymbol(pCredits)

label(bUndeadSwitch)
registersymbol(bUndeadSwitch)
label(bInfAmmoSwitch)
registersymbol(bInfAmmoSwitch)
label(bInfItemSwitch)
registersymbol(bInfItemSwitch)
label(bInfCreditsSwitch)
registersymbol(bInfCreditsSwitch)

alloc(newmem11,2048) //2kb should be enough
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHP],eax

originalcode11:
fild dword ptr [eax+000002DC]

exit11:
jmp returnhere11

alloc(newmem6,2048) //2kb should be enough
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pItem],eax
cmp byte ptr [bInfItemSwitch],1
jne originalcode6
cmp [eax+00000268],2
jge originalcode6
mov [eax+00000268],2

originalcode6:
mov eax,[eax+00000268]

exit6:
jmp returnhere6

alloc(newmem2,2048) //2kb should be enough
label(returnhere2)
label(originalcode2)
label(exit2)
label(checkundeadswitch2)
label(checkinfammoswitch2)
label(infammostart2)
label(infammostart2check1)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
sub [ebx],eax

mov ecx,ebx
sub ecx,edi
cmp ecx,00000808
jne checkundeadswitch2
mov [pCredits],ebx
cmp byte ptr [bInfCreditsSwitch],1
jne originalcode2
add [ebx],eax
jmp originalcode2

checkundeadswitch2:
cmp byte ptr [bUndeadSwitch],1
jne checkinfammoswitch2
mov ecx,[pHP]
lea ecx,[ecx+2dc]
cmp ecx,ebx
jne checkinfammoswitch2
cmp [ebx],1
jge originalcode2
mov [ebx],1
jmp originalcode2

checkinfammoswitch2:
cmp byte ptr [bInfAmmoSwitch],1
je infammostart2
jmp originalcode2

infammostart2:
mov ecx,[pAmmoCP]
add ecx,330

cmp ecx,ebx
jne infammostart2check1
cmp [ebx],1
jge originalcode2
mov [ebx],1
jmp originalcode2

infammostart2check1:
add ecx,4
cmp ecx,ebx
jne originalcode2
cmp dword ptr [ebx],(int)10
jge originalcode2
add [ebx],eax
jmp originalcode2

originalcode2:
//sub [ebx],eax
mov ebx,[ebx]
mov ecx,[esp+14]

exit2:
jmp returnhere2

alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pAmmoCP],edi

originalcode:
mov eax,[edi+00000330]

exit:
jmp returnhere

///
pHP:
dd 0
pAmmoCP:
dd 0
pItem:
dd 0
pCredits:
dd 0

bUndeadSwitch:
db 1
bInfAmmoSwitch:
db 1
bInfItemSwitch:
db 1
bInfCreditsSwitch:
db 1
///

enableAOB11: //"AlienBreed2Assault.exe"+9990B2:
enableAOB11_jmp:
jmp newmem11
nop
returnhere11:

enableAOB6+6: //"AlienBreed2Assault.exe"+9ABB17:
enableAOB6_jmp:
jmp newmem6
nop
returnhere6:

enableAOB2+4: //"AlienBreed2Assault.exe"+814801:
enableAOB2_jmp:
jmp newmem2
nop
nop
nop
returnhere2:

enableAOB0: //"AlienBreed2Assault.exe"+9AF0C9:
enableAOB0_jmp:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
enableAOB11_jmp: //"AlienBreed2Assault.exe"+9990B2:
db DB 80 DC 02 00 00
//Alt: fild dword ptr [eax+000002DC]
dealloc(newmem6)
enableAOB6_jmp: //"AlienBreed2Assault.exe"+9ABB17:
db 8B 80 68 02 00 00
//Alt: mov eax,[eax+00000268]
dealloc(newmem2)
enableAOB2_jmp: //"AlienBreed2Assault.exe"+814801:
db 29 03 8B 1B 8B 4C 24 14
//Alt: sub [ebx],eax
//Alt: mov ebx,[ebx]
//Alt: mov ecx,[esp+14]
dealloc(newmem)
enableAOB0_jmp: //"AlienBreed2Assault.exe"+9AF0C9:
db 8B 87 30 03 00 00
//Alt: mov eax,[edi+00000330]
unregistersymbol(enableAOB11_jmp)
unregistersymbol(enableAOB6_jmp)
unregistersymbol(enableAOB2_jmp)
unregistersymbol(enableAOB0_jmp)
unregistersymbol(pHP)
unregistersymbol(pAmmoCP)
unregistersymbol(pItem)
unregistersymbol(pCredits)
unregistersymbol(bUndeadSwitch)
unregistersymbol(bInfAmmoSwitch)
unregistersymbol(bInfItemSwitch)
unregistersymbol(bInfCreditsSwitch)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>9</ID>
          <Description>"[Switches]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>20</ID>
              <Description>"bUndeadSwitch"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bUndeadSwitch</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>10</ID>
              <Description>"bInfAmmoSwitch"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bInfAmmoSwitch</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"bInfItemSwitch"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bInfItemSwitch</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"bInfCreditsSwitch"</Description>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bInfCreditsSwitch</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"[Pointers]"</Description>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>18</ID>
              <Description>"health"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pHP</Address>
              <Offsets>
                <Offset>2DC</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>17</Key>
                    <Key>107</Key>
                  </Keys>
                  <Value>(max health)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"max health"</Description>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHP</Address>
                  <Offsets>
                    <Offset>2E0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"current ammo clip"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoCP</Address>
              <Offsets>
                <Offset>330</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>25</ID>
              <Description>"current ammo pouch"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pAmmoCP</Address>
              <Offsets>
                <Offset>334</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>15</ID>
              <Description>"current item"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pItem</Address>
              <Offsets>
                <Offset>268</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>26</ID>
              <Description>"credits"</Description>
              <Color>80000008</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pCredits</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>enableAOB11_jmp</Name>
      <Address>00D99162</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB6_jmp</Name>
      <Address>00DABBC7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB2_jmp</Name>
      <Address>00C14891</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>enableAOB0_jmp</Name>
      <Address>00DAF179</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHP</Name>
      <Address>0C641811</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pAmmoCP</Name>
      <Address>0C641815</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItem</Name>
      <Address>0C641819</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCredits</Name>
      <Address>0C64181D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bUndeadSwitch</Name>
      <Address>0C641821</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfAmmoSwitch</Name>
      <Address>0C641822</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfItemSwitch</Name>
      <Address>0C641823</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bInfCreditsSwitch</Name>
      <Address>0C641824</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
