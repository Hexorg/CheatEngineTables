<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Scripts by SER[G]ANT (Health / No Reload fixes and weapon hacks by Csimbi)"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>408000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Infinite Health"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(_newmem,1024)
label(_faddress_r)
registersymbol(_faddress_r)
aobscan(_faddress,d9 82 e4 02 00 00 f3 0f 11 86 84 06 00 00 d9 9e 80 06 00 00 0f 84 9e 00 00 00 8b 86 20 06 00 00 8b 17)

_faddress:    // 00F1B268 = GImage::GImage+179AA8 or Singularity.exe+B1B268
_faddress_r:
call _newmem
nop

_newmem:
fld dword ptr [edx+000002e8]
fst dword ptr [edx+000002e4]
ret


[DISABLE]
_faddress_r:
fld dword ptr [edx+000002e4]
// d9 82 e4 02 00 00

unregistersymbol(_faddress_r)
dealloc(_newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Infinite Energy"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
 aobscan(_faddress,f3xxxxxxxxxxxxxx76xxf3xxxxxxxxxxxxxxf3xxxxxxxxxxxxxxb8)
 aobscan(_faddress2,f3xxxxxxxxxxxxxx76xxf3xxxxxxxxxxxxxxf3xxxxxxxxxxxxxx8bxxxxxx8b)

_faddress:    // 0100D603 = GImage::GImage+26BE43
 db 90 90 90 90 90 90 90 90

_faddress2:    // 00FFFECB = GImage::GImage+25E70B
 db 90 90 90 90 90 90 90 90

[DISABLE]
 aobscan(_faddress,90909076xxf3xxxxxxxxxxxxxxf3xxxxxxxxxxxxxxb8)
 aobscan(_faddress2,90909076xxf3xxxxxxxxxxxxxxf3xxxxxxxxxxxxxx8bxxxxxx8b)

_faddress-5:
 movss [esi+0000038c],xmm0

_faddress2-5:
 movss [esi+0000038c],xmm0
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Infinite Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
 aobscan(_faddress,8bxxxxxxxxxxxxxxc2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx8bxx8bxx8b)
 alloc(_newmem,2048)
 label(_returnhere)
 label(_originalcode)

_newmem:
 mov dword ptr [ecx+eax*4+000002ec],63
_originalcode:
 mov eax,[ecx+eax*4+000002ec]
 jmp _returnhere

_faddress:    // 00FAE657 = GImage::GImage+20CDD7
 jmp _newmem
 nop
 nop
_returnhere:

[DISABLE]
 aobscan(_faddress,9090xxc2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx8bxx8bxx8b)

_faddress-5:
 mov eax,[ecx+eax*4+000002ec]

 dealloc(_newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"No Reload"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
 aobscan(_faddress,8bxxxxxxxxxxxxxxc2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx8bxx0f)
 alloc(_newmem,2048)
 label(_returnhere)
 label(_originalcode)

_newmem:
 push ebp
 mov ebp,[ecx+eax*4+0000238]
 mov [ecx+eax*4+000001fc],ebp
_originalcode:
 mov eax,[ecx+eax*4+000001fc]
 pop ebp
 jmp _returnhere

_faddress:    // 00FAE987 = GImage::GImage+20D1C7
 jmp _newmem
 nop
 nop
_returnhere:

[DISABLE]
 aobscan(_faddress,9090xxc2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx8bxx0f)

_faddress-5:
 mov eax,[ecx+eax*4+000001fc]

 dealloc(_newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Infinite Stamina"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
 aobscan(_faddress,d9xxxxxxxxxxd8xxxxxxxxxxxxxxxxxxxx8bxx81xxxxxxxxxxxx8bxx83)
 alloc(_newmem,2048)
 label(_returnhere)
 label(_originalcode)

_newmem:
 mov dword ptr [ecx+00000648],42C80000
_originalcode:
 fld dword ptr [ecx+00000648]
 jmp _returnhere

_faddress:    // 0102DFD0 = GImage::GImage+28C750
 jmp _newmem
 nop
_returnhere:

[DISABLE]
 aobscan(_faddress,90d8xxxxxxxxxxxxxxxxxxxx8bxx81xxxxxxxxxxxx8bxx83)

_faddress-5:
 fld dword ptr [ecx+00000648]

 dealloc(_newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Infinite Temporal Dialation"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
 aobscan(_faddress,f3xxxxxxxxxxxxxxf3xxxxxx0fxxxx0fxxxxf3xxxxxxxxxxxxxx76xx8b)
 alloc(_newmem,2048)
 label(_returnhere)
 label(_originalcode)

_newmem:
 mov dword ptr [esi+0000059c],40A00000
_originalcode:
 movss xmm0,[esi+0000059c]
 jmp _returnhere

_faddress:    // 00E5D7B6 = GImage::GImage+BBF36
 jmp _newmem
 nop
 nop
 nop
_returnhere:

[DISABLE]
 aobscan(_faddress,909090f3xxxxxx0fxxxx0fxxxxf3xxxxxxxxxxxxxx76xx8b)

_faddress-5:
 movss xmm0,[esi+0000059c]

 dealloc(_newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Infinite Oxygen"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
 aobscan(_faddress,f3xxxxxxxxxxxxxx76xxf3xxxxxxxxxxxxxxe8xxxxxxxx80xxxxxxxxxxxx75)

_faddress:    // 009E74DF = GetStackOwnerClass+25853F
 nop
 nop
 nop
 nop
 nop
 nop
 nop
 nop

[DISABLE]
 aobscan(_faddress,90909076xxf3xxxxxxxxxxxxxxe8xxxxxxxx80xxxxxxxxxxxx75)

_faddress-5:
 movss [esi+000002ec],xmm0

 dealloc(_newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"-- Add Stuff"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//Enable script and add address "_cmp" (type 1 byte) to CE table
//Change value of this address to
//"1" - you get +10 Weapon Tech
//"2" - you get +1.000 E99 Tech
//"3" - you get +1 Health Pack
//"4" - you get +1 E99 Vial
[ENABLE]
 aobscan(_faddress,8bxxxxxxxxxxxxxxc2xxxx33xxxxc2xxxxxxxxxx8bxxxx8bxxxxxx8bxx80)
 alloc(_newmem,2048)
 label(_returnhere)
 label(_originalcode)
 label(_cmp)
 registersymbol(_cmp)
 label(_weapontech)
 label(_e99)
 label(_healthpack)
 label(_e99vial)



_newmem:
 cmp byte ptr [_cmp],0
 je _originalcode
 cmp byte ptr [_cmp],1
 je _weapontech
 cmp byte ptr [_cmp],2
 je _e99
 cmp byte ptr [_cmp],3
 je _healthpack
 cmp byte ptr [_cmp],4
 je _e99vial

 _weapontech:
  add dword ptr [ecx+36c],0a
  jmp _originalcode

_e99:
 add dword ptr [ecx+370],3E8
jmp _originalcode

_healthpack:
 add dword ptr [ecx+364],1
 jmp _originalcode

_e99vial:
 add dword ptr [ecx+368],1
 jmp _originalcode

_originalcode:
 mov eax,[ecx+eax*4+00000364]
 mov byte ptr [_cmp],0
 jmp _returnhere

_cmp:
 dd 0

_faddress:    // 00FAE75D = GImage::GImage+20CEDD
 jmp _newmem
 nop
 nop
_returnhere:

[DISABLE]
 aobscan(_faddress,9090xxc2xxxx33xxxxc2xxxxxxxxxx8bxxxx8bxxxxxx8bxx80)

_faddress-5:
 mov eax,[ecx+eax*4+00000364]

 dealloc(_newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Change the # in value column"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>_cmp</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"--Set to 1 for +10 Weapon Tech"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>408000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"--Set to 2 for +1000 E99 Tech"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>408000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"--Set to 3 for +1 Health Pack"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>408000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"--Set to 4 for +1 E99 Vial"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>408000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"-- Disable Recoil / Spread"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,1024)
label(superweapon_dohack) // Add to table manually as "4 bytes" and set to 1 to hack currently held weapon
label(superweapon_damage) // Add to table manually as "float" and change weapon's damage to be set when hack is enabled. Default is 1000.
label(superweapon_firerate) // Add to table manually as "float" change weapon's fire rate to be set when hack is enabled. Default is 0.01.
label(superweapon_c)
label(superweapon_done)
label(recoil1_r)
label(recoil1_c)
label(recoil2_r)
label(recoil2_c)
label(recoil3_r)
label(recoil4_r)
label(recoil5_r)
label(recoil6_r)
registersymbol(superweapon_dohack)
registersymbol(superweapon_damage)
registersymbol(superweapon_firerate)
registersymbol(recoil1_r)
registersymbol(recoil2_r)
registersymbol(recoil3_r)
registersymbol(recoil4_r)
registersymbol(recoil5_r)
registersymbol(recoil6_r)
aobscan(recoil1,f3 0f 58 86 9c 04 00 00 f3 0f 11 86 9c 04 00 00 eb 5f)
aobscan(recoil2,f3 0f 58 8e 9c 04 00 00 f3 0f 11 8e 9c 04 00 00 ff 15 84 35 78 01)
aobscan(recoil3,f3 0f 11 86 9c 04 00 00 f3 0f 11 8e b0 04 00 00 f3 0f 11 8e b4 04 00 00 f3 0f 11 8e b8 04 00 00)
aobscan(recoil4,f3 0f 11 86 b0 04 00 00 f3 0f 10 86 b4 04 00 00)
aobscan(recoil5,f3 0f 11 86 b4 04 00 00 f3 0f 10 86 b8 04 00 00)
aobscan(recoil6,f3 0f 11 86 b8 04 00 00 8b 75 fc)

newmem:
recoil1_c:
call superweapon_c
mov [esi+0000049c],0
mov [esi+00000454],0
movss xmm0,[esi+0000049c]
ret
recoil2_c:
call superweapon_c
mov [esi+0000049c],0
mov [esi+00000454],0
movss xmm1,[esi+0000049c]
ret
superweapon_c:
push eax
xor eax,eax
cmp eax,[superweapon_dohack]
je short superweapon_done
mov [superweapon_dohack],eax
push ebx
mov ebx,[superweapon_damage]
mov eax,[esi+0000026C]
mov dword ptr [eax],ebx
mov ebx,[superweapon_firerate]
mov eax,[esi+00000254]
mov dword ptr [eax],ebx
pop ebx
superweapon_done:
pop eax
ret
// Variables
superweapon_dohack:
dd 0
superweapon_damage:
dd 447A0000 // float 1000
superweapon_firerate:
dd 3C23D70A // float 0.01

recoil1:
recoil1_r:
call recoil1_c
nop
nop
nop

recoil2:
recoil2_r:
call recoil2_c
nop
nop
nop

recoil3:
recoil3_r:
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop

recoil4:
recoil4_r:
nop
nop
nop
nop
nop
nop
nop
nop

recoil5:
recoil5_r:
nop
nop
nop
nop
nop
nop
nop
nop

recoil6:
recoil6_r:
nop
nop
nop
nop
nop
nop
nop
nop

[DISABLE]
recoil1_r:
addss xmm0,[esi+0000049c]
movss [esi+0000049c],xmm0
//Alt: db F3 0F 58 86 9C 04 00 00 f3 0f 11 86 9c 04 00 00

recoil2_r:
addss xmm1,[esi+0000049c]
movss [esi+0000049c],xmm1
//Alt: db F3 0F 58 8E 9C 04 00 00 f3 0f 11 8e 9c 04 00 00

recoil3_r:
movss [esi+0000049c],xmm0
movss [esi+000004b0],xmm1
movss [esi+000004b4],xmm1
movss [esi+000004b8],xmm1
//Alt: db f3 0f 11 86 9c 04 00 00 f3 0f 11 8e b0 04 00 00 f3 0f 11 8e b4 04 00 00 f3 0f 11 8e b8 04 00 00

recoil4_r:
movss [esi+000004b0],xmm0
//Alt: db f3 0f 11 86 b0 04 00 00

recoil5_r:
movss [esi+000004b4],xmm0
//Alt: db f3 0f 11 86 b4 04 00 00

recoil6_r:
movss [esi+000004b8],xmm0
//Alt: db f3 0f 11 86 b8 04 00 00

unregistersymbol(superweapon_dohack)
unregistersymbol(superweapon_damage)
unregistersymbol(superweapon_firerate)
unregistersymbol(recoil1_r)
unregistersymbol(recoil2_r)
unregistersymbol(recoil3_r)
unregistersymbol(recoil4_r)
unregistersymbol(recoil5_r)
unregistersymbol(recoil6_r)
dealloc(newmem)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Hack Current Weapon (Reload to disable)"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>superweapon_dohack</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>16</ID>
              <Description>"Weapon Damage"</Description>
              <VariableType>Float</VariableType>
              <Address>superweapon_damage</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>17</ID>
              <Description>"Weapon Fire Rate"</Description>
              <VariableType>Float</VariableType>
              <Address>superweapon_firerate</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_cmp</Name>
      <Address>29450087</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>superweapon_dohack</Name>
      <Address>2D1D0074</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>superweapon_damage</Name>
      <Address>2D1D0078</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>superweapon_firerate</Name>
      <Address>2D1D007C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>recoil1_r</Name>
      <Address>00E6B2B2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>recoil2_r</Name>
      <Address>00E6B313</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>recoil3_r</Name>
      <Address>00E6B87E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>recoil4_r</Name>
      <Address>00E6B427</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>recoil5_r</Name>
      <Address>00E6B43F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>recoil6_r</Name>
      <Address>00E6B457</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
