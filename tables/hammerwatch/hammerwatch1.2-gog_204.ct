<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="16">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"Inf. Health"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,128)
label(exit)
label(aHealth)
registersymbol(aHealth)
aobscan(aobHealth,8B 45 D0 89 50 38 A1 ?? ?? ?? ?? 8B)

newmem:
mov eax,[ebp-30]
cmp edx,[eax+38]
jbe exit
mov [eax+38],edx
jmp exit

aobHealth:
aHealth:
jmp newmem
nop
exit:

[DISABLE]
aHealth:
db 8B 45 D0  // mov eax,[ebp-30]
db 89 50 38  // mov [eax+38],edx
dealloc(newmem)
unregistersymbol(aHealth)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Inf. Mana"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,128)
label(end)
label(exit)
label(aMana)
registersymbol(aMana)
aobscan(aobMana,89 46 ?? 80 7E ?? ?? 74 ?? B9)

newmem:
cmp eax,[esi+40]
jbe end
mov [esi+40],eax
end:
cmp byte ptr [esi+55],00
jmp exit

aobMana:
aMana:
jmp newmem
nop
nop
exit:

[DISABLE]
aMana:
db 89 46 40     // mov [esi+40],eax
db 80 7E 55 00  // cmp byte ptr [esi+55],00
dealloc(newmem)
unregistersymbol(aMana)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Inf. Coins     (never decreases)"</Description>
      <Options moHideChildren="1"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"&gt;&gt; Normal"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,128)
label(end)
label(exit)
label(loosing)
label(aCoins)
registersymbol(aCoins)
aobscan(aobCoins,53 8B F1 8B FA 80 7E ?? ?? 74 ?? 80 ?? ?? ?? ?? ?? ?? 75)

newmem:
push ebx
mov esi,ecx
cmp edx,[esi+2C]
jng loosing
jmp end
loosing:
mov edx,[esi+2C]
end:
mov edi,edx
jmp exit

aobCoins:
aCoins:
jmp newmem
exit:

[DISABLE]
aCoins:
db 53     // push ebx
db 8B F1  // mov esi,ecx
db 8B FA  // mov edi,edx
dealloc(newmem)
unregistersymbol(aCoins)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"&gt;&gt; Received Coins multiplied with 10"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(newmem,128)
label(end)
label(exit)
label(loosing)
label(aCoins)
registersymbol(aCoins)
aobscan(aobCoins,53 8B F1 8B FA 80 7E ?? ?? 74 ?? 80 ?? ?? ?? ?? ?? ?? 75)

newmem:
push ebx
mov esi,ecx
cmp edx,[esi+2C]
jng loosing
// multiply received coins by 10
push eax
mov eax,[esi+2C]
sub edx,eax
mov eax,0A
mul edx
mov edx,eax
add edx,[esi+2C]
pop eax
jmp end
// ##
loosing:
mov edx,[esi+2C]
end:
mov edi,edx
jmp exit

aobCoins:
aCoins:
jmp newmem
exit:

[DISABLE]
aCoins:
db 53     // push ebx
db 8B F1  // mov esi,ecx
db 8B FA  // mov edi,edx
dealloc(newmem)
unregistersymbol(aCoins)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
