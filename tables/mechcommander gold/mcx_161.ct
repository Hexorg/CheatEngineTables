<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="19">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"MechCommander Gold AOB script"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(aobCreditReader,MCX.EXE,8B 15 ?? ?? ?? ?? 52 8D 45 D4 68 ?? ?? ?? ?? 50 E8)
aobscanmodule(aobPilotSkillReader,MCX.EXE,0F BE 51 4F 89 55 F0 DB 45 F0)
aobscanmodule(aobMechEquipCalc1,MCX.EXE,D8 86 A8 00 00 00 8B 8E 44 02 00 00)
aobscanmodule(aobMechEquipCalc2,MCX.EXE,D8 86 B0 00 00 00 D9 9E B0 00 00 00)
aobscanmodule(aobMechEquipCalc3,MCX.EXE,D8 65 10 8B 40 38 8B 4D F4 8B 50 14)
aobscanmodule(aobMechEquipCalc4,MCX.EXE,D8 65 10 3B D1 89 45 10 D9 9B B0 00)
aobscanmodule(aobEquipmentStackUpdater,MCX.EXE,8B 48 2C 49 89 48 2C 74 ?? 8B CF)
aobscanmodule(aobDamageTester,MCX.EXE,D9 46 08 D8 1C D1 DF E0 F6 C4 41 0F 85)
aobscanmodule(aobDropWeightTester,MCX.EXE,DB 05 AC 80 80 00 DE D9 DF E0 F6 C4 01 74 ?? 8B 81 ?? ?? 00 00 85 C0)
aobscanmodule(aobMechSelector,MCX.EXE,39 81 CC 04 00 00 74 ?? 50)

alloc(newmem,4096)

label(aobCreditReader_r)
label(aobCreditReader_i)
registersymbol(aobCreditReader_r)
registersymbol(aobCreditReader_i)

label(lblCreditReader)
label(lblCreditReaderSkip)
label(lblCreditReaderRet)

label(bEnableMinCredits)
label(iMinCredits)
registersymbol(bEnableMinCredits)
registersymbol(iMinCredits)

label(aobPilotSkillReader_r)
registersymbol(aobPilotSkillReader_r)

label(lblPilotSkillReader)
label(lblPilotSkillReaderSkip)
label(lblPilotSkillReaderRet)

label(bEnableSuperPilot)
registersymbol(bEnableSuperPilot)

label(aobMechEquipCalc1_r)
label(aobMechEquipCalc2_r)
label(aobMechEquipCalc3_r)
label(aobMechEquipCalc4_r)
registersymbol(aobMechEquipCalc1_r)
registersymbol(aobMechEquipCalc2_r)
registersymbol(aobMechEquipCalc3_r)
registersymbol(aobMechEquipCalc4_r)

label(lblMechEquipCalc1)
label(lblMechEquipCalc2)
label(lblMechEquipCalc3)
label(lblMechEquipCalc4)
label(lblMechEquipCalc1Skip)
label(lblMechEquipCalc2Skip)
label(lblMechEquipCalc3Skip)
label(lblMechEquipCalc4Skip)
label(lblMechEquipCalc1Ret)
label(lblMechEquipCalc2Ret)
label(lblMechEquipCalc3Ret)
label(lblMechEquipCalc4Ret)

label(bEnableInfiniteMechEquipment)
registersymbol(bEnableInfiniteMechEquipment)

label(pLastMech)
registersymbol(pLastMech)

label(aobEquipmentStackUpdater_r)
registersymbol(aobEquipmentStackUpdater_r)

label(lblEquipmentStackUpdater)
label(lblEquipmentStackUpdaterSkip)
label(lblEquipmentStackUpdaterRet)

label(bEnableInfiniteEquipment)
registersymbol(bEnableInfiniteEquipment)

label(aobDamageTester_r)
registersymbol(aobDamageTester_r)

label(lblDamageTester)
label(lblDamageTesterSkip)
label(lblDamageTesterRet)
label(lblDamageTesterEnemy)

label(bEnableFriendlyDamageMod)
label(fFriendlyDamageMod)
label(bEnableNonFriendlyDamageMod)
label(fNonFriendlyDamageMod)
registersymbol(bEnableFriendlyDamageMod)
registersymbol(fFriendlyDamageMod)
registersymbol(bEnableNonFriendlyDamageMod)
registersymbol(fNonFriendlyDamageMod)

label(aobDropWeightTester_r)
label(aobDropWeightTester_i)
registersymbol(aobDropWeightTester_r)
registersymbol(aobDropWeightTester_i)

label(lblDropWeightTester)
label(lblDropWeightTesterSkip)
label(lblDropWeightTesterRet)

label(bEnableAnyWeightDrop)
registersymbol(bEnableAnyWeightDrop)

label(fWeightTemp)
registersymbol(fWeightTemp)

label(aobMechSelector_r)
registersymbol(aobMechSelector_r)

label(lblMechSelector)
label(lblMechSelectorSkip)
label(lblMechSelectorRet)

label(bEnableMechHardener)
registersymbol(bEnableMechHardener)

label(pLastHardenedMech)
registersymbol(pLastHardenedMech)

newmem:
bEnableMinCredits:
dd 1
iMinCredits:
dd (int)25000
bEnableSuperPilot:
dd 1
bEnableInfiniteMechEquipment:
dd 1
bEnableInfiniteEquipment:
dd 1
bEnableMechHardener:
dd 1
bEnableAnyWeightDrop:
dd 1
bEnableFriendlyDamageMod:
dd 1
fFriendlyDamageMod:
dd (float)0.75
bEnableNonFriendlyDamageMod:
dd 1
fNonFriendlyDamageMod:
dd (float)1.25

lblCreditReader:
cmp dword ptr [bEnableMinCredits],1
jne short lblCreditReaderSkip
mov eax,[iMinCredits]
mov edx,[aobCreditReader_i+2]
cmp dword ptr [edx],eax
jge short lblCreditReaderSkip
mov dword ptr [edx],eax
lblCreditReaderSkip:
readmem(aobCreditReader,6)
jmp lblCreditReaderRet
aobCreditReader_i:
readmem(aobCreditReader,6)

lblPilotSkillReader:
cmp dword ptr [bEnableSuperPilot],1
jne short lblPilotSkillReaderSkip
pushad
push 12
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblPilotSkillReaderSkip
mov dword ptr [ecx+4C],4F4F4F4F
mov dword ptr [ecx+54],4F4F4F4F
lblPilotSkillReaderSkip:
db 0F BE 51 4F 89 55 F0
jmp lblPilotSkillReaderRet

lblMechEquipCalc1:
cmp dword ptr [bEnableInfiniteMechEquipment],1
jne short lblMechEquipCalc1Skip
jmp lblMechEquipCalc1Ret
lblMechEquipCalc1Skip:
db D8 86 A8 00 00 00
jmp lblMechEquipCalc1Ret

lblMechEquipCalc2:
mov dword ptr [pLastMech],esi
cmp dword ptr [bEnableInfiniteMechEquipment],1
jne short lblMechEquipCalc2Skip
jmp lblMechEquipCalc2Ret
lblMechEquipCalc2Skip:
db D8 86 B0 00 00 00
jmp lblMechEquipCalc2Ret

lblMechEquipCalc3:
db D8 65 10 8B 40 38
fst dword ptr [fWeightTemp]
cmp dword ptr [fWeightTemp],0
jge short lblMechEquipCalc3Skip
fstp st(0)
fldz
lblMechEquipCalc3Skip:
jmp lblMechEquipCalc3Ret

lblMechEquipCalc4:
mov dword ptr [pLastMech],ebx
db D8 65 10 3B D1
pushfd
fst dword ptr [fWeightTemp]
cmp dword ptr [fWeightTemp],0
jge short lblMechEquipCalc4Skip
fstp st(0)
fldz
lblMechEquipCalc4Skip:
popfd
jmp lblMechEquipCalc4Ret
pLastMech:
dd 0

lblEquipmentStackUpdater:
db 8B 48 2C
cmp dword ptr [bEnableInfiniteEquipment],1
jne short lblEquipmentStackUpdaterSkip
inc ecx
lblEquipmentStackUpdaterSkip:
db 49 89 48 2C
jmp lblEquipmentStackUpdaterRet

lblDamageTester:
cmp dword ptr [ebx+000001D8],0
jne short lblDamageTesterEnemy
cmp dword ptr [bEnableFriendlyDamageMod],1
jne short lblDamageTesterSkip
fld dword ptr [esi+08]
fmul dword ptr [fFriendlyDamageMod]
fstp dword ptr [esi+08]
lblDamageTesterSkip:
db D9 46 08 D8 1C D1
jmp lblDamageTesterRet
lblDamageTesterEnemy:
cmp dword ptr [bEnableNonFriendlyDamageMod],1
jne short lblDamageTesterSkip
fld dword ptr [esi+08]
fmul dword ptr [fNonFriendlyDamageMod]
fstp dword ptr [esi+08]
jmp short lblDamageTesterSkip

lblDropWeightTester:
push ebx
cmp dword ptr [bEnableAnyWeightDrop],1
jne short lblDropWeightTesterSkip
fist dword ptr [fWeightTemp]
mov ebx,[aobDropWeightTester_i+2]
mov eax,[ebx]
cmp dword ptr [fWeightTemp],eax
jle short lblDropWeightTesterSkip
mov eax,[fWeightTemp]
mov dword ptr [ebx],eax
pop ebx
xor eax,eax
test eax,eax
jmp lblDropWeightTesterRet
lblDropWeightTesterSkip:
pop ebx
readmem(aobDropWeightTester,13)
jmp lblDropWeightTesterRet
aobDropWeightTester_i:
readmem(aobDropWeightTester,13)
fWeightTemp:
dd 0

lblMechSelector:
test eax,eax
jz short lblMechSelectorSkip
cmp dword ptr [bEnableMechHardener],1
jne short lblMechSelectorSkip
pushad
push 11
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne short lblMechSelectorSkip
mov dword ptr [pLastHardenedMech],eax
mov dword ptr [eax+C9],78787878
mov dword ptr [eax+CD],78787878
mov dword ptr [eax+D1],78787878
mov dword ptr [eax+D5],78787878
mov dword ptr [eax+D9],78787878
mov word ptr [eax+DD],7878
lblMechSelectorSkip:
db 39 81 CC 04 00 00
jmp lblMechSelectorRet
pLastHardenedMech:
dd 0

aobMechSelector:
aobMechSelector_r:
jmp lblMechSelector
nop
lblMechSelectorRet:

aobDropWeightTester:
aobDropWeightTester_r:
jmp lblDropWeightTester
nop
nop
nop
nop
nop
nop
nop
nop
lblDropWeightTesterRet:

aobDamageTester:
aobDamageTester_r:
jmp lblDamageTester
nop
lblDamageTesterRet:

aobEquipmentStackUpdater:
aobEquipmentStackUpdater_r:
jmp lblEquipmentStackUpdater
nop
nop
lblEquipmentStackUpdaterRet:

aobMechEquipCalc1:
aobMechEquipCalc1_r:
jmp lblMechEquipCalc1
nop
lblMechEquipCalc1Ret:

aobMechEquipCalc2:
aobMechEquipCalc2_r:
jmp lblMechEquipCalc2
nop
lblMechEquipCalc2Ret:

aobMechEquipCalc3:
aobMechEquipCalc3_r:
jmp lblMechEquipCalc3
nop
lblMechEquipCalc3Ret:

aobMechEquipCalc4:
aobMechEquipCalc4_r:
jmp lblMechEquipCalc4
lblMechEquipCalc4Ret:

aobPilotSkillReader:
aobPilotSkillReader_r:
jmp lblPilotSkillReader
nop
nop
lblPilotSkillReaderRet:

aobCreditReader:
aobCreditReader_r:
jmp lblCreditReader
nop
lblCreditReaderRet:

[DISABLE]
aobCreditReader_r:
readmem(aobCreditReader_i,6)

unregistersymbol(aobCreditReader_r)
unregistersymbol(aobCreditReader_i)

unregistersymbol(bEnableMinCredits)
unregistersymbol(iMinCredits)

aobPilotSkillReader_r:
db 0F BE 51 4F 89 55 F0

unregistersymbol(aobPilotSkillReader_r)

unregistersymbol(bEnableSuperPilot)

aobMechEquipCalc1_r:
db D8 86 A8 00 00 00

aobMechEquipCalc2_r:
db D8 86 B0 00 00 00

aobMechEquipCalc3_r:
db D8 65 10 8B 40 38

aobMechEquipCalc4_r:
db D8 65 10 3B D1

unregistersymbol(aobMechEquipCalc1_r)
unregistersymbol(aobMechEquipCalc2_r)
unregistersymbol(aobMechEquipCalc3_r)
unregistersymbol(aobMechEquipCalc4_r)

unregistersymbol(bEnableInfiniteMechEquipment)

unregistersymbol(pLastMech)

aobEquipmentStackUpdater_r:
db 8B 48 2C 49 89 48 2C

unregistersymbol(aobEquipmentStackUpdater_r)

unregistersymbol(bEnableInfiniteEquipment)

aobDamageTester_r:
db D9 46 08 D8 1C D1

unregistersymbol(aobDamageTester_r)

unregistersymbol(bEnableFriendlyDamageMod)
unregistersymbol(fFriendlyDamageMod)
unregistersymbol(bEnableNonFriendlyDamageMod)
unregistersymbol(fNonFriendlyDamageMod)

aobDropWeightTester_r:
readmem(aobDropWeightTester_i,13)

unregistersymbol(aobDropWeightTester_r)
unregistersymbol(aobDropWeightTester_i)

unregistersymbol(bEnableAnyWeightDrop)

unregistersymbol(fWeightTemp)

aobMechSelector_r:
db 39 81 CC 04 00 00

unregistersymbol(aobMechSelector_r)

unregistersymbol(bEnableMechHardener)

unregistersymbol(pLastHardenedMech)

dealloc(newmem)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>89</ID>
          <Description>"Logistics"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>4080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1</ID>
              <Description>"bEnableMinCredits"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableMinCredits</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>2</ID>
                  <Description>"iMinCredits"</Description>
                  <Color>FF0000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>iMinCredits</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>82</ID>
              <Description>"bEnableSuperPilot (hold ALT when adding to mech)"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableSuperPilot</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>83</ID>
              <Description>"bEnableInfiniteMechEquipment"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableInfiniteMechEquipment</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>84</ID>
              <Description>"bEnableInfiniteEquipment (on equipping)"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableInfiniteEquipment</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>93</ID>
              <Description>"bEnableMechHardener (CTRL-click mech in MechBay)"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableMechHardener</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>91</ID>
              <Description>"bEnableAnyWeightDrop"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableAnyWeightDrop</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>90</ID>
          <Description>"Combat"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>4080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>85</ID>
              <Description>"bEnableFriendlyDamageMod"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableFriendlyDamageMod</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>86</ID>
                  <Description>"fFriendlyDamageMod"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fFriendlyDamageMod</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>87</ID>
              <Description>"bEnableNonFriendlyDamageMod"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>bEnableNonFriendlyDamageMod</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>88</ID>
                  <Description>"fNonFriendlyDamageMod"</Description>
                  <Color>FF0000</Color>
                  <VariableType>Float</VariableType>
                  <Address>fNonFriendlyDamageMod</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
</CheatTable>
