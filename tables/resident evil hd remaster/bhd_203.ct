<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthReadAOB,83 BB BC 13 00 00 00 7E 0A)
registersymbol(healthReadAOB)
aobscan(currentAmmoReadAOB,83 BE FC 0F 00 00 00 7F ** C7 46 04 00 00 00 00)
registersymbol(currentAmmoReadAOB)
aobscan(itemReadInMenuAOB,0F 43 C2 83 38 00 75)
registersymbol(itemReadInMenuAOB)
aobscan(itemReadOutsideMenuAOB,0F 43 CF 39 19 74)
registersymbol(itemReadOutsideMenuAOB)
aobscan(currentAmmoReadOnExitMenuAOB,89 81 FC 0F 00 00 3B C2)
registersymbol(currentAmmoReadOnExitMenuAOB)
aobscan(gameTimeWriteAOB,F3 0F 11 81 4C 47 0E 00 72 0A)
registersymbol(gameTimeWriteAOB)

label(bFullHealth)
registersymbol(bFullHealth)
label(bFullAmmo)
registersymbol(bFullAmmo)
label(bFakeInkRibbon)
registersymbol(bFakeInkRibbon)
label(pHealth)
registersymbol(pHealth)
label(pCurAmmo)
registersymbol(pCurAmmo)
label(pItem)
registersymbol(pItem)
label(pGameStats)
registersymbol(pGameStats)
label(fCustomMaxGameTime)
registersymbol(fCustomMaxGameTime)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

label(newmem6)
label(returnhere6)
label(originalcode6)
label(exit6)

label(newmem11)
label(returnhere11)
label(originalcode11)
label(exit11)
label(chkbfakeitems11)
label(testa11)

label(newmem17)
label(returnhere17)
label(originalcode17)
label(exit17)

label(newmem24)
label(returnhere24)
label(originalcode24)
label(exit24)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pHealth],ebx
cmp byte ptr [bFullHealth],1
jne originalcode
push eax
mov eax,[ebx+13c0]
mov [ebx+13bc],eax
pop eax

originalcode:
cmp dword ptr [ebx+000013BC],00

exit:
jmp returnhere

///

newmem2:
mov [pCurAmmo],esi
cmp byte ptr [bFullAmmo],1
jne originalcode2
push eax
mov eax,[esi+1000]
mov [esi+ffc],eax
pop eax

originalcode2:
cmp dword ptr [esi+00000FFC],00

exit2:
jmp returnhere2

///

newmem6:
cmovae eax,edx//
test ebp,ebp
jnz originalcode6
mov [pItem],eax

originalcode6:
//cmovae eax,edx
cmp dword ptr [eax],00

exit6:
jmp returnhere6

///

newmem11:
cmovae ecx,edi//
push eax
test eax,eax
jnz chkbfakeitems11
mov [pItem],ecx

chkbfakeitems11:
movzx eax,byte ptr [bFakeInkRibbon]
cmp ebx,eax
je exit11
jmp originalcode11

testa11:
cmp [ecx],ebx
jmp exit11

originalcode11:
//cmovae ecx,edi
cmp [ecx],ebx

exit11:
pop eax//
jmp returnhere11

///

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCurAmmo],ecx
cmp byte ptr [bFullAmmo],1
jne originalcode17
mov eax,edx

originalcode17:
mov [ecx+00000FFC],eax

exit17:
jmp returnhere17

///

newmem24:
mov [pGameStats],ecx
pushfd
cmp dword ptr [fCustomMaxGameTime],0
je originalcode24
comiss xmm0,[fCustomMaxGameTime]
jbe originalcode24
movss xmm0,[fCustomMaxGameTime]

originalcode24:
popfd
movss [ecx+000E474C],xmm0

exit24:
jmp returnhere24

///
bFullHealth:
db 0
bFullAmmo:
db 0
bFakeInkRibbon:
db 0
pHealth:
dd 0
pCurAmmo:
dd 0
pItem:
dd 0
pGameStats:
dd 0
fCustomMaxGameTime:
dd 0
///

healthReadAOB: //"bhd.exe"+1FAFC:
jmp newmem
nop
nop
returnhere:

currentAmmoReadAOB: //"bhd.exe"+25CFDE:
jmp newmem2
nop
nop
returnhere2:

itemReadInMenuAOB: //"bhd.exe"+8C8F6:
jmp newmem6
nop
returnhere6:

itemReadOutsideMenuAOB: //"bhd.exe"+8B865:
jmp newmem11
returnhere11:

currentAmmoReadOnExitMenuAOB: //"bhd.exe"+25C4DA:
jmp newmem17
nop
returnhere17:

gameTimeWriteAOB: //"bhd.exe"+8C40C:
jmp newmem24
nop
nop
nop
returnhere24:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthReadAOB: //"bhd.exe"+1FAFC:
db 83 BB BC 13 00 00 00
//Alt: cmp dword ptr [ebx+000013BC],00
unregistersymbol(healthReadAOB)
currentAmmoReadAOB: //"bhd.exe"+25CFDE:
db 83 BE FC 0F 00 00 00
//Alt: cmp dword ptr [esi+00000FFC],00
unregistersymbol(currentAmmoReadAOB)
itemReadInMenuAOB: //"bhd.exe"+8C8F6:
db 0F 43 C2 83 38 00
//Alt: cmovae eax,edx
//Alt: cmp dword ptr [eax],00
unregistersymbol(itemReadInMenuAOB)
itemReadOutsideMenuAOB: //"bhd.exe"+8B865:
db 0F 43 CF 39 19
//Alt: cmovae ecx,edi
//Alt: cmp [ecx],ebx
unregistersymbol(itemReadOutsideMenuAOB)
currentAmmoReadOnExitMenuAOB: //"bhd.exe"+25C4DA:
db 89 81 FC 0F 00 00
//Alt: mov [ecx+00000FFC],eax
unregistersymbol(currentAmmoReadOnExitMenuAOB)
gameTimeWriteAOB: //"bhd.exe"+8C40C:
db F3 0F 11 81 4C 47 0E 00
//Alt: movss [ecx+000E474C],xmm0
unregistersymbol(gameTimeWriteAOB)

unregistersymbol(bFullHealth)
unregistersymbol(bFakeInkRibbon)
unregistersymbol(pHealth)
unregistersymbol(pCurAmmo)
unregistersymbol(pItem)
unregistersymbol(pGameStats)
unregistersymbol(fCustomMaxGameTime)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Activate</Action>
          <Keys>
            <Key>123</Key>
          </Keys>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>36</ID>
          <Description>"[Scripts]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <Hotkeys>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>122</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>94</ID>
              <Description>"[Health &amp; Misc. Scripts]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"Undead"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Activated="1"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthWriteAOB,89 B7 BC 13 00 00 5F 8B C6)
registersymbol(healthWriteAOB)
aobscan(deadFlag1SetAOB,8B 44 24 08 5F 5E 8B E5 5D C2 14 00)
registersymbol(deadFlag1SetAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHealth],edi
jne originalcode

mov eax,#479
mov ebx,[edi+13c0]
cmp byte ptr [bFullHealth],1
cmove eax,ebx
cmp esi,eax
cmovnge esi,eax

originalcode:
mov [edi+000013BC],esi

exit:
jmp returnhere

///

newmem2:
xor eax,eax
mov [esp+8],eax

originalcode2:
pop edi
pop esi
mov esp,ebp
pop ebp

exit2:
jmp returnhere2

///

healthWriteAOB: //"bhd.exe"+10C2A2:
jmp newmem
nop
returnhere:

deadFlag1SetAOB+4: //"bhd.exe"+1454D:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthWriteAOB: //"bhd.exe"+10C2A2:
db 89 B7 BC 13 00 00
//Alt: mov [edi+000013BC],esi
unregistersymbol(healthWriteAOB)
deadFlag1SetAOB+4: //"bhd.exe"+1454D:
db 5F 5E 8B E5 5D
//Alt: pop edi
//Alt: pop esi
//Alt: mov esp,ebp
//Alt: pop ebp
unregistersymbol(deadFlag1SetAOB)
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>122</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>78</ID>
                      <Description>"Lock at Full Health"</Description>
                      <LastState Activated="0"/>
                      <Color>80000008</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFullHealth:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFullHealth:
db 0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>110</ID>
                  <Description>"Game Time Mod"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Activated="1"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
fCustomMaxGameTime:
dd (float)8280.0 //2h18m


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
fCustomMaxGameTime:
dd 0
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>122</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>111</ID>
                      <Description>"Custom Max Game Time (Default: 2h18m)"</Description>
                      <LastState Value="8280" Activated="0" RealAddress="316D0112"/>
                      <Color>80000008</Color>
                      <VariableType>Float</VariableType>
                      <Address>fCustomMaxGameTime</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>92</ID>
                  <Description>"Unlock All Doors/Files/Maps &amp; 100% Discovery"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
[pItem]+E4DD4:
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff ffffffff ffffffff ffffffff
dd ffffffff

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//by mgr.inz.Player, rapier
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>90</ID>
                  <Description>"Unlock All Movies"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
[pItem]+E4A78:
dw FFFF

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>95</ID>
              <Description>"[Ammo &amp; Item Scripts]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>12</ID>
                  <Description>"Inf. Ammo"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Activated="1"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoChkZeroOnFireAOB,39 81 FC 0F 00 00 0F 9F C0 C3)
registersymbol(ammoChkZeroOnFireAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)
label(setfullammo)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pCurAmmo],ecx
cmp byte ptr [bFullAmmo],1
je setfullammo

cmp dword ptr [ecx+ffc],2
jge originalcode
mov [ecx+ffc],2
jmp originalcode

setfullammo:
mov eax,[ecx+1000]
add eax,[ecx+1004]
mov [ecx+ffc],eax
xor eax,eax

originalcode:
cmp [ecx+00000FFC],eax

exit:
jmp returnhere

ammoChkZeroOnFireAOB: //"bhd.exe"+25C191:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
ammoChkZeroOnFireAOB: //"bhd.exe"+25C191:
db 39 81 FC 0F 00 00
//Alt: cmp [ecx+00000FFC],eax
unregistersymbol(ammoChkZeroOnFireAOB)
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>122</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>86</ID>
                      <Description>"Lock at Full Ammo"</Description>
                      <LastState Activated="0"/>
                      <Color>80000008</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFullAmmo:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFullAmmo:
db 0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>32</ID>
                  <Description>"Inf. Quick Reload"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Activated="1"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(ammoItemReadOnFastReloadAOB,8B 40 04 3B 44 24 14)
registersymbol(ammoItemReadOnFastReloadAOB)
aobscan(fullClipChkOnReloadAOB,8B 85 FC 0F 00 00 8B 8D 00 10 00 00 3B C1 7D E0)
registersymbol(fullClipChkOnReloadAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
push ebx
mov ecx,[esp+40]
cmp [pCurAmmo],ecx
jne originalcode2
mov ebx,[ecx+1000]
sub ebx,[ecx+ffc]
inc ebx
cmp [eax+4],ebx
jge originalcode2
mov [eax+4],ebx

originalcode2:
pop ebx//
pop ecx//
mov eax,[eax+04]
cmp eax,[esp+14]

exit2:
jmp returnhere2

///

ammoItemReadOnFastReloadAOB: //"bhd.exe"+24F64F:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
ammoItemReadOnFastReloadAOB: //"bhd.exe"+24F64F:
db 8B 40 04 3B 44 24 14
//Alt: mov eax,[eax+04]
//Alt: cmp eax,[esp+14]
unregistersymbol(ammoItemReadOnFastReloadAOB)
unregistersymbol(fullClipChkOnReloadAOB)
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>122</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>74</ID>
                      <Description>"Ammo Sharing for Most Weapons"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Activated="1"/>
                      <Color>80000008</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(correctAmmoChkAOB,39 02 75 18 8D 43 38)
registersymbol(correctAmmoChkAOB)

correctAmmoChkAOB+2: //"bhd.exe"+24F642:
db 90 90
//Alt: nop
//Alt: nop


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
correctAmmoChkAOB+2: //"bhd.exe"+24F642:
db 75 18
//Alt: jne correctAmmoChkAOB+1c //bhd.exe+24F65C
unregistersymbol(correctAmmoChkAOB)
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Activate</Action>
                          <Keys>
                            <Key>121</Key>
                          </Keys>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>75</ID>
                          <Description>"Ammo Ignored for Most Weapons"</Description>
                          <LastState Activated="1"/>
                          <Color>80000008</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(isAmmoChkAOB,F6 40 50 04 74 67)
registersymbol(isAmmoChkAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebp+1000]
mov [ebp+ffc],eax
mov ecx,[ebp+1000]
jmp fullClipChkOnReloadAOB+10

originalcode:
//mov eax,[ebp+00000FFC]

exit:
jmp returnhere

///

fullClipChkOnReloadAOB: //"bhd.exe"+24F513:
jmp newmem
nop
returnhere:

isAmmoChkAOB+4: //"bhd.exe"+24F61D:
db 90 90
//Alt: nop
//Alt: nop




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
fullClipChkOnReloadAOB: //"bhd.exe"+24F513:
db 8B 85 FC 0F 00 00
//Alt: mov eax,[ebp+00000FFC]
isAmmoChkAOB+4: //"bhd.exe"+24F61D:
db 74 67
//Alt: je isAmmoChkAOB+6d //bhd.exe+24F686
unregistersymbol(isAmmoChkAOB)
</AssemblerScript>
                          <Hotkeys>
                            <Hotkey>
                              <Action>Toggle Activation</Action>
                              <Keys>
                                <Key>120</Key>
                              </Keys>
                              <ID>0</ID>
                            </Hotkey>
                          </Hotkeys>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>84</ID>
                      <Description>"Reload with Full Clip"</Description>
                      <LastState Activated="1"/>
                      <Color>80000008</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
fullClipChkOnReloadAOB+e: //"bhd.exe"+24F521:
db 90 90
//Alt: nop
//Alt: nop

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
fullClipChkOnReloadAOB+e: //"bhd.exe"+24F521:
db 7D E0
//Alt: jnl fullClipChkOnReloadAOB-10 //bhd.exe+24F503
</AssemblerScript>
                      <Hotkeys>
                        <Hotkey>
                          <Action>Activate</Action>
                          <Keys>
                            <Key>119</Key>
                          </Keys>
                          <ID>0</ID>
                        </Hotkey>
                      </Hotkeys>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>67</ID>
                  <Description>"Inf. Defensive Items"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(defensiveItemReadOnUseAOB,8B 3F 85 FF 74 6A 4F)
registersymbol(defensiveItemReadOnUseAOB)
aobscan(defensiveItemReadOnEquipSelectAOB,8B 84 88 88 50 00 00 C2 04 00)
registersymbol(defensiveItemReadOnEquipSelectAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(defensiveitemchkloop2)
label(defensiveitemchkloopendchk2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [edi],2
jge originalcode
mov [edi],2

originalcode:
mov edi,[edi]
test edi,edi
je defensiveItemReadOnUseAOB+70 //bhd.exe+24F4A9

exit:
jmp returnhere

///

newmem2:
push ecx
xor ecx,ecx
defensiveitemchkloop2:
cmp dword ptr [eax+ecx*4+5088],1
jge defensiveitemchkloopendchk2
mov dword ptr [eax+ecx*4+5088],1
defensiveitemchkloopendchk2:
inc ecx
cmp ecx,2
jl defensiveitemchkloop2

originalcode2:
pop ecx
mov eax,[eax+ecx*4+00005088]

exit2:
jmp returnhere2

///

defensiveItemReadOnUseAOB: //"bhd.exe"+24F439:
jmp newmem
nop
returnhere:

defensiveItemReadOnEquipSelectAOB: //"bhd.exe"+E5B87:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
defensiveItemReadOnUseAOB: //"bhd.exe"+24F439:
db 8B 3F 85 FF 74 6A
//Alt: mov edi,[edi]
//Alt: test edi,edi
//Alt: je defensiveItemReadOnUseAOB+70 //bhd.exe+24F4A9
unregistersymbol(defensiveItemReadOnUseAOB)
defensiveItemReadOnEquipSelectAOB: //"bhd.exe"+E5B87:
db 8B 84 88 88 50 00 00
//Alt: mov eax,[eax+ecx*4+00005088]
unregistersymbol(defensiveItemReadOnEquipSelectAOB)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>70</ID>
                  <Description>"Inf. Defensive Items Alt"</Description>
                  <LastState Activated="1"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(defensiveItemChkZeroNextAfterEmptyAOB,83 38 00 76 D8 85 C9)
registersymbol(defensiveItemChkZeroNextAfterEmptyAOB)
aobscan(defensiveItemReadOnEquipSelectAOB,8B 84 88 88 50 00 00 C2 04 00)
registersymbol(defensiveItemReadOnEquipSelectAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)
label(defensiveitemchkloop2)
label(defensiveitemchkloopendchk2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [eax],1
jge originalcode
mov dword ptr [eax],1

originalcode:
cmp dword ptr [eax],00
jna defensiveItemChkZeroNextAfterEmptyAOB-23 //bhd.exe+24F454

exit:
jmp returnhere

///

newmem2:
push ecx
xor ecx,ecx
defensiveitemchkloop2:
cmp dword ptr [eax+ecx*4+5088],1
jge defensiveitemchkloopendchk2
mov dword ptr [eax+ecx*4+5088],1
defensiveitemchkloopendchk2:
inc ecx
cmp ecx,2
jl defensiveitemchkloop2

originalcode2:
pop ecx
mov eax,[eax+ecx*4+00005088]

exit2:
jmp returnhere2

///

defensiveItemChkZeroNextAfterEmptyAOB: //"bhd.exe"+24F477:
jmp newmem
returnhere:

defensiveItemReadOnEquipSelectAOB: //"bhd.exe"+E5B87:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
defensiveItemChkZeroNextAfterEmptyAOB: //"bhd.exe"+24F477:
db 83 38 00 76 D8
//Alt: cmp dword ptr [eax],00
//Alt: jna defensiveItemChkZeroNextAfterEmptyAOB-23 //bhd.exe+24F454
unregistersymbol(defensiveItemChkZeroNextAfterEmptyAOB)
defensiveItemReadOnEquipSelectAOB: //"bhd.exe"+E5B87:
db 8B 84 88 88 50 00 00
//Alt: mov eax,[eax+ecx*4+00005088]
unregistersymbol(defensiveItemReadOnEquipSelectAOB)
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>122</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>29</ID>
                  <Description>"Inf. Item (Hold MRB to Use)"</Description>
                  <LastState Activated="1"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(itemIDQuantityWriteAfterUseAOB,89 39 89 41 04 80 7E 1C 00)
registersymbol(itemIDQuantityWriteAfterUseAOB)
aobscan(itemSetEmptyAfterUseAOB,8D 3C F7 C7 07 00 00 00 00 C7 47 04 00 00 00 00)
registersymbol(itemSetEmptyAfterUseAOB)
aobscan(itemChkZeroOnUseAOB,83 78 04 00 74 DD)
registersymbol(itemChkZeroOnUseAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test edi,edi
jnz originalcode
pushad
push 02 //MRB
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne originalcode
mov edi,[ecx]
cmp eax,1
jge originalcode
mov eax,1

originalcode:
mov [ecx],edi
mov [ecx+04],eax

exit:
jmp returnhere

///

newmem2:
pushad
push 02 //MRB
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je exit2

originalcode2:
mov [edi],00000000
mov [edi+04],00000000

exit2:
jmp returnhere2

///

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [eax+4],1
jge originalcode6
mov dword ptr [eax+4],1

originalcode6:
cmp dword ptr [eax+04],00
je itemChkZeroOnUseAOB-1d //bhd.exe+E60BC

exit6:
jmp returnhere6

///

itemIDQuantityWriteAfterUseAOB: //"bhd.exe"+8C724:
jmp newmem
returnhere:

itemSetEmptyAfterUseAOB+3: //"bhd.exe"+8CB7C:
jmp newmem2
nop
nop
nop
nop
nop
nop
nop
nop
returnhere2:

itemChkZeroOnUseAOB: //"bhd.exe"+E60D9:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
itemIDQuantityWriteAfterUseAOB: //"bhd.exe"+8C724:
db 89 39 89 41 04
//Alt: mov [ecx],edi
//Alt: mov [ecx+04],eax
unregistersymbol(itemIDQuantityWriteAfterUseAOB)
itemSetEmptyAfterUseAOB+3: //"bhd.exe"+8CB7C:
db C7 07 00 00 00 00 C7 47 04 00 00 00 00
//Alt: mov [edi],00000000
//Alt: mov [edi+04],00000000
unregistersymbol(itemSetEmptyAfterUseAOB)
itemChkZeroOnUseAOB: //"bhd.exe"+E60D9:
db 83 78 04 00 74 DD
//Alt: cmp dword ptr [eax+04],00
//Alt: je itemChkZeroOnUseAOB-1d //bhd.exe+E60BC
unregistersymbol(itemChkZeroOnUseAOB)
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>122</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>97</ID>
              <Description>"[Fake Item Scripts]"</Description>
              <Options moHideChildren="1"/>
              <LastState Activated="1"/>
              <Color>80000008</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(keyChkOnDoorAccessAOB,0F 43 C1 8B 00)
registersymbol(keyChkOnDoorAccessAOB)

label(bFakeItems)
registersymbol(bFakeItems)
label(bFakeLockPick)
registersymbol(bFakeLockPick)
label(bFakeOldKey)
registersymbol(bFakeOldKey)
label(bFakeSwordKey)
registersymbol(bFakeSwordKey)
label(bFakeArmorKey)
registersymbol(bFakeArmorKey)
label(bFakeShieldKey)
registersymbol(bFakeShieldKey)
label(bFakeHelmetKey)
registersymbol(bFakeHelmetKey)
label(bFakeResidence001Key)
registersymbol(bFakeResidence001Key)
label(bFakeResidence003Key)
registersymbol(bFakeResidence003Key)
label(bFakeLabPowerAreaKey)
registersymbol(bFakeLabPowerAreaKey)
label(bFakeLabMasterKey)
registersymbol(bFakeLabMasterKey)
label(bFakeClosetKey)
registersymbol(bFakeClosetKey)
label(bFakeEmblemKey)
registersymbol(bFakeEmblemKey)
label(bFakeControlRoomKey)
registersymbol(bFakeControlRoomKey)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmovae eax,ecx//
mov eax,[eax]
cmp byte ptr [bFakeItems+esi],0
je originalcode
movzx eax,byte ptr [bFakeItems+esi]

originalcode:
//cmovae eax,ecx
//mov eax,[eax]

exit:
jmp returnhere

///
bFakeItems:
db 0
bFakeLockPick:
db 0
bFakeOldKey:
db 0
bFakeSwordKey:
db 0
bFakeArmorKey:
db 0
bFakeShieldKey:
db 0
bFakeHelmetKey:
db 0
bFakeResidence001Key:
db 0
bFakeResidence003Key:
db 0
bFakeLabPowerAreaKey:
db 0
bFakeLabMasterKey:
db 0
bFakeClosetKey:
db 0
bFakeEmblemKey:
db 0
bFakeControlRoomKey:
db 0
///

keyChkOnDoorAccessAOB: //"bhd.exe"+89EA5:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
keyChkOnDoorAccessAOB: //"bhd.exe"+89EA5:
db 0F 43 C1 8B 00
//Alt: cmovae eax,ecx
//Alt: mov eax,[eax]
unregistersymbol(keyChkOnDoorAccessAOB)

unregistersymbol(bFakeItems)
unregistersymbol(bFakeLockPick)
unregistersymbol(bFakeOldKey)
unregistersymbol(bFakeSwordKey)
unregistersymbol(bFakeArmorKey)
unregistersymbol(bFakeShieldKey)
unregistersymbol(bFakeHelmetKey)
unregistersymbol(bFakeResidence001Key)
unregistersymbol(bFakeResidence003Key)
unregistersymbol(bFakeLabPowerAreaKey)
unregistersymbol(bFakeLabMasterKey)
unregistersymbol(bFakeClosetKey)
unregistersymbol(bFakeEmblemKey)
unregistersymbol(bFakeControlRoomKey)
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>122</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>77</ID>
                  <Description>"Fake Ink Ribbon"</Description>
                  <LastState Activated="1"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeInkRibbon:
db 44

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeInkRibbon:
db 0
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys>
                        <Key>122</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>96</ID>
                  <Description>"Fake Lock Pick"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeLockPick:
db 2B

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeLockPick:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>109</ID>
                  <Description>"Fake Old Key"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeOldKey:
db 2C

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeOldKey:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>108</ID>
                  <Description>"Fake Sword Key"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeSwordKey:
db 2D

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeSwordKey:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>107</ID>
                  <Description>"Fake Armor Key"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeArmorKey:
db 2E

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeArmorKey:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>106</ID>
                  <Description>"Fake Shield Key"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeShieldKey:
db 2F

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeShieldKey:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>105</ID>
                  <Description>"Fake Helmet Key"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeHelmetKey:
db 30

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeHelmetKey:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>104</ID>
                  <Description>"Fake Residence Key - 001"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeResidence001Key:
db 31

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeResidence001Key:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>103</ID>
                  <Description>"Fake Residence Key - 003"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeResidence003Key:
db 32

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeResidence003Key:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>102</ID>
                  <Description>"Fake Laboratory Key - Power Area"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeLabPowerAreaKey:
db 36

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeLabPowerAreaKey:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>101</ID>
                  <Description>"Fake Laboratory Key - Master"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeLabMasterKey:
db 37

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeLabMasterKey:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>100</ID>
                  <Description>"Fake Closet Key"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeClosetKey:
db 3E

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeClosetKey:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>99</ID>
                  <Description>"Fake Emblem Key"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeEmblemKey:
db 3F

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeEmblemKey:
db 0
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>98</ID>
                  <Description>"Fake Control Room Key"</Description>
                  <LastState Activated="0"/>
                  <Color>80000008</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFakeControlRoomKey:
db 6E

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFakeControlRoomKey:
db 0
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"[Pointers]"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>80000008</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>38</ID>
              <Description>"[Misc.]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>16</ID>
                  <Description>"Health"</Description>
                  <LastState Value="960" Activated="0" RealAddress="298B470C"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHealth</Address>
                  <Offsets>
                    <Offset>13BC</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>13</Key>
                      </Keys>
                      <Value>(Health Max)</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>59</ID>
                      <Description>"Health Max"</Description>
                      <LastState Value="960" Activated="0" RealAddress="298B4710"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pHealth</Address>
                      <Offsets>
                        <Offset>13C0</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>114</ID>
                  <Description>"Poisoned"</Description>
                  <LastState Value="0" Activated="0" RealAddress="298B48D4"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHealth</Address>
                  <Offsets>
                    <Offset>1584</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>27</ID>
                  <Description>"Current Ammo Clip"</Description>
                  <LastState Value="15" Activated="0" RealAddress="298DF8BC"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pCurAmmo</Address>
                  <Offsets>
                    <Offset>FFC</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>30</ID>
                      <Description>"Current Ammo Clip Max"</Description>
                      <LastState Value="15" Activated="0" RealAddress="298DF8C0"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pCurAmmo</Address>
                      <Offsets>
                        <Offset>1000</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>85</ID>
                      <Description>"Current Ammo Clip Usage"</Description>
                      <LastState Value="1" Activated="0" RealAddress="298DF8C4"/>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pCurAmmo</Address>
                      <Offsets>
                        <Offset>1004</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>87</ID>
                  <Description>"Character Using"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Chris
1:Jill
2:Rebecca
</DropDownList>
                  <LastState Value="1" Activated="0" RealAddress="28979508"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>50E0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>88</ID>
                  <Description>"Outfit Using"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Outfit 1
1:Outfit 2
2:Outfit 3 (Chris and Jill ONLY)
3:Outfit 4 (Chris and Jill ONLY)
</DropDownList>
                  <LastState Value="3" Activated="0" RealAddress="28979504"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>50DC</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>89</ID>
                  <Description>"Scenario (?)"</Description>
                  <LastState Value="1" Activated="0" RealAddress="28979500"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>50D8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>39</ID>
              <Description>"[Inventory]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="0" RealAddress="00000000"/>
              <Color>80000008</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>40</ID>
                  <Description>"Slot 01"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:Nothing
01:Survival Knife (Jill)
02:Survival Knife
03:Handgun
04:Self Defense Gun
05:Handgun (Infinite)
06:Shotgun
07:Grenade Launcher - Explosive
08:Grenade Launcher - Acid
09:Grenade Launcher - Incendiary
0A:Rocket Launcher
0B:Magnum Revolver
0C:Flame Thrower
0D:Assault Shotgun
0E:Rocket Launcher (Infinite)
0F:Barry's 44 Magnum
10:Grenade Shells
11:Handgun Magazine
12:shotgun shells
13:Acid Shells
14:Incendiary shells
15:Golden Arrow
16:Book of Curse
17:Coin
18:Collar
19:Magnum Rounds
1A:Broach
1B:Fuel Canteen
1C:Arrowhead
1D:Imitation of a Key
1E:Residence Key - Gallery
1F:Fuel Supply Capsule
20:Musical Score
21:First Aid Spray
22:Green Herb
23:Red Herb
24:Blue Herb
25:Mixed Herbs (Green)
26:Mixed Herbs (Green)
27:Mixed Herbs (Green &amp; Red)
28:Mixed Herbs
29:Mixed Herbs (Green&amp; Blue)
2A:Mixed Herbs (Green&amp; Blue)
2B:Lock Pick
2C:Old Key
2D:Mansion Key - Sword
2E:Mansion Key - Armor
2F:Mansion Key - Shield
30:Mansion Key - Helmet
31:Residence Key - 001
32:Residence Key - 003
33:Medal of Eagle
34:Medal of Wolf
35:Stone &amp; Metal Object (Octagonal)
36:Laboratory Key - Key for the Power Area
37:Laboratory Key - Master Key
38:Star Crest
39:Wind Crest
3A:Sun Crest
3B:Moon Crest
3C:Crank
3D:Crank
3E:Closet Key (Special)
3F:Emblem Key
40:Stone Ring
41:Metal Object
42:Survival Knife (Black)
43:Battery
44:Ink Ribbon
45:Emblem
46:Gold Emblem
47:Musical Score - Moonlight Sonata
48:Red Gemstone
49:Blue Gemstone
4A:Yellow Gemstone
4B:Broken Shotgun
4C:Chemical - Herbicide
4D:Lighter
4E:Serum
4F:Transceiver
50:Empty Bottle
51:Water
52:UMB No.3
53:NP-004
54:Yellow-6
55:UMB No.7
56:UMB No.10
57:VP-017
58:V-JOLT
5A:Red Book
5B:Last Book Vol.1
5C:Last Book Vol.2
5D:MO Disk
5E:MO Disk
5F:MO Disk
60:Dog Whistle
61:Fuse Unit
62:Capsule
63:Jewelry Box(Stone Ring)
64:Insecticide Spray
65:First Aid Box - First Aid Spray
66:Jewelry Box(Emblem Key)
67:Jewelry Box(Death Mask)
68:First Aid Box - Green Herb
69:First Aid Box - Blue Herb
6A:Signal Rockets
6B:Broken Flamethrower
6C:Wooden Mount
6D:Slide Filter
6E:Control Room Key
6F:Fuel Supply Capsule
70:Dagger
71:Flash Grenade
72:Taser
73:Bee Specimen
74:lure with out a hook
75:Fishhook
76:Lure of a bee
77:X-Ray of CLARK
78:X-Ray of GAIL
79:Battery Pack
7A:Shaft
7B:Cylinder
7C:Cylinder Shaft
7D:Mask without eyes, nose or mouth
7E:Mask without eyes
7F:Mask without nose
80:Mask without mouth
81:Music Score
82:2F Map
83:First Aid Box - Blue/Green Herb
84:First Aid Box - Green/Green Herb
</DropDownList>
                  <LastState Value="03" Activated="0" RealAddress="28974428"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>41</ID>
                      <Description>"Quantity"</Description>
                      <LastState Value="15" Activated="0" RealAddress="2897442C"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pItem</Address>
                      <Offsets>
                        <Offset>4</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>42</ID>
                  <Description>"Slot 02"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:Nothing
01:Survival Knife (Jill)
02:Survival Knife
03:Handgun
04:Self Defense Gun
05:Handgun (Infinite)
06:Shotgun
07:Grenade Launcher - Explosive
08:Grenade Launcher - Acid
09:Grenade Launcher - Incendiary
0A:Rocket Launcher
0B:Magnum Revolver
0C:Flame Thrower
0D:Assault Shotgun
0E:Rocket Launcher (Infinite)
0F:Barry's 44 Magnum
10:Grenade Shells
11:Handgun Magazine
12:shotgun shells
13:Acid Shells
14:Incendiary shells
15:Golden Arrow
16:Book of Curse
17:Coin
18:Collar
19:Magnum Rounds
1A:Broach
1B:Fuel Canteen
1C:Arrowhead
1D:Imitation of a Key
1E:Residence Key - Gallery
1F:Fuel Supply Capsule
20:Musical Score
21:First Aid Spray
22:Green Herb
23:Red Herb
24:Blue Herb
25:Mixed Herbs (Green)
26:Mixed Herbs (Green)
27:Mixed Herbs (Green &amp; Red)
28:Mixed Herbs
29:Mixed Herbs (Green&amp; Blue)
2A:Mixed Herbs (Green&amp; Blue)
2B:Lock Pick
2C:Old Key
2D:Mansion Key - Sword
2E:Mansion Key - Armor
2F:Mansion Key - Shield
30:Mansion Key - Helmet
31:Residence Key - 001
32:Residence Key - 003
33:Medal of Eagle
34:Medal of Wolf
35:Stone &amp; Metal Object (Octagonal)
36:Laboratory Key - Key for the Power Area
37:Laboratory Key - Master Key
38:Star Crest
39:Wind Crest
3A:Sun Crest
3B:Moon Crest
3C:Crank
3D:Crank
3E:Closet Key (Special)
3F:Emblem Key
40:Stone Ring
41:Metal Object
42:Survival Knife (Black)
43:Battery
44:Ink Ribbon
45:Emblem
46:Gold Emblem
47:Musical Score - Moonlight Sonata
48:Red Gemstone
49:Blue Gemstone
4A:Yellow Gemstone
4B:Broken Shotgun
4C:Chemical - Herbicide
4D:Lighter
4E:Serum
4F:Transceiver
50:Empty Bottle
51:Water
52:UMB No.3
53:NP-004
54:Yellow-6
55:UMB No.7
56:UMB No.10
57:VP-017
58:V-JOLT
5A:Red Book
5B:Last Book Vol.1
5C:Last Book Vol.2
5D:MO Disk
5E:MO Disk
5F:MO Disk
60:Dog Whistle
61:Fuse Unit
62:Capsule
63:Jewelry Box(Stone Ring)
64:Insecticide Spray
65:First Aid Box - First Aid Spray
66:Jewelry Box(Emblem Key)
67:Jewelry Box(Death Mask)
68:First Aid Box - Green Herb
69:First Aid Box - Blue Herb
6A:Signal Rockets
6B:Broken Flamethrower
6C:Wooden Mount
6D:Slide Filter
6E:Control Room Key
6F:Fuel Supply Capsule
70:Dagger
71:Flash Grenade
72:Taser
73:Bee Specimen
74:lure with out a hook
75:Fishhook
76:Lure of a bee
77:X-Ray of CLARK
78:X-Ray of GAIL
79:Battery Pack
7A:Shaft
7B:Cylinder
7C:Cylinder Shaft
7D:Mask without eyes, nose or mouth
7E:Mask without eyes
7F:Mask without nose
80:Mask without mouth
81:Music Score
82:2F Map
83:First Aid Box - Blue/Green Herb
84:First Aid Box - Green/Green Herb
</DropDownList>
                  <LastState Value="0D" Activated="0" RealAddress="28974430"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>43</ID>
                      <Description>"Quantity"</Description>
                      <LastState Value="10" Activated="0" RealAddress="28974434"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pItem</Address>
                      <Offsets>
                        <Offset>C</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>44</ID>
                  <Description>"Slot 03"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:Nothing
01:Survival Knife (Jill)
02:Survival Knife
03:Handgun
04:Self Defense Gun
05:Handgun (Infinite)
06:Shotgun
07:Grenade Launcher - Explosive
08:Grenade Launcher - Acid
09:Grenade Launcher - Incendiary
0A:Rocket Launcher
0B:Magnum Revolver
0C:Flame Thrower
0D:Assault Shotgun
0E:Rocket Launcher (Infinite)
0F:Barry's 44 Magnum
10:Grenade Shells
11:Handgun Magazine
12:shotgun shells
13:Acid Shells
14:Incendiary shells
15:Golden Arrow
16:Book of Curse
17:Coin
18:Collar
19:Magnum Rounds
1A:Broach
1B:Fuel Canteen
1C:Arrowhead
1D:Imitation of a Key
1E:Residence Key - Gallery
1F:Fuel Supply Capsule
20:Musical Score
21:First Aid Spray
22:Green Herb
23:Red Herb
24:Blue Herb
25:Mixed Herbs (Green)
26:Mixed Herbs (Green)
27:Mixed Herbs (Green &amp; Red)
28:Mixed Herbs
29:Mixed Herbs (Green&amp; Blue)
2A:Mixed Herbs (Green&amp; Blue)
2B:Lock Pick
2C:Old Key
2D:Mansion Key - Sword
2E:Mansion Key - Armor
2F:Mansion Key - Shield
30:Mansion Key - Helmet
31:Residence Key - 001
32:Residence Key - 003
33:Medal of Eagle
34:Medal of Wolf
35:Stone &amp; Metal Object (Octagonal)
36:Laboratory Key - Key for the Power Area
37:Laboratory Key - Master Key
38:Star Crest
39:Wind Crest
3A:Sun Crest
3B:Moon Crest
3C:Crank
3D:Crank
3E:Closet Key (Special)
3F:Emblem Key
40:Stone Ring
41:Metal Object
42:Survival Knife (Black)
43:Battery
44:Ink Ribbon
45:Emblem
46:Gold Emblem
47:Musical Score - Moonlight Sonata
48:Red Gemstone
49:Blue Gemstone
4A:Yellow Gemstone
4B:Broken Shotgun
4C:Chemical - Herbicide
4D:Lighter
4E:Serum
4F:Transceiver
50:Empty Bottle
51:Water
52:UMB No.3
53:NP-004
54:Yellow-6
55:UMB No.7
56:UMB No.10
57:VP-017
58:V-JOLT
5A:Red Book
5B:Last Book Vol.1
5C:Last Book Vol.2
5D:MO Disk
5E:MO Disk
5F:MO Disk
60:Dog Whistle
61:Fuse Unit
62:Capsule
63:Jewelry Box(Stone Ring)
64:Insecticide Spray
65:First Aid Box - First Aid Spray
66:Jewelry Box(Emblem Key)
67:Jewelry Box(Death Mask)
68:First Aid Box - Green Herb
69:First Aid Box - Blue Herb
6A:Signal Rockets
6B:Broken Flamethrower
6C:Wooden Mount
6D:Slide Filter
6E:Control Room Key
6F:Fuel Supply Capsule
70:Dagger
71:Flash Grenade
72:Taser
73:Bee Specimen
74:lure with out a hook
75:Fishhook
76:Lure of a bee
77:X-Ray of CLARK
78:X-Ray of GAIL
79:Battery Pack
7A:Shaft
7B:Cylinder
7C:Cylinder Shaft
7D:Mask without eyes, nose or mouth
7E:Mask without eyes
7F:Mask without nose
80:Mask without mouth
81:Music Score
82:2F Map
83:First Aid Box - Blue/Green Herb
84:First Aid Box - Green/Green Herb
</DropDownList>
                  <LastState Value="1B" Activated="0" RealAddress="28974438"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>45</ID>
                      <Description>"Quantity"</Description>
                      <LastState Value="2" Activated="0" RealAddress="2897443C"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pItem</Address>
                      <Offsets>
                        <Offset>14</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>46</ID>
                  <Description>"Slot 04"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:Nothing
01:Survival Knife (Jill)
02:Survival Knife
03:Handgun
04:Self Defense Gun
05:Handgun (Infinite)
06:Shotgun
07:Grenade Launcher - Explosive
08:Grenade Launcher - Acid
09:Grenade Launcher - Incendiary
0A:Rocket Launcher
0B:Magnum Revolver
0C:Flame Thrower
0D:Assault Shotgun
0E:Rocket Launcher (Infinite)
0F:Barry's 44 Magnum
10:Grenade Shells
11:Handgun Magazine
12:shotgun shells
13:Acid Shells
14:Incendiary shells
15:Golden Arrow
16:Book of Curse
17:Coin
18:Collar
19:Magnum Rounds
1A:Broach
1B:Fuel Canteen
1C:Arrowhead
1D:Imitation of a Key
1E:Residence Key - Gallery
1F:Fuel Supply Capsule
20:Musical Score
21:First Aid Spray
22:Green Herb
23:Red Herb
24:Blue Herb
25:Mixed Herbs (Green)
26:Mixed Herbs (Green)
27:Mixed Herbs (Green &amp; Red)
28:Mixed Herbs
29:Mixed Herbs (Green&amp; Blue)
2A:Mixed Herbs (Green&amp; Blue)
2B:Lock Pick
2C:Old Key
2D:Mansion Key - Sword
2E:Mansion Key - Armor
2F:Mansion Key - Shield
30:Mansion Key - Helmet
31:Residence Key - 001
32:Residence Key - 003
33:Medal of Eagle
34:Medal of Wolf
35:Stone &amp; Metal Object (Octagonal)
36:Laboratory Key - Key for the Power Area
37:Laboratory Key - Master Key
38:Star Crest
39:Wind Crest
3A:Sun Crest
3B:Moon Crest
3C:Crank
3D:Crank
3E:Closet Key (Special)
3F:Emblem Key
40:Stone Ring
41:Metal Object
42:Survival Knife (Black)
43:Battery
44:Ink Ribbon
45:Emblem
46:Gold Emblem
47:Musical Score - Moonlight Sonata
48:Red Gemstone
49:Blue Gemstone
4A:Yellow Gemstone
4B:Broken Shotgun
4C:Chemical - Herbicide
4D:Lighter
4E:Serum
4F:Transceiver
50:Empty Bottle
51:Water
52:UMB No.3
53:NP-004
54:Yellow-6
55:UMB No.7
56:UMB No.10
57:VP-017
58:V-JOLT
5A:Red Book
5B:Last Book Vol.1
5C:Last Book Vol.2
5D:MO Disk
5E:MO Disk
5F:MO Disk
60:Dog Whistle
61:Fuse Unit
62:Capsule
63:Jewelry Box(Stone Ring)
64:Insecticide Spray
65:First Aid Box - First Aid Spray
66:Jewelry Box(Emblem Key)
67:Jewelry Box(Death Mask)
68:First Aid Box - Green Herb
69:First Aid Box - Blue Herb
6A:Signal Rockets
6B:Broken Flamethrower
6C:Wooden Mount
6D:Slide Filter
6E:Control Room Key
6F:Fuel Supply Capsule
70:Dagger
71:Flash Grenade
72:Taser
73:Bee Specimen
74:lure with out a hook
75:Fishhook
76:Lure of a bee
77:X-Ray of CLARK
78:X-Ray of GAIL
79:Battery Pack
7A:Shaft
7B:Cylinder
7C:Cylinder Shaft
7D:Mask without eyes, nose or mouth
7E:Mask without eyes
7F:Mask without nose
80:Mask without mouth
81:Music Score
82:2F Map
83:First Aid Box - Blue/Green Herb
84:First Aid Box - Green/Green Herb
</DropDownList>
                  <LastState Value="04" Activated="0" RealAddress="28974440"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>18</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>47</ID>
                      <Description>"Quantity"</Description>
                      <LastState Value="1" Activated="0" RealAddress="28974444"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pItem</Address>
                      <Offsets>
                        <Offset>1C</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>48</ID>
                  <Description>"Slot 05"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:Nothing
01:Survival Knife (Jill)
02:Survival Knife
03:Handgun
04:Self Defense Gun
05:Handgun (Infinite)
06:Shotgun
07:Grenade Launcher - Explosive
08:Grenade Launcher - Acid
09:Grenade Launcher - Incendiary
0A:Rocket Launcher
0B:Magnum Revolver
0C:Flame Thrower
0D:Assault Shotgun
0E:Rocket Launcher (Infinite)
0F:Barry's 44 Magnum
10:Grenade Shells
11:Handgun Magazine
12:shotgun shells
13:Acid Shells
14:Incendiary shells
15:Golden Arrow
16:Book of Curse
17:Coin
18:Collar
19:Magnum Rounds
1A:Broach
1B:Fuel Canteen
1C:Arrowhead
1D:Imitation of a Key
1E:Residence Key - Gallery
1F:Fuel Supply Capsule
20:Musical Score
21:First Aid Spray
22:Green Herb
23:Red Herb
24:Blue Herb
25:Mixed Herbs (Green)
26:Mixed Herbs (Green)
27:Mixed Herbs (Green &amp; Red)
28:Mixed Herbs
29:Mixed Herbs (Green&amp; Blue)
2A:Mixed Herbs (Green&amp; Blue)
2B:Lock Pick
2C:Old Key
2D:Mansion Key - Sword
2E:Mansion Key - Armor
2F:Mansion Key - Shield
30:Mansion Key - Helmet
31:Residence Key - 001
32:Residence Key - 003
33:Medal of Eagle
34:Medal of Wolf
35:Stone &amp; Metal Object (Octagonal)
36:Laboratory Key - Key for the Power Area
37:Laboratory Key - Master Key
38:Star Crest
39:Wind Crest
3A:Sun Crest
3B:Moon Crest
3C:Crank
3D:Crank
3E:Closet Key (Special)
3F:Emblem Key
40:Stone Ring
41:Metal Object
42:Survival Knife (Black)
43:Battery
44:Ink Ribbon
45:Emblem
46:Gold Emblem
47:Musical Score - Moonlight Sonata
48:Red Gemstone
49:Blue Gemstone
4A:Yellow Gemstone
4B:Broken Shotgun
4C:Chemical - Herbicide
4D:Lighter
4E:Serum
4F:Transceiver
50:Empty Bottle
51:Water
52:UMB No.3
53:NP-004
54:Yellow-6
55:UMB No.7
56:UMB No.10
57:VP-017
58:V-JOLT
5A:Red Book
5B:Last Book Vol.1
5C:Last Book Vol.2
5D:MO Disk
5E:MO Disk
5F:MO Disk
60:Dog Whistle
61:Fuse Unit
62:Capsule
63:Jewelry Box(Stone Ring)
64:Insecticide Spray
65:First Aid Box - First Aid Spray
66:Jewelry Box(Emblem Key)
67:Jewelry Box(Death Mask)
68:First Aid Box - Green Herb
69:First Aid Box - Blue Herb
6A:Signal Rockets
6B:Broken Flamethrower
6C:Wooden Mount
6D:Slide Filter
6E:Control Room Key
6F:Fuel Supply Capsule
70:Dagger
71:Flash Grenade
72:Taser
73:Bee Specimen
74:lure with out a hook
75:Fishhook
76:Lure of a bee
77:X-Ray of CLARK
78:X-Ray of GAIL
79:Battery Pack
7A:Shaft
7B:Cylinder
7C:Cylinder Shaft
7D:Mask without eyes, nose or mouth
7E:Mask without eyes
7F:Mask without nose
80:Mask without mouth
81:Music Score
82:2F Map
83:First Aid Box - Blue/Green Herb
84:First Aid Box - Green/Green Herb
</DropDownList>
                  <LastState Value="00" Activated="0" RealAddress="28974448"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>20</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>49</ID>
                      <Description>"Quantity"</Description>
                      <LastState Value="0" Activated="0" RealAddress="2897444C"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pItem</Address>
                      <Offsets>
                        <Offset>24</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>50</ID>
                  <Description>"Slot 06"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:Nothing
01:Survival Knife (Jill)
02:Survival Knife
03:Handgun
04:Self Defense Gun
05:Handgun (Infinite)
06:Shotgun
07:Grenade Launcher - Explosive
08:Grenade Launcher - Acid
09:Grenade Launcher - Incendiary
0A:Rocket Launcher
0B:Magnum Revolver
0C:Flame Thrower
0D:Assault Shotgun
0E:Rocket Launcher (Infinite)
0F:Barry's 44 Magnum
10:Grenade Shells
11:Handgun Magazine
12:shotgun shells
13:Acid Shells
14:Incendiary shells
15:Golden Arrow
16:Book of Curse
17:Coin
18:Collar
19:Magnum Rounds
1A:Broach
1B:Fuel Canteen
1C:Arrowhead
1D:Imitation of a Key
1E:Residence Key - Gallery
1F:Fuel Supply Capsule
20:Musical Score
21:First Aid Spray
22:Green Herb
23:Red Herb
24:Blue Herb
25:Mixed Herbs (Green)
26:Mixed Herbs (Green)
27:Mixed Herbs (Green &amp; Red)
28:Mixed Herbs
29:Mixed Herbs (Green&amp; Blue)
2A:Mixed Herbs (Green&amp; Blue)
2B:Lock Pick
2C:Old Key
2D:Mansion Key - Sword
2E:Mansion Key - Armor
2F:Mansion Key - Shield
30:Mansion Key - Helmet
31:Residence Key - 001
32:Residence Key - 003
33:Medal of Eagle
34:Medal of Wolf
35:Stone &amp; Metal Object (Octagonal)
36:Laboratory Key - Key for the Power Area
37:Laboratory Key - Master Key
38:Star Crest
39:Wind Crest
3A:Sun Crest
3B:Moon Crest
3C:Crank
3D:Crank
3E:Closet Key (Special)
3F:Emblem Key
40:Stone Ring
41:Metal Object
42:Survival Knife (Black)
43:Battery
44:Ink Ribbon
45:Emblem
46:Gold Emblem
47:Musical Score - Moonlight Sonata
48:Red Gemstone
49:Blue Gemstone
4A:Yellow Gemstone
4B:Broken Shotgun
4C:Chemical - Herbicide
4D:Lighter
4E:Serum
4F:Transceiver
50:Empty Bottle
51:Water
52:UMB No.3
53:NP-004
54:Yellow-6
55:UMB No.7
56:UMB No.10
57:VP-017
58:V-JOLT
5A:Red Book
5B:Last Book Vol.1
5C:Last Book Vol.2
5D:MO Disk
5E:MO Disk
5F:MO Disk
60:Dog Whistle
61:Fuse Unit
62:Capsule
63:Jewelry Box(Stone Ring)
64:Insecticide Spray
65:First Aid Box - First Aid Spray
66:Jewelry Box(Emblem Key)
67:Jewelry Box(Death Mask)
68:First Aid Box - Green Herb
69:First Aid Box - Blue Herb
6A:Signal Rockets
6B:Broken Flamethrower
6C:Wooden Mount
6D:Slide Filter
6E:Control Room Key
6F:Fuel Supply Capsule
70:Dagger
71:Flash Grenade
72:Taser
73:Bee Specimen
74:lure with out a hook
75:Fishhook
76:Lure of a bee
77:X-Ray of CLARK
78:X-Ray of GAIL
79:Battery Pack
7A:Shaft
7B:Cylinder
7C:Cylinder Shaft
7D:Mask without eyes, nose or mouth
7E:Mask without eyes
7F:Mask without nose
80:Mask without mouth
81:Music Score
82:2F Map
83:First Aid Box - Blue/Green Herb
84:First Aid Box - Green/Green Herb
</DropDownList>
                  <LastState Value="00" Activated="0" RealAddress="28974450"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>28</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>51</ID>
                      <Description>"Quantity"</Description>
                      <LastState Value="0" Activated="0" RealAddress="28974454"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pItem</Address>
                      <Offsets>
                        <Offset>2C</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>52</ID>
                  <Description>"Slot 07"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:Nothing
01:Survival Knife (Jill)
02:Survival Knife
03:Handgun
04:Self Defense Gun
05:Handgun (Infinite)
06:Shotgun
07:Grenade Launcher - Explosive
08:Grenade Launcher - Acid
09:Grenade Launcher - Incendiary
0A:Rocket Launcher
0B:Magnum Revolver
0C:Flame Thrower
0D:Assault Shotgun
0E:Rocket Launcher (Infinite)
0F:Barry's 44 Magnum
10:Grenade Shells
11:Handgun Magazine
12:shotgun shells
13:Acid Shells
14:Incendiary shells
15:Golden Arrow
16:Book of Curse
17:Coin
18:Collar
19:Magnum Rounds
1A:Broach
1B:Fuel Canteen
1C:Arrowhead
1D:Imitation of a Key
1E:Residence Key - Gallery
1F:Fuel Supply Capsule
20:Musical Score
21:First Aid Spray
22:Green Herb
23:Red Herb
24:Blue Herb
25:Mixed Herbs (Green)
26:Mixed Herbs (Green)
27:Mixed Herbs (Green &amp; Red)
28:Mixed Herbs
29:Mixed Herbs (Green&amp; Blue)
2A:Mixed Herbs (Green&amp; Blue)
2B:Lock Pick
2C:Old Key
2D:Mansion Key - Sword
2E:Mansion Key - Armor
2F:Mansion Key - Shield
30:Mansion Key - Helmet
31:Residence Key - 001
32:Residence Key - 003
33:Medal of Eagle
34:Medal of Wolf
35:Stone &amp; Metal Object (Octagonal)
36:Laboratory Key - Key for the Power Area
37:Laboratory Key - Master Key
38:Star Crest
39:Wind Crest
3A:Sun Crest
3B:Moon Crest
3C:Crank
3D:Crank
3E:Closet Key (Special)
3F:Emblem Key
40:Stone Ring
41:Metal Object
42:Survival Knife (Black)
43:Battery
44:Ink Ribbon
45:Emblem
46:Gold Emblem
47:Musical Score - Moonlight Sonata
48:Red Gemstone
49:Blue Gemstone
4A:Yellow Gemstone
4B:Broken Shotgun
4C:Chemical - Herbicide
4D:Lighter
4E:Serum
4F:Transceiver
50:Empty Bottle
51:Water
52:UMB No.3
53:NP-004
54:Yellow-6
55:UMB No.7
56:UMB No.10
57:VP-017
58:V-JOLT
5A:Red Book
5B:Last Book Vol.1
5C:Last Book Vol.2
5D:MO Disk
5E:MO Disk
5F:MO Disk
60:Dog Whistle
61:Fuse Unit
62:Capsule
63:Jewelry Box(Stone Ring)
64:Insecticide Spray
65:First Aid Box - First Aid Spray
66:Jewelry Box(Emblem Key)
67:Jewelry Box(Death Mask)
68:First Aid Box - Green Herb
69:First Aid Box - Blue Herb
6A:Signal Rockets
6B:Broken Flamethrower
6C:Wooden Mount
6D:Slide Filter
6E:Control Room Key
6F:Fuel Supply Capsule
70:Dagger
71:Flash Grenade
72:Taser
73:Bee Specimen
74:lure with out a hook
75:Fishhook
76:Lure of a bee
77:X-Ray of CLARK
78:X-Ray of GAIL
79:Battery Pack
7A:Shaft
7B:Cylinder
7C:Cylinder Shaft
7D:Mask without eyes, nose or mouth
7E:Mask without eyes
7F:Mask without nose
80:Mask without mouth
81:Music Score
82:2F Map
83:First Aid Box - Blue/Green Herb
84:First Aid Box - Green/Green Herb
</DropDownList>
                  <LastState Value="00" Activated="0" RealAddress="28974458"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>30</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>53</ID>
                      <Description>"Quantity"</Description>
                      <LastState Value="0" Activated="0" RealAddress="2897445C"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pItem</Address>
                      <Offsets>
                        <Offset>34</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>54</ID>
                  <Description>"Slot 08"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:Nothing
01:Survival Knife (Jill)
02:Survival Knife
03:Handgun
04:Self Defense Gun
05:Handgun (Infinite)
06:Shotgun
07:Grenade Launcher - Explosive
08:Grenade Launcher - Acid
09:Grenade Launcher - Incendiary
0A:Rocket Launcher
0B:Magnum Revolver
0C:Flame Thrower
0D:Assault Shotgun
0E:Rocket Launcher (Infinite)
0F:Barry's 44 Magnum
10:Grenade Shells
11:Handgun Magazine
12:shotgun shells
13:Acid Shells
14:Incendiary shells
15:Golden Arrow
16:Book of Curse
17:Coin
18:Collar
19:Magnum Rounds
1A:Broach
1B:Fuel Canteen
1C:Arrowhead
1D:Imitation of a Key
1E:Residence Key - Gallery
1F:Fuel Supply Capsule
20:Musical Score
21:First Aid Spray
22:Green Herb
23:Red Herb
24:Blue Herb
25:Mixed Herbs (Green)
26:Mixed Herbs (Green)
27:Mixed Herbs (Green &amp; Red)
28:Mixed Herbs
29:Mixed Herbs (Green&amp; Blue)
2A:Mixed Herbs (Green&amp; Blue)
2B:Lock Pick
2C:Old Key
2D:Mansion Key - Sword
2E:Mansion Key - Armor
2F:Mansion Key - Shield
30:Mansion Key - Helmet
31:Residence Key - 001
32:Residence Key - 003
33:Medal of Eagle
34:Medal of Wolf
35:Stone &amp; Metal Object (Octagonal)
36:Laboratory Key - Key for the Power Area
37:Laboratory Key - Master Key
38:Star Crest
39:Wind Crest
3A:Sun Crest
3B:Moon Crest
3C:Crank
3D:Crank
3E:Closet Key (Special)
3F:Emblem Key
40:Stone Ring
41:Metal Object
42:Survival Knife (Black)
43:Battery
44:Ink Ribbon
45:Emblem
46:Gold Emblem
47:Musical Score - Moonlight Sonata
48:Red Gemstone
49:Blue Gemstone
4A:Yellow Gemstone
4B:Broken Shotgun
4C:Chemical - Herbicide
4D:Lighter
4E:Serum
4F:Transceiver
50:Empty Bottle
51:Water
52:UMB No.3
53:NP-004
54:Yellow-6
55:UMB No.7
56:UMB No.10
57:VP-017
58:V-JOLT
5A:Red Book
5B:Last Book Vol.1
5C:Last Book Vol.2
5D:MO Disk
5E:MO Disk
5F:MO Disk
60:Dog Whistle
61:Fuse Unit
62:Capsule
63:Jewelry Box(Stone Ring)
64:Insecticide Spray
65:First Aid Box - First Aid Spray
66:Jewelry Box(Emblem Key)
67:Jewelry Box(Death Mask)
68:First Aid Box - Green Herb
69:First Aid Box - Blue Herb
6A:Signal Rockets
6B:Broken Flamethrower
6C:Wooden Mount
6D:Slide Filter
6E:Control Room Key
6F:Fuel Supply Capsule
70:Dagger
71:Flash Grenade
72:Taser
73:Bee Specimen
74:lure with out a hook
75:Fishhook
76:Lure of a bee
77:X-Ray of CLARK
78:X-Ray of GAIL
79:Battery Pack
7A:Shaft
7B:Cylinder
7C:Cylinder Shaft
7D:Mask without eyes, nose or mouth
7E:Mask without eyes
7F:Mask without nose
80:Mask without mouth
81:Music Score
82:2F Map
83:First Aid Box - Blue/Green Herb
84:First Aid Box - Green/Green Herb
</DropDownList>
                  <LastState Value="00" Activated="0" RealAddress="28974460"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>38</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>55</ID>
                      <Description>"Quantity"</Description>
                      <LastState Value="0" Activated="0" RealAddress="28974464"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pItem</Address>
                      <Offsets>
                        <Offset>3C</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>56</ID>
                  <Description>"Special Item"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00:Nothing
01:Survival Knife (Jill)
02:Survival Knife
03:Handgun
04:Self Defense Gun
05:Handgun (Infinite)
06:Shotgun
07:Grenade Launcher - Explosive
08:Grenade Launcher - Acid
09:Grenade Launcher - Incendiary
0A:Rocket Launcher
0B:Magnum Revolver
0C:Flame Thrower
0D:Assault Shotgun
0E:Rocket Launcher (Infinite)
0F:Barry's 44 Magnum
10:Grenade Shells
11:Handgun Magazine
12:shotgun shells
13:Acid Shells
14:Incendiary shells
15:Golden Arrow
16:Book of Curse
17:Coin
18:Collar
19:Magnum Rounds
1A:Broach
1B:Fuel Canteen
1C:Arrowhead
1D:Imitation of a Key
1E:Residence Key - Gallery
1F:Fuel Supply Capsule
20:Musical Score
21:First Aid Spray
22:Green Herb
23:Red Herb
24:Blue Herb
25:Mixed Herbs (Green)
26:Mixed Herbs (Green)
27:Mixed Herbs (Green &amp; Red)
28:Mixed Herbs
29:Mixed Herbs (Green&amp; Blue)
2A:Mixed Herbs (Green&amp; Blue)
2B:Lock Pick
2C:Old Key
2D:Mansion Key - Sword
2E:Mansion Key - Armor
2F:Mansion Key - Shield
30:Mansion Key - Helmet
31:Residence Key - 001
32:Residence Key - 003
33:Medal of Eagle
34:Medal of Wolf
35:Stone &amp; Metal Object (Octagonal)
36:Laboratory Key - Key for the Power Area
37:Laboratory Key - Master Key
38:Star Crest
39:Wind Crest
3A:Sun Crest
3B:Moon Crest
3C:Crank
3D:Crank
3E:Closet Key (Special)
3F:Emblem Key
40:Stone Ring
41:Metal Object
42:Survival Knife (Black)
43:Battery
44:Ink Ribbon
45:Emblem
46:Gold Emblem
47:Musical Score - Moonlight Sonata
48:Red Gemstone
49:Blue Gemstone
4A:Yellow Gemstone
4B:Broken Shotgun
4C:Chemical - Herbicide
4D:Lighter
4E:Serum
4F:Transceiver
50:Empty Bottle
51:Water
52:UMB No.3
53:NP-004
54:Yellow-6
55:UMB No.7
56:UMB No.10
57:VP-017
58:V-JOLT
5A:Red Book
5B:Last Book Vol.1
5C:Last Book Vol.2
5D:MO Disk
5E:MO Disk
5F:MO Disk
60:Dog Whistle
61:Fuse Unit
62:Capsule
63:Jewelry Box(Stone Ring)
64:Insecticide Spray
65:First Aid Box - First Aid Spray
66:Jewelry Box(Emblem Key)
67:Jewelry Box(Death Mask)
68:First Aid Box - Green Herb
69:First Aid Box - Blue Herb
6A:Signal Rockets
6B:Broken Flamethrower
6C:Wooden Mount
6D:Slide Filter
6E:Control Room Key
6F:Fuel Supply Capsule
70:Dagger
71:Flash Grenade
72:Taser
73:Bee Specimen
74:lure with out a hook
75:Fishhook
76:Lure of a bee
77:X-Ray of CLARK
78:X-Ray of GAIL
79:Battery Pack
7A:Shaft
7B:Cylinder
7C:Cylinder Shaft
7D:Mask without eyes, nose or mouth
7E:Mask without eyes
7F:Mask without nose
80:Mask without mouth
81:Music Score
82:2F Map
83:First Aid Box - Blue/Green Herb
84:First Aid Box - Green/Green Herb
</DropDownList>
                  <LastState Value="4D" Activated="0" RealAddress="28974468"/>
                  <ShowAsHex>1</ShowAsHex>
                  <Color>80000008</Color>
                  <VariableType>Byte</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>40</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>57</ID>
                      <Description>"Quantity"</Description>
                      <LastState Value="0" Activated="0" RealAddress="2897446C"/>
                      <ShowAsSigned>0</ShowAsSigned>
                      <Color>80000008</Color>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pItem</Address>
                      <Offsets>
                        <Offset>44</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>65</ID>
                  <Description>"Defensive Item 1"</Description>
                  <LastState Value="1" Activated="0" RealAddress="28979478"/>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>5050</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>66</ID>
                  <Description>"Defensive Item 2"</Description>
                  <LastState Value="2" Activated="0" RealAddress="2897947C"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>80000008</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pItem</Address>
                  <Offsets>
                    <Offset>5054</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="0" RealAddress="00000000"/>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="28C09524"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28C09524</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="29B0FD0C"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>29B0FD0C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No description"</Description>
          <LastState Value="2978999295" Activated="0" RealAddress="3F36C444"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>3F36C444</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="29B9DF4C"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>29B9DF4C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov [esi+ffc],1

originalcode:
cmp [esi+00000FFC],eax

exit:
jmp returnhere

///

"bhd.exe"+25CFD1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"bhd.exe"+25CFD1:
db 39 86 FC 0F 00 00
//Alt: cmp [esi+00000FFC],eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,1

originalcode:
//mov eax,[ebp+00000FFC]

exit:
jmp returnhere

///

"bhd.exe"+24F513:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"bhd.exe"+24F513:
db 8B 85 FC 0F 00 00
//Alt: mov eax,[ebp+00000FFC]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [esi+ffc],1
jge originalcode2
mov dword ptr [esi+ffc],1

originalcode2:
cmp dword ptr [esi+00000FFC],00

exit2:
jmp returnhere2

///

"bhd.exe"+25CFF7:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
"bhd.exe"+25CFF7:
db 83 BE FC 0F 00 00 00
//Alt: cmp dword ptr [esi+00000FFC],00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov edx,00000001

exit:
jmp returnhere

///

"bhd.exe"+25C640:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"bhd.exe"+25C640:
db BA 00 00 00 00
//Alt: mov edx,00000000
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov al,1

originalcode:
//setg al
ret 
int 3 

exit:
jmp returnhere

///

"bhd.exe"+25C197:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"bhd.exe"+25C197:
db 0F 9F C0 C3 CC
//Alt: setg al
//Alt: ret
//Alt: int 3
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov edi,[ebp+1000]

originalcode:
push [ebp+00000FFC]

exit:
jmp returnhere

///

"bhd.exe"+24F59C:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"bhd.exe"+24F59C:
db FF B5 FC 0F 00 00
//Alt: push [ebp+00000FFC]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="029DFE84"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>029DFE84</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthChkDamgeWouldKillAOB,0F B6 C0 0F 4E C1 89)
registersymbol(healthChkDamgeWouldKillAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
movzx eax,al
cmp [pHealth],edi
je exit2

originalcode2:
//movzx eax,al
cmovle eax,ecx

exit2:
jmp returnhere2

///

healthChkDamgeWouldKillAOB: //"bhd.exe"+14506:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
healthChkDamgeWouldKillAOB: //"bhd.exe"+14506:
db 0F B6 C0 0F 4E C1
//Alt: movzx eax,al
//Alt: cmovle eax,ecx
unregistersymbol(healthChkDamgeWouldKillAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Undead old 1"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthWriteAOB,89 B7 BC 13 00 00 5F 8B C6)
registersymbol(healthWriteAOB)
aobscan(healthChkDamgeWouldKillAOB,0F B6 C0 0F 4E C1 89)
registersymbol(healthChkDamgeWouldKillAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHealth],edi
jne originalcode

mov eax,#200
mov ebx,[esi+13bc]
cmp byte ptr [bFullHealth],1
cmove eax,ebx
cmp esi,eax
cmovnge esi,eax

originalcode:
mov [edi+000013BC],esi

exit:
jmp returnhere

///

newmem2:
movzx eax,al
cmp [pHealth],edi
je exit2

originalcode2:
cmp [edi+13bc],esi//
//movzx eax,al
cmovle eax,ecx

exit2:
jmp returnhere2

///

healthWriteAOB: //"bhd.exe"+10C2A2:
jmp newmem
nop
returnhere:

healthChkDamgeWouldKillAOB: //"bhd.exe"+14506:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthWriteAOB: //"bhd.exe"+10C2A2:
db 89 B7 BC 13 00 00
//Alt: mov [edi+000013BC],esi
unregistersymbol(healthWriteAOB)
healthChkDamgeWouldKillAOB: //"bhd.exe"+14506:
db 0F B6 C0 0F 4E C1
//Alt: movzx eax,al
//Alt: cmovle eax,ecx
unregistersymbol(healthChkDamgeWouldKillAOB)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Lock at Full Health"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <LastState Value="0" Activated="0" RealAddress="316D00FF"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bFullHealth</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Undead old 2"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(healthWriteAOB,89 B7 BC 13 00 00 5F 8B C6)
registersymbol(healthWriteAOB)
aobscan(healthChkDamgeWouldKillAOB,0F B6 C0 0F 4E C1 89)
registersymbol(healthChkDamgeWouldKillAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

label(newmem2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [pHealth],edi
jne originalcode

mov eax,#200
mov ebx,[edi+13c0]
cmp byte ptr [bFullHealth],1
cmove eax,ebx
cmp esi,eax
cmovnge esi,eax

originalcode:
mov [edi+000013BC],esi

exit:
jmp returnhere

///

newmem2:
movzx eax,al
cmp [pHealth],edi
je exit2

originalcode2:
cmp [edi+13bc],esi//
//movzx eax,al
cmovle eax,ecx

exit2:
jmp returnhere2

///

healthWriteAOB: //"bhd.exe"+10C2A2:
jmp newmem
nop
returnhere:

healthChkDamgeWouldKillAOB: //"bhd.exe"+14506:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthWriteAOB: //"bhd.exe"+10C2A2:
db 89 B7 BC 13 00 00
//Alt: mov [edi+000013BC],esi
unregistersymbol(healthWriteAOB)
healthChkDamgeWouldKillAOB: //"bhd.exe"+14506:
db 0F B6 C0 0F 4E C1
//Alt: movzx eax,al
//Alt: cmovle eax,ecx
unregistersymbol(healthChkDamgeWouldKillAOB)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>25</ID>
              <Description>"Lock at Full Health"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
              <LastState Value="0" Activated="0" RealAddress="316D00FF"/>
              <Color>80000008</Color>
              <VariableType>Byte</VariableType>
              <Address>bFullHealth</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(deadFlag1SetAOB,8B 44 24 08 5F 5E 8B E5 5D C2 14 00)
registersymbol(deadFlag1SetAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
xor eax,eax
mov [esp+8],eax

originalcode2:
pop edi
pop esi
mov esp,ebp
pop ebp

exit2:
jmp returnhere2

///

deadFlag1SetAOB+4: //"bhd.exe"+1454D:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
deadFlag1SetAOB: //"bhd.exe"+1454D:
db 5F 5E 8B E5 5D
//Alt: pop edi
//Alt: pop esi
//Alt: mov esp,ebp
//Alt: pop ebp
unregistersymbol(deadFlag1SetAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="28954444"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28954444</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="28954440"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28954440</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="2895444C"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>2895444c</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="28954448"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28954448</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(currentAmmoReadAOB,83 BE FC 0F 00 00 00 7F ** C7 46 04 00 00 00 00)
registersymbol(currentAmmoReadAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
cmp dword ptr [esi+00000FFC],00

exit2:
jmp returnhere2

///

currentAmmoReadAOB: //"bhd.exe"+25CFDE:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
currentAmmoReadAOB: //"bhd.exe"+25CFDE:
db 83 BE FC 0F 00 00 00
//Alt: cmp dword ptr [esi+00000FFC],00
unregistersymbol(currentAmmoReadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(itemReadInMenuAOB,0F 43 C2 83 38 00 75)
registersymbol(itemReadInMenuAOB)

label(pItem)
registersymbol(pItem)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
cmovae eax,edx//
test ebp,ebp
jnz originalcode6
mov [pItem],eax

originalcode6:
//cmovae eax,edx
cmp dword ptr [eax],00

exit6:
jmp returnhere6

///
pItem:
dd 0
///

itemReadInMenuAOB: //"bhd.exe"+8C8F6:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
itemReadInMenuAOB: //"bhd.exe"+8C8F6:
db 0F 43 C2 83 38 00
//Alt: cmovae eax,edx
//Alt: cmp dword ptr [eax],00
unregistersymbol(itemReadInMenuAOB)

unregistersymbol(pItem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(itemReadOutsideMenuAOB,0F 43 CF 39 19 74)
registersymbol(itemReadOutsideMenuAOB)

alloc(newmem11,2048)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
cmovae ecx,edi//
test eax,eax
jnz originalcode11
mov [pItem],ecx

originalcode11:
//cmovae ecx,edi
cmp [ecx],ebx

exit11:
jmp returnhere11

///

itemReadOutsideMenuAOB: //"bhd.exe"+8B865:
jmp newmem11
returnhere11:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
itemReadOutsideMenuAOB: //"bhd.exe"+8B865:
db 0F 43 CF 39 19
//Alt: cmovae ecx,edi
//Alt: cmp [ecx],ebx
unregistersymbol(itemReadOutsideMenuAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"No description"</Description>
          <LastState Value="1065353216" Activated="0" RealAddress="2989492C"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>2989492C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="28959478"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>28959478</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"No description"</Description>
          <LastState Value="0" Activated="0" RealAddress="2895947C"/>
          <Color>80000008</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>2895947c</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(defensiveItemReadOnEquipSelectAOB,8B 84 88 88 50 00 00 C2 04 00)
registersymbol(defensiveItemReadOnEquipSelectAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)
label(defensiveitemchkloop2)
label(defensiveitemchkloopendchk2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push ecx
xor ecx,ecx
defensiveitemchkloop2:
cmp dword ptr [eax+ecx*4+5088],1
jge defensiveitemchkloopendchk2
mov dword ptr [eax+ecx*4+5088],1
defensiveitemchkloopendchk2:
inc ecx
cmp ecx,2
jl defensiveitemchkloop2

originalcode2:
pop ecx
mov eax,[eax+ecx*4+00005088]

exit2:
jmp returnhere2

///

defensiveItemReadOnEquipSelectAOB: //"bhd.exe"+E5B87:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
defensiveItemReadOnEquipSelectAOB: //"bhd.exe"+E5B87:
db 8B 84 88 88 50 00 00
//Alt: mov eax,[eax+ecx*4+00005088]
unregistersymbol(defensiveItemReadOnEquipSelectAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(defensiveItemChkZeroNextAfterEmptyAOB,83 38 00 76 D8 85 C9)
registersymbol(defensiveItemChkZeroNextAfterEmptyAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [eax],1
jge originalcode
mov dword ptr [eax],1

originalcode:
cmp dword ptr [eax],00
jna defensiveItemChkZeroNextAfterEmptyAOB-23 //bhd.exe+24F454

exit:
jmp returnhere

///

defensiveItemChkZeroNextAfterEmptyAOB: //"bhd.exe"+24F477:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
defensiveItemChkZeroNextAfterEmptyAOB: //"bhd.exe"+24F477:
db 83 38 00 76 D8
//Alt: cmp dword ptr [eax],00
//Alt: jna defensiveItemChkZeroNextAfterEmptyAOB-23 //bhd.exe+24F454
unregistersymbol(defensiveItemChkZeroNextAfterEmptyAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(itemSetEmptyAfterUseAOB,8D 3C F7 C7 07 00 00 00 00 C7 47 04 00 00 00 00)
registersymbol(itemSetEmptyAfterUseAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 02 //MRB
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je exit2

originalcode2:
mov [edi],00000000
mov [edi+04],00000000

exit2:
jmp returnhere2

///

itemSetEmptyAfterUseAOB+3: //"bhd.exe"+8CB7C:
jmp newmem2
nop
nop
nop
nop
nop
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
itemSetEmptyAfterUseAOB+3: //"bhd.exe"+8CB7C:
db C7 07 00 00 00 00 C7 47 04 00 00 00 00
//Alt: mov [edi],00000000
//Alt: mov [edi+04],00000000
unregistersymbol(itemSetEmptyAfterUseAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>72</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[ebp+00001000]
cmp eax,ecx
jl originalcode
mov eax,ecx
dec eax
//mov [ebp+ffc],eax

originalcode:
//mov ecx,[ebp+00001000]

exit:
jmp returnhere

///

"bhd.exe"+24F519:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"bhd.exe"+24F519:
db 8B 8D 00 10 00 00
//Alt: mov ecx,[ebp+00001000]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(fullClipChkOnReloadAOB,8B 85 FC 0F 00 00 8B 8D 00 10 00 00 3B C1 7D E0)
registersymbol(fullClipChkOnReloadAOB)

fullClipChkOnReloadAOB+e: //"bhd.exe"+24F521:
db 90 90
//Alt: nop
//Alt: nop


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
fullClipChkOnReloadAOB+e: //"bhd.exe"+24F521:
db 7D E0
//Alt: jnl fullClipChkOnReloadAOB-10 //bhd.exe+24F503
unregistersymbol(fullClipChkOnReloadAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[ebp+1000]
mov [ebp+ffc],eax

originalcode:
//mov eax,[ebp+00000FFC]

exit:
jmp returnhere

///

fullClipChkOnReloadAOB: //"bhd.exe"+24F513:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
fullClipChkOnReloadAOB: //"bhd.exe"+24F513:
db 8B 85 FC 0F 00 00
//Alt: mov eax,[ebp+00000FFC]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Lock at Full Health"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="0" Activated="0" RealAddress="316D00FF"/>
          <Color>80000008</Color>
          <VariableType>Byte</VariableType>
          <Address>bFullHealth</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"Game Time Mod"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(gameTimeWriteAOB,F3 0F 11 81 4C 47 0E 00 72 0A)
registersymbol(gameTimeWriteAOB)

label(pGameStats)
registersymbol(pGameStats)
label(fCustomMaxGameTime)
registersymbol(fCustomMaxGameTime)

alloc(newmem24,2048)
label(returnhere24)
label(originalcode24)
label(exit24)

newmem24: //this is allocated memory, you have read,write,execute access
//place your code here
mov [pGameStats],ecx
pushfd
cmp dword ptr [fCustomMaxGameTime],0
je originalcode24
comiss xmm0,[fCustomMaxGameTime]
jbe originalcode24
movss xmm0,[fCustomMaxGameTime]

originalcode24:
popfd
movss [ecx+000E474C],xmm0

exit24:
jmp returnhere24

///
pGameStats:
dd 0
fCustomMaxGameTime:
dd (float)8280.0 //2h18m
///

gameTimeWriteAOB: //"bhd.exe"+8C40C:
jmp newmem24
nop
nop
nop
returnhere24:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem24)
gameTimeWriteAOB: //"bhd.exe"+8C40C:
db F3 0F 11 81 4C 47 0E 00
//Alt: movss [ecx+000E474C],xmm0
unregistersymbol(gameTimeWriteAOB)

unregistersymbol(pGameStats)
unregistersymbol(fCustomMaxGameTime)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>113</ID>
              <Description>"Custom Max Game Time"</Description>
              <LastState Value="8280" Activated="0" RealAddress="316D0112"/>
              <Color>80000008</Color>
              <VariableType>Float</VariableType>
              <Address>fCustomMaxGameTime</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState Activated="0"/>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscan(itemChkZeroOnUseAOB,83 78 04 00 74 DD)
registersymbol(itemChkZeroOnUseAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
cmp dword ptr [eax+4],2
jge originalcode6
mov dword ptr [eax+4],2

originalcode6:
cmp dword ptr [eax+04],00
je itemChkZeroOnUseAOB-1d //bhd.exe+E60BC

exit6:
jmp returnhere6

///

itemChkZeroOnUseAOB: //"bhd.exe"+E60D9:
jmp newmem6
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
itemChkZeroOnUseAOB: //"bhd.exe"+E60D9:
db 83 78 04 00 74 DD
//Alt: cmp dword ptr [eax+04],00
//Alt: je itemChkZeroOnUseAOB-1d //bhd.exe+E60BC
unregistersymbol(itemChkZeroOnUseAOB)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>is ammo clip chk Code :test byte ptr [eax+50],04</Description>
      <Address>0064F619</Address>
      <ModuleName>bhd.exe</ModuleName>
      <ModuleNameOffset>24F619</ModuleNameOffset>
      <Before>
        <Byte>FF</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>6D</Byte>
      </Before>
      <Actual>
        <Byte>F6</Byte>
        <Byte>40</Byte>
        <Byte>50</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>74</Byte>
        <Byte>67</Byte>
        <Byte>8B</Byte>
        <Byte>68</Byte>
        <Byte>58</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>healthChkDamgeWouldKillAOB</Name>
      <Address>00414506</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFreeSave</Name>
      <Address>025800C3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthReadAOB</Name>
      <Address> 0041FAFC</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>currentAmmoReadAOB</Name>
      <Address> 0065CFDE</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemReadInMenuAOB</Name>
      <Address> 0048C8F6</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemReadOutsideMenuAOB</Name>
      <Address> 0048B865</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>currentAmmoReadOnExitMenuAOB</Name>
      <Address> 0065C4DA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>gameTimeWriteAOB</Name>
      <Address> 0048C40C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFullHealth</Name>
      <Address>316D00FF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFullAmmo</Name>
      <Address>316D0100</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeInkRibbon</Name>
      <Address>316D0101</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pHealth</Name>
      <Address>316D0102</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pCurAmmo</Name>
      <Address>316D0106</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pItem</Name>
      <Address>316D010A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pGameStats</Name>
      <Address>316D010E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fCustomMaxGameTime</Name>
      <Address>316D0112</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>healthWriteAOB</Name>
      <Address> 0050C2A2</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>deadFlag1SetAOB</Name>
      <Address> 00414549</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoChkZeroOnFireAOB</Name>
      <Address> 0065C191</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammoItemReadOnFastReloadAOB</Name>
      <Address> 0064F64F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fullClipChkOnReloadAOB</Name>
      <Address> 0064F513</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>defensiveItemChkZeroNextAfterEmptyAOB</Name>
      <Address> 0064F477</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>defensiveItemReadOnEquipSelectAOB</Name>
      <Address> 004E5B87</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemIDQuantityWriteAfterUseAOB</Name>
      <Address> 0048C724</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemSetEmptyAfterUseAOB</Name>
      <Address> 0048CB79</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>itemChkZeroOnUseAOB</Name>
      <Address> 004E60D9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>keyChkOnDoorAccessAOB</Name>
      <Address> 00489EA5</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeItems</Name>
      <Address>31AF001E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeLockPick</Name>
      <Address>31AF001F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeOldKey</Name>
      <Address>31AF0020</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeSwordKey</Name>
      <Address>31AF0021</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeArmorKey</Name>
      <Address>31AF0022</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeShieldKey</Name>
      <Address>31AF0023</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeHelmetKey</Name>
      <Address>31AF0024</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeResidence001Key</Name>
      <Address>31AF0025</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeResidence003Key</Name>
      <Address>31AF0026</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeLabPowerAreaKey</Name>
      <Address>31AF0027</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeLabMasterKey</Name>
      <Address>31AF0028</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeClosetKey</Name>
      <Address>31AF0029</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeEmblemKey</Name>
      <Address>31AF002A</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>bFakeControlRoomKey</Name>
      <Address>31AF002B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>correctAmmoChkAOB</Name>
      <Address> 0064F640</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>isAmmoChkAOB</Name>
      <Address> 0064F619</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://forum.cheatengine.org/viewtopic.php?p=5574275#5574275
</Comments>
</CheatTable>
