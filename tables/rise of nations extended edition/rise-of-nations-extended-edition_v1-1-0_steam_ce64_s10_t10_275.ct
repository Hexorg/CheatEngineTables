<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="18">
  <CheatEntries>
    <CheatEntry>
      <ID>68</ID>
      <Description>"[X] &lt;== Rise of Nations Extended Edition v1.1.0 Steam Script 1.0"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="0"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
===========================================
 Game Title    : Rise of Nations Extended Edition
 Game Version  : 1.1.0
 Game Sponsor  : Myself
 Process Name  : rise.exe
 Script Version: 1.0
 CE Version    : 6.4
 Release date  :23-Nov-2014
 Author        : Recifense
 History:
 23-Nov-14: First Release (Steam)
 Features:
 - Minimum Resources
 - God Mode
 - Minimum Tribute
 - Some Pointers
===========================================
}

//=========================================
// Definitions
define(LUDO,"rise.exe")
define(MHPR,rise.exe+003ea187)
define(MOSU,rise.exe+001c26ec)
define(MOSB,rise.exe+003ce476)
define(MOPI,rise.exe+003ea158)
define(GDMD,rise.exe+001ff78e)
define(MOPT,rise.exe+003654f0)

define(POPT,rise.exe+009fec1c)

//=========================================
// Constants used in the script (that can be changed)
define(ctCE64,(float)6.4)
define(ctMMON,#6400)   // Minimum Money
define(ctMTRB,#90)     // Minimum Attributes

//=========================================
[ENABLE]
//=========================================
//LuaCall(CheckVersion())
//=========================================
// Check if script is compatible to this game version
// If false the script will not be loaded

assert(MHPR,8b 44 24 10 8b 34 99 66 8b 0d ?? ?? ?? ?? 66 2b 0d ?? ?? ?? ?? 81)
assert(MOSU,8b 53 18 f3 0f 7e 00 83 ba 18 02 00 00 02 8b 78 08 66 0f d6 44 24)
assert(MOSB,8b d0 2b 51 24 8b 84 24 98 00 00 00 ?? ?? 85 c0 ?? ?? 3b d0 0f 4f)
assert(MOPI,69 f6 ec 6e 00 00 6a 01 53 8d 8e ?? ?? ?? ?? 89 74 24 28 e8 ?? ??)
assert(GDMD,01 73 24 8b cb ff 50 1c 8b 75 18 85 c0 0f 84 ?? ?? ?? ?? 85 f6 0f)
assert(MOPT,8b 51 34 0f af 15 ?? ?? ?? ?? 03 15 ?? ?? ?? ?? 3b 15 ?? ?? ?? ??)

//=========================================
alloc(MyCode,4096,LUDO)
//=========================================
// Declaration section
label(_MonHumanPlayer)
label(_BackMHP)
label(_ExitMHP)
label(_MonSelUnit)
label(_BackMSU)
label(_ExitMSU)
label(_MonSelBuilding)
label(_BackMSB)
label(_ExitMSB)
label(_MonPlayerID)
label(_BackMPI)
label(_ExitMPI)
label(_GodMode)
label(_BackGMD)
label(_ExitGMD)
label(_MonPlayerTribute)
label(_BackMPT)
label(_ExitMPT)

label(iEnableMPR)
label(iEnableGMD)
label(iEnableMPT)
label(iID)

label(pRes)
label(pUnit)
label(pTrib)

//=========================================
// Registering Symbols
registersymbol(MyCode)
registersymbol(iEnableMPR)
registersymbol(iEnableGMD)
registersymbol(iEnableMPT)
registersymbol(iID)

registersymbol(pRes)
registersymbol(pUnit)
registersymbol(pTrib)

//=========================================
MyCode:
//=========================================
// Main game screen
_MonHumanPlayer:
 push edx

 mov [pRes],ecx

 cmp dword ptr [iEnableMPR],0
 je _ExitMHP                       // Jump if feature is disabled

 mov esi,00008221
 mov edx,ctMMON

 mov eax,[ecx+ebx*4]
 xor eax,esi
 cmp eax,edx
 cmovs eax,edx
 xor eax,esi
 mov [ecx+ebx*4],eax

_ExitMHP:
 pop edx

 mov eax,[esp+10]                  // Original code
 mov esi,[ecx+ebx*4]               // Original code (rd res)
 jmp _BackMHP                      // Back to main code

//=========================================
// When a unit (soldier/tank/civilian/etc) is selected
_MonSelUnit:
 mov [pUnit],ebx

_ExitMSU:
 mov edx,[ebx+18]                  // Original code (get pType)
 movq xmm0,[eax]                   // Original code
 jmp _BackMSU                      // Back to main code

//=========================================
// When a building is selected
_MonSelBuilding:
 mov [pUnit],ecx

_ExitMSB:
 mov edx,eax                       // Original code
 sub edx,[ecx+24]                  // Original code (get damage)
 jmp _BackMSB                      // Back to main code

//=========================================
// Main game screen
_MonPlayerID:
 mov [iID],esi

_ExitMPI:
 imul esi,esi,00006EEC             // Original code (get Player Str)
 jmp _BackMPI                      // Back to main code

//=========================================
// During Combat
_GodMode:
 cmp dword ptr [iEnableGMD],0
 je _ExitGMD                       // Jump if feature is disabled

 cmp byte ptr [ebx+3e],00
 jne _ExitGMD

 xor esi,esi
 mov [ebx+24],esi

_ExitGMD:
 add [ebx+24],esi                  // Original code (upd damage)
 mov ecx,ebx                       // Original code
 jmp _BackGMD                      // Back to main code

//=========================================
// Strategic Map on Campaign
_MonPlayerTribute:
 mov [pTrib],ecx

 cmp dword ptr [iEnableMPT],0
 je _ExitMPT                       // Jump if feature is disabled

 mov edx,ctMTRB
 cmp edx,[ecx+20]
 js _ExitMPT

 mov [ecx+20],edx

_ExitMPT:
 mov edx,[ecx+34]                  // Original code (get Player Level)
 imul edx,[POPT]                   // Original code
 jmp _BackMPT                      // Back to main code

//=========================================
 db '=========================================&gt;'
 db 'CE6.4 Script by Recifense 112314'
//=========================================
// Variables
iEnableMPR:
 dd 0
iEnableGMD:
 dd 0
iEnableMPT:
 dd 0
iID:
 dd #99
pRes:
 dd 0
pUnit:
 dd 0
pTrib:
 dd 0

//=========================================
// Hacking Points
MHPR:
 jmp _MonHumanPlayer
 nop
 nop
_BackMHP:

MOSU:
 jmp _MonSelUnit
 nop
 nop
_BackMSU:

MOSB:
 jmp _MonSelBuilding
_BackMSB:

MOPI:
 jmp _MonPlayerID
 nop
_BackMPI:

GDMD:
 jmp _GodMode
_BackGMD:

MOPT:
 jmp _MonPlayerTribute
 db 90 90 90 90 90
_BackMPT:

//=========================================
// Script for Restoring Original Codes
[DISABLE]
MHPR:
// mov eax,[esp+10]
// mov esi,[ecx+ebx*4]
 db 8b 44 24 10 8b 34 99

MOSU:
// mov edx,[ebx+18]
// movq xmm0,[eax]
 db 8b 53 18 f3 0f 7e 00

MOSB:
// mov edx,eax
// sub edx,[ecx+24]
 db 8b d0 2b 51 24

MOPI:
// imul esi,esi,00006EEC
 db 69 f6 ec 6e 00 00

GDMD:
// add [ebx+24],esi
// mov ecx,ebx
 db 01 73 24 8b cb

MOPT:
// mov edx,[ecx+34]
// imul edx,[rise.exe+9FEC1C]
 db 8b 51 34
 imul edx,[POPT]

//=========================================
// Unregistering Symbols
unregistersymbol(MyCode)
unregistersymbol(iEnableMPR)
unregistersymbol(iEnableGMD)
unregistersymbol(iEnableMPT)
unregistersymbol(iID)
unregistersymbol(pRes)
unregistersymbol(pUnit)
unregistersymbol(pTrib)

//=========================================
dealloc(MyCode)
//============= Scripts End ===============

// ****************************************
// NOTES
// ****************************************
{
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Enable/Disable Minimum Resources ==============&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="07AB0110"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMPR</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>36</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>35</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"Enable/Disable God Mode  =====================&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="07AB0114"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableGMD</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>33</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>34</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"Enable/Disable Minimum Tribute =================&gt;"</Description>
          <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disabled
1:Enabled
</DropDownList>
          <LastState Value="??" Activated="0" RealAddress="07AB0118"/>
          <Color>008000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>iEnableMPT</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>45</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>46</Key>
              </Keys>
              <Value>0</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>===========================================
 Game Title    : Rise of Nations Extended Edition
 Game Version  : 1.1.0
 Game Sponsor  : Myself
 Process Name  : rise.exe
 Script Version: 1.0
 CE Version    : 6.4
 Release date  :23-Nov-2014
 Author        : Recifense
 History:
 23-Nov-14: First Release (Steam)
 Features:
 - Minimum Resources [1]
 - God Mode          [2]
 - Minimum Tribute   [3]
 - Some Pointers
===========================================
[1] For human player only; (6400)
[2] For player's units and buildings;
[3] That's it; (90)
===========================================
[USAGE]
1) Run CE64;
2) Run Game;
3) Load the game process "rise.exe" in CE;
4) Load this table and activate it;
5) Change the value to "Enabled" of each cheat you want to use;
6) Game On;
-------------------------------------------
[HEROES INFO]
- You can change those values (with care). The displayed value may not change immediately.
-------------------------------------------
[INVENTORY ITEM]
- Just click on the item and move it a bit then release it back. Now you can change its ammount (be prudent)
===========================================
[HOTKEYS]
CTRL+Home      = Enable  MR cheat;
CTRL+End       = Disable MR cheat;
-----------
CTRL+PageUp    = Enable  GM cheat;
CTRL+PageDown  = Disable GM cheat;
-----------
CTRL+Insert    = Enable  MT cheat;
CTRL+Delete    = Disable MT cheat;
===========================================
[ADVICE]
When you can,save the game before starting using table/cheat. So you can always come back in case you don't like the result.
===========================================
[INFO]
Tested on Win 7 64bits
===========================================
Cheers!
</Comments>
</CheatTable>
