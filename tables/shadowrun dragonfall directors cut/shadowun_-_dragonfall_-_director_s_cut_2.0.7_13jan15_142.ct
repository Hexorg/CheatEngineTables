<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="14">
  <CheatEntries>
    <CheatEntry>
      <ID>33</ID>
      <Description>"No Essence or Magic Cost for Cyberware (Keep activated)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(essence_saved)
registersymbol(essence_saved)
aobscan(searchedAOB,7A 06 0F 84 48 00 00 00 8B 87 8C 00 00 00 89 45 E0 D9)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode: //ident: Bypassing all original jump code
//db 7A 06 //jp 1D3CB42B
//db e9 48 00 00 00  //je 1D3CB473


exit:
jmp searchedAOB+50 //manually jumping past all the evil code that robs us of our essence. Basically doing what the 'je' jump did.

searchedAOB:
essence_saved:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
essence_saved:
db 7A 06 0F 84 48 00 00 00
//Alt: db 7A 06 0F 84 48 00 00 00
unregistersymbol(essence_saved)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Unlimited Cyberware at Doctor"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(cyber_saved)
registersymbol(cyber_saved)
aobscan(searchedAOB,D9 86 78 01 00 00 D9 45 F4 DE C1 D9 9E 78 01 00)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [ebp-0c],(float)0

originalcode:
fld dword ptr [esi+00000178]

exit:
jmp returnhere

searchedAOB:
cyber_saved:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
cyber_saved:
fld dword ptr [esi+00000178]
//Alt: db D9 86 78 01 00 00
unregistersymbol(cyber_saved)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"Inf. Money (Open Menu to Activate)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(money_saved)
registersymbol(money_saved)
aobscan(searchedAOB,8b 47 18 8B C8 39 09 8B 40 4C EB 17 83 EC 08)


newmem: //this is allocated memory, you have read,write,execute access


originalcode:
mov ecx,eax
cmp [ecx],ecx
mov [eax+4C],#999999 //new code
mov eax,[eax+4C]

exit:
jmp returnhere

searchedAOB+3:
money_saved:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
money_saved:
mov ecx,eax
cmp [ecx],ecx
mov eax,[eax+4C]
//Alt: db 8B C8 39 09 8B 40 4C

unregistersymbol(money_saved)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Inf. Karma (Open Menu to Activate)"</Description>
      <Color>80000008</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(karma_saved)
registersymbol(karma_saved)
aobscan(searchedAOB,39 09 8b 40 2c 8b 80 1c 01 00 00 8b c8 39 09 8B 80 0C 01 00 00 85 C0)


newmem:
originalcode:
cmp [ecx],ecx
mov [eax+0000010C],#99
mov eax,[eax+0000010C]

exit:
jmp returnhere

searchedAOB+D:
karma_saved:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
karma_saved:
cmp [ecx],ecx
mov eax,[eax+0000010C]
//Alt: db 39 09 8B 80 0C 01 00 00

unregistersymbol(karma_saved)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>42</ID>
      <Description>"Combat Options (Activate in Combat)"</Description>
      <Color>80000008</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Team Infinite Health &amp; AP"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)
label(team_saved)
registersymbol(team_saved)
aobscan(searchedAOB,8B 80 BC 00 00 00 50 DB 04 24 D9 1C 24 D9 04 24 83 C4 04 DD 9D B8)

newmem: //this is allocated memory, you have read,write,execute access
mov [eax+000000BC],#999 //Health
mov [eax+000000B8],#10 //AP

originalcode:
mov eax,[eax+000000BC]

exit:
jmp returnhere

searchedAOB:
team_saved:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
team_saved:
mov eax,[eax+000000BC]
//Alt: db 8B 80 BC 00 00 00
unregistersymbol(team_saved)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"No CD"</Description>
          <Color>80000008</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

label(essence_saved)
registersymbol(essence_saved)
aobscan(searchedAOB,8B 40 14 3B 45 F0 7E 22 39 1B 8B 83 58 01 00 00)

newmem: //this is allocated memory, you have read,write,execute access
mov [eax+14],#0

originalcode:
mov eax,[eax+14]
cmp eax,[ebp-10]

exit:
jmp returnhere

searchedAOB:
essence_saved:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
essence_saved:
mov eax,[eax+14]
cmp eax,[ebp-10]
//Alt: db 8B 40 14 3B 45 F0
unregistersymbol(essence_saved)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>saved</Name>
      <Address>2F0A588B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>money_saved</Name>
      <Address>3343BD80</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>karma_saved</Name>
      <Address>3343BBFB</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cyber_saved</Name>
      <Address>3348D464</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>team_saved</Name>
      <Address>10C3AE43</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>essence_saved</Name>
      <Address>3344389C</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>So one of the 01s I turned into a 00 seemed to indicate whether the character kneels on death or dies and the only ones i can imagine kneeling would be my team mates. Hopefully me too, will have to check, But there's the friend foe.
</Comments>
</CheatTable>
